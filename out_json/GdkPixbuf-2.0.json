{
    "repository": {
        "@version": "1.2",
        "@xmlns": "http://www.gtk.org/introspection/core/1.0",
        "@xmlns:c": "http://www.gtk.org/introspection/c/1.0",
        "@xmlns:glib": "http://www.gtk.org/introspection/glib/1.0",
        "include": [
            {
                "@name": "GModule",
                "@version": "2.0"
            },
            {
                "@name": "Gio",
                "@version": "2.0"
            }
        ],
        "package": {
            "@name": "gdk-pixbuf-2.0"
        },
        "c:include": {
            "@name": "gdk-pixbuf/gdk-pixbuf.h"
        },
        "namespace": {
            "@name": "GdkPixbuf",
            "@version": "2.0",
            "@shared-library": "libgdk_pixbuf-2.0.so.0",
            "@c:identifier-prefixes": "Gdk",
            "@c:symbol-prefixes": "gdk",
            "enumeration": [
                {
                    "@name": "Colorspace",
                    "@glib:type-name": "GdkColorspace",
                    "@glib:get-type": "gdk_colorspace_get_type",
                    "@c:type": "GdkColorspace",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "../gdk-pixbuf/gdk-pixbuf-core.h",
                        "@line": "71",
                        "#text": "This enumeration defines the color spaces that are supported by\nthe gdk-pixbuf library.\n\nCurrently only RGB is supported."
                    },
                    "member": {
                        "@name": "rgb",
                        "@value": "0",
                        "@c:identifier": "GDK_COLORSPACE_RGB",
                        "@glib:nick": "rgb",
                        "@glib:name": "GDK_COLORSPACE_RGB",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "../gdk-pixbuf/gdk-pixbuf-core.h",
                            "@line": "73",
                            "#text": "Indicates a red/green/blue additive color space."
                        }
                    }
                },
                {
                    "@name": "InterpType",
                    "@glib:type-name": "GdkInterpType",
                    "@glib:get-type": "gdk_interp_type_get_type",
                    "@c:type": "GdkInterpType",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "../gdk-pixbuf/gdk-pixbuf-transform.h",
                        "@line": "39",
                        "#text": "Interpolation modes for scaling functions.\n\nThe `GDK_INTERP_NEAREST` mode is the fastest scaling method, but has\nhorrible quality when scaling down; `GDK_INTERP_BILINEAR` is the best\nchoice if you aren't sure what to choose, it has a good speed/quality\nbalance.\n\n**Note**: Cubic filtering is missing from the list; hyperbolic\ninterpolation is just as fast and results in higher quality."
                    },
                    "member": [
                        {
                            "@name": "nearest",
                            "@value": "0",
                            "@c:identifier": "GDK_INTERP_NEAREST",
                            "@glib:nick": "nearest",
                            "@glib:name": "GDK_INTERP_NEAREST",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../gdk-pixbuf/gdk-pixbuf-transform.h",
                                "@line": "41",
                                "#text": "Nearest neighbor sampling; this is the fastest\n and lowest quality mode. Quality is normally unacceptable when scaling\n down, but may be OK when scaling up."
                            }
                        },
                        {
                            "@name": "tiles",
                            "@value": "1",
                            "@c:identifier": "GDK_INTERP_TILES",
                            "@glib:nick": "tiles",
                            "@glib:name": "GDK_INTERP_TILES",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../gdk-pixbuf/gdk-pixbuf-transform.h",
                                "@line": "44",
                                "#text": "This is an accurate simulation of the PostScript\n image operator without any interpolation enabled.  Each pixel is\n rendered as a tiny parallelogram of solid color, the edges of which\n are implemented with antialiasing.  It resembles nearest neighbor for\n enlargement, and bilinear for reduction."
                            }
                        },
                        {
                            "@name": "bilinear",
                            "@value": "2",
                            "@c:identifier": "GDK_INTERP_BILINEAR",
                            "@glib:nick": "bilinear",
                            "@glib:name": "GDK_INTERP_BILINEAR",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../gdk-pixbuf/gdk-pixbuf-transform.h",
                                "@line": "49",
                                "#text": "Best quality/speed balance; use this mode by\n default. Bilinear interpolation.  For enlargement, it is\n equivalent to point-sampling the ideal bilinear-interpolated image.\n For reduction, it is equivalent to laying down small tiles and\n integrating over the coverage area."
                            }
                        },
                        {
                            "@name": "hyper",
                            "@value": "3",
                            "@c:identifier": "GDK_INTERP_HYPER",
                            "@glib:nick": "hyper",
                            "@glib:name": "GDK_INTERP_HYPER",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../gdk-pixbuf/gdk-pixbuf-transform.h",
                                "@line": "54",
                                "#text": "This is the slowest and highest quality\n reconstruction function. It is derived from the hyperbolic filters in\n Wolberg's \"Digital Image Warping\", and is formally defined as the\n hyperbolic-filter sampling the ideal hyperbolic-filter interpolated\n image (the filter is designed to be idempotent for 1:1 pixel mapping).\n **Deprecated**: this interpolation filter is deprecated, as in reality\n it has a lower quality than the @GDK_INTERP_BILINEAR filter\n (Since: 2.38)"
                            }
                        }
                    ]
                },
                {
                    "@name": "PixbufAlphaMode",
                    "@deprecated": "1",
                    "@deprecated-version": "2.42",
                    "@glib:type-name": "GdkPixbufAlphaMode",
                    "@glib:get-type": "gdk_pixbuf_alpha_mode_get_type",
                    "@c:type": "GdkPixbufAlphaMode",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "../gdk-pixbuf/gdk-pixbuf-core.h",
                        "@line": "39",
                        "#text": "Control the alpha channel for drawables.\n\nThese values can be passed to gdk_pixbuf_xlib_render_to_drawable_alpha()\nin gdk-pixbuf-xlib to control how the alpha channel of an image should\nbe handled.\n\nThis function can create a bilevel clipping mask (black and white) and use\nit while painting the image.\n\nIn the future, when the X Window System gets an alpha channel extension,\nit will be possible to do full alpha compositing onto arbitrary drawables.\nFor now both cases fall back to a bilevel clipping mask."
                    },
                    "doc-deprecated": {
                        "@xml:space": "preserve",
                        "#text": "There is no user of GdkPixbufAlphaMode in GdkPixbuf,\n  and the Xlib utility functions have been split out to their own\n  library, gdk-pixbuf-xlib"
                    },
                    "member": [
                        {
                            "@name": "bilevel",
                            "@value": "0",
                            "@c:identifier": "GDK_PIXBUF_ALPHA_BILEVEL",
                            "@glib:nick": "bilevel",
                            "@glib:name": "GDK_PIXBUF_ALPHA_BILEVEL",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../gdk-pixbuf/gdk-pixbuf-core.h",
                                "@line": "41",
                                "#text": "A bilevel clipping mask (black and white)\n will be created and used to draw the image.  Pixels below 0.5 opacity\n will be considered fully transparent, and all others will be\n considered fully opaque."
                            }
                        },
                        {
                            "@name": "full",
                            "@value": "1",
                            "@c:identifier": "GDK_PIXBUF_ALPHA_FULL",
                            "@glib:nick": "full",
                            "@glib:name": "GDK_PIXBUF_ALPHA_FULL",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../gdk-pixbuf/gdk-pixbuf-core.h",
                                "@line": "45",
                                "#text": "For now falls back to #GDK_PIXBUF_ALPHA_BILEVEL.\n In the future it will do full alpha compositing."
                            }
                        }
                    ]
                },
                {
                    "@name": "PixbufError",
                    "@glib:type-name": "GdkPixbufError",
                    "@glib:get-type": "gdk_pixbuf_error_get_type",
                    "@c:type": "GdkPixbufError",
                    "@glib:error-domain": "gdk-pixbuf-error-quark",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "../gdk-pixbuf/gdk-pixbuf-core.h",
                        "@line": "123",
                        "#text": "An error code in the `GDK_PIXBUF_ERROR` domain.\n\nMany gdk-pixbuf operations can cause errors in this domain, or in\nthe `G_FILE_ERROR` domain."
                    },
                    "member": [
                        {
                            "@name": "corrupt_image",
                            "@value": "0",
                            "@c:identifier": "GDK_PIXBUF_ERROR_CORRUPT_IMAGE",
                            "@glib:nick": "corrupt-image",
                            "@glib:name": "GDK_PIXBUF_ERROR_CORRUPT_IMAGE",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../gdk-pixbuf/gdk-pixbuf-core.h",
                                "@line": "125",
                                "#text": "An image file was broken somehow."
                            }
                        },
                        {
                            "@name": "insufficient_memory",
                            "@value": "1",
                            "@c:identifier": "GDK_PIXBUF_ERROR_INSUFFICIENT_MEMORY",
                            "@glib:nick": "insufficient-memory",
                            "@glib:name": "GDK_PIXBUF_ERROR_INSUFFICIENT_MEMORY",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../gdk-pixbuf/gdk-pixbuf-core.h",
                                "@line": "126",
                                "#text": "Not enough memory."
                            }
                        },
                        {
                            "@name": "bad_option",
                            "@value": "2",
                            "@c:identifier": "GDK_PIXBUF_ERROR_BAD_OPTION",
                            "@glib:nick": "bad-option",
                            "@glib:name": "GDK_PIXBUF_ERROR_BAD_OPTION",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../gdk-pixbuf/gdk-pixbuf-core.h",
                                "@line": "127",
                                "#text": "A bad option was passed to a pixbuf save module."
                            }
                        },
                        {
                            "@name": "unknown_type",
                            "@value": "3",
                            "@c:identifier": "GDK_PIXBUF_ERROR_UNKNOWN_TYPE",
                            "@glib:nick": "unknown-type",
                            "@glib:name": "GDK_PIXBUF_ERROR_UNKNOWN_TYPE",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../gdk-pixbuf/gdk-pixbuf-core.h",
                                "@line": "128",
                                "#text": "Unknown image type."
                            }
                        },
                        {
                            "@name": "unsupported_operation",
                            "@value": "4",
                            "@c:identifier": "GDK_PIXBUF_ERROR_UNSUPPORTED_OPERATION",
                            "@glib:nick": "unsupported-operation",
                            "@glib:name": "GDK_PIXBUF_ERROR_UNSUPPORTED_OPERATION",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../gdk-pixbuf/gdk-pixbuf-core.h",
                                "@line": "129",
                                "#text": "Don't know how to perform the\n given operation on the type of image at hand."
                            }
                        },
                        {
                            "@name": "failed",
                            "@value": "5",
                            "@c:identifier": "GDK_PIXBUF_ERROR_FAILED",
                            "@glib:nick": "failed",
                            "@glib:name": "GDK_PIXBUF_ERROR_FAILED",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../gdk-pixbuf/gdk-pixbuf-core.h",
                                "@line": "131",
                                "#text": "Generic failure code, something went wrong."
                            }
                        },
                        {
                            "@name": "incomplete_animation",
                            "@value": "6",
                            "@c:identifier": "GDK_PIXBUF_ERROR_INCOMPLETE_ANIMATION",
                            "@glib:nick": "incomplete-animation",
                            "@glib:name": "GDK_PIXBUF_ERROR_INCOMPLETE_ANIMATION",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../gdk-pixbuf/gdk-pixbuf-core.h",
                                "@line": "132",
                                "#text": "Only part of the animation was loaded."
                            }
                        }
                    ],
                    "function": {
                        "@name": "quark",
                        "@c:identifier": "gdk_pixbuf_error_quark",
                        "return-value": {
                            "@transfer-ownership": "none",
                            "type": {
                                "@name": "GLib.Quark",
                                "@c:type": "GQuark"
                            }
                        }
                    }
                },
                {
                    "@name": "PixbufRotation",
                    "@glib:type-name": "GdkPixbufRotation",
                    "@glib:get-type": "gdk_pixbuf_rotation_get_type",
                    "@c:type": "GdkPixbufRotation",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "../gdk-pixbuf/gdk-pixbuf-transform.h",
                        "@line": "80",
                        "#text": "The possible rotations which can be passed to gdk_pixbuf_rotate_simple().\n\nTo make them easier to use, their numerical values are the actual degrees."
                    },
                    "member": [
                        {
                            "@name": "none",
                            "@value": "0",
                            "@c:identifier": "GDK_PIXBUF_ROTATE_NONE",
                            "@glib:nick": "none",
                            "@glib:name": "GDK_PIXBUF_ROTATE_NONE",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../gdk-pixbuf/gdk-pixbuf-transform.h",
                                "@line": "82",
                                "#text": "No rotation."
                            }
                        },
                        {
                            "@name": "counterclockwise",
                            "@value": "90",
                            "@c:identifier": "GDK_PIXBUF_ROTATE_COUNTERCLOCKWISE",
                            "@glib:nick": "counterclockwise",
                            "@glib:name": "GDK_PIXBUF_ROTATE_COUNTERCLOCKWISE",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../gdk-pixbuf/gdk-pixbuf-transform.h",
                                "@line": "83",
                                "#text": "Rotate by 90 degrees."
                            }
                        },
                        {
                            "@name": "upsidedown",
                            "@value": "180",
                            "@c:identifier": "GDK_PIXBUF_ROTATE_UPSIDEDOWN",
                            "@glib:nick": "upsidedown",
                            "@glib:name": "GDK_PIXBUF_ROTATE_UPSIDEDOWN",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../gdk-pixbuf/gdk-pixbuf-transform.h",
                                "@line": "84",
                                "#text": "Rotate by 180 degrees."
                            }
                        },
                        {
                            "@name": "clockwise",
                            "@value": "270",
                            "@c:identifier": "GDK_PIXBUF_ROTATE_CLOCKWISE",
                            "@glib:nick": "clockwise",
                            "@glib:name": "GDK_PIXBUF_ROTATE_CLOCKWISE",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../gdk-pixbuf/gdk-pixbuf-transform.h",
                                "@line": "85",
                                "#text": "Rotate by 270 degrees."
                            }
                        }
                    ]
                }
            ],
            "function-macro": [
                {
                    "@name": "IS_PIXBUF",
                    "@c:identifier": "GDK_IS_PIXBUF",
                    "@introspectable": "0",
                    "source-position": {
                        "@filename": "../gdk-pixbuf/gdk-pixbuf-core.h",
                        "@line": "93"
                    },
                    "parameters": {
                        "parameter": {
                            "@name": "object"
                        }
                    }
                },
                {
                    "@name": "IS_PIXBUF_ANIMATION",
                    "@c:identifier": "GDK_IS_PIXBUF_ANIMATION",
                    "@introspectable": "0",
                    "source-position": {
                        "@filename": "../gdk-pixbuf/gdk-pixbuf-animation.h",
                        "@line": "46"
                    },
                    "parameters": {
                        "parameter": {
                            "@name": "object"
                        }
                    }
                },
                {
                    "@name": "IS_PIXBUF_ANIMATION_CLASS",
                    "@c:identifier": "GDK_IS_PIXBUF_ANIMATION_CLASS",
                    "@introspectable": "0",
                    "source-position": {
                        "@filename": "../gdk-pixbuf/gdk-pixbuf-animation.h",
                        "@line": "138"
                    },
                    "parameters": {
                        "parameter": {
                            "@name": "klass"
                        }
                    }
                },
                {
                    "@name": "IS_PIXBUF_ANIMATION_ITER",
                    "@c:identifier": "GDK_IS_PIXBUF_ANIMATION_ITER",
                    "@introspectable": "0",
                    "source-position": {
                        "@filename": "../gdk-pixbuf/gdk-pixbuf-animation.h",
                        "@line": "50"
                    },
                    "parameters": {
                        "parameter": {
                            "@name": "object"
                        }
                    }
                },
                {
                    "@name": "IS_PIXBUF_ANIMATION_ITER_CLASS",
                    "@c:identifier": "GDK_IS_PIXBUF_ANIMATION_ITER_CLASS",
                    "@introspectable": "0",
                    "source-position": {
                        "@filename": "../gdk-pixbuf/gdk-pixbuf-animation.h",
                        "@line": "186"
                    },
                    "parameters": {
                        "parameter": {
                            "@name": "klass"
                        }
                    }
                },
                {
                    "@name": "IS_PIXBUF_LOADER",
                    "@c:identifier": "GDK_IS_PIXBUF_LOADER",
                    "@introspectable": "0",
                    "source-position": {
                        "@filename": "../gdk-pixbuf/gdk-pixbuf-loader.h",
                        "@line": "42"
                    },
                    "parameters": {
                        "parameter": {
                            "@name": "obj"
                        }
                    }
                },
                {
                    "@name": "IS_PIXBUF_LOADER_CLASS",
                    "@c:identifier": "GDK_IS_PIXBUF_LOADER_CLASS",
                    "@introspectable": "0",
                    "source-position": {
                        "@filename": "../gdk-pixbuf/gdk-pixbuf-loader.h",
                        "@line": "43"
                    },
                    "parameters": {
                        "parameter": {
                            "@name": "klass"
                        }
                    }
                },
                {
                    "@name": "IS_PIXBUF_SIMPLE_ANIM",
                    "@c:identifier": "GDK_IS_PIXBUF_SIMPLE_ANIM",
                    "@introspectable": "0",
                    "source-position": {
                        "@filename": "../gdk-pixbuf/gdk-pixbuf-simple-anim.h",
                        "@line": "43"
                    },
                    "parameters": {
                        "parameter": {
                            "@name": "object"
                        }
                    }
                },
                {
                    "@name": "IS_PIXBUF_SIMPLE_ANIM_CLASS",
                    "@c:identifier": "GDK_IS_PIXBUF_SIMPLE_ANIM_CLASS",
                    "@introspectable": "0",
                    "source-position": {
                        "@filename": "../gdk-pixbuf/gdk-pixbuf-simple-anim.h",
                        "@line": "46"
                    },
                    "parameters": {
                        "parameter": {
                            "@name": "klass"
                        }
                    }
                },
                {
                    "@name": "PIXBUF",
                    "@c:identifier": "GDK_PIXBUF",
                    "@introspectable": "0",
                    "source-position": {
                        "@filename": "../gdk-pixbuf/gdk-pixbuf-core.h",
                        "@line": "92"
                    },
                    "parameters": {
                        "parameter": {
                            "@name": "object"
                        }
                    }
                },
                {
                    "@name": "PIXBUF_ANIMATION",
                    "@c:identifier": "GDK_PIXBUF_ANIMATION",
                    "@introspectable": "0",
                    "source-position": {
                        "@filename": "../gdk-pixbuf/gdk-pixbuf-animation.h",
                        "@line": "45"
                    },
                    "parameters": {
                        "parameter": {
                            "@name": "object"
                        }
                    }
                },
                {
                    "@name": "PIXBUF_ANIMATION_CLASS",
                    "@c:identifier": "GDK_PIXBUF_ANIMATION_CLASS",
                    "@introspectable": "0",
                    "source-position": {
                        "@filename": "../gdk-pixbuf/gdk-pixbuf-animation.h",
                        "@line": "137"
                    },
                    "parameters": {
                        "parameter": {
                            "@name": "klass"
                        }
                    }
                },
                {
                    "@name": "PIXBUF_ANIMATION_GET_CLASS",
                    "@c:identifier": "GDK_PIXBUF_ANIMATION_GET_CLASS",
                    "@introspectable": "0",
                    "source-position": {
                        "@filename": "../gdk-pixbuf/gdk-pixbuf-animation.h",
                        "@line": "139"
                    },
                    "parameters": {
                        "parameter": {
                            "@name": "obj"
                        }
                    }
                },
                {
                    "@name": "PIXBUF_ANIMATION_ITER",
                    "@c:identifier": "GDK_PIXBUF_ANIMATION_ITER",
                    "@introspectable": "0",
                    "source-position": {
                        "@filename": "../gdk-pixbuf/gdk-pixbuf-animation.h",
                        "@line": "49"
                    },
                    "parameters": {
                        "parameter": {
                            "@name": "object"
                        }
                    }
                },
                {
                    "@name": "PIXBUF_ANIMATION_ITER_CLASS",
                    "@c:identifier": "GDK_PIXBUF_ANIMATION_ITER_CLASS",
                    "@introspectable": "0",
                    "source-position": {
                        "@filename": "../gdk-pixbuf/gdk-pixbuf-animation.h",
                        "@line": "185"
                    },
                    "parameters": {
                        "parameter": {
                            "@name": "klass"
                        }
                    }
                },
                {
                    "@name": "PIXBUF_ANIMATION_ITER_GET_CLASS",
                    "@c:identifier": "GDK_PIXBUF_ANIMATION_ITER_GET_CLASS",
                    "@introspectable": "0",
                    "source-position": {
                        "@filename": "../gdk-pixbuf/gdk-pixbuf-animation.h",
                        "@line": "187"
                    },
                    "parameters": {
                        "parameter": {
                            "@name": "obj"
                        }
                    }
                },
                {
                    "@name": "PIXBUF_CHECK_VERSION",
                    "@c:identifier": "GDK_PIXBUF_CHECK_VERSION",
                    "@version": "2.36",
                    "@introspectable": "0",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "../gdk-pixbuf/gdk-pixbuf-macros.h",
                        "@line": "32",
                        "#text": "Macro to test the version of GdkPixbuf being compiled against."
                    },
                    "source-position": {
                        "@filename": "../gdk-pixbuf/gdk-pixbuf-macros.h",
                        "@line": "45"
                    },
                    "parameters": {
                        "parameter": [
                            {
                                "@name": "major",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "../gdk-pixbuf/gdk-pixbuf-macros.h",
                                    "@line": "34",
                                    "#text": "major version (e.g. 2 for version 2.34.0)"
                                }
                            },
                            {
                                "@name": "minor",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "../gdk-pixbuf/gdk-pixbuf-macros.h",
                                    "@line": "35",
                                    "#text": "minor version (e.g. 34 for version 2.34.0)"
                                }
                            },
                            {
                                "@name": "micro",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "../gdk-pixbuf/gdk-pixbuf-macros.h",
                                    "@line": "36",
                                    "#text": "micro version (e.g. 0 for version 2.34.0)"
                                }
                            }
                        ]
                    }
                },
                {
                    "@name": "PIXBUF_DEPRECATED_IN_2_0_FOR",
                    "@c:identifier": "GDK_PIXBUF_DEPRECATED_IN_2_0_FOR",
                    "@introspectable": "0",
                    "source-position": {
                        "@filename": "../gdk-pixbuf/gdk-pixbuf-macros.h",
                        "@line": "343"
                    },
                    "parameters": {
                        "parameter": {
                            "@name": "f"
                        }
                    }
                },
                {
                    "@name": "PIXBUF_DEPRECATED_IN_2_10_FOR",
                    "@c:identifier": "GDK_PIXBUF_DEPRECATED_IN_2_10_FOR",
                    "@introspectable": "0",
                    "source-position": {
                        "@filename": "../gdk-pixbuf/gdk-pixbuf-macros.h",
                        "@line": "433"
                    },
                    "parameters": {
                        "parameter": {
                            "@name": "f"
                        }
                    }
                },
                {
                    "@name": "PIXBUF_DEPRECATED_IN_2_12_FOR",
                    "@c:identifier": "GDK_PIXBUF_DEPRECATED_IN_2_12_FOR",
                    "@introspectable": "0",
                    "source-position": {
                        "@filename": "../gdk-pixbuf/gdk-pixbuf-macros.h",
                        "@line": "451"
                    },
                    "parameters": {
                        "parameter": {
                            "@name": "f"
                        }
                    }
                },
                {
                    "@name": "PIXBUF_DEPRECATED_IN_2_14_FOR",
                    "@c:identifier": "GDK_PIXBUF_DEPRECATED_IN_2_14_FOR",
                    "@introspectable": "0",
                    "source-position": {
                        "@filename": "../gdk-pixbuf/gdk-pixbuf-macros.h",
                        "@line": "469"
                    },
                    "parameters": {
                        "parameter": {
                            "@name": "f"
                        }
                    }
                },
                {
                    "@name": "PIXBUF_DEPRECATED_IN_2_16_FOR",
                    "@c:identifier": "GDK_PIXBUF_DEPRECATED_IN_2_16_FOR",
                    "@introspectable": "0",
                    "source-position": {
                        "@filename": "../gdk-pixbuf/gdk-pixbuf-macros.h",
                        "@line": "487"
                    },
                    "parameters": {
                        "parameter": {
                            "@name": "f"
                        }
                    }
                },
                {
                    "@name": "PIXBUF_DEPRECATED_IN_2_18_FOR",
                    "@c:identifier": "GDK_PIXBUF_DEPRECATED_IN_2_18_FOR",
                    "@introspectable": "0",
                    "source-position": {
                        "@filename": "../gdk-pixbuf/gdk-pixbuf-macros.h",
                        "@line": "505"
                    },
                    "parameters": {
                        "parameter": {
                            "@name": "f"
                        }
                    }
                },
                {
                    "@name": "PIXBUF_DEPRECATED_IN_2_20_FOR",
                    "@c:identifier": "GDK_PIXBUF_DEPRECATED_IN_2_20_FOR",
                    "@introspectable": "0",
                    "source-position": {
                        "@filename": "../gdk-pixbuf/gdk-pixbuf-macros.h",
                        "@line": "523"
                    },
                    "parameters": {
                        "parameter": {
                            "@name": "f"
                        }
                    }
                },
                {
                    "@name": "PIXBUF_DEPRECATED_IN_2_22_FOR",
                    "@c:identifier": "GDK_PIXBUF_DEPRECATED_IN_2_22_FOR",
                    "@introspectable": "0",
                    "source-position": {
                        "@filename": "../gdk-pixbuf/gdk-pixbuf-macros.h",
                        "@line": "541"
                    },
                    "parameters": {
                        "parameter": {
                            "@name": "f"
                        }
                    }
                },
                {
                    "@name": "PIXBUF_DEPRECATED_IN_2_24_FOR",
                    "@c:identifier": "GDK_PIXBUF_DEPRECATED_IN_2_24_FOR",
                    "@introspectable": "0",
                    "source-position": {
                        "@filename": "../gdk-pixbuf/gdk-pixbuf-macros.h",
                        "@line": "559"
                    },
                    "parameters": {
                        "parameter": {
                            "@name": "f"
                        }
                    }
                },
                {
                    "@name": "PIXBUF_DEPRECATED_IN_2_26_FOR",
                    "@c:identifier": "GDK_PIXBUF_DEPRECATED_IN_2_26_FOR",
                    "@introspectable": "0",
                    "source-position": {
                        "@filename": "../gdk-pixbuf/gdk-pixbuf-macros.h",
                        "@line": "577"
                    },
                    "parameters": {
                        "parameter": {
                            "@name": "f"
                        }
                    }
                },
                {
                    "@name": "PIXBUF_DEPRECATED_IN_2_28_FOR",
                    "@c:identifier": "GDK_PIXBUF_DEPRECATED_IN_2_28_FOR",
                    "@introspectable": "0",
                    "source-position": {
                        "@filename": "../gdk-pixbuf/gdk-pixbuf-macros.h",
                        "@line": "595"
                    },
                    "parameters": {
                        "parameter": {
                            "@name": "f"
                        }
                    }
                },
                {
                    "@name": "PIXBUF_DEPRECATED_IN_2_2_FOR",
                    "@c:identifier": "GDK_PIXBUF_DEPRECATED_IN_2_2_FOR",
                    "@introspectable": "0",
                    "source-position": {
                        "@filename": "../gdk-pixbuf/gdk-pixbuf-macros.h",
                        "@line": "361"
                    },
                    "parameters": {
                        "parameter": {
                            "@name": "f"
                        }
                    }
                },
                {
                    "@name": "PIXBUF_DEPRECATED_IN_2_30_FOR",
                    "@c:identifier": "GDK_PIXBUF_DEPRECATED_IN_2_30_FOR",
                    "@introspectable": "0",
                    "source-position": {
                        "@filename": "../gdk-pixbuf/gdk-pixbuf-macros.h",
                        "@line": "613"
                    },
                    "parameters": {
                        "parameter": {
                            "@name": "f"
                        }
                    }
                },
                {
                    "@name": "PIXBUF_DEPRECATED_IN_2_32_FOR",
                    "@c:identifier": "GDK_PIXBUF_DEPRECATED_IN_2_32_FOR",
                    "@introspectable": "0",
                    "source-position": {
                        "@filename": "../gdk-pixbuf/gdk-pixbuf-macros.h",
                        "@line": "631"
                    },
                    "parameters": {
                        "parameter": {
                            "@name": "f"
                        }
                    }
                },
                {
                    "@name": "PIXBUF_DEPRECATED_IN_2_34_FOR",
                    "@c:identifier": "GDK_PIXBUF_DEPRECATED_IN_2_34_FOR",
                    "@introspectable": "0",
                    "source-position": {
                        "@filename": "../gdk-pixbuf/gdk-pixbuf-macros.h",
                        "@line": "649"
                    },
                    "parameters": {
                        "parameter": {
                            "@name": "f"
                        }
                    }
                },
                {
                    "@name": "PIXBUF_DEPRECATED_IN_2_36_FOR",
                    "@c:identifier": "GDK_PIXBUF_DEPRECATED_IN_2_36_FOR",
                    "@introspectable": "0",
                    "source-position": {
                        "@filename": "../gdk-pixbuf/gdk-pixbuf-macros.h",
                        "@line": "667"
                    },
                    "parameters": {
                        "parameter": {
                            "@name": "f"
                        }
                    }
                },
                {
                    "@name": "PIXBUF_DEPRECATED_IN_2_38_FOR",
                    "@c:identifier": "GDK_PIXBUF_DEPRECATED_IN_2_38_FOR",
                    "@introspectable": "0",
                    "source-position": {
                        "@filename": "../gdk-pixbuf/gdk-pixbuf-macros.h",
                        "@line": "685"
                    },
                    "parameters": {
                        "parameter": {
                            "@name": "f"
                        }
                    }
                },
                {
                    "@name": "PIXBUF_DEPRECATED_IN_2_40_FOR",
                    "@c:identifier": "GDK_PIXBUF_DEPRECATED_IN_2_40_FOR",
                    "@introspectable": "0",
                    "source-position": {
                        "@filename": "../gdk-pixbuf/gdk-pixbuf-macros.h",
                        "@line": "703"
                    },
                    "parameters": {
                        "parameter": {
                            "@name": "f"
                        }
                    }
                },
                {
                    "@name": "PIXBUF_DEPRECATED_IN_2_4_FOR",
                    "@c:identifier": "GDK_PIXBUF_DEPRECATED_IN_2_4_FOR",
                    "@introspectable": "0",
                    "source-position": {
                        "@filename": "../gdk-pixbuf/gdk-pixbuf-macros.h",
                        "@line": "379"
                    },
                    "parameters": {
                        "parameter": {
                            "@name": "f"
                        }
                    }
                },
                {
                    "@name": "PIXBUF_DEPRECATED_IN_2_6_FOR",
                    "@c:identifier": "GDK_PIXBUF_DEPRECATED_IN_2_6_FOR",
                    "@introspectable": "0",
                    "source-position": {
                        "@filename": "../gdk-pixbuf/gdk-pixbuf-macros.h",
                        "@line": "397"
                    },
                    "parameters": {
                        "parameter": {
                            "@name": "f"
                        }
                    }
                },
                {
                    "@name": "PIXBUF_DEPRECATED_IN_2_8_FOR",
                    "@c:identifier": "GDK_PIXBUF_DEPRECATED_IN_2_8_FOR",
                    "@introspectable": "0",
                    "source-position": {
                        "@filename": "../gdk-pixbuf/gdk-pixbuf-macros.h",
                        "@line": "415"
                    },
                    "parameters": {
                        "parameter": {
                            "@name": "f"
                        }
                    }
                },
                {
                    "@name": "PIXBUF_LOADER",
                    "@c:identifier": "GDK_PIXBUF_LOADER",
                    "@introspectable": "0",
                    "source-position": {
                        "@filename": "../gdk-pixbuf/gdk-pixbuf-loader.h",
                        "@line": "40"
                    },
                    "parameters": {
                        "parameter": {
                            "@name": "obj"
                        }
                    }
                },
                {
                    "@name": "PIXBUF_LOADER_CLASS",
                    "@c:identifier": "GDK_PIXBUF_LOADER_CLASS",
                    "@introspectable": "0",
                    "source-position": {
                        "@filename": "../gdk-pixbuf/gdk-pixbuf-loader.h",
                        "@line": "41"
                    },
                    "parameters": {
                        "parameter": {
                            "@name": "klass"
                        }
                    }
                },
                {
                    "@name": "PIXBUF_LOADER_GET_CLASS",
                    "@c:identifier": "GDK_PIXBUF_LOADER_GET_CLASS",
                    "@introspectable": "0",
                    "source-position": {
                        "@filename": "../gdk-pixbuf/gdk-pixbuf-loader.h",
                        "@line": "44"
                    },
                    "parameters": {
                        "parameter": {
                            "@name": "obj"
                        }
                    }
                },
                {
                    "@name": "PIXBUF_SIMPLE_ANIM",
                    "@c:identifier": "GDK_PIXBUF_SIMPLE_ANIM",
                    "@introspectable": "0",
                    "source-position": {
                        "@filename": "../gdk-pixbuf/gdk-pixbuf-simple-anim.h",
                        "@line": "42"
                    },
                    "parameters": {
                        "parameter": {
                            "@name": "object"
                        }
                    }
                },
                {
                    "@name": "PIXBUF_SIMPLE_ANIM_CLASS",
                    "@c:identifier": "GDK_PIXBUF_SIMPLE_ANIM_CLASS",
                    "@introspectable": "0",
                    "source-position": {
                        "@filename": "../gdk-pixbuf/gdk-pixbuf-simple-anim.h",
                        "@line": "45"
                    },
                    "parameters": {
                        "parameter": {
                            "@name": "klass"
                        }
                    }
                },
                {
                    "@name": "PIXBUF_SIMPLE_ANIM_GET_CLASS",
                    "@c:identifier": "GDK_PIXBUF_SIMPLE_ANIM_GET_CLASS",
                    "@introspectable": "0",
                    "source-position": {
                        "@filename": "../gdk-pixbuf/gdk-pixbuf-simple-anim.h",
                        "@line": "47"
                    },
                    "parameters": {
                        "parameter": {
                            "@name": "obj"
                        }
                    }
                }
            ],
            "constant": [
                {
                    "@name": "PIXBUF_MAJOR",
                    "@value": "2",
                    "@c:type": "GDK_PIXBUF_MAJOR",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "../gdk-pixbuf/gdk-pixbuf-features.h",
                        "@line": "10",
                        "#text": "Major version of gdk-pixbuf library, that is the \"0\" in\n\"0.8.2\" for example."
                    },
                    "source-position": {
                        "@filename": "../gdk-pixbuf/gdk-pixbuf-features.h",
                        "@line": "37"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "PIXBUF_MICRO",
                    "@value": "10",
                    "@c:type": "GDK_PIXBUF_MICRO",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "../gdk-pixbuf/gdk-pixbuf-features.h",
                        "@line": "22",
                        "#text": "Micro version of gdk-pixbuf library, that is the \"2\" in\n\"0.8.2\" for example."
                    },
                    "source-position": {
                        "@filename": "../gdk-pixbuf/gdk-pixbuf-features.h",
                        "@line": "39"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "PIXBUF_MINOR",
                    "@value": "42",
                    "@c:type": "GDK_PIXBUF_MINOR",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "../gdk-pixbuf/gdk-pixbuf-features.h",
                        "@line": "16",
                        "#text": "Minor version of gdk-pixbuf library, that is the \"8\" in\n\"0.8.2\" for example."
                    },
                    "source-position": {
                        "@filename": "../gdk-pixbuf/gdk-pixbuf-features.h",
                        "@line": "38"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "PIXBUF_VERSION",
                    "@value": "2.42.10",
                    "@c:type": "GDK_PIXBUF_VERSION",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "../gdk-pixbuf/gdk-pixbuf-features.h",
                        "@line": "28",
                        "#text": "Contains the full version of GdkPixbuf as a string.\n\nThis is the version being compiled against; contrast with\n`gdk_pixbuf_version`."
                    },
                    "source-position": {
                        "@filename": "../gdk-pixbuf/gdk-pixbuf-features.h",
                        "@line": "40"
                    },
                    "type": {
                        "@name": "utf8",
                        "@c:type": "gchar*"
                    }
                }
            ],
            "class": [
                {
                    "@name": "Pixbuf",
                    "@c:symbol-prefix": "pixbuf",
                    "@c:type": "GdkPixbuf",
                    "@parent": "GObject.Object",
                    "@glib:type-name": "GdkPixbuf",
                    "@glib:get-type": "gdk_pixbuf_get_type",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "../gdk-pixbuf/gdk-pixbuf.c",
                        "@line": "24",
                        "#text": "A pixel buffer.\n\n`GdkPixbuf` contains information about an image's pixel data,\nits color space, bits per sample, width and height, and the\nrowstride (the number of bytes between the start of one row\nand the start of the next).\n\n## Creating new `GdkPixbuf`\n\nThe most basic way to create a pixbuf is to wrap an existing pixel\nbuffer with a [class@GdkPixbuf.Pixbuf] instance. You can use the\n[`ctor@GdkPixbuf.Pixbuf.new_from_data`] function to do this.\n\nEvery time you create a new `GdkPixbuf` instance for some data, you\nwill need to specify the destroy notification function that will be\ncalled when the data buffer needs to be freed; this will happen when\na `GdkPixbuf` is finalized by the reference counting functions. If\nyou have a chunk of static data compiled into your application, you\ncan pass in `NULL` as the destroy notification function so that the\ndata will not be freed.\n\nThe [`ctor@GdkPixbuf.Pixbuf.new`] constructor function can be used\nas a convenience to create a pixbuf with an empty buffer; this is\nequivalent to allocating a data buffer using `malloc()` and then\nwrapping it with `gdk_pixbuf_new_from_data()`. The `gdk_pixbuf_new()`\nfunction will compute an optimal rowstride so that rendering can be\nperformed with an efficient algorithm.\n\nAs a special case, you can use the [`ctor@GdkPixbuf.Pixbuf.new_from_xpm_data`]\nfunction to create a pixbuf from inline XPM image data.\n\nYou can also copy an existing pixbuf with the [method@Pixbuf.copy]\nfunction. This is not the same as just acquiring a reference to\nthe old pixbuf instance: the copy function will actually duplicate\nthe pixel data in memory and create a new [class@Pixbuf] instance\nfor it.\n\n## Reference counting\n\n`GdkPixbuf` structures are reference counted. This means that an\napplication can share a single pixbuf among many parts of the\ncode. When a piece of the program needs to use a pixbuf, it should\nacquire a reference to it by calling `g_object_ref()`; when it no\nlonger needs the pixbuf, it should release the reference it acquired\nby calling `g_object_unref()`. The resources associated with a\n`GdkPixbuf` will be freed when its reference count drops to zero.\nNewly-created `GdkPixbuf` instances start with a reference count\nof one.\n\n## Image Data\n\nImage data in a pixbuf is stored in memory in an uncompressed,\npacked format. Rows in the image are stored top to bottom, and\nin each row pixels are stored from left to right.\n\nThere may be padding at the end of a row.\n\nThe \"rowstride\" value of a pixbuf, as returned by [`method@GdkPixbuf.Pixbuf.get_rowstride`],\nindicates the number of bytes between rows.\n\n**NOTE**: If you are copying raw pixbuf data with `memcpy()` note that the\nlast row in the pixbuf may not be as wide as the full rowstride, but rather\njust as wide as the pixel data needs to be; that is: it is unsafe to do\n`memcpy (dest, pixels, rowstride * height)` to copy a whole pixbuf. Use\n[method@GdkPixbuf.Pixbuf.copy] instead, or compute the width in bytes of the\nlast row as:\n\n```c\nlast_row = width * ((n_channels * bits_per_sample + 7) / 8);\n```\n\nThe same rule applies when iterating over each row of a `GdkPixbuf` pixels\narray.\n\nThe following code illustrates a simple `put_pixel()`\nfunction for RGB pixbufs with 8 bits per channel with an alpha\nchannel.\n\n```c\nstatic void\nput_pixel (GdkPixbuf *pixbuf,\n           int x,\n\t   int y,\n\t   guchar red,\n\t   guchar green,\n\t   guchar blue,\n\t   guchar alpha)\n{\n  int n_channels = gdk_pixbuf_get_n_channels (pixbuf);\n\n  // Ensure that the pixbuf is valid\n  g_assert (gdk_pixbuf_get_colorspace (pixbuf) == GDK_COLORSPACE_RGB);\n  g_assert (gdk_pixbuf_get_bits_per_sample (pixbuf) == 8);\n  g_assert (gdk_pixbuf_get_has_alpha (pixbuf));\n  g_assert (n_channels == 4);\n\n  int width = gdk_pixbuf_get_width (pixbuf);\n  int height = gdk_pixbuf_get_height (pixbuf);\n\n  // Ensure that the coordinates are in a valid range\n  g_assert (x >= 0 && x < width);\n  g_assert (y >= 0 && y < height);\n\n  int rowstride = gdk_pixbuf_get_rowstride (pixbuf);\n\n  // The pixel buffer in the GdkPixbuf instance\n  guchar *pixels = gdk_pixbuf_get_pixels (pixbuf);\n\n  // The pixel we wish to modify\n  guchar *p = pixels + y * rowstride + x * n_channels;\n  p[0] = red;\n  p[1] = green;\n  p[2] = blue;\n  p[3] = alpha;\n}\n```\n\n## Loading images\n\nThe `GdkPixBuf` class provides a simple mechanism for loading\nan image from a file in synchronous and asynchronous fashion.\n\nFor GUI applications, it is recommended to use the asynchronous\nstream API to avoid blocking the control flow of the application.\n\nAdditionally, `GdkPixbuf` provides the [class@GdkPixbuf.PixbufLoader`]\nAPI for progressive image loading.\n\n## Saving images\n\nThe `GdkPixbuf` class provides methods for saving image data in\na number of file formats. The formatted data can be written to a\nfile or to a memory buffer. `GdkPixbuf` can also call a user-defined\ncallback on the data, which allows to e.g. write the image\nto a socket or store it in a database."
                    },
                    "implements": [
                        {
                            "@name": "Gio.Icon"
                        },
                        {
                            "@name": "Gio.LoadableIcon"
                        }
                    ],
                    "constructor": [
                        {
                            "@name": "new",
                            "@c:identifier": "gdk_pixbuf_new",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../gdk-pixbuf/gdk-pixbuf.c",
                                "@line": "599",
                                "#text": "Creates a new `GdkPixbuf` structure and allocates a buffer for it.\n\nIf the allocation of the buffer failed, this function will return `NULL`.\n\nThe buffer has an optimal rowstride. Note that the buffer is not cleared;\nyou will have to fill it completely yourself."
                            },
                            "source-position": {
                                "@filename": "../gdk-pixbuf/gdk-pixbuf-core.h",
                                "@line": "206"
                            },
                            "return-value": {
                                "@transfer-ownership": "full",
                                "@nullable": "1",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "../gdk-pixbuf/gdk-pixbuf.c",
                                    "@line": "614",
                                    "#text": "A newly-created pixel buffer"
                                },
                                "type": {
                                    "@name": "Pixbuf",
                                    "@c:type": "GdkPixbuf*"
                                }
                            },
                            "parameters": {
                                "parameter": [
                                    {
                                        "@name": "colorspace",
                                        "@transfer-ownership": "none",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "../gdk-pixbuf/gdk-pixbuf.c",
                                            "@line": "601",
                                            "#text": "Color space for image"
                                        },
                                        "type": {
                                            "@name": "Colorspace",
                                            "@c:type": "GdkColorspace"
                                        }
                                    },
                                    {
                                        "@name": "has_alpha",
                                        "@transfer-ownership": "none",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "../gdk-pixbuf/gdk-pixbuf.c",
                                            "@line": "602",
                                            "#text": "Whether the image should have transparency information"
                                        },
                                        "type": {
                                            "@name": "gboolean",
                                            "@c:type": "gboolean"
                                        }
                                    },
                                    {
                                        "@name": "bits_per_sample",
                                        "@transfer-ownership": "none",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "../gdk-pixbuf/gdk-pixbuf.c",
                                            "@line": "603",
                                            "#text": "Number of bits per color sample"
                                        },
                                        "type": {
                                            "@name": "gint",
                                            "@c:type": "int"
                                        }
                                    },
                                    {
                                        "@name": "width",
                                        "@transfer-ownership": "none",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "../gdk-pixbuf/gdk-pixbuf.c",
                                            "@line": "604",
                                            "#text": "Width of image in pixels, must be > 0"
                                        },
                                        "type": {
                                            "@name": "gint",
                                            "@c:type": "int"
                                        }
                                    },
                                    {
                                        "@name": "height",
                                        "@transfer-ownership": "none",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "../gdk-pixbuf/gdk-pixbuf.c",
                                            "@line": "605",
                                            "#text": "Height of image in pixels, must be > 0"
                                        },
                                        "type": {
                                            "@name": "gint",
                                            "@c:type": "int"
                                        }
                                    }
                                ]
                            }
                        },
                        {
                            "@name": "new_from_bytes",
                            "@c:identifier": "gdk_pixbuf_new_from_bytes",
                            "@version": "2.32",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../gdk-pixbuf/gdk-pixbuf-data.c",
                                "@line": "94",
                                "#text": "Creates a new #GdkPixbuf out of in-memory readonly image data.\n\nCurrently only RGB images with 8 bits per sample are supported.\n\nThis is the `GBytes` variant of gdk_pixbuf_new_from_data(), useful\nfor language bindings."
                            },
                            "source-position": {
                                "@filename": "../gdk-pixbuf/gdk-pixbuf-core.h",
                                "@line": "286"
                            },
                            "return-value": {
                                "@transfer-ownership": "full",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "../gdk-pixbuf/gdk-pixbuf-data.c",
                                    "@line": "111",
                                    "#text": "A newly-created pixbuf"
                                },
                                "type": {
                                    "@name": "Pixbuf",
                                    "@c:type": "GdkPixbuf*"
                                }
                            },
                            "parameters": {
                                "parameter": [
                                    {
                                        "@name": "data",
                                        "@transfer-ownership": "none",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "../gdk-pixbuf/gdk-pixbuf-data.c",
                                            "@line": "96",
                                            "#text": "Image data in 8-bit/sample packed format inside a #GBytes"
                                        },
                                        "type": {
                                            "@name": "GLib.Bytes",
                                            "@c:type": "GBytes*"
                                        }
                                    },
                                    {
                                        "@name": "colorspace",
                                        "@transfer-ownership": "none",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "../gdk-pixbuf/gdk-pixbuf-data.c",
                                            "@line": "97",
                                            "#text": "Colorspace for the image data"
                                        },
                                        "type": {
                                            "@name": "Colorspace",
                                            "@c:type": "GdkColorspace"
                                        }
                                    },
                                    {
                                        "@name": "has_alpha",
                                        "@transfer-ownership": "none",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "../gdk-pixbuf/gdk-pixbuf-data.c",
                                            "@line": "98",
                                            "#text": "Whether the data has an opacity channel"
                                        },
                                        "type": {
                                            "@name": "gboolean",
                                            "@c:type": "gboolean"
                                        }
                                    },
                                    {
                                        "@name": "bits_per_sample",
                                        "@transfer-ownership": "none",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "../gdk-pixbuf/gdk-pixbuf-data.c",
                                            "@line": "99",
                                            "#text": "Number of bits per sample"
                                        },
                                        "type": {
                                            "@name": "gint",
                                            "@c:type": "int"
                                        }
                                    },
                                    {
                                        "@name": "width",
                                        "@transfer-ownership": "none",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "../gdk-pixbuf/gdk-pixbuf-data.c",
                                            "@line": "100",
                                            "#text": "Width of the image in pixels, must be > 0"
                                        },
                                        "type": {
                                            "@name": "gint",
                                            "@c:type": "int"
                                        }
                                    },
                                    {
                                        "@name": "height",
                                        "@transfer-ownership": "none",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "../gdk-pixbuf/gdk-pixbuf-data.c",
                                            "@line": "101",
                                            "#text": "Height of the image in pixels, must be > 0"
                                        },
                                        "type": {
                                            "@name": "gint",
                                            "@c:type": "int"
                                        }
                                    },
                                    {
                                        "@name": "rowstride",
                                        "@transfer-ownership": "none",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "../gdk-pixbuf/gdk-pixbuf-data.c",
                                            "@line": "102",
                                            "#text": "Distance in bytes between row starts"
                                        },
                                        "type": {
                                            "@name": "gint",
                                            "@c:type": "int"
                                        }
                                    }
                                ]
                            }
                        },
                        {
                            "@name": "new_from_data",
                            "@c:identifier": "gdk_pixbuf_new_from_data",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../gdk-pixbuf/gdk-pixbuf-data.c",
                                "@line": "29",
                                "#text": "Creates a new #GdkPixbuf out of in-memory image data.\n\nCurrently only RGB images with 8 bits per sample are supported.\n\nSince you are providing a pre-allocated pixel buffer, you must also\nspecify a way to free that data.  This is done with a function of\ntype `GdkPixbufDestroyNotify`.  When a pixbuf created with is\nfinalized, your destroy notification function will be called, and\nit is its responsibility to free the pixel array.\n\nSee also: [ctor@GdkPixbuf.Pixbuf.new_from_bytes]"
                            },
                            "source-position": {
                                "@filename": "../gdk-pixbuf/gdk-pixbuf-core.h",
                                "@line": "276"
                            },
                            "return-value": {
                                "@transfer-ownership": "full",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "../gdk-pixbuf/gdk-pixbuf-data.c",
                                    "@line": "54",
                                    "#text": "A newly-created pixbuf"
                                },
                                "type": {
                                    "@name": "Pixbuf",
                                    "@c:type": "GdkPixbuf*"
                                }
                            },
                            "parameters": {
                                "parameter": [
                                    {
                                        "@name": "data",
                                        "@transfer-ownership": "none",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "../gdk-pixbuf/gdk-pixbuf-data.c",
                                            "@line": "31",
                                            "#text": "Image data in 8-bit/sample packed format"
                                        },
                                        "array": {
                                            "@zero-terminated": "0",
                                            "@c:type": "const guchar*",
                                            "type": {
                                                "@name": "guint8",
                                                "@c:type": "guchar"
                                            }
                                        }
                                    },
                                    {
                                        "@name": "colorspace",
                                        "@transfer-ownership": "none",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "../gdk-pixbuf/gdk-pixbuf-data.c",
                                            "@line": "32",
                                            "#text": "Colorspace for the image data"
                                        },
                                        "type": {
                                            "@name": "Colorspace",
                                            "@c:type": "GdkColorspace"
                                        }
                                    },
                                    {
                                        "@name": "has_alpha",
                                        "@transfer-ownership": "none",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "../gdk-pixbuf/gdk-pixbuf-data.c",
                                            "@line": "33",
                                            "#text": "Whether the data has an opacity channel"
                                        },
                                        "type": {
                                            "@name": "gboolean",
                                            "@c:type": "gboolean"
                                        }
                                    },
                                    {
                                        "@name": "bits_per_sample",
                                        "@transfer-ownership": "none",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "../gdk-pixbuf/gdk-pixbuf-data.c",
                                            "@line": "34",
                                            "#text": "Number of bits per sample"
                                        },
                                        "type": {
                                            "@name": "gint",
                                            "@c:type": "int"
                                        }
                                    },
                                    {
                                        "@name": "width",
                                        "@transfer-ownership": "none",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "../gdk-pixbuf/gdk-pixbuf-data.c",
                                            "@line": "35",
                                            "#text": "Width of the image in pixels, must be > 0"
                                        },
                                        "type": {
                                            "@name": "gint",
                                            "@c:type": "int"
                                        }
                                    },
                                    {
                                        "@name": "height",
                                        "@transfer-ownership": "none",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "../gdk-pixbuf/gdk-pixbuf-data.c",
                                            "@line": "36",
                                            "#text": "Height of the image in pixels, must be > 0"
                                        },
                                        "type": {
                                            "@name": "gint",
                                            "@c:type": "int"
                                        }
                                    },
                                    {
                                        "@name": "rowstride",
                                        "@transfer-ownership": "none",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "../gdk-pixbuf/gdk-pixbuf-data.c",
                                            "@line": "37",
                                            "#text": "Distance in bytes between row starts"
                                        },
                                        "type": {
                                            "@name": "gint",
                                            "@c:type": "int"
                                        }
                                    },
                                    {
                                        "@name": "destroy_fn",
                                        "@transfer-ownership": "none",
                                        "@nullable": "1",
                                        "@allow-none": "1",
                                        "@scope": "async",
                                        "@closure": "8",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "../gdk-pixbuf/gdk-pixbuf-data.c",
                                            "@line": "38",
                                            "#text": "Function used to free the data when the pixbuf's reference count\ndrops to zero, or %NULL if the data should not be freed"
                                        },
                                        "type": {
                                            "@name": "PixbufDestroyNotify",
                                            "@c:type": "GdkPixbufDestroyNotify"
                                        }
                                    },
                                    {
                                        "@name": "destroy_fn_data",
                                        "@transfer-ownership": "none",
                                        "@nullable": "1",
                                        "@allow-none": "1",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "../gdk-pixbuf/gdk-pixbuf-data.c",
                                            "@line": "40",
                                            "#text": "Closure data to pass to the destroy notification function"
                                        },
                                        "type": {
                                            "@name": "gpointer",
                                            "@c:type": "gpointer"
                                        }
                                    }
                                ]
                            }
                        },
                        {
                            "@name": "new_from_file",
                            "@c:identifier": "gdk_pixbuf_new_from_file",
                            "@throws": "1",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../gdk-pixbuf/gdk-pixbuf-io.c",
                                "@line": "1089",
                                "#text": "Creates a new pixbuf by loading an image from a file.\n\nThe file format is detected automatically.\n\nIf `NULL` is returned, then @error will be set. Possible errors are:\n\n - the file could not be opened\n - there is no loader for the file's format\n - there is not enough memory to allocate the image buffer\n - the image buffer contains invalid data\n\nThe error domains are `GDK_PIXBUF_ERROR` and `G_FILE_ERROR`."
                            },
                            "source-position": {
                                "@filename": "../gdk-pixbuf/gdk-pixbuf-core.h",
                                "@line": "252"
                            },
                            "return-value": {
                                "@transfer-ownership": "full",
                                "@nullable": "1",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "../gdk-pixbuf/gdk-pixbuf-io.c",
                                    "@line": "1108",
                                    "#text": "A newly-created pixbuf"
                                },
                                "type": {
                                    "@name": "Pixbuf",
                                    "@c:type": "GdkPixbuf*"
                                }
                            },
                            "parameters": {
                                "parameter": {
                                    "@name": "filename",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../gdk-pixbuf/gdk-pixbuf-io.c",
                                        "@line": "1091",
                                        "#text": "Name of file to load, in the GLib file\n  name encoding"
                                    },
                                    "type": {
                                        "@name": "filename",
                                        "@c:type": "const char*"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "new_from_file_at_scale",
                            "@c:identifier": "gdk_pixbuf_new_from_file_at_scale",
                            "@version": "2.6",
                            "@throws": "1",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../gdk-pixbuf/gdk-pixbuf-io.c",
                                "@line": "1337",
                                "#text": "Creates a new pixbuf by loading an image from a file.\n\nThe file format is detected automatically.\n\nIf `NULL` is returned, then @error will be set. Possible errors are:\n\n - the file could not be opened\n - there is no loader for the file's format\n - there is not enough memory to allocate the image buffer\n - the image buffer contains invalid data\n\nThe error domains are `GDK_PIXBUF_ERROR` and `G_FILE_ERROR`.\n\nThe image will be scaled to fit in the requested size, optionally preserving\nthe image's aspect ratio.\n\nWhen preserving the aspect ratio, a `width` of -1 will cause the image\nto be scaled to the exact given height, and a `height` of -1 will cause\nthe image to be scaled to the exact given width. When not preserving\naspect ratio, a `width` or `height` of -1 means to not scale the image\nat all in that dimension. Negative values for `width` and `height` are\nallowed since 2.8."
                            },
                            "source-position": {
                                "@filename": "../gdk-pixbuf/gdk-pixbuf-core.h",
                                "@line": "260"
                            },
                            "return-value": {
                                "@transfer-ownership": "full",
                                "@nullable": "1",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "../gdk-pixbuf/gdk-pixbuf-io.c",
                                    "@line": "1369",
                                    "#text": "A newly-created pixbuf"
                                },
                                "type": {
                                    "@name": "Pixbuf",
                                    "@c:type": "GdkPixbuf*"
                                }
                            },
                            "parameters": {
                                "parameter": [
                                    {
                                        "@name": "filename",
                                        "@transfer-ownership": "none",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "../gdk-pixbuf/gdk-pixbuf-io.c",
                                            "@line": "1339",
                                            "#text": "Name of file to load, in the GLib file\n    name encoding"
                                        },
                                        "type": {
                                            "@name": "filename",
                                            "@c:type": "const char*"
                                        }
                                    },
                                    {
                                        "@name": "width",
                                        "@transfer-ownership": "none",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "../gdk-pixbuf/gdk-pixbuf-io.c",
                                            "@line": "1341",
                                            "#text": "The width the image should have or -1 to not constrain the width"
                                        },
                                        "type": {
                                            "@name": "gint",
                                            "@c:type": "int"
                                        }
                                    },
                                    {
                                        "@name": "height",
                                        "@transfer-ownership": "none",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "../gdk-pixbuf/gdk-pixbuf-io.c",
                                            "@line": "1342",
                                            "#text": "The height the image should have or -1 to not constrain the height"
                                        },
                                        "type": {
                                            "@name": "gint",
                                            "@c:type": "int"
                                        }
                                    },
                                    {
                                        "@name": "preserve_aspect_ratio",
                                        "@transfer-ownership": "none",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "../gdk-pixbuf/gdk-pixbuf-io.c",
                                            "@line": "1343",
                                            "#text": "`TRUE` to preserve the image's aspect ratio"
                                        },
                                        "type": {
                                            "@name": "gboolean",
                                            "@c:type": "gboolean"
                                        }
                                    }
                                ]
                            }
                        },
                        {
                            "@name": "new_from_file_at_size",
                            "@c:identifier": "gdk_pixbuf_new_from_file_at_size",
                            "@version": "2.4",
                            "@throws": "1",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../gdk-pixbuf/gdk-pixbuf-io.c",
                                "@line": "1210",
                                "#text": "Creates a new pixbuf by loading an image from a file.\n\nThe file format is detected automatically.\n\nIf `NULL` is returned, then @error will be set. Possible errors are:\n\n - the file could not be opened\n - there is no loader for the file's format\n - there is not enough memory to allocate the image buffer\n - the image buffer contains invalid data\n\nThe error domains are `GDK_PIXBUF_ERROR` and `G_FILE_ERROR`.\n\nThe image will be scaled to fit in the requested size, preserving\nthe image's aspect ratio. Note that the returned pixbuf may be smaller\nthan `width` x `height`, if the aspect ratio requires it. To load\nand image at the requested size, regardless of aspect ratio, use\n[ctor@GdkPixbuf.Pixbuf.new_from_file_at_scale]."
                            },
                            "source-position": {
                                "@filename": "../gdk-pixbuf/gdk-pixbuf-core.h",
                                "@line": "255"
                            },
                            "return-value": {
                                "@transfer-ownership": "full",
                                "@nullable": "1",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "../gdk-pixbuf/gdk-pixbuf-io.c",
                                    "@line": "1237",
                                    "#text": "A newly-created pixbuf"
                                },
                                "type": {
                                    "@name": "Pixbuf",
                                    "@c:type": "GdkPixbuf*"
                                }
                            },
                            "parameters": {
                                "parameter": [
                                    {
                                        "@name": "filename",
                                        "@transfer-ownership": "none",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "../gdk-pixbuf/gdk-pixbuf-io.c",
                                            "@line": "1212",
                                            "#text": "Name of file to load, in the GLib file\n    name encoding"
                                        },
                                        "type": {
                                            "@name": "filename",
                                            "@c:type": "const char*"
                                        }
                                    },
                                    {
                                        "@name": "width",
                                        "@transfer-ownership": "none",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "../gdk-pixbuf/gdk-pixbuf-io.c",
                                            "@line": "1214",
                                            "#text": "The width the image should have or -1 to not constrain the width"
                                        },
                                        "type": {
                                            "@name": "gint",
                                            "@c:type": "int"
                                        }
                                    },
                                    {
                                        "@name": "height",
                                        "@transfer-ownership": "none",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "../gdk-pixbuf/gdk-pixbuf-io.c",
                                            "@line": "1215",
                                            "#text": "The height the image should have or -1 to not constrain the height"
                                        },
                                        "type": {
                                            "@name": "gint",
                                            "@c:type": "int"
                                        }
                                    }
                                ]
                            }
                        },
                        {
                            "@name": "new_from_inline",
                            "@c:identifier": "gdk_pixbuf_new_from_inline",
                            "@deprecated": "1",
                            "@deprecated-version": "2.32",
                            "@throws": "1",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../gdk-pixbuf/gdk-pixdata.c",
                                "@line": "951",
                                "#text": "Creates a `GdkPixbuf` from a flat representation that is suitable for\nstoring as inline data in a program.\n\nThis is useful if you want to ship a program with images, but don't want\nto depend on any external files.\n\nGdkPixbuf ships with a program called `gdk-pixbuf-csource`, which allows\nfor conversion of `GdkPixbuf`s into such a inline representation.\n\nIn almost all cases, you should pass the `--raw` option to\n`gdk-pixbuf-csource`. A sample invocation would be:\n\n```\ngdk-pixbuf-csource --raw --name=myimage_inline myimage.png\n```\n\nFor the typical case where the inline pixbuf is read-only static data,\nyou don't need to copy the pixel data unless you intend to write to\nit, so you can pass `FALSE` for `copy_pixels`. If you pass `--rle` to\n`gdk-pixbuf-csource`, a copy will be made even if `copy_pixels` is `FALSE`,\nso using this option is generally a bad idea.\n\nIf you create a pixbuf from const inline data compiled into your\nprogram, it's probably safe to ignore errors and disable length checks,\nsince things will always succeed:\n\n```c\npixbuf = gdk_pixbuf_new_from_inline (-1, myimage_inline, FALSE, NULL);\n```\n\nFor non-const inline data, you could get out of memory. For untrusted\ninline data located at runtime, you could have corrupt inline data in\naddition."
                            },
                            "doc-deprecated": {
                                "@xml:space": "preserve",
                                "#text": "Use `GResource` instead."
                            },
                            "source-position": {
                                "@filename": "../gdk-pixbuf/gdk-pixbuf-core.h",
                                "@line": "298"
                            },
                            "return-value": {
                                "@transfer-ownership": "full",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "../gdk-pixbuf/gdk-pixdata.c",
                                    "@line": "995",
                                    "#text": "A newly-created pixbuf"
                                },
                                "type": {
                                    "@name": "Pixbuf",
                                    "@c:type": "GdkPixbuf*"
                                }
                            },
                            "parameters": {
                                "parameter": [
                                    {
                                        "@name": "data_length",
                                        "@transfer-ownership": "none",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "../gdk-pixbuf/gdk-pixdata.c",
                                            "@line": "953",
                                            "#text": "Length in bytes of the `data` argument or -1 to\n  disable length checks"
                                        },
                                        "type": {
                                            "@name": "gint",
                                            "@c:type": "gint"
                                        }
                                    },
                                    {
                                        "@name": "data",
                                        "@transfer-ownership": "none",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "../gdk-pixbuf/gdk-pixdata.c",
                                            "@line": "955",
                                            "#text": "Byte data containing a\n  serialized `GdkPixdata` structure"
                                        },
                                        "array": {
                                            "@length": "0",
                                            "@zero-terminated": "0",
                                            "@c:type": "const guint8*",
                                            "type": {
                                                "@name": "guint8",
                                                "@c:type": "guint8"
                                            }
                                        }
                                    },
                                    {
                                        "@name": "copy_pixels",
                                        "@transfer-ownership": "none",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "../gdk-pixbuf/gdk-pixdata.c",
                                            "@line": "957",
                                            "#text": "Whether to copy the pixel data, or use direct pointers\n  `data` for the resulting pixbuf"
                                        },
                                        "type": {
                                            "@name": "gboolean",
                                            "@c:type": "gboolean"
                                        }
                                    }
                                ]
                            }
                        },
                        {
                            "@name": "new_from_resource",
                            "@c:identifier": "gdk_pixbuf_new_from_resource",
                            "@version": "2.26",
                            "@throws": "1",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../gdk-pixbuf/gdk-pixbuf-io.c",
                                "@line": "1793",
                                "#text": "Creates a new pixbuf by loading an image from an resource.\n\nThe file format is detected automatically. If `NULL` is returned, then\n@error will be set."
                            },
                            "source-position": {
                                "@filename": "../gdk-pixbuf/gdk-pixbuf-core.h",
                                "@line": "266"
                            },
                            "return-value": {
                                "@transfer-ownership": "full",
                                "@nullable": "1",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "../gdk-pixbuf/gdk-pixbuf-io.c",
                                    "@line": "1803",
                                    "#text": "A newly-created pixbuf"
                                },
                                "type": {
                                    "@name": "Pixbuf",
                                    "@c:type": "GdkPixbuf*"
                                }
                            },
                            "parameters": {
                                "parameter": {
                                    "@name": "resource_path",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../gdk-pixbuf/gdk-pixbuf-io.c",
                                        "@line": "1795",
                                        "#text": "the path of the resource file"
                                    },
                                    "type": {
                                        "@name": "utf8",
                                        "@c:type": "const char*"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "new_from_resource_at_scale",
                            "@c:identifier": "gdk_pixbuf_new_from_resource_at_scale",
                            "@version": "2.26",
                            "@throws": "1",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../gdk-pixbuf/gdk-pixbuf-io.c",
                                "@line": "1827",
                                "#text": "Creates a new pixbuf by loading an image from an resource.\n\nThe file format is detected automatically. If `NULL` is returned, then\n@error will be set.\n\nThe image will be scaled to fit in the requested size, optionally\npreserving the image's aspect ratio. When preserving the aspect ratio,\na @width of -1 will cause the image to be scaled to the exact given\nheight, and a @height of -1 will cause the image to be scaled to the\nexact given width. When not preserving aspect ratio, a @width or\n@height of -1 means to not scale the image at all in that dimension.\n\nThe stream is not closed."
                            },
                            "source-position": {
                                "@filename": "../gdk-pixbuf/gdk-pixbuf-core.h",
                                "@line": "269"
                            },
                            "return-value": {
                                "@transfer-ownership": "full",
                                "@nullable": "1",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "../gdk-pixbuf/gdk-pixbuf-io.c",
                                    "@line": "1849",
                                    "#text": "A newly-created pixbuf"
                                },
                                "type": {
                                    "@name": "Pixbuf",
                                    "@c:type": "GdkPixbuf*"
                                }
                            },
                            "parameters": {
                                "parameter": [
                                    {
                                        "@name": "resource_path",
                                        "@transfer-ownership": "none",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "../gdk-pixbuf/gdk-pixbuf-io.c",
                                            "@line": "1829",
                                            "#text": "the path of the resource file"
                                        },
                                        "type": {
                                            "@name": "utf8",
                                            "@c:type": "const char*"
                                        }
                                    },
                                    {
                                        "@name": "width",
                                        "@transfer-ownership": "none",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "../gdk-pixbuf/gdk-pixbuf-io.c",
                                            "@line": "1830",
                                            "#text": "The width the image should have or -1 to not constrain the width"
                                        },
                                        "type": {
                                            "@name": "gint",
                                            "@c:type": "int"
                                        }
                                    },
                                    {
                                        "@name": "height",
                                        "@transfer-ownership": "none",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "../gdk-pixbuf/gdk-pixbuf-io.c",
                                            "@line": "1831",
                                            "#text": "The height the image should have or -1 to not constrain the height"
                                        },
                                        "type": {
                                            "@name": "gint",
                                            "@c:type": "int"
                                        }
                                    },
                                    {
                                        "@name": "preserve_aspect_ratio",
                                        "@transfer-ownership": "none",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "../gdk-pixbuf/gdk-pixbuf-io.c",
                                            "@line": "1832",
                                            "#text": "`TRUE` to preserve the image's aspect ratio"
                                        },
                                        "type": {
                                            "@name": "gboolean",
                                            "@c:type": "gboolean"
                                        }
                                    }
                                ]
                            }
                        },
                        {
                            "@name": "new_from_stream",
                            "@c:identifier": "gdk_pixbuf_new_from_stream",
                            "@version": "2.14",
                            "@throws": "1",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../gdk-pixbuf/gdk-pixbuf-io.c",
                                "@line": "1717",
                                "#text": "Creates a new pixbuf by loading an image from an input stream.\n\nThe file format is detected automatically.\n\nIf `NULL` is returned, then `error` will be set.\n\nThe `cancellable` can be used to abort the operation from another thread.\nIf the operation was cancelled, the error `G_IO_ERROR_CANCELLED` will be\nreturned. Other possible errors are in the `GDK_PIXBUF_ERROR` and\n`G_IO_ERROR` domains.\n\nThe stream is not closed."
                            },
                            "source-position": {
                                "@filename": "../gdk-pixbuf/gdk-pixbuf-core.h",
                                "@line": "409"
                            },
                            "return-value": {
                                "@transfer-ownership": "full",
                                "@nullable": "1",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "../gdk-pixbuf/gdk-pixbuf-io.c",
                                    "@line": "1736",
                                    "#text": "A newly-created pixbuf"
                                },
                                "type": {
                                    "@name": "Pixbuf",
                                    "@c:type": "GdkPixbuf*"
                                }
                            },
                            "parameters": {
                                "parameter": [
                                    {
                                        "@name": "stream",
                                        "@transfer-ownership": "none",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "../gdk-pixbuf/gdk-pixbuf-io.c",
                                            "@line": "1719",
                                            "#text": "a `GInputStream` to load the pixbuf from"
                                        },
                                        "type": {
                                            "@name": "Gio.InputStream",
                                            "@c:type": "GInputStream*"
                                        }
                                    },
                                    {
                                        "@name": "cancellable",
                                        "@transfer-ownership": "none",
                                        "@nullable": "1",
                                        "@allow-none": "1",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "../gdk-pixbuf/gdk-pixbuf-io.c",
                                            "@line": "1720",
                                            "#text": "optional `GCancellable` object, `NULL` to ignore"
                                        },
                                        "type": {
                                            "@name": "Gio.Cancellable",
                                            "@c:type": "GCancellable*"
                                        }
                                    }
                                ]
                            }
                        },
                        {
                            "@name": "new_from_stream_at_scale",
                            "@c:identifier": "gdk_pixbuf_new_from_stream_at_scale",
                            "@version": "2.14",
                            "@throws": "1",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../gdk-pixbuf/gdk-pixbuf-io.c",
                                "@line": "1543",
                                "#text": "Creates a new pixbuf by loading an image from an input stream.\n\nThe file format is detected automatically. If `NULL` is returned, then\n@error will be set. The @cancellable can be used to abort the operation\nfrom another thread. If the operation was cancelled, the error\n`G_IO_ERROR_CANCELLED` will be returned. Other possible errors are in\nthe `GDK_PIXBUF_ERROR` and `G_IO_ERROR` domains.\n\nThe image will be scaled to fit in the requested size, optionally\npreserving the image's aspect ratio.\n\nWhen preserving the aspect ratio, a `width` of -1 will cause the image to be\nscaled to the exact given height, and a `height` of -1 will cause the image\nto be scaled to the exact given width. If both `width` and `height` are\ngiven, this function will behave as if the smaller of the two values\nis passed as -1.\n\nWhen not preserving aspect ratio, a `width` or `height` of -1 means to not\nscale the image at all in that dimension.\n\nThe stream is not closed."
                            },
                            "source-position": {
                                "@filename": "../gdk-pixbuf/gdk-pixbuf-core.h",
                                "@line": "424"
                            },
                            "return-value": {
                                "@transfer-ownership": "full",
                                "@nullable": "1",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "../gdk-pixbuf/gdk-pixbuf-io.c",
                                    "@line": "1574",
                                    "#text": "A newly-created pixbuf"
                                },
                                "type": {
                                    "@name": "Pixbuf",
                                    "@c:type": "GdkPixbuf*"
                                }
                            },
                            "parameters": {
                                "parameter": [
                                    {
                                        "@name": "stream",
                                        "@transfer-ownership": "none",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "../gdk-pixbuf/gdk-pixbuf-io.c",
                                            "@line": "1545",
                                            "#text": "a `GInputStream` to load the pixbuf from"
                                        },
                                        "type": {
                                            "@name": "Gio.InputStream",
                                            "@c:type": "GInputStream*"
                                        }
                                    },
                                    {
                                        "@name": "width",
                                        "@transfer-ownership": "none",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "../gdk-pixbuf/gdk-pixbuf-io.c",
                                            "@line": "1546",
                                            "#text": "The width the image should have or -1 to not constrain the width"
                                        },
                                        "type": {
                                            "@name": "gint",
                                            "@c:type": "gint"
                                        }
                                    },
                                    {
                                        "@name": "height",
                                        "@transfer-ownership": "none",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "../gdk-pixbuf/gdk-pixbuf-io.c",
                                            "@line": "1547",
                                            "#text": "The height the image should have or -1 to not constrain the height"
                                        },
                                        "type": {
                                            "@name": "gint",
                                            "@c:type": "gint"
                                        }
                                    },
                                    {
                                        "@name": "preserve_aspect_ratio",
                                        "@transfer-ownership": "none",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "../gdk-pixbuf/gdk-pixbuf-io.c",
                                            "@line": "1548",
                                            "#text": "`TRUE` to preserve the image's aspect ratio"
                                        },
                                        "type": {
                                            "@name": "gboolean",
                                            "@c:type": "gboolean"
                                        }
                                    },
                                    {
                                        "@name": "cancellable",
                                        "@transfer-ownership": "none",
                                        "@nullable": "1",
                                        "@allow-none": "1",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "../gdk-pixbuf/gdk-pixbuf-io.c",
                                            "@line": "1549",
                                            "#text": "optional `GCancellable` object, `NULL` to ignore"
                                        },
                                        "type": {
                                            "@name": "Gio.Cancellable",
                                            "@c:type": "GCancellable*"
                                        }
                                    }
                                ]
                            }
                        },
                        {
                            "@name": "new_from_stream_finish",
                            "@c:identifier": "gdk_pixbuf_new_from_stream_finish",
                            "@version": "2.24",
                            "@throws": "1",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../gdk-pixbuf/gdk-pixbuf-io.c",
                                "@line": "1914",
                                "#text": "Finishes an asynchronous pixbuf creation operation started with\ngdk_pixbuf_new_from_stream_async()."
                            },
                            "source-position": {
                                "@filename": "../gdk-pixbuf/gdk-pixbuf-core.h",
                                "@line": "420"
                            },
                            "return-value": {
                                "@transfer-ownership": "full",
                                "@nullable": "1",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "../gdk-pixbuf/gdk-pixbuf-io.c",
                                    "@line": "1922",
                                    "#text": "the newly created pixbuf"
                                },
                                "type": {
                                    "@name": "Pixbuf",
                                    "@c:type": "GdkPixbuf*"
                                }
                            },
                            "parameters": {
                                "parameter": {
                                    "@name": "async_result",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../gdk-pixbuf/gdk-pixbuf-io.c",
                                        "@line": "1916",
                                        "#text": "a `GAsyncResult`"
                                    },
                                    "type": {
                                        "@name": "Gio.AsyncResult",
                                        "@c:type": "GAsyncResult*"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "new_from_xpm_data",
                            "@c:identifier": "gdk_pixbuf_new_from_xpm_data",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../gdk-pixbuf/gdk-pixbuf-io.c",
                                "@line": "2148",
                                "#text": "Creates a new pixbuf by parsing XPM data in memory.\n\nThis data is commonly the result of including an XPM file into a\nprogram's C source."
                            },
                            "source-position": {
                                "@filename": "../gdk-pixbuf/gdk-pixbuf-core.h",
                                "@line": "294"
                            },
                            "return-value": {
                                "@transfer-ownership": "full",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "../gdk-pixbuf/gdk-pixbuf-io.c",
                                    "@line": "2157",
                                    "#text": "A newly-created pixbuf"
                                },
                                "type": {
                                    "@name": "Pixbuf",
                                    "@c:type": "GdkPixbuf*"
                                }
                            },
                            "parameters": {
                                "parameter": {
                                    "@name": "data",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../gdk-pixbuf/gdk-pixbuf-io.c",
                                        "@line": "2150",
                                        "#text": "Pointer to inline XPM data."
                                    },
                                    "array": {
                                        "@c:type": "const char**",
                                        "type": {
                                            "@name": "utf8",
                                            "@c:type": "char*"
                                        }
                                    }
                                }
                            }
                        }
                    ],
                    "function": [
                        {
                            "@name": "calculate_rowstride",
                            "@c:identifier": "gdk_pixbuf_calculate_rowstride",
                            "@version": "2.36.8",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../gdk-pixbuf/gdk-pixbuf.c",
                                "@line": "557",
                                "#text": "Calculates the rowstride that an image created with those values would\nhave.\n\nThis function is useful for front-ends and backends that want to check\nimage values without needing to create a `GdkPixbuf`."
                            },
                            "source-position": {
                                "@filename": "../gdk-pixbuf/gdk-pixbuf-core.h",
                                "@line": "210"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "../gdk-pixbuf/gdk-pixbuf.c",
                                    "@line": "571",
                                    "#text": "the rowstride for the given values, or -1 in case of error."
                                },
                                "type": {
                                    "@name": "gint",
                                    "@c:type": "gint"
                                }
                            },
                            "parameters": {
                                "parameter": [
                                    {
                                        "@name": "colorspace",
                                        "@transfer-ownership": "none",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "../gdk-pixbuf/gdk-pixbuf.c",
                                            "@line": "559",
                                            "#text": "Color space for image"
                                        },
                                        "type": {
                                            "@name": "Colorspace",
                                            "@c:type": "GdkColorspace"
                                        }
                                    },
                                    {
                                        "@name": "has_alpha",
                                        "@transfer-ownership": "none",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "../gdk-pixbuf/gdk-pixbuf.c",
                                            "@line": "560",
                                            "#text": "Whether the image should have transparency information"
                                        },
                                        "type": {
                                            "@name": "gboolean",
                                            "@c:type": "gboolean"
                                        }
                                    },
                                    {
                                        "@name": "bits_per_sample",
                                        "@transfer-ownership": "none",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "../gdk-pixbuf/gdk-pixbuf.c",
                                            "@line": "561",
                                            "#text": "Number of bits per color sample"
                                        },
                                        "type": {
                                            "@name": "gint",
                                            "@c:type": "int"
                                        }
                                    },
                                    {
                                        "@name": "width",
                                        "@transfer-ownership": "none",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "../gdk-pixbuf/gdk-pixbuf.c",
                                            "@line": "562",
                                            "#text": "Width of image in pixels, must be > 0"
                                        },
                                        "type": {
                                            "@name": "gint",
                                            "@c:type": "int"
                                        }
                                    },
                                    {
                                        "@name": "height",
                                        "@transfer-ownership": "none",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "../gdk-pixbuf/gdk-pixbuf.c",
                                            "@line": "563",
                                            "#text": "Height of image in pixels, must be > 0"
                                        },
                                        "type": {
                                            "@name": "gint",
                                            "@c:type": "int"
                                        }
                                    }
                                ]
                            }
                        },
                        {
                            "@name": "get_file_info",
                            "@c:identifier": "gdk_pixbuf_get_file_info",
                            "@version": "2.4",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../gdk-pixbuf/gdk-pixbuf-io.c",
                                "@line": "1964",
                                "#text": "Parses an image file far enough to determine its format and size."
                            },
                            "source-position": {
                                "@filename": "../gdk-pixbuf/gdk-pixbuf-io.h",
                                "@line": "77"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "@nullable": "1",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "../gdk-pixbuf/gdk-pixbuf-io.c",
                                    "@line": "1972",
                                    "#text": "A `GdkPixbufFormat` describing\n  the image format of the file"
                                },
                                "type": {
                                    "@name": "PixbufFormat",
                                    "@c:type": "GdkPixbufFormat*"
                                }
                            },
                            "parameters": {
                                "parameter": [
                                    {
                                        "@name": "filename",
                                        "@transfer-ownership": "none",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "../gdk-pixbuf/gdk-pixbuf-io.c",
                                            "@line": "1966",
                                            "#text": "The name of the file to identify."
                                        },
                                        "type": {
                                            "@name": "filename",
                                            "@c:type": "const gchar*"
                                        }
                                    },
                                    {
                                        "@name": "width",
                                        "@direction": "out",
                                        "@caller-allocates": "0",
                                        "@transfer-ownership": "full",
                                        "@optional": "1",
                                        "@allow-none": "1",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "../gdk-pixbuf/gdk-pixbuf-io.c",
                                            "@line": "1967",
                                            "#text": "Return location for the width of the image"
                                        },
                                        "type": {
                                            "@name": "gint",
                                            "@c:type": "gint*"
                                        }
                                    },
                                    {
                                        "@name": "height",
                                        "@direction": "out",
                                        "@caller-allocates": "0",
                                        "@transfer-ownership": "full",
                                        "@optional": "1",
                                        "@allow-none": "1",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "../gdk-pixbuf/gdk-pixbuf-io.c",
                                            "@line": "1968",
                                            "#text": "Return location for the height of the image"
                                        },
                                        "type": {
                                            "@name": "gint",
                                            "@c:type": "gint*"
                                        }
                                    }
                                ]
                            }
                        },
                        {
                            "@name": "get_file_info_async",
                            "@c:identifier": "gdk_pixbuf_get_file_info_async",
                            "@version": "2.32",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../gdk-pixbuf/gdk-pixbuf-io.c",
                                "@line": "2062",
                                "#text": "Asynchronously parses an image file far enough to determine its\nformat and size.\n\nFor more details see gdk_pixbuf_get_file_info(), which is the synchronous\nversion of this function.\n\nWhen the operation is finished, @callback will be called in the\nmain thread. You can then call gdk_pixbuf_get_file_info_finish() to\nget the result of the operation."
                            },
                            "source-position": {
                                "@filename": "../gdk-pixbuf/gdk-pixbuf-io.h",
                                "@line": "81"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "type": {
                                    "@name": "none",
                                    "@c:type": "void"
                                }
                            },
                            "parameters": {
                                "parameter": [
                                    {
                                        "@name": "filename",
                                        "@transfer-ownership": "none",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "../gdk-pixbuf/gdk-pixbuf-io.c",
                                            "@line": "2064",
                                            "#text": "The name of the file to identify"
                                        },
                                        "type": {
                                            "@name": "filename",
                                            "@c:type": "const gchar*"
                                        }
                                    },
                                    {
                                        "@name": "cancellable",
                                        "@transfer-ownership": "none",
                                        "@nullable": "1",
                                        "@allow-none": "1",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "../gdk-pixbuf/gdk-pixbuf-io.c",
                                            "@line": "2065",
                                            "#text": "optional `GCancellable` object, `NULL` to ignore"
                                        },
                                        "type": {
                                            "@name": "Gio.Cancellable",
                                            "@c:type": "GCancellable*"
                                        }
                                    },
                                    {
                                        "@name": "callback",
                                        "@transfer-ownership": "none",
                                        "@nullable": "1",
                                        "@allow-none": "1",
                                        "@scope": "async",
                                        "@closure": "3",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "../gdk-pixbuf/gdk-pixbuf-io.c",
                                            "@line": "2066",
                                            "#text": "a `GAsyncReadyCallback` to call when the file info is available"
                                        },
                                        "type": {
                                            "@name": "Gio.AsyncReadyCallback",
                                            "@c:type": "GAsyncReadyCallback"
                                        }
                                    },
                                    {
                                        "@name": "user_data",
                                        "@transfer-ownership": "none",
                                        "@nullable": "1",
                                        "@allow-none": "1",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "../gdk-pixbuf/gdk-pixbuf-io.c",
                                            "@line": "2067",
                                            "#text": "the data to pass to the callback function"
                                        },
                                        "type": {
                                            "@name": "gpointer",
                                            "@c:type": "gpointer"
                                        }
                                    }
                                ]
                            }
                        },
                        {
                            "@name": "get_file_info_finish",
                            "@c:identifier": "gdk_pixbuf_get_file_info_finish",
                            "@version": "2.32",
                            "@throws": "1",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../gdk-pixbuf/gdk-pixbuf-io.c",
                                "@line": "2105",
                                "#text": "Finishes an asynchronous pixbuf parsing operation started with\ngdk_pixbuf_get_file_info_async()."
                            },
                            "source-position": {
                                "@filename": "../gdk-pixbuf/gdk-pixbuf-io.h",
                                "@line": "86"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "@nullable": "1",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "../gdk-pixbuf/gdk-pixbuf-io.c",
                                    "@line": "2115",
                                    "#text": "A `GdkPixbufFormat` describing the\n  image format of the file"
                                },
                                "type": {
                                    "@name": "PixbufFormat",
                                    "@c:type": "GdkPixbufFormat*"
                                }
                            },
                            "parameters": {
                                "parameter": [
                                    {
                                        "@name": "async_result",
                                        "@transfer-ownership": "none",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "../gdk-pixbuf/gdk-pixbuf-io.c",
                                            "@line": "2107",
                                            "#text": "a `GAsyncResult`"
                                        },
                                        "type": {
                                            "@name": "Gio.AsyncResult",
                                            "@c:type": "GAsyncResult*"
                                        }
                                    },
                                    {
                                        "@name": "width",
                                        "@direction": "out",
                                        "@caller-allocates": "0",
                                        "@transfer-ownership": "full",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "../gdk-pixbuf/gdk-pixbuf-io.c",
                                            "@line": "2108",
                                            "#text": "Return location for the width of the image, or `NULL`"
                                        },
                                        "type": {
                                            "@name": "gint",
                                            "@c:type": "gint*"
                                        }
                                    },
                                    {
                                        "@name": "height",
                                        "@direction": "out",
                                        "@caller-allocates": "0",
                                        "@transfer-ownership": "full",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "../gdk-pixbuf/gdk-pixbuf-io.c",
                                            "@line": "2109",
                                            "#text": "Return location for the height of the image, or `NULL`"
                                        },
                                        "type": {
                                            "@name": "gint",
                                            "@c:type": "gint*"
                                        }
                                    }
                                ]
                            }
                        },
                        {
                            "@name": "get_formats",
                            "@c:identifier": "gdk_pixbuf_get_formats",
                            "@version": "2.2",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../gdk-pixbuf/gdk-pixbuf-io.c",
                                "@line": "3426",
                                "#text": "Obtains the available information about the image formats supported\nby GdkPixbuf."
                            },
                            "source-position": {
                                "@filename": "../gdk-pixbuf/gdk-pixbuf-io.h",
                                "@line": "52"
                            },
                            "return-value": {
                                "@transfer-ownership": "container",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "../gdk-pixbuf/gdk-pixbuf-io.c",
                                    "@line": "3432",
                                    "#text": "A list of\n  support image formats."
                                },
                                "type": {
                                    "@name": "GLib.SList",
                                    "@c:type": "GSList*",
                                    "type": {
                                        "@name": "PixbufFormat"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "init_modules",
                            "@c:identifier": "gdk_pixbuf_init_modules",
                            "@version": "2.40",
                            "@throws": "1",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../gdk-pixbuf/gdk-pixbuf-io.c",
                                "@line": "561",
                                "#text": "Initalizes the gdk-pixbuf loader modules referenced by the `loaders.cache`\nfile present inside that directory.\n\nThis is to be used by applications that want to ship certain loaders\nin a different location from the system ones.\n\nThis is needed when the OS or runtime ships a minimal number of loaders\nso as to reduce the potential attack surface of carefully crafted image\nfiles, especially for uncommon file types. Applications that require\nbroader image file types coverage, such as image viewers, would be\nexpected to ship the gdk-pixbuf modules in a separate location, bundled\nwith the application in a separate directory from the OS or runtime-\nprovided modules."
                            },
                            "source-position": {
                                "@filename": "../gdk-pixbuf/gdk-pixbuf-io.h",
                                "@line": "45"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "type": {
                                    "@name": "gboolean",
                                    "@c:type": "gboolean"
                                }
                            },
                            "parameters": {
                                "parameter": {
                                    "@name": "path",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../gdk-pixbuf/gdk-pixbuf-io.c",
                                        "@line": "563",
                                        "#text": "Path to directory where the `loaders.cache` is installed"
                                    },
                                    "type": {
                                        "@name": "utf8",
                                        "@c:type": "const char*"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "new_from_stream_async",
                            "@c:identifier": "gdk_pixbuf_new_from_stream_async",
                            "@version": "2.24",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../gdk-pixbuf/gdk-pixbuf-io.c",
                                "@line": "1872",
                                "#text": "Creates a new pixbuf by asynchronously loading an image from an input stream.\n\nFor more details see gdk_pixbuf_new_from_stream(), which is the synchronous\nversion of this function.\n\nWhen the operation is finished, @callback will be called in the main thread.\nYou can then call gdk_pixbuf_new_from_stream_finish() to get the result of\nthe operation."
                            },
                            "source-position": {
                                "@filename": "../gdk-pixbuf/gdk-pixbuf-core.h",
                                "@line": "414"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "type": {
                                    "@name": "none",
                                    "@c:type": "void"
                                }
                            },
                            "parameters": {
                                "parameter": [
                                    {
                                        "@name": "stream",
                                        "@transfer-ownership": "none",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "../gdk-pixbuf/gdk-pixbuf-io.c",
                                            "@line": "1874",
                                            "#text": "a `GInputStream` from which to load the pixbuf"
                                        },
                                        "type": {
                                            "@name": "Gio.InputStream",
                                            "@c:type": "GInputStream*"
                                        }
                                    },
                                    {
                                        "@name": "cancellable",
                                        "@transfer-ownership": "none",
                                        "@nullable": "1",
                                        "@allow-none": "1",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "../gdk-pixbuf/gdk-pixbuf-io.c",
                                            "@line": "1875",
                                            "#text": "optional `GCancellable` object, `NULL` to ignore"
                                        },
                                        "type": {
                                            "@name": "Gio.Cancellable",
                                            "@c:type": "GCancellable*"
                                        }
                                    },
                                    {
                                        "@name": "callback",
                                        "@transfer-ownership": "none",
                                        "@nullable": "1",
                                        "@allow-none": "1",
                                        "@scope": "async",
                                        "@closure": "3",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "../gdk-pixbuf/gdk-pixbuf-io.c",
                                            "@line": "1876",
                                            "#text": "a `GAsyncReadyCallback` to call when the pixbuf is loaded"
                                        },
                                        "type": {
                                            "@name": "Gio.AsyncReadyCallback",
                                            "@c:type": "GAsyncReadyCallback"
                                        }
                                    },
                                    {
                                        "@name": "user_data",
                                        "@transfer-ownership": "none",
                                        "@nullable": "1",
                                        "@allow-none": "1",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "../gdk-pixbuf/gdk-pixbuf-io.c",
                                            "@line": "1877",
                                            "#text": "the data to pass to the callback function"
                                        },
                                        "type": {
                                            "@name": "gpointer",
                                            "@c:type": "gpointer"
                                        }
                                    }
                                ]
                            }
                        },
                        {
                            "@name": "new_from_stream_at_scale_async",
                            "@c:identifier": "gdk_pixbuf_new_from_stream_at_scale_async",
                            "@version": "2.24",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../gdk-pixbuf/gdk-pixbuf-io.c",
                                "@line": "1655",
                                "#text": "Creates a new pixbuf by asynchronously loading an image from an input stream.\n\nFor more details see gdk_pixbuf_new_from_stream_at_scale(), which is the synchronous\nversion of this function.\n\nWhen the operation is finished, @callback will be called in the main thread.\nYou can then call gdk_pixbuf_new_from_stream_finish() to get the result of the operation."
                            },
                            "source-position": {
                                "@filename": "../gdk-pixbuf/gdk-pixbuf-core.h",
                                "@line": "432"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "type": {
                                    "@name": "none",
                                    "@c:type": "void"
                                }
                            },
                            "parameters": {
                                "parameter": [
                                    {
                                        "@name": "stream",
                                        "@transfer-ownership": "none",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "../gdk-pixbuf/gdk-pixbuf-io.c",
                                            "@line": "1657",
                                            "#text": "a `GInputStream` from which to load the pixbuf"
                                        },
                                        "type": {
                                            "@name": "Gio.InputStream",
                                            "@c:type": "GInputStream*"
                                        }
                                    },
                                    {
                                        "@name": "width",
                                        "@transfer-ownership": "none",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "../gdk-pixbuf/gdk-pixbuf-io.c",
                                            "@line": "1658",
                                            "#text": "the width the image should have or -1 to not constrain the width"
                                        },
                                        "type": {
                                            "@name": "gint",
                                            "@c:type": "gint"
                                        }
                                    },
                                    {
                                        "@name": "height",
                                        "@transfer-ownership": "none",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "../gdk-pixbuf/gdk-pixbuf-io.c",
                                            "@line": "1659",
                                            "#text": "the height the image should have or -1 to not constrain the height"
                                        },
                                        "type": {
                                            "@name": "gint",
                                            "@c:type": "gint"
                                        }
                                    },
                                    {
                                        "@name": "preserve_aspect_ratio",
                                        "@transfer-ownership": "none",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "../gdk-pixbuf/gdk-pixbuf-io.c",
                                            "@line": "1660",
                                            "#text": "`TRUE` to preserve the image's aspect ratio"
                                        },
                                        "type": {
                                            "@name": "gboolean",
                                            "@c:type": "gboolean"
                                        }
                                    },
                                    {
                                        "@name": "cancellable",
                                        "@transfer-ownership": "none",
                                        "@nullable": "1",
                                        "@allow-none": "1",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "../gdk-pixbuf/gdk-pixbuf-io.c",
                                            "@line": "1661",
                                            "#text": "optional `GCancellable` object, `NULL` to ignore"
                                        },
                                        "type": {
                                            "@name": "Gio.Cancellable",
                                            "@c:type": "GCancellable*"
                                        }
                                    },
                                    {
                                        "@name": "callback",
                                        "@transfer-ownership": "none",
                                        "@nullable": "1",
                                        "@allow-none": "1",
                                        "@scope": "async",
                                        "@closure": "6",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "../gdk-pixbuf/gdk-pixbuf-io.c",
                                            "@line": "1662",
                                            "#text": "a `GAsyncReadyCallback` to call when the pixbuf is loaded"
                                        },
                                        "type": {
                                            "@name": "Gio.AsyncReadyCallback",
                                            "@c:type": "GAsyncReadyCallback"
                                        }
                                    },
                                    {
                                        "@name": "user_data",
                                        "@transfer-ownership": "none",
                                        "@nullable": "1",
                                        "@allow-none": "1",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "../gdk-pixbuf/gdk-pixbuf-io.c",
                                            "@line": "1663",
                                            "#text": "the data to pass to the callback function"
                                        },
                                        "type": {
                                            "@name": "gpointer",
                                            "@c:type": "gpointer"
                                        }
                                    }
                                ]
                            }
                        },
                        {
                            "@name": "save_to_stream_finish",
                            "@c:identifier": "gdk_pixbuf_save_to_stream_finish",
                            "@version": "2.24",
                            "@throws": "1",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../gdk-pixbuf/gdk-pixbuf-io.c",
                                "@line": "3199",
                                "#text": "Finishes an asynchronous pixbuf save operation started with\ngdk_pixbuf_save_to_stream_async()."
                            },
                            "source-position": {
                                "@filename": "../gdk-pixbuf/gdk-pixbuf-core.h",
                                "@line": "458"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "../gdk-pixbuf/gdk-pixbuf-io.c",
                                    "@line": "3207",
                                    "#text": "`TRUE` if the pixbuf was saved successfully, `FALSE` if an error was set."
                                },
                                "type": {
                                    "@name": "gboolean",
                                    "@c:type": "gboolean"
                                }
                            },
                            "parameters": {
                                "parameter": {
                                    "@name": "async_result",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../gdk-pixbuf/gdk-pixbuf-io.c",
                                        "@line": "3201",
                                        "#text": "a `GAsyncResult`"
                                    },
                                    "type": {
                                        "@name": "Gio.AsyncResult",
                                        "@c:type": "GAsyncResult*"
                                    }
                                }
                            }
                        }
                    ],
                    "method": [
                        {
                            "@name": "add_alpha",
                            "@c:identifier": "gdk_pixbuf_add_alpha",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../gdk-pixbuf/gdk-pixbuf-util.c",
                                "@line": "29",
                                "#text": "Takes an existing pixbuf and adds an alpha channel to it.\n\nIf the existing pixbuf already had an alpha channel, the channel\nvalues are copied from the original; otherwise, the alpha channel\nis initialized to 255 (full opacity).\n\nIf `substitute_color` is `TRUE`, then the color specified by the\n(`r`, `g`, `b`) arguments will be assigned zero opacity. That is,\nif you pass `(255, 255, 255)` for the substitute color, all white\npixels will become fully transparent.\n\nIf `substitute_color` is `FALSE`, then the (`r`, `g`, `b`) arguments\nwill be ignored."
                            },
                            "source-position": {
                                "@filename": "../gdk-pixbuf/gdk-pixbuf-core.h",
                                "@line": "482"
                            },
                            "return-value": {
                                "@transfer-ownership": "full",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "../gdk-pixbuf/gdk-pixbuf-util.c",
                                    "@line": "51",
                                    "#text": "A newly-created pixbuf"
                                },
                                "type": {
                                    "@name": "Pixbuf",
                                    "@c:type": "GdkPixbuf*"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "pixbuf",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../gdk-pixbuf/gdk-pixbuf-util.c",
                                        "@line": "31",
                                        "#text": "A #GdkPixbuf."
                                    },
                                    "type": {
                                        "@name": "Pixbuf",
                                        "@c:type": "const GdkPixbuf*"
                                    }
                                },
                                "parameter": [
                                    {
                                        "@name": "substitute_color",
                                        "@transfer-ownership": "none",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "../gdk-pixbuf/gdk-pixbuf-util.c",
                                            "@line": "32",
                                            "#text": "Whether to set a color to zero opacity."
                                        },
                                        "type": {
                                            "@name": "gboolean",
                                            "@c:type": "gboolean"
                                        }
                                    },
                                    {
                                        "@name": "r",
                                        "@transfer-ownership": "none",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "../gdk-pixbuf/gdk-pixbuf-util.c",
                                            "@line": "33",
                                            "#text": "Red value to substitute."
                                        },
                                        "type": {
                                            "@name": "guint8",
                                            "@c:type": "guchar"
                                        }
                                    },
                                    {
                                        "@name": "g",
                                        "@transfer-ownership": "none",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "../gdk-pixbuf/gdk-pixbuf-util.c",
                                            "@line": "34",
                                            "#text": "Green value to substitute."
                                        },
                                        "type": {
                                            "@name": "guint8",
                                            "@c:type": "guchar"
                                        }
                                    },
                                    {
                                        "@name": "b",
                                        "@transfer-ownership": "none",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "../gdk-pixbuf/gdk-pixbuf-util.c",
                                            "@line": "35",
                                            "#text": "Blue value to substitute."
                                        },
                                        "type": {
                                            "@name": "guint8",
                                            "@c:type": "guchar"
                                        }
                                    }
                                ]
                            }
                        },
                        {
                            "@name": "apply_embedded_orientation",
                            "@c:identifier": "gdk_pixbuf_apply_embedded_orientation",
                            "@version": "2.12",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../gdk-pixbuf/gdk-pixbuf-util.c",
                                "@line": "273",
                                "#text": "Takes an existing pixbuf and checks for the presence of an\nassociated \"orientation\" option.\n\nThe orientation option may be provided by the JPEG loader (which\nreads the exif orientation tag) or the TIFF loader (which reads\nthe TIFF orientation tag, and compensates it for the partial\ntransforms performed by libtiff).\n\nIf an orientation option/tag is present, the appropriate transform\nwill be performed so that the pixbuf is oriented correctly."
                            },
                            "source-position": {
                                "@filename": "../gdk-pixbuf/gdk-pixbuf-core.h",
                                "@line": "502"
                            },
                            "return-value": {
                                "@transfer-ownership": "full",
                                "@nullable": "1",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "../gdk-pixbuf/gdk-pixbuf-util.c",
                                    "@line": "288",
                                    "#text": "A newly-created pixbuf"
                                },
                                "type": {
                                    "@name": "Pixbuf",
                                    "@c:type": "GdkPixbuf*"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "src",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../gdk-pixbuf/gdk-pixbuf-util.c",
                                        "@line": "275",
                                        "#text": "a pixbuf with an orientation option"
                                    },
                                    "type": {
                                        "@name": "Pixbuf",
                                        "@c:type": "GdkPixbuf*"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "composite",
                            "@c:identifier": "gdk_pixbuf_composite",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../gdk-pixbuf/gdk-pixbuf-scale.c",
                                "@line": "91",
                                "#text": "Creates a transformation of the source image @src by scaling by\n@scale_x and @scale_y then translating by @offset_x and @offset_y.\n\nThis gives an image in the coordinates of the destination pixbuf.\nThe rectangle (@dest_x, @dest_y, @dest_width, @dest_height)\nis then alpha blended onto the corresponding rectangle of the\noriginal destination image.\n\nWhen the destination rectangle contains parts not in the source\nimage, the data at the edges of the source image is replicated\nto infinity.\n\n![](composite.png)"
                            },
                            "source-position": {
                                "@filename": "../gdk-pixbuf/gdk-pixbuf-transform.h",
                                "@line": "111"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "type": {
                                    "@name": "none",
                                    "@c:type": "void"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "src",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../gdk-pixbuf/gdk-pixbuf-scale.c",
                                        "@line": "93",
                                        "#text": "a #GdkPixbuf"
                                    },
                                    "type": {
                                        "@name": "Pixbuf",
                                        "@c:type": "const GdkPixbuf*"
                                    }
                                },
                                "parameter": [
                                    {
                                        "@name": "dest",
                                        "@transfer-ownership": "none",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "../gdk-pixbuf/gdk-pixbuf-scale.c",
                                            "@line": "94",
                                            "#text": "the #GdkPixbuf into which to render the results"
                                        },
                                        "type": {
                                            "@name": "Pixbuf",
                                            "@c:type": "GdkPixbuf*"
                                        }
                                    },
                                    {
                                        "@name": "dest_x",
                                        "@transfer-ownership": "none",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "../gdk-pixbuf/gdk-pixbuf-scale.c",
                                            "@line": "95",
                                            "#text": "the left coordinate for region to render"
                                        },
                                        "type": {
                                            "@name": "gint",
                                            "@c:type": "int"
                                        }
                                    },
                                    {
                                        "@name": "dest_y",
                                        "@transfer-ownership": "none",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "../gdk-pixbuf/gdk-pixbuf-scale.c",
                                            "@line": "96",
                                            "#text": "the top coordinate for region to render"
                                        },
                                        "type": {
                                            "@name": "gint",
                                            "@c:type": "int"
                                        }
                                    },
                                    {
                                        "@name": "dest_width",
                                        "@transfer-ownership": "none",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "../gdk-pixbuf/gdk-pixbuf-scale.c",
                                            "@line": "97",
                                            "#text": "the width of the region to render"
                                        },
                                        "type": {
                                            "@name": "gint",
                                            "@c:type": "int"
                                        }
                                    },
                                    {
                                        "@name": "dest_height",
                                        "@transfer-ownership": "none",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "../gdk-pixbuf/gdk-pixbuf-scale.c",
                                            "@line": "98",
                                            "#text": "the height of the region to render"
                                        },
                                        "type": {
                                            "@name": "gint",
                                            "@c:type": "int"
                                        }
                                    },
                                    {
                                        "@name": "offset_x",
                                        "@transfer-ownership": "none",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "../gdk-pixbuf/gdk-pixbuf-scale.c",
                                            "@line": "99",
                                            "#text": "the offset in the X direction (currently rounded to an integer)"
                                        },
                                        "type": {
                                            "@name": "gdouble",
                                            "@c:type": "double"
                                        }
                                    },
                                    {
                                        "@name": "offset_y",
                                        "@transfer-ownership": "none",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "../gdk-pixbuf/gdk-pixbuf-scale.c",
                                            "@line": "100",
                                            "#text": "the offset in the Y direction (currently rounded to an integer)"
                                        },
                                        "type": {
                                            "@name": "gdouble",
                                            "@c:type": "double"
                                        }
                                    },
                                    {
                                        "@name": "scale_x",
                                        "@transfer-ownership": "none",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "../gdk-pixbuf/gdk-pixbuf-scale.c",
                                            "@line": "101",
                                            "#text": "the scale factor in the X direction"
                                        },
                                        "type": {
                                            "@name": "gdouble",
                                            "@c:type": "double"
                                        }
                                    },
                                    {
                                        "@name": "scale_y",
                                        "@transfer-ownership": "none",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "../gdk-pixbuf/gdk-pixbuf-scale.c",
                                            "@line": "102",
                                            "#text": "the scale factor in the Y direction"
                                        },
                                        "type": {
                                            "@name": "gdouble",
                                            "@c:type": "double"
                                        }
                                    },
                                    {
                                        "@name": "interp_type",
                                        "@transfer-ownership": "none",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "../gdk-pixbuf/gdk-pixbuf-scale.c",
                                            "@line": "103",
                                            "#text": "the interpolation type for the transformation."
                                        },
                                        "type": {
                                            "@name": "InterpType",
                                            "@c:type": "GdkInterpType"
                                        }
                                    },
                                    {
                                        "@name": "overall_alpha",
                                        "@transfer-ownership": "none",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "../gdk-pixbuf/gdk-pixbuf-scale.c",
                                            "@line": "104",
                                            "#text": "overall alpha for source image (0..255)"
                                        },
                                        "type": {
                                            "@name": "gint",
                                            "@c:type": "int"
                                        }
                                    }
                                ]
                            }
                        },
                        {
                            "@name": "composite_color",
                            "@c:identifier": "gdk_pixbuf_composite_color",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../gdk-pixbuf/gdk-pixbuf-scale.c",
                                "@line": "158",
                                "#text": "Creates a transformation of the source image @src by scaling by\n@scale_x and @scale_y then translating by @offset_x and @offset_y,\nthen alpha blends the rectangle (@dest_x ,@dest_y, @dest_width,\n@dest_height) of the resulting image with a checkboard of the\ncolors @color1 and @color2 and renders it onto the destination\nimage.\n\nIf the source image has no alpha channel, and @overall_alpha is 255, a fast\npath is used which omits the alpha blending and just performs the scaling.\n\nSee gdk_pixbuf_composite_color_simple() for a simpler variant of this\nfunction suitable for many tasks."
                            },
                            "source-position": {
                                "@filename": "../gdk-pixbuf/gdk-pixbuf-transform.h",
                                "@line": "124"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "type": {
                                    "@name": "none",
                                    "@c:type": "void"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "src",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../gdk-pixbuf/gdk-pixbuf-scale.c",
                                        "@line": "160",
                                        "#text": "a #GdkPixbuf"
                                    },
                                    "type": {
                                        "@name": "Pixbuf",
                                        "@c:type": "const GdkPixbuf*"
                                    }
                                },
                                "parameter": [
                                    {
                                        "@name": "dest",
                                        "@transfer-ownership": "none",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "../gdk-pixbuf/gdk-pixbuf-scale.c",
                                            "@line": "161",
                                            "#text": "the #GdkPixbuf into which to render the results"
                                        },
                                        "type": {
                                            "@name": "Pixbuf",
                                            "@c:type": "GdkPixbuf*"
                                        }
                                    },
                                    {
                                        "@name": "dest_x",
                                        "@transfer-ownership": "none",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "../gdk-pixbuf/gdk-pixbuf-scale.c",
                                            "@line": "162",
                                            "#text": "the left coordinate for region to render"
                                        },
                                        "type": {
                                            "@name": "gint",
                                            "@c:type": "int"
                                        }
                                    },
                                    {
                                        "@name": "dest_y",
                                        "@transfer-ownership": "none",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "../gdk-pixbuf/gdk-pixbuf-scale.c",
                                            "@line": "163",
                                            "#text": "the top coordinate for region to render"
                                        },
                                        "type": {
                                            "@name": "gint",
                                            "@c:type": "int"
                                        }
                                    },
                                    {
                                        "@name": "dest_width",
                                        "@transfer-ownership": "none",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "../gdk-pixbuf/gdk-pixbuf-scale.c",
                                            "@line": "164",
                                            "#text": "the width of the region to render"
                                        },
                                        "type": {
                                            "@name": "gint",
                                            "@c:type": "int"
                                        }
                                    },
                                    {
                                        "@name": "dest_height",
                                        "@transfer-ownership": "none",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "../gdk-pixbuf/gdk-pixbuf-scale.c",
                                            "@line": "165",
                                            "#text": "the height of the region to render"
                                        },
                                        "type": {
                                            "@name": "gint",
                                            "@c:type": "int"
                                        }
                                    },
                                    {
                                        "@name": "offset_x",
                                        "@transfer-ownership": "none",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "../gdk-pixbuf/gdk-pixbuf-scale.c",
                                            "@line": "166",
                                            "#text": "the offset in the X direction (currently rounded to an integer)"
                                        },
                                        "type": {
                                            "@name": "gdouble",
                                            "@c:type": "double"
                                        }
                                    },
                                    {
                                        "@name": "offset_y",
                                        "@transfer-ownership": "none",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "../gdk-pixbuf/gdk-pixbuf-scale.c",
                                            "@line": "167",
                                            "#text": "the offset in the Y direction (currently rounded to an integer)"
                                        },
                                        "type": {
                                            "@name": "gdouble",
                                            "@c:type": "double"
                                        }
                                    },
                                    {
                                        "@name": "scale_x",
                                        "@transfer-ownership": "none",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "../gdk-pixbuf/gdk-pixbuf-scale.c",
                                            "@line": "168",
                                            "#text": "the scale factor in the X direction"
                                        },
                                        "type": {
                                            "@name": "gdouble",
                                            "@c:type": "double"
                                        }
                                    },
                                    {
                                        "@name": "scale_y",
                                        "@transfer-ownership": "none",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "../gdk-pixbuf/gdk-pixbuf-scale.c",
                                            "@line": "169",
                                            "#text": "the scale factor in the Y direction"
                                        },
                                        "type": {
                                            "@name": "gdouble",
                                            "@c:type": "double"
                                        }
                                    },
                                    {
                                        "@name": "interp_type",
                                        "@transfer-ownership": "none",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "../gdk-pixbuf/gdk-pixbuf-scale.c",
                                            "@line": "170",
                                            "#text": "the interpolation type for the transformation."
                                        },
                                        "type": {
                                            "@name": "InterpType",
                                            "@c:type": "GdkInterpType"
                                        }
                                    },
                                    {
                                        "@name": "overall_alpha",
                                        "@transfer-ownership": "none",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "../gdk-pixbuf/gdk-pixbuf-scale.c",
                                            "@line": "171",
                                            "#text": "overall alpha for source image (0..255)"
                                        },
                                        "type": {
                                            "@name": "gint",
                                            "@c:type": "int"
                                        }
                                    },
                                    {
                                        "@name": "check_x",
                                        "@transfer-ownership": "none",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "../gdk-pixbuf/gdk-pixbuf-scale.c",
                                            "@line": "172",
                                            "#text": "the X offset for the checkboard (origin of checkboard is at -@check_x, -@check_y)"
                                        },
                                        "type": {
                                            "@name": "gint",
                                            "@c:type": "int"
                                        }
                                    },
                                    {
                                        "@name": "check_y",
                                        "@transfer-ownership": "none",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "../gdk-pixbuf/gdk-pixbuf-scale.c",
                                            "@line": "173",
                                            "#text": "the Y offset for the checkboard"
                                        },
                                        "type": {
                                            "@name": "gint",
                                            "@c:type": "int"
                                        }
                                    },
                                    {
                                        "@name": "check_size",
                                        "@transfer-ownership": "none",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "../gdk-pixbuf/gdk-pixbuf-scale.c",
                                            "@line": "174",
                                            "#text": "the size of checks in the checkboard (must be a power of two)"
                                        },
                                        "type": {
                                            "@name": "gint",
                                            "@c:type": "int"
                                        }
                                    },
                                    {
                                        "@name": "color1",
                                        "@transfer-ownership": "none",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "../gdk-pixbuf/gdk-pixbuf-scale.c",
                                            "@line": "175",
                                            "#text": "the color of check at upper left"
                                        },
                                        "type": {
                                            "@name": "guint32",
                                            "@c:type": "guint32"
                                        }
                                    },
                                    {
                                        "@name": "color2",
                                        "@transfer-ownership": "none",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "../gdk-pixbuf/gdk-pixbuf-scale.c",
                                            "@line": "176",
                                            "#text": "the color of the other check"
                                        },
                                        "type": {
                                            "@name": "guint32",
                                            "@c:type": "guint32"
                                        }
                                    }
                                ]
                            }
                        },
                        {
                            "@name": "composite_color_simple",
                            "@c:identifier": "gdk_pixbuf_composite_color_simple",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../gdk-pixbuf/gdk-pixbuf-scale.c",
                                "@line": "292",
                                "#text": "Creates a new pixbuf by scaling `src` to `dest_width` x `dest_height`\nand alpha blending the result with a checkboard of colors `color1`\nand `color2`."
                            },
                            "source-position": {
                                "@filename": "../gdk-pixbuf/gdk-pixbuf-transform.h",
                                "@line": "149"
                            },
                            "return-value": {
                                "@transfer-ownership": "full",
                                "@nullable": "1",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "../gdk-pixbuf/gdk-pixbuf-scale.c",
                                    "@line": "307",
                                    "#text": "the new pixbuf"
                                },
                                "type": {
                                    "@name": "Pixbuf",
                                    "@c:type": "GdkPixbuf*"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "src",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../gdk-pixbuf/gdk-pixbuf-scale.c",
                                        "@line": "294",
                                        "#text": "a #GdkPixbuf"
                                    },
                                    "type": {
                                        "@name": "Pixbuf",
                                        "@c:type": "const GdkPixbuf*"
                                    }
                                },
                                "parameter": [
                                    {
                                        "@name": "dest_width",
                                        "@transfer-ownership": "none",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "../gdk-pixbuf/gdk-pixbuf-scale.c",
                                            "@line": "295",
                                            "#text": "the width of destination image"
                                        },
                                        "type": {
                                            "@name": "gint",
                                            "@c:type": "int"
                                        }
                                    },
                                    {
                                        "@name": "dest_height",
                                        "@transfer-ownership": "none",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "../gdk-pixbuf/gdk-pixbuf-scale.c",
                                            "@line": "296",
                                            "#text": "the height of destination image"
                                        },
                                        "type": {
                                            "@name": "gint",
                                            "@c:type": "int"
                                        }
                                    },
                                    {
                                        "@name": "interp_type",
                                        "@transfer-ownership": "none",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "../gdk-pixbuf/gdk-pixbuf-scale.c",
                                            "@line": "297",
                                            "#text": "the interpolation type for the transformation."
                                        },
                                        "type": {
                                            "@name": "InterpType",
                                            "@c:type": "GdkInterpType"
                                        }
                                    },
                                    {
                                        "@name": "overall_alpha",
                                        "@transfer-ownership": "none",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "../gdk-pixbuf/gdk-pixbuf-scale.c",
                                            "@line": "298",
                                            "#text": "overall alpha for source image (0..255)"
                                        },
                                        "type": {
                                            "@name": "gint",
                                            "@c:type": "int"
                                        }
                                    },
                                    {
                                        "@name": "check_size",
                                        "@transfer-ownership": "none",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "../gdk-pixbuf/gdk-pixbuf-scale.c",
                                            "@line": "299",
                                            "#text": "the size of checks in the checkboard (must be a power of two)"
                                        },
                                        "type": {
                                            "@name": "gint",
                                            "@c:type": "int"
                                        }
                                    },
                                    {
                                        "@name": "color1",
                                        "@transfer-ownership": "none",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "../gdk-pixbuf/gdk-pixbuf-scale.c",
                                            "@line": "300",
                                            "#text": "the color of check at upper left"
                                        },
                                        "type": {
                                            "@name": "guint32",
                                            "@c:type": "guint32"
                                        }
                                    },
                                    {
                                        "@name": "color2",
                                        "@transfer-ownership": "none",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "../gdk-pixbuf/gdk-pixbuf-scale.c",
                                            "@line": "301",
                                            "#text": "the color of the other check"
                                        },
                                        "type": {
                                            "@name": "guint32",
                                            "@c:type": "guint32"
                                        }
                                    }
                                ]
                            }
                        },
                        {
                            "@name": "copy",
                            "@c:identifier": "gdk_pixbuf_copy",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../gdk-pixbuf/gdk-pixbuf.c",
                                "@line": "643",
                                "#text": "Creates a new `GdkPixbuf` with a copy of the information in the specified\n`pixbuf`.\n\nNote that this does not copy the options set on the original `GdkPixbuf`,\nuse gdk_pixbuf_copy_options() for this."
                            },
                            "source-position": {
                                "@filename": "../gdk-pixbuf/gdk-pixbuf-core.h",
                                "@line": "218"
                            },
                            "return-value": {
                                "@transfer-ownership": "full",
                                "@nullable": "1",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "../gdk-pixbuf/gdk-pixbuf.c",
                                    "@line": "653",
                                    "#text": "A newly-created pixbuf"
                                },
                                "type": {
                                    "@name": "Pixbuf",
                                    "@c:type": "GdkPixbuf*"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "pixbuf",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../gdk-pixbuf/gdk-pixbuf.c",
                                        "@line": "645",
                                        "#text": "A pixbuf."
                                    },
                                    "type": {
                                        "@name": "Pixbuf",
                                        "@c:type": "const GdkPixbuf*"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "copy_area",
                            "@c:identifier": "gdk_pixbuf_copy_area",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../gdk-pixbuf/gdk-pixbuf-util.c",
                                "@line": "121",
                                "#text": "Copies a rectangular area from `src_pixbuf` to `dest_pixbuf`.\n\nConversion of pixbuf formats is done automatically.\n\nIf the source rectangle overlaps the destination rectangle on the\nsame pixbuf, it will be overwritten during the copy operation.\nTherefore, you can not use this function to scroll a pixbuf."
                            },
                            "source-position": {
                                "@filename": "../gdk-pixbuf/gdk-pixbuf-core.h",
                                "@line": "487"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "type": {
                                    "@name": "none",
                                    "@c:type": "void"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "src_pixbuf",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../gdk-pixbuf/gdk-pixbuf-util.c",
                                        "@line": "123",
                                        "#text": "Source pixbuf."
                                    },
                                    "type": {
                                        "@name": "Pixbuf",
                                        "@c:type": "const GdkPixbuf*"
                                    }
                                },
                                "parameter": [
                                    {
                                        "@name": "src_x",
                                        "@transfer-ownership": "none",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "../gdk-pixbuf/gdk-pixbuf-util.c",
                                            "@line": "124",
                                            "#text": "Source X coordinate within @src_pixbuf."
                                        },
                                        "type": {
                                            "@name": "gint",
                                            "@c:type": "int"
                                        }
                                    },
                                    {
                                        "@name": "src_y",
                                        "@transfer-ownership": "none",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "../gdk-pixbuf/gdk-pixbuf-util.c",
                                            "@line": "125",
                                            "#text": "Source Y coordinate within @src_pixbuf."
                                        },
                                        "type": {
                                            "@name": "gint",
                                            "@c:type": "int"
                                        }
                                    },
                                    {
                                        "@name": "width",
                                        "@transfer-ownership": "none",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "../gdk-pixbuf/gdk-pixbuf-util.c",
                                            "@line": "126",
                                            "#text": "Width of the area to copy."
                                        },
                                        "type": {
                                            "@name": "gint",
                                            "@c:type": "int"
                                        }
                                    },
                                    {
                                        "@name": "height",
                                        "@transfer-ownership": "none",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "../gdk-pixbuf/gdk-pixbuf-util.c",
                                            "@line": "127",
                                            "#text": "Height of the area to copy."
                                        },
                                        "type": {
                                            "@name": "gint",
                                            "@c:type": "int"
                                        }
                                    },
                                    {
                                        "@name": "dest_pixbuf",
                                        "@transfer-ownership": "none",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "../gdk-pixbuf/gdk-pixbuf-util.c",
                                            "@line": "128",
                                            "#text": "Destination pixbuf."
                                        },
                                        "type": {
                                            "@name": "Pixbuf",
                                            "@c:type": "GdkPixbuf*"
                                        }
                                    },
                                    {
                                        "@name": "dest_x",
                                        "@transfer-ownership": "none",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "../gdk-pixbuf/gdk-pixbuf-util.c",
                                            "@line": "129",
                                            "#text": "X coordinate within @dest_pixbuf."
                                        },
                                        "type": {
                                            "@name": "gint",
                                            "@c:type": "int"
                                        }
                                    },
                                    {
                                        "@name": "dest_y",
                                        "@transfer-ownership": "none",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "../gdk-pixbuf/gdk-pixbuf-util.c",
                                            "@line": "130",
                                            "#text": "Y coordinate within @dest_pixbuf."
                                        },
                                        "type": {
                                            "@name": "gint",
                                            "@c:type": "int"
                                        }
                                    }
                                ]
                            }
                        },
                        {
                            "@name": "copy_options",
                            "@c:identifier": "gdk_pixbuf_copy_options",
                            "@version": "2.36",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../gdk-pixbuf/gdk-pixbuf.c",
                                "@line": "1311",
                                "#text": "Copies the key/value pair options attached to a `GdkPixbuf` to another\n`GdkPixbuf`.\n\nThis is useful to keep original metadata after having manipulated\na file. However be careful to remove metadata which you've already\napplied, such as the \"orientation\" option after rotating the image."
                            },
                            "source-position": {
                                "@filename": "../gdk-pixbuf/gdk-pixbuf-core.h",
                                "@line": "518"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "../gdk-pixbuf/gdk-pixbuf.c",
                                    "@line": "1323",
                                    "#text": "`TRUE` on success."
                                },
                                "type": {
                                    "@name": "gboolean",
                                    "@c:type": "gboolean"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "src_pixbuf",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../gdk-pixbuf/gdk-pixbuf.c",
                                        "@line": "1313",
                                        "#text": "the source pixbuf"
                                    },
                                    "type": {
                                        "@name": "Pixbuf",
                                        "@c:type": "GdkPixbuf*"
                                    }
                                },
                                "parameter": {
                                    "@name": "dest_pixbuf",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../gdk-pixbuf/gdk-pixbuf.c",
                                        "@line": "1314",
                                        "#text": "the destination pixbuf"
                                    },
                                    "type": {
                                        "@name": "Pixbuf",
                                        "@c:type": "GdkPixbuf*"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "fill",
                            "@c:identifier": "gdk_pixbuf_fill",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../gdk-pixbuf/gdk-pixbuf.c",
                                "@line": "1043",
                                "#text": "Clears a pixbuf to the given RGBA value, converting the RGBA value into\nthe pixbuf's pixel format.\n\nThe alpha component will be ignored if the pixbuf doesn't have an alpha\nchannel."
                            },
                            "source-position": {
                                "@filename": "../gdk-pixbuf/gdk-pixbuf-core.h",
                                "@line": "306"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "type": {
                                    "@name": "none",
                                    "@c:type": "void"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "pixbuf",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../gdk-pixbuf/gdk-pixbuf.c",
                                        "@line": "1045",
                                        "#text": "a `GdkPixbuf`"
                                    },
                                    "type": {
                                        "@name": "Pixbuf",
                                        "@c:type": "GdkPixbuf*"
                                    }
                                },
                                "parameter": {
                                    "@name": "pixel",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../gdk-pixbuf/gdk-pixbuf.c",
                                        "@line": "1046",
                                        "#text": "RGBA pixel to used to clear (`0xffffffff` is opaque white,\n  `0x00000000` transparent black)"
                                    },
                                    "type": {
                                        "@name": "guint32",
                                        "@c:type": "guint32"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "flip",
                            "@c:identifier": "gdk_pixbuf_flip",
                            "@version": "2.6",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../gdk-pixbuf/gdk-pixbuf-scale.c",
                                "@line": "446",
                                "#text": "Flips a pixbuf horizontally or vertically and returns the\nresult in a new pixbuf."
                            },
                            "source-position": {
                                "@filename": "../gdk-pixbuf/gdk-pixbuf-transform.h",
                                "@line": "162"
                            },
                            "return-value": {
                                "@transfer-ownership": "full",
                                "@nullable": "1",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "../gdk-pixbuf/gdk-pixbuf-scale.c",
                                    "@line": "454",
                                    "#text": "the new pixbuf"
                                },
                                "type": {
                                    "@name": "Pixbuf",
                                    "@c:type": "GdkPixbuf*"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "src",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../gdk-pixbuf/gdk-pixbuf-scale.c",
                                        "@line": "448",
                                        "#text": "a #GdkPixbuf"
                                    },
                                    "type": {
                                        "@name": "Pixbuf",
                                        "@c:type": "const GdkPixbuf*"
                                    }
                                },
                                "parameter": {
                                    "@name": "horizontal",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../gdk-pixbuf/gdk-pixbuf-scale.c",
                                        "@line": "449",
                                        "#text": "`TRUE` to flip horizontally, `FALSE` to flip vertically"
                                    },
                                    "type": {
                                        "@name": "gboolean",
                                        "@c:type": "gboolean"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "get_bits_per_sample",
                            "@c:identifier": "gdk_pixbuf_get_bits_per_sample",
                            "@glib:get-property": "bits-per-sample",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../gdk-pixbuf/gdk-pixbuf.c",
                                "@line": "795",
                                "#text": "Queries the number of bits per color sample in a pixbuf."
                            },
                            "source-position": {
                                "@filename": "../gdk-pixbuf/gdk-pixbuf-core.h",
                                "@line": "180"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "../gdk-pixbuf/gdk-pixbuf.c",
                                    "@line": "801",
                                    "#text": "Number of bits per color sample."
                                },
                                "type": {
                                    "@name": "gint",
                                    "@c:type": "int"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "pixbuf",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../gdk-pixbuf/gdk-pixbuf.c",
                                        "@line": "797",
                                        "#text": "A pixbuf."
                                    },
                                    "type": {
                                        "@name": "Pixbuf",
                                        "@c:type": "const GdkPixbuf*"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "get_byte_length",
                            "@c:identifier": "gdk_pixbuf_get_byte_length",
                            "@version": "2.26",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../gdk-pixbuf/gdk-pixbuf.c",
                                "@line": "1008",
                                "#text": "Returns the length of the pixel data, in bytes."
                            },
                            "source-position": {
                                "@filename": "../gdk-pixbuf/gdk-pixbuf-core.h",
                                "@line": "190"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "../gdk-pixbuf/gdk-pixbuf.c",
                                    "@line": "1014",
                                    "#text": "The length of the pixel data."
                                },
                                "type": {
                                    "@name": "gsize",
                                    "@c:type": "gsize"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "pixbuf",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../gdk-pixbuf/gdk-pixbuf.c",
                                        "@line": "1010",
                                        "#text": "A pixbuf"
                                    },
                                    "type": {
                                        "@name": "Pixbuf",
                                        "@c:type": "const GdkPixbuf*"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "get_colorspace",
                            "@c:identifier": "gdk_pixbuf_get_colorspace",
                            "@glib:get-property": "colorspace",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../gdk-pixbuf/gdk-pixbuf.c",
                                "@line": "747",
                                "#text": "Queries the color space of a pixbuf."
                            },
                            "source-position": {
                                "@filename": "../gdk-pixbuf/gdk-pixbuf-core.h",
                                "@line": "174"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "../gdk-pixbuf/gdk-pixbuf.c",
                                    "@line": "753",
                                    "#text": "Color space."
                                },
                                "type": {
                                    "@name": "Colorspace",
                                    "@c:type": "GdkColorspace"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "pixbuf",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../gdk-pixbuf/gdk-pixbuf.c",
                                        "@line": "749",
                                        "#text": "A pixbuf."
                                    },
                                    "type": {
                                        "@name": "Pixbuf",
                                        "@c:type": "const GdkPixbuf*"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "get_has_alpha",
                            "@c:identifier": "gdk_pixbuf_get_has_alpha",
                            "@glib:get-property": "has-alpha",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../gdk-pixbuf/gdk-pixbuf.c",
                                "@line": "779",
                                "#text": "Queries whether a pixbuf has an alpha channel (opacity information)."
                            },
                            "source-position": {
                                "@filename": "../gdk-pixbuf/gdk-pixbuf-core.h",
                                "@line": "178"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "../gdk-pixbuf/gdk-pixbuf.c",
                                    "@line": "785",
                                    "#text": "`TRUE` if it has an alpha channel, `FALSE` otherwise."
                                },
                                "type": {
                                    "@name": "gboolean",
                                    "@c:type": "gboolean"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "pixbuf",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../gdk-pixbuf/gdk-pixbuf.c",
                                        "@line": "781",
                                        "#text": "A pixbuf."
                                    },
                                    "type": {
                                        "@name": "Pixbuf",
                                        "@c:type": "const GdkPixbuf*"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "get_height",
                            "@c:identifier": "gdk_pixbuf_get_height",
                            "@glib:get-property": "height",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../gdk-pixbuf/gdk-pixbuf.c",
                                "@line": "975",
                                "#text": "Queries the height of a pixbuf."
                            },
                            "source-position": {
                                "@filename": "../gdk-pixbuf/gdk-pixbuf-core.h",
                                "@line": "186"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "../gdk-pixbuf/gdk-pixbuf.c",
                                    "@line": "981",
                                    "#text": "Height in pixels."
                                },
                                "type": {
                                    "@name": "gint",
                                    "@c:type": "int"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "pixbuf",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../gdk-pixbuf/gdk-pixbuf.c",
                                        "@line": "977",
                                        "#text": "A pixbuf."
                                    },
                                    "type": {
                                        "@name": "Pixbuf",
                                        "@c:type": "const GdkPixbuf*"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "get_n_channels",
                            "@c:identifier": "gdk_pixbuf_get_n_channels",
                            "@glib:get-property": "n-channels",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../gdk-pixbuf/gdk-pixbuf.c",
                                "@line": "763",
                                "#text": "Queries the number of channels of a pixbuf."
                            },
                            "source-position": {
                                "@filename": "../gdk-pixbuf/gdk-pixbuf-core.h",
                                "@line": "176"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "../gdk-pixbuf/gdk-pixbuf.c",
                                    "@line": "769",
                                    "#text": "Number of channels."
                                },
                                "type": {
                                    "@name": "gint",
                                    "@c:type": "int"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "pixbuf",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../gdk-pixbuf/gdk-pixbuf.c",
                                        "@line": "765",
                                        "#text": "A pixbuf."
                                    },
                                    "type": {
                                        "@name": "Pixbuf",
                                        "@c:type": "const GdkPixbuf*"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "get_option",
                            "@c:identifier": "gdk_pixbuf_get_option",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../gdk-pixbuf/gdk-pixbuf.c",
                                "@line": "1111",
                                "#text": "Looks up @key in the list of options that may have been attached to the\n@pixbuf when it was loaded, or that may have been attached by another\nfunction using gdk_pixbuf_set_option().\n\nFor instance, the ANI loader provides \"Title\" and \"Artist\" options.\nThe ICO, XBM, and XPM loaders provide \"x_hot\" and \"y_hot\" hot-spot\noptions for cursor definitions. The PNG loader provides the tEXt ancillary\nchunk key/value pairs as options. Since 2.12, the TIFF and JPEG loaders\nreturn an \"orientation\" option string that corresponds to the embedded\nTIFF/Exif orientation tag (if present). Since 2.32, the TIFF loader sets\nthe \"multipage\" option string to \"yes\" when a multi-page TIFF is loaded.\nSince 2.32 the JPEG and PNG loaders set \"x-dpi\" and \"y-dpi\" if the file\ncontains image density information in dots per inch.\nSince 2.36.6, the JPEG loader sets the \"comment\" option with the comment\nEXIF tag."
                            },
                            "source-position": {
                                "@filename": "../gdk-pixbuf/gdk-pixbuf-core.h",
                                "@line": "510"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "@nullable": "1",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "../gdk-pixbuf/gdk-pixbuf.c",
                                    "@line": "1132",
                                    "#text": "the value associated with `key`"
                                },
                                "type": {
                                    "@name": "utf8",
                                    "@c:type": "const gchar*"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "pixbuf",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../gdk-pixbuf/gdk-pixbuf.c",
                                        "@line": "1113",
                                        "#text": "a `GdkPixbuf`"
                                    },
                                    "type": {
                                        "@name": "Pixbuf",
                                        "@c:type": "GdkPixbuf*"
                                    }
                                },
                                "parameter": {
                                    "@name": "key",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../gdk-pixbuf/gdk-pixbuf.c",
                                        "@line": "1114",
                                        "#text": "a nul-terminated string."
                                    },
                                    "type": {
                                        "@name": "utf8",
                                        "@c:type": "const gchar*"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "get_options",
                            "@c:identifier": "gdk_pixbuf_get_options",
                            "@version": "2.32",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../gdk-pixbuf/gdk-pixbuf.c",
                                "@line": "1156",
                                "#text": "Returns a `GHashTable` with a list of all the options that may have been\nattached to the `pixbuf` when it was loaded, or that may have been\nattached by another function using [method@GdkPixbuf.Pixbuf.set_option]."
                            },
                            "source-position": {
                                "@filename": "../gdk-pixbuf/gdk-pixbuf-core.h",
                                "@line": "516"
                            },
                            "return-value": {
                                "@transfer-ownership": "container",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "../gdk-pixbuf/gdk-pixbuf.c",
                                    "@line": "1164",
                                    "#text": "a #GHashTable\n  of key/values pairs"
                                },
                                "type": {
                                    "@name": "GLib.HashTable",
                                    "@c:type": "GHashTable*",
                                    "type": [
                                        {
                                            "@name": "utf8"
                                        },
                                        {
                                            "@name": "utf8"
                                        }
                                    ]
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "pixbuf",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../gdk-pixbuf/gdk-pixbuf.c",
                                        "@line": "1158",
                                        "#text": "a `GdkPixbuf`"
                                    },
                                    "type": {
                                        "@name": "Pixbuf",
                                        "@c:type": "GdkPixbuf*"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "get_pixels",
                            "@c:identifier": "gdk_pixbuf_get_pixels",
                            "@shadowed-by": "get_pixels_with_length",
                            "@glib:get-property": "pixels",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../gdk-pixbuf/gdk-pixbuf.c",
                                "@line": "811",
                                "#text": "Queries a pointer to the pixel data of a pixbuf.\n\nThis function will cause an implicit copy of the pixbuf data if the\npixbuf was created from read-only data.\n\nPlease see the section on [image data](class.Pixbuf.html#image-data) for information\nabout how the pixel data is stored in memory."
                            },
                            "source-position": {
                                "@filename": "../gdk-pixbuf/gdk-pixbuf-core.h",
                                "@line": "182"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "../gdk-pixbuf/gdk-pixbuf.c",
                                    "@line": "823",
                                    "#text": "A pointer to the pixbuf's pixel data."
                                },
                                "array": {
                                    "@zero-terminated": "0",
                                    "@c:type": "guchar*",
                                    "type": {
                                        "@name": "guint8",
                                        "@c:type": "guchar"
                                    }
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "pixbuf",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../gdk-pixbuf/gdk-pixbuf.c",
                                        "@line": "813",
                                        "#text": "A pixbuf."
                                    },
                                    "type": {
                                        "@name": "Pixbuf",
                                        "@c:type": "const GdkPixbuf*"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "get_pixels_with_length",
                            "@c:identifier": "gdk_pixbuf_get_pixels_with_length",
                            "@shadows": "get_pixels",
                            "@version": "2.26",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../gdk-pixbuf/gdk-pixbuf.c",
                                "@line": "857",
                                "#text": "Queries a pointer to the pixel data of a pixbuf.\n\nThis function will cause an implicit copy of the pixbuf data if the\npixbuf was created from read-only data.\n\nPlease see the section on [image data](class.Pixbuf.html#image-data) for information\nabout how the pixel data is stored in memory."
                            },
                            "source-position": {
                                "@filename": "../gdk-pixbuf/gdk-pixbuf-core.h",
                                "@line": "193"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "../gdk-pixbuf/gdk-pixbuf.c",
                                    "@line": "870",
                                    "#text": "A pointer to the pixbuf's\npixel data."
                                },
                                "array": {
                                    "@length": "0",
                                    "@zero-terminated": "0",
                                    "@c:type": "guchar*",
                                    "type": {
                                        "@name": "guint8",
                                        "@c:type": "guchar"
                                    }
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "pixbuf",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../gdk-pixbuf/gdk-pixbuf.c",
                                        "@line": "859",
                                        "#text": "A pixbuf."
                                    },
                                    "type": {
                                        "@name": "Pixbuf",
                                        "@c:type": "const GdkPixbuf*"
                                    }
                                },
                                "parameter": {
                                    "@name": "length",
                                    "@direction": "out",
                                    "@caller-allocates": "0",
                                    "@transfer-ownership": "full",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../gdk-pixbuf/gdk-pixbuf.c",
                                        "@line": "860",
                                        "#text": "The length of the binary data."
                                    },
                                    "type": {
                                        "@name": "guint",
                                        "@c:type": "guint*"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "get_rowstride",
                            "@c:identifier": "gdk_pixbuf_get_rowstride",
                            "@glib:get-property": "rowstride",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../gdk-pixbuf/gdk-pixbuf.c",
                                "@line": "991",
                                "#text": "Queries the rowstride of a pixbuf, which is the number of bytes between\nthe start of a row and the start of the next row."
                            },
                            "source-position": {
                                "@filename": "../gdk-pixbuf/gdk-pixbuf-core.h",
                                "@line": "188"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "../gdk-pixbuf/gdk-pixbuf.c",
                                    "@line": "998",
                                    "#text": "Distance between row starts."
                                },
                                "type": {
                                    "@name": "gint",
                                    "@c:type": "int"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "pixbuf",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../gdk-pixbuf/gdk-pixbuf.c",
                                        "@line": "993",
                                        "#text": "A pixbuf."
                                    },
                                    "type": {
                                        "@name": "Pixbuf",
                                        "@c:type": "const GdkPixbuf*"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "get_width",
                            "@c:identifier": "gdk_pixbuf_get_width",
                            "@glib:get-property": "width",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../gdk-pixbuf/gdk-pixbuf.c",
                                "@line": "959",
                                "#text": "Queries the width of a pixbuf."
                            },
                            "source-position": {
                                "@filename": "../gdk-pixbuf/gdk-pixbuf-core.h",
                                "@line": "184"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "../gdk-pixbuf/gdk-pixbuf.c",
                                    "@line": "965",
                                    "#text": "Width in pixels."
                                },
                                "type": {
                                    "@name": "gint",
                                    "@c:type": "int"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "pixbuf",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../gdk-pixbuf/gdk-pixbuf.c",
                                        "@line": "961",
                                        "#text": "A pixbuf."
                                    },
                                    "type": {
                                        "@name": "Pixbuf",
                                        "@c:type": "const GdkPixbuf*"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "new_subpixbuf",
                            "@c:identifier": "gdk_pixbuf_new_subpixbuf",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../gdk-pixbuf/gdk-pixbuf.c",
                                "@line": "685",
                                "#text": "Creates a new pixbuf which represents a sub-region of `src_pixbuf`.\n\nThe new pixbuf shares its pixels with the original pixbuf, so\nwriting to one affects both.  The new pixbuf holds a reference to\n`src_pixbuf`, so `src_pixbuf` will not be finalized until the new\npixbuf is finalized.\n\nNote that if `src_pixbuf` is read-only, this function will force it\nto be mutable."
                            },
                            "source-position": {
                                "@filename": "../gdk-pixbuf/gdk-pixbuf-core.h",
                                "@line": "222"
                            },
                            "return-value": {
                                "@transfer-ownership": "full",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "../gdk-pixbuf/gdk-pixbuf.c",
                                    "@line": "703",
                                    "#text": "a new pixbuf"
                                },
                                "type": {
                                    "@name": "Pixbuf",
                                    "@c:type": "GdkPixbuf*"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "src_pixbuf",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../gdk-pixbuf/gdk-pixbuf.c",
                                        "@line": "687",
                                        "#text": "a `GdkPixbuf`"
                                    },
                                    "type": {
                                        "@name": "Pixbuf",
                                        "@c:type": "GdkPixbuf*"
                                    }
                                },
                                "parameter": [
                                    {
                                        "@name": "src_x",
                                        "@transfer-ownership": "none",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "../gdk-pixbuf/gdk-pixbuf.c",
                                            "@line": "688",
                                            "#text": "X coord in @src_pixbuf"
                                        },
                                        "type": {
                                            "@name": "gint",
                                            "@c:type": "int"
                                        }
                                    },
                                    {
                                        "@name": "src_y",
                                        "@transfer-ownership": "none",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "../gdk-pixbuf/gdk-pixbuf.c",
                                            "@line": "689",
                                            "#text": "Y coord in @src_pixbuf"
                                        },
                                        "type": {
                                            "@name": "gint",
                                            "@c:type": "int"
                                        }
                                    },
                                    {
                                        "@name": "width",
                                        "@transfer-ownership": "none",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "../gdk-pixbuf/gdk-pixbuf.c",
                                            "@line": "690",
                                            "#text": "width of region in @src_pixbuf"
                                        },
                                        "type": {
                                            "@name": "gint",
                                            "@c:type": "int"
                                        }
                                    },
                                    {
                                        "@name": "height",
                                        "@transfer-ownership": "none",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "../gdk-pixbuf/gdk-pixbuf.c",
                                            "@line": "691",
                                            "#text": "height of region in @src_pixbuf"
                                        },
                                        "type": {
                                            "@name": "gint",
                                            "@c:type": "int"
                                        }
                                    }
                                ]
                            }
                        },
                        {
                            "@name": "read_pixel_bytes",
                            "@c:identifier": "gdk_pixbuf_read_pixel_bytes",
                            "@version": "2.32",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../gdk-pixbuf/gdk-pixbuf.c",
                                "@line": "924",
                                "#text": "Provides a #GBytes buffer containing the raw pixel data; the data\nmust not be modified.\n\nThis function allows skipping the implicit copy that must be made\nif gdk_pixbuf_get_pixels() is called on a read-only pixbuf."
                            },
                            "source-position": {
                                "@filename": "../gdk-pixbuf/gdk-pixbuf-core.h",
                                "@line": "199"
                            },
                            "return-value": {
                                "@transfer-ownership": "full",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "../gdk-pixbuf/gdk-pixbuf.c",
                                    "@line": "934",
                                    "#text": "A new reference to a read-only copy of\n  the pixel data.  Note that for mutable pixbufs, this function will\n  incur a one-time copy of the pixel data for conversion into the\n  returned #GBytes."
                                },
                                "type": {
                                    "@name": "GLib.Bytes",
                                    "@c:type": "GBytes*"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "pixbuf",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../gdk-pixbuf/gdk-pixbuf.c",
                                        "@line": "926",
                                        "#text": "A pixbuf"
                                    },
                                    "type": {
                                        "@name": "Pixbuf",
                                        "@c:type": "const GdkPixbuf*"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "read_pixels",
                            "@c:identifier": "gdk_pixbuf_read_pixels",
                            "@version": "2.32",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../gdk-pixbuf/gdk-pixbuf.c",
                                "@line": "890",
                                "#text": "Provides a read-only pointer to the raw pixel data.\n\nThis function allows skipping the implicit copy that must be made\nif gdk_pixbuf_get_pixels() is called on a read-only pixbuf."
                            },
                            "source-position": {
                                "@filename": "../gdk-pixbuf/gdk-pixbuf-core.h",
                                "@line": "197"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "../gdk-pixbuf/gdk-pixbuf.c",
                                    "@line": "899",
                                    "#text": "a read-only pointer to the raw pixel data"
                                },
                                "type": {
                                    "@name": "guint8",
                                    "@c:type": "const guint8*"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "pixbuf",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../gdk-pixbuf/gdk-pixbuf.c",
                                        "@line": "892",
                                        "#text": "A pixbuf"
                                    },
                                    "type": {
                                        "@name": "Pixbuf",
                                        "@c:type": "const GdkPixbuf*"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "ref",
                            "@c:identifier": "gdk_pixbuf_ref",
                            "@introspectable": "0",
                            "@deprecated": "1",
                            "@deprecated-version": "2.0",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../gdk-pixbuf/gdk-pixbuf.c",
                                "@line": "414",
                                "#text": "Adds a reference to a pixbuf."
                            },
                            "doc-deprecated": {
                                "@xml:space": "preserve",
                                "#text": "Use g_object_ref()."
                            },
                            "source-position": {
                                "@filename": "../gdk-pixbuf/gdk-pixbuf-core.h",
                                "@line": "166"
                            },
                            "return-value": {
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "../gdk-pixbuf/gdk-pixbuf.c",
                                    "@line": "420",
                                    "#text": "The same as the @pixbuf argument."
                                },
                                "type": {
                                    "@name": "Pixbuf",
                                    "@c:type": "GdkPixbuf*"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "pixbuf",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../gdk-pixbuf/gdk-pixbuf.c",
                                        "@line": "416",
                                        "#text": "A pixbuf."
                                    },
                                    "type": {
                                        "@name": "Pixbuf",
                                        "@c:type": "GdkPixbuf*"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "remove_option",
                            "@c:identifier": "gdk_pixbuf_remove_option",
                            "@version": "2.36",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../gdk-pixbuf/gdk-pixbuf.c",
                                "@line": "1191",
                                "#text": "Removes the key/value pair option attached to a `GdkPixbuf`."
                            },
                            "source-position": {
                                "@filename": "../gdk-pixbuf/gdk-pixbuf-core.h",
                                "@line": "513"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "../gdk-pixbuf/gdk-pixbuf.c",
                                    "@line": "1198",
                                    "#text": "`TRUE` if an option was removed, `FALSE` if not."
                                },
                                "type": {
                                    "@name": "gboolean",
                                    "@c:type": "gboolean"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "pixbuf",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../gdk-pixbuf/gdk-pixbuf.c",
                                        "@line": "1193",
                                        "#text": "a `GdkPixbuf`"
                                    },
                                    "type": {
                                        "@name": "Pixbuf",
                                        "@c:type": "GdkPixbuf*"
                                    }
                                },
                                "parameter": {
                                    "@name": "key",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../gdk-pixbuf/gdk-pixbuf.c",
                                        "@line": "1194",
                                        "#text": "a nul-terminated string representing the key to remove."
                                    },
                                    "type": {
                                        "@name": "utf8",
                                        "@c:type": "const gchar*"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "rotate_simple",
                            "@c:identifier": "gdk_pixbuf_rotate_simple",
                            "@version": "2.6",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../gdk-pixbuf/gdk-pixbuf-scale.c",
                                "@line": "340",
                                "#text": "Rotates a pixbuf by a multiple of 90 degrees, and returns the\nresult in a new pixbuf.\n\nIf `angle` is 0, this function will return a copy of `src`."
                            },
                            "source-position": {
                                "@filename": "../gdk-pixbuf/gdk-pixbuf-transform.h",
                                "@line": "159"
                            },
                            "return-value": {
                                "@transfer-ownership": "full",
                                "@nullable": "1",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "../gdk-pixbuf/gdk-pixbuf-scale.c",
                                    "@line": "350",
                                    "#text": "the new pixbuf"
                                },
                                "type": {
                                    "@name": "Pixbuf",
                                    "@c:type": "GdkPixbuf*"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "src",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../gdk-pixbuf/gdk-pixbuf-scale.c",
                                        "@line": "342",
                                        "#text": "a #GdkPixbuf"
                                    },
                                    "type": {
                                        "@name": "Pixbuf",
                                        "@c:type": "const GdkPixbuf*"
                                    }
                                },
                                "parameter": {
                                    "@name": "angle",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../gdk-pixbuf/gdk-pixbuf-scale.c",
                                        "@line": "343",
                                        "#text": "the angle to rotate by"
                                    },
                                    "type": {
                                        "@name": "PixbufRotation",
                                        "@c:type": "GdkPixbufRotation"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "saturate_and_pixelate",
                            "@c:identifier": "gdk_pixbuf_saturate_and_pixelate",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../gdk-pixbuf/gdk-pixbuf-util.c",
                                "@line": "172",
                                "#text": "Modifies saturation and optionally pixelates `src`, placing the result in\n`dest`.\n\nThe `src` and `dest` pixbufs must have the same image format, size, and\nrowstride.\n\nThe `src` and `dest` arguments may be the same pixbuf with no ill effects.\n\nIf `saturation` is 1.0 then saturation is not changed. If it's less than 1.0,\nsaturation is reduced (the image turns toward grayscale); if greater than\n1.0, saturation is increased (the image gets more vivid colors).\n\nIf `pixelate` is `TRUE`, then pixels are faded in a checkerboard pattern to\ncreate a pixelated image."
                            },
                            "source-position": {
                                "@filename": "../gdk-pixbuf/gdk-pixbuf-core.h",
                                "@line": "495"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "type": {
                                    "@name": "none",
                                    "@c:type": "void"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "src",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../gdk-pixbuf/gdk-pixbuf-util.c",
                                        "@line": "174",
                                        "#text": "source image"
                                    },
                                    "type": {
                                        "@name": "Pixbuf",
                                        "@c:type": "const GdkPixbuf*"
                                    }
                                },
                                "parameter": [
                                    {
                                        "@name": "dest",
                                        "@transfer-ownership": "none",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "../gdk-pixbuf/gdk-pixbuf-util.c",
                                            "@line": "175",
                                            "#text": "place to write modified version of @src"
                                        },
                                        "type": {
                                            "@name": "Pixbuf",
                                            "@c:type": "GdkPixbuf*"
                                        }
                                    },
                                    {
                                        "@name": "saturation",
                                        "@transfer-ownership": "none",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "../gdk-pixbuf/gdk-pixbuf-util.c",
                                            "@line": "176",
                                            "#text": "saturation factor"
                                        },
                                        "type": {
                                            "@name": "gfloat",
                                            "@c:type": "gfloat"
                                        }
                                    },
                                    {
                                        "@name": "pixelate",
                                        "@transfer-ownership": "none",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "../gdk-pixbuf/gdk-pixbuf-util.c",
                                            "@line": "177",
                                            "#text": "whether to pixelate"
                                        },
                                        "type": {
                                            "@name": "gboolean",
                                            "@c:type": "gboolean"
                                        }
                                    }
                                ]
                            }
                        },
                        {
                            "@name": "save",
                            "@c:identifier": "gdk_pixbuf_save",
                            "@introspectable": "0",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../gdk-pixbuf/gdk-pixbuf-io.c",
                                "@line": "2416",
                                "#text": "Saves pixbuf to a file in format @type. By default, \"jpeg\", \"png\", \"ico\"\nand \"bmp\" are possible file formats to save in, but more formats may be\ninstalled. The list of all writable formats can be determined in the\nfollowing way:\n\n```c\nvoid add_if_writable (GdkPixbufFormat *data, GSList **list)\n{\n  if (gdk_pixbuf_format_is_writable (data))\n    *list = g_slist_prepend (*list, data);\n}\n\nGSList *formats = gdk_pixbuf_get_formats ();\nGSList *writable_formats = NULL;\ng_slist_foreach (formats, add_if_writable, &writable_formats);\ng_slist_free (formats);\n```\n\nIf `error` is set, `FALSE` will be returned. Possible errors include\nthose in the `GDK_PIXBUF_ERROR` domain and those in the `G_FILE_ERROR`\ndomain.\n\nThe variable argument list should be `NULL`-terminated; if not empty,\nit should contain pairs of strings that modify the save\nparameters. For example:\n\n```c\ngdk_pixbuf_save (pixbuf, handle, \"jpeg\", &error, \"quality\", \"100\", NULL);\n```\n\nCurrently only few parameters exist.\n\nJPEG images can be saved with a \"quality\" parameter; its value should be\nin the range `[0, 100]`. JPEG and PNG density can be set by setting the\n\"x-dpi\" and \"y-dpi\" parameters to the appropriate values in dots per inch.\n\nText chunks can be attached to PNG images by specifying parameters of\nthe form \"tEXt::key\", where key is an ASCII string of length 1-79.\nThe values are UTF-8 encoded strings. The PNG compression level can\nbe specified using the \"compression\" parameter; it's value is in an\ninteger in the range of `[0, 9]`.\n\nICC color profiles can also be embedded into PNG, JPEG and TIFF images.\nThe \"icc-profile\" value should be the complete ICC profile encoded\ninto base64.\n\n```c\nchar *contents;\ngsize length;\n\n// icm_path is set elsewhere\ng_file_get_contents (icm_path, &contents, &length, NULL);\n\nchar *contents_encode = g_base64_encode ((const guchar *) contents, length);\n\ngdk_pixbuf_save (pixbuf, handle, \"png\", &error, \"icc-profile\", contents_encode, NULL);\n```\n\nTIFF images recognize:\n\n 1. a \"bits-per-sample\" option (integer) which can be either 1 for saving\n    bi-level CCITTFAX4 images, or 8 for saving 8-bits per sample\n 2. a \"compression\" option (integer) which can be 1 for no compression,\n    2 for Huffman, 5 for LZW, 7 for JPEG and 8 for DEFLATE (see the libtiff\n    documentation and tiff.h for all supported codec values)\n 3. an \"icc-profile\" option (zero-terminated string) containing a base64\n    encoded ICC color profile.\n\nICO images can be saved in depth 16, 24, or 32, by using the \"depth\"\nparameter. When the ICO saver is given \"x_hot\" and \"y_hot\" parameters,\nit produces a CUR instead of an ICO."
                            },
                            "source-position": {
                                "@filename": "../gdk-pixbuf/gdk-pixbuf-core.h",
                                "@line": "319"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "../gdk-pixbuf/gdk-pixbuf-io.c",
                                    "@line": "2496",
                                    "#text": "`TRUE` on success, and `FALSE` otherwise"
                                },
                                "type": {
                                    "@name": "gboolean",
                                    "@c:type": "gboolean"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "pixbuf",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../gdk-pixbuf/gdk-pixbuf-io.c",
                                        "@line": "2418",
                                        "#text": "a `GdkPixbuf`."
                                    },
                                    "type": {
                                        "@name": "Pixbuf",
                                        "@c:type": "GdkPixbuf*"
                                    }
                                },
                                "parameter": [
                                    {
                                        "@name": "filename",
                                        "@transfer-ownership": "none",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "../gdk-pixbuf/gdk-pixbuf-io.c",
                                            "@line": "2419",
                                            "#text": "name of file to save."
                                        },
                                        "type": {
                                            "@name": "filename",
                                            "@c:type": "const char*"
                                        }
                                    },
                                    {
                                        "@name": "type",
                                        "@transfer-ownership": "none",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "../gdk-pixbuf/gdk-pixbuf-io.c",
                                            "@line": "2420",
                                            "#text": "name of file format."
                                        },
                                        "type": {
                                            "@name": "utf8",
                                            "@c:type": "const char*"
                                        }
                                    },
                                    {
                                        "@name": "error",
                                        "@transfer-ownership": "none",
                                        "@nullable": "1",
                                        "@allow-none": "1",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "../gdk-pixbuf/gdk-pixbuf-io.c",
                                            "@line": "2421",
                                            "#text": "return location for error"
                                        },
                                        "type": {
                                            "@name": "GLib.Error",
                                            "@c:type": "GError**"
                                        }
                                    },
                                    {
                                        "@name": "...",
                                        "@transfer-ownership": "none",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "../gdk-pixbuf/gdk-pixbuf-io.c",
                                            "@line": "2422",
                                            "#text": "list of key-value save options, followed by `NULL`"
                                        },
                                        "varargs": null
                                    }
                                ]
                            }
                        },
                        {
                            "@name": "save_to_buffer",
                            "@c:identifier": "gdk_pixbuf_save_to_buffer",
                            "@version": "2.4",
                            "@introspectable": "0",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../gdk-pixbuf/gdk-pixbuf-io.c",
                                "@line": "2753",
                                "#text": "Saves pixbuf to a new buffer in format `type`, which is currently \"jpeg\",\n\"png\", \"tiff\", \"ico\" or \"bmp\".\n\nThis is a convenience function that uses `gdk_pixbuf_save_to_callback()`\nto do the real work.\n\nNote that the buffer is not `NUL`-terminated and may contain embedded `NUL`\ncharacters.\n\nIf @error is set, `FALSE` will be returned and @buffer will be set to\n`NULL`. Possible errors include those in the `GDK_PIXBUF_ERROR`\ndomain.\n\nSee `gdk_pixbuf_save()` for more details."
                            },
                            "source-position": {
                                "@filename": "../gdk-pixbuf/gdk-pixbuf-core.h",
                                "@line": "392"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "../gdk-pixbuf/gdk-pixbuf-io.c",
                                    "@line": "2778",
                                    "#text": "whether an error was set"
                                },
                                "type": {
                                    "@name": "gboolean",
                                    "@c:type": "gboolean"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "pixbuf",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../gdk-pixbuf/gdk-pixbuf-io.c",
                                        "@line": "2755",
                                        "#text": "a `GdkPixbuf`."
                                    },
                                    "type": {
                                        "@name": "Pixbuf",
                                        "@c:type": "GdkPixbuf*"
                                    }
                                },
                                "parameter": [
                                    {
                                        "@name": "buffer",
                                        "@direction": "out",
                                        "@caller-allocates": "0",
                                        "@transfer-ownership": "full",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "../gdk-pixbuf/gdk-pixbuf-io.c",
                                            "@line": "2756",
                                            "#text": "location to receive a pointer\n  to the new buffer."
                                        },
                                        "array": {
                                            "@length": "1",
                                            "@zero-terminated": "0",
                                            "@c:type": "gchar**",
                                            "type": {
                                                "@name": "guint8"
                                            }
                                        }
                                    },
                                    {
                                        "@name": "buffer_size",
                                        "@direction": "out",
                                        "@caller-allocates": "0",
                                        "@transfer-ownership": "full",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "../gdk-pixbuf/gdk-pixbuf-io.c",
                                            "@line": "2758",
                                            "#text": "location to receive the size of the new buffer."
                                        },
                                        "type": {
                                            "@name": "gsize",
                                            "@c:type": "gsize*"
                                        }
                                    },
                                    {
                                        "@name": "type",
                                        "@transfer-ownership": "none",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "../gdk-pixbuf/gdk-pixbuf-io.c",
                                            "@line": "2759",
                                            "#text": "name of file format."
                                        },
                                        "type": {
                                            "@name": "utf8",
                                            "@c:type": "const char*"
                                        }
                                    },
                                    {
                                        "@name": "error",
                                        "@transfer-ownership": "none",
                                        "@nullable": "1",
                                        "@allow-none": "1",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "../gdk-pixbuf/gdk-pixbuf-io.c",
                                            "@line": "2760",
                                            "#text": "return location for error, or `NULL`"
                                        },
                                        "type": {
                                            "@name": "GLib.Error",
                                            "@c:type": "GError**"
                                        }
                                    },
                                    {
                                        "@name": "...",
                                        "@transfer-ownership": "none",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "../gdk-pixbuf/gdk-pixbuf-io.c",
                                            "@line": "2761",
                                            "#text": "list of key-value save options"
                                        },
                                        "varargs": null
                                    }
                                ]
                            }
                        },
                        {
                            "@name": "save_to_bufferv",
                            "@c:identifier": "gdk_pixbuf_save_to_bufferv",
                            "@version": "2.4",
                            "@throws": "1",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../gdk-pixbuf/gdk-pixbuf-io.c",
                                "@line": "2846",
                                "#text": "Vector version of `gdk_pixbuf_save_to_buffer()`.\n\nSaves pixbuf to a new buffer in format @type, which is currently \"jpeg\",\n\"tiff\", \"png\", \"ico\" or \"bmp\".\n\nSee [method@GdkPixbuf.Pixbuf.save_to_buffer] for more details."
                            },
                            "source-position": {
                                "@filename": "../gdk-pixbuf/gdk-pixbuf-core.h",
                                "@line": "400"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "../gdk-pixbuf/gdk-pixbuf-io.c",
                                    "@line": "2864",
                                    "#text": "whether an error was set"
                                },
                                "type": {
                                    "@name": "gboolean",
                                    "@c:type": "gboolean"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "pixbuf",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../gdk-pixbuf/gdk-pixbuf-io.c",
                                        "@line": "2848",
                                        "#text": "a `GdkPixbuf`."
                                    },
                                    "type": {
                                        "@name": "Pixbuf",
                                        "@c:type": "GdkPixbuf*"
                                    }
                                },
                                "parameter": [
                                    {
                                        "@name": "buffer",
                                        "@direction": "out",
                                        "@caller-allocates": "0",
                                        "@transfer-ownership": "full",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "../gdk-pixbuf/gdk-pixbuf-io.c",
                                            "@line": "2849",
                                            "#text": "location to receive a pointer to the new buffer."
                                        },
                                        "array": {
                                            "@length": "1",
                                            "@zero-terminated": "0",
                                            "@c:type": "gchar**",
                                            "type": {
                                                "@name": "guint8"
                                            }
                                        }
                                    },
                                    {
                                        "@name": "buffer_size",
                                        "@direction": "out",
                                        "@caller-allocates": "0",
                                        "@transfer-ownership": "full",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "../gdk-pixbuf/gdk-pixbuf-io.c",
                                            "@line": "2851",
                                            "#text": "location to receive the size of the new buffer."
                                        },
                                        "type": {
                                            "@name": "gsize",
                                            "@c:type": "gsize*"
                                        }
                                    },
                                    {
                                        "@name": "type",
                                        "@transfer-ownership": "none",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "../gdk-pixbuf/gdk-pixbuf-io.c",
                                            "@line": "2852",
                                            "#text": "name of file format."
                                        },
                                        "type": {
                                            "@name": "utf8",
                                            "@c:type": "const char*"
                                        }
                                    },
                                    {
                                        "@name": "option_keys",
                                        "@transfer-ownership": "none",
                                        "@nullable": "1",
                                        "@allow-none": "1",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "../gdk-pixbuf/gdk-pixbuf-io.c",
                                            "@line": "2853",
                                            "#text": "name of options to set"
                                        },
                                        "array": {
                                            "@c:type": "char**",
                                            "type": {
                                                "@name": "utf8"
                                            }
                                        }
                                    },
                                    {
                                        "@name": "option_values",
                                        "@transfer-ownership": "none",
                                        "@nullable": "1",
                                        "@allow-none": "1",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "../gdk-pixbuf/gdk-pixbuf-io.c",
                                            "@line": "2854",
                                            "#text": "values for named options"
                                        },
                                        "array": {
                                            "@c:type": "char**",
                                            "type": {
                                                "@name": "utf8"
                                            }
                                        }
                                    }
                                ]
                            }
                        },
                        {
                            "@name": "save_to_callback",
                            "@c:identifier": "gdk_pixbuf_save_to_callback",
                            "@version": "2.4",
                            "@introspectable": "0",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../gdk-pixbuf/gdk-pixbuf-io.c",
                                "@line": "2640",
                                "#text": "Saves pixbuf in format `type` by feeding the produced data to a\ncallback.\n\nThis function can be used when you want to store the image to something\nother than a file, such as an in-memory buffer or a socket.\n\nIf @error is set, `FALSE` will be returned. Possible errors\ninclude those in the `GDK_PIXBUF_ERROR` domain and whatever the save\nfunction generates.\n\nSee [method@GdkPixbuf.Pixbuf.save] for more details."
                            },
                            "source-position": {
                                "@filename": "../gdk-pixbuf/gdk-pixbuf-core.h",
                                "@line": "373"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "../gdk-pixbuf/gdk-pixbuf-io.c",
                                    "@line": "2662",
                                    "#text": "whether an error was set"
                                },
                                "type": {
                                    "@name": "gboolean",
                                    "@c:type": "gboolean"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "pixbuf",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../gdk-pixbuf/gdk-pixbuf-io.c",
                                        "@line": "2642",
                                        "#text": "a `GdkPixbuf`."
                                    },
                                    "type": {
                                        "@name": "Pixbuf",
                                        "@c:type": "GdkPixbuf*"
                                    }
                                },
                                "parameter": [
                                    {
                                        "@name": "save_func",
                                        "@transfer-ownership": "none",
                                        "@scope": "call",
                                        "@closure": "1",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "../gdk-pixbuf/gdk-pixbuf-io.c",
                                            "@line": "2643",
                                            "#text": "a function that is called to save each block of data that\n  the save routine generates."
                                        },
                                        "type": {
                                            "@name": "PixbufSaveFunc",
                                            "@c:type": "GdkPixbufSaveFunc"
                                        }
                                    },
                                    {
                                        "@name": "user_data",
                                        "@transfer-ownership": "none",
                                        "@nullable": "1",
                                        "@allow-none": "1",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "../gdk-pixbuf/gdk-pixbuf-io.c",
                                            "@line": "2645",
                                            "#text": "user data to pass to the save function."
                                        },
                                        "type": {
                                            "@name": "gpointer",
                                            "@c:type": "gpointer"
                                        }
                                    },
                                    {
                                        "@name": "type",
                                        "@transfer-ownership": "none",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "../gdk-pixbuf/gdk-pixbuf-io.c",
                                            "@line": "2646",
                                            "#text": "name of file format."
                                        },
                                        "type": {
                                            "@name": "utf8",
                                            "@c:type": "const char*"
                                        }
                                    },
                                    {
                                        "@name": "error",
                                        "@transfer-ownership": "none",
                                        "@nullable": "1",
                                        "@allow-none": "1",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "../gdk-pixbuf/gdk-pixbuf-io.c",
                                            "@line": "2647",
                                            "#text": "return location for error, or `NULL`"
                                        },
                                        "type": {
                                            "@name": "GLib.Error",
                                            "@c:type": "GError**"
                                        }
                                    },
                                    {
                                        "@name": "...",
                                        "@transfer-ownership": "none",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "../gdk-pixbuf/gdk-pixbuf-io.c",
                                            "@line": "2648",
                                            "#text": "list of key-value save options"
                                        },
                                        "varargs": null
                                    }
                                ]
                            }
                        },
                        {
                            "@name": "save_to_callbackv",
                            "@c:identifier": "gdk_pixbuf_save_to_callbackv",
                            "@version": "2.4",
                            "@throws": "1",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../gdk-pixbuf/gdk-pixbuf-io.c",
                                "@line": "2697",
                                "#text": "Vector version of `gdk_pixbuf_save_to_callback()`.\n\nSaves pixbuf to a callback in format @type, which is currently \"jpeg\",\n\"png\", \"tiff\", \"ico\" or \"bmp\".\n\nIf @error is set, `FALSE` will be returned.\n\nSee [method@GdkPixbuf.Pixbuf.save_to_callback] for more details."
                            },
                            "source-position": {
                                "@filename": "../gdk-pixbuf/gdk-pixbuf-core.h",
                                "@line": "381"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "../gdk-pixbuf/gdk-pixbuf-io.c",
                                    "@line": "2717",
                                    "#text": "whether an error was set"
                                },
                                "type": {
                                    "@name": "gboolean",
                                    "@c:type": "gboolean"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "pixbuf",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../gdk-pixbuf/gdk-pixbuf-io.c",
                                        "@line": "2699",
                                        "#text": "a `GdkPixbuf`."
                                    },
                                    "type": {
                                        "@name": "Pixbuf",
                                        "@c:type": "GdkPixbuf*"
                                    }
                                },
                                "parameter": [
                                    {
                                        "@name": "save_func",
                                        "@transfer-ownership": "none",
                                        "@scope": "call",
                                        "@closure": "1",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "../gdk-pixbuf/gdk-pixbuf-io.c",
                                            "@line": "2700",
                                            "#text": "a function that is called to save each block of data that\n  the save routine generates."
                                        },
                                        "type": {
                                            "@name": "PixbufSaveFunc",
                                            "@c:type": "GdkPixbufSaveFunc"
                                        }
                                    },
                                    {
                                        "@name": "user_data",
                                        "@transfer-ownership": "none",
                                        "@nullable": "1",
                                        "@allow-none": "1",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "../gdk-pixbuf/gdk-pixbuf-io.c",
                                            "@line": "2702",
                                            "#text": "user data to pass to the save function."
                                        },
                                        "type": {
                                            "@name": "gpointer",
                                            "@c:type": "gpointer"
                                        }
                                    },
                                    {
                                        "@name": "type",
                                        "@transfer-ownership": "none",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "../gdk-pixbuf/gdk-pixbuf-io.c",
                                            "@line": "2703",
                                            "#text": "name of file format."
                                        },
                                        "type": {
                                            "@name": "utf8",
                                            "@c:type": "const char*"
                                        }
                                    },
                                    {
                                        "@name": "option_keys",
                                        "@transfer-ownership": "none",
                                        "@nullable": "1",
                                        "@allow-none": "1",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "../gdk-pixbuf/gdk-pixbuf-io.c",
                                            "@line": "2704",
                                            "#text": "name of options to set"
                                        },
                                        "array": {
                                            "@c:type": "char**",
                                            "type": {
                                                "@name": "utf8"
                                            }
                                        }
                                    },
                                    {
                                        "@name": "option_values",
                                        "@transfer-ownership": "none",
                                        "@nullable": "1",
                                        "@allow-none": "1",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "../gdk-pixbuf/gdk-pixbuf-io.c",
                                            "@line": "2705",
                                            "#text": "values for named options"
                                        },
                                        "array": {
                                            "@c:type": "char**",
                                            "type": {
                                                "@name": "utf8"
                                            }
                                        }
                                    }
                                ]
                            }
                        },
                        {
                            "@name": "save_to_stream",
                            "@c:identifier": "gdk_pixbuf_save_to_stream",
                            "@version": "2.14",
                            "@introspectable": "0",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../gdk-pixbuf/gdk-pixbuf-io.c",
                                "@line": "2990",
                                "#text": "Saves `pixbuf` to an output stream.\n\nSupported file formats are currently \"jpeg\", \"tiff\", \"png\", \"ico\" or\n\"bmp\". See `gdk_pixbuf_save_to_buffer()` for more details.\n\nThe `cancellable` can be used to abort the operation from another\nthread. If the operation was cancelled, the error `G_IO_ERROR_CANCELLED`\nwill be returned. Other possible errors are in the `GDK_PIXBUF_ERROR`\nand `G_IO_ERROR` domains.\n\nThe stream is not closed at the end of this call."
                            },
                            "source-position": {
                                "@filename": "../gdk-pixbuf/gdk-pixbuf-core.h",
                                "@line": "441"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "../gdk-pixbuf/gdk-pixbuf-io.c",
                                    "@line": "3011",
                                    "#text": "`TRUE` if the pixbuf was saved successfully, `FALSE` if an\n  error was set."
                                },
                                "type": {
                                    "@name": "gboolean",
                                    "@c:type": "gboolean"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "pixbuf",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../gdk-pixbuf/gdk-pixbuf-io.c",
                                        "@line": "2992",
                                        "#text": "a `GdkPixbuf`"
                                    },
                                    "type": {
                                        "@name": "Pixbuf",
                                        "@c:type": "GdkPixbuf*"
                                    }
                                },
                                "parameter": [
                                    {
                                        "@name": "stream",
                                        "@transfer-ownership": "none",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "../gdk-pixbuf/gdk-pixbuf-io.c",
                                            "@line": "2993",
                                            "#text": "a `GOutputStream` to save the pixbuf to"
                                        },
                                        "type": {
                                            "@name": "Gio.OutputStream",
                                            "@c:type": "GOutputStream*"
                                        }
                                    },
                                    {
                                        "@name": "type",
                                        "@transfer-ownership": "none",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "../gdk-pixbuf/gdk-pixbuf-io.c",
                                            "@line": "2994",
                                            "#text": "name of file format"
                                        },
                                        "type": {
                                            "@name": "utf8",
                                            "@c:type": "const char*"
                                        }
                                    },
                                    {
                                        "@name": "cancellable",
                                        "@transfer-ownership": "none",
                                        "@nullable": "1",
                                        "@allow-none": "1",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "../gdk-pixbuf/gdk-pixbuf-io.c",
                                            "@line": "2995",
                                            "#text": "optional `GCancellable` object, `NULL` to ignore"
                                        },
                                        "type": {
                                            "@name": "Gio.Cancellable",
                                            "@c:type": "GCancellable*"
                                        }
                                    },
                                    {
                                        "@name": "error",
                                        "@transfer-ownership": "none",
                                        "@nullable": "1",
                                        "@allow-none": "1",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "../gdk-pixbuf/gdk-pixbuf-io.c",
                                            "@line": "2996",
                                            "#text": "return location for error, or `NULL`"
                                        },
                                        "type": {
                                            "@name": "GLib.Error",
                                            "@c:type": "GError**"
                                        }
                                    },
                                    {
                                        "@name": "...",
                                        "@transfer-ownership": "none",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "../gdk-pixbuf/gdk-pixbuf-io.c",
                                            "@line": "2997",
                                            "#text": "list of key-value save options"
                                        },
                                        "varargs": null
                                    }
                                ]
                            }
                        },
                        {
                            "@name": "save_to_stream_async",
                            "@c:identifier": "gdk_pixbuf_save_to_stream_async",
                            "@version": "2.24",
                            "@introspectable": "0",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../gdk-pixbuf/gdk-pixbuf-io.c",
                                "@line": "3144",
                                "#text": "Saves `pixbuf` to an output stream asynchronously.\n\nFor more details see gdk_pixbuf_save_to_stream(), which is the synchronous\nversion of this function.\n\nWhen the operation is finished, `callback` will be called in the main thread.\n\nYou can then call gdk_pixbuf_save_to_stream_finish() to get the result of\nthe operation."
                            },
                            "source-position": {
                                "@filename": "../gdk-pixbuf/gdk-pixbuf-core.h",
                                "@line": "449"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "type": {
                                    "@name": "none",
                                    "@c:type": "void"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "pixbuf",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../gdk-pixbuf/gdk-pixbuf-io.c",
                                        "@line": "3146",
                                        "#text": "a `GdkPixbuf`"
                                    },
                                    "type": {
                                        "@name": "Pixbuf",
                                        "@c:type": "GdkPixbuf*"
                                    }
                                },
                                "parameter": [
                                    {
                                        "@name": "stream",
                                        "@transfer-ownership": "none",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "../gdk-pixbuf/gdk-pixbuf-io.c",
                                            "@line": "3147",
                                            "#text": "a `GOutputStream` to which to save the pixbuf"
                                        },
                                        "type": {
                                            "@name": "Gio.OutputStream",
                                            "@c:type": "GOutputStream*"
                                        }
                                    },
                                    {
                                        "@name": "type",
                                        "@transfer-ownership": "none",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "../gdk-pixbuf/gdk-pixbuf-io.c",
                                            "@line": "3148",
                                            "#text": "name of file format"
                                        },
                                        "type": {
                                            "@name": "utf8",
                                            "@c:type": "const gchar*"
                                        }
                                    },
                                    {
                                        "@name": "cancellable",
                                        "@transfer-ownership": "none",
                                        "@nullable": "1",
                                        "@allow-none": "1",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "../gdk-pixbuf/gdk-pixbuf-io.c",
                                            "@line": "3149",
                                            "#text": "optional `GCancellable` object, `NULL` to ignore"
                                        },
                                        "type": {
                                            "@name": "Gio.Cancellable",
                                            "@c:type": "GCancellable*"
                                        }
                                    },
                                    {
                                        "@name": "callback",
                                        "@transfer-ownership": "none",
                                        "@nullable": "1",
                                        "@allow-none": "1",
                                        "@scope": "async",
                                        "@closure": "4",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "../gdk-pixbuf/gdk-pixbuf-io.c",
                                            "@line": "3150",
                                            "#text": "a `GAsyncReadyCallback` to call when the pixbuf is saved"
                                        },
                                        "type": {
                                            "@name": "Gio.AsyncReadyCallback",
                                            "@c:type": "GAsyncReadyCallback"
                                        }
                                    },
                                    {
                                        "@name": "user_data",
                                        "@transfer-ownership": "none",
                                        "@nullable": "1",
                                        "@allow-none": "1",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "../gdk-pixbuf/gdk-pixbuf-io.c",
                                            "@line": "3151",
                                            "#text": "the data to pass to the callback function"
                                        },
                                        "type": {
                                            "@name": "gpointer",
                                            "@c:type": "gpointer"
                                        }
                                    },
                                    {
                                        "@name": "...",
                                        "@transfer-ownership": "none",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "../gdk-pixbuf/gdk-pixbuf-io.c",
                                            "@line": "3152",
                                            "#text": "list of key-value save options"
                                        },
                                        "varargs": null
                                    }
                                ]
                            }
                        },
                        {
                            "@name": "save_to_streamv",
                            "@c:identifier": "gdk_pixbuf_save_to_streamv",
                            "@version": "2.36",
                            "@throws": "1",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../gdk-pixbuf/gdk-pixbuf-io.c",
                                "@line": "2948",
                                "#text": "Saves `pixbuf` to an output stream.\n\nSupported file formats are currently \"jpeg\", \"tiff\", \"png\", \"ico\" or\n\"bmp\".\n\nSee [method@GdkPixbuf.Pixbuf.save_to_stream] for more details."
                            },
                            "source-position": {
                                "@filename": "../gdk-pixbuf/gdk-pixbuf-core.h",
                                "@line": "472"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "../gdk-pixbuf/gdk-pixbuf-io.c",
                                    "@line": "2965",
                                    "#text": "`TRUE` if the pixbuf was saved successfully, `FALSE` if an\n  error was set."
                                },
                                "type": {
                                    "@name": "gboolean",
                                    "@c:type": "gboolean"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "pixbuf",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../gdk-pixbuf/gdk-pixbuf-io.c",
                                        "@line": "2950",
                                        "#text": "a `GdkPixbuf`"
                                    },
                                    "type": {
                                        "@name": "Pixbuf",
                                        "@c:type": "GdkPixbuf*"
                                    }
                                },
                                "parameter": [
                                    {
                                        "@name": "stream",
                                        "@transfer-ownership": "none",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "../gdk-pixbuf/gdk-pixbuf-io.c",
                                            "@line": "2951",
                                            "#text": "a `GOutputStream` to save the pixbuf to"
                                        },
                                        "type": {
                                            "@name": "Gio.OutputStream",
                                            "@c:type": "GOutputStream*"
                                        }
                                    },
                                    {
                                        "@name": "type",
                                        "@transfer-ownership": "none",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "../gdk-pixbuf/gdk-pixbuf-io.c",
                                            "@line": "2952",
                                            "#text": "name of file format"
                                        },
                                        "type": {
                                            "@name": "utf8",
                                            "@c:type": "const char*"
                                        }
                                    },
                                    {
                                        "@name": "option_keys",
                                        "@transfer-ownership": "none",
                                        "@nullable": "1",
                                        "@allow-none": "1",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "../gdk-pixbuf/gdk-pixbuf-io.c",
                                            "@line": "2953",
                                            "#text": "name of options to set"
                                        },
                                        "array": {
                                            "@c:type": "char**",
                                            "type": {
                                                "@name": "utf8"
                                            }
                                        }
                                    },
                                    {
                                        "@name": "option_values",
                                        "@transfer-ownership": "none",
                                        "@nullable": "1",
                                        "@allow-none": "1",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "../gdk-pixbuf/gdk-pixbuf-io.c",
                                            "@line": "2954",
                                            "#text": "values for named options"
                                        },
                                        "array": {
                                            "@c:type": "char**",
                                            "type": {
                                                "@name": "utf8"
                                            }
                                        }
                                    },
                                    {
                                        "@name": "cancellable",
                                        "@transfer-ownership": "none",
                                        "@nullable": "1",
                                        "@allow-none": "1",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "../gdk-pixbuf/gdk-pixbuf-io.c",
                                            "@line": "2955",
                                            "#text": "optional `GCancellable` object, `NULL` to ignore"
                                        },
                                        "type": {
                                            "@name": "Gio.Cancellable",
                                            "@c:type": "GCancellable*"
                                        }
                                    }
                                ]
                            }
                        },
                        {
                            "@name": "save_to_streamv_async",
                            "@c:identifier": "gdk_pixbuf_save_to_streamv_async",
                            "@version": "2.36",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../gdk-pixbuf/gdk-pixbuf-io.c",
                                "@line": "3086",
                                "#text": "Saves `pixbuf` to an output stream asynchronously.\n\nFor more details see gdk_pixbuf_save_to_streamv(), which is the synchronous\nversion of this function.\n\nWhen the operation is finished, `callback` will be called in the main thread.\n\nYou can then call gdk_pixbuf_save_to_stream_finish() to get the result of\nthe operation."
                            },
                            "source-position": {
                                "@filename": "../gdk-pixbuf/gdk-pixbuf-core.h",
                                "@line": "462"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "type": {
                                    "@name": "none",
                                    "@c:type": "void"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "pixbuf",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../gdk-pixbuf/gdk-pixbuf-io.c",
                                        "@line": "3088",
                                        "#text": "a `GdkPixbuf`"
                                    },
                                    "type": {
                                        "@name": "Pixbuf",
                                        "@c:type": "GdkPixbuf*"
                                    }
                                },
                                "parameter": [
                                    {
                                        "@name": "stream",
                                        "@transfer-ownership": "none",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "../gdk-pixbuf/gdk-pixbuf-io.c",
                                            "@line": "3089",
                                            "#text": "a `GOutputStream` to which to save the pixbuf"
                                        },
                                        "type": {
                                            "@name": "Gio.OutputStream",
                                            "@c:type": "GOutputStream*"
                                        }
                                    },
                                    {
                                        "@name": "type",
                                        "@transfer-ownership": "none",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "../gdk-pixbuf/gdk-pixbuf-io.c",
                                            "@line": "3090",
                                            "#text": "name of file format"
                                        },
                                        "type": {
                                            "@name": "utf8",
                                            "@c:type": "const gchar*"
                                        }
                                    },
                                    {
                                        "@name": "option_keys",
                                        "@transfer-ownership": "none",
                                        "@nullable": "1",
                                        "@allow-none": "1",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "../gdk-pixbuf/gdk-pixbuf-io.c",
                                            "@line": "3091",
                                            "#text": "name of options to set"
                                        },
                                        "array": {
                                            "@c:type": "gchar**",
                                            "type": {
                                                "@name": "utf8"
                                            }
                                        }
                                    },
                                    {
                                        "@name": "option_values",
                                        "@transfer-ownership": "none",
                                        "@nullable": "1",
                                        "@allow-none": "1",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "../gdk-pixbuf/gdk-pixbuf-io.c",
                                            "@line": "3092",
                                            "#text": "values for named options"
                                        },
                                        "array": {
                                            "@c:type": "gchar**",
                                            "type": {
                                                "@name": "utf8"
                                            }
                                        }
                                    },
                                    {
                                        "@name": "cancellable",
                                        "@transfer-ownership": "none",
                                        "@nullable": "1",
                                        "@allow-none": "1",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "../gdk-pixbuf/gdk-pixbuf-io.c",
                                            "@line": "3093",
                                            "#text": "optional `GCancellable` object, `NULL` to ignore"
                                        },
                                        "type": {
                                            "@name": "Gio.Cancellable",
                                            "@c:type": "GCancellable*"
                                        }
                                    },
                                    {
                                        "@name": "callback",
                                        "@transfer-ownership": "none",
                                        "@nullable": "1",
                                        "@allow-none": "1",
                                        "@scope": "async",
                                        "@closure": "6",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "../gdk-pixbuf/gdk-pixbuf-io.c",
                                            "@line": "3094",
                                            "#text": "a `GAsyncReadyCallback` to call when the pixbuf is saved"
                                        },
                                        "type": {
                                            "@name": "Gio.AsyncReadyCallback",
                                            "@c:type": "GAsyncReadyCallback"
                                        }
                                    },
                                    {
                                        "@name": "user_data",
                                        "@transfer-ownership": "none",
                                        "@nullable": "1",
                                        "@allow-none": "1",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "../gdk-pixbuf/gdk-pixbuf-io.c",
                                            "@line": "3095",
                                            "#text": "the data to pass to the callback function"
                                        },
                                        "type": {
                                            "@name": "gpointer",
                                            "@c:type": "gpointer"
                                        }
                                    }
                                ]
                            }
                        },
                        {
                            "@name": "savev",
                            "@c:identifier": "gdk_pixbuf_savev",
                            "@throws": "1",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../gdk-pixbuf/gdk-pixbuf-io.c",
                                "@line": "2528",
                                "#text": "Vector version of `gdk_pixbuf_save()`.\n\nSaves pixbuf to a file in `type`, which is currently \"jpeg\", \"png\", \"tiff\", \"ico\" or \"bmp\".\n\nIf @error is set, `FALSE` will be returned.\n\nSee [method@GdkPixbuf.Pixbuf.save] for more details."
                            },
                            "source-position": {
                                "@filename": "../gdk-pixbuf/gdk-pixbuf-core.h",
                                "@line": "326"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "../gdk-pixbuf/gdk-pixbuf-io.c",
                                    "@line": "2545",
                                    "#text": "whether an error was set"
                                },
                                "type": {
                                    "@name": "gboolean",
                                    "@c:type": "gboolean"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "pixbuf",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../gdk-pixbuf/gdk-pixbuf-io.c",
                                        "@line": "2530",
                                        "#text": "a `GdkPixbuf`."
                                    },
                                    "type": {
                                        "@name": "Pixbuf",
                                        "@c:type": "GdkPixbuf*"
                                    }
                                },
                                "parameter": [
                                    {
                                        "@name": "filename",
                                        "@transfer-ownership": "none",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "../gdk-pixbuf/gdk-pixbuf-io.c",
                                            "@line": "2531",
                                            "#text": "name of file to save."
                                        },
                                        "type": {
                                            "@name": "filename",
                                            "@c:type": "const char*"
                                        }
                                    },
                                    {
                                        "@name": "type",
                                        "@transfer-ownership": "none",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "../gdk-pixbuf/gdk-pixbuf-io.c",
                                            "@line": "2532",
                                            "#text": "name of file format."
                                        },
                                        "type": {
                                            "@name": "utf8",
                                            "@c:type": "const char*"
                                        }
                                    },
                                    {
                                        "@name": "option_keys",
                                        "@transfer-ownership": "none",
                                        "@nullable": "1",
                                        "@allow-none": "1",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "../gdk-pixbuf/gdk-pixbuf-io.c",
                                            "@line": "2533",
                                            "#text": "name of options to set"
                                        },
                                        "array": {
                                            "@c:type": "char**",
                                            "type": {
                                                "@name": "utf8"
                                            }
                                        }
                                    },
                                    {
                                        "@name": "option_values",
                                        "@transfer-ownership": "none",
                                        "@nullable": "1",
                                        "@allow-none": "1",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "../gdk-pixbuf/gdk-pixbuf-io.c",
                                            "@line": "2534",
                                            "#text": "values for named options"
                                        },
                                        "array": {
                                            "@c:type": "char**",
                                            "type": {
                                                "@name": "utf8"
                                            }
                                        }
                                    }
                                ]
                            }
                        },
                        {
                            "@name": "scale",
                            "@c:identifier": "gdk_pixbuf_scale",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../gdk-pixbuf/gdk-pixbuf-scale.c",
                                "@line": "28",
                                "#text": "Creates a transformation of the source image @src by scaling by\n@scale_x and @scale_y then translating by @offset_x and @offset_y,\nthen renders the rectangle (@dest_x, @dest_y, @dest_width,\n@dest_height) of the resulting image onto the destination image\nreplacing the previous contents.\n\nTry to use gdk_pixbuf_scale_simple() first; this function is\nthe industrial-strength power tool you can fall back to, if\ngdk_pixbuf_scale_simple() isn't powerful enough.\n\nIf the source rectangle overlaps the destination rectangle on the\nsame pixbuf, it will be overwritten during the scaling which\nresults in rendering artifacts."
                            },
                            "source-position": {
                                "@filename": "../gdk-pixbuf/gdk-pixbuf-transform.h",
                                "@line": "99"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "type": {
                                    "@name": "none",
                                    "@c:type": "void"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "src",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../gdk-pixbuf/gdk-pixbuf-scale.c",
                                        "@line": "30",
                                        "#text": "a #GdkPixbuf"
                                    },
                                    "type": {
                                        "@name": "Pixbuf",
                                        "@c:type": "const GdkPixbuf*"
                                    }
                                },
                                "parameter": [
                                    {
                                        "@name": "dest",
                                        "@transfer-ownership": "none",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "../gdk-pixbuf/gdk-pixbuf-scale.c",
                                            "@line": "31",
                                            "#text": "the #GdkPixbuf into which to render the results"
                                        },
                                        "type": {
                                            "@name": "Pixbuf",
                                            "@c:type": "GdkPixbuf*"
                                        }
                                    },
                                    {
                                        "@name": "dest_x",
                                        "@transfer-ownership": "none",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "../gdk-pixbuf/gdk-pixbuf-scale.c",
                                            "@line": "32",
                                            "#text": "the left coordinate for region to render"
                                        },
                                        "type": {
                                            "@name": "gint",
                                            "@c:type": "int"
                                        }
                                    },
                                    {
                                        "@name": "dest_y",
                                        "@transfer-ownership": "none",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "../gdk-pixbuf/gdk-pixbuf-scale.c",
                                            "@line": "33",
                                            "#text": "the top coordinate for region to render"
                                        },
                                        "type": {
                                            "@name": "gint",
                                            "@c:type": "int"
                                        }
                                    },
                                    {
                                        "@name": "dest_width",
                                        "@transfer-ownership": "none",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "../gdk-pixbuf/gdk-pixbuf-scale.c",
                                            "@line": "34",
                                            "#text": "the width of the region to render"
                                        },
                                        "type": {
                                            "@name": "gint",
                                            "@c:type": "int"
                                        }
                                    },
                                    {
                                        "@name": "dest_height",
                                        "@transfer-ownership": "none",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "../gdk-pixbuf/gdk-pixbuf-scale.c",
                                            "@line": "35",
                                            "#text": "the height of the region to render"
                                        },
                                        "type": {
                                            "@name": "gint",
                                            "@c:type": "int"
                                        }
                                    },
                                    {
                                        "@name": "offset_x",
                                        "@transfer-ownership": "none",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "../gdk-pixbuf/gdk-pixbuf-scale.c",
                                            "@line": "36",
                                            "#text": "the offset in the X direction (currently rounded to an integer)"
                                        },
                                        "type": {
                                            "@name": "gdouble",
                                            "@c:type": "double"
                                        }
                                    },
                                    {
                                        "@name": "offset_y",
                                        "@transfer-ownership": "none",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "../gdk-pixbuf/gdk-pixbuf-scale.c",
                                            "@line": "37",
                                            "#text": "the offset in the Y direction (currently rounded to an integer)"
                                        },
                                        "type": {
                                            "@name": "gdouble",
                                            "@c:type": "double"
                                        }
                                    },
                                    {
                                        "@name": "scale_x",
                                        "@transfer-ownership": "none",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "../gdk-pixbuf/gdk-pixbuf-scale.c",
                                            "@line": "38",
                                            "#text": "the scale factor in the X direction"
                                        },
                                        "type": {
                                            "@name": "gdouble",
                                            "@c:type": "double"
                                        }
                                    },
                                    {
                                        "@name": "scale_y",
                                        "@transfer-ownership": "none",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "../gdk-pixbuf/gdk-pixbuf-scale.c",
                                            "@line": "39",
                                            "#text": "the scale factor in the Y direction"
                                        },
                                        "type": {
                                            "@name": "gdouble",
                                            "@c:type": "double"
                                        }
                                    },
                                    {
                                        "@name": "interp_type",
                                        "@transfer-ownership": "none",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "../gdk-pixbuf/gdk-pixbuf-scale.c",
                                            "@line": "40",
                                            "#text": "the interpolation type for the transformation."
                                        },
                                        "type": {
                                            "@name": "InterpType",
                                            "@c:type": "GdkInterpType"
                                        }
                                    }
                                ]
                            }
                        },
                        {
                            "@name": "scale_simple",
                            "@c:identifier": "gdk_pixbuf_scale_simple",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../gdk-pixbuf/gdk-pixbuf-scale.c",
                                "@line": "236",
                                "#text": "Create a new pixbuf containing a copy of `src` scaled to\n`dest_width` x `dest_height`.\n\nThis function leaves `src` unaffected.\n\nThe `interp_type` should be `GDK_INTERP_NEAREST` if you want maximum\nspeed (but when scaling down `GDK_INTERP_NEAREST` is usually unusably\nugly). The default `interp_type` should be `GDK_INTERP_BILINEAR` which\noffers reasonable quality and speed.\n\nYou can scale a sub-portion of `src` by creating a sub-pixbuf\npointing into `src`; see [method@GdkPixbuf.Pixbuf.new_subpixbuf].\n\nIf `dest_width` and `dest_height` are equal to the width and height of\n`src`, this function will return an unscaled copy of `src`.\n\nFor more complicated scaling/alpha blending see [method@GdkPixbuf.Pixbuf.scale]\nand [method@GdkPixbuf.Pixbuf.composite]."
                            },
                            "source-position": {
                                "@filename": "../gdk-pixbuf/gdk-pixbuf-transform.h",
                                "@line": "143"
                            },
                            "return-value": {
                                "@transfer-ownership": "full",
                                "@nullable": "1",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "../gdk-pixbuf/gdk-pixbuf-scale.c",
                                    "@line": "262",
                                    "#text": "the new pixbuf"
                                },
                                "type": {
                                    "@name": "Pixbuf",
                                    "@c:type": "GdkPixbuf*"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "src",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../gdk-pixbuf/gdk-pixbuf-scale.c",
                                        "@line": "238",
                                        "#text": "a #GdkPixbuf"
                                    },
                                    "type": {
                                        "@name": "Pixbuf",
                                        "@c:type": "const GdkPixbuf*"
                                    }
                                },
                                "parameter": [
                                    {
                                        "@name": "dest_width",
                                        "@transfer-ownership": "none",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "../gdk-pixbuf/gdk-pixbuf-scale.c",
                                            "@line": "239",
                                            "#text": "the width of destination image"
                                        },
                                        "type": {
                                            "@name": "gint",
                                            "@c:type": "int"
                                        }
                                    },
                                    {
                                        "@name": "dest_height",
                                        "@transfer-ownership": "none",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "../gdk-pixbuf/gdk-pixbuf-scale.c",
                                            "@line": "240",
                                            "#text": "the height of destination image"
                                        },
                                        "type": {
                                            "@name": "gint",
                                            "@c:type": "int"
                                        }
                                    },
                                    {
                                        "@name": "interp_type",
                                        "@transfer-ownership": "none",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "../gdk-pixbuf/gdk-pixbuf-scale.c",
                                            "@line": "241",
                                            "#text": "the interpolation type for the transformation."
                                        },
                                        "type": {
                                            "@name": "InterpType",
                                            "@c:type": "GdkInterpType"
                                        }
                                    }
                                ]
                            }
                        },
                        {
                            "@name": "set_option",
                            "@c:identifier": "gdk_pixbuf_set_option",
                            "@version": "2.2",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../gdk-pixbuf/gdk-pixbuf.c",
                                "@line": "1257",
                                "#text": "Attaches a key/value pair as an option to a `GdkPixbuf`.\n\nIf `key` already exists in the list of options attached to the `pixbuf`,\nthe new value is ignored and `FALSE` is returned."
                            },
                            "source-position": {
                                "@filename": "../gdk-pixbuf/gdk-pixbuf-core.h",
                                "@line": "506"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "../gdk-pixbuf/gdk-pixbuf.c",
                                    "@line": "1268",
                                    "#text": "`TRUE` on success"
                                },
                                "type": {
                                    "@name": "gboolean",
                                    "@c:type": "gboolean"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "pixbuf",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../gdk-pixbuf/gdk-pixbuf.c",
                                        "@line": "1259",
                                        "#text": "a `GdkPixbuf`"
                                    },
                                    "type": {
                                        "@name": "Pixbuf",
                                        "@c:type": "GdkPixbuf*"
                                    }
                                },
                                "parameter": [
                                    {
                                        "@name": "key",
                                        "@transfer-ownership": "none",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "../gdk-pixbuf/gdk-pixbuf.c",
                                            "@line": "1260",
                                            "#text": "a nul-terminated string."
                                        },
                                        "type": {
                                            "@name": "utf8",
                                            "@c:type": "const gchar*"
                                        }
                                    },
                                    {
                                        "@name": "value",
                                        "@transfer-ownership": "none",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "../gdk-pixbuf/gdk-pixbuf.c",
                                            "@line": "1261",
                                            "#text": "a nul-terminated string."
                                        },
                                        "type": {
                                            "@name": "utf8",
                                            "@c:type": "const gchar*"
                                        }
                                    }
                                ]
                            }
                        },
                        {
                            "@name": "unref",
                            "@c:identifier": "gdk_pixbuf_unref",
                            "@introspectable": "0",
                            "@deprecated": "1",
                            "@deprecated-version": "2.0",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../gdk-pixbuf/gdk-pixbuf.c",
                                "@line": "430",
                                "#text": "Removes a reference from a pixbuf."
                            },
                            "doc-deprecated": {
                                "@xml:space": "preserve",
                                "#text": "Use g_object_unref()."
                            },
                            "source-position": {
                                "@filename": "../gdk-pixbuf/gdk-pixbuf-core.h",
                                "@line": "168"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "type": {
                                    "@name": "none",
                                    "@c:type": "void"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "pixbuf",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../gdk-pixbuf/gdk-pixbuf.c",
                                        "@line": "432",
                                        "#text": "A pixbuf."
                                    },
                                    "type": {
                                        "@name": "Pixbuf",
                                        "@c:type": "GdkPixbuf*"
                                    }
                                }
                            }
                        }
                    ],
                    "property": [
                        {
                            "@name": "bits-per-sample",
                            "@writable": "1",
                            "@construct-only": "1",
                            "@transfer-ownership": "none",
                            "@getter": "get_bits_per_sample",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../gdk-pixbuf/gdk-pixbuf.c",
                                "@line": "281",
                                "#text": "The number of bits per sample.\n\nCurrently only 8 bit per sample are supported."
                            },
                            "type": {
                                "@name": "gint",
                                "@c:type": "gint"
                            }
                        },
                        {
                            "@name": "colorspace",
                            "@writable": "1",
                            "@construct-only": "1",
                            "@transfer-ownership": "none",
                            "@getter": "get_colorspace",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../gdk-pixbuf/gdk-pixbuf.c",
                                "@line": "254",
                                "#text": "The color space of the pixbuf.\n\nCurrently, only `GDK_COLORSPACE_RGB` is supported."
                            },
                            "type": {
                                "@name": "Colorspace"
                            }
                        },
                        {
                            "@name": "has-alpha",
                            "@writable": "1",
                            "@construct-only": "1",
                            "@transfer-ownership": "none",
                            "@getter": "get_has_alpha",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../gdk-pixbuf/gdk-pixbuf.c",
                                "@line": "269",
                                "#text": "Whether the pixbuf has an alpha channel."
                            },
                            "type": {
                                "@name": "gboolean",
                                "@c:type": "gboolean"
                            }
                        },
                        {
                            "@name": "height",
                            "@writable": "1",
                            "@construct-only": "1",
                            "@transfer-ownership": "none",
                            "@getter": "get_height",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../gdk-pixbuf/gdk-pixbuf.c",
                                "@line": "311",
                                "#text": "The number of rows of the pixbuf."
                            },
                            "type": {
                                "@name": "gint",
                                "@c:type": "gint"
                            }
                        },
                        {
                            "@name": "n-channels",
                            "@writable": "1",
                            "@construct-only": "1",
                            "@transfer-ownership": "none",
                            "@getter": "get_n_channels",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../gdk-pixbuf/gdk-pixbuf.c",
                                "@line": "238",
                                "#text": "The number of samples per pixel.\n\nCurrently, only 3 or 4 samples per pixel are supported."
                            },
                            "type": {
                                "@name": "gint",
                                "@c:type": "gint"
                            }
                        },
                        {
                            "@name": "pixel-bytes",
                            "@writable": "1",
                            "@construct-only": "1",
                            "@transfer-ownership": "none",
                            "type": {
                                "@name": "GLib.Bytes"
                            }
                        },
                        {
                            "@name": "pixels",
                            "@writable": "1",
                            "@construct-only": "1",
                            "@transfer-ownership": "none",
                            "@getter": "get_pixels",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../gdk-pixbuf/gdk-pixbuf.c",
                                "@line": "343",
                                "#text": "A pointer to the pixel data of the pixbuf."
                            },
                            "type": {
                                "@name": "gpointer",
                                "@c:type": "gpointer"
                            }
                        },
                        {
                            "@name": "rowstride",
                            "@writable": "1",
                            "@construct-only": "1",
                            "@transfer-ownership": "none",
                            "@getter": "get_rowstride",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../gdk-pixbuf/gdk-pixbuf.c",
                                "@line": "325",
                                "#text": "The number of bytes between the start of a row and\nthe start of the next row.\n\nThis number must (obviously) be at least as large as the\nwidth of the pixbuf."
                            },
                            "type": {
                                "@name": "gint",
                                "@c:type": "gint"
                            }
                        },
                        {
                            "@name": "width",
                            "@writable": "1",
                            "@construct-only": "1",
                            "@transfer-ownership": "none",
                            "@getter": "get_width",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../gdk-pixbuf/gdk-pixbuf.c",
                                "@line": "297",
                                "#text": "The number of columns of the pixbuf."
                            },
                            "type": {
                                "@name": "gint",
                                "@c:type": "gint"
                            }
                        }
                    ]
                },
                {
                    "@name": "PixbufAnimation",
                    "@c:symbol-prefix": "pixbuf_animation",
                    "@c:type": "GdkPixbufAnimation",
                    "@parent": "GObject.Object",
                    "@glib:type-name": "GdkPixbufAnimation",
                    "@glib:get-type": "gdk_pixbuf_animation_get_type",
                    "@glib:type-struct": "PixbufAnimationClass",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "../gdk-pixbuf/gdk-pixbuf-animation.c",
                        "@line": "32",
                        "#text": "An opaque object representing an animation.\n\nThe GdkPixBuf library provides a simple mechanism to load and\nrepresent animations. An animation is conceptually a series of\nframes to be displayed over time.\n\nThe animation may not be represented as a series of frames\ninternally; for example, it may be stored as a sprite and\ninstructions for moving the sprite around a background.\n\nTo display an animation you don't need to understand its\nrepresentation, however; you just ask `GdkPixbuf` what should\nbe displayed at a given point in time."
                    },
                    "source-position": {
                        "@filename": "../gdk-pixbuf/gdk-pixbuf-animation.h",
                        "@line": "163"
                    },
                    "constructor": [
                        {
                            "@name": "new_from_file",
                            "@c:identifier": "gdk_pixbuf_animation_new_from_file",
                            "@throws": "1",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../gdk-pixbuf/gdk-pixbuf-animation.c",
                                "@line": "147",
                                "#text": "Creates a new animation by loading it from a file.\n\nThe file format is detected automatically.\n\nIf the file's format does not support multi-frame images, then an animation\nwith a single frame will be created.\n\nPossible errors are in the `GDK_PIXBUF_ERROR` and `G_FILE_ERROR` domains."
                            },
                            "source-position": {
                                "@filename": "../gdk-pixbuf/gdk-pixbuf-animation.h",
                                "@line": "63"
                            },
                            "return-value": {
                                "@transfer-ownership": "full",
                                "@nullable": "1",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "../gdk-pixbuf/gdk-pixbuf-animation.c",
                                    "@line": "162",
                                    "#text": "A newly-created animation"
                                },
                                "type": {
                                    "@name": "PixbufAnimation",
                                    "@c:type": "GdkPixbufAnimation*"
                                }
                            },
                            "parameters": {
                                "parameter": {
                                    "@name": "filename",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../gdk-pixbuf/gdk-pixbuf-animation.c",
                                        "@line": "149",
                                        "#text": "Name of file to load, in the GLib file\n  name encoding"
                                    },
                                    "type": {
                                        "@name": "filename",
                                        "@c:type": "const char*"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "new_from_resource",
                            "@c:identifier": "gdk_pixbuf_animation_new_from_resource",
                            "@version": "2.28",
                            "@throws": "1",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../gdk-pixbuf/gdk-pixbuf-animation.c",
                                "@line": "504",
                                "#text": "Creates a new pixbuf animation by loading an image from an resource.\n\nThe file format is detected automatically. If `NULL` is returned, then\n@error will be set."
                            },
                            "source-position": {
                                "@filename": "../gdk-pixbuf/gdk-pixbuf-animation.h",
                                "@line": "78"
                            },
                            "return-value": {
                                "@transfer-ownership": "full",
                                "@nullable": "1",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "../gdk-pixbuf/gdk-pixbuf-animation.c",
                                    "@line": "514",
                                    "#text": "A newly-created animation"
                                },
                                "type": {
                                    "@name": "PixbufAnimation",
                                    "@c:type": "GdkPixbufAnimation*"
                                }
                            },
                            "parameters": {
                                "parameter": {
                                    "@name": "resource_path",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../gdk-pixbuf/gdk-pixbuf-animation.c",
                                        "@line": "506",
                                        "#text": "the path of the resource file"
                                    },
                                    "type": {
                                        "@name": "utf8",
                                        "@c:type": "const char*"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "new_from_stream",
                            "@c:identifier": "gdk_pixbuf_animation_new_from_stream",
                            "@version": "2.28",
                            "@throws": "1",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../gdk-pixbuf/gdk-pixbuf-animation.c",
                                "@line": "346",
                                "#text": "Creates a new animation by loading it from an input stream.\n\nThe file format is detected automatically.\n\nIf `NULL` is returned, then @error will be set.\n\nThe @cancellable can be used to abort the operation from another thread.\nIf the operation was cancelled, the error `G_IO_ERROR_CANCELLED` will be\nreturned. Other possible errors are in the `GDK_PIXBUF_ERROR` and\n`G_IO_ERROR` domains.\n\nThe stream is not closed."
                            },
                            "source-position": {
                                "@filename": "../gdk-pixbuf/gdk-pixbuf-animation.h",
                                "@line": "66"
                            },
                            "return-value": {
                                "@transfer-ownership": "full",
                                "@nullable": "1",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "../gdk-pixbuf/gdk-pixbuf-animation.c",
                                    "@line": "365",
                                    "#text": "A newly-created animation"
                                },
                                "type": {
                                    "@name": "PixbufAnimation",
                                    "@c:type": "GdkPixbufAnimation*"
                                }
                            },
                            "parameters": {
                                "parameter": [
                                    {
                                        "@name": "stream",
                                        "@transfer-ownership": "none",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "../gdk-pixbuf/gdk-pixbuf-animation.c",
                                            "@line": "348",
                                            "#text": "a `GInputStream` to load the pixbuf from"
                                        },
                                        "type": {
                                            "@name": "Gio.InputStream",
                                            "@c:type": "GInputStream*"
                                        }
                                    },
                                    {
                                        "@name": "cancellable",
                                        "@transfer-ownership": "none",
                                        "@nullable": "1",
                                        "@allow-none": "1",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "../gdk-pixbuf/gdk-pixbuf-animation.c",
                                            "@line": "349",
                                            "#text": "optional `GCancellable` object"
                                        },
                                        "type": {
                                            "@name": "Gio.Cancellable",
                                            "@c:type": "GCancellable*"
                                        }
                                    }
                                ]
                            }
                        },
                        {
                            "@name": "new_from_stream_finish",
                            "@c:identifier": "gdk_pixbuf_animation_new_from_stream_finish",
                            "@version": "2.28",
                            "@throws": "1",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../gdk-pixbuf/gdk-pixbuf-animation.c",
                                "@line": "479",
                                "#text": "Finishes an asynchronous pixbuf animation creation operation started with\n[func@GdkPixbuf.PixbufAnimation.new_from_stream_async]."
                            },
                            "source-position": {
                                "@filename": "../gdk-pixbuf/gdk-pixbuf-animation.h",
                                "@line": "75"
                            },
                            "return-value": {
                                "@transfer-ownership": "full",
                                "@nullable": "1",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "../gdk-pixbuf/gdk-pixbuf-animation.c",
                                    "@line": "487",
                                    "#text": "the newly created animation"
                                },
                                "type": {
                                    "@name": "PixbufAnimation",
                                    "@c:type": "GdkPixbufAnimation*"
                                }
                            },
                            "parameters": {
                                "parameter": {
                                    "@name": "async_result",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../gdk-pixbuf/gdk-pixbuf-animation.c",
                                        "@line": "481",
                                        "#text": "a #GAsyncResult"
                                    },
                                    "type": {
                                        "@name": "Gio.AsyncResult",
                                        "@c:type": "GAsyncResult*"
                                    }
                                }
                            }
                        }
                    ],
                    "function": {
                        "@name": "new_from_stream_async",
                        "@c:identifier": "gdk_pixbuf_animation_new_from_stream_async",
                        "@version": "2.28",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "../gdk-pixbuf/gdk-pixbuf-animation.c",
                            "@line": "443",
                            "#text": "Creates a new animation by asynchronously loading an image from an input stream.\n\nFor more details see gdk_pixbuf_new_from_stream(), which is the synchronous\nversion of this function.\n\nWhen the operation is finished, `callback` will be called in the main thread.\nYou can then call gdk_pixbuf_animation_new_from_stream_finish() to get the\nresult of the operation."
                        },
                        "source-position": {
                            "@filename": "../gdk-pixbuf/gdk-pixbuf-animation.h",
                            "@line": "70"
                        },
                        "return-value": {
                            "@transfer-ownership": "none",
                            "type": {
                                "@name": "none",
                                "@c:type": "void"
                            }
                        },
                        "parameters": {
                            "parameter": [
                                {
                                    "@name": "stream",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../gdk-pixbuf/gdk-pixbuf-animation.c",
                                        "@line": "445",
                                        "#text": "a #GInputStream from which to load the animation"
                                    },
                                    "type": {
                                        "@name": "Gio.InputStream",
                                        "@c:type": "GInputStream*"
                                    }
                                },
                                {
                                    "@name": "cancellable",
                                    "@transfer-ownership": "none",
                                    "@nullable": "1",
                                    "@allow-none": "1",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../gdk-pixbuf/gdk-pixbuf-animation.c",
                                        "@line": "446",
                                        "#text": "optional #GCancellable object"
                                    },
                                    "type": {
                                        "@name": "Gio.Cancellable",
                                        "@c:type": "GCancellable*"
                                    }
                                },
                                {
                                    "@name": "callback",
                                    "@transfer-ownership": "none",
                                    "@nullable": "1",
                                    "@allow-none": "1",
                                    "@scope": "async",
                                    "@closure": "3",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../gdk-pixbuf/gdk-pixbuf-animation.c",
                                        "@line": "447",
                                        "#text": "a `GAsyncReadyCallback` to call when the pixbuf is loaded"
                                    },
                                    "type": {
                                        "@name": "Gio.AsyncReadyCallback",
                                        "@c:type": "GAsyncReadyCallback"
                                    }
                                },
                                {
                                    "@name": "user_data",
                                    "@transfer-ownership": "none",
                                    "@nullable": "1",
                                    "@allow-none": "1",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../gdk-pixbuf/gdk-pixbuf-animation.c",
                                        "@line": "448",
                                        "#text": "the data to pass to the callback function"
                                    },
                                    "type": {
                                        "@name": "gpointer",
                                        "@c:type": "gpointer"
                                    }
                                }
                            ]
                        }
                    },
                    "virtual-method": [
                        {
                            "@name": "get_iter",
                            "@invoker": "get_iter",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../gdk-pixbuf/gdk-pixbuf-animation.c",
                                "@line": "664",
                                "#text": "Get an iterator for displaying an animation.\n\nThe iterator provides the frames that should be displayed at a\ngiven time.\n\n@start_time would normally come from g_get_current_time(), and marks\nthe beginning of animation playback. After creating an iterator, you\nshould immediately display the pixbuf returned by\ngdk_pixbuf_animation_iter_get_pixbuf(). Then, you should install\na timeout (with g_timeout_add()) or by some other mechanism ensure\nthat you'll update the image after\ngdk_pixbuf_animation_iter_get_delay_time() milliseconds. Each time\nthe image is updated, you should reinstall the timeout with the new,\npossibly-changed delay time.\n\nAs a shortcut, if @start_time is `NULL`, the result of\ng_get_current_time() will be used automatically.\n\nTo update the image (i.e. possibly change the result of\ngdk_pixbuf_animation_iter_get_pixbuf() to a new frame of the animation),\ncall gdk_pixbuf_animation_iter_advance().\n\nIf you're using #GdkPixbufLoader, in addition to updating the image\nafter the delay time, you should also update it whenever you\nreceive the area_updated signal and\ngdk_pixbuf_animation_iter_on_currently_loading_frame() returns\n`TRUE`. In this case, the frame currently being fed into the loader\nhas received new data, so needs to be refreshed. The delay time for\na frame may also be modified after an area_updated signal, for\nexample if the delay time for a frame is encoded in the data after\nthe frame itself. So your timeout should be reinstalled after any\narea_updated signal.\n\nA delay time of -1 is possible, indicating \"infinite\"."
                            },
                            "source-position": {
                                "@filename": "../gdk-pixbuf/gdk-pixbuf-animation.h",
                                "@line": "161"
                            },
                            "return-value": {
                                "@transfer-ownership": "full",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "../gdk-pixbuf/gdk-pixbuf-animation.c",
                                    "@line": "704",
                                    "#text": "an iterator to move over the animation"
                                },
                                "type": {
                                    "@name": "PixbufAnimationIter",
                                    "@c:type": "GdkPixbufAnimationIter*"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "animation",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../gdk-pixbuf/gdk-pixbuf-animation.c",
                                        "@line": "666",
                                        "#text": "a #GdkPixbufAnimation"
                                    },
                                    "type": {
                                        "@name": "PixbufAnimation",
                                        "@c:type": "GdkPixbufAnimation*"
                                    }
                                },
                                "parameter": {
                                    "@name": "start_time",
                                    "@transfer-ownership": "none",
                                    "@nullable": "1",
                                    "@allow-none": "1",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../gdk-pixbuf/gdk-pixbuf-animation.c",
                                        "@line": "667",
                                        "#text": "time when the animation starts playing"
                                    },
                                    "type": {
                                        "@name": "GLib.TimeVal",
                                        "@c:type": "const GTimeVal*"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "get_size",
                            "source-position": {
                                "@filename": "../gdk-pixbuf/gdk-pixbuf-animation.h",
                                "@line": "157"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "type": {
                                    "@name": "none",
                                    "@c:type": "void"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "animation",
                                    "@transfer-ownership": "none",
                                    "type": {
                                        "@name": "PixbufAnimation",
                                        "@c:type": "GdkPixbufAnimation*"
                                    }
                                },
                                "parameter": [
                                    {
                                        "@name": "width",
                                        "@transfer-ownership": "none",
                                        "type": {
                                            "@name": "gint",
                                            "@c:type": "int*"
                                        }
                                    },
                                    {
                                        "@name": "height",
                                        "@transfer-ownership": "none",
                                        "type": {
                                            "@name": "gint",
                                            "@c:type": "int*"
                                        }
                                    }
                                ]
                            }
                        },
                        {
                            "@name": "get_static_image",
                            "@invoker": "get_static_image",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../gdk-pixbuf/gdk-pixbuf-animation.c",
                                "@line": "593",
                                "#text": "Retrieves a static image for the animation.\n\nIf an animation is really just a plain image (has only one frame),\nthis function returns that image.\n\nIf the animation is an animation, this function returns a reasonable\nimage to use as a static unanimated image, which might be the first\nframe, or something more sophisticated depending on the file format.\n\nIf an animation hasn't loaded any frames yet, this function will\nreturn `NULL`."
                            },
                            "source-position": {
                                "@filename": "../gdk-pixbuf/gdk-pixbuf-animation.h",
                                "@line": "155"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "../gdk-pixbuf/gdk-pixbuf-animation.c",
                                    "@line": "609",
                                    "#text": "unanimated image representing the animation"
                                },
                                "type": {
                                    "@name": "Pixbuf",
                                    "@c:type": "GdkPixbuf*"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "animation",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../gdk-pixbuf/gdk-pixbuf-animation.c",
                                        "@line": "595",
                                        "#text": "a #GdkPixbufAnimation"
                                    },
                                    "type": {
                                        "@name": "PixbufAnimation",
                                        "@c:type": "GdkPixbufAnimation*"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "is_static_image",
                            "@invoker": "is_static_image",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../gdk-pixbuf/gdk-pixbuf-animation.c",
                                "@line": "572",
                                "#text": "Checks whether the animation is a static image.\n\nIf you load a file with gdk_pixbuf_animation_new_from_file() and it\nturns out to be a plain, unanimated image, then this function will\nreturn `TRUE`. Use gdk_pixbuf_animation_get_static_image() to retrieve\nthe image."
                            },
                            "source-position": {
                                "@filename": "../gdk-pixbuf/gdk-pixbuf-animation.h",
                                "@line": "153"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "../gdk-pixbuf/gdk-pixbuf-animation.c",
                                    "@line": "583",
                                    "#text": "`TRUE` if the \"animation\" was really just an image"
                                },
                                "type": {
                                    "@name": "gboolean",
                                    "@c:type": "gboolean"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "animation",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../gdk-pixbuf/gdk-pixbuf-animation.c",
                                        "@line": "574",
                                        "#text": "a #GdkPixbufAnimation"
                                    },
                                    "type": {
                                        "@name": "PixbufAnimation",
                                        "@c:type": "GdkPixbufAnimation*"
                                    }
                                }
                            }
                        }
                    ],
                    "method": [
                        {
                            "@name": "get_height",
                            "@c:identifier": "gdk_pixbuf_animation_get_height",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../gdk-pixbuf/gdk-pixbuf-animation.c",
                                "@line": "641",
                                "#text": "Queries the height of the bounding box of a pixbuf animation."
                            },
                            "source-position": {
                                "@filename": "../gdk-pixbuf/gdk-pixbuf-animation.h",
                                "@line": "92"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "../gdk-pixbuf/gdk-pixbuf-animation.c",
                                    "@line": "647",
                                    "#text": "Height of the bounding box of the animation."
                                },
                                "type": {
                                    "@name": "gint",
                                    "@c:type": "int"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "animation",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../gdk-pixbuf/gdk-pixbuf-animation.c",
                                        "@line": "643",
                                        "#text": "An animation."
                                    },
                                    "type": {
                                        "@name": "PixbufAnimation",
                                        "@c:type": "GdkPixbufAnimation*"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "get_iter",
                            "@c:identifier": "gdk_pixbuf_animation_get_iter",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../gdk-pixbuf/gdk-pixbuf-animation.c",
                                "@line": "664",
                                "#text": "Get an iterator for displaying an animation.\n\nThe iterator provides the frames that should be displayed at a\ngiven time.\n\n@start_time would normally come from g_get_current_time(), and marks\nthe beginning of animation playback. After creating an iterator, you\nshould immediately display the pixbuf returned by\ngdk_pixbuf_animation_iter_get_pixbuf(). Then, you should install\na timeout (with g_timeout_add()) or by some other mechanism ensure\nthat you'll update the image after\ngdk_pixbuf_animation_iter_get_delay_time() milliseconds. Each time\nthe image is updated, you should reinstall the timeout with the new,\npossibly-changed delay time.\n\nAs a shortcut, if @start_time is `NULL`, the result of\ng_get_current_time() will be used automatically.\n\nTo update the image (i.e. possibly change the result of\ngdk_pixbuf_animation_iter_get_pixbuf() to a new frame of the animation),\ncall gdk_pixbuf_animation_iter_advance().\n\nIf you're using #GdkPixbufLoader, in addition to updating the image\nafter the delay time, you should also update it whenever you\nreceive the area_updated signal and\ngdk_pixbuf_animation_iter_on_currently_loading_frame() returns\n`TRUE`. In this case, the frame currently being fed into the loader\nhas received new data, so needs to be refreshed. The delay time for\na frame may also be modified after an area_updated signal, for\nexample if the delay time for a frame is encoded in the data after\nthe frame itself. So your timeout should be reinstalled after any\narea_updated signal.\n\nA delay time of -1 is possible, indicating \"infinite\"."
                            },
                            "source-position": {
                                "@filename": "../gdk-pixbuf/gdk-pixbuf-animation.h",
                                "@line": "100"
                            },
                            "return-value": {
                                "@transfer-ownership": "full",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "../gdk-pixbuf/gdk-pixbuf-animation.c",
                                    "@line": "704",
                                    "#text": "an iterator to move over the animation"
                                },
                                "type": {
                                    "@name": "PixbufAnimationIter",
                                    "@c:type": "GdkPixbufAnimationIter*"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "animation",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../gdk-pixbuf/gdk-pixbuf-animation.c",
                                        "@line": "666",
                                        "#text": "a #GdkPixbufAnimation"
                                    },
                                    "type": {
                                        "@name": "PixbufAnimation",
                                        "@c:type": "GdkPixbufAnimation*"
                                    }
                                },
                                "parameter": {
                                    "@name": "start_time",
                                    "@transfer-ownership": "none",
                                    "@nullable": "1",
                                    "@allow-none": "1",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../gdk-pixbuf/gdk-pixbuf-animation.c",
                                        "@line": "667",
                                        "#text": "time when the animation starts playing"
                                    },
                                    "type": {
                                        "@name": "GLib.TimeVal",
                                        "@c:type": "const GTimeVal*"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "get_static_image",
                            "@c:identifier": "gdk_pixbuf_animation_get_static_image",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../gdk-pixbuf/gdk-pixbuf-animation.c",
                                "@line": "593",
                                "#text": "Retrieves a static image for the animation.\n\nIf an animation is really just a plain image (has only one frame),\nthis function returns that image.\n\nIf the animation is an animation, this function returns a reasonable\nimage to use as a static unanimated image, which might be the first\nframe, or something more sophisticated depending on the file format.\n\nIf an animation hasn't loaded any frames yet, this function will\nreturn `NULL`."
                            },
                            "source-position": {
                                "@filename": "../gdk-pixbuf/gdk-pixbuf-animation.h",
                                "@line": "96"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "../gdk-pixbuf/gdk-pixbuf-animation.c",
                                    "@line": "609",
                                    "#text": "unanimated image representing the animation"
                                },
                                "type": {
                                    "@name": "Pixbuf",
                                    "@c:type": "GdkPixbuf*"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "animation",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../gdk-pixbuf/gdk-pixbuf-animation.c",
                                        "@line": "595",
                                        "#text": "a #GdkPixbufAnimation"
                                    },
                                    "type": {
                                        "@name": "PixbufAnimation",
                                        "@c:type": "GdkPixbufAnimation*"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "get_width",
                            "@c:identifier": "gdk_pixbuf_animation_get_width",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../gdk-pixbuf/gdk-pixbuf-animation.c",
                                "@line": "619",
                                "#text": "Queries the width of the bounding box of a pixbuf animation."
                            },
                            "source-position": {
                                "@filename": "../gdk-pixbuf/gdk-pixbuf-animation.h",
                                "@line": "90"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "../gdk-pixbuf/gdk-pixbuf-animation.c",
                                    "@line": "625",
                                    "#text": "Width of the bounding box of the animation."
                                },
                                "type": {
                                    "@name": "gint",
                                    "@c:type": "int"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "animation",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../gdk-pixbuf/gdk-pixbuf-animation.c",
                                        "@line": "621",
                                        "#text": "An animation."
                                    },
                                    "type": {
                                        "@name": "PixbufAnimation",
                                        "@c:type": "GdkPixbufAnimation*"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "is_static_image",
                            "@c:identifier": "gdk_pixbuf_animation_is_static_image",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../gdk-pixbuf/gdk-pixbuf-animation.c",
                                "@line": "572",
                                "#text": "Checks whether the animation is a static image.\n\nIf you load a file with gdk_pixbuf_animation_new_from_file() and it\nturns out to be a plain, unanimated image, then this function will\nreturn `TRUE`. Use gdk_pixbuf_animation_get_static_image() to retrieve\nthe image."
                            },
                            "source-position": {
                                "@filename": "../gdk-pixbuf/gdk-pixbuf-animation.h",
                                "@line": "94"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "../gdk-pixbuf/gdk-pixbuf-animation.c",
                                    "@line": "583",
                                    "#text": "`TRUE` if the \"animation\" was really just an image"
                                },
                                "type": {
                                    "@name": "gboolean",
                                    "@c:type": "gboolean"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "animation",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../gdk-pixbuf/gdk-pixbuf-animation.c",
                                        "@line": "574",
                                        "#text": "a #GdkPixbufAnimation"
                                    },
                                    "type": {
                                        "@name": "PixbufAnimation",
                                        "@c:type": "GdkPixbufAnimation*"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "ref",
                            "@c:identifier": "gdk_pixbuf_animation_ref",
                            "@introspectable": "0",
                            "@deprecated": "1",
                            "@deprecated-version": "2.0",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../gdk-pixbuf/gdk-pixbuf-animation.c",
                                "@line": "542",
                                "#text": "Adds a reference to an animation."
                            },
                            "doc-deprecated": {
                                "@xml:space": "preserve",
                                "#text": "Use g_object_ref()."
                            },
                            "source-position": {
                                "@filename": "../gdk-pixbuf/gdk-pixbuf-animation.h",
                                "@line": "84"
                            },
                            "return-value": {
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "../gdk-pixbuf/gdk-pixbuf-animation.c",
                                    "@line": "548",
                                    "#text": "The same as the @animation argument."
                                },
                                "type": {
                                    "@name": "PixbufAnimation",
                                    "@c:type": "GdkPixbufAnimation*"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "animation",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../gdk-pixbuf/gdk-pixbuf-animation.c",
                                        "@line": "544",
                                        "#text": "An animation."
                                    },
                                    "type": {
                                        "@name": "PixbufAnimation",
                                        "@c:type": "GdkPixbufAnimation*"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "unref",
                            "@c:identifier": "gdk_pixbuf_animation_unref",
                            "@introspectable": "0",
                            "@deprecated": "1",
                            "@deprecated-version": "2.0",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../gdk-pixbuf/gdk-pixbuf-animation.c",
                                "@line": "558",
                                "#text": "Removes a reference from an animation."
                            },
                            "doc-deprecated": {
                                "@xml:space": "preserve",
                                "#text": "Use g_object_unref()."
                            },
                            "source-position": {
                                "@filename": "../gdk-pixbuf/gdk-pixbuf-animation.h",
                                "@line": "86"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "type": {
                                    "@name": "none",
                                    "@c:type": "void"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "animation",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../gdk-pixbuf/gdk-pixbuf-animation.c",
                                        "@line": "560",
                                        "#text": "An animation."
                                    },
                                    "type": {
                                        "@name": "PixbufAnimation",
                                        "@c:type": "GdkPixbufAnimation*"
                                    }
                                }
                            }
                        }
                    ],
                    "field": {
                        "@name": "parent_instance",
                        "type": {
                            "@name": "GObject.Object",
                            "@c:type": "GObject"
                        }
                    }
                },
                {
                    "@name": "PixbufAnimationIter",
                    "@c:symbol-prefix": "pixbuf_animation_iter",
                    "@c:type": "GdkPixbufAnimationIter",
                    "@parent": "GObject.Object",
                    "@glib:type-name": "GdkPixbufAnimationIter",
                    "@glib:get-type": "gdk_pixbuf_animation_iter_get_type",
                    "@glib:type-struct": "PixbufAnimationIterClass",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "../gdk-pixbuf/gdk-pixbuf-animation.c",
                        "@line": "50",
                        "#text": "An opaque object representing an iterator which points to a\ncertain position in an animation."
                    },
                    "source-position": {
                        "@filename": "../gdk-pixbuf/gdk-pixbuf-animation.h",
                        "@line": "208"
                    },
                    "virtual-method": [
                        {
                            "@name": "advance",
                            "@invoker": "advance",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../gdk-pixbuf/gdk-pixbuf-animation.c",
                                "@line": "813",
                                "#text": "Possibly advances an animation to a new frame.\n\nChooses the frame based on the start time passed to\ngdk_pixbuf_animation_get_iter().\n\n@current_time would normally come from g_get_current_time(), and\nmust be greater than or equal to the time passed to\ngdk_pixbuf_animation_get_iter(), and must increase or remain\nunchanged each time gdk_pixbuf_animation_iter_get_pixbuf() is\ncalled. That is, you can't go backward in time; animations only\nplay forward.\n\nAs a shortcut, pass `NULL` for the current time and g_get_current_time()\nwill be invoked on your behalf. So you only need to explicitly pass\n@current_time if you're doing something odd like playing the animation\nat double speed.\n\nIf this function returns `FALSE`, there's no need to update the animation\ndisplay, assuming the display had been rendered prior to advancing;\nif `TRUE`, you need to call gdk_pixbuf_animation_iter_get_pixbuf()\nand update the display with the new pixbuf."
                            },
                            "source-position": {
                                "@filename": "../gdk-pixbuf/gdk-pixbuf-animation.h",
                                "@line": "206"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "../gdk-pixbuf/gdk-pixbuf-animation.c",
                                    "@line": "840",
                                    "#text": "`TRUE` if the image may need updating"
                                },
                                "type": {
                                    "@name": "gboolean",
                                    "@c:type": "gboolean"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "iter",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../gdk-pixbuf/gdk-pixbuf-animation.c",
                                        "@line": "815",
                                        "#text": "a #GdkPixbufAnimationIter"
                                    },
                                    "type": {
                                        "@name": "PixbufAnimationIter",
                                        "@c:type": "GdkPixbufAnimationIter*"
                                    }
                                },
                                "parameter": {
                                    "@name": "current_time",
                                    "@transfer-ownership": "none",
                                    "@nullable": "1",
                                    "@allow-none": "1",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../gdk-pixbuf/gdk-pixbuf-animation.c",
                                        "@line": "816",
                                        "#text": "current time"
                                    },
                                    "type": {
                                        "@name": "GLib.TimeVal",
                                        "@c:type": "const GTimeVal*"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "get_delay_time",
                            "@invoker": "get_delay_time",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../gdk-pixbuf/gdk-pixbuf-animation.c",
                                "@line": "735",
                                "#text": "Gets the number of milliseconds the current pixbuf should be displayed,\nor -1 if the current pixbuf should be displayed forever.\n\nThe `g_timeout_add()` function conveniently takes a timeout in milliseconds,\nso you can use a timeout to schedule the next update.\n\nNote that some formats, like GIF, might clamp the timeout values in the\nimage file to avoid updates that are just too quick. The minimum timeout\nfor GIF images is currently 20 milliseconds."
                            },
                            "source-position": {
                                "@filename": "../gdk-pixbuf/gdk-pixbuf-animation.h",
                                "@line": "200"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "../gdk-pixbuf/gdk-pixbuf-animation.c",
                                    "@line": "749",
                                    "#text": "delay time in milliseconds (thousandths of a second)"
                                },
                                "type": {
                                    "@name": "gint",
                                    "@c:type": "int"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "iter",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../gdk-pixbuf/gdk-pixbuf-animation.c",
                                        "@line": "737",
                                        "#text": "an animation iterator"
                                    },
                                    "type": {
                                        "@name": "PixbufAnimationIter",
                                        "@c:type": "GdkPixbufAnimationIter*"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "get_pixbuf",
                            "@invoker": "get_pixbuf",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../gdk-pixbuf/gdk-pixbuf-animation.c",
                                "@line": "760",
                                "#text": "Gets the current pixbuf which should be displayed.\n\nThe pixbuf might not be the same size as the animation itself\n(gdk_pixbuf_animation_get_width(), gdk_pixbuf_animation_get_height()).\n\nThis pixbuf should be displayed for gdk_pixbuf_animation_iter_get_delay_time()\nmilliseconds.\n\nThe caller of this function does not own a reference to the returned\npixbuf; the returned pixbuf will become invalid when the iterator\nadvances to the next frame, which may happen anytime you call\ngdk_pixbuf_animation_iter_advance().\n\nCopy the pixbuf to keep it (don't just add a reference), as it may get\nrecycled as you advance the iterator."
                            },
                            "source-position": {
                                "@filename": "../gdk-pixbuf/gdk-pixbuf-animation.h",
                                "@line": "202"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "../gdk-pixbuf/gdk-pixbuf-animation.c",
                                    "@line": "780",
                                    "#text": "the pixbuf to be displayed"
                                },
                                "type": {
                                    "@name": "Pixbuf",
                                    "@c:type": "GdkPixbuf*"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "iter",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../gdk-pixbuf/gdk-pixbuf-animation.c",
                                        "@line": "762",
                                        "#text": "an animation iterator"
                                    },
                                    "type": {
                                        "@name": "PixbufAnimationIter",
                                        "@c:type": "GdkPixbufAnimationIter*"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "on_currently_loading_frame",
                            "@invoker": "on_currently_loading_frame",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../gdk-pixbuf/gdk-pixbuf-animation.c",
                                "@line": "791",
                                "#text": "Used to determine how to respond to the area_updated signal on\n#GdkPixbufLoader when loading an animation.\n\nThe `::area_updated` signal is emitted for an area of the frame currently\nstreaming in to the loader. So if you're on the currently loading frame,\nyou will need to redraw the screen for the updated area."
                            },
                            "source-position": {
                                "@filename": "../gdk-pixbuf/gdk-pixbuf-animation.h",
                                "@line": "204"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "../gdk-pixbuf/gdk-pixbuf-animation.c",
                                    "@line": "802",
                                    "#text": "`TRUE` if the frame we're on is partially loaded, or the last frame"
                                },
                                "type": {
                                    "@name": "gboolean",
                                    "@c:type": "gboolean"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "iter",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../gdk-pixbuf/gdk-pixbuf-animation.c",
                                        "@line": "793",
                                        "#text": "a #GdkPixbufAnimationIter"
                                    },
                                    "type": {
                                        "@name": "PixbufAnimationIter",
                                        "@c:type": "GdkPixbufAnimationIter*"
                                    }
                                }
                            }
                        }
                    ],
                    "method": [
                        {
                            "@name": "advance",
                            "@c:identifier": "gdk_pixbuf_animation_iter_advance",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../gdk-pixbuf/gdk-pixbuf-animation.c",
                                "@line": "813",
                                "#text": "Possibly advances an animation to a new frame.\n\nChooses the frame based on the start time passed to\ngdk_pixbuf_animation_get_iter().\n\n@current_time would normally come from g_get_current_time(), and\nmust be greater than or equal to the time passed to\ngdk_pixbuf_animation_get_iter(), and must increase or remain\nunchanged each time gdk_pixbuf_animation_iter_get_pixbuf() is\ncalled. That is, you can't go backward in time; animations only\nplay forward.\n\nAs a shortcut, pass `NULL` for the current time and g_get_current_time()\nwill be invoked on your behalf. So you only need to explicitly pass\n@current_time if you're doing something odd like playing the animation\nat double speed.\n\nIf this function returns `FALSE`, there's no need to update the animation\ndisplay, assuming the display had been rendered prior to advancing;\nif `TRUE`, you need to call gdk_pixbuf_animation_iter_get_pixbuf()\nand update the display with the new pixbuf."
                            },
                            "source-position": {
                                "@filename": "../gdk-pixbuf/gdk-pixbuf-animation.h",
                                "@line": "114"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "../gdk-pixbuf/gdk-pixbuf-animation.c",
                                    "@line": "840",
                                    "#text": "`TRUE` if the image may need updating"
                                },
                                "type": {
                                    "@name": "gboolean",
                                    "@c:type": "gboolean"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "iter",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../gdk-pixbuf/gdk-pixbuf-animation.c",
                                        "@line": "815",
                                        "#text": "a #GdkPixbufAnimationIter"
                                    },
                                    "type": {
                                        "@name": "PixbufAnimationIter",
                                        "@c:type": "GdkPixbufAnimationIter*"
                                    }
                                },
                                "parameter": {
                                    "@name": "current_time",
                                    "@transfer-ownership": "none",
                                    "@nullable": "1",
                                    "@allow-none": "1",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../gdk-pixbuf/gdk-pixbuf-animation.c",
                                        "@line": "816",
                                        "#text": "current time"
                                    },
                                    "type": {
                                        "@name": "GLib.TimeVal",
                                        "@c:type": "const GTimeVal*"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "get_delay_time",
                            "@c:identifier": "gdk_pixbuf_animation_iter_get_delay_time",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../gdk-pixbuf/gdk-pixbuf-animation.c",
                                "@line": "735",
                                "#text": "Gets the number of milliseconds the current pixbuf should be displayed,\nor -1 if the current pixbuf should be displayed forever.\n\nThe `g_timeout_add()` function conveniently takes a timeout in milliseconds,\nso you can use a timeout to schedule the next update.\n\nNote that some formats, like GIF, might clamp the timeout values in the\nimage file to avoid updates that are just too quick. The minimum timeout\nfor GIF images is currently 20 milliseconds."
                            },
                            "source-position": {
                                "@filename": "../gdk-pixbuf/gdk-pixbuf-animation.h",
                                "@line": "107"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "../gdk-pixbuf/gdk-pixbuf-animation.c",
                                    "@line": "749",
                                    "#text": "delay time in milliseconds (thousandths of a second)"
                                },
                                "type": {
                                    "@name": "gint",
                                    "@c:type": "int"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "iter",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../gdk-pixbuf/gdk-pixbuf-animation.c",
                                        "@line": "737",
                                        "#text": "an animation iterator"
                                    },
                                    "type": {
                                        "@name": "PixbufAnimationIter",
                                        "@c:type": "GdkPixbufAnimationIter*"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "get_pixbuf",
                            "@c:identifier": "gdk_pixbuf_animation_iter_get_pixbuf",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../gdk-pixbuf/gdk-pixbuf-animation.c",
                                "@line": "760",
                                "#text": "Gets the current pixbuf which should be displayed.\n\nThe pixbuf might not be the same size as the animation itself\n(gdk_pixbuf_animation_get_width(), gdk_pixbuf_animation_get_height()).\n\nThis pixbuf should be displayed for gdk_pixbuf_animation_iter_get_delay_time()\nmilliseconds.\n\nThe caller of this function does not own a reference to the returned\npixbuf; the returned pixbuf will become invalid when the iterator\nadvances to the next frame, which may happen anytime you call\ngdk_pixbuf_animation_iter_advance().\n\nCopy the pixbuf to keep it (don't just add a reference), as it may get\nrecycled as you advance the iterator."
                            },
                            "source-position": {
                                "@filename": "../gdk-pixbuf/gdk-pixbuf-animation.h",
                                "@line": "109"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "../gdk-pixbuf/gdk-pixbuf-animation.c",
                                    "@line": "780",
                                    "#text": "the pixbuf to be displayed"
                                },
                                "type": {
                                    "@name": "Pixbuf",
                                    "@c:type": "GdkPixbuf*"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "iter",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../gdk-pixbuf/gdk-pixbuf-animation.c",
                                        "@line": "762",
                                        "#text": "an animation iterator"
                                    },
                                    "type": {
                                        "@name": "PixbufAnimationIter",
                                        "@c:type": "GdkPixbufAnimationIter*"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "on_currently_loading_frame",
                            "@c:identifier": "gdk_pixbuf_animation_iter_on_currently_loading_frame",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../gdk-pixbuf/gdk-pixbuf-animation.c",
                                "@line": "791",
                                "#text": "Used to determine how to respond to the area_updated signal on\n#GdkPixbufLoader when loading an animation.\n\nThe `::area_updated` signal is emitted for an area of the frame currently\nstreaming in to the loader. So if you're on the currently loading frame,\nyou will need to redraw the screen for the updated area."
                            },
                            "source-position": {
                                "@filename": "../gdk-pixbuf/gdk-pixbuf-animation.h",
                                "@line": "111"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "../gdk-pixbuf/gdk-pixbuf-animation.c",
                                    "@line": "802",
                                    "#text": "`TRUE` if the frame we're on is partially loaded, or the last frame"
                                },
                                "type": {
                                    "@name": "gboolean",
                                    "@c:type": "gboolean"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "iter",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../gdk-pixbuf/gdk-pixbuf-animation.c",
                                        "@line": "793",
                                        "#text": "a #GdkPixbufAnimationIter"
                                    },
                                    "type": {
                                        "@name": "PixbufAnimationIter",
                                        "@c:type": "GdkPixbufAnimationIter*"
                                    }
                                }
                            }
                        }
                    ],
                    "field": {
                        "@name": "parent_instance",
                        "type": {
                            "@name": "GObject.Object",
                            "@c:type": "GObject"
                        }
                    }
                },
                {
                    "@name": "PixbufLoader",
                    "@c:symbol-prefix": "pixbuf_loader",
                    "@c:type": "GdkPixbufLoader",
                    "@parent": "GObject.Object",
                    "@glib:type-name": "GdkPixbufLoader",
                    "@glib:get-type": "gdk_pixbuf_loader_get_type",
                    "@glib:type-struct": "PixbufLoaderClass",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "../gdk-pixbuf/gdk-pixbuf-loader.c",
                        "@line": "34",
                        "#text": "Incremental image loader.\n\n`GdkPixbufLoader` provides a way for applications to drive the\nprocess of loading an image, by letting them send the image data\ndirectly to the loader instead of having the loader read the data\nfrom a file. Applications can use this functionality instead of\n`gdk_pixbuf_new_from_file()` or `gdk_pixbuf_animation_new_from_file()`\nwhen they need to parse image data in small chunks. For example,\nit should be used when reading an image from a (potentially) slow\nnetwork connection, or when loading an extremely large file.\n\nTo use `GdkPixbufLoader` to load an image, create a new instance,\nand call [method@GdkPixbuf.PixbufLoader.write] to send the data\nto it. When done, [method@GdkPixbuf.PixbufLoader.close] should be\ncalled to end the stream and finalize everything.\n\nThe loader will emit three important signals throughout the process:\n\n - [signal@GdkPixbuf.PixbufLoader::size-prepared] will be emitted as\n   soon as the image has enough information to determine the size of\n   the image to be used. If you want to scale the image while loading\n   it, you can call [method@GdkPixbuf.PixbufLoader.set_size] in\n   response to this signal.\n - [signal@GdkPixbuf.PixbufLoader::area-prepared] will be emitted as\n   soon as the pixbuf of the desired has been allocated. You can obtain\n   the `GdkPixbuf` instance by calling [method@GdkPixbuf.PixbufLoader.get_pixbuf].\n   If you want to use it, simply acquire a reference to it. You can\n   also call `gdk_pixbuf_loader_get_pixbuf()` later to get the same\n   pixbuf.\n - [signal@GdkPixbuf.PixbufLoader::area-updated] will be emitted every\n   time a region is updated. This way you can update a partially\n   completed image. Note that you do not know anything about the\n   completeness of an image from the updated area. For example, in an\n   interlaced image you will need to make several passes before the\n   image is done loading.\n\n## Loading an animation\n\nLoading an animation is almost as easy as loading an image. Once the\nfirst [signal@GdkPixbuf.PixbufLoader::area-prepared] signal has been\nemitted, you can call [method@GdkPixbuf.PixbufLoader.get_animation] to\nget the [class@GdkPixbuf.PixbufAnimation] instance, and then call\nand [method@GdkPixbuf.PixbufAnimation.get_iter] to get a\n[class@GdkPixbuf.PixbufAnimationIter] to retrieve the pixbuf for the\ndesired time stamp."
                    },
                    "source-position": {
                        "@filename": "../gdk-pixbuf/gdk-pixbuf-loader.h",
                        "@line": "74"
                    },
                    "constructor": [
                        {
                            "@name": "new",
                            "@c:identifier": "gdk_pixbuf_loader_new",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../gdk-pixbuf/gdk-pixbuf-loader.c",
                                "@line": "596",
                                "#text": "Creates a new pixbuf loader object."
                            },
                            "source-position": {
                                "@filename": "../gdk-pixbuf/gdk-pixbuf-loader.h",
                                "@line": "79"
                            },
                            "return-value": {
                                "@transfer-ownership": "full",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "../gdk-pixbuf/gdk-pixbuf-loader.c",
                                    "@line": "601",
                                    "#text": "A newly-created pixbuf loader."
                                },
                                "type": {
                                    "@name": "PixbufLoader",
                                    "@c:type": "GdkPixbufLoader*"
                                }
                            }
                        },
                        {
                            "@name": "new_with_mime_type",
                            "@c:identifier": "gdk_pixbuf_loader_new_with_mime_type",
                            "@version": "2.4",
                            "@throws": "1",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../gdk-pixbuf/gdk-pixbuf-loader.c",
                                "@line": "654",
                                "#text": "Creates a new pixbuf loader object that always attempts to parse\nimage data as if it were an image of MIME type @mime_type, instead of\nidentifying the type automatically.\n\nThis function is useful if you want an error if the image isn't the\nexpected MIME type; for loading image formats that can't be reliably\nidentified by looking at the data; or if the user manually forces a\nspecific MIME type.\n\nThe list of supported mime types depends on what image loaders\nare installed, but typically \"image/png\", \"image/jpeg\", \"image/gif\",\n\"image/tiff\" and \"image/x-xpixmap\" are among the supported mime types.\nTo obtain the full list of supported mime types, call\ngdk_pixbuf_format_get_mime_types() on each of the #GdkPixbufFormat\nstructs returned by gdk_pixbuf_get_formats()."
                            },
                            "source-position": {
                                "@filename": "../gdk-pixbuf/gdk-pixbuf-loader.h",
                                "@line": "84"
                            },
                            "return-value": {
                                "@transfer-ownership": "full",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "../gdk-pixbuf/gdk-pixbuf-loader.c",
                                    "@line": "675",
                                    "#text": "A newly-created pixbuf loader."
                                },
                                "type": {
                                    "@name": "PixbufLoader",
                                    "@c:type": "GdkPixbufLoader*"
                                }
                            },
                            "parameters": {
                                "parameter": {
                                    "@name": "mime_type",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../gdk-pixbuf/gdk-pixbuf-loader.c",
                                        "@line": "656",
                                        "#text": "the mime type to be loaded"
                                    },
                                    "type": {
                                        "@name": "utf8",
                                        "@c:type": "const char*"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "new_with_type",
                            "@c:identifier": "gdk_pixbuf_loader_new_with_type",
                            "@throws": "1",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../gdk-pixbuf/gdk-pixbuf-loader.c",
                                "@line": "609",
                                "#text": "Creates a new pixbuf loader object that always attempts to parse\nimage data as if it were an image of type @image_type, instead of\nidentifying the type automatically.\n\nThis function is useful if you want an error if the image isn't the\nexpected type; for loading image formats that can't be reliably\nidentified by looking at the data; or if the user manually forces\na specific type.\n\nThe list of supported image formats depends on what image loaders\nare installed, but typically \"png\", \"jpeg\", \"gif\", \"tiff\" and\n\"xpm\" are among the supported formats. To obtain the full list of\nsupported image formats, call gdk_pixbuf_format_get_name() on each\nof the #GdkPixbufFormat structs returned by gdk_pixbuf_get_formats()."
                            },
                            "source-position": {
                                "@filename": "../gdk-pixbuf/gdk-pixbuf-loader.h",
                                "@line": "81"
                            },
                            "return-value": {
                                "@transfer-ownership": "full",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "../gdk-pixbuf/gdk-pixbuf-loader.c",
                                    "@line": "629",
                                    "#text": "A newly-created pixbuf loader."
                                },
                                "type": {
                                    "@name": "PixbufLoader",
                                    "@c:type": "GdkPixbufLoader*"
                                }
                            },
                            "parameters": {
                                "parameter": {
                                    "@name": "image_type",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../gdk-pixbuf/gdk-pixbuf-loader.c",
                                        "@line": "611",
                                        "#text": "name of the image format to be loaded with the image"
                                    },
                                    "type": {
                                        "@name": "utf8",
                                        "@c:type": "const char*"
                                    }
                                }
                            }
                        }
                    ],
                    "virtual-method": [
                        {
                            "@name": "area_prepared",
                            "source-position": {
                                "@filename": "../gdk-pixbuf/gdk-pixbuf-loader.h",
                                "@line": "64"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "type": {
                                    "@name": "none",
                                    "@c:type": "void"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "loader",
                                    "@transfer-ownership": "none",
                                    "type": {
                                        "@name": "PixbufLoader",
                                        "@c:type": "GdkPixbufLoader*"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "area_updated",
                            "source-position": {
                                "@filename": "../gdk-pixbuf/gdk-pixbuf-loader.h",
                                "@line": "67"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "type": {
                                    "@name": "none",
                                    "@c:type": "void"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "loader",
                                    "@transfer-ownership": "none",
                                    "type": {
                                        "@name": "PixbufLoader",
                                        "@c:type": "GdkPixbufLoader*"
                                    }
                                },
                                "parameter": [
                                    {
                                        "@name": "x",
                                        "@transfer-ownership": "none",
                                        "type": {
                                            "@name": "gint",
                                            "@c:type": "int"
                                        }
                                    },
                                    {
                                        "@name": "y",
                                        "@transfer-ownership": "none",
                                        "type": {
                                            "@name": "gint",
                                            "@c:type": "int"
                                        }
                                    },
                                    {
                                        "@name": "width",
                                        "@transfer-ownership": "none",
                                        "type": {
                                            "@name": "gint",
                                            "@c:type": "int"
                                        }
                                    },
                                    {
                                        "@name": "height",
                                        "@transfer-ownership": "none",
                                        "type": {
                                            "@name": "gint",
                                            "@c:type": "int"
                                        }
                                    }
                                ]
                            }
                        },
                        {
                            "@name": "closed",
                            "source-position": {
                                "@filename": "../gdk-pixbuf/gdk-pixbuf-loader.h",
                                "@line": "73"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "type": {
                                    "@name": "none",
                                    "@c:type": "void"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "loader",
                                    "@transfer-ownership": "none",
                                    "type": {
                                        "@name": "PixbufLoader",
                                        "@c:type": "GdkPixbufLoader*"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "size_prepared",
                            "source-position": {
                                "@filename": "../gdk-pixbuf/gdk-pixbuf-loader.h",
                                "@line": "60"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "type": {
                                    "@name": "none",
                                    "@c:type": "void"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "loader",
                                    "@transfer-ownership": "none",
                                    "type": {
                                        "@name": "PixbufLoader",
                                        "@c:type": "GdkPixbufLoader*"
                                    }
                                },
                                "parameter": [
                                    {
                                        "@name": "width",
                                        "@transfer-ownership": "none",
                                        "type": {
                                            "@name": "gint",
                                            "@c:type": "int"
                                        }
                                    },
                                    {
                                        "@name": "height",
                                        "@transfer-ownership": "none",
                                        "type": {
                                            "@name": "gint",
                                            "@c:type": "int"
                                        }
                                    }
                                ]
                            }
                        }
                    ],
                    "method": [
                        {
                            "@name": "close",
                            "@c:identifier": "gdk_pixbuf_loader_close",
                            "@throws": "1",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../gdk-pixbuf/gdk-pixbuf-loader.c",
                                "@line": "803",
                                "#text": "Informs a pixbuf loader that no further writes with\ngdk_pixbuf_loader_write() will occur, so that it can free its\ninternal loading structures.\n\nThis function also tries to parse any data that hasn't yet been parsed;\nif the remaining data is partial or corrupt, an error will be returned.\n\nIf `FALSE` is returned, `error` will be set to an error from the\n`GDK_PIXBUF_ERROR` or `G_FILE_ERROR` domains.\n\nIf you're just cancelling a load rather than expecting it to be finished,\npassing `NULL` for `error` to ignore it is reasonable.\n\nRemember that this function does not release a reference on the loader, so\nyou will need to explicitly release any reference you hold."
                            },
                            "source-position": {
                                "@filename": "../gdk-pixbuf/gdk-pixbuf-loader.h",
                                "@line": "104"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "../gdk-pixbuf/gdk-pixbuf-loader.c",
                                    "@line": "824",
                                    "#text": "`TRUE` if all image data written so far was successfully\n  passed out via the update_area signal"
                                },
                                "type": {
                                    "@name": "gboolean",
                                    "@c:type": "gboolean"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "loader",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../gdk-pixbuf/gdk-pixbuf-loader.c",
                                        "@line": "805",
                                        "#text": "A pixbuf loader."
                                    },
                                    "type": {
                                        "@name": "PixbufLoader",
                                        "@c:type": "GdkPixbufLoader*"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "get_animation",
                            "@c:identifier": "gdk_pixbuf_loader_get_animation",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../gdk-pixbuf/gdk-pixbuf-loader.c",
                                "@line": "775",
                                "#text": "Queries the #GdkPixbufAnimation that a pixbuf loader is currently creating.\n\nIn general it only makes sense to call this function after the\n[signal@GdkPixbuf.PixbufLoader::area-prepared] signal has been emitted by\nthe loader.\n\nIf the loader doesn't have enough bytes yet, and hasn't emitted the `area-prepared`\nsignal, this function will return `NULL`."
                            },
                            "source-position": {
                                "@filename": "../gdk-pixbuf/gdk-pixbuf-loader.h",
                                "@line": "102"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "@nullable": "1",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "../gdk-pixbuf/gdk-pixbuf-loader.c",
                                    "@line": "788",
                                    "#text": "The animation that the loader is\n  currently loading"
                                },
                                "type": {
                                    "@name": "PixbufAnimation",
                                    "@c:type": "GdkPixbufAnimation*"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "loader",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../gdk-pixbuf/gdk-pixbuf-loader.c",
                                        "@line": "777",
                                        "#text": "A pixbuf loader"
                                    },
                                    "type": {
                                        "@name": "PixbufLoader",
                                        "@c:type": "GdkPixbufLoader*"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "get_format",
                            "@c:identifier": "gdk_pixbuf_loader_get_format",
                            "@version": "2.2",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../gdk-pixbuf/gdk-pixbuf-loader.c",
                                "@line": "891",
                                "#text": "Obtains the available information about the format of the\ncurrently loading image file."
                            },
                            "source-position": {
                                "@filename": "../gdk-pixbuf/gdk-pixbuf-loader.h",
                                "@line": "107"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "@nullable": "1",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "../gdk-pixbuf/gdk-pixbuf-loader.c",
                                    "@line": "898",
                                    "#text": "A #GdkPixbufFormat"
                                },
                                "type": {
                                    "@name": "PixbufFormat",
                                    "@c:type": "GdkPixbufFormat*"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "loader",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../gdk-pixbuf/gdk-pixbuf-loader.c",
                                        "@line": "893",
                                        "#text": "A pixbuf loader."
                                    },
                                    "type": {
                                        "@name": "PixbufLoader",
                                        "@c:type": "GdkPixbufLoader*"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "get_pixbuf",
                            "@c:identifier": "gdk_pixbuf_loader_get_pixbuf",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../gdk-pixbuf/gdk-pixbuf-loader.c",
                                "@line": "737",
                                "#text": "Queries the #GdkPixbuf that a pixbuf loader is currently creating.\n\nIn general it only makes sense to call this function after the\n[signal@GdkPixbuf.PixbufLoader::area-prepared] signal has been\nemitted by the loader; this means that enough data has been read\nto know the size of the image that will be allocated.\n\nIf the loader has not received enough data via gdk_pixbuf_loader_write(),\nthen this function returns `NULL`.\n\nThe returned pixbuf will be the same in all future calls to the loader,\nso if you want to keep using it, you should acquire a reference to it.\n\nAdditionally, if the loader is an animation, it will return the \"static\nimage\" of the animation (see gdk_pixbuf_animation_get_static_image())."
                            },
                            "source-position": {
                                "@filename": "../gdk-pixbuf/gdk-pixbuf-loader.h",
                                "@line": "100"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "@nullable": "1",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "../gdk-pixbuf/gdk-pixbuf-loader.c",
                                    "@line": "757",
                                    "#text": "The pixbuf that the loader is\n  creating"
                                },
                                "type": {
                                    "@name": "Pixbuf",
                                    "@c:type": "GdkPixbuf*"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "loader",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../gdk-pixbuf/gdk-pixbuf-loader.c",
                                        "@line": "739",
                                        "#text": "A pixbuf loader."
                                    },
                                    "type": {
                                        "@name": "PixbufLoader",
                                        "@c:type": "GdkPixbufLoader*"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "set_size",
                            "@c:identifier": "gdk_pixbuf_loader_set_size",
                            "@version": "2.2",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../gdk-pixbuf/gdk-pixbuf-loader.c",
                                "@line": "260",
                                "#text": "Causes the image to be scaled while it is loaded.\n\nThe desired image size can be determined relative to the original\nsize of the image by calling gdk_pixbuf_loader_set_size() from a\nsignal handler for the ::size-prepared signal.\n\nAttempts to set the desired image size  are ignored after the\nemission of the ::size-prepared signal."
                            },
                            "source-position": {
                                "@filename": "../gdk-pixbuf/gdk-pixbuf-loader.h",
                                "@line": "87"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "type": {
                                    "@name": "none",
                                    "@c:type": "void"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "loader",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../gdk-pixbuf/gdk-pixbuf-loader.c",
                                        "@line": "262",
                                        "#text": "A pixbuf loader."
                                    },
                                    "type": {
                                        "@name": "PixbufLoader",
                                        "@c:type": "GdkPixbufLoader*"
                                    }
                                },
                                "parameter": [
                                    {
                                        "@name": "width",
                                        "@transfer-ownership": "none",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "../gdk-pixbuf/gdk-pixbuf-loader.c",
                                            "@line": "263",
                                            "#text": "The desired width of the image being loaded."
                                        },
                                        "type": {
                                            "@name": "gint",
                                            "@c:type": "int"
                                        }
                                    },
                                    {
                                        "@name": "height",
                                        "@transfer-ownership": "none",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "../gdk-pixbuf/gdk-pixbuf-loader.c",
                                            "@line": "264",
                                            "#text": "The desired height of the image being loaded."
                                        },
                                        "type": {
                                            "@name": "gint",
                                            "@c:type": "int"
                                        }
                                    }
                                ]
                            }
                        },
                        {
                            "@name": "write",
                            "@c:identifier": "gdk_pixbuf_loader_write",
                            "@throws": "1",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../gdk-pixbuf/gdk-pixbuf-loader.c",
                                "@line": "506",
                                "#text": "Parses the next `count` bytes in the given image buffer."
                            },
                            "source-position": {
                                "@filename": "../gdk-pixbuf/gdk-pixbuf-loader.h",
                                "@line": "91"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "../gdk-pixbuf/gdk-pixbuf-loader.c",
                                    "@line": "515",
                                    "#text": "`TRUE` if the write was successful, or\n  `FALSE` if the loader cannot parse the buffer"
                                },
                                "type": {
                                    "@name": "gboolean",
                                    "@c:type": "gboolean"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "loader",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../gdk-pixbuf/gdk-pixbuf-loader.c",
                                        "@line": "508",
                                        "#text": "A pixbuf loader."
                                    },
                                    "type": {
                                        "@name": "PixbufLoader",
                                        "@c:type": "GdkPixbufLoader*"
                                    }
                                },
                                "parameter": [
                                    {
                                        "@name": "buf",
                                        "@transfer-ownership": "none",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "../gdk-pixbuf/gdk-pixbuf-loader.c",
                                            "@line": "509",
                                            "#text": "Pointer to image data."
                                        },
                                        "array": {
                                            "@length": "1",
                                            "@zero-terminated": "0",
                                            "@c:type": "const guchar*",
                                            "type": {
                                                "@name": "guint8",
                                                "@c:type": "guchar"
                                            }
                                        }
                                    },
                                    {
                                        "@name": "count",
                                        "@transfer-ownership": "none",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "../gdk-pixbuf/gdk-pixbuf-loader.c",
                                            "@line": "510",
                                            "#text": "Length of the @buf buffer in bytes."
                                        },
                                        "type": {
                                            "@name": "gsize",
                                            "@c:type": "gsize"
                                        }
                                    }
                                ]
                            }
                        },
                        {
                            "@name": "write_bytes",
                            "@c:identifier": "gdk_pixbuf_loader_write_bytes",
                            "@version": "2.30",
                            "@throws": "1",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../gdk-pixbuf/gdk-pixbuf-loader.c",
                                "@line": "567",
                                "#text": "Parses the next contents of the given image buffer."
                            },
                            "source-position": {
                                "@filename": "../gdk-pixbuf/gdk-pixbuf-loader.h",
                                "@line": "96"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "../gdk-pixbuf/gdk-pixbuf-loader.c",
                                    "@line": "575",
                                    "#text": "`TRUE` if the write was successful, or `FALSE` if\n  the loader cannot parse the buffer"
                                },
                                "type": {
                                    "@name": "gboolean",
                                    "@c:type": "gboolean"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "loader",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../gdk-pixbuf/gdk-pixbuf-loader.c",
                                        "@line": "569",
                                        "#text": "A pixbuf loader."
                                    },
                                    "type": {
                                        "@name": "PixbufLoader",
                                        "@c:type": "GdkPixbufLoader*"
                                    }
                                },
                                "parameter": {
                                    "@name": "buffer",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../gdk-pixbuf/gdk-pixbuf-loader.c",
                                        "@line": "570",
                                        "#text": "The image data as a `GBytes` buffer."
                                    },
                                    "type": {
                                        "@name": "GLib.Bytes",
                                        "@c:type": "GBytes*"
                                    }
                                }
                            }
                        }
                    ],
                    "field": [
                        {
                            "@name": "parent_instance",
                            "@readable": "0",
                            "@private": "1",
                            "type": {
                                "@name": "GObject.Object",
                                "@c:type": "GObject"
                            }
                        },
                        {
                            "@name": "priv",
                            "@readable": "0",
                            "@private": "1",
                            "type": {
                                "@name": "gpointer",
                                "@c:type": "gpointer"
                            }
                        }
                    ],
                    "glib:signal": [
                        {
                            "@name": "area-prepared",
                            "@when": "last",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../gdk-pixbuf/gdk-pixbuf-loader.c",
                                "@line": "154",
                                "#text": "This signal is emitted when the pixbuf loader has allocated the\npixbuf in the desired size.\n\nAfter this signal is emitted, applications can call\ngdk_pixbuf_loader_get_pixbuf() to fetch the partially-loaded\npixbuf."
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "type": {
                                    "@name": "none",
                                    "@c:type": "void"
                                }
                            }
                        },
                        {
                            "@name": "area-updated",
                            "@when": "last",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../gdk-pixbuf/gdk-pixbuf-loader.c",
                                "@line": "174",
                                "#text": "This signal is emitted when a significant area of the image being\nloaded has been updated.\n\nNormally it means that a complete scanline has been read in, but\nit could be a different area as well.\n\nApplications can use this signal to know when to repaint\nareas of an image that is being loaded."
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "type": {
                                    "@name": "none",
                                    "@c:type": "void"
                                }
                            },
                            "parameters": {
                                "parameter": [
                                    {
                                        "@name": "x",
                                        "@transfer-ownership": "none",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "../gdk-pixbuf/gdk-pixbuf-loader.c",
                                            "@line": "177",
                                            "#text": "X offset of upper-left corner of the updated area."
                                        },
                                        "type": {
                                            "@name": "gint",
                                            "@c:type": "gint"
                                        }
                                    },
                                    {
                                        "@name": "y",
                                        "@transfer-ownership": "none",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "../gdk-pixbuf/gdk-pixbuf-loader.c",
                                            "@line": "178",
                                            "#text": "Y offset of upper-left corner of the updated area."
                                        },
                                        "type": {
                                            "@name": "gint",
                                            "@c:type": "gint"
                                        }
                                    },
                                    {
                                        "@name": "width",
                                        "@transfer-ownership": "none",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "../gdk-pixbuf/gdk-pixbuf-loader.c",
                                            "@line": "179",
                                            "#text": "Width of updated area."
                                        },
                                        "type": {
                                            "@name": "gint",
                                            "@c:type": "gint"
                                        }
                                    },
                                    {
                                        "@name": "height",
                                        "@transfer-ownership": "none",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "../gdk-pixbuf/gdk-pixbuf-loader.c",
                                            "@line": "180",
                                            "#text": "Height of updated area."
                                        },
                                        "type": {
                                            "@name": "gint",
                                            "@c:type": "gint"
                                        }
                                    }
                                ]
                            }
                        },
                        {
                            "@name": "closed",
                            "@when": "last",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../gdk-pixbuf/gdk-pixbuf-loader.c",
                                "@line": "204",
                                "#text": "This signal is emitted when gdk_pixbuf_loader_close() is called.\n\nIt can be used by different parts of an application to receive\nnotification when an image loader is closed by the code that\ndrives it."
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "type": {
                                    "@name": "none",
                                    "@c:type": "void"
                                }
                            }
                        },
                        {
                            "@name": "size-prepared",
                            "@when": "last",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../gdk-pixbuf/gdk-pixbuf-loader.c",
                                "@line": "129",
                                "#text": "This signal is emitted when the pixbuf loader has been fed the\ninitial amount of data that is required to figure out the size\nof the image that it will create.\n\nApplications can call gdk_pixbuf_loader_set_size() in response\nto this signal to set the desired size to which the image\nshould be scaled."
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "type": {
                                    "@name": "none",
                                    "@c:type": "void"
                                }
                            },
                            "parameters": {
                                "parameter": [
                                    {
                                        "@name": "width",
                                        "@transfer-ownership": "none",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "../gdk-pixbuf/gdk-pixbuf-loader.c",
                                            "@line": "132",
                                            "#text": "the original width of the image"
                                        },
                                        "type": {
                                            "@name": "gint",
                                            "@c:type": "gint"
                                        }
                                    },
                                    {
                                        "@name": "height",
                                        "@transfer-ownership": "none",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "../gdk-pixbuf/gdk-pixbuf-loader.c",
                                            "@line": "133",
                                            "#text": "the original height of the image"
                                        },
                                        "type": {
                                            "@name": "gint",
                                            "@c:type": "gint"
                                        }
                                    }
                                ]
                            }
                        }
                    ]
                },
                {
                    "@name": "PixbufNonAnim",
                    "@c:symbol-prefix": "pixbuf_non_anim",
                    "@parent": "PixbufAnimation",
                    "@glib:type-name": "GdkPixbufNonAnim",
                    "@glib:get-type": "gdk_pixbuf_non_anim_get_type",
                    "constructor": {
                        "@name": "new",
                        "@c:identifier": "gdk_pixbuf_non_anim_new",
                        "source-position": {
                            "@filename": "../gdk-pixbuf/gdk-pixbuf-animation.h",
                            "@line": "215"
                        },
                        "return-value": {
                            "@transfer-ownership": "full",
                            "type": {
                                "@name": "PixbufAnimation",
                                "@c:type": "GdkPixbufAnimation*"
                            }
                        },
                        "parameters": {
                            "parameter": {
                                "@name": "pixbuf",
                                "@transfer-ownership": "none",
                                "type": {
                                    "@name": "Pixbuf",
                                    "@c:type": "GdkPixbuf*"
                                }
                            }
                        }
                    }
                },
                {
                    "@name": "PixbufSimpleAnim",
                    "@c:symbol-prefix": "pixbuf_simple_anim",
                    "@c:type": "GdkPixbufSimpleAnim",
                    "@parent": "PixbufAnimation",
                    "@glib:type-name": "GdkPixbufSimpleAnim",
                    "@glib:get-type": "gdk_pixbuf_simple_anim_get_type",
                    "@glib:type-struct": "PixbufSimpleAnimClass",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "../gdk-pixbuf/gdk-pixbuf-simple-anim.h",
                        "@line": "33",
                        "#text": "An opaque struct representing a simple animation."
                    },
                    "source-position": {
                        "@filename": "../gdk-pixbuf/gdk-pixbuf-simple-anim.h",
                        "@line": "39"
                    },
                    "constructor": {
                        "@name": "new",
                        "@c:identifier": "gdk_pixbuf_simple_anim_new",
                        "@version": "2.8",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "../gdk-pixbuf/gdk-pixbuf-simple-anim.c",
                            "@line": "413",
                            "#text": "Creates a new, empty animation."
                        },
                        "source-position": {
                            "@filename": "../gdk-pixbuf/gdk-pixbuf-simple-anim.h",
                            "@line": "55"
                        },
                        "return-value": {
                            "@transfer-ownership": "full",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../gdk-pixbuf/gdk-pixbuf-simple-anim.c",
                                "@line": "421",
                                "#text": "a newly allocated #GdkPixbufSimpleAnim"
                            },
                            "type": {
                                "@name": "PixbufSimpleAnim",
                                "@c:type": "GdkPixbufSimpleAnim*"
                            }
                        },
                        "parameters": {
                            "parameter": [
                                {
                                    "@name": "width",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../gdk-pixbuf/gdk-pixbuf-simple-anim.c",
                                        "@line": "415",
                                        "#text": "the width of the animation"
                                    },
                                    "type": {
                                        "@name": "gint",
                                        "@c:type": "gint"
                                    }
                                },
                                {
                                    "@name": "height",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../gdk-pixbuf/gdk-pixbuf-simple-anim.c",
                                        "@line": "416",
                                        "#text": "the height of the animation"
                                    },
                                    "type": {
                                        "@name": "gint",
                                        "@c:type": "gint"
                                    }
                                },
                                {
                                    "@name": "rate",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../gdk-pixbuf/gdk-pixbuf-simple-anim.c",
                                        "@line": "417",
                                        "#text": "the speed of the animation, in frames per second"
                                    },
                                    "type": {
                                        "@name": "gfloat",
                                        "@c:type": "gfloat"
                                    }
                                }
                            ]
                        }
                    },
                    "method": [
                        {
                            "@name": "add_frame",
                            "@c:identifier": "gdk_pixbuf_simple_anim_add_frame",
                            "@version": "2.8",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../gdk-pixbuf/gdk-pixbuf-simple-anim.c",
                                "@line": "440",
                                "#text": "Adds a new frame to @animation. The @pixbuf must\nhave the dimensions specified when the animation\nwas constructed."
                            },
                            "source-position": {
                                "@filename": "../gdk-pixbuf/gdk-pixbuf-simple-anim.h",
                                "@line": "59"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "type": {
                                    "@name": "none",
                                    "@c:type": "void"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "animation",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../gdk-pixbuf/gdk-pixbuf-simple-anim.c",
                                        "@line": "442",
                                        "#text": "a #GdkPixbufSimpleAnim"
                                    },
                                    "type": {
                                        "@name": "PixbufSimpleAnim",
                                        "@c:type": "GdkPixbufSimpleAnim*"
                                    }
                                },
                                "parameter": {
                                    "@name": "pixbuf",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../gdk-pixbuf/gdk-pixbuf-simple-anim.c",
                                        "@line": "443",
                                        "#text": "the pixbuf to add"
                                    },
                                    "type": {
                                        "@name": "Pixbuf",
                                        "@c:type": "GdkPixbuf*"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "get_loop",
                            "@c:identifier": "gdk_pixbuf_simple_anim_get_loop",
                            "@glib:get-property": "loop",
                            "@version": "2.18",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../gdk-pixbuf/gdk-pixbuf-simple-anim.c",
                                "@line": "531",
                                "#text": "Gets whether @animation should loop indefinitely when it reaches the end."
                            },
                            "source-position": {
                                "@filename": "../gdk-pixbuf/gdk-pixbuf-simple-anim.h",
                                "@line": "65"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "../gdk-pixbuf/gdk-pixbuf-simple-anim.c",
                                    "@line": "537",
                                    "#text": "%TRUE if the animation loops forever, %FALSE otherwise"
                                },
                                "type": {
                                    "@name": "gboolean",
                                    "@c:type": "gboolean"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "animation",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../gdk-pixbuf/gdk-pixbuf-simple-anim.c",
                                        "@line": "533",
                                        "#text": "a #GdkPixbufSimpleAnim"
                                    },
                                    "type": {
                                        "@name": "PixbufSimpleAnim",
                                        "@c:type": "GdkPixbufSimpleAnim*"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "set_loop",
                            "@c:identifier": "gdk_pixbuf_simple_anim_set_loop",
                            "@glib:set-property": "loop",
                            "@version": "2.18",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../gdk-pixbuf/gdk-pixbuf-simple-anim.c",
                                "@line": "510",
                                "#text": "Sets whether @animation should loop indefinitely when it reaches the end."
                            },
                            "source-position": {
                                "@filename": "../gdk-pixbuf/gdk-pixbuf-simple-anim.h",
                                "@line": "62"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "type": {
                                    "@name": "none",
                                    "@c:type": "void"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "animation",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../gdk-pixbuf/gdk-pixbuf-simple-anim.c",
                                        "@line": "512",
                                        "#text": "a #GdkPixbufSimpleAnim"
                                    },
                                    "type": {
                                        "@name": "PixbufSimpleAnim",
                                        "@c:type": "GdkPixbufSimpleAnim*"
                                    }
                                },
                                "parameter": {
                                    "@name": "loop",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../gdk-pixbuf/gdk-pixbuf-simple-anim.c",
                                        "@line": "513",
                                        "#text": "whether to loop the animation"
                                    },
                                    "type": {
                                        "@name": "gboolean",
                                        "@c:type": "gboolean"
                                    }
                                }
                            }
                        }
                    ],
                    "property": {
                        "@name": "loop",
                        "@version": "2.18",
                        "@writable": "1",
                        "@transfer-ownership": "none",
                        "@setter": "set_loop",
                        "@getter": "get_loop",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "../gdk-pixbuf/gdk-pixbuf-simple-anim.c",
                            "@line": "152",
                            "#text": "Whether the animation should loop when it reaches the end."
                        },
                        "type": {
                            "@name": "gboolean",
                            "@c:type": "gboolean"
                        }
                    }
                },
                {
                    "@name": "PixbufSimpleAnimIter",
                    "@c:symbol-prefix": "pixbuf_simple_anim_iter",
                    "@parent": "PixbufAnimationIter",
                    "@glib:type-name": "GdkPixbufSimpleAnimIter",
                    "@glib:get-type": "gdk_pixbuf_simple_anim_iter_get_type"
                }
            ],
            "record": [
                {
                    "@name": "PixbufAnimationClass",
                    "@c:type": "GdkPixbufAnimationClass",
                    "@glib:is-gtype-struct-for": "PixbufAnimation",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "../gdk-pixbuf/gdk-pixbuf-animation.h",
                        "@line": "123",
                        "#text": "Modules supporting animations must derive a type from\n#GdkPixbufAnimation, providing suitable implementations of the\nvirtual functions."
                    },
                    "source-position": {
                        "@filename": "../gdk-pixbuf/gdk-pixbuf-animation.h",
                        "@line": "163"
                    },
                    "field": [
                        {
                            "@name": "parent_class",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../gdk-pixbuf/gdk-pixbuf-animation.h",
                                "@line": "125",
                                "#text": "the parent class"
                            },
                            "type": {
                                "@name": "GObject.ObjectClass",
                                "@c:type": "GObjectClass"
                            }
                        },
                        {
                            "@name": "is_static_image",
                            "callback": {
                                "@name": "is_static_image",
                                "source-position": {
                                    "@filename": "../gdk-pixbuf/gdk-pixbuf-animation.h",
                                    "@line": "153"
                                },
                                "return-value": {
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../gdk-pixbuf/gdk-pixbuf-animation.c",
                                        "@line": "583",
                                        "#text": "`TRUE` if the \"animation\" was really just an image"
                                    },
                                    "type": {
                                        "@name": "gboolean",
                                        "@c:type": "gboolean"
                                    }
                                },
                                "parameters": {
                                    "parameter": {
                                        "@name": "animation",
                                        "@transfer-ownership": "none",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "../gdk-pixbuf/gdk-pixbuf-animation.c",
                                            "@line": "574",
                                            "#text": "a #GdkPixbufAnimation"
                                        },
                                        "type": {
                                            "@name": "PixbufAnimation",
                                            "@c:type": "GdkPixbufAnimation*"
                                        }
                                    }
                                }
                            }
                        },
                        {
                            "@name": "get_static_image",
                            "callback": {
                                "@name": "get_static_image",
                                "source-position": {
                                    "@filename": "../gdk-pixbuf/gdk-pixbuf-animation.h",
                                    "@line": "155"
                                },
                                "return-value": {
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../gdk-pixbuf/gdk-pixbuf-animation.c",
                                        "@line": "609",
                                        "#text": "unanimated image representing the animation"
                                    },
                                    "type": {
                                        "@name": "Pixbuf",
                                        "@c:type": "GdkPixbuf*"
                                    }
                                },
                                "parameters": {
                                    "parameter": {
                                        "@name": "animation",
                                        "@transfer-ownership": "none",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "../gdk-pixbuf/gdk-pixbuf-animation.c",
                                            "@line": "595",
                                            "#text": "a #GdkPixbufAnimation"
                                        },
                                        "type": {
                                            "@name": "PixbufAnimation",
                                            "@c:type": "GdkPixbufAnimation*"
                                        }
                                    }
                                }
                            }
                        },
                        {
                            "@name": "get_size",
                            "callback": {
                                "@name": "get_size",
                                "source-position": {
                                    "@filename": "../gdk-pixbuf/gdk-pixbuf-animation.h",
                                    "@line": "157"
                                },
                                "return-value": {
                                    "@transfer-ownership": "none",
                                    "type": {
                                        "@name": "none",
                                        "@c:type": "void"
                                    }
                                },
                                "parameters": {
                                    "parameter": [
                                        {
                                            "@name": "animation",
                                            "@transfer-ownership": "none",
                                            "type": {
                                                "@name": "PixbufAnimation",
                                                "@c:type": "GdkPixbufAnimation*"
                                            }
                                        },
                                        {
                                            "@name": "width",
                                            "@transfer-ownership": "none",
                                            "type": {
                                                "@name": "gint",
                                                "@c:type": "int*"
                                            }
                                        },
                                        {
                                            "@name": "height",
                                            "@transfer-ownership": "none",
                                            "type": {
                                                "@name": "gint",
                                                "@c:type": "int*"
                                            }
                                        }
                                    ]
                                }
                            }
                        },
                        {
                            "@name": "get_iter",
                            "callback": {
                                "@name": "get_iter",
                                "source-position": {
                                    "@filename": "../gdk-pixbuf/gdk-pixbuf-animation.h",
                                    "@line": "161"
                                },
                                "return-value": {
                                    "@transfer-ownership": "full",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../gdk-pixbuf/gdk-pixbuf-animation.c",
                                        "@line": "704",
                                        "#text": "an iterator to move over the animation"
                                    },
                                    "type": {
                                        "@name": "PixbufAnimationIter",
                                        "@c:type": "GdkPixbufAnimationIter*"
                                    }
                                },
                                "parameters": {
                                    "parameter": [
                                        {
                                            "@name": "animation",
                                            "@transfer-ownership": "none",
                                            "doc": {
                                                "@xml:space": "preserve",
                                                "@filename": "../gdk-pixbuf/gdk-pixbuf-animation.c",
                                                "@line": "666",
                                                "#text": "a #GdkPixbufAnimation"
                                            },
                                            "type": {
                                                "@name": "PixbufAnimation",
                                                "@c:type": "GdkPixbufAnimation*"
                                            }
                                        },
                                        {
                                            "@name": "start_time",
                                            "@transfer-ownership": "none",
                                            "@nullable": "1",
                                            "@allow-none": "1",
                                            "doc": {
                                                "@xml:space": "preserve",
                                                "@filename": "../gdk-pixbuf/gdk-pixbuf-animation.c",
                                                "@line": "667",
                                                "#text": "time when the animation starts playing"
                                            },
                                            "type": {
                                                "@name": "GLib.TimeVal",
                                                "@c:type": "const GTimeVal*"
                                            }
                                        }
                                    ]
                                }
                            }
                        }
                    ]
                },
                {
                    "@name": "PixbufAnimationIterClass",
                    "@c:type": "GdkPixbufAnimationIterClass",
                    "@glib:is-gtype-struct-for": "PixbufAnimationIter",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "../gdk-pixbuf/gdk-pixbuf-animation.h",
                        "@line": "168",
                        "#text": "Modules supporting animations must derive a type from\n#GdkPixbufAnimationIter, providing suitable implementations of the\nvirtual functions."
                    },
                    "source-position": {
                        "@filename": "../gdk-pixbuf/gdk-pixbuf-animation.h",
                        "@line": "208"
                    },
                    "field": [
                        {
                            "@name": "parent_class",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../gdk-pixbuf/gdk-pixbuf-animation.h",
                                "@line": "170",
                                "#text": "the parent class"
                            },
                            "type": {
                                "@name": "GObject.ObjectClass",
                                "@c:type": "GObjectClass"
                            }
                        },
                        {
                            "@name": "get_delay_time",
                            "callback": {
                                "@name": "get_delay_time",
                                "source-position": {
                                    "@filename": "../gdk-pixbuf/gdk-pixbuf-animation.h",
                                    "@line": "200"
                                },
                                "return-value": {
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../gdk-pixbuf/gdk-pixbuf-animation.c",
                                        "@line": "749",
                                        "#text": "delay time in milliseconds (thousandths of a second)"
                                    },
                                    "type": {
                                        "@name": "gint",
                                        "@c:type": "int"
                                    }
                                },
                                "parameters": {
                                    "parameter": {
                                        "@name": "iter",
                                        "@transfer-ownership": "none",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "../gdk-pixbuf/gdk-pixbuf-animation.c",
                                            "@line": "737",
                                            "#text": "an animation iterator"
                                        },
                                        "type": {
                                            "@name": "PixbufAnimationIter",
                                            "@c:type": "GdkPixbufAnimationIter*"
                                        }
                                    }
                                }
                            }
                        },
                        {
                            "@name": "get_pixbuf",
                            "callback": {
                                "@name": "get_pixbuf",
                                "source-position": {
                                    "@filename": "../gdk-pixbuf/gdk-pixbuf-animation.h",
                                    "@line": "202"
                                },
                                "return-value": {
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../gdk-pixbuf/gdk-pixbuf-animation.c",
                                        "@line": "780",
                                        "#text": "the pixbuf to be displayed"
                                    },
                                    "type": {
                                        "@name": "Pixbuf",
                                        "@c:type": "GdkPixbuf*"
                                    }
                                },
                                "parameters": {
                                    "parameter": {
                                        "@name": "iter",
                                        "@transfer-ownership": "none",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "../gdk-pixbuf/gdk-pixbuf-animation.c",
                                            "@line": "762",
                                            "#text": "an animation iterator"
                                        },
                                        "type": {
                                            "@name": "PixbufAnimationIter",
                                            "@c:type": "GdkPixbufAnimationIter*"
                                        }
                                    }
                                }
                            }
                        },
                        {
                            "@name": "on_currently_loading_frame",
                            "callback": {
                                "@name": "on_currently_loading_frame",
                                "source-position": {
                                    "@filename": "../gdk-pixbuf/gdk-pixbuf-animation.h",
                                    "@line": "204"
                                },
                                "return-value": {
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../gdk-pixbuf/gdk-pixbuf-animation.c",
                                        "@line": "802",
                                        "#text": "`TRUE` if the frame we're on is partially loaded, or the last frame"
                                    },
                                    "type": {
                                        "@name": "gboolean",
                                        "@c:type": "gboolean"
                                    }
                                },
                                "parameters": {
                                    "parameter": {
                                        "@name": "iter",
                                        "@transfer-ownership": "none",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "../gdk-pixbuf/gdk-pixbuf-animation.c",
                                            "@line": "793",
                                            "#text": "a #GdkPixbufAnimationIter"
                                        },
                                        "type": {
                                            "@name": "PixbufAnimationIter",
                                            "@c:type": "GdkPixbufAnimationIter*"
                                        }
                                    }
                                }
                            }
                        },
                        {
                            "@name": "advance",
                            "callback": {
                                "@name": "advance",
                                "source-position": {
                                    "@filename": "../gdk-pixbuf/gdk-pixbuf-animation.h",
                                    "@line": "206"
                                },
                                "return-value": {
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../gdk-pixbuf/gdk-pixbuf-animation.c",
                                        "@line": "840",
                                        "#text": "`TRUE` if the image may need updating"
                                    },
                                    "type": {
                                        "@name": "gboolean",
                                        "@c:type": "gboolean"
                                    }
                                },
                                "parameters": {
                                    "parameter": [
                                        {
                                            "@name": "iter",
                                            "@transfer-ownership": "none",
                                            "doc": {
                                                "@xml:space": "preserve",
                                                "@filename": "../gdk-pixbuf/gdk-pixbuf-animation.c",
                                                "@line": "815",
                                                "#text": "a #GdkPixbufAnimationIter"
                                            },
                                            "type": {
                                                "@name": "PixbufAnimationIter",
                                                "@c:type": "GdkPixbufAnimationIter*"
                                            }
                                        },
                                        {
                                            "@name": "current_time",
                                            "@transfer-ownership": "none",
                                            "@nullable": "1",
                                            "@allow-none": "1",
                                            "doc": {
                                                "@xml:space": "preserve",
                                                "@filename": "../gdk-pixbuf/gdk-pixbuf-animation.c",
                                                "@line": "816",
                                                "#text": "current time"
                                            },
                                            "type": {
                                                "@name": "GLib.TimeVal",
                                                "@c:type": "const GTimeVal*"
                                            }
                                        }
                                    ]
                                }
                            }
                        }
                    ]
                },
                {
                    "@name": "PixbufFormat",
                    "@c:type": "GdkPixbufFormat",
                    "@version": "2.2",
                    "@glib:type-name": "GdkPixbufFormat",
                    "@glib:get-type": "gdk_pixbuf_format_get_type",
                    "@c:symbol-prefix": "pixbuf_format",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "../gdk-pixbuf/gdk-pixbuf-io.h",
                        "@line": "443",
                        "#text": "A `GdkPixbufFormat` contains information about the image format accepted\nby a module.\n\nOnly modules should access the fields directly, applications should\nuse the `gdk_pixbuf_format_*` family of functions."
                    },
                    "source-position": {
                        "@filename": "../gdk-pixbuf/gdk-pixbuf-io.h",
                        "@line": "475"
                    },
                    "field": [
                        {
                            "@name": "name",
                            "@writable": "1",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../gdk-pixbuf/gdk-pixbuf-io.h",
                                "@line": "445",
                                "#text": "the name of the image format"
                            },
                            "type": {
                                "@name": "utf8",
                                "@c:type": "gchar*"
                            }
                        },
                        {
                            "@name": "signature",
                            "@writable": "1",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../gdk-pixbuf/gdk-pixbuf-io.h",
                                "@line": "446",
                                "#text": "the signature of the module"
                            },
                            "type": {
                                "@name": "PixbufModulePattern",
                                "@c:type": "GdkPixbufModulePattern*"
                            }
                        },
                        {
                            "@name": "domain",
                            "@writable": "1",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../gdk-pixbuf/gdk-pixbuf-io.h",
                                "@line": "447",
                                "#text": "the message domain for the `description`"
                            },
                            "type": {
                                "@name": "utf8",
                                "@c:type": "gchar*"
                            }
                        },
                        {
                            "@name": "description",
                            "@writable": "1",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../gdk-pixbuf/gdk-pixbuf-io.h",
                                "@line": "448",
                                "#text": "a description of the image format"
                            },
                            "type": {
                                "@name": "utf8",
                                "@c:type": "gchar*"
                            }
                        },
                        {
                            "@name": "mime_types",
                            "@writable": "1",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../gdk-pixbuf/gdk-pixbuf-io.h",
                                "@line": "449",
                                "#text": "the MIME types for the image format"
                            },
                            "array": {
                                "@c:type": "gchar**",
                                "type": {
                                    "@name": "utf8",
                                    "@c:type": "gchar*"
                                }
                            }
                        },
                        {
                            "@name": "extensions",
                            "@writable": "1",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../gdk-pixbuf/gdk-pixbuf-io.h",
                                "@line": "450",
                                "#text": "typical filename extensions for the\n  image format"
                            },
                            "array": {
                                "@c:type": "gchar**",
                                "type": {
                                    "@name": "utf8",
                                    "@c:type": "gchar*"
                                }
                            }
                        },
                        {
                            "@name": "flags",
                            "@writable": "1",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../gdk-pixbuf/gdk-pixbuf-io.h",
                                "@line": "452",
                                "#text": "a combination of `GdkPixbufFormatFlags`"
                            },
                            "type": {
                                "@name": "guint32",
                                "@c:type": "guint32"
                            }
                        },
                        {
                            "@name": "disabled",
                            "@writable": "1",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../gdk-pixbuf/gdk-pixbuf-io.h",
                                "@line": "453",
                                "#text": "a boolean determining whether the loader is disabled`"
                            },
                            "type": {
                                "@name": "gboolean",
                                "@c:type": "gboolean"
                            }
                        },
                        {
                            "@name": "license",
                            "@writable": "1",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../gdk-pixbuf/gdk-pixbuf-io.h",
                                "@line": "454",
                                "#text": "a string containing license information, typically set to\n  shorthands like \"GPL\", \"LGPL\", etc."
                            },
                            "type": {
                                "@name": "utf8",
                                "@c:type": "gchar*"
                            }
                        }
                    ],
                    "method": [
                        {
                            "@name": "copy",
                            "@c:identifier": "gdk_pixbuf_format_copy",
                            "@version": "2.22",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../gdk-pixbuf/gdk-pixbuf-io.c",
                                "@line": "3452",
                                "#text": "Creates a copy of `format`."
                            },
                            "source-position": {
                                "@filename": "../gdk-pixbuf/gdk-pixbuf-io.h",
                                "@line": "92"
                            },
                            "return-value": {
                                "@transfer-ownership": "full",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "../gdk-pixbuf/gdk-pixbuf-io.c",
                                    "@line": "3458",
                                    "#text": "the newly allocated copy of a `GdkPixbufFormat`. Use\n  gdk_pixbuf_format_free() to free the resources when done"
                                },
                                "type": {
                                    "@name": "PixbufFormat",
                                    "@c:type": "GdkPixbufFormat*"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "format",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../gdk-pixbuf/gdk-pixbuf-io.c",
                                        "@line": "3454",
                                        "#text": "a pixbuf format"
                                    },
                                    "type": {
                                        "@name": "PixbufFormat",
                                        "@c:type": "const GdkPixbufFormat*"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "free",
                            "@c:identifier": "gdk_pixbuf_format_free",
                            "@version": "2.22",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../gdk-pixbuf/gdk-pixbuf-io.c",
                                "@line": "3472",
                                "#text": "Frees the resources allocated when copying a `GdkPixbufFormat`\nusing gdk_pixbuf_format_copy()"
                            },
                            "source-position": {
                                "@filename": "../gdk-pixbuf/gdk-pixbuf-io.h",
                                "@line": "94"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "type": {
                                    "@name": "none",
                                    "@c:type": "void"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "format",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../gdk-pixbuf/gdk-pixbuf-io.c",
                                        "@line": "3474",
                                        "#text": "a pixbuf format"
                                    },
                                    "type": {
                                        "@name": "PixbufFormat",
                                        "@c:type": "GdkPixbufFormat*"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "get_description",
                            "@c:identifier": "gdk_pixbuf_format_get_description",
                            "@version": "2.2",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../gdk-pixbuf/gdk-pixbuf-io.c",
                                "@line": "3249",
                                "#text": "Returns a description of the format."
                            },
                            "source-position": {
                                "@filename": "../gdk-pixbuf/gdk-pixbuf-io.h",
                                "@line": "56"
                            },
                            "return-value": {
                                "@transfer-ownership": "full",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "../gdk-pixbuf/gdk-pixbuf-io.c",
                                    "@line": "3255",
                                    "#text": "a description of the format."
                                },
                                "type": {
                                    "@name": "utf8",
                                    "@c:type": "gchar*"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "format",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../gdk-pixbuf/gdk-pixbuf-io.c",
                                        "@line": "3251",
                                        "#text": "a `GdkPixbufFormat`"
                                    },
                                    "type": {
                                        "@name": "PixbufFormat",
                                        "@c:type": "GdkPixbufFormat*"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "get_extensions",
                            "@c:identifier": "gdk_pixbuf_format_get_extensions",
                            "@version": "2.2",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../gdk-pixbuf/gdk-pixbuf-io.c",
                                "@line": "3293",
                                "#text": "Returns the filename extensions typically used for files in the\ngiven format."
                            },
                            "source-position": {
                                "@filename": "../gdk-pixbuf/gdk-pixbuf-io.h",
                                "@line": "60"
                            },
                            "return-value": {
                                "@transfer-ownership": "full",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "../gdk-pixbuf/gdk-pixbuf-io.c",
                                    "@line": "3300",
                                    "#text": "an array of\n  filename extensions"
                                },
                                "array": {
                                    "@c:type": "gchar**",
                                    "type": {
                                        "@name": "utf8"
                                    }
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "format",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../gdk-pixbuf/gdk-pixbuf-io.c",
                                        "@line": "3295",
                                        "#text": "a `GdkPixbufFormat`"
                                    },
                                    "type": {
                                        "@name": "PixbufFormat",
                                        "@c:type": "GdkPixbufFormat*"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "get_license",
                            "@c:identifier": "gdk_pixbuf_format_get_license",
                            "@version": "2.6",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../gdk-pixbuf/gdk-pixbuf-io.c",
                                "@line": "3397",
                                "#text": "Returns information about the license of the image loader for the format.\n\nThe returned string should be a shorthand for a well known license, e.g.\n\"LGPL\", \"GPL\", \"QPL\", \"GPL/QPL\", or \"other\" to indicate some other license."
                            },
                            "source-position": {
                                "@filename": "../gdk-pixbuf/gdk-pixbuf-io.h",
                                "@line": "74"
                            },
                            "return-value": {
                                "@transfer-ownership": "full",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "../gdk-pixbuf/gdk-pixbuf-io.c",
                                    "@line": "3406",
                                    "#text": "a string describing the license of the pixbuf format"
                                },
                                "type": {
                                    "@name": "utf8",
                                    "@c:type": "gchar*"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "format",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../gdk-pixbuf/gdk-pixbuf-io.c",
                                        "@line": "3399",
                                        "#text": "a pixbuf format"
                                    },
                                    "type": {
                                        "@name": "PixbufFormat",
                                        "@c:type": "GdkPixbufFormat*"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "get_mime_types",
                            "@c:identifier": "gdk_pixbuf_format_get_mime_types",
                            "@version": "2.2",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../gdk-pixbuf/gdk-pixbuf-io.c",
                                "@line": "3275",
                                "#text": "Returns the mime types supported by the format."
                            },
                            "source-position": {
                                "@filename": "../gdk-pixbuf/gdk-pixbuf-io.h",
                                "@line": "58"
                            },
                            "return-value": {
                                "@transfer-ownership": "full",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "../gdk-pixbuf/gdk-pixbuf-io.c",
                                    "@line": "3281",
                                    "#text": "an array of mime types"
                                },
                                "array": {
                                    "@c:type": "gchar**",
                                    "type": {
                                        "@name": "utf8"
                                    }
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "format",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../gdk-pixbuf/gdk-pixbuf-io.c",
                                        "@line": "3277",
                                        "#text": "a `GdkPixbufFormat`"
                                    },
                                    "type": {
                                        "@name": "PixbufFormat",
                                        "@c:type": "GdkPixbufFormat*"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "get_name",
                            "@c:identifier": "gdk_pixbuf_format_get_name",
                            "@version": "2.2",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../gdk-pixbuf/gdk-pixbuf-io.c",
                                "@line": "3231",
                                "#text": "Returns the name of the format."
                            },
                            "source-position": {
                                "@filename": "../gdk-pixbuf/gdk-pixbuf-io.h",
                                "@line": "54"
                            },
                            "return-value": {
                                "@transfer-ownership": "full",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "../gdk-pixbuf/gdk-pixbuf-io.c",
                                    "@line": "3237",
                                    "#text": "the name of the format."
                                },
                                "type": {
                                    "@name": "utf8",
                                    "@c:type": "gchar*"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "format",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../gdk-pixbuf/gdk-pixbuf-io.c",
                                        "@line": "3233",
                                        "#text": "a `GdkPixbufFormat`"
                                    },
                                    "type": {
                                        "@name": "PixbufFormat",
                                        "@c:type": "GdkPixbufFormat*"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "is_disabled",
                            "@c:identifier": "gdk_pixbuf_format_is_disabled",
                            "@version": "2.6",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../gdk-pixbuf/gdk-pixbuf-io.c",
                                "@line": "3353",
                                "#text": "Returns whether this image format is disabled.\n\nSee gdk_pixbuf_format_set_disabled()."
                            },
                            "source-position": {
                                "@filename": "../gdk-pixbuf/gdk-pixbuf-io.h",
                                "@line": "69"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "../gdk-pixbuf/gdk-pixbuf-io.c",
                                    "@line": "3361",
                                    "#text": "whether this image format is disabled."
                                },
                                "type": {
                                    "@name": "gboolean",
                                    "@c:type": "gboolean"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "format",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../gdk-pixbuf/gdk-pixbuf-io.c",
                                        "@line": "3355",
                                        "#text": "a `GdkPixbufFormat`"
                                    },
                                    "type": {
                                        "@name": "PixbufFormat",
                                        "@c:type": "GdkPixbufFormat*"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "is_save_option_supported",
                            "@c:identifier": "gdk_pixbuf_format_is_save_option_supported",
                            "@version": "2.36",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../gdk-pixbuf/gdk-pixbuf-io.c",
                                "@line": "3488",
                                "#text": "Returns `TRUE` if the save option specified by @option_key is supported when\nsaving a pixbuf using the module implementing @format.\n\nSee gdk_pixbuf_save() for more information about option keys."
                            },
                            "source-position": {
                                "@filename": "../gdk-pixbuf/gdk-pixbuf-io.h",
                                "@line": "62"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "../gdk-pixbuf/gdk-pixbuf-io.c",
                                    "@line": "3498",
                                    "#text": "`TRUE` if the specified option is supported"
                                },
                                "type": {
                                    "@name": "gboolean",
                                    "@c:type": "gboolean"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "format",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../gdk-pixbuf/gdk-pixbuf-io.c",
                                        "@line": "3490",
                                        "#text": "a pixbuf format"
                                    },
                                    "type": {
                                        "@name": "PixbufFormat",
                                        "@c:type": "GdkPixbufFormat*"
                                    }
                                },
                                "parameter": {
                                    "@name": "option_key",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../gdk-pixbuf/gdk-pixbuf-io.c",
                                        "@line": "3491",
                                        "#text": "the name of an option"
                                    },
                                    "type": {
                                        "@name": "utf8",
                                        "@c:type": "const gchar*"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "is_scalable",
                            "@c:identifier": "gdk_pixbuf_format_is_scalable",
                            "@version": "2.6",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../gdk-pixbuf/gdk-pixbuf-io.c",
                                "@line": "3331",
                                "#text": "Returns whether this image format is scalable.\n\nIf a file is in a scalable format, it is preferable to load it at\nthe desired size, rather than loading it at the default size and\nscaling the resulting pixbuf to the desired size."
                            },
                            "source-position": {
                                "@filename": "../gdk-pixbuf/gdk-pixbuf-io.h",
                                "@line": "67"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "../gdk-pixbuf/gdk-pixbuf-io.c",
                                    "@line": "3341",
                                    "#text": "whether this image format is scalable."
                                },
                                "type": {
                                    "@name": "gboolean",
                                    "@c:type": "gboolean"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "format",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../gdk-pixbuf/gdk-pixbuf-io.c",
                                        "@line": "3333",
                                        "#text": "a `GdkPixbufFormat`"
                                    },
                                    "type": {
                                        "@name": "PixbufFormat",
                                        "@c:type": "GdkPixbufFormat*"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "is_writable",
                            "@c:identifier": "gdk_pixbuf_format_is_writable",
                            "@version": "2.2",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../gdk-pixbuf/gdk-pixbuf-io.c",
                                "@line": "3313",
                                "#text": "Returns whether pixbufs can be saved in the given format."
                            },
                            "source-position": {
                                "@filename": "../gdk-pixbuf/gdk-pixbuf-io.h",
                                "@line": "65"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "../gdk-pixbuf/gdk-pixbuf-io.c",
                                    "@line": "3319",
                                    "#text": "whether pixbufs can be saved in the given format."
                                },
                                "type": {
                                    "@name": "gboolean",
                                    "@c:type": "gboolean"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "format",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../gdk-pixbuf/gdk-pixbuf-io.c",
                                        "@line": "3315",
                                        "#text": "a `GdkPixbufFormat`"
                                    },
                                    "type": {
                                        "@name": "PixbufFormat",
                                        "@c:type": "GdkPixbufFormat*"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "set_disabled",
                            "@c:identifier": "gdk_pixbuf_format_set_disabled",
                            "@version": "2.6",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../gdk-pixbuf/gdk-pixbuf-io.c",
                                "@line": "3373",
                                "#text": "Disables or enables an image format.\n\nIf a format is disabled, GdkPixbuf won't use the image loader for\nthis format to load images.\n\nApplications can use this to avoid using image loaders with an\ninappropriate license, see gdk_pixbuf_format_get_license()."
                            },
                            "source-position": {
                                "@filename": "../gdk-pixbuf/gdk-pixbuf-io.h",
                                "@line": "71"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "type": {
                                    "@name": "none",
                                    "@c:type": "void"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "format",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../gdk-pixbuf/gdk-pixbuf-io.c",
                                        "@line": "3375",
                                        "#text": "a `GdkPixbufFormat`"
                                    },
                                    "type": {
                                        "@name": "PixbufFormat",
                                        "@c:type": "GdkPixbufFormat*"
                                    }
                                },
                                "parameter": {
                                    "@name": "disabled",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../gdk-pixbuf/gdk-pixbuf-io.c",
                                        "@line": "3376",
                                        "#text": "`TRUE` to disable the format @format"
                                    },
                                    "type": {
                                        "@name": "gboolean",
                                        "@c:type": "gboolean"
                                    }
                                }
                            }
                        }
                    ]
                },
                {
                    "@name": "PixbufLoaderClass",
                    "@c:type": "GdkPixbufLoaderClass",
                    "@glib:is-gtype-struct-for": "PixbufLoader",
                    "source-position": {
                        "@filename": "../gdk-pixbuf/gdk-pixbuf-loader.h",
                        "@line": "74"
                    },
                    "field": [
                        {
                            "@name": "parent_class",
                            "type": {
                                "@name": "GObject.ObjectClass",
                                "@c:type": "GObjectClass"
                            }
                        },
                        {
                            "@name": "size_prepared",
                            "callback": {
                                "@name": "size_prepared",
                                "source-position": {
                                    "@filename": "../gdk-pixbuf/gdk-pixbuf-loader.h",
                                    "@line": "60"
                                },
                                "return-value": {
                                    "@transfer-ownership": "none",
                                    "type": {
                                        "@name": "none",
                                        "@c:type": "void"
                                    }
                                },
                                "parameters": {
                                    "parameter": [
                                        {
                                            "@name": "loader",
                                            "@transfer-ownership": "none",
                                            "type": {
                                                "@name": "PixbufLoader",
                                                "@c:type": "GdkPixbufLoader*"
                                            }
                                        },
                                        {
                                            "@name": "width",
                                            "@transfer-ownership": "none",
                                            "type": {
                                                "@name": "gint",
                                                "@c:type": "int"
                                            }
                                        },
                                        {
                                            "@name": "height",
                                            "@transfer-ownership": "none",
                                            "type": {
                                                "@name": "gint",
                                                "@c:type": "int"
                                            }
                                        }
                                    ]
                                }
                            }
                        },
                        {
                            "@name": "area_prepared",
                            "callback": {
                                "@name": "area_prepared",
                                "source-position": {
                                    "@filename": "../gdk-pixbuf/gdk-pixbuf-loader.h",
                                    "@line": "64"
                                },
                                "return-value": {
                                    "@transfer-ownership": "none",
                                    "type": {
                                        "@name": "none",
                                        "@c:type": "void"
                                    }
                                },
                                "parameters": {
                                    "parameter": {
                                        "@name": "loader",
                                        "@transfer-ownership": "none",
                                        "type": {
                                            "@name": "PixbufLoader",
                                            "@c:type": "GdkPixbufLoader*"
                                        }
                                    }
                                }
                            }
                        },
                        {
                            "@name": "area_updated",
                            "callback": {
                                "@name": "area_updated",
                                "source-position": {
                                    "@filename": "../gdk-pixbuf/gdk-pixbuf-loader.h",
                                    "@line": "67"
                                },
                                "return-value": {
                                    "@transfer-ownership": "none",
                                    "type": {
                                        "@name": "none",
                                        "@c:type": "void"
                                    }
                                },
                                "parameters": {
                                    "parameter": [
                                        {
                                            "@name": "loader",
                                            "@transfer-ownership": "none",
                                            "type": {
                                                "@name": "PixbufLoader",
                                                "@c:type": "GdkPixbufLoader*"
                                            }
                                        },
                                        {
                                            "@name": "x",
                                            "@transfer-ownership": "none",
                                            "type": {
                                                "@name": "gint",
                                                "@c:type": "int"
                                            }
                                        },
                                        {
                                            "@name": "y",
                                            "@transfer-ownership": "none",
                                            "type": {
                                                "@name": "gint",
                                                "@c:type": "int"
                                            }
                                        },
                                        {
                                            "@name": "width",
                                            "@transfer-ownership": "none",
                                            "type": {
                                                "@name": "gint",
                                                "@c:type": "int"
                                            }
                                        },
                                        {
                                            "@name": "height",
                                            "@transfer-ownership": "none",
                                            "type": {
                                                "@name": "gint",
                                                "@c:type": "int"
                                            }
                                        }
                                    ]
                                }
                            }
                        },
                        {
                            "@name": "closed",
                            "callback": {
                                "@name": "closed",
                                "source-position": {
                                    "@filename": "../gdk-pixbuf/gdk-pixbuf-loader.h",
                                    "@line": "73"
                                },
                                "return-value": {
                                    "@transfer-ownership": "none",
                                    "type": {
                                        "@name": "none",
                                        "@c:type": "void"
                                    }
                                },
                                "parameters": {
                                    "parameter": {
                                        "@name": "loader",
                                        "@transfer-ownership": "none",
                                        "type": {
                                            "@name": "PixbufLoader",
                                            "@c:type": "GdkPixbufLoader*"
                                        }
                                    }
                                }
                            }
                        }
                    ]
                },
                {
                    "@name": "PixbufModule",
                    "@c:type": "GdkPixbufModule",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "../gdk-pixbuf/gdk-pixbuf-io.c",
                        "@line": "50",
                        "#text": "A `GdkPixbufModule` contains the necessary functions to load and save\nimages in a certain file format.\n\nIf `GdkPixbuf` has been compiled with `GModule` support, it can be extended\nby modules which can load (and perhaps also save) new image and animation\nformats.\n\n## Implementing modules\n\nThe `GdkPixbuf` interfaces needed for implementing modules are contained in\n`gdk-pixbuf-io.h` (and `gdk-pixbuf-animation.h` if the module supports\nanimations). They are not covered by the same stability guarantees as the\nregular GdkPixbuf API. To underline this fact, they are protected by the\n`GDK_PIXBUF_ENABLE_BACKEND` pre-processor symbol.\n\nEach loadable module must contain a `GdkPixbufModuleFillVtableFunc` function\nnamed `fill_vtable`, which will get called when the module\nis loaded and must set the function pointers of the `GdkPixbufModule`.\n\nIn order to make format-checking work before actually loading the modules\n(which may require calling `dlopen` to load image libraries), modules export\ntheir signatures (and other information) via the `fill_info` function. An\nexternal utility, `gdk-pixbuf-query-loaders`, uses this to create a text\nfile containing a list of all available loaders and  their signatures.\nThis file is then read at runtime by `GdkPixbuf` to obtain the list of\navailable loaders and their signatures.\n\nModules may only implement a subset of the functionality available via\n`GdkPixbufModule`. If a particular functionality is not implemented, the\n`fill_vtable` function will simply not set the corresponding\nfunction pointers of the `GdkPixbufModule` structure. If a module supports\nincremental loading (i.e. provides `begin_load`, `stop_load` and\n`load_increment`), it doesn't have to implement `load`, since `GdkPixbuf`\ncan supply a generic `load` implementation wrapping the incremental loading.\n\n## Installing modules\n\nInstalling a module is a two-step process:\n\n - copy the module file(s) to the loader directory (normally\n   `$libdir/gdk-pixbuf-2.0/$version/loaders`, unless overridden by the\n   environment variable `GDK_PIXBUF_MODULEDIR`)\n - call `gdk-pixbuf-query-loaders` to update the module file (normally\n   `$libdir/gdk-pixbuf-2.0/$version/loaders.cache`, unless overridden\n   by the environment variable `GDK_PIXBUF_MODULE_FILE`)"
                    },
                    "source-position": {
                        "@filename": "../gdk-pixbuf/gdk-pixbuf-io.h",
                        "@line": "400"
                    },
                    "field": [
                        {
                            "@name": "module_name",
                            "@writable": "1",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../gdk-pixbuf/gdk-pixbuf-io.c",
                                "@line": "52",
                                "#text": "the name of the module, usually the same as the\n usual file extension for images of this type, eg. \"xpm\", \"jpeg\" or \"png\"."
                            },
                            "type": {
                                "@name": "utf8",
                                "@c:type": "char*"
                            }
                        },
                        {
                            "@name": "module_path",
                            "@writable": "1",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../gdk-pixbuf/gdk-pixbuf-io.c",
                                "@line": "54",
                                "#text": "the path from which the module is loaded."
                            },
                            "type": {
                                "@name": "utf8",
                                "@c:type": "char*"
                            }
                        },
                        {
                            "@name": "module",
                            "@writable": "1",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../gdk-pixbuf/gdk-pixbuf-io.c",
                                "@line": "55",
                                "#text": "the loaded `GModule`."
                            },
                            "type": {
                                "@name": "GModule.Module",
                                "@c:type": "GModule*"
                            }
                        },
                        {
                            "@name": "info",
                            "@writable": "1",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../gdk-pixbuf/gdk-pixbuf-io.c",
                                "@line": "56",
                                "#text": "a `GdkPixbufFormat` holding information about the module."
                            },
                            "type": {
                                "@name": "PixbufFormat",
                                "@c:type": "GdkPixbufFormat*"
                            }
                        },
                        {
                            "@name": "load",
                            "@writable": "1",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../gdk-pixbuf/gdk-pixbuf-io.c",
                                "@line": "57",
                                "#text": "loads an image from a file."
                            },
                            "type": {
                                "@name": "PixbufModuleLoadFunc",
                                "@c:type": "GdkPixbufModuleLoadFunc"
                            }
                        },
                        {
                            "@name": "load_xpm_data",
                            "@writable": "1",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../gdk-pixbuf/gdk-pixbuf-io.c",
                                "@line": "58",
                                "#text": "loads an image from data in memory."
                            },
                            "type": {
                                "@name": "PixbufModuleLoadXpmDataFunc",
                                "@c:type": "GdkPixbufModuleLoadXpmDataFunc"
                            }
                        },
                        {
                            "@name": "begin_load",
                            "@introspectable": "0",
                            "@writable": "1",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../gdk-pixbuf/gdk-pixbuf-io.c",
                                "@line": "59",
                                "#text": "begins an incremental load."
                            },
                            "type": {
                                "@name": "PixbufModuleBeginLoadFunc",
                                "@c:type": "GdkPixbufModuleBeginLoadFunc"
                            }
                        },
                        {
                            "@name": "stop_load",
                            "@writable": "1",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../gdk-pixbuf/gdk-pixbuf-io.c",
                                "@line": "60",
                                "#text": "stops an incremental load."
                            },
                            "type": {
                                "@name": "PixbufModuleStopLoadFunc",
                                "@c:type": "GdkPixbufModuleStopLoadFunc"
                            }
                        },
                        {
                            "@name": "load_increment",
                            "@writable": "1",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../gdk-pixbuf/gdk-pixbuf-io.c",
                                "@line": "61",
                                "#text": "continues an incremental load."
                            },
                            "type": {
                                "@name": "PixbufModuleIncrementLoadFunc",
                                "@c:type": "GdkPixbufModuleIncrementLoadFunc"
                            }
                        },
                        {
                            "@name": "load_animation",
                            "@writable": "1",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../gdk-pixbuf/gdk-pixbuf-io.c",
                                "@line": "62",
                                "#text": "loads an animation from a file."
                            },
                            "type": {
                                "@name": "PixbufModuleLoadAnimationFunc",
                                "@c:type": "GdkPixbufModuleLoadAnimationFunc"
                            }
                        },
                        {
                            "@name": "save",
                            "@writable": "1",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../gdk-pixbuf/gdk-pixbuf-io.c",
                                "@line": "63",
                                "#text": "saves a `GdkPixbuf` to a file."
                            },
                            "type": {
                                "@name": "PixbufModuleSaveFunc",
                                "@c:type": "GdkPixbufModuleSaveFunc"
                            }
                        },
                        {
                            "@name": "save_to_callback",
                            "@introspectable": "0",
                            "@writable": "1",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../gdk-pixbuf/gdk-pixbuf-io.c",
                                "@line": "64",
                                "#text": "saves a `GdkPixbuf` by calling the given `GdkPixbufSaveFunc`."
                            },
                            "type": {
                                "@name": "PixbufModuleSaveCallbackFunc",
                                "@c:type": "GdkPixbufModuleSaveCallbackFunc"
                            }
                        },
                        {
                            "@name": "is_save_option_supported",
                            "@writable": "1",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../gdk-pixbuf/gdk-pixbuf-io.c",
                                "@line": "65",
                                "#text": "returns whether a save option key is supported by the module"
                            },
                            "type": {
                                "@name": "PixbufModuleSaveOptionSupportedFunc",
                                "@c:type": "GdkPixbufModuleSaveOptionSupportedFunc"
                            }
                        },
                        {
                            "@name": "_reserved1",
                            "@introspectable": "0",
                            "callback": {
                                "@name": "_reserved1",
                                "source-position": {
                                    "@filename": "../gdk-pixbuf/gdk-pixbuf-io.h",
                                    "@line": "396"
                                },
                                "return-value": {
                                    "@transfer-ownership": "none",
                                    "type": {
                                        "@name": "none",
                                        "@c:type": "void"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "_reserved2",
                            "@introspectable": "0",
                            "callback": {
                                "@name": "_reserved2",
                                "source-position": {
                                    "@filename": "../gdk-pixbuf/gdk-pixbuf-io.h",
                                    "@line": "397"
                                },
                                "return-value": {
                                    "@transfer-ownership": "none",
                                    "type": {
                                        "@name": "none",
                                        "@c:type": "void"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "_reserved3",
                            "@introspectable": "0",
                            "callback": {
                                "@name": "_reserved3",
                                "source-position": {
                                    "@filename": "../gdk-pixbuf/gdk-pixbuf-io.h",
                                    "@line": "398"
                                },
                                "return-value": {
                                    "@transfer-ownership": "none",
                                    "type": {
                                        "@name": "none",
                                        "@c:type": "void"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "_reserved4",
                            "@introspectable": "0",
                            "callback": {
                                "@name": "_reserved4",
                                "source-position": {
                                    "@filename": "../gdk-pixbuf/gdk-pixbuf-io.h",
                                    "@line": "399"
                                },
                                "return-value": {
                                    "@transfer-ownership": "none",
                                    "type": {
                                        "@name": "none",
                                        "@c:type": "void"
                                    }
                                }
                            }
                        }
                    ]
                },
                {
                    "@name": "PixbufModulePattern",
                    "@c:type": "GdkPixbufModulePattern",
                    "@version": "2.2",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "../gdk-pixbuf/gdk-pixbuf-io.h",
                        "@line": "170",
                        "#text": "The signature prefix for a module.\n\nThe signature of a module is a set of prefixes. Prefixes are encoded as\npairs of ordinary strings, where the second string, called the mask, if\nnot `NULL`, must be of the same length as the first one and may contain\n' ', '!', 'x', 'z', and 'n' to indicate bytes that must be matched,\nnot matched, \"don't-care\"-bytes, zeros and non-zeros, respectively.\n\nEach prefix has an associated integer that describes the relevance of\nthe prefix, with 0 meaning a mismatch and 100 a \"perfect match\".\n\nStarting with gdk-pixbuf 2.8, the first byte of the mask may be '*',\nindicating an unanchored pattern that matches not only at the beginning,\nbut also in the middle. Versions prior to 2.8 will interpret the '*'\nlike an 'x'.\n\nThe signature of a module is stored as an array of\n`GdkPixbufModulePatterns`. The array is terminated by a pattern\nwhere the `prefix` is `NULL`.\n\n```c\nGdkPixbufModulePattern *signature[] = {\n  { \"abcdx\", \" !x z\", 100 },\n  { \"bla\", NULL,  90 },\n  { NULL, NULL, 0 }\n};\n```\n\nIn the example above, the signature matches e.g. \"auud\\0\" with\nrelevance 100, and \"blau\" with relevance 90."
                    },
                    "source-position": {
                        "@filename": "../gdk-pixbuf/gdk-pixbuf-io.h",
                        "@line": "215"
                    },
                    "field": [
                        {
                            "@name": "prefix",
                            "@writable": "1",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../gdk-pixbuf/gdk-pixbuf-io.h",
                                "@line": "172",
                                "#text": "the prefix for this pattern"
                            },
                            "type": {
                                "@name": "utf8",
                                "@c:type": "char*"
                            }
                        },
                        {
                            "@name": "mask",
                            "@writable": "1",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../gdk-pixbuf/gdk-pixbuf-io.h",
                                "@line": "173",
                                "#text": "mask containing bytes which modify how the prefix is matched against\n test data"
                            },
                            "type": {
                                "@name": "utf8",
                                "@c:type": "char*"
                            }
                        },
                        {
                            "@name": "relevance",
                            "@writable": "1",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../gdk-pixbuf/gdk-pixbuf-io.h",
                                "@line": "175",
                                "#text": "relevance of this pattern"
                            },
                            "type": {
                                "@name": "gint",
                                "@c:type": "int"
                            }
                        }
                    ]
                },
                {
                    "@name": "PixbufSimpleAnimClass",
                    "@c:type": "GdkPixbufSimpleAnimClass",
                    "@disguised": "1",
                    "@glib:is-gtype-struct-for": "PixbufSimpleAnim",
                    "source-position": {
                        "@filename": "../gdk-pixbuf/gdk-pixbuf-simple-anim.h",
                        "@line": "39"
                    }
                }
            ],
            "callback": [
                {
                    "@name": "PixbufDestroyNotify",
                    "@c:type": "GdkPixbufDestroyNotify",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "../gdk-pixbuf/gdk-pixbuf-core.h",
                        "@line": "96",
                        "#text": "A function of this type is responsible for freeing the pixel array\nof a pixbuf.\n\nThe gdk_pixbuf_new_from_data() function lets you pass in a pre-allocated\npixel array so that a pixbuf can be created from it; in this case you\nwill need to pass in a function of type `GdkPixbufDestroyNotify` so that\nthe pixel data can be freed when the pixbuf is finalized."
                    },
                    "source-position": {
                        "@filename": "../gdk-pixbuf/gdk-pixbuf-core.h",
                        "@line": "110"
                    },
                    "return-value": {
                        "@transfer-ownership": "none",
                        "type": {
                            "@name": "none",
                            "@c:type": "void"
                        }
                    },
                    "parameters": {
                        "parameter": [
                            {
                                "@name": "pixels",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "../gdk-pixbuf/gdk-pixbuf-core.h",
                                    "@line": "98",
                                    "#text": "The pixel array of the pixbuf\n  that is being finalized."
                                },
                                "array": {
                                    "@zero-terminated": "0",
                                    "@c:type": "guchar*",
                                    "type": {
                                        "@name": "guint8"
                                    }
                                }
                            },
                            {
                                "@name": "data",
                                "@transfer-ownership": "none",
                                "@nullable": "1",
                                "@allow-none": "1",
                                "@closure": "1",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "../gdk-pixbuf/gdk-pixbuf-core.h",
                                    "@line": "100",
                                    "#text": "User closure data."
                                },
                                "type": {
                                    "@name": "gpointer",
                                    "@c:type": "gpointer"
                                }
                            }
                        ]
                    }
                },
                {
                    "@name": "PixbufModuleBeginLoadFunc",
                    "@c:type": "GdkPixbufModuleBeginLoadFunc",
                    "@introspectable": "0",
                    "@throws": "1",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "../gdk-pixbuf/gdk-pixbuf-io.h",
                        "@line": "255",
                        "#text": "Sets up the image loading state.\n\nThe image loader is responsible for storing the given function pointers\nand user data, and call them when needed.\n\nThe image loader should set up an internal state object, and return it\nfrom this function; the state object will then be updated from the\n[callback@GdkPixbuf.PixbufModuleIncrementLoadFunc] callback, and will be freed\nby [callback@GdkPixbuf.PixbufModuleStopLoadFunc] callback."
                    },
                    "source-position": {
                        "@filename": "../gdk-pixbuf/gdk-pixbuf-io.h",
                        "@line": "277"
                    },
                    "return-value": {
                        "@transfer-ownership": "full",
                        "@nullable": "1",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "../gdk-pixbuf/gdk-pixbuf-io.h",
                            "@line": "273",
                            "#text": "the data to be passed to\n  [callback@GdkPixbuf.PixbufModuleIncrementLoadFunc]\n  and [callback@GdkPixbuf.PixbufModuleStopLoadFunc], or `NULL` in case of error"
                        },
                        "type": {
                            "@name": "gpointer",
                            "@c:type": "gpointer"
                        }
                    },
                    "parameters": {
                        "parameter": [
                            {
                                "@name": "size_func",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "../gdk-pixbuf/gdk-pixbuf-io.h",
                                    "@line": "257",
                                    "#text": "the function to be called when the size is known"
                                },
                                "type": {
                                    "@name": "PixbufModuleSizeFunc",
                                    "@c:type": "GdkPixbufModuleSizeFunc"
                                }
                            },
                            {
                                "@name": "prepared_func",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "../gdk-pixbuf/gdk-pixbuf-io.h",
                                    "@line": "258",
                                    "#text": "the function to be called when the data has been prepared"
                                },
                                "type": {
                                    "@name": "PixbufModulePreparedFunc",
                                    "@c:type": "GdkPixbufModulePreparedFunc"
                                }
                            },
                            {
                                "@name": "updated_func",
                                "@transfer-ownership": "none",
                                "@closure": "3",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "../gdk-pixbuf/gdk-pixbuf-io.h",
                                    "@line": "259",
                                    "#text": "the function to be called when the data has been updated"
                                },
                                "type": {
                                    "@name": "PixbufModuleUpdatedFunc",
                                    "@c:type": "GdkPixbufModuleUpdatedFunc"
                                }
                            },
                            {
                                "@name": "user_data",
                                "@transfer-ownership": "none",
                                "@nullable": "1",
                                "@allow-none": "1",
                                "@closure": "3",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "../gdk-pixbuf/gdk-pixbuf-io.h",
                                    "@line": "260",
                                    "#text": "the data to be passed to the functions"
                                },
                                "type": {
                                    "@name": "gpointer",
                                    "@c:type": "gpointer"
                                }
                            }
                        ]
                    }
                },
                {
                    "@name": "PixbufModuleFillInfoFunc",
                    "@c:type": "GdkPixbufModuleFillInfoFunc",
                    "@version": "2.2",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "../gdk-pixbuf/gdk-pixbuf-io.h",
                        "@line": "413",
                        "#text": "Defines the type of the function used to fill a\n#GdkPixbufFormat structure with information about a module."
                    },
                    "source-position": {
                        "@filename": "../gdk-pixbuf/gdk-pixbuf-io.h",
                        "@line": "422"
                    },
                    "return-value": {
                        "@transfer-ownership": "none",
                        "type": {
                            "@name": "none",
                            "@c:type": "void"
                        }
                    },
                    "parameters": {
                        "parameter": {
                            "@name": "info",
                            "@transfer-ownership": "none",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../gdk-pixbuf/gdk-pixbuf-io.h",
                                "@line": "415",
                                "#text": "a #GdkPixbufFormat."
                            },
                            "type": {
                                "@name": "PixbufFormat",
                                "@c:type": "GdkPixbufFormat*"
                            }
                        }
                    }
                },
                {
                    "@name": "PixbufModuleFillVtableFunc",
                    "@c:type": "GdkPixbufModuleFillVtableFunc",
                    "@version": "2.2",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "../gdk-pixbuf/gdk-pixbuf-io.h",
                        "@line": "402",
                        "#text": "Defines the type of the function used to set the vtable of a\n#GdkPixbufModule when it is loaded."
                    },
                    "source-position": {
                        "@filename": "../gdk-pixbuf/gdk-pixbuf-io.h",
                        "@line": "411"
                    },
                    "return-value": {
                        "@transfer-ownership": "none",
                        "type": {
                            "@name": "none",
                            "@c:type": "void"
                        }
                    },
                    "parameters": {
                        "parameter": {
                            "@name": "module",
                            "@transfer-ownership": "none",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../gdk-pixbuf/gdk-pixbuf-io.h",
                                "@line": "404",
                                "#text": "a #GdkPixbufModule."
                            },
                            "type": {
                                "@name": "PixbufModule",
                                "@c:type": "GdkPixbufModule*"
                            }
                        }
                    }
                },
                {
                    "@name": "PixbufModuleIncrementLoadFunc",
                    "@c:type": "GdkPixbufModuleIncrementLoadFunc",
                    "@throws": "1",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "../gdk-pixbuf/gdk-pixbuf-io.h",
                        "@line": "297",
                        "#text": "Incrementally loads a buffer into the image data."
                    },
                    "source-position": {
                        "@filename": "../gdk-pixbuf/gdk-pixbuf-io.h",
                        "@line": "308"
                    },
                    "return-value": {
                        "@transfer-ownership": "none",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "../gdk-pixbuf/gdk-pixbuf-io.h",
                            "@line": "306",
                            "#text": "`TRUE` if the incremental load was successful"
                        },
                        "type": {
                            "@name": "gboolean",
                            "@c:type": "gboolean"
                        }
                    },
                    "parameters": {
                        "parameter": [
                            {
                                "@name": "context",
                                "@transfer-ownership": "none",
                                "@nullable": "1",
                                "@allow-none": "1",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "../gdk-pixbuf/gdk-pixbuf-io.h",
                                    "@line": "299",
                                    "#text": "the state object created by [callback@GdkPixbuf.PixbufModuleBeginLoadFunc]"
                                },
                                "type": {
                                    "@name": "gpointer",
                                    "@c:type": "gpointer"
                                }
                            },
                            {
                                "@name": "buf",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "../gdk-pixbuf/gdk-pixbuf-io.h",
                                    "@line": "300",
                                    "#text": "the data to load"
                                },
                                "array": {
                                    "@length": "2",
                                    "@zero-terminated": "0",
                                    "@c:type": "const guchar*",
                                    "type": {
                                        "@name": "guint8"
                                    }
                                }
                            },
                            {
                                "@name": "size",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "../gdk-pixbuf/gdk-pixbuf-io.h",
                                    "@line": "301",
                                    "#text": "the length of the data to load"
                                },
                                "type": {
                                    "@name": "guint",
                                    "@c:type": "guint"
                                }
                            }
                        ]
                    }
                },
                {
                    "@name": "PixbufModuleLoadAnimationFunc",
                    "@c:type": "GdkPixbufModuleLoadAnimationFunc",
                    "@throws": "1",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "../gdk-pixbuf/gdk-pixbuf-io.h",
                        "@line": "241",
                        "#text": "Loads a file from a standard C file stream into a new `GdkPixbufAnimation`.\n\nIn case of error, this function should return `NULL` and set the `error` argument."
                    },
                    "source-position": {
                        "@filename": "../gdk-pixbuf/gdk-pixbuf-io.h",
                        "@line": "252"
                    },
                    "return-value": {
                        "@transfer-ownership": "full",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "../gdk-pixbuf/gdk-pixbuf-io.h",
                            "@line": "250",
                            "#text": "a newly created `GdkPixbufAnimation` for the contents of the file"
                        },
                        "type": {
                            "@name": "PixbufAnimation",
                            "@c:type": "GdkPixbufAnimation*"
                        }
                    },
                    "parameters": {
                        "parameter": {
                            "@name": "f",
                            "@transfer-ownership": "none",
                            "@nullable": "1",
                            "@allow-none": "1",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../gdk-pixbuf/gdk-pixbuf-io.h",
                                "@line": "243",
                                "#text": "the file stream from which the image should be loaded"
                            },
                            "type": {
                                "@name": "gpointer",
                                "@c:type": "FILE*"
                            }
                        }
                    }
                },
                {
                    "@name": "PixbufModuleLoadFunc",
                    "@c:type": "GdkPixbufModuleLoadFunc",
                    "@throws": "1",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "../gdk-pixbuf/gdk-pixbuf-io.h",
                        "@line": "217",
                        "#text": "Loads a file from a standard C file stream into a new `GdkPixbuf`.\n\nIn case of error, this function should return `NULL` and set the `error` argument."
                    },
                    "source-position": {
                        "@filename": "../gdk-pixbuf/gdk-pixbuf-io.h",
                        "@line": "228"
                    },
                    "return-value": {
                        "@transfer-ownership": "full",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "../gdk-pixbuf/gdk-pixbuf-io.h",
                            "@line": "226",
                            "#text": "a newly created `GdkPixbuf` for the contents of the file"
                        },
                        "type": {
                            "@name": "Pixbuf",
                            "@c:type": "GdkPixbuf*"
                        }
                    },
                    "parameters": {
                        "parameter": {
                            "@name": "f",
                            "@transfer-ownership": "none",
                            "@nullable": "1",
                            "@allow-none": "1",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../gdk-pixbuf/gdk-pixbuf-io.h",
                                "@line": "219",
                                "#text": "the file stream from which the image should be loaded"
                            },
                            "type": {
                                "@name": "gpointer",
                                "@c:type": "FILE*"
                            }
                        }
                    }
                },
                {
                    "@name": "PixbufModuleLoadXpmDataFunc",
                    "@c:type": "GdkPixbufModuleLoadXpmDataFunc",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "../gdk-pixbuf/gdk-pixbuf-io.h",
                        "@line": "231",
                        "#text": "Loads XPM data into a new `GdkPixbuf`."
                    },
                    "source-position": {
                        "@filename": "../gdk-pixbuf/gdk-pixbuf-io.h",
                        "@line": "239"
                    },
                    "return-value": {
                        "@transfer-ownership": "full",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "../gdk-pixbuf/gdk-pixbuf-io.h",
                            "@line": "237",
                            "#text": "a newly created `GdkPixbuf` for the XPM data"
                        },
                        "type": {
                            "@name": "Pixbuf",
                            "@c:type": "GdkPixbuf*"
                        }
                    },
                    "parameters": {
                        "parameter": {
                            "@name": "data",
                            "@transfer-ownership": "none",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../gdk-pixbuf/gdk-pixbuf-io.h",
                                "@line": "233",
                                "#text": "the XPM data"
                            },
                            "array": {
                                "@c:type": "const char**",
                                "type": {
                                    "@name": "utf8",
                                    "@c:type": "char*"
                                }
                            }
                        }
                    }
                },
                {
                    "@name": "PixbufModulePreparedFunc",
                    "@c:type": "GdkPixbufModulePreparedFunc",
                    "@version": "2.2",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "../gdk-pixbuf/gdk-pixbuf-io.h",
                        "@line": "126",
                        "#text": "Defines the type of the function that gets called once the initial\nsetup of @pixbuf is done.\n\n#GdkPixbufLoader uses a function of this type to emit the\n\"<link linkend=\"GdkPixbufLoader-area-prepared\">area_prepared</link>\"\nsignal."
                    },
                    "source-position": {
                        "@filename": "../gdk-pixbuf/gdk-pixbuf-io.h",
                        "@line": "141"
                    },
                    "return-value": {
                        "@transfer-ownership": "none",
                        "type": {
                            "@name": "none",
                            "@c:type": "void"
                        }
                    },
                    "parameters": {
                        "parameter": [
                            {
                                "@name": "pixbuf",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "../gdk-pixbuf/gdk-pixbuf-io.h",
                                    "@line": "128",
                                    "#text": "the #GdkPixbuf that is currently being loaded."
                                },
                                "type": {
                                    "@name": "Pixbuf",
                                    "@c:type": "GdkPixbuf*"
                                }
                            },
                            {
                                "@name": "anim",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "../gdk-pixbuf/gdk-pixbuf-io.h",
                                    "@line": "129",
                                    "#text": "if an animation is being loaded, the #GdkPixbufAnimation, else %NULL."
                                },
                                "type": {
                                    "@name": "PixbufAnimation",
                                    "@c:type": "GdkPixbufAnimation*"
                                }
                            },
                            {
                                "@name": "user_data",
                                "@transfer-ownership": "none",
                                "@nullable": "1",
                                "@allow-none": "1",
                                "@closure": "2",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "../gdk-pixbuf/gdk-pixbuf-io.h",
                                    "@line": "130",
                                    "#text": "the loader."
                                },
                                "type": {
                                    "@name": "gpointer",
                                    "@c:type": "gpointer"
                                }
                            }
                        ]
                    }
                },
                {
                    "@name": "PixbufModuleSaveCallbackFunc",
                    "@c:type": "GdkPixbufModuleSaveCallbackFunc",
                    "@introspectable": "0",
                    "@throws": "1",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "../gdk-pixbuf/gdk-pixbuf-io.h",
                        "@line": "336",
                        "#text": "Saves a `GdkPixbuf` by calling the provided function.\n\nThe optional `option_keys` and `option_values` arrays contain the keys and\nvalues (in the same order) for attributes to be saved alongside the image\ndata."
                    },
                    "source-position": {
                        "@filename": "../gdk-pixbuf/gdk-pixbuf-io.h",
                        "@line": "354"
                    },
                    "return-value": {
                        "@transfer-ownership": "none",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "../gdk-pixbuf/gdk-pixbuf-io.h",
                            "@line": "351",
                            "#text": "`TRUE` on success; in case of failure, `FALSE` is returned and\n  the `error` is set"
                        },
                        "type": {
                            "@name": "gboolean",
                            "@c:type": "gboolean"
                        }
                    },
                    "parameters": {
                        "parameter": [
                            {
                                "@name": "save_func",
                                "@transfer-ownership": "none",
                                "@closure": "1",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "../gdk-pixbuf/gdk-pixbuf-io.h",
                                    "@line": "338",
                                    "#text": "the function to call when saving"
                                },
                                "type": {
                                    "@name": "PixbufSaveFunc",
                                    "@c:type": "GdkPixbufSaveFunc"
                                }
                            },
                            {
                                "@name": "user_data",
                                "@transfer-ownership": "none",
                                "@nullable": "1",
                                "@allow-none": "1",
                                "@closure": "1",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "../gdk-pixbuf/gdk-pixbuf-io.h",
                                    "@line": "339",
                                    "#text": "the data to pass to @save_func"
                                },
                                "type": {
                                    "@name": "gpointer",
                                    "@c:type": "gpointer"
                                }
                            },
                            {
                                "@name": "pixbuf",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "../gdk-pixbuf/gdk-pixbuf-io.h",
                                    "@line": "340",
                                    "#text": "the `GdkPixbuf` to save"
                                },
                                "type": {
                                    "@name": "Pixbuf",
                                    "@c:type": "GdkPixbuf*"
                                }
                            },
                            {
                                "@name": "option_keys",
                                "@transfer-ownership": "none",
                                "@nullable": "1",
                                "@allow-none": "1",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "../gdk-pixbuf/gdk-pixbuf-io.h",
                                    "@line": "341",
                                    "#text": "an array of option names"
                                },
                                "array": {
                                    "@c:type": "gchar**",
                                    "type": {
                                        "@name": "utf8",
                                        "@c:type": "gchar*"
                                    }
                                }
                            },
                            {
                                "@name": "option_values",
                                "@transfer-ownership": "none",
                                "@nullable": "1",
                                "@allow-none": "1",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "../gdk-pixbuf/gdk-pixbuf-io.h",
                                    "@line": "342",
                                    "#text": "an array of option values"
                                },
                                "array": {
                                    "@c:type": "gchar**",
                                    "type": {
                                        "@name": "utf8",
                                        "@c:type": "gchar*"
                                    }
                                }
                            }
                        ]
                    }
                },
                {
                    "@name": "PixbufModuleSaveFunc",
                    "@c:type": "GdkPixbufModuleSaveFunc",
                    "@throws": "1",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "../gdk-pixbuf/gdk-pixbuf-io.h",
                        "@line": "313",
                        "#text": "Saves a `GdkPixbuf` into a standard C file stream.\n\nThe optional `param_keys` and `param_values` arrays contain the keys and\nvalues (in the same order) for attributes to be saved alongside the image\ndata."
                    },
                    "source-position": {
                        "@filename": "../gdk-pixbuf/gdk-pixbuf-io.h",
                        "@line": "330"
                    },
                    "return-value": {
                        "@transfer-ownership": "none",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "../gdk-pixbuf/gdk-pixbuf-io.h",
                            "@line": "327",
                            "#text": "`TRUE` on success; in case of failure, `FALSE` is returned and\n  the `error` is set"
                        },
                        "type": {
                            "@name": "gboolean",
                            "@c:type": "gboolean"
                        }
                    },
                    "parameters": {
                        "parameter": [
                            {
                                "@name": "f",
                                "@transfer-ownership": "none",
                                "@nullable": "1",
                                "@allow-none": "1",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "../gdk-pixbuf/gdk-pixbuf-io.h",
                                    "@line": "315",
                                    "#text": "the file stream into which the image should be saved"
                                },
                                "type": {
                                    "@name": "gpointer",
                                    "@c:type": "FILE*"
                                }
                            },
                            {
                                "@name": "pixbuf",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "../gdk-pixbuf/gdk-pixbuf-io.h",
                                    "@line": "316",
                                    "#text": "the image to save"
                                },
                                "type": {
                                    "@name": "Pixbuf",
                                    "@c:type": "GdkPixbuf*"
                                }
                            },
                            {
                                "@name": "param_keys",
                                "@transfer-ownership": "none",
                                "@nullable": "1",
                                "@allow-none": "1",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "../gdk-pixbuf/gdk-pixbuf-io.h",
                                    "@line": "317",
                                    "#text": "parameter keys to save"
                                },
                                "array": {
                                    "@c:type": "gchar**",
                                    "type": {
                                        "@name": "utf8",
                                        "@c:type": "gchar*"
                                    }
                                }
                            },
                            {
                                "@name": "param_values",
                                "@transfer-ownership": "none",
                                "@nullable": "1",
                                "@allow-none": "1",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "../gdk-pixbuf/gdk-pixbuf-io.h",
                                    "@line": "318",
                                    "#text": "parameter values to save"
                                },
                                "array": {
                                    "@c:type": "gchar**",
                                    "type": {
                                        "@name": "utf8",
                                        "@c:type": "gchar*"
                                    }
                                }
                            }
                        ]
                    }
                },
                {
                    "@name": "PixbufModuleSaveOptionSupportedFunc",
                    "@c:type": "GdkPixbufModuleSaveOptionSupportedFunc",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "../gdk-pixbuf/gdk-pixbuf-io.h",
                        "@line": "361",
                        "#text": "Checks whether the given `option_key` is supported when saving."
                    },
                    "source-position": {
                        "@filename": "../gdk-pixbuf/gdk-pixbuf-io.h",
                        "@line": "369"
                    },
                    "return-value": {
                        "@transfer-ownership": "none",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "../gdk-pixbuf/gdk-pixbuf-io.h",
                            "@line": "367",
                            "#text": "`TRUE` if the option is supported"
                        },
                        "type": {
                            "@name": "gboolean",
                            "@c:type": "gboolean"
                        }
                    },
                    "parameters": {
                        "parameter": {
                            "@name": "option_key",
                            "@transfer-ownership": "none",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../gdk-pixbuf/gdk-pixbuf-io.h",
                                "@line": "363",
                                "#text": "the option key to check"
                            },
                            "type": {
                                "@name": "utf8",
                                "@c:type": "const gchar*"
                            }
                        }
                    }
                },
                {
                    "@name": "PixbufModuleSizeFunc",
                    "@c:type": "GdkPixbufModuleSizeFunc",
                    "@version": "2.2",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "../gdk-pixbuf/gdk-pixbuf-io.h",
                        "@line": "100",
                        "#text": "Defines the type of the function that gets called once the size\nof the loaded image is known.\n\nThe function is expected to set @width and @height to the desired\nsize to which the image should be scaled. If a module has no efficient\nway to achieve the desired scaling during the loading of the image, it may\neither ignore the size request, or only approximate it - gdk-pixbuf will\nthen perform the required scaling on the completely loaded image.\n\nIf the function sets @width or @height to zero, the module should interpret\nthis as a hint that it will be closed soon and shouldn't allocate further\nresources. This convention is used to implement gdk_pixbuf_get_file_info()\nefficiently."
                    },
                    "source-position": {
                        "@filename": "../gdk-pixbuf/gdk-pixbuf-io.h",
                        "@line": "122"
                    },
                    "return-value": {
                        "@transfer-ownership": "none",
                        "type": {
                            "@name": "none",
                            "@c:type": "void"
                        }
                    },
                    "parameters": {
                        "parameter": [
                            {
                                "@name": "width",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "../gdk-pixbuf/gdk-pixbuf-io.h",
                                    "@line": "102",
                                    "#text": "pointer to a location containing the current image width"
                                },
                                "type": {
                                    "@name": "gint",
                                    "@c:type": "gint*"
                                }
                            },
                            {
                                "@name": "height",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "../gdk-pixbuf/gdk-pixbuf-io.h",
                                    "@line": "103",
                                    "#text": "pointer to a location containing the current image height"
                                },
                                "type": {
                                    "@name": "gint",
                                    "@c:type": "gint*"
                                }
                            },
                            {
                                "@name": "user_data",
                                "@transfer-ownership": "none",
                                "@nullable": "1",
                                "@allow-none": "1",
                                "@closure": "2",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "../gdk-pixbuf/gdk-pixbuf-io.h",
                                    "@line": "104",
                                    "#text": "the loader."
                                },
                                "type": {
                                    "@name": "gpointer",
                                    "@c:type": "gpointer"
                                }
                            }
                        ]
                    }
                },
                {
                    "@name": "PixbufModuleStopLoadFunc",
                    "@c:type": "GdkPixbufModuleStopLoadFunc",
                    "@throws": "1",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "../gdk-pixbuf/gdk-pixbuf-io.h",
                        "@line": "283",
                        "#text": "Finalizes the image loading state.\n\nThis function is called on success and error states."
                    },
                    "source-position": {
                        "@filename": "../gdk-pixbuf/gdk-pixbuf-io.h",
                        "@line": "294"
                    },
                    "return-value": {
                        "@transfer-ownership": "none",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "../gdk-pixbuf/gdk-pixbuf-io.h",
                            "@line": "292",
                            "#text": "`TRUE` if the loading operation was successful"
                        },
                        "type": {
                            "@name": "gboolean",
                            "@c:type": "gboolean"
                        }
                    },
                    "parameters": {
                        "parameter": {
                            "@name": "context",
                            "@transfer-ownership": "full",
                            "@nullable": "1",
                            "@allow-none": "1",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../gdk-pixbuf/gdk-pixbuf-io.h",
                                "@line": "285",
                                "#text": "the state object created by [callback@GdkPixbuf.PixbufModuleBeginLoadFunc]"
                            },
                            "type": {
                                "@name": "gpointer",
                                "@c:type": "gpointer"
                            }
                        }
                    }
                },
                {
                    "@name": "PixbufModuleUpdatedFunc",
                    "@c:type": "GdkPixbufModuleUpdatedFunc",
                    "@version": "2.2",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "../gdk-pixbuf/gdk-pixbuf-io.h",
                        "@line": "145",
                        "#text": "Defines the type of the function that gets called every time a region\nof @pixbuf is updated.\n\n#GdkPixbufLoader uses a function of this type to emit the\n\"<link linkend=\"GdkPixbufLoader-area-updated\">area_updated</link>\"\nsignal."
                    },
                    "source-position": {
                        "@filename": "../gdk-pixbuf/gdk-pixbuf-io.h",
                        "@line": "163"
                    },
                    "return-value": {
                        "@transfer-ownership": "none",
                        "type": {
                            "@name": "none",
                            "@c:type": "void"
                        }
                    },
                    "parameters": {
                        "parameter": [
                            {
                                "@name": "pixbuf",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "../gdk-pixbuf/gdk-pixbuf-io.h",
                                    "@line": "147",
                                    "#text": "the #GdkPixbuf that is currently being loaded."
                                },
                                "type": {
                                    "@name": "Pixbuf",
                                    "@c:type": "GdkPixbuf*"
                                }
                            },
                            {
                                "@name": "x",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "../gdk-pixbuf/gdk-pixbuf-io.h",
                                    "@line": "148",
                                    "#text": "the X origin of the updated area."
                                },
                                "type": {
                                    "@name": "gint",
                                    "@c:type": "int"
                                }
                            },
                            {
                                "@name": "y",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "../gdk-pixbuf/gdk-pixbuf-io.h",
                                    "@line": "149",
                                    "#text": "the Y origin of the updated area."
                                },
                                "type": {
                                    "@name": "gint",
                                    "@c:type": "int"
                                }
                            },
                            {
                                "@name": "width",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "../gdk-pixbuf/gdk-pixbuf-io.h",
                                    "@line": "150",
                                    "#text": "the width of the updated area."
                                },
                                "type": {
                                    "@name": "gint",
                                    "@c:type": "int"
                                }
                            },
                            {
                                "@name": "height",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "../gdk-pixbuf/gdk-pixbuf-io.h",
                                    "@line": "151",
                                    "#text": "the height of the updated area."
                                },
                                "type": {
                                    "@name": "gint",
                                    "@c:type": "int"
                                }
                            },
                            {
                                "@name": "user_data",
                                "@transfer-ownership": "none",
                                "@nullable": "1",
                                "@allow-none": "1",
                                "@closure": "5",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "../gdk-pixbuf/gdk-pixbuf-io.h",
                                    "@line": "152",
                                    "#text": "the loader."
                                },
                                "type": {
                                    "@name": "gpointer",
                                    "@c:type": "gpointer"
                                }
                            }
                        ]
                    }
                },
                {
                    "@name": "PixbufSaveFunc",
                    "@c:type": "GdkPixbufSaveFunc",
                    "@version": "2.4",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "../gdk-pixbuf/gdk-pixbuf-core.h",
                        "@line": "346",
                        "#text": "Save functions used by [method@GdkPixbuf.Pixbuf.save_to_callback].\n\nThis function is called once for each block of bytes that is \"written\"\nby `gdk_pixbuf_save_to_callback()`.\n\nIf successful it should return `TRUE`; if an error occurs it should set\n`error` and return `FALSE`, in which case `gdk_pixbuf_save_to_callback()`\nwill fail with the same error."
                    },
                    "source-position": {
                        "@filename": "../gdk-pixbuf/gdk-pixbuf-core.h",
                        "@line": "367"
                    },
                    "return-value": {
                        "@transfer-ownership": "none",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "../gdk-pixbuf/gdk-pixbuf-core.h",
                            "@line": "362",
                            "#text": "`TRUE` if successful, `FALSE` otherwise"
                        },
                        "type": {
                            "@name": "gboolean",
                            "@c:type": "gboolean"
                        }
                    },
                    "parameters": {
                        "parameter": [
                            {
                                "@name": "buf",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "../gdk-pixbuf/gdk-pixbuf-core.h",
                                    "@line": "348",
                                    "#text": "bytes to be written."
                                },
                                "array": {
                                    "@length": "1",
                                    "@zero-terminated": "0",
                                    "@c:type": "const gchar*",
                                    "type": {
                                        "@name": "guint8"
                                    }
                                }
                            },
                            {
                                "@name": "count",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "../gdk-pixbuf/gdk-pixbuf-core.h",
                                    "@line": "349",
                                    "#text": "number of bytes in @buf."
                                },
                                "type": {
                                    "@name": "gsize",
                                    "@c:type": "gsize"
                                }
                            },
                            {
                                "@name": "error",
                                "@direction": "out",
                                "@caller-allocates": "0",
                                "@transfer-ownership": "full",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "../gdk-pixbuf/gdk-pixbuf-core.h",
                                    "@line": "350",
                                    "#text": "A location to return an error."
                                },
                                "type": {
                                    "@name": "GLib.Error",
                                    "@c:type": "GError**"
                                }
                            },
                            {
                                "@name": "data",
                                "@transfer-ownership": "none",
                                "@nullable": "1",
                                "@allow-none": "1",
                                "@closure": "3",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "../gdk-pixbuf/gdk-pixbuf-core.h",
                                    "@line": "351",
                                    "#text": "user data passed to gdk_pixbuf_save_to_callback()."
                                },
                                "type": {
                                    "@name": "gpointer",
                                    "@c:type": "gpointer"
                                }
                            }
                        ]
                    }
                }
            ],
            "bitfield": {
                "@name": "PixbufFormatFlags",
                "@version": "2.2",
                "@c:type": "GdkPixbufFormatFlags",
                "doc": {
                    "@xml:space": "preserve",
                    "@filename": "../gdk-pixbuf/gdk-pixbuf-io.h",
                    "@line": "424",
                    "#text": "Flags which allow a module to specify further details about the supported\noperations."
                },
                "source-position": {
                    "@filename": "../gdk-pixbuf/gdk-pixbuf-io.h",
                    "@line": "441"
                },
                "member": [
                    {
                        "@name": "writable",
                        "@value": "1",
                        "@c:identifier": "GDK_PIXBUF_FORMAT_WRITABLE",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "../gdk-pixbuf/gdk-pixbuf-io.h",
                            "@line": "426",
                            "#text": "the module can write out images in the format."
                        }
                    },
                    {
                        "@name": "scalable",
                        "@value": "2",
                        "@c:identifier": "GDK_PIXBUF_FORMAT_SCALABLE",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "../gdk-pixbuf/gdk-pixbuf-io.h",
                            "@line": "427",
                            "#text": "the image format is scalable"
                        }
                    },
                    {
                        "@name": "threadsafe",
                        "@value": "4",
                        "@c:identifier": "GDK_PIXBUF_FORMAT_THREADSAFE",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "../gdk-pixbuf/gdk-pixbuf-io.h",
                            "@line": "428",
                            "#text": "the module is threadsafe. gdk-pixbuf\n    ignores modules that are not marked as threadsafe. (Since 2.28)."
                        }
                    }
                ]
            },
            "function": {
                "@name": "pixbuf_error_quark",
                "@c:identifier": "gdk_pixbuf_error_quark",
                "@moved-to": "PixbufError.quark",
                "return-value": {
                    "@transfer-ownership": "none",
                    "type": {
                        "@name": "GLib.Quark",
                        "@c:type": "GQuark"
                    }
                }
            }
        }
    }
}