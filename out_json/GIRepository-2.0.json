{
    "repository": {
        "@version": "1.2",
        "@xmlns": "http://www.gtk.org/introspection/core/1.0",
        "@xmlns:c": "http://www.gtk.org/introspection/c/1.0",
        "@xmlns:glib": "http://www.gtk.org/introspection/glib/1.0",
        "include": {
            "@name": "GObject",
            "@version": "2.0"
        },
        "package": {
            "@name": "gobject-introspection-1.0"
        },
        "c:include": {
            "@name": "girepository.h"
        },
        "namespace": {
            "@name": "GIRepository",
            "@version": "2.0",
            "@shared-library": "libgirepository-1.0.so.1",
            "@c:identifier-prefixes": "GI",
            "@c:symbol-prefixes": "g,gi",
            "alias": [
                {
                    "@name": "ArgInfo",
                    "@c:type": "GIArgInfo",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "girepository/gitypes.h",
                        "@line": "168",
                        "#text": "Represents an argument."
                    },
                    "source-position": {
                        "@filename": "girepository/gitypes.h",
                        "@line": "173"
                    },
                    "type": {
                        "@name": "BaseInfo",
                        "@c:type": "GIBaseInfo"
                    }
                },
                {
                    "@name": "CallableInfo",
                    "@c:type": "GICallableInfo",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "girepository/gitypes.h",
                        "@line": "46",
                        "#text": "Represents a callable, either #GIFunctionInfo, #GICallbackInfo or\n#GIVFuncInfo."
                    },
                    "source-position": {
                        "@filename": "girepository/gitypes.h",
                        "@line": "52"
                    },
                    "type": {
                        "@name": "BaseInfo",
                        "@c:type": "GIBaseInfo"
                    }
                },
                {
                    "@name": "CallbackInfo",
                    "@c:type": "GICallbackInfo",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "girepository/gitypes.h",
                        "@line": "69",
                        "#text": "Represents a callback, eg arguments and return value."
                    },
                    "source-position": {
                        "@filename": "girepository/gitypes.h",
                        "@line": "74"
                    },
                    "type": {
                        "@name": "BaseInfo",
                        "@c:type": "GIBaseInfo"
                    }
                },
                {
                    "@name": "ConstantInfo",
                    "@c:type": "GIConstantInfo",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "girepository/gitypes.h",
                        "@line": "118",
                        "#text": "Represents a constant."
                    },
                    "source-position": {
                        "@filename": "girepository/gitypes.h",
                        "@line": "123"
                    },
                    "type": {
                        "@name": "BaseInfo",
                        "@c:type": "GIBaseInfo"
                    }
                },
                {
                    "@name": "EnumInfo",
                    "@c:type": "GIEnumInfo",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "girepository/gitypes.h",
                        "@line": "97",
                        "#text": "Represents an enum or a flag."
                    },
                    "source-position": {
                        "@filename": "girepository/gitypes.h",
                        "@line": "102"
                    },
                    "type": {
                        "@name": "BaseInfo",
                        "@c:type": "GIBaseInfo"
                    }
                },
                {
                    "@name": "FieldInfo",
                    "@c:type": "GIFieldInfo",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "girepository/gitypes.h",
                        "@line": "161",
                        "#text": "Represents a field of a #GIStructInfo or a #GIUnionInfo."
                    },
                    "source-position": {
                        "@filename": "girepository/gitypes.h",
                        "@line": "166"
                    },
                    "type": {
                        "@name": "BaseInfo",
                        "@c:type": "GIBaseInfo"
                    }
                },
                {
                    "@name": "FunctionInfo",
                    "@c:type": "GIFunctionInfo",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "girepository/gitypes.h",
                        "@line": "54",
                        "#text": "Represents a function, eg arguments and return value."
                    },
                    "source-position": {
                        "@filename": "girepository/gitypes.h",
                        "@line": "59"
                    },
                    "type": {
                        "@name": "BaseInfo",
                        "@c:type": "GIBaseInfo"
                    }
                },
                {
                    "@name": "InterfaceInfo",
                    "@c:type": "GIInterfaceInfo",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "girepository/gitypes.h",
                        "@line": "111",
                        "#text": "Represents an interface."
                    },
                    "source-position": {
                        "@filename": "girepository/gitypes.h",
                        "@line": "116"
                    },
                    "type": {
                        "@name": "BaseInfo",
                        "@c:type": "GIBaseInfo"
                    }
                },
                {
                    "@name": "ObjectInfo",
                    "@c:type": "GIObjectInfo",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "girepository/gitypes.h",
                        "@line": "104",
                        "#text": "Represents an object."
                    },
                    "source-position": {
                        "@filename": "girepository/gitypes.h",
                        "@line": "109"
                    },
                    "type": {
                        "@name": "BaseInfo",
                        "@c:type": "GIBaseInfo"
                    }
                },
                {
                    "@name": "PropertyInfo",
                    "@c:type": "GIPropertyInfo",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "girepository/gitypes.h",
                        "@line": "154",
                        "#text": "Represents a property of a #GIObjectInfo or a #GIInterfaceInfo."
                    },
                    "source-position": {
                        "@filename": "girepository/gitypes.h",
                        "@line": "159"
                    },
                    "type": {
                        "@name": "BaseInfo",
                        "@c:type": "GIBaseInfo"
                    }
                },
                {
                    "@name": "RegisteredTypeInfo",
                    "@c:type": "GIRegisteredTypeInfo",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "girepository/gitypes.h",
                        "@line": "76",
                        "#text": "Represent a registered type."
                    },
                    "source-position": {
                        "@filename": "girepository/gitypes.h",
                        "@line": "81"
                    },
                    "type": {
                        "@name": "BaseInfo",
                        "@c:type": "GIBaseInfo"
                    }
                },
                {
                    "@name": "SignalInfo",
                    "@c:type": "GISignalInfo",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "girepository/gitypes.h",
                        "@line": "140",
                        "#text": "Represents a signal."
                    },
                    "source-position": {
                        "@filename": "girepository/gitypes.h",
                        "@line": "145"
                    },
                    "type": {
                        "@name": "BaseInfo",
                        "@c:type": "GIBaseInfo"
                    }
                },
                {
                    "@name": "StructInfo",
                    "@c:type": "GIStructInfo",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "girepository/gitypes.h",
                        "@line": "83",
                        "#text": "Represents a struct."
                    },
                    "source-position": {
                        "@filename": "girepository/gitypes.h",
                        "@line": "88"
                    },
                    "type": {
                        "@name": "BaseInfo",
                        "@c:type": "GIBaseInfo"
                    }
                },
                {
                    "@name": "TypeInfo",
                    "@c:type": "GITypeInfo",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "girepository/gitypes.h",
                        "@line": "175",
                        "#text": "Represents type information, direction, transfer etc."
                    },
                    "source-position": {
                        "@filename": "girepository/gitypes.h",
                        "@line": "180"
                    },
                    "type": {
                        "@name": "BaseInfo",
                        "@c:type": "GIBaseInfo"
                    }
                },
                {
                    "@name": "UnionInfo",
                    "@c:type": "GIUnionInfo",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "girepository/gitypes.h",
                        "@line": "90",
                        "#text": "Represents a union."
                    },
                    "source-position": {
                        "@filename": "girepository/gitypes.h",
                        "@line": "95"
                    },
                    "type": {
                        "@name": "BaseInfo",
                        "@c:type": "GIBaseInfo"
                    }
                },
                {
                    "@name": "VFuncInfo",
                    "@c:type": "GIVFuncInfo",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "girepository/gitypes.h",
                        "@line": "147",
                        "#text": "Represents a virtual function."
                    },
                    "source-position": {
                        "@filename": "girepository/gitypes.h",
                        "@line": "152"
                    },
                    "type": {
                        "@name": "BaseInfo",
                        "@c:type": "GIBaseInfo"
                    }
                },
                {
                    "@name": "ValueInfo",
                    "@c:type": "GIValueInfo",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "girepository/gitypes.h",
                        "@line": "133",
                        "#text": "Represents a enum value of a #GIEnumInfo."
                    },
                    "source-position": {
                        "@filename": "girepository/gitypes.h",
                        "@line": "138"
                    },
                    "type": {
                        "@name": "BaseInfo",
                        "@c:type": "GIBaseInfo"
                    }
                }
            ],
            "union": {
                "@name": "Argument",
                "@c:type": "GIArgument",
                "doc": {
                    "@xml:space": "preserve",
                    "@filename": "girepository/gitypes.h",
                    "@line": "214",
                    "#text": "Stores an argument of varying type"
                },
                "source-position": {
                    "@filename": "girepository/gitypes.h",
                    "@line": "212"
                },
                "field": [
                    {
                        "@name": "v_boolean",
                        "@writable": "1",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "girepository/gitypes.h",
                            "@line": "216",
                            "#text": "TODO"
                        },
                        "type": {
                            "@name": "gboolean",
                            "@c:type": "gboolean"
                        }
                    },
                    {
                        "@name": "v_int8",
                        "@writable": "1",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "girepository/gitypes.h",
                            "@line": "217",
                            "#text": "TODO"
                        },
                        "type": {
                            "@name": "gint8",
                            "@c:type": "gint8"
                        }
                    },
                    {
                        "@name": "v_uint8",
                        "@writable": "1",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "girepository/gitypes.h",
                            "@line": "218",
                            "#text": "TODO"
                        },
                        "type": {
                            "@name": "guint8",
                            "@c:type": "guint8"
                        }
                    },
                    {
                        "@name": "v_int16",
                        "@writable": "1",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "girepository/gitypes.h",
                            "@line": "219",
                            "#text": "TODO"
                        },
                        "type": {
                            "@name": "gint16",
                            "@c:type": "gint16"
                        }
                    },
                    {
                        "@name": "v_uint16",
                        "@writable": "1",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "girepository/gitypes.h",
                            "@line": "220",
                            "#text": "TODO"
                        },
                        "type": {
                            "@name": "guint16",
                            "@c:type": "guint16"
                        }
                    },
                    {
                        "@name": "v_int32",
                        "@writable": "1",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "girepository/gitypes.h",
                            "@line": "221",
                            "#text": "TODO"
                        },
                        "type": {
                            "@name": "gint32",
                            "@c:type": "gint32"
                        }
                    },
                    {
                        "@name": "v_uint32",
                        "@writable": "1",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "girepository/gitypes.h",
                            "@line": "222",
                            "#text": "TODO"
                        },
                        "type": {
                            "@name": "guint32",
                            "@c:type": "guint32"
                        }
                    },
                    {
                        "@name": "v_int64",
                        "@writable": "1",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "girepository/gitypes.h",
                            "@line": "223",
                            "#text": "TODO"
                        },
                        "type": {
                            "@name": "gint64",
                            "@c:type": "gint64"
                        }
                    },
                    {
                        "@name": "v_uint64",
                        "@writable": "1",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "girepository/gitypes.h",
                            "@line": "224",
                            "#text": "TODO"
                        },
                        "type": {
                            "@name": "guint64",
                            "@c:type": "guint64"
                        }
                    },
                    {
                        "@name": "v_float",
                        "@writable": "1",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "girepository/gitypes.h",
                            "@line": "225",
                            "#text": "TODO"
                        },
                        "type": {
                            "@name": "gfloat",
                            "@c:type": "gfloat"
                        }
                    },
                    {
                        "@name": "v_double",
                        "@writable": "1",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "girepository/gitypes.h",
                            "@line": "226",
                            "#text": "TODO"
                        },
                        "type": {
                            "@name": "gdouble",
                            "@c:type": "gdouble"
                        }
                    },
                    {
                        "@name": "v_short",
                        "@writable": "1",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "girepository/gitypes.h",
                            "@line": "227",
                            "#text": "TODO"
                        },
                        "type": {
                            "@name": "gshort",
                            "@c:type": "gshort"
                        }
                    },
                    {
                        "@name": "v_ushort",
                        "@writable": "1",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "girepository/gitypes.h",
                            "@line": "228",
                            "#text": "TODO"
                        },
                        "type": {
                            "@name": "gushort",
                            "@c:type": "gushort"
                        }
                    },
                    {
                        "@name": "v_int",
                        "@writable": "1",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "girepository/gitypes.h",
                            "@line": "229",
                            "#text": "TODO"
                        },
                        "type": {
                            "@name": "gint",
                            "@c:type": "gint"
                        }
                    },
                    {
                        "@name": "v_uint",
                        "@writable": "1",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "girepository/gitypes.h",
                            "@line": "230",
                            "#text": "TODO"
                        },
                        "type": {
                            "@name": "guint",
                            "@c:type": "guint"
                        }
                    },
                    {
                        "@name": "v_long",
                        "@writable": "1",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "girepository/gitypes.h",
                            "@line": "231",
                            "#text": "TODO"
                        },
                        "type": {
                            "@name": "glong",
                            "@c:type": "glong"
                        }
                    },
                    {
                        "@name": "v_ulong",
                        "@writable": "1",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "girepository/gitypes.h",
                            "@line": "232",
                            "#text": "TODO"
                        },
                        "type": {
                            "@name": "gulong",
                            "@c:type": "gulong"
                        }
                    },
                    {
                        "@name": "v_ssize",
                        "@writable": "1",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "girepository/gitypes.h",
                            "@line": "233",
                            "#text": "TODO"
                        },
                        "type": {
                            "@name": "gssize",
                            "@c:type": "gssize"
                        }
                    },
                    {
                        "@name": "v_size",
                        "@writable": "1",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "girepository/gitypes.h",
                            "@line": "234",
                            "#text": "TODO"
                        },
                        "type": {
                            "@name": "gsize",
                            "@c:type": "gsize"
                        }
                    },
                    {
                        "@name": "v_string",
                        "@writable": "1",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "girepository/gitypes.h",
                            "@line": "235",
                            "#text": "TODO"
                        },
                        "type": {
                            "@name": "utf8",
                            "@c:type": "gchar*"
                        }
                    },
                    {
                        "@name": "v_pointer",
                        "@writable": "1",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "girepository/gitypes.h",
                            "@line": "236",
                            "#text": "TODO"
                        },
                        "type": {
                            "@name": "gpointer",
                            "@c:type": "gpointer"
                        }
                    }
                ]
            },
            "enumeration": [
                {
                    "@name": "ArrayType",
                    "@c:type": "GIArrayType",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "girepository/gitypes.h",
                        "@line": "437",
                        "#text": "The type of array in a #GITypeInfo."
                    },
                    "source-position": {
                        "@filename": "girepository/gitypes.h",
                        "@line": "451"
                    },
                    "member": [
                        {
                            "@name": "c",
                            "@value": "0",
                            "@c:identifier": "GI_ARRAY_TYPE_C",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "girepository/gitypes.h",
                                "@line": "439",
                                "#text": "a C array, char[] for instance"
                            }
                        },
                        {
                            "@name": "array",
                            "@value": "1",
                            "@c:identifier": "GI_ARRAY_TYPE_ARRAY",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "girepository/gitypes.h",
                                "@line": "440",
                                "#text": "a @GArray array"
                            }
                        },
                        {
                            "@name": "ptr_array",
                            "@value": "2",
                            "@c:identifier": "GI_ARRAY_TYPE_PTR_ARRAY",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "girepository/gitypes.h",
                                "@line": "441",
                                "#text": "a #GPtrArray array"
                            }
                        },
                        {
                            "@name": "byte_array",
                            "@value": "3",
                            "@c:identifier": "GI_ARRAY_TYPE_BYTE_ARRAY",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "girepository/gitypes.h",
                                "@line": "442",
                                "#text": "a #GByteArray array"
                            }
                        }
                    ]
                },
                {
                    "@name": "Direction",
                    "@c:type": "GIDirection",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "girepository/gitypes.h",
                        "@line": "324",
                        "#text": "The direction of a #GIArgInfo."
                    },
                    "source-position": {
                        "@filename": "girepository/gitypes.h",
                        "@line": "336"
                    },
                    "member": [
                        {
                            "@name": "in",
                            "@value": "0",
                            "@c:identifier": "GI_DIRECTION_IN",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "girepository/gitypes.h",
                                "@line": "326",
                                "#text": "in argument."
                            }
                        },
                        {
                            "@name": "out",
                            "@value": "1",
                            "@c:identifier": "GI_DIRECTION_OUT",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "girepository/gitypes.h",
                                "@line": "327",
                                "#text": "out argument."
                            }
                        },
                        {
                            "@name": "inout",
                            "@value": "2",
                            "@c:identifier": "GI_DIRECTION_INOUT",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "girepository/gitypes.h",
                                "@line": "328",
                                "#text": "in and out argument."
                            }
                        }
                    ]
                },
                {
                    "@name": "InfoType",
                    "@c:type": "GIInfoType",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "girepository/gitypes.h",
                        "@line": "242",
                        "#text": "The type of a GIBaseInfo struct."
                    },
                    "source-position": {
                        "@filename": "girepository/gitypes.h",
                        "@line": "290"
                    },
                    "member": [
                        {
                            "@name": "invalid",
                            "@value": "0",
                            "@c:identifier": "GI_INFO_TYPE_INVALID",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "girepository/gitypes.h",
                                "@line": "244",
                                "#text": "invalid type"
                            }
                        },
                        {
                            "@name": "function",
                            "@value": "1",
                            "@c:identifier": "GI_INFO_TYPE_FUNCTION",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "girepository/gitypes.h",
                                "@line": "245",
                                "#text": "function, see #GIFunctionInfo"
                            }
                        },
                        {
                            "@name": "callback",
                            "@value": "2",
                            "@c:identifier": "GI_INFO_TYPE_CALLBACK",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "girepository/gitypes.h",
                                "@line": "246",
                                "#text": "callback, see #GIFunctionInfo"
                            }
                        },
                        {
                            "@name": "struct",
                            "@value": "3",
                            "@c:identifier": "GI_INFO_TYPE_STRUCT",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "girepository/gitypes.h",
                                "@line": "247",
                                "#text": "struct, see #GIStructInfo"
                            }
                        },
                        {
                            "@name": "boxed",
                            "@value": "4",
                            "@c:identifier": "GI_INFO_TYPE_BOXED",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "girepository/gitypes.h",
                                "@line": "248",
                                "#text": "boxed, see #GIStructInfo or #GIUnionInfo"
                            }
                        },
                        {
                            "@name": "enum",
                            "@value": "5",
                            "@c:identifier": "GI_INFO_TYPE_ENUM",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "girepository/gitypes.h",
                                "@line": "249",
                                "#text": "enum, see #GIEnumInfo"
                            }
                        },
                        {
                            "@name": "flags",
                            "@value": "6",
                            "@c:identifier": "GI_INFO_TYPE_FLAGS",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "girepository/gitypes.h",
                                "@line": "250",
                                "#text": "flags, see #GIEnumInfo"
                            }
                        },
                        {
                            "@name": "object",
                            "@value": "7",
                            "@c:identifier": "GI_INFO_TYPE_OBJECT",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "girepository/gitypes.h",
                                "@line": "251",
                                "#text": "object, see #GIObjectInfo"
                            }
                        },
                        {
                            "@name": "interface",
                            "@value": "8",
                            "@c:identifier": "GI_INFO_TYPE_INTERFACE",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "girepository/gitypes.h",
                                "@line": "252",
                                "#text": "interface, see #GIInterfaceInfo"
                            }
                        },
                        {
                            "@name": "constant",
                            "@value": "9",
                            "@c:identifier": "GI_INFO_TYPE_CONSTANT",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "girepository/gitypes.h",
                                "@line": "253",
                                "#text": "contant, see #GIConstantInfo"
                            }
                        },
                        {
                            "@name": "invalid_0",
                            "@value": "10",
                            "@c:identifier": "GI_INFO_TYPE_INVALID_0",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "girepository/gitypes.h",
                                "@line": "254",
                                "#text": "deleted, used to be GI_INFO_TYPE_ERROR_DOMAIN."
                            }
                        },
                        {
                            "@name": "union",
                            "@value": "11",
                            "@c:identifier": "GI_INFO_TYPE_UNION",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "girepository/gitypes.h",
                                "@line": "255",
                                "#text": "union, see #GIUnionInfo"
                            }
                        },
                        {
                            "@name": "value",
                            "@value": "12",
                            "@c:identifier": "GI_INFO_TYPE_VALUE",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "girepository/gitypes.h",
                                "@line": "256",
                                "#text": "enum value, see #GIValueInfo"
                            }
                        },
                        {
                            "@name": "signal",
                            "@value": "13",
                            "@c:identifier": "GI_INFO_TYPE_SIGNAL",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "girepository/gitypes.h",
                                "@line": "257",
                                "#text": "signal, see #GISignalInfo"
                            }
                        },
                        {
                            "@name": "vfunc",
                            "@value": "14",
                            "@c:identifier": "GI_INFO_TYPE_VFUNC",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "girepository/gitypes.h",
                                "@line": "258",
                                "#text": "virtual function, see #GIVFuncInfo"
                            }
                        },
                        {
                            "@name": "property",
                            "@value": "15",
                            "@c:identifier": "GI_INFO_TYPE_PROPERTY",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "girepository/gitypes.h",
                                "@line": "259",
                                "#text": "GObject property, see #GIPropertyInfo"
                            }
                        },
                        {
                            "@name": "field",
                            "@value": "16",
                            "@c:identifier": "GI_INFO_TYPE_FIELD",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "girepository/gitypes.h",
                                "@line": "260",
                                "#text": "struct or union field, see #GIFieldInfo"
                            }
                        },
                        {
                            "@name": "arg",
                            "@value": "17",
                            "@c:identifier": "GI_INFO_TYPE_ARG",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "girepository/gitypes.h",
                                "@line": "261",
                                "#text": "argument of a function or callback, see #GIArgInfo"
                            }
                        },
                        {
                            "@name": "type",
                            "@value": "18",
                            "@c:identifier": "GI_INFO_TYPE_TYPE",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "girepository/gitypes.h",
                                "@line": "262",
                                "#text": "type information, see #GITypeInfo"
                            }
                        },
                        {
                            "@name": "unresolved",
                            "@value": "19",
                            "@c:identifier": "GI_INFO_TYPE_UNRESOLVED",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "girepository/gitypes.h",
                                "@line": "263",
                                "#text": "unresolved type, a type which is not present in\n  the typelib, or any of its dependencies."
                            }
                        }
                    ]
                },
                {
                    "@name": "RepositoryError",
                    "@c:type": "GIRepositoryError",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "girepository/girepository.h",
                        "@line": "202",
                        "#text": "An error code used with #G_IREPOSITORY_ERROR in a #GError returned\nfrom a #GIRepository routine."
                    },
                    "source-position": {
                        "@filename": "girepository/girepository.h",
                        "@line": "221"
                    },
                    "member": [
                        {
                            "@name": "typelib_not_found",
                            "@value": "0",
                            "@c:identifier": "G_IREPOSITORY_ERROR_TYPELIB_NOT_FOUND",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "girepository/girepository.h",
                                "@line": "204",
                                "#text": "the typelib could not be found."
                            }
                        },
                        {
                            "@name": "namespace_mismatch",
                            "@value": "1",
                            "@c:identifier": "G_IREPOSITORY_ERROR_NAMESPACE_MISMATCH",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "girepository/girepository.h",
                                "@line": "205",
                                "#text": "the namespace does not match the\n  requested namespace."
                            }
                        },
                        {
                            "@name": "namespace_version_conflict",
                            "@value": "2",
                            "@c:identifier": "G_IREPOSITORY_ERROR_NAMESPACE_VERSION_CONFLICT",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "girepository/girepository.h",
                                "@line": "207",
                                "#text": "the version of the\n  typelib does not match the requested version."
                            }
                        },
                        {
                            "@name": "library_not_found",
                            "@value": "3",
                            "@c:identifier": "G_IREPOSITORY_ERROR_LIBRARY_NOT_FOUND",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "girepository/girepository.h",
                                "@line": "209",
                                "#text": "the library used by the typelib\n  could not be found."
                            }
                        }
                    ]
                },
                {
                    "@name": "ScopeType",
                    "@c:type": "GIScopeType",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "girepository/gitypes.h",
                        "@line": "338",
                        "#text": "Scope type of a #GIArgInfo representing callback, determines how the\ncallback is invoked and is used to decided when the invoke structs\ncan be freed."
                    },
                    "source-position": {
                        "@filename": "girepository/gitypes.h",
                        "@line": "361"
                    },
                    "member": [
                        {
                            "@name": "invalid",
                            "@value": "0",
                            "@c:identifier": "GI_SCOPE_TYPE_INVALID",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "girepository/gitypes.h",
                                "@line": "340",
                                "#text": "The argument is not of callback type."
                            }
                        },
                        {
                            "@name": "call",
                            "@value": "1",
                            "@c:identifier": "GI_SCOPE_TYPE_CALL",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "girepository/gitypes.h",
                                "@line": "341",
                                "#text": "The callback and associated user_data is only\n  used during the call to this function."
                            }
                        },
                        {
                            "@name": "async",
                            "@value": "2",
                            "@c:identifier": "GI_SCOPE_TYPE_ASYNC",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "girepository/gitypes.h",
                                "@line": "343",
                                "#text": "The callback and associated user_data is\n  only used until the callback is invoked, and the callback.\n  is invoked always exactly once."
                            }
                        },
                        {
                            "@name": "notified",
                            "@value": "3",
                            "@c:identifier": "GI_SCOPE_TYPE_NOTIFIED",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "girepository/gitypes.h",
                                "@line": "346",
                                "#text": "The callback and associated\n  user_data is used until the caller is notfied via the destroy_notify."
                            }
                        },
                        {
                            "@name": "forever",
                            "@value": "4",
                            "@c:identifier": "GI_SCOPE_TYPE_FOREVER",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "girepository/gitypes.h",
                                "@line": "348",
                                "#text": "The callback and associated user_data is\n  used until the process terminates"
                            }
                        }
                    ]
                },
                {
                    "@name": "Transfer",
                    "@c:type": "GITransfer",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "girepository/gitypes.h",
                        "@line": "292",
                        "#text": "The transfer is the exchange of data between two parts, from the callee to\nthe caller. The callee is either a function/method/signal or an\nobject/interface where a property is defined. The caller is the side\naccessing a property or calling a function.\n#GITransfer specifies who's responsible for freeing the resources after the\nownership transfer is complete. In case of a containing type such as a list,\nan array or a hash table the container itself is specified differently from\nthe items within the container itself. Each container is freed differently,\ncheck the documentation for the types themselves for information on how to\nfree them."
                    },
                    "source-position": {
                        "@filename": "girepository/gitypes.h",
                        "@line": "322"
                    },
                    "member": [
                        {
                            "@name": "nothing",
                            "@value": "0",
                            "@c:identifier": "GI_TRANSFER_NOTHING",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "girepository/gitypes.h",
                                "@line": "294",
                                "#text": "transfer nothing from the callee (function or the type\ninstance the property belongs to) to the caller. The callee retains the\nownership of the transfer and the caller doesn't need to do anything to free\nup the resources of this transfer."
                            }
                        },
                        {
                            "@name": "container",
                            "@value": "1",
                            "@c:identifier": "GI_TRANSFER_CONTAINER",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "girepository/gitypes.h",
                                "@line": "298",
                                "#text": "transfer the container (list, array, hash table) from\nthe callee to the caller. The callee retains the ownership of the individual\nitems in the container and the caller has to free up the container resources\n(g_list_free()/g_hash_table_destroy() etc) of this transfer."
                            }
                        },
                        {
                            "@name": "everything",
                            "@value": "2",
                            "@c:identifier": "GI_TRANSFER_EVERYTHING",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "girepository/gitypes.h",
                                "@line": "302",
                                "#text": "transfer everything, eg the container and its\ncontents from the callee to the caller. This is the case when the callee\ncreates a copy of all the data it returns. The caller is responsible for\ncleaning up the container and item resources of this transfer."
                            }
                        }
                    ]
                },
                {
                    "@name": "TypeTag",
                    "@c:type": "GITypeTag",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "girepository/gitypes.h",
                        "@line": "363",
                        "#text": "The type tag of a #GITypeInfo."
                    },
                    "source-position": {
                        "@filename": "girepository/gitypes.h",
                        "@line": "418"
                    },
                    "member": [
                        {
                            "@name": "void",
                            "@value": "0",
                            "@c:identifier": "GI_TYPE_TAG_VOID",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "girepository/gitypes.h",
                                "@line": "365",
                                "#text": "void"
                            }
                        },
                        {
                            "@name": "boolean",
                            "@value": "1",
                            "@c:identifier": "GI_TYPE_TAG_BOOLEAN",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "girepository/gitypes.h",
                                "@line": "366",
                                "#text": "boolean"
                            }
                        },
                        {
                            "@name": "int8",
                            "@value": "2",
                            "@c:identifier": "GI_TYPE_TAG_INT8",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "girepository/gitypes.h",
                                "@line": "367",
                                "#text": "8-bit signed integer"
                            }
                        },
                        {
                            "@name": "uint8",
                            "@value": "3",
                            "@c:identifier": "GI_TYPE_TAG_UINT8",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "girepository/gitypes.h",
                                "@line": "368",
                                "#text": "8-bit unsigned integer"
                            }
                        },
                        {
                            "@name": "int16",
                            "@value": "4",
                            "@c:identifier": "GI_TYPE_TAG_INT16",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "girepository/gitypes.h",
                                "@line": "369",
                                "#text": "16-bit signed integer"
                            }
                        },
                        {
                            "@name": "uint16",
                            "@value": "5",
                            "@c:identifier": "GI_TYPE_TAG_UINT16",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "girepository/gitypes.h",
                                "@line": "370",
                                "#text": "16-bit unsigned integer"
                            }
                        },
                        {
                            "@name": "int32",
                            "@value": "6",
                            "@c:identifier": "GI_TYPE_TAG_INT32",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "girepository/gitypes.h",
                                "@line": "371",
                                "#text": "32-bit signed integer"
                            }
                        },
                        {
                            "@name": "uint32",
                            "@value": "7",
                            "@c:identifier": "GI_TYPE_TAG_UINT32",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "girepository/gitypes.h",
                                "@line": "372",
                                "#text": "32-bit unsigned integer"
                            }
                        },
                        {
                            "@name": "int64",
                            "@value": "8",
                            "@c:identifier": "GI_TYPE_TAG_INT64",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "girepository/gitypes.h",
                                "@line": "373",
                                "#text": "64-bit signed integer"
                            }
                        },
                        {
                            "@name": "uint64",
                            "@value": "9",
                            "@c:identifier": "GI_TYPE_TAG_UINT64",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "girepository/gitypes.h",
                                "@line": "374",
                                "#text": "64-bit unsigned integer"
                            }
                        },
                        {
                            "@name": "float",
                            "@value": "10",
                            "@c:identifier": "GI_TYPE_TAG_FLOAT",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "girepository/gitypes.h",
                                "@line": "375",
                                "#text": "float"
                            }
                        },
                        {
                            "@name": "double",
                            "@value": "11",
                            "@c:identifier": "GI_TYPE_TAG_DOUBLE",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "girepository/gitypes.h",
                                "@line": "376",
                                "#text": "double floating point"
                            }
                        },
                        {
                            "@name": "gtype",
                            "@value": "12",
                            "@c:identifier": "GI_TYPE_TAG_GTYPE",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "girepository/gitypes.h",
                                "@line": "377",
                                "#text": "a #GType"
                            }
                        },
                        {
                            "@name": "utf8",
                            "@value": "13",
                            "@c:identifier": "GI_TYPE_TAG_UTF8",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "girepository/gitypes.h",
                                "@line": "378",
                                "#text": "a UTF-8 encoded string"
                            }
                        },
                        {
                            "@name": "filename",
                            "@value": "14",
                            "@c:identifier": "GI_TYPE_TAG_FILENAME",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "girepository/gitypes.h",
                                "@line": "379",
                                "#text": "a filename, encoded in the same encoding\n  as the native filesystem is using."
                            }
                        },
                        {
                            "@name": "array",
                            "@value": "15",
                            "@c:identifier": "GI_TYPE_TAG_ARRAY",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "girepository/gitypes.h",
                                "@line": "381",
                                "#text": "an array"
                            }
                        },
                        {
                            "@name": "interface",
                            "@value": "16",
                            "@c:identifier": "GI_TYPE_TAG_INTERFACE",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "girepository/gitypes.h",
                                "@line": "382",
                                "#text": "an extended interface object"
                            }
                        },
                        {
                            "@name": "glist",
                            "@value": "17",
                            "@c:identifier": "GI_TYPE_TAG_GLIST",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "girepository/gitypes.h",
                                "@line": "383",
                                "#text": "a #GList"
                            }
                        },
                        {
                            "@name": "gslist",
                            "@value": "18",
                            "@c:identifier": "GI_TYPE_TAG_GSLIST",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "girepository/gitypes.h",
                                "@line": "384",
                                "#text": "a #GSList"
                            }
                        },
                        {
                            "@name": "ghash",
                            "@value": "19",
                            "@c:identifier": "GI_TYPE_TAG_GHASH",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "girepository/gitypes.h",
                                "@line": "385",
                                "#text": "a #GHashTable"
                            }
                        },
                        {
                            "@name": "error",
                            "@value": "20",
                            "@c:identifier": "GI_TYPE_TAG_ERROR",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "girepository/gitypes.h",
                                "@line": "386",
                                "#text": "a #GError"
                            }
                        },
                        {
                            "@name": "unichar",
                            "@value": "21",
                            "@c:identifier": "GI_TYPE_TAG_UNICHAR",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "girepository/gitypes.h",
                                "@line": "387",
                                "#text": "Unicode character"
                            }
                        }
                    ]
                },
                {
                    "@name": "nvokeError",
                    "@c:type": "GInvokeError",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "girepository/gifunctioninfo.h",
                        "@line": "66",
                        "#text": "An error occuring while invoking a function via\ng_function_info_invoke()."
                    },
                    "source-position": {
                        "@filename": "girepository/gifunctioninfo.h",
                        "@line": "83"
                    },
                    "member": [
                        {
                            "@name": "failed",
                            "@value": "0",
                            "@c:identifier": "G_INVOKE_ERROR_FAILED",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "girepository/gifunctioninfo.h",
                                "@line": "68",
                                "#text": "invokation failed, unknown error."
                            }
                        },
                        {
                            "@name": "symbol_not_found",
                            "@value": "1",
                            "@c:identifier": "G_INVOKE_ERROR_SYMBOL_NOT_FOUND",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "girepository/gifunctioninfo.h",
                                "@line": "69",
                                "#text": "symbol couldn't be found in any of the\nlibraries associated with the typelib of the function."
                            }
                        },
                        {
                            "@name": "argument_mismatch",
                            "@value": "2",
                            "@c:identifier": "G_INVOKE_ERROR_ARGUMENT_MISMATCH",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "girepository/gifunctioninfo.h",
                                "@line": "71",
                                "#text": "the arguments provided didn't match\nthe expected arguments for the functions type signature."
                            }
                        }
                    ]
                }
            ],
            "record": [
                {
                    "@name": "AttributeIter",
                    "@c:type": "GIAttributeIter",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "girepository/gibaseinfo.h",
                        "@line": "36",
                        "#text": "An opaque structure used to iterate over attributes\nin a #GIBaseInfo struct."
                    },
                    "source-position": {
                        "@filename": "girepository/gibaseinfo.h",
                        "@line": "48"
                    },
                    "field": [
                        {
                            "@name": "data",
                            "@readable": "0",
                            "@private": "1",
                            "type": {
                                "@name": "gpointer",
                                "@c:type": "gpointer"
                            }
                        },
                        {
                            "@name": "data2",
                            "@readable": "0",
                            "@private": "1",
                            "type": {
                                "@name": "gpointer",
                                "@c:type": "gpointer"
                            }
                        },
                        {
                            "@name": "data3",
                            "@readable": "0",
                            "@private": "1",
                            "type": {
                                "@name": "gpointer",
                                "@c:type": "gpointer"
                            }
                        },
                        {
                            "@name": "data4",
                            "@readable": "0",
                            "@private": "1",
                            "type": {
                                "@name": "gpointer",
                                "@c:type": "gpointer"
                            }
                        }
                    ]
                },
                {
                    "@name": "BaseInfo",
                    "@c:type": "GIBaseInfo",
                    "@glib:type-name": "GIBaseInfo",
                    "@glib:get-type": "g_base_info_gtype_get_type",
                    "@c:symbol-prefix": "base_info_gtype",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "girepository/gibaseinfo.c",
                        "@line": "183",
                        "#text": "GIBaseInfo is the common base struct of all other Info structs\naccessible through the #GIRepository API.\n\nAll info structures can be cast to a #GIBaseInfo, for instance:\n\n|[<!-- language=\"C\" -->\n   GIFunctionInfo *function_info = ...;\n   GIBaseInfo *info = (GIBaseInfo *) function_info;\n]|\n\nMost #GIRepository APIs returning a #GIBaseInfo is actually\ncreating a new struct; in other words, g_base_info_unref() has to\nbe called when done accessing the data.\n\n#GIBaseInfo structuress are normally accessed by calling either\ng_irepository_find_by_name(), g_irepository_find_by_gtype() or\ng_irepository_get_info().\n\n|[<!-- language=\"C\" -->\nGIBaseInfo *button_info =\n  g_irepository_find_by_name (NULL, \"Gtk\", \"Button\");\n\n// ... use button_info ...\n\ng_base_info_unref (button_info);\n]|\n\n## Hierarchy\n\n|[<!-- language=\"plain\" -->\n  GIBaseInfo\n   +---- GIArgInfo\n   +---- GICallableInfo\n   +---- GIConstantInfo\n   +---- GIFieldInfo\n   +---- GIPropertyInfo\n   +---- GIRegisteredTypeInfo\n   +---- GITypeInfo\n]|"
                    },
                    "source-position": {
                        "@filename": "girepository/gitypes.h",
                        "@line": "44"
                    },
                    "field": [
                        {
                            "@name": "dummy1",
                            "@readable": "0",
                            "@private": "1",
                            "type": {
                                "@name": "gint32",
                                "@c:type": "gint32"
                            }
                        },
                        {
                            "@name": "dummy2",
                            "@readable": "0",
                            "@private": "1",
                            "type": {
                                "@name": "gint32",
                                "@c:type": "gint32"
                            }
                        },
                        {
                            "@name": "dummy3",
                            "@readable": "0",
                            "@private": "1",
                            "type": {
                                "@name": "gpointer",
                                "@c:type": "gpointer"
                            }
                        },
                        {
                            "@name": "dummy4",
                            "@readable": "0",
                            "@private": "1",
                            "type": {
                                "@name": "gpointer",
                                "@c:type": "gpointer"
                            }
                        },
                        {
                            "@name": "dummy5",
                            "@readable": "0",
                            "@private": "1",
                            "type": {
                                "@name": "gpointer",
                                "@c:type": "gpointer"
                            }
                        },
                        {
                            "@name": "dummy6",
                            "@readable": "0",
                            "@private": "1",
                            "type": {
                                "@name": "guint32",
                                "@c:type": "guint32"
                            }
                        },
                        {
                            "@name": "dummy7",
                            "@readable": "0",
                            "@private": "1",
                            "type": {
                                "@name": "guint32",
                                "@c:type": "guint32"
                            }
                        },
                        {
                            "@name": "padding",
                            "@readable": "0",
                            "@private": "1",
                            "array": {
                                "@zero-terminated": "0",
                                "@fixed-size": "4",
                                "type": {
                                    "@name": "gpointer",
                                    "@c:type": "gpointer"
                                }
                            }
                        }
                    ],
                    "method": [
                        {
                            "@name": "equal",
                            "@c:identifier": "g_base_info_equal",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "girepository/gibaseinfo.c",
                                "@line": "652",
                                "#text": "Compare two #GIBaseInfo.\n\nUsing pointer comparison is not practical since many functions return\ndifferent instances of #GIBaseInfo that refers to the same part of the\nTypeLib; use this function instead to do #GIBaseInfo comparisons."
                            },
                            "source-position": {
                                "@filename": "girepository/gibaseinfo.h",
                                "@line": "91"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "girepository/gibaseinfo.c",
                                    "@line": "663",
                                    "#text": "%TRUE if and only if @info1 equals @info2."
                                },
                                "type": {
                                    "@name": "gboolean",
                                    "@c:type": "gboolean"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "info1",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "girepository/gibaseinfo.c",
                                        "@line": "654",
                                        "#text": "a #GIBaseInfo"
                                    },
                                    "type": {
                                        "@name": "BaseInfo",
                                        "@c:type": "GIBaseInfo*"
                                    }
                                },
                                "parameter": {
                                    "@name": "info2",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "girepository/gibaseinfo.c",
                                        "@line": "655",
                                        "#text": "a #GIBaseInfo"
                                    },
                                    "type": {
                                        "@name": "BaseInfo",
                                        "@c:type": "GIBaseInfo*"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "get_attribute",
                            "@c:identifier": "g_base_info_get_attribute",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "girepository/gibaseinfo.c",
                                "@line": "484",
                                "#text": "Retrieve an arbitrary attribute associated with this node."
                            },
                            "source-position": {
                                "@filename": "girepository/gibaseinfo.h",
                                "@line": "75"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "girepository/gibaseinfo.c",
                                    "@line": "491",
                                    "#text": "The value of the attribute, or %NULL if no such attribute exists"
                                },
                                "type": {
                                    "@name": "utf8",
                                    "@c:type": "const gchar*"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "info",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "girepository/gibaseinfo.c",
                                        "@line": "486",
                                        "#text": "a #GIBaseInfo"
                                    },
                                    "type": {
                                        "@name": "BaseInfo",
                                        "@c:type": "GIBaseInfo*"
                                    }
                                },
                                "parameter": {
                                    "@name": "name",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "girepository/gibaseinfo.c",
                                        "@line": "487",
                                        "#text": "a freeform string naming an attribute"
                                    },
                                    "type": {
                                        "@name": "utf8",
                                        "@c:type": "const gchar*"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "get_container",
                            "@c:identifier": "g_base_info_get_container",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "girepository/gibaseinfo.c",
                                "@line": "622",
                                "#text": "Obtain the container of the @info. The container is the parent\nGIBaseInfo. For instance, the parent of a #GIFunctionInfo is an\n#GIObjectInfo or #GIInterfaceInfo."
                            },
                            "source-position": {
                                "@filename": "girepository/gibaseinfo.h",
                                "@line": "85"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "girepository/gibaseinfo.c",
                                    "@line": "630",
                                    "#text": "the container"
                                },
                                "type": {
                                    "@name": "BaseInfo",
                                    "@c:type": "GIBaseInfo*"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "info",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "girepository/gibaseinfo.c",
                                        "@line": "624",
                                        "#text": "a #GIBaseInfo"
                                    },
                                    "type": {
                                        "@name": "BaseInfo",
                                        "@c:type": "GIBaseInfo*"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "get_name",
                            "@c:identifier": "g_base_info_get_name",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "girepository/gibaseinfo.c",
                                "@line": "292",
                                "#text": "Obtain the name of the @info. What the name represents depends on\nthe #GIInfoType of the @info. For instance for #GIFunctionInfo it is\nthe name of the function."
                            },
                            "source-position": {
                                "@filename": "girepository/gibaseinfo.h",
                                "@line": "66"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "girepository/gibaseinfo.c",
                                    "@line": "300",
                                    "#text": "the name of @info or %NULL if it lacks a name."
                                },
                                "type": {
                                    "@name": "utf8",
                                    "@c:type": "const gchar*"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "info",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "girepository/gibaseinfo.c",
                                        "@line": "294",
                                        "#text": "a #GIBaseInfo"
                                    },
                                    "type": {
                                        "@name": "BaseInfo",
                                        "@c:type": "GIBaseInfo*"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "get_namespace",
                            "@c:identifier": "g_base_info_get_namespace",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "girepository/gibaseinfo.c",
                                "@line": "391",
                                "#text": "Obtain the namespace of @info."
                            },
                            "source-position": {
                                "@filename": "girepository/gibaseinfo.h",
                                "@line": "69"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "girepository/gibaseinfo.c",
                                    "@line": "397",
                                    "#text": "the namespace"
                                },
                                "type": {
                                    "@name": "utf8",
                                    "@c:type": "const gchar*"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "info",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "girepository/gibaseinfo.c",
                                        "@line": "393",
                                        "#text": "a #GIBaseInfo"
                                    },
                                    "type": {
                                        "@name": "BaseInfo",
                                        "@c:type": "GIBaseInfo*"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "get_type",
                            "@c:identifier": "g_base_info_get_type",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "girepository/gibaseinfo.c",
                                "@line": "277",
                                "#text": "Obtain the info type of the GIBaseInfo."
                            },
                            "source-position": {
                                "@filename": "girepository/gibaseinfo.h",
                                "@line": "63"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "girepository/gibaseinfo.c",
                                    "@line": "283",
                                    "#text": "the info type of @info"
                                },
                                "type": {
                                    "@name": "InfoType",
                                    "@c:type": "GIInfoType"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "info",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "girepository/gibaseinfo.c",
                                        "@line": "279",
                                        "#text": "a #GIBaseInfo"
                                    },
                                    "type": {
                                        "@name": "BaseInfo",
                                        "@c:type": "GIBaseInfo*"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "get_typelib",
                            "@c:identifier": "g_base_info_get_typelib",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "girepository/gibaseinfo.c",
                                "@line": "638",
                                "#text": "Obtain the typelib this @info belongs to"
                            },
                            "source-position": {
                                "@filename": "girepository/gibaseinfo.h",
                                "@line": "88"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "girepository/gibaseinfo.c",
                                    "@line": "644",
                                    "#text": "the typelib."
                                },
                                "type": {
                                    "@name": "Typelib",
                                    "@c:type": "GITypelib*"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "info",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "girepository/gibaseinfo.c",
                                        "@line": "640",
                                        "#text": "a #GIBaseInfo"
                                    },
                                    "type": {
                                        "@name": "BaseInfo",
                                        "@c:type": "GIBaseInfo*"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "is_deprecated",
                            "@c:identifier": "g_base_info_is_deprecated",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "girepository/gibaseinfo.c",
                                "@line": "417",
                                "#text": "Obtain whether the @info is represents a metadata which is\ndeprecated or not."
                            },
                            "source-position": {
                                "@filename": "girepository/gibaseinfo.h",
                                "@line": "72"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "girepository/gibaseinfo.c",
                                    "@line": "424",
                                    "#text": "%TRUE if deprecated"
                                },
                                "type": {
                                    "@name": "gboolean",
                                    "@c:type": "gboolean"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "info",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "girepository/gibaseinfo.c",
                                        "@line": "419",
                                        "#text": "a #GIBaseInfo"
                                    },
                                    "type": {
                                        "@name": "BaseInfo",
                                        "@c:type": "GIBaseInfo*"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "iterate_attributes",
                            "@c:identifier": "g_base_info_iterate_attributes",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "girepository/gibaseinfo.c",
                                "@line": "561",
                                "#text": "Iterate over all attributes associated with this node.  The iterator\nstructure is typically stack allocated, and must have its first\nmember initialized to %NULL.  Attributes are arbitrary namespaced key\u2013value\npairs which can be attached to almost any item.  They are intended for use\nby software higher in the toolchain than bindings, and are distinct from\nnormal GIR annotations.\n\nBoth the @name and @value should be treated as constants\nand must not be freed.\n\n|[<!-- language=\"C\" -->\nvoid\nprint_attributes (GIBaseInfo *info)\n{\n  GIAttributeIter iter = { 0, };\n  char *name;\n  char *value;\n  while (g_base_info_iterate_attributes (info, &iter, &name, &value))\n    {\n      g_print (\"attribute name: %s value: %s\", name, value);\n    }\n}\n]|"
                            },
                            "source-position": {
                                "@filename": "girepository/gibaseinfo.h",
                                "@line": "79"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "girepository/gibaseinfo.c",
                                    "@line": "592",
                                    "#text": "%TRUE if there are more attributes"
                                },
                                "type": {
                                    "@name": "gboolean",
                                    "@c:type": "gboolean"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "info",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "girepository/gibaseinfo.c",
                                        "@line": "563",
                                        "#text": "a #GIBaseInfo"
                                    },
                                    "type": {
                                        "@name": "BaseInfo",
                                        "@c:type": "GIBaseInfo*"
                                    }
                                },
                                "parameter": [
                                    {
                                        "@name": "iterator",
                                        "@direction": "inout",
                                        "@caller-allocates": "0",
                                        "@transfer-ownership": "full",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "girepository/gibaseinfo.c",
                                            "@line": "564",
                                            "#text": "a #GIAttributeIter structure, must be initialized; see below"
                                        },
                                        "type": {
                                            "@name": "AttributeIter",
                                            "@c:type": "GIAttributeIter*"
                                        }
                                    },
                                    {
                                        "@name": "name",
                                        "@direction": "out",
                                        "@caller-allocates": "0",
                                        "@transfer-ownership": "none",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "girepository/gibaseinfo.c",
                                            "@line": "565",
                                            "#text": "Returned name, must not be freed"
                                        },
                                        "type": {
                                            "@name": "utf8",
                                            "@c:type": "char**"
                                        }
                                    },
                                    {
                                        "@name": "value",
                                        "@direction": "out",
                                        "@caller-allocates": "0",
                                        "@transfer-ownership": "none",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "girepository/gibaseinfo.c",
                                            "@line": "566",
                                            "#text": "Returned name, must not be freed"
                                        },
                                        "type": {
                                            "@name": "utf8",
                                            "@c:type": "char**"
                                        }
                                    }
                                ]
                            }
                        },
                        {
                            "@name": "ref",
                            "@c:identifier": "g_base_info_ref",
                            "@introspectable": "0",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "girepository/gibaseinfo.c",
                                "@line": "229",
                                "#text": "Increases the reference count of @info."
                            },
                            "source-position": {
                                "@filename": "girepository/gibaseinfo.h",
                                "@line": "57"
                            },
                            "return-value": {
                                "@transfer-ownership": "full",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "girepository/gibaseinfo.c",
                                    "@line": "235",
                                    "#text": "the same @info."
                                },
                                "type": {
                                    "@name": "BaseInfo",
                                    "@c:type": "GIBaseInfo*"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "info",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "girepository/gibaseinfo.c",
                                        "@line": "231",
                                        "#text": "a #GIBaseInfo"
                                    },
                                    "type": {
                                        "@name": "BaseInfo",
                                        "@c:type": "GIBaseInfo*"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "unref",
                            "@c:identifier": "g_base_info_unref",
                            "@introspectable": "0",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "girepository/gibaseinfo.c",
                                "@line": "248",
                                "#text": "Decreases the reference count of @info. When its reference count\ndrops to 0, the info is freed."
                            },
                            "source-position": {
                                "@filename": "girepository/gibaseinfo.h",
                                "@line": "60"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "type": {
                                    "@name": "none",
                                    "@c:type": "void"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "info",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "girepository/gibaseinfo.c",
                                        "@line": "250",
                                        "#text": "a #GIBaseInfo"
                                    },
                                    "type": {
                                        "@name": "BaseInfo",
                                        "@c:type": "GIBaseInfo*"
                                    }
                                }
                            }
                        }
                    ]
                },
                {
                    "@name": "RepositoryClass",
                    "@c:type": "GIRepositoryClass",
                    "@glib:is-gtype-struct-for": "Repository",
                    "source-position": {
                        "@filename": "girepository/girepository.h",
                        "@line": "82"
                    },
                    "field": {
                        "@name": "parent",
                        "@readable": "0",
                        "@private": "1",
                        "type": {
                            "@name": "GObject.ObjectClass",
                            "@c:type": "GObjectClass"
                        }
                    }
                },
                {
                    "@name": "RepositoryPrivate",
                    "@c:type": "GIRepositoryPrivate",
                    "@disguised": "1",
                    "source-position": {
                        "@filename": "girepository/girepository.h",
                        "@line": "69"
                    }
                },
                {
                    "@name": "Typelib",
                    "@c:type": "GITypelib",
                    "@disguised": "1",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "girepository/gitypelib.h",
                        "@line": "36",
                        "#text": "TODO"
                    },
                    "source-position": {
                        "@filename": "girepository/gitypelib.h",
                        "@line": "49"
                    },
                    "method": [
                        {
                            "@name": "free",
                            "@c:identifier": "g_typelib_free",
                            "source-position": {
                                "@filename": "girepository/gitypelib.h",
                                "@line": "66"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "type": {
                                    "@name": "none",
                                    "@c:type": "void"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "typelib",
                                    "@transfer-ownership": "none",
                                    "type": {
                                        "@name": "Typelib",
                                        "@c:type": "GITypelib*"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "get_namespace",
                            "@c:identifier": "g_typelib_get_namespace",
                            "source-position": {
                                "@filename": "girepository/gitypelib.h",
                                "@line": "74"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "type": {
                                    "@name": "utf8",
                                    "@c:type": "const gchar*"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "typelib",
                                    "@transfer-ownership": "none",
                                    "type": {
                                        "@name": "Typelib",
                                        "@c:type": "GITypelib*"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "symbol",
                            "@c:identifier": "g_typelib_symbol",
                            "source-position": {
                                "@filename": "girepository/gitypelib.h",
                                "@line": "69"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "type": {
                                    "@name": "gboolean",
                                    "@c:type": "gboolean"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "typelib",
                                    "@transfer-ownership": "none",
                                    "type": {
                                        "@name": "Typelib",
                                        "@c:type": "GITypelib*"
                                    }
                                },
                                "parameter": [
                                    {
                                        "@name": "symbol_name",
                                        "@transfer-ownership": "none",
                                        "type": {
                                            "@name": "utf8",
                                            "@c:type": "const gchar*"
                                        }
                                    },
                                    {
                                        "@name": "symbol",
                                        "@transfer-ownership": "none",
                                        "@nullable": "1",
                                        "@allow-none": "1",
                                        "type": {
                                            "@name": "gpointer",
                                            "@c:type": "gpointer*"
                                        }
                                    }
                                ]
                            }
                        }
                    ],
                    "function": [
                        {
                            "@name": "new_from_const_memory",
                            "@c:identifier": "g_typelib_new_from_const_memory",
                            "@introspectable": "0",
                            "@throws": "1",
                            "source-position": {
                                "@filename": "girepository/gitypelib.h",
                                "@line": "57"
                            },
                            "return-value": {
                                "type": {
                                    "@name": "Typelib",
                                    "@c:type": "GITypelib*"
                                }
                            },
                            "parameters": {
                                "parameter": [
                                    {
                                        "@name": "memory",
                                        "@transfer-ownership": "none",
                                        "type": {
                                            "@name": "guint8",
                                            "@c:type": "const guint8*"
                                        }
                                    },
                                    {
                                        "@name": "len",
                                        "@transfer-ownership": "none",
                                        "type": {
                                            "@name": "gsize",
                                            "@c:type": "gsize"
                                        }
                                    }
                                ]
                            }
                        },
                        {
                            "@name": "new_from_mapped_file",
                            "@c:identifier": "g_typelib_new_from_mapped_file",
                            "@introspectable": "0",
                            "@throws": "1",
                            "source-position": {
                                "@filename": "girepository/gitypelib.h",
                                "@line": "62"
                            },
                            "return-value": {
                                "type": {
                                    "@name": "Typelib",
                                    "@c:type": "GITypelib*"
                                }
                            },
                            "parameters": {
                                "parameter": {
                                    "@name": "mfile",
                                    "@transfer-ownership": "none",
                                    "type": {
                                        "@name": "GLib.MappedFile",
                                        "@c:type": "GMappedFile*"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "new_from_memory",
                            "@c:identifier": "g_typelib_new_from_memory",
                            "@introspectable": "0",
                            "@throws": "1",
                            "source-position": {
                                "@filename": "girepository/gitypelib.h",
                                "@line": "52"
                            },
                            "return-value": {
                                "type": {
                                    "@name": "Typelib",
                                    "@c:type": "GITypelib*"
                                }
                            },
                            "parameters": {
                                "parameter": [
                                    {
                                        "@name": "memory",
                                        "@transfer-ownership": "none",
                                        "type": {
                                            "@name": "guint8",
                                            "@c:type": "guint8*"
                                        }
                                    },
                                    {
                                        "@name": "len",
                                        "@transfer-ownership": "none",
                                        "type": {
                                            "@name": "gsize",
                                            "@c:type": "gsize"
                                        }
                                    }
                                ]
                            }
                        }
                    ]
                },
                {
                    "@name": "UnresolvedInfo",
                    "@c:type": "GIUnresolvedInfo",
                    "@disguised": "1",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "girepository/gitypes.h",
                        "@line": "182",
                        "#text": "Represents a unresolved type in a typelib."
                    },
                    "source-position": {
                        "@filename": "girepository/gitypes.h",
                        "@line": "187"
                    }
                }
            ],
            "function-macro": [
                {
                    "@name": "CHECK_VERSION",
                    "@c:identifier": "GI_CHECK_VERSION",
                    "@version": "1.60",
                    "@introspectable": "0",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "girepository/giversion.c",
                        "@line": "53",
                        "#text": "Checks the version of the girepository library that is being compiled\nagainst."
                    },
                    "source-position": {
                        "@filename": "redhat-linux-build/girepository/giversion.h",
                        "@line": "32"
                    },
                    "parameters": {
                        "parameter": [
                            {
                                "@name": "major",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "girepository/giversion.c",
                                    "@line": "55",
                                    "#text": "the major version to check for"
                                }
                            },
                            {
                                "@name": "minor",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "girepository/giversion.c",
                                    "@line": "56",
                                    "#text": "the minor version to check for"
                                }
                            },
                            {
                                "@name": "micro",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "girepository/giversion.c",
                                    "@line": "57",
                                    "#text": "the micro version to check for"
                                }
                            }
                        ]
                    }
                },
                {
                    "@name": "IREPOSITORY",
                    "@c:identifier": "G_IREPOSITORY",
                    "@introspectable": "0",
                    "source-position": {
                        "@filename": "girepository/girepository.h",
                        "@line": "55"
                    },
                    "parameters": {
                        "parameter": {
                            "@name": "object"
                        }
                    }
                },
                {
                    "@name": "IREPOSITORY_CLASS",
                    "@c:identifier": "G_IREPOSITORY_CLASS",
                    "@introspectable": "0",
                    "source-position": {
                        "@filename": "girepository/girepository.h",
                        "@line": "56"
                    },
                    "parameters": {
                        "parameter": {
                            "@name": "klass"
                        }
                    }
                },
                {
                    "@name": "IREPOSITORY_GET_CLASS",
                    "@c:identifier": "G_IREPOSITORY_GET_CLASS",
                    "@introspectable": "0",
                    "source-position": {
                        "@filename": "girepository/girepository.h",
                        "@line": "59"
                    },
                    "parameters": {
                        "parameter": {
                            "@name": "obj"
                        }
                    }
                },
                {
                    "@name": "IS_ARG_INFO",
                    "@c:identifier": "GI_IS_ARG_INFO",
                    "@introspectable": "0",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "girepository/giarginfo.h",
                        "@line": "34",
                        "#text": "Checks if @info is a GIArgInfo."
                    },
                    "source-position": {
                        "@filename": "girepository/giarginfo.h",
                        "@line": "40"
                    },
                    "parameters": {
                        "parameter": {
                            "@name": "info",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "girepository/giarginfo.h",
                                "@line": "36",
                                "#text": "an info structure"
                            }
                        }
                    }
                },
                {
                    "@name": "IS_CALLABLE_INFO",
                    "@c:identifier": "GI_IS_CALLABLE_INFO",
                    "@introspectable": "0",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "girepository/gicallableinfo.h",
                        "@line": "34",
                        "#text": "Checks if @info is a #GICallableInfo or derived from it."
                    },
                    "source-position": {
                        "@filename": "girepository/gicallableinfo.h",
                        "@line": "40"
                    },
                    "parameters": {
                        "parameter": {
                            "@name": "info",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "girepository/gicallableinfo.h",
                                "@line": "36",
                                "#text": "an info structure"
                            }
                        }
                    }
                },
                {
                    "@name": "IS_CONSTANT_INFO",
                    "@c:identifier": "GI_IS_CONSTANT_INFO",
                    "@introspectable": "0",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "girepository/giconstantinfo.h",
                        "@line": "34",
                        "#text": "Checks if @info is a #GIConstantInfo."
                    },
                    "source-position": {
                        "@filename": "girepository/giconstantinfo.h",
                        "@line": "40"
                    },
                    "parameters": {
                        "parameter": {
                            "@name": "info",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "girepository/giconstantinfo.h",
                                "@line": "36",
                                "#text": "an info structure"
                            }
                        }
                    }
                },
                {
                    "@name": "IS_ENUM_INFO",
                    "@c:identifier": "GI_IS_ENUM_INFO",
                    "@introspectable": "0",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "girepository/gienuminfo.h",
                        "@line": "34",
                        "#text": "Checks if @info is a #GIEnumInfo."
                    },
                    "source-position": {
                        "@filename": "girepository/gienuminfo.h",
                        "@line": "40"
                    },
                    "parameters": {
                        "parameter": {
                            "@name": "info",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "girepository/gienuminfo.h",
                                "@line": "36",
                                "#text": "an info structure"
                            }
                        }
                    }
                },
                {
                    "@name": "IS_FIELD_INFO",
                    "@c:identifier": "GI_IS_FIELD_INFO",
                    "@introspectable": "0",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "girepository/gifieldinfo.h",
                        "@line": "34",
                        "#text": "Checks if @info is a #GIFieldInfo."
                    },
                    "source-position": {
                        "@filename": "girepository/gifieldinfo.h",
                        "@line": "41"
                    },
                    "parameters": {
                        "parameter": {
                            "@name": "info",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "girepository/gifieldinfo.h",
                                "@line": "36",
                                "#text": "an info structure"
                            }
                        }
                    }
                },
                {
                    "@name": "IS_FUNCTION_INFO",
                    "@c:identifier": "GI_IS_FUNCTION_INFO",
                    "@introspectable": "0",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "girepository/gifunctioninfo.h",
                        "@line": "34",
                        "#text": "Checks if @info is a #GIFunctionInfo."
                    },
                    "source-position": {
                        "@filename": "girepository/gifunctioninfo.h",
                        "@line": "40"
                    },
                    "parameters": {
                        "parameter": {
                            "@name": "info",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "girepository/gifunctioninfo.h",
                                "@line": "36",
                                "#text": "an info structure"
                            }
                        }
                    }
                },
                {
                    "@name": "IS_INTERFACE_INFO",
                    "@c:identifier": "GI_IS_INTERFACE_INFO",
                    "@introspectable": "0",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "girepository/giinterfaceinfo.h",
                        "@line": "34",
                        "#text": "Checks if @info is a #GIInterfaceInfo."
                    },
                    "source-position": {
                        "@filename": "girepository/giinterfaceinfo.h",
                        "@line": "40"
                    },
                    "parameters": {
                        "parameter": {
                            "@name": "info",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "girepository/giinterfaceinfo.h",
                                "@line": "36",
                                "#text": "an info structure"
                            }
                        }
                    }
                },
                {
                    "@name": "IS_IREPOSITORY",
                    "@c:identifier": "G_IS_IREPOSITORY",
                    "@introspectable": "0",
                    "source-position": {
                        "@filename": "girepository/girepository.h",
                        "@line": "57"
                    },
                    "parameters": {
                        "parameter": {
                            "@name": "object"
                        }
                    }
                },
                {
                    "@name": "IS_IREPOSITORY_CLASS",
                    "@c:identifier": "G_IS_IREPOSITORY_CLASS",
                    "@introspectable": "0",
                    "source-position": {
                        "@filename": "girepository/girepository.h",
                        "@line": "58"
                    },
                    "parameters": {
                        "parameter": {
                            "@name": "klass"
                        }
                    }
                },
                {
                    "@name": "IS_OBJECT_INFO",
                    "@c:identifier": "GI_IS_OBJECT_INFO",
                    "@introspectable": "0",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "girepository/giobjectinfo.h",
                        "@line": "71",
                        "#text": "Checks if @info is a #GIObjectInfo."
                    },
                    "source-position": {
                        "@filename": "girepository/giobjectinfo.h",
                        "@line": "77"
                    },
                    "parameters": {
                        "parameter": {
                            "@name": "info",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "girepository/giobjectinfo.h",
                                "@line": "73",
                                "#text": "an info structure"
                            }
                        }
                    }
                },
                {
                    "@name": "IS_PROPERTY_INFO",
                    "@c:identifier": "GI_IS_PROPERTY_INFO",
                    "@introspectable": "0",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "girepository/gipropertyinfo.h",
                        "@line": "34",
                        "#text": "Checks if @info is a #GIPropertyInfo."
                    },
                    "source-position": {
                        "@filename": "girepository/gipropertyinfo.h",
                        "@line": "40"
                    },
                    "parameters": {
                        "parameter": {
                            "@name": "info",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "girepository/gipropertyinfo.h",
                                "@line": "36",
                                "#text": "an info structure"
                            }
                        }
                    }
                },
                {
                    "@name": "IS_REGISTERED_TYPE_INFO",
                    "@c:identifier": "GI_IS_REGISTERED_TYPE_INFO",
                    "@introspectable": "0",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "girepository/giregisteredtypeinfo.h",
                        "@line": "35",
                        "#text": "Checks if @info is a #GIRegisteredTypeInfo or derived from it."
                    },
                    "source-position": {
                        "@filename": "girepository/giregisteredtypeinfo.h",
                        "@line": "41"
                    },
                    "parameters": {
                        "parameter": {
                            "@name": "info",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "girepository/giregisteredtypeinfo.h",
                                "@line": "37",
                                "#text": "an info structure"
                            }
                        }
                    }
                },
                {
                    "@name": "IS_SIGNAL_INFO",
                    "@c:identifier": "GI_IS_SIGNAL_INFO",
                    "@introspectable": "0",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "girepository/gisignalinfo.h",
                        "@line": "35",
                        "#text": "Checks if @info is a #GISignalInfo."
                    },
                    "source-position": {
                        "@filename": "girepository/gisignalinfo.h",
                        "@line": "41"
                    },
                    "parameters": {
                        "parameter": {
                            "@name": "info",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "girepository/gisignalinfo.h",
                                "@line": "37",
                                "#text": "an info structure"
                            }
                        }
                    }
                },
                {
                    "@name": "IS_STRUCT_INFO",
                    "@c:identifier": "GI_IS_STRUCT_INFO",
                    "@introspectable": "0",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "girepository/gistructinfo.h",
                        "@line": "34",
                        "#text": "Checks if @info is a #GIStructInfo."
                    },
                    "source-position": {
                        "@filename": "girepository/gistructinfo.h",
                        "@line": "40"
                    },
                    "parameters": {
                        "parameter": {
                            "@name": "info",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "girepository/gistructinfo.h",
                                "@line": "36",
                                "#text": "an info structure"
                            }
                        }
                    }
                },
                {
                    "@name": "IS_TYPE_INFO",
                    "@c:identifier": "GI_IS_TYPE_INFO",
                    "@introspectable": "0",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "girepository/gitypeinfo.h",
                        "@line": "34",
                        "#text": "Checks if @info is a #GITypeInfo."
                    },
                    "source-position": {
                        "@filename": "girepository/gitypeinfo.h",
                        "@line": "40"
                    },
                    "parameters": {
                        "parameter": {
                            "@name": "info",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "girepository/gitypeinfo.h",
                                "@line": "36",
                                "#text": "an info structure"
                            }
                        }
                    }
                },
                {
                    "@name": "IS_UNION_INFO",
                    "@c:identifier": "GI_IS_UNION_INFO",
                    "@introspectable": "0",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "girepository/giunioninfo.h",
                        "@line": "34",
                        "#text": "Checks if @info is a #GIUnionInfo."
                    },
                    "source-position": {
                        "@filename": "girepository/giunioninfo.h",
                        "@line": "40"
                    },
                    "parameters": {
                        "parameter": {
                            "@name": "info",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "girepository/giunioninfo.h",
                                "@line": "36",
                                "#text": "an info structure"
                            }
                        }
                    }
                },
                {
                    "@name": "IS_VALUE_INFO",
                    "@c:identifier": "GI_IS_VALUE_INFO",
                    "@introspectable": "0",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "girepository/gienuminfo.h",
                        "@line": "44",
                        "#text": "Checks if @info is a #GIValueInfo."
                    },
                    "source-position": {
                        "@filename": "girepository/gienuminfo.h",
                        "@line": "50"
                    },
                    "parameters": {
                        "parameter": {
                            "@name": "info",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "girepository/gienuminfo.h",
                                "@line": "46",
                                "#text": "an info structure"
                            }
                        }
                    }
                },
                {
                    "@name": "IS_VFUNC_INFO",
                    "@c:identifier": "GI_IS_VFUNC_INFO",
                    "@introspectable": "0",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "girepository/givfuncinfo.h",
                        "@line": "34",
                        "#text": "Checks if @info is a #GIVfuncInfo."
                    },
                    "source-position": {
                        "@filename": "girepository/givfuncinfo.h",
                        "@line": "40"
                    },
                    "parameters": {
                        "parameter": {
                            "@name": "info",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "girepository/givfuncinfo.h",
                                "@line": "36",
                                "#text": "an info structure"
                            }
                        }
                    }
                },
                {
                    "@name": "TYPE_TAG_IS_BASIC",
                    "@c:identifier": "G_TYPE_TAG_IS_BASIC",
                    "@introspectable": "0",
                    "@deprecated": "1",
                    "@deprecated-version": "1.72",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "girepository/gitypeinfo.h",
                        "@line": "43",
                        "#text": "Checks if @tag is a basic type."
                    },
                    "doc-deprecated": {
                        "@xml:space": "preserve",
                        "#text": "Use GI_TYPE_TAG_IS_BASIC() instead"
                    },
                    "source-position": {
                        "@filename": "girepository/gitypeinfo.h",
                        "@line": "51"
                    },
                    "parameters": {
                        "parameter": {
                            "@name": "tag",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "girepository/gitypeinfo.h",
                                "@line": "45",
                                "#text": "a type tag"
                            }
                        }
                    }
                },
                {
                    "@name": "TYPE_TAG_IS_CONTAINER",
                    "@c:identifier": "GI_TYPE_TAG_IS_CONTAINER",
                    "@version": "1.72",
                    "@introspectable": "0",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "girepository/gitypeinfo.h",
                        "@line": "93",
                        "#text": "Checks if @tag is a container type. That is, a type which may have a nonnull\nreturn from g_type_info_get_param_type()."
                    },
                    "source-position": {
                        "@filename": "girepository/gitypeinfo.h",
                        "@line": "102"
                    },
                    "parameters": {
                        "parameter": {
                            "@name": "tag",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "girepository/gitypeinfo.h",
                                "@line": "95",
                                "#text": "a type tag"
                            }
                        }
                    }
                },
                {
                    "@name": "TYPE_TAG_IS_NUMERIC",
                    "@c:identifier": "GI_TYPE_TAG_IS_NUMERIC",
                    "@version": "1.72",
                    "@introspectable": "0",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "girepository/gitypeinfo.h",
                        "@line": "83",
                        "#text": "Checks if @tag is a numeric type. That is, integer or floating point."
                    },
                    "source-position": {
                        "@filename": "girepository/gitypeinfo.h",
                        "@line": "71"
                    },
                    "parameters": {
                        "parameter": {
                            "@name": "tag",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "girepository/gitypeinfo.h",
                                "@line": "85",
                                "#text": "a type tag"
                            }
                        }
                    }
                }
            ],
            "bitfield": [
                {
                    "@name": "FieldInfoFlags",
                    "@c:type": "GIFieldInfoFlags",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "girepository/gitypes.h",
                        "@line": "453",
                        "#text": "Flags for a #GIFieldInfo."
                    },
                    "source-position": {
                        "@filename": "girepository/gitypes.h",
                        "@line": "465"
                    },
                    "member": [
                        {
                            "@name": "readable",
                            "@value": "1",
                            "@c:identifier": "GI_FIELD_IS_READABLE",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "girepository/gitypes.h",
                                "@line": "455",
                                "#text": "field is readable."
                            }
                        },
                        {
                            "@name": "writable",
                            "@value": "2",
                            "@c:identifier": "GI_FIELD_IS_WRITABLE",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "girepository/gitypes.h",
                                "@line": "456",
                                "#text": "field is writable."
                            }
                        }
                    ]
                },
                {
                    "@name": "FunctionInfoFlags",
                    "@c:type": "GIFunctionInfoFlags",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "girepository/gitypes.h",
                        "@line": "484",
                        "#text": "Flags for a #GIFunctionInfo struct."
                    },
                    "source-position": {
                        "@filename": "girepository/gitypes.h",
                        "@line": "503"
                    },
                    "member": [
                        {
                            "@name": "is_method",
                            "@value": "1",
                            "@c:identifier": "GI_FUNCTION_IS_METHOD",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "girepository/gitypes.h",
                                "@line": "486",
                                "#text": "is a method."
                            }
                        },
                        {
                            "@name": "is_constructor",
                            "@value": "2",
                            "@c:identifier": "GI_FUNCTION_IS_CONSTRUCTOR",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "girepository/gitypes.h",
                                "@line": "487",
                                "#text": "is a constructor."
                            }
                        },
                        {
                            "@name": "is_getter",
                            "@value": "4",
                            "@c:identifier": "GI_FUNCTION_IS_GETTER",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "girepository/gitypes.h",
                                "@line": "488",
                                "#text": "is a getter of a #GIPropertyInfo."
                            }
                        },
                        {
                            "@name": "is_setter",
                            "@value": "8",
                            "@c:identifier": "GI_FUNCTION_IS_SETTER",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "girepository/gitypes.h",
                                "@line": "489",
                                "#text": "is a setter of a #GIPropertyInfo."
                            }
                        },
                        {
                            "@name": "wraps_vfunc",
                            "@value": "16",
                            "@c:identifier": "GI_FUNCTION_WRAPS_VFUNC",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "girepository/gitypes.h",
                                "@line": "490",
                                "#text": "represents a virtual function."
                            }
                        },
                        {
                            "@name": "throws",
                            "@value": "32",
                            "@c:identifier": "GI_FUNCTION_THROWS",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "girepository/gitypes.h",
                                "@line": "491",
                                "#text": "the function may throw an error."
                            }
                        }
                    ]
                },
                {
                    "@name": "RepositoryLoadFlags",
                    "@c:type": "GIRepositoryLoadFlags",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "girepository/girepository.h",
                        "@line": "84",
                        "#text": "Flags that control how a typelib is loaded."
                    },
                    "source-position": {
                        "@filename": "girepository/girepository.h",
                        "@line": "93"
                    },
                    "member": {
                        "@name": "irepository_load_flag_lazy",
                        "@value": "1",
                        "@c:identifier": "G_IREPOSITORY_LOAD_FLAG_LAZY",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "girepository/girepository.h",
                            "@line": "86",
                            "#text": "Lazily load the typelib."
                        }
                    }
                },
                {
                    "@name": "VFuncInfoFlags",
                    "@c:type": "GIVFuncInfoFlags",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "girepository/gitypes.h",
                        "@line": "467",
                        "#text": "Flags of a #GIVFuncInfo struct."
                    },
                    "source-position": {
                        "@filename": "girepository/gitypes.h",
                        "@line": "482"
                    },
                    "member": [
                        {
                            "@name": "must_chain_up",
                            "@value": "1",
                            "@c:identifier": "GI_VFUNC_MUST_CHAIN_UP",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "girepository/gitypes.h",
                                "@line": "469",
                                "#text": "chains up to the parent type"
                            }
                        },
                        {
                            "@name": "must_override",
                            "@value": "2",
                            "@c:identifier": "GI_VFUNC_MUST_OVERRIDE",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "girepository/gitypes.h",
                                "@line": "470",
                                "#text": "overrides"
                            }
                        },
                        {
                            "@name": "must_not_override",
                            "@value": "4",
                            "@c:identifier": "GI_VFUNC_MUST_NOT_OVERRIDE",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "girepository/gitypes.h",
                                "@line": "471",
                                "#text": "does not override"
                            }
                        },
                        {
                            "@name": "throws",
                            "@value": "8",
                            "@c:identifier": "GI_VFUNC_THROWS",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "girepository/gitypes.h",
                                "@line": "472",
                                "#text": "Includes a #GError"
                            }
                        }
                    ]
                }
            ],
            "constant": [
                {
                    "@name": "MAJOR_VERSION",
                    "@value": "1",
                    "@c:type": "GI_MAJOR_VERSION",
                    "@version": "1.60",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "girepository/giversion.c",
                        "@line": "29",
                        "#text": "The major version number of the girepository library."
                    },
                    "source-position": {
                        "@filename": "redhat-linux-build/girepository/giversion.h",
                        "@line": "28"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "MICRO_VERSION",
                    "@value": "0",
                    "@c:type": "GI_MICRO_VERSION",
                    "@version": "1.60",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "girepository/giversion.c",
                        "@line": "45",
                        "#text": "The micro version number of the girepository library."
                    },
                    "source-position": {
                        "@filename": "redhat-linux-build/girepository/giversion.h",
                        "@line": "30"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "MINOR_VERSION",
                    "@value": "74",
                    "@c:type": "GI_MINOR_VERSION",
                    "@version": "1.60",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "girepository/giversion.c",
                        "@line": "37",
                        "#text": "The minor version number of the girepository library."
                    },
                    "source-position": {
                        "@filename": "redhat-linux-build/girepository/giversion.h",
                        "@line": "29"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "TYPE_TAG_N_TYPES",
                    "@value": "22",
                    "@c:type": "GI_TYPE_TAG_N_TYPES",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "girepository/gitypes.h",
                        "@line": "420",
                        "#text": "TODO"
                    },
                    "source-position": {
                        "@filename": "girepository/gitypes.h",
                        "@line": "425"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                }
            ],
            "callback": [
                {
                    "@name": "ObjectInfoGetValueFunction",
                    "@c:type": "GIObjectInfoGetValueFunction",
                    "@introspectable": "0",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "girepository/giobjectinfo.h",
                        "@line": "61",
                        "#text": "Extract an object instance out of @value"
                    },
                    "source-position": {
                        "@filename": "girepository/giobjectinfo.h",
                        "@line": "69"
                    },
                    "return-value": {
                        "@transfer-ownership": "full",
                        "@nullable": "1",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "girepository/giobjectinfo.h",
                            "@line": "67",
                            "#text": "the object instance"
                        },
                        "type": {
                            "@name": "gpointer",
                            "@c:type": "void*"
                        }
                    },
                    "parameters": {
                        "parameter": {
                            "@name": "value",
                            "@transfer-ownership": "none",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "girepository/giobjectinfo.h",
                                "@line": "63",
                                "#text": "a #GValue"
                            },
                            "type": {
                                "@name": "GObject.Value",
                                "@c:type": "const GValue*"
                            }
                        }
                    }
                },
                {
                    "@name": "ObjectInfoRefFunction",
                    "@c:type": "GIObjectInfoRefFunction",
                    "@introspectable": "0",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "girepository/giobjectinfo.h",
                        "@line": "34",
                        "#text": "Increases the reference count of an object instance."
                    },
                    "source-position": {
                        "@filename": "girepository/giobjectinfo.h",
                        "@line": "42"
                    },
                    "return-value": {
                        "@transfer-ownership": "full",
                        "@nullable": "1",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "girepository/giobjectinfo.h",
                            "@line": "40",
                            "#text": "the object instance"
                        },
                        "type": {
                            "@name": "gpointer",
                            "@c:type": "void*"
                        }
                    },
                    "parameters": {
                        "parameter": {
                            "@name": "object",
                            "@transfer-ownership": "none",
                            "@nullable": "1",
                            "@allow-none": "1",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "girepository/giobjectinfo.h",
                                "@line": "36",
                                "#text": "object instance pointer"
                            },
                            "type": {
                                "@name": "gpointer",
                                "@c:type": "void*"
                            }
                        }
                    }
                },
                {
                    "@name": "ObjectInfoSetValueFunction",
                    "@c:type": "GIObjectInfoSetValueFunction",
                    "@introspectable": "0",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "girepository/giobjectinfo.h",
                        "@line": "52",
                        "#text": "Update @value and attach the object instance pointer @object to it."
                    },
                    "source-position": {
                        "@filename": "girepository/giobjectinfo.h",
                        "@line": "59"
                    },
                    "return-value": {
                        "@transfer-ownership": "none",
                        "type": {
                            "@name": "none",
                            "@c:type": "void"
                        }
                    },
                    "parameters": {
                        "parameter": [
                            {
                                "@name": "value",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "girepository/giobjectinfo.h",
                                    "@line": "54",
                                    "#text": "a #GValue"
                                },
                                "type": {
                                    "@name": "GObject.Value",
                                    "@c:type": "GValue*"
                                }
                            },
                            {
                                "@name": "object",
                                "@transfer-ownership": "none",
                                "@nullable": "1",
                                "@allow-none": "1",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "girepository/giobjectinfo.h",
                                    "@line": "55",
                                    "#text": "object instance pointer"
                                },
                                "type": {
                                    "@name": "gpointer",
                                    "@c:type": "void*"
                                }
                            }
                        ]
                    }
                },
                {
                    "@name": "ObjectInfoUnrefFunction",
                    "@c:type": "GIObjectInfoUnrefFunction",
                    "@introspectable": "0",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "girepository/giobjectinfo.h",
                        "@line": "44",
                        "#text": "Decreases the reference count of an object instance."
                    },
                    "source-position": {
                        "@filename": "girepository/giobjectinfo.h",
                        "@line": "50"
                    },
                    "return-value": {
                        "@transfer-ownership": "none",
                        "type": {
                            "@name": "none",
                            "@c:type": "void"
                        }
                    },
                    "parameters": {
                        "parameter": {
                            "@name": "object",
                            "@transfer-ownership": "none",
                            "@nullable": "1",
                            "@allow-none": "1",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "girepository/giobjectinfo.h",
                                "@line": "46",
                                "#text": "object instance pointer"
                            },
                            "type": {
                                "@name": "gpointer",
                                "@c:type": "void*"
                            }
                        }
                    }
                }
            ],
            "class": {
                "@name": "Repository",
                "@c:symbol-prefix": "irepository",
                "@c:type": "GIRepository",
                "@parent": "GObject.Object",
                "@glib:type-name": "GIRepository",
                "@glib:get-type": "g_irepository_get_type",
                "@glib:type-struct": "RepositoryClass",
                "doc": {
                    "@xml:space": "preserve",
                    "@filename": "girepository/girepository.c",
                    "@line": "37",
                    "#text": "#GIRepository is used to manage repositories of namespaces. Namespaces\nare represented on disk by type libraries (.typelib files).\n\n### Discovery of type libraries\n\n#GIRepository will typically look for a `girepository-1.0` directory\nunder the library directory used when compiling gobject-introspection.\n\nIt is possible to control the search paths programmatically, using\ng_irepository_prepend_search_path(). It is also possible to modify\nthe search paths by using the `GI_TYPELIB_PATH` environment variable.\nThe environment variable takes precedence over the default search path\nand the g_irepository_prepend_search_path() calls."
                },
                "source-position": {
                    "@filename": "girepository/girepository.h",
                    "@line": "82"
                },
                "function": [
                    {
                        "@name": "dump",
                        "@c:identifier": "g_irepository_dump",
                        "@throws": "1",
                        "source-position": {
                            "@filename": "girepository/girepository.h",
                            "@line": "200"
                        },
                        "return-value": {
                            "@transfer-ownership": "none",
                            "type": {
                                "@name": "gboolean",
                                "@c:type": "gboolean"
                            }
                        },
                        "parameters": {
                            "parameter": {
                                "@name": "arg",
                                "@transfer-ownership": "none",
                                "type": {
                                    "@name": "utf8",
                                    "@c:type": "const char*"
                                }
                            }
                        }
                    },
                    {
                        "@name": "error_quark",
                        "@c:identifier": "g_irepository_error_quark",
                        "return-value": {
                            "@transfer-ownership": "none",
                            "type": {
                                "@name": "GLib.Quark",
                                "@c:type": "GQuark"
                            }
                        }
                    },
                    {
                        "@name": "get_default",
                        "@c:identifier": "g_irepository_get_default",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "girepository/girepository.c",
                            "@line": "667",
                            "#text": "Returns the singleton process-global default #GIRepository. It is\nnot currently supported to have multiple repositories in a\nparticular process, but this function is provided in the unlikely\neventuality that it would become possible, and as a convenience for\nhigher level language bindings to conform to the GObject method\ncall conventions.\n\nAll methods on #GIRepository also accept %NULL as an instance\nparameter to mean this default repository, which is usually more\nconvenient for C."
                        },
                        "source-position": {
                            "@filename": "girepository/girepository.h",
                            "@line": "101"
                        },
                        "return-value": {
                            "@transfer-ownership": "none",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "girepository/girepository.c",
                                "@line": "681",
                                "#text": "The global singleton #GIRepository"
                            },
                            "type": {
                                "@name": "Repository",
                                "@c:type": "GIRepository*"
                            }
                        }
                    },
                    {
                        "@name": "get_option_group",
                        "@c:identifier": "g_irepository_get_option_group",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "girepository/girepository.c",
                            "@line": "1736",
                            "#text": "Obtain the option group for girepository, it's used\nby the dumper and for programs that wants to provide\nintrospection information"
                        },
                        "source-position": {
                            "@filename": "girepository/girepository.h",
                            "@line": "196"
                        },
                        "return-value": {
                            "@transfer-ownership": "full",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "girepository/girepository.c",
                                "@line": "1743",
                                "#text": "the option group"
                            },
                            "type": {
                                "@name": "GLib.OptionGroup",
                                "@c:type": "GOptionGroup*"
                            }
                        }
                    },
                    {
                        "@name": "get_search_path",
                        "@c:identifier": "g_irepository_get_search_path",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "girepository/girepository.c",
                            "@line": "246",
                            "#text": "Returns the current search path #GIRepository will use when loading\ntypelib files. The list is internal to #GIRepository and should not\nbe freed, nor should its string elements."
                        },
                        "source-position": {
                            "@filename": "girepository/girepository.h",
                            "@line": "110"
                        },
                        "return-value": {
                            "@transfer-ownership": "none",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "girepository/girepository.c",
                                "@line": "253",
                                "#text": "#GSList of strings"
                            },
                            "type": {
                                "@name": "GLib.SList",
                                "@c:type": "GSList*",
                                "type": {
                                    "@name": "filename"
                                }
                            }
                        }
                    },
                    {
                        "@name": "prepend_library_path",
                        "@c:identifier": "g_irepository_prepend_library_path",
                        "source-position": {
                            "@filename": "girepository/girepository.h",
                            "@line": "107"
                        },
                        "return-value": {
                            "@transfer-ownership": "none",
                            "type": {
                                "@name": "none",
                                "@c:type": "void"
                            }
                        },
                        "parameters": {
                            "parameter": {
                                "@name": "directory",
                                "@transfer-ownership": "none",
                                "type": {
                                    "@name": "utf8",
                                    "@c:type": "const char*"
                                }
                            }
                        }
                    },
                    {
                        "@name": "prepend_search_path",
                        "@c:identifier": "g_irepository_prepend_search_path",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "girepository/girepository.c",
                            "@line": "230",
                            "#text": "Prepends @directory to the typelib search path.\n\nSee also: g_irepository_get_search_path()."
                        },
                        "source-position": {
                            "@filename": "girepository/girepository.h",
                            "@line": "104"
                        },
                        "return-value": {
                            "@transfer-ownership": "none",
                            "type": {
                                "@name": "none",
                                "@c:type": "void"
                            }
                        },
                        "parameters": {
                            "parameter": {
                                "@name": "directory",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "girepository/girepository.c",
                                    "@line": "232",
                                    "#text": "directory name to prepend to the typelib\n  search path"
                                },
                                "type": {
                                    "@name": "filename",
                                    "@c:type": "const char*"
                                }
                            }
                        }
                    }
                ],
                "method": [
                    {
                        "@name": "enumerate_versions",
                        "@c:identifier": "g_irepository_enumerate_versions",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "girepository/girepository.c",
                            "@line": "1488",
                            "#text": "Obtain an unordered list of versions (either currently loaded or\navailable) for @namespace_ in this @repository."
                        },
                        "source-position": {
                            "@filename": "girepository/girepository.h",
                            "@line": "129"
                        },
                        "return-value": {
                            "@transfer-ownership": "full",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "girepository/girepository.c",
                                "@line": "1497",
                                "#text": "the array of versions."
                            },
                            "type": {
                                "@name": "GLib.List",
                                "@c:type": "GList*",
                                "type": {
                                    "@name": "utf8"
                                }
                            }
                        },
                        "parameters": {
                            "instance-parameter": {
                                "@name": "repository",
                                "@transfer-ownership": "none",
                                "@nullable": "1",
                                "@allow-none": "1",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "girepository/girepository.c",
                                    "@line": "1490",
                                    "#text": "A #GIRepository or %NULL for the singleton\n  process-global default #GIRepository"
                                },
                                "type": {
                                    "@name": "Repository",
                                    "@c:type": "GIRepository*"
                                }
                            },
                            "parameter": {
                                "@name": "namespace_",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "girepository/girepository.c",
                                    "@line": "1492",
                                    "#text": "GI namespace, e.g. \"Gtk\""
                                },
                                "type": {
                                    "@name": "utf8",
                                    "@c:type": "const gchar*"
                                }
                            }
                        }
                    },
                    {
                        "@name": "find_by_error_domain",
                        "@c:identifier": "g_irepository_find_by_error_domain",
                        "@version": "1.30",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "girepository/girepository.c",
                            "@line": "931",
                            "#text": "Searches for the enum type corresponding to the given #GError\ndomain. Before calling this function for a particular namespace,\nyou must call g_irepository_require() once to load the namespace, or\notherwise ensure the namespace has already been loaded."
                        },
                        "source-position": {
                            "@filename": "girepository/girepository.h",
                            "@line": "178"
                        },
                        "return-value": {
                            "@transfer-ownership": "full",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "girepository/girepository.c",
                                "@line": "942",
                                "#text": "#GIEnumInfo representing metadata about @domain's\nenum type, or %NULL"
                            },
                            "type": {
                                "@name": "EnumInfo",
                                "@c:type": "GIEnumInfo*"
                            }
                        },
                        "parameters": {
                            "instance-parameter": {
                                "@name": "repository",
                                "@transfer-ownership": "none",
                                "@nullable": "1",
                                "@allow-none": "1",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "girepository/girepository.c",
                                    "@line": "933",
                                    "#text": "A #GIRepository or %NULL for the singleton\n  process-global default #GIRepository"
                                },
                                "type": {
                                    "@name": "Repository",
                                    "@c:type": "GIRepository*"
                                }
                            },
                            "parameter": {
                                "@name": "domain",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "girepository/girepository.c",
                                    "@line": "935",
                                    "#text": "a #GError domain"
                                },
                                "type": {
                                    "@name": "GLib.Quark",
                                    "@c:type": "GQuark"
                                }
                            }
                        }
                    },
                    {
                        "@name": "find_by_gtype",
                        "@c:identifier": "g_irepository_find_by_gtype",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "girepository/girepository.c",
                            "@line": "793",
                            "#text": "Searches all loaded namespaces for a particular #GType.  Note that\nin order to locate the metadata, the namespace corresponding to\nthe type must first have been loaded.  There is currently no\nmechanism for determining the namespace which corresponds to an\narbitrary GType - thus, this function will operate most reliably\nwhen you know the GType to originate from be from a loaded namespace."
                        },
                        "source-position": {
                            "@filename": "girepository/girepository.h",
                            "@line": "159"
                        },
                        "return-value": {
                            "@transfer-ownership": "full",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "girepository/girepository.c",
                                "@line": "806",
                                "#text": "#GIBaseInfo representing metadata about @type, or %NULL"
                            },
                            "type": {
                                "@name": "BaseInfo",
                                "@c:type": "GIBaseInfo*"
                            }
                        },
                        "parameters": {
                            "instance-parameter": {
                                "@name": "repository",
                                "@transfer-ownership": "none",
                                "@nullable": "1",
                                "@allow-none": "1",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "girepository/girepository.c",
                                    "@line": "795",
                                    "#text": "A #GIRepository or %NULL for the singleton\n  process-global default #GIRepository"
                                },
                                "type": {
                                    "@name": "Repository",
                                    "@c:type": "GIRepository*"
                                }
                            },
                            "parameter": {
                                "@name": "gtype",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "girepository/girepository.c",
                                    "@line": "797",
                                    "#text": "GType to search for"
                                },
                                "type": {
                                    "@name": "GType",
                                    "@c:type": "GType"
                                }
                            }
                        }
                    },
                    {
                        "@name": "find_by_name",
                        "@c:identifier": "g_irepository_find_by_name",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "girepository/girepository.c",
                            "@line": "871",
                            "#text": "Searches for a particular entry in a namespace.  Before calling\nthis function for a particular namespace, you must call\ng_irepository_require() once to load the namespace, or otherwise\nensure the namespace has already been loaded."
                        },
                        "source-position": {
                            "@filename": "girepository/girepository.h",
                            "@line": "124"
                        },
                        "return-value": {
                            "@transfer-ownership": "full",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "girepository/girepository.c",
                                "@line": "883",
                                "#text": "#GIBaseInfo representing metadata about @name, or %NULL"
                            },
                            "type": {
                                "@name": "BaseInfo",
                                "@c:type": "GIBaseInfo*"
                            }
                        },
                        "parameters": {
                            "instance-parameter": {
                                "@name": "repository",
                                "@transfer-ownership": "none",
                                "@nullable": "1",
                                "@allow-none": "1",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "girepository/girepository.c",
                                    "@line": "873",
                                    "#text": "A #GIRepository or %NULL for the singleton\n  process-global default #GIRepository"
                                },
                                "type": {
                                    "@name": "Repository",
                                    "@c:type": "GIRepository*"
                                }
                            },
                            "parameter": [
                                {
                                    "@name": "namespace_",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "girepository/girepository.c",
                                        "@line": "875",
                                        "#text": "Namespace which will be searched"
                                    },
                                    "type": {
                                        "@name": "utf8",
                                        "@c:type": "const gchar*"
                                    }
                                },
                                {
                                    "@name": "name",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "girepository/girepository.c",
                                        "@line": "876",
                                        "#text": "Entry name to find"
                                    },
                                    "type": {
                                        "@name": "utf8",
                                        "@c:type": "const gchar*"
                                    }
                                }
                            ]
                        }
                    },
                    {
                        "@name": "get_c_prefix",
                        "@c:identifier": "g_irepository_get_c_prefix",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "girepository/girepository.c",
                            "@line": "1175",
                            "#text": "This function returns the \"C prefix\", or the C level namespace\nassociated with the given introspection namespace.  Each C symbol\nstarts with this prefix, as well each #GType in the library.\n\nNote: The namespace must have already been loaded using a function\nsuch as g_irepository_require() before calling this function."
                        },
                        "source-position": {
                            "@filename": "girepository/girepository.h",
                            "@line": "188"
                        },
                        "return-value": {
                            "@transfer-ownership": "none",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "girepository/girepository.c",
                                "@line": "1188",
                                "#text": "C namespace prefix, or %NULL if none associated"
                            },
                            "type": {
                                "@name": "utf8",
                                "@c:type": "const gchar*"
                            }
                        },
                        "parameters": {
                            "instance-parameter": {
                                "@name": "repository",
                                "@transfer-ownership": "none",
                                "@nullable": "1",
                                "@allow-none": "1",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "girepository/girepository.c",
                                    "@line": "1177",
                                    "#text": "A #GIRepository or %NULL for the singleton\n  process-global default #GIRepository"
                                },
                                "type": {
                                    "@name": "Repository",
                                    "@c:type": "GIRepository*"
                                }
                            },
                            "parameter": {
                                "@name": "namespace_",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "girepository/girepository.c",
                                    "@line": "1179",
                                    "#text": "Namespace to inspect"
                                },
                                "type": {
                                    "@name": "utf8",
                                    "@c:type": "const gchar*"
                                }
                            }
                        }
                    },
                    {
                        "@name": "get_dependencies",
                        "@c:identifier": "g_irepository_get_dependencies",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "girepository/girepository.c",
                            "@line": "534",
                            "#text": "Retrieves all (transitive) versioned dependencies for\n@namespace_.\n\nThe strings are of the form `namespace-version`.\n\nNote: @namespace_ must have already been loaded using a function\nsuch as g_irepository_require() before calling this function.\n\nTo get only the immediate dependencies for @namespace_, use\ng_irepository_get_immediate_dependencies()."
                        },
                        "source-position": {
                            "@filename": "girepository/girepository.h",
                            "@line": "152"
                        },
                        "return-value": {
                            "@transfer-ownership": "full",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "girepository/girepository.c",
                                "@line": "551",
                                "#text": "all versioned\n  dependencies"
                            },
                            "array": {
                                "@c:type": "gchar**",
                                "type": {
                                    "@name": "utf8"
                                }
                            }
                        },
                        "parameters": {
                            "instance-parameter": {
                                "@name": "repository",
                                "@transfer-ownership": "none",
                                "@nullable": "1",
                                "@allow-none": "1",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "girepository/girepository.c",
                                    "@line": "536",
                                    "#text": "A #GIRepository or %NULL for the singleton\n  process-global default #GIRepository"
                                },
                                "type": {
                                    "@name": "Repository",
                                    "@c:type": "GIRepository*"
                                }
                            },
                            "parameter": {
                                "@name": "namespace_",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "girepository/girepository.c",
                                    "@line": "538",
                                    "#text": "Namespace of interest"
                                },
                                "type": {
                                    "@name": "utf8",
                                    "@c:type": "const gchar*"
                                }
                            }
                        }
                    },
                    {
                        "@name": "get_immediate_dependencies",
                        "@c:identifier": "g_irepository_get_immediate_dependencies",
                        "@version": "1.44",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "girepository/girepository.c",
                            "@line": "451",
                            "#text": "Return an array of the immediate versioned dependencies for @namespace_.\nReturned strings are of the form `namespace-version`.\n\nNote: @namespace_ must have already been loaded using a function\nsuch as g_irepository_require() before calling this function.\n\nTo get the transitive closure of dependencies for @namespace_, use\ng_irepository_get_dependencies()."
                        },
                        "source-position": {
                            "@filename": "girepository/girepository.h",
                            "@line": "148"
                        },
                        "return-value": {
                            "@transfer-ownership": "full",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "girepository/girepository.c",
                                "@line": "466",
                                "#text": "Zero-terminated string array of immediate versioned\n  dependencies"
                            },
                            "array": {
                                "@c:type": "gchar**",
                                "type": {
                                    "@name": "utf8"
                                }
                            }
                        },
                        "parameters": {
                            "instance-parameter": {
                                "@name": "repository",
                                "@transfer-ownership": "none",
                                "@nullable": "1",
                                "@allow-none": "1",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "girepository/girepository.c",
                                    "@line": "453",
                                    "#text": "A #GIRepository or %NULL for the singleton\n  process-global default #GIRepository"
                                },
                                "type": {
                                    "@name": "Repository",
                                    "@c:type": "GIRepository*"
                                }
                            },
                            "parameter": {
                                "@name": "namespace_",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "girepository/girepository.c",
                                    "@line": "455",
                                    "#text": "Namespace of interest"
                                },
                                "type": {
                                    "@name": "utf8",
                                    "@c:type": "const gchar*"
                                }
                            }
                        }
                    },
                    {
                        "@name": "get_info",
                        "@c:identifier": "g_irepository_get_info",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "girepository/girepository.c",
                            "@line": "721",
                            "#text": "This function returns a particular metadata entry in the\ngiven namespace @namespace_.  The namespace must have\nalready been loaded before calling this function.\nSee g_irepository_get_n_infos() to find the maximum number of\nentries."
                        },
                        "source-position": {
                            "@filename": "girepository/girepository.h",
                            "@line": "173"
                        },
                        "return-value": {
                            "@transfer-ownership": "full",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "girepository/girepository.c",
                                "@line": "734",
                                "#text": "#GIBaseInfo containing metadata"
                            },
                            "type": {
                                "@name": "BaseInfo",
                                "@c:type": "GIBaseInfo*"
                            }
                        },
                        "parameters": {
                            "instance-parameter": {
                                "@name": "repository",
                                "@transfer-ownership": "none",
                                "@nullable": "1",
                                "@allow-none": "1",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "girepository/girepository.c",
                                    "@line": "723",
                                    "#text": "A #GIRepository or %NULL for the singleton\n  process-global default #GIRepository"
                                },
                                "type": {
                                    "@name": "Repository",
                                    "@c:type": "GIRepository*"
                                }
                            },
                            "parameter": [
                                {
                                    "@name": "namespace_",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "girepository/girepository.c",
                                        "@line": "725",
                                        "#text": "Namespace to inspect"
                                    },
                                    "type": {
                                        "@name": "utf8",
                                        "@c:type": "const gchar*"
                                    }
                                },
                                {
                                    "@name": "index",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "girepository/girepository.c",
                                        "@line": "726",
                                        "#text": "0-based offset into namespace metadata for entry"
                                    },
                                    "type": {
                                        "@name": "gint",
                                        "@c:type": "gint"
                                    }
                                }
                            ]
                        }
                    },
                    {
                        "@name": "get_loaded_namespaces",
                        "@c:identifier": "g_irepository_get_loaded_namespaces",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "girepository/girepository.c",
                            "@line": "1073",
                            "#text": "Return the list of currently loaded namespaces."
                        },
                        "source-position": {
                            "@filename": "girepository/girepository.h",
                            "@line": "156"
                        },
                        "return-value": {
                            "@transfer-ownership": "full",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "girepository/girepository.c",
                                "@line": "1080",
                                "#text": "List of namespaces"
                            },
                            "array": {
                                "@c:type": "gchar**",
                                "type": {
                                    "@name": "utf8"
                                }
                            }
                        },
                        "parameters": {
                            "instance-parameter": {
                                "@name": "repository",
                                "@transfer-ownership": "none",
                                "@nullable": "1",
                                "@allow-none": "1",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "girepository/girepository.c",
                                    "@line": "1075",
                                    "#text": "A #GIRepository or %NULL for the singleton\n  process-global default #GIRepository"
                                },
                                "type": {
                                    "@name": "Repository",
                                    "@c:type": "GIRepository*"
                                }
                            }
                        }
                    },
                    {
                        "@name": "get_n_infos",
                        "@c:identifier": "g_irepository_get_n_infos",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "girepository/girepository.c",
                            "@line": "689",
                            "#text": "This function returns the number of metadata entries in\ngiven namespace @namespace_.  The namespace must have\nalready been loaded before calling this function."
                        },
                        "source-position": {
                            "@filename": "girepository/girepository.h",
                            "@line": "169"
                        },
                        "return-value": {
                            "@transfer-ownership": "none",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "girepository/girepository.c",
                                "@line": "699",
                                "#text": "number of metadata entries"
                            },
                            "type": {
                                "@name": "gint",
                                "@c:type": "gint"
                            }
                        },
                        "parameters": {
                            "instance-parameter": {
                                "@name": "repository",
                                "@transfer-ownership": "none",
                                "@nullable": "1",
                                "@allow-none": "1",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "girepository/girepository.c",
                                    "@line": "691",
                                    "#text": "A #GIRepository or %NULL for the singleton\n  process-global default #GIRepository"
                                },
                                "type": {
                                    "@name": "Repository",
                                    "@c:type": "GIRepository*"
                                }
                            },
                            "parameter": {
                                "@name": "namespace_",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "girepository/girepository.c",
                                    "@line": "693",
                                    "#text": "Namespace to inspect"
                                },
                                "type": {
                                    "@name": "utf8",
                                    "@c:type": "const gchar*"
                                }
                            }
                        }
                    },
                    {
                        "@name": "get_object_gtype_interfaces",
                        "@c:identifier": "g_irepository_get_object_gtype_interfaces",
                        "@version": "1.62",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "girepository/girepository.c",
                            "@line": "984",
                            "#text": "Look up the implemented interfaces for @gtype.  This function\ncannot fail per se; but for a totally \"unknown\" #GType, it may\nreturn 0 implemented interfaces.\n\nThe semantics of this function are designed for a dynamic binding,\nwhere in certain cases (such as a function which returns an\ninterface which may have \"hidden\" implementation classes), not all\ndata may be statically known, and will have to be determined from\nthe #GType of the object.  An example is g_file_new_for_path()\nreturning a concrete class of #GLocalFile, which is a #GType we\nsee at runtime, but not statically."
                        },
                        "source-position": {
                            "@filename": "girepository/girepository.h",
                            "@line": "163"
                        },
                        "return-value": {
                            "@transfer-ownership": "none",
                            "type": {
                                "@name": "none",
                                "@c:type": "void"
                            }
                        },
                        "parameters": {
                            "instance-parameter": {
                                "@name": "repository",
                                "@transfer-ownership": "none",
                                "@nullable": "1",
                                "@allow-none": "1",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "girepository/girepository.c",
                                    "@line": "986",
                                    "#text": "a #GIRepository, or %NULL for the default repository"
                                },
                                "type": {
                                    "@name": "Repository",
                                    "@c:type": "GIRepository*"
                                }
                            },
                            "parameter": [
                                {
                                    "@name": "gtype",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "girepository/girepository.c",
                                        "@line": "987",
                                        "#text": "a #GType whose fundamental type is G_TYPE_OBJECT"
                                    },
                                    "type": {
                                        "@name": "GType",
                                        "@c:type": "GType"
                                    }
                                },
                                {
                                    "@name": "n_interfaces_out",
                                    "@direction": "out",
                                    "@caller-allocates": "0",
                                    "@transfer-ownership": "full",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "girepository/girepository.c",
                                        "@line": "988",
                                        "#text": "Number of interfaces"
                                    },
                                    "type": {
                                        "@name": "guint",
                                        "@c:type": "guint*"
                                    }
                                },
                                {
                                    "@name": "interfaces_out",
                                    "@direction": "out",
                                    "@caller-allocates": "0",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "girepository/girepository.c",
                                        "@line": "989",
                                        "#text": "Interfaces for @gtype"
                                    },
                                    "array": {
                                        "@length": "1",
                                        "@zero-terminated": "0",
                                        "@c:type": "GIInterfaceInfo***",
                                        "type": {
                                            "@name": "InterfaceInfo",
                                            "@c:type": "GIInterfaceInfo**"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    {
                        "@name": "get_shared_library",
                        "@c:identifier": "g_irepository_get_shared_library",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "girepository/girepository.c",
                            "@line": "1136",
                            "#text": "This function returns a comma-separated list of paths to the\nshared C libraries associated with the given namespace @namespace_.\nThere may be no shared library path associated, in which case this\nfunction will return %NULL.\n\nNote: The namespace must have already been loaded using a function\nsuch as g_irepository_require() before calling this function."
                        },
                        "source-position": {
                            "@filename": "girepository/girepository.h",
                            "@line": "185"
                        },
                        "return-value": {
                            "@transfer-ownership": "none",
                            "@nullable": "1",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "girepository/girepository.c",
                                "@line": "1150",
                                "#text": "Comma-separated list of paths to shared libraries,\n  or %NULL if none are associated"
                            },
                            "type": {
                                "@name": "utf8",
                                "@c:type": "const gchar*"
                            }
                        },
                        "parameters": {
                            "instance-parameter": {
                                "@name": "repository",
                                "@transfer-ownership": "none",
                                "@nullable": "1",
                                "@allow-none": "1",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "girepository/girepository.c",
                                    "@line": "1138",
                                    "#text": "A #GIRepository or %NULL for the singleton\n  process-global default #GIRepository"
                                },
                                "type": {
                                    "@name": "Repository",
                                    "@c:type": "GIRepository*"
                                }
                            },
                            "parameter": {
                                "@name": "namespace_",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "girepository/girepository.c",
                                    "@line": "1140",
                                    "#text": "Namespace to inspect"
                                },
                                "type": {
                                    "@name": "utf8",
                                    "@c:type": "const gchar*"
                                }
                            }
                        }
                    },
                    {
                        "@name": "get_typelib_path",
                        "@c:identifier": "g_irepository_get_typelib_path",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "girepository/girepository.c",
                            "@line": "1212",
                            "#text": "If namespace @namespace_ is loaded, return the full path to the\n.typelib file it was loaded from.  If the typelib for\nnamespace @namespace_ was included in a shared library, return\nthe special string \"&lt;builtin&gt;\"."
                        },
                        "source-position": {
                            "@filename": "girepository/girepository.h",
                            "@line": "182"
                        },
                        "return-value": {
                            "@transfer-ownership": "none",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "girepository/girepository.c",
                                "@line": "1223",
                                "#text": "Filesystem path (or $lt;builtin$gt;) if successful, %NULL if namespace is not loaded"
                            },
                            "type": {
                                "@name": "utf8",
                                "@c:type": "const gchar*"
                            }
                        },
                        "parameters": {
                            "instance-parameter": {
                                "@name": "repository",
                                "@transfer-ownership": "none",
                                "@nullable": "1",
                                "@allow-none": "1",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "girepository/girepository.c",
                                    "@line": "1214",
                                    "#text": "A #GIRepository or %NULL for the singleton\n  process-global default #GIRepository"
                                },
                                "type": {
                                    "@name": "Repository",
                                    "@c:type": "GIRepository*"
                                }
                            },
                            "parameter": {
                                "@name": "namespace_",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "girepository/girepository.c",
                                    "@line": "1216",
                                    "#text": "GI namespace to use, e.g. \"Gtk\""
                                },
                                "type": {
                                    "@name": "utf8",
                                    "@c:type": "const gchar*"
                                }
                            }
                        }
                    },
                    {
                        "@name": "get_version",
                        "@c:identifier": "g_irepository_get_version",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "girepository/girepository.c",
                            "@line": "1103",
                            "#text": "This function returns the loaded version associated with the given\nnamespace @namespace_.\n\nNote: The namespace must have already been loaded using a function\nsuch as g_irepository_require() before calling this function."
                        },
                        "source-position": {
                            "@filename": "girepository/girepository.h",
                            "@line": "191"
                        },
                        "return-value": {
                            "@transfer-ownership": "none",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "girepository/girepository.c",
                                "@line": "1115",
                                "#text": "Loaded version"
                            },
                            "type": {
                                "@name": "utf8",
                                "@c:type": "const gchar*"
                            }
                        },
                        "parameters": {
                            "instance-parameter": {
                                "@name": "repository",
                                "@transfer-ownership": "none",
                                "@nullable": "1",
                                "@allow-none": "1",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "girepository/girepository.c",
                                    "@line": "1105",
                                    "#text": "A #GIRepository or %NULL for the singleton\n  process-global default #GIRepository"
                                },
                                "type": {
                                    "@name": "Repository",
                                    "@c:type": "GIRepository*"
                                }
                            },
                            "parameter": {
                                "@name": "namespace_",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "girepository/girepository.c",
                                    "@line": "1107",
                                    "#text": "Namespace to inspect"
                                },
                                "type": {
                                    "@name": "utf8",
                                    "@c:type": "const gchar*"
                                }
                            }
                        }
                    },
                    {
                        "@name": "is_registered",
                        "@c:identifier": "g_irepository_is_registered",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "girepository/girepository.c",
                            "@line": "642",
                            "#text": "Check whether a particular namespace (and optionally, a specific\nversion thereof) is currently loaded.  This function is likely to\nonly be useful in unusual circumstances; in order to act upon\nmetadata in the namespace, you should call g_irepository_require()\ninstead which will ensure the namespace is loaded, and return as\nquickly as this function will if it has already been loaded."
                        },
                        "source-position": {
                            "@filename": "girepository/girepository.h",
                            "@line": "119"
                        },
                        "return-value": {
                            "@transfer-ownership": "none",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "girepository/girepository.c",
                                "@line": "656",
                                "#text": "%TRUE if namespace-version is loaded, %FALSE otherwise"
                            },
                            "type": {
                                "@name": "gboolean",
                                "@c:type": "gboolean"
                            }
                        },
                        "parameters": {
                            "instance-parameter": {
                                "@name": "repository",
                                "@transfer-ownership": "none",
                                "@nullable": "1",
                                "@allow-none": "1",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "girepository/girepository.c",
                                    "@line": "644",
                                    "#text": "A #GIRepository or %NULL for the singleton\n  process-global default #GIRepository"
                                },
                                "type": {
                                    "@name": "Repository",
                                    "@c:type": "GIRepository*"
                                }
                            },
                            "parameter": [
                                {
                                    "@name": "namespace_",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "girepository/girepository.c",
                                        "@line": "646",
                                        "#text": "Namespace of interest"
                                    },
                                    "type": {
                                        "@name": "utf8",
                                        "@c:type": "const gchar*"
                                    }
                                },
                                {
                                    "@name": "version",
                                    "@transfer-ownership": "none",
                                    "@nullable": "1",
                                    "@allow-none": "1",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "girepository/girepository.c",
                                        "@line": "647",
                                        "#text": "Required version, may be %NULL for latest"
                                    },
                                    "type": {
                                        "@name": "utf8",
                                        "@c:type": "const gchar*"
                                    }
                                }
                            ]
                        }
                    },
                    {
                        "@name": "load_typelib",
                        "@c:identifier": "g_irepository_load_typelib",
                        "@throws": "1",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "girepository/girepository.c",
                            "@line": "596",
                            "#text": "TODO"
                        },
                        "source-position": {
                            "@filename": "girepository/girepository.h",
                            "@line": "113"
                        },
                        "return-value": {
                            "@transfer-ownership": "none",
                            "type": {
                                "@name": "utf8",
                                "@c:type": "const char*"
                            }
                        },
                        "parameters": {
                            "instance-parameter": {
                                "@name": "repository",
                                "@transfer-ownership": "none",
                                "@nullable": "1",
                                "@allow-none": "1",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "girepository/girepository.c",
                                    "@line": "598",
                                    "#text": "A #GIRepository or %NULL for the singleton\n  process-global default #GIRepository"
                                },
                                "type": {
                                    "@name": "Repository",
                                    "@c:type": "GIRepository*"
                                }
                            },
                            "parameter": [
                                {
                                    "@name": "typelib",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "girepository/girepository.c",
                                        "@line": "600",
                                        "#text": "TODO"
                                    },
                                    "type": {
                                        "@name": "Typelib",
                                        "@c:type": "GITypelib*"
                                    }
                                },
                                {
                                    "@name": "flags",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "girepository/girepository.c",
                                        "@line": "601",
                                        "#text": "TODO"
                                    },
                                    "type": {
                                        "@name": "RepositoryLoadFlags",
                                        "@c:type": "GIRepositoryLoadFlags"
                                    }
                                }
                            ]
                        }
                    },
                    {
                        "@name": "require",
                        "@c:identifier": "g_irepository_require",
                        "@throws": "1",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "girepository/girepository.c",
                            "@line": "1647",
                            "#text": "Force the namespace @namespace_ to be loaded if it isn't already.\nIf @namespace_ is not loaded, this function will search for a\n\".typelib\" file using the repository search path.  In addition, a\nversion @version of namespace may be specified.  If @version is\nnot specified, the latest will be used."
                        },
                        "source-position": {
                            "@filename": "girepository/girepository.h",
                            "@line": "133"
                        },
                        "return-value": {
                            "@transfer-ownership": "none",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "girepository/girepository.c",
                                "@line": "1662",
                                "#text": "a pointer to the #GITypelib if successful, %NULL otherwise"
                            },
                            "type": {
                                "@name": "Typelib",
                                "@c:type": "GITypelib*"
                            }
                        },
                        "parameters": {
                            "instance-parameter": {
                                "@name": "repository",
                                "@transfer-ownership": "none",
                                "@nullable": "1",
                                "@allow-none": "1",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "girepository/girepository.c",
                                    "@line": "1649",
                                    "#text": "A #GIRepository or %NULL for the singleton\n  process-global default #GIRepository"
                                },
                                "type": {
                                    "@name": "Repository",
                                    "@c:type": "GIRepository*"
                                }
                            },
                            "parameter": [
                                {
                                    "@name": "namespace_",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "girepository/girepository.c",
                                        "@line": "1651",
                                        "#text": "GI namespace to use, e.g. \"Gtk\""
                                    },
                                    "type": {
                                        "@name": "utf8",
                                        "@c:type": "const gchar*"
                                    }
                                },
                                {
                                    "@name": "version",
                                    "@transfer-ownership": "none",
                                    "@nullable": "1",
                                    "@allow-none": "1",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "girepository/girepository.c",
                                        "@line": "1652",
                                        "#text": "Version of namespace, may be %NULL for latest"
                                    },
                                    "type": {
                                        "@name": "utf8",
                                        "@c:type": "const gchar*"
                                    }
                                },
                                {
                                    "@name": "flags",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "girepository/girepository.c",
                                        "@line": "1653",
                                        "#text": "Set of %GIRepositoryLoadFlags, may be 0"
                                    },
                                    "type": {
                                        "@name": "RepositoryLoadFlags",
                                        "@c:type": "GIRepositoryLoadFlags"
                                    }
                                }
                            ]
                        }
                    },
                    {
                        "@name": "require_private",
                        "@c:identifier": "g_irepository_require_private",
                        "@throws": "1",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "girepository/girepository.c",
                            "@line": "1680",
                            "#text": "Force the namespace @namespace_ to be loaded if it isn't already.\nIf @namespace_ is not loaded, this function will search for a\n\".typelib\" file within the private directory only. In addition, a\nversion @version of namespace should be specified.  If @version is\nnot specified, the latest will be used."
                        },
                        "source-position": {
                            "@filename": "girepository/girepository.h",
                            "@line": "140"
                        },
                        "return-value": {
                            "@transfer-ownership": "none",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "girepository/girepository.c",
                                "@line": "1696",
                                "#text": "a pointer to the #GITypelib if successful, %NULL otherwise"
                            },
                            "type": {
                                "@name": "Typelib",
                                "@c:type": "GITypelib*"
                            }
                        },
                        "parameters": {
                            "instance-parameter": {
                                "@name": "repository",
                                "@transfer-ownership": "none",
                                "@nullable": "1",
                                "@allow-none": "1",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "girepository/girepository.c",
                                    "@line": "1682",
                                    "#text": "A #GIRepository or %NULL for the singleton\n  process-global default #GIRepository"
                                },
                                "type": {
                                    "@name": "Repository",
                                    "@c:type": "GIRepository*"
                                }
                            },
                            "parameter": [
                                {
                                    "@name": "typelib_dir",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "girepository/girepository.c",
                                        "@line": "1684",
                                        "#text": "Private directory where to find the requested typelib"
                                    },
                                    "type": {
                                        "@name": "utf8",
                                        "@c:type": "const gchar*"
                                    }
                                },
                                {
                                    "@name": "namespace_",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "girepository/girepository.c",
                                        "@line": "1685",
                                        "#text": "GI namespace to use, e.g. \"Gtk\""
                                    },
                                    "type": {
                                        "@name": "utf8",
                                        "@c:type": "const gchar*"
                                    }
                                },
                                {
                                    "@name": "version",
                                    "@transfer-ownership": "none",
                                    "@nullable": "1",
                                    "@allow-none": "1",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "girepository/girepository.c",
                                        "@line": "1686",
                                        "#text": "Version of namespace, may be %NULL for latest"
                                    },
                                    "type": {
                                        "@name": "utf8",
                                        "@c:type": "const gchar*"
                                    }
                                },
                                {
                                    "@name": "flags",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "girepository/girepository.c",
                                        "@line": "1687",
                                        "#text": "Set of %GIRepositoryLoadFlags, may be 0"
                                    },
                                    "type": {
                                        "@name": "RepositoryLoadFlags",
                                        "@c:type": "GIRepositoryLoadFlags"
                                    }
                                }
                            ]
                        }
                    }
                ],
                "field": [
                    {
                        "@name": "parent",
                        "@readable": "0",
                        "@private": "1",
                        "type": {
                            "@name": "GObject.Object",
                            "@c:type": "GObject"
                        }
                    },
                    {
                        "@name": "priv",
                        "@readable": "0",
                        "@private": "1",
                        "type": {
                            "@name": "RepositoryPrivate",
                            "@c:type": "GIRepositoryPrivate*"
                        }
                    }
                ]
            },
            "function": [
                {
                    "@name": "arg_info_get_closure",
                    "@c:identifier": "g_arg_info_get_closure",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "girepository/giarginfo.c",
                        "@line": "244",
                        "#text": "Obtain the index of the user data argument. This is only valid\nfor arguments which are callbacks."
                    },
                    "source-position": {
                        "@filename": "girepository/giarginfo.h",
                        "@line": "69"
                    },
                    "return-value": {
                        "@transfer-ownership": "none",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "girepository/giarginfo.c",
                            "@line": "251",
                            "#text": "index of the user data argument or -1 if there is none"
                        },
                        "type": {
                            "@name": "gint",
                            "@c:type": "gint"
                        }
                    },
                    "parameters": {
                        "parameter": {
                            "@name": "info",
                            "@transfer-ownership": "none",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "girepository/giarginfo.c",
                                "@line": "246",
                                "#text": "a #GIArgInfo"
                            },
                            "type": {
                                "@name": "ArgInfo",
                                "@c:type": "GIArgInfo*"
                            }
                        }
                    }
                },
                {
                    "@name": "arg_info_get_destroy",
                    "@c:identifier": "g_arg_info_get_destroy",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "girepository/giarginfo.c",
                        "@line": "267",
                        "#text": "Obtains the index of the #GDestroyNotify argument. This is only valid\nfor arguments which are callbacks."
                    },
                    "source-position": {
                        "@filename": "girepository/giarginfo.h",
                        "@line": "72"
                    },
                    "return-value": {
                        "@transfer-ownership": "none",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "girepository/giarginfo.c",
                            "@line": "274",
                            "#text": "index of the #GDestroyNotify argument or -1 if there is none"
                        },
                        "type": {
                            "@name": "gint",
                            "@c:type": "gint"
                        }
                    },
                    "parameters": {
                        "parameter": {
                            "@name": "info",
                            "@transfer-ownership": "none",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "girepository/giarginfo.c",
                                "@line": "269",
                                "#text": "a #GIArgInfo"
                            },
                            "type": {
                                "@name": "ArgInfo",
                                "@c:type": "GIArgInfo*"
                            }
                        }
                    }
                },
                {
                    "@name": "arg_info_get_direction",
                    "@c:identifier": "g_arg_info_get_direction",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "girepository/giarginfo.c",
                        "@line": "43",
                        "#text": "Obtain the direction of the argument. Check #GIDirection for possible\ndirection values."
                    },
                    "source-position": {
                        "@filename": "girepository/giarginfo.h",
                        "@line": "45"
                    },
                    "return-value": {
                        "@transfer-ownership": "none",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "girepository/giarginfo.c",
                            "@line": "50",
                            "#text": "the direction"
                        },
                        "type": {
                            "@name": "Direction",
                            "@c:type": "GIDirection"
                        }
                    },
                    "parameters": {
                        "parameter": {
                            "@name": "info",
                            "@transfer-ownership": "none",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "girepository/giarginfo.c",
                                "@line": "45",
                                "#text": "a #GIArgInfo"
                            },
                            "type": {
                                "@name": "ArgInfo",
                                "@c:type": "GIArgInfo*"
                            }
                        }
                    }
                },
                {
                    "@name": "arg_info_get_ownership_transfer",
                    "@c:identifier": "g_arg_info_get_ownership_transfer",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "girepository/giarginfo.c",
                        "@line": "191",
                        "#text": "Obtain the ownership transfer for this argument.\n#GITransfer contains a list of possible values."
                    },
                    "source-position": {
                        "@filename": "girepository/giarginfo.h",
                        "@line": "63"
                    },
                    "return-value": {
                        "@transfer-ownership": "none",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "girepository/giarginfo.c",
                            "@line": "198",
                            "#text": "the transfer"
                        },
                        "type": {
                            "@name": "Transfer",
                            "@c:type": "GITransfer"
                        }
                    },
                    "parameters": {
                        "parameter": {
                            "@name": "info",
                            "@transfer-ownership": "none",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "girepository/giarginfo.c",
                                "@line": "193",
                                "#text": "a #GIArgInfo"
                            },
                            "type": {
                                "@name": "ArgInfo",
                                "@c:type": "GIArgInfo*"
                            }
                        }
                    }
                },
                {
                    "@name": "arg_info_get_scope",
                    "@c:identifier": "g_arg_info_get_scope",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "girepository/giarginfo.c",
                        "@line": "219",
                        "#text": "Obtain the scope type for this argument. The scope type explains\nhow a callback is going to be invoked, most importantly when\nthe resources required to invoke it can be freed.\n#GIScopeType contains a list of possible values."
                    },
                    "source-position": {
                        "@filename": "girepository/giarginfo.h",
                        "@line": "66"
                    },
                    "return-value": {
                        "@transfer-ownership": "none",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "girepository/giarginfo.c",
                            "@line": "228",
                            "#text": "the scope type"
                        },
                        "type": {
                            "@name": "ScopeType",
                            "@c:type": "GIScopeType"
                        }
                    },
                    "parameters": {
                        "parameter": {
                            "@name": "info",
                            "@transfer-ownership": "none",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "girepository/giarginfo.c",
                                "@line": "221",
                                "#text": "a #GIArgInfo"
                            },
                            "type": {
                                "@name": "ArgInfo",
                                "@c:type": "GIArgInfo*"
                            }
                        }
                    }
                },
                {
                    "@name": "arg_info_get_type",
                    "@c:identifier": "g_arg_info_get_type",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "girepository/giarginfo.c",
                        "@line": "290",
                        "#text": "Obtain the type information for @info."
                    },
                    "source-position": {
                        "@filename": "girepository/giarginfo.h",
                        "@line": "75"
                    },
                    "return-value": {
                        "@transfer-ownership": "full",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "girepository/giarginfo.c",
                            "@line": "296",
                            "#text": "the #GITypeInfo holding the type\n  information for @info, free it with g_base_info_unref()\n  when done."
                        },
                        "type": {
                            "@name": "TypeInfo",
                            "@c:type": "GITypeInfo*"
                        }
                    },
                    "parameters": {
                        "parameter": {
                            "@name": "info",
                            "@transfer-ownership": "none",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "girepository/giarginfo.c",
                                "@line": "292",
                                "#text": "a #GIArgInfo"
                            },
                            "type": {
                                "@name": "ArgInfo",
                                "@c:type": "GIArgInfo*"
                            }
                        }
                    }
                },
                {
                    "@name": "arg_info_is_caller_allocates",
                    "@c:identifier": "g_arg_info_is_caller_allocates",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "girepository/giarginfo.c",
                        "@line": "94",
                        "#text": "Obtain if the argument is a pointer to a struct or object that will\nreceive an output of a function.  The default assumption for\n%GI_DIRECTION_OUT arguments which have allocation is that the\ncallee allocates; if this is %TRUE, then the caller must allocate."
                    },
                    "source-position": {
                        "@filename": "girepository/giarginfo.h",
                        "@line": "54"
                    },
                    "return-value": {
                        "@transfer-ownership": "none",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "girepository/giarginfo.c",
                            "@line": "103",
                            "#text": "%TRUE if caller is required to have allocated the argument"
                        },
                        "type": {
                            "@name": "gboolean",
                            "@c:type": "gboolean"
                        }
                    },
                    "parameters": {
                        "parameter": {
                            "@name": "info",
                            "@transfer-ownership": "none",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "girepository/giarginfo.c",
                                "@line": "96",
                                "#text": "a #GIArgInfo"
                            },
                            "type": {
                                "@name": "ArgInfo",
                                "@c:type": "GIArgInfo*"
                            }
                        }
                    }
                },
                {
                    "@name": "arg_info_is_optional",
                    "@c:identifier": "g_arg_info_is_optional",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "girepository/giarginfo.c",
                        "@line": "119",
                        "#text": "Obtain if the argument is optional.  For 'out' arguments this means\nthat you can pass %NULL in order to ignore the result."
                    },
                    "source-position": {
                        "@filename": "girepository/giarginfo.h",
                        "@line": "51"
                    },
                    "return-value": {
                        "@transfer-ownership": "none",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "girepository/giarginfo.c",
                            "@line": "126",
                            "#text": "%TRUE if it is an optional argument"
                        },
                        "type": {
                            "@name": "gboolean",
                            "@c:type": "gboolean"
                        }
                    },
                    "parameters": {
                        "parameter": {
                            "@name": "info",
                            "@transfer-ownership": "none",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "girepository/giarginfo.c",
                                "@line": "121",
                                "#text": "a #GIArgInfo"
                            },
                            "type": {
                                "@name": "ArgInfo",
                                "@c:type": "GIArgInfo*"
                            }
                        }
                    }
                },
                {
                    "@name": "arg_info_is_return_value",
                    "@c:identifier": "g_arg_info_is_return_value",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "girepository/giarginfo.c",
                        "@line": "71",
                        "#text": "Obtain if the argument is a return value. It can either be a\nparameter or a return value."
                    },
                    "source-position": {
                        "@filename": "girepository/giarginfo.h",
                        "@line": "48"
                    },
                    "return-value": {
                        "@transfer-ownership": "none",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "girepository/giarginfo.c",
                            "@line": "78",
                            "#text": "%TRUE if it is a return value"
                        },
                        "type": {
                            "@name": "gboolean",
                            "@c:type": "gboolean"
                        }
                    },
                    "parameters": {
                        "parameter": {
                            "@name": "info",
                            "@transfer-ownership": "none",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "girepository/giarginfo.c",
                                "@line": "73",
                                "#text": "a #GIArgInfo"
                            },
                            "type": {
                                "@name": "ArgInfo",
                                "@c:type": "GIArgInfo*"
                            }
                        }
                    }
                },
                {
                    "@name": "arg_info_is_skip",
                    "@c:identifier": "g_arg_info_is_skip",
                    "@version": "1.30",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "girepository/giarginfo.c",
                        "@line": "168",
                        "#text": "Obtain if an argument is only useful in C."
                    },
                    "source-position": {
                        "@filename": "girepository/giarginfo.h",
                        "@line": "60"
                    },
                    "return-value": {
                        "@transfer-ownership": "none",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "girepository/giarginfo.c",
                            "@line": "174",
                            "#text": "%TRUE if argument is only useful in C."
                        },
                        "type": {
                            "@name": "gboolean",
                            "@c:type": "gboolean"
                        }
                    },
                    "parameters": {
                        "parameter": {
                            "@name": "info",
                            "@transfer-ownership": "none",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "girepository/giarginfo.c",
                                "@line": "170",
                                "#text": "a #GIArgInfo"
                            },
                            "type": {
                                "@name": "ArgInfo",
                                "@c:type": "GIArgInfo*"
                            }
                        }
                    }
                },
                {
                    "@name": "arg_info_load_type",
                    "@c:identifier": "g_arg_info_load_type",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "girepository/giarginfo.c",
                        "@line": "311",
                        "#text": "Obtain information about a the type of given argument @info; this\nfunction is a variant of g_arg_info_get_type() designed for stack\nallocation.\n\nThe initialized @type must not be referenced after @info is deallocated."
                    },
                    "source-position": {
                        "@filename": "girepository/giarginfo.h",
                        "@line": "78"
                    },
                    "return-value": {
                        "@transfer-ownership": "none",
                        "type": {
                            "@name": "none",
                            "@c:type": "void"
                        }
                    },
                    "parameters": {
                        "parameter": [
                            {
                                "@name": "info",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "girepository/giarginfo.c",
                                    "@line": "313",
                                    "#text": "a #GIArgInfo"
                                },
                                "type": {
                                    "@name": "ArgInfo",
                                    "@c:type": "GIArgInfo*"
                                }
                            },
                            {
                                "@name": "type",
                                "@direction": "out",
                                "@caller-allocates": "1",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "girepository/giarginfo.c",
                                    "@line": "314",
                                    "#text": "Initialized with information about type of @info"
                                },
                                "type": {
                                    "@name": "TypeInfo",
                                    "@c:type": "GITypeInfo*"
                                }
                            }
                        ]
                    }
                },
                {
                    "@name": "arg_info_may_be_null",
                    "@c:identifier": "g_arg_info_may_be_null",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "girepository/giarginfo.c",
                        "@line": "142",
                        "#text": "Obtain if the type of the argument includes the possibility of %NULL.\nFor 'in' values this means that %NULL is a valid value.  For 'out'\nvalues, this means that %NULL may be returned.\n\nSee also g_arg_info_is_optional()."
                    },
                    "source-position": {
                        "@filename": "girepository/giarginfo.h",
                        "@line": "57"
                    },
                    "return-value": {
                        "@transfer-ownership": "none",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "girepository/giarginfo.c",
                            "@line": "152",
                            "#text": "%TRUE if the value may be %NULL"
                        },
                        "type": {
                            "@name": "gboolean",
                            "@c:type": "gboolean"
                        }
                    },
                    "parameters": {
                        "parameter": {
                            "@name": "info",
                            "@transfer-ownership": "none",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "girepository/giarginfo.c",
                                "@line": "144",
                                "#text": "a #GIArgInfo"
                            },
                            "type": {
                                "@name": "ArgInfo",
                                "@c:type": "GIArgInfo*"
                            }
                        }
                    }
                },
                {
                    "@name": "callable_info_can_throw_gerror",
                    "@c:identifier": "g_callable_info_can_throw_gerror",
                    "@version": "1.34",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "girepository/gicallableinfo.c",
                        "@line": "81",
                        "#text": "TODO"
                    },
                    "source-position": {
                        "@filename": "girepository/gicallableinfo.h",
                        "@line": "51"
                    },
                    "return-value": {
                        "@transfer-ownership": "none",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "girepository/gicallableinfo.c",
                            "@line": "88",
                            "#text": "%TRUE if this #GICallableInfo can throw a #GError"
                        },
                        "type": {
                            "@name": "gboolean",
                            "@c:type": "gboolean"
                        }
                    },
                    "parameters": {
                        "parameter": {
                            "@name": "info",
                            "@transfer-ownership": "none",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "girepository/gicallableinfo.c",
                                "@line": "83",
                                "#text": "a #GICallableInfo"
                            },
                            "type": {
                                "@name": "CallableInfo",
                                "@c:type": "GICallableInfo*"
                            }
                        }
                    }
                },
                {
                    "@name": "callable_info_get_arg",
                    "@c:identifier": "g_callable_info_get_arg",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "girepository/gicallableinfo.c",
                        "@line": "337",
                        "#text": "Obtain information about a particular argument of this callable."
                    },
                    "source-position": {
                        "@filename": "girepository/gicallableinfo.h",
                        "@line": "83"
                    },
                    "return-value": {
                        "@transfer-ownership": "full",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "girepository/gicallableinfo.c",
                            "@line": "344",
                            "#text": "the #GIArgInfo. Free it with\ng_base_info_unref() when done."
                        },
                        "type": {
                            "@name": "ArgInfo",
                            "@c:type": "GIArgInfo*"
                        }
                    },
                    "parameters": {
                        "parameter": [
                            {
                                "@name": "info",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "girepository/gicallableinfo.c",
                                    "@line": "339",
                                    "#text": "a #GICallableInfo"
                                },
                                "type": {
                                    "@name": "CallableInfo",
                                    "@c:type": "GICallableInfo*"
                                }
                            },
                            {
                                "@name": "n",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "girepository/gicallableinfo.c",
                                    "@line": "340",
                                    "#text": "the argument index to fetch"
                                },
                                "type": {
                                    "@name": "gint",
                                    "@c:type": "gint"
                                }
                            }
                        ]
                    }
                },
                {
                    "@name": "callable_info_get_caller_owns",
                    "@c:identifier": "g_callable_info_get_caller_owns",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "girepository/gicallableinfo.c",
                        "@line": "258",
                        "#text": "See whether the caller owns the return value of this callable.\n#GITransfer contains a list of possible transfer values."
                    },
                    "source-position": {
                        "@filename": "girepository/gicallableinfo.h",
                        "@line": "71"
                    },
                    "return-value": {
                        "@transfer-ownership": "none",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "girepository/gicallableinfo.c",
                            "@line": "265",
                            "#text": "the transfer mode for the return value of the callable"
                        },
                        "type": {
                            "@name": "Transfer",
                            "@c:type": "GITransfer"
                        }
                    },
                    "parameters": {
                        "parameter": {
                            "@name": "info",
                            "@transfer-ownership": "none",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "girepository/gicallableinfo.c",
                                "@line": "260",
                                "#text": "a #GICallableInfo"
                            },
                            "type": {
                                "@name": "CallableInfo",
                                "@c:type": "GICallableInfo*"
                            }
                        }
                    }
                },
                {
                    "@name": "callable_info_get_instance_ownership_transfer",
                    "@c:identifier": "g_callable_info_get_instance_ownership_transfer",
                    "@version": "1.42",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "girepository/gicallableinfo.c",
                        "@line": "286",
                        "#text": "Obtains the ownership transfer for the instance argument.\n#GITransfer contains a list of possible transfer values."
                    },
                    "source-position": {
                        "@filename": "girepository/gicallableinfo.h",
                        "@line": "104"
                    },
                    "return-value": {
                        "@transfer-ownership": "none",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "girepository/gicallableinfo.c",
                            "@line": "294",
                            "#text": "the transfer mode of the instance argument"
                        },
                        "type": {
                            "@name": "Transfer",
                            "@c:type": "GITransfer"
                        }
                    },
                    "parameters": {
                        "parameter": {
                            "@name": "info",
                            "@transfer-ownership": "none",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "girepository/gicallableinfo.c",
                                "@line": "288",
                                "#text": "a #GICallableInfo"
                            },
                            "type": {
                                "@name": "CallableInfo",
                                "@c:type": "GICallableInfo*"
                            }
                        }
                    }
                },
                {
                    "@name": "callable_info_get_n_args",
                    "@c:identifier": "g_callable_info_get_n_args",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "girepository/gicallableinfo.c",
                        "@line": "313",
                        "#text": "Obtain the number of arguments (both IN and OUT) for this callable."
                    },
                    "source-position": {
                        "@filename": "girepository/gicallableinfo.h",
                        "@line": "80"
                    },
                    "return-value": {
                        "@transfer-ownership": "none",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "girepository/gicallableinfo.c",
                            "@line": "319",
                            "#text": "The number of arguments this callable expects."
                        },
                        "type": {
                            "@name": "gint",
                            "@c:type": "gint"
                        }
                    },
                    "parameters": {
                        "parameter": {
                            "@name": "info",
                            "@transfer-ownership": "none",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "girepository/gicallableinfo.c",
                                "@line": "315",
                                "#text": "a #GICallableInfo"
                            },
                            "type": {
                                "@name": "CallableInfo",
                                "@c:type": "GICallableInfo*"
                            }
                        }
                    }
                },
                {
                    "@name": "callable_info_get_return_attribute",
                    "@c:identifier": "g_callable_info_get_return_attribute",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "girepository/gicallableinfo.c",
                        "@line": "396",
                        "#text": "Retrieve an arbitrary attribute associated with the return value."
                    },
                    "source-position": {
                        "@filename": "girepository/gicallableinfo.h",
                        "@line": "61"
                    },
                    "return-value": {
                        "@transfer-ownership": "none",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "girepository/gicallableinfo.c",
                            "@line": "403",
                            "#text": "The value of the attribute, or %NULL if no such attribute exists"
                        },
                        "type": {
                            "@name": "utf8",
                            "@c:type": "const gchar*"
                        }
                    },
                    "parameters": {
                        "parameter": [
                            {
                                "@name": "info",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "girepository/gicallableinfo.c",
                                    "@line": "398",
                                    "#text": "a #GICallableInfo"
                                },
                                "type": {
                                    "@name": "CallableInfo",
                                    "@c:type": "GICallableInfo*"
                                }
                            },
                            {
                                "@name": "name",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "girepository/gicallableinfo.c",
                                    "@line": "399",
                                    "#text": "a freeform string naming an attribute"
                                },
                                "type": {
                                    "@name": "utf8",
                                    "@c:type": "const gchar*"
                                }
                            }
                        ]
                    }
                },
                {
                    "@name": "callable_info_get_return_type",
                    "@c:identifier": "g_callable_info_get_return_type",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "girepository/gicallableinfo.c",
                        "@line": "164",
                        "#text": "Obtain the return type of a callable item as a #GITypeInfo."
                    },
                    "source-position": {
                        "@filename": "girepository/gicallableinfo.h",
                        "@line": "54"
                    },
                    "return-value": {
                        "@transfer-ownership": "full",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "girepository/gicallableinfo.c",
                            "@line": "170",
                            "#text": "the #GITypeInfo. Free the struct by calling\ng_base_info_unref() when done."
                        },
                        "type": {
                            "@name": "TypeInfo",
                            "@c:type": "GITypeInfo*"
                        }
                    },
                    "parameters": {
                        "parameter": {
                            "@name": "info",
                            "@transfer-ownership": "none",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "girepository/gicallableinfo.c",
                                "@line": "166",
                                "#text": "a #GICallableInfo"
                            },
                            "type": {
                                "@name": "CallableInfo",
                                "@c:type": "GICallableInfo*"
                            }
                        }
                    }
                },
                {
                    "@name": "callable_info_invoke",
                    "@c:identifier": "g_callable_info_invoke",
                    "@throws": "1",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "girepository/gicallableinfo.c",
                        "@line": "581",
                        "#text": "TODO"
                    },
                    "source-position": {
                        "@filename": "girepository/gicallableinfo.h",
                        "@line": "92"
                    },
                    "return-value": {
                        "@transfer-ownership": "none",
                        "type": {
                            "@name": "gboolean",
                            "@c:type": "gboolean"
                        }
                    },
                    "parameters": {
                        "parameter": [
                            {
                                "@name": "info",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "girepository/gicallableinfo.c",
                                    "@line": "583",
                                    "#text": "TODO"
                                },
                                "type": {
                                    "@name": "CallableInfo",
                                    "@c:type": "GICallableInfo*"
                                }
                            },
                            {
                                "@name": "function",
                                "@transfer-ownership": "none",
                                "@nullable": "1",
                                "@allow-none": "1",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "girepository/gicallableinfo.c",
                                    "@line": "584",
                                    "#text": "TODO"
                                },
                                "type": {
                                    "@name": "gpointer",
                                    "@c:type": "gpointer"
                                }
                            },
                            {
                                "@name": "in_args",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "girepository/gicallableinfo.c",
                                    "@line": "585",
                                    "#text": "TODO"
                                },
                                "array": {
                                    "@length": "3",
                                    "@zero-terminated": "0",
                                    "@c:type": "const GIArgument*",
                                    "type": {
                                        "@name": "Argument",
                                        "@c:type": "GIArgument"
                                    }
                                }
                            },
                            {
                                "@name": "n_in_args",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "girepository/gicallableinfo.c",
                                    "@line": "586",
                                    "#text": "TODO"
                                },
                                "type": {
                                    "@name": "gint",
                                    "@c:type": "int"
                                }
                            },
                            {
                                "@name": "out_args",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "girepository/gicallableinfo.c",
                                    "@line": "587",
                                    "#text": "TODO"
                                },
                                "array": {
                                    "@length": "5",
                                    "@zero-terminated": "0",
                                    "@c:type": "const GIArgument*",
                                    "type": {
                                        "@name": "Argument",
                                        "@c:type": "GIArgument"
                                    }
                                }
                            },
                            {
                                "@name": "n_out_args",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "girepository/gicallableinfo.c",
                                    "@line": "588",
                                    "#text": "TODO"
                                },
                                "type": {
                                    "@name": "gint",
                                    "@c:type": "int"
                                }
                            },
                            {
                                "@name": "return_value",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "girepository/gicallableinfo.c",
                                    "@line": "589",
                                    "#text": "TODO"
                                },
                                "type": {
                                    "@name": "Argument",
                                    "@c:type": "GIArgument*"
                                }
                            },
                            {
                                "@name": "is_method",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "girepository/gicallableinfo.c",
                                    "@line": "590",
                                    "#text": "TODO"
                                },
                                "type": {
                                    "@name": "gboolean",
                                    "@c:type": "gboolean"
                                }
                            },
                            {
                                "@name": "throws",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "girepository/gicallableinfo.c",
                                    "@line": "591",
                                    "#text": "TODO"
                                },
                                "type": {
                                    "@name": "gboolean",
                                    "@c:type": "gboolean"
                                }
                            }
                        ]
                    }
                },
                {
                    "@name": "callable_info_is_method",
                    "@c:identifier": "g_callable_info_is_method",
                    "@version": "1.34",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "girepository/gicallableinfo.c",
                        "@line": "126",
                        "#text": "Determines if the callable info is a method. For #GIVFuncInfo<!-- -->s,\n#GICallbackInfo<!-- -->s, and #GISignalInfo<!-- -->s,\nthis is always true. Otherwise, this looks at the %GI_FUNCTION_IS_METHOD\nflag on the #GIFunctionInfo.\n\nConcretely, this function returns whether g_callable_info_get_n_args()\nmatches the number of arguments in the raw C method. For methods, there\nis one more C argument than is exposed by introspection: the \"self\"\nor \"this\" object."
                    },
                    "source-position": {
                        "@filename": "girepository/gicallableinfo.h",
                        "@line": "48"
                    },
                    "return-value": {
                        "@transfer-ownership": "none",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "girepository/gicallableinfo.c",
                            "@line": "140",
                            "#text": "%TRUE if @info is a method, %FALSE otherwise"
                        },
                        "type": {
                            "@name": "gboolean",
                            "@c:type": "gboolean"
                        }
                    },
                    "parameters": {
                        "parameter": {
                            "@name": "info",
                            "@transfer-ownership": "none",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "girepository/gicallableinfo.c",
                                "@line": "128",
                                "#text": "a #GICallableInfo"
                            },
                            "type": {
                                "@name": "CallableInfo",
                                "@c:type": "GICallableInfo*"
                            }
                        }
                    }
                },
                {
                    "@name": "callable_info_iterate_return_attributes",
                    "@c:identifier": "g_callable_info_iterate_return_attributes",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "girepository/gicallableinfo.c",
                        "@line": "420",
                        "#text": "Iterate over all attributes associated with the return value.  The\niterator structure is typically stack allocated, and must have its\nfirst member initialized to %NULL.\n\nBoth the @name and @value should be treated as constants\nand must not be freed.\n\nSee g_base_info_iterate_attributes() for an example of how to use a\nsimilar API."
                    },
                    "source-position": {
                        "@filename": "girepository/gicallableinfo.h",
                        "@line": "65"
                    },
                    "return-value": {
                        "@transfer-ownership": "none",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "girepository/gicallableinfo.c",
                            "@line": "437",
                            "#text": "%TRUE if there are more attributes"
                        },
                        "type": {
                            "@name": "gboolean",
                            "@c:type": "gboolean"
                        }
                    },
                    "parameters": {
                        "parameter": [
                            {
                                "@name": "info",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "girepository/gicallableinfo.c",
                                    "@line": "422",
                                    "#text": "a #GICallableInfo"
                                },
                                "type": {
                                    "@name": "CallableInfo",
                                    "@c:type": "GICallableInfo*"
                                }
                            },
                            {
                                "@name": "iterator",
                                "@direction": "inout",
                                "@caller-allocates": "0",
                                "@transfer-ownership": "full",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "girepository/gicallableinfo.c",
                                    "@line": "423",
                                    "#text": "a #GIAttributeIter structure, must be initialized; see below"
                                },
                                "type": {
                                    "@name": "AttributeIter",
                                    "@c:type": "GIAttributeIter*"
                                }
                            },
                            {
                                "@name": "name",
                                "@direction": "out",
                                "@caller-allocates": "0",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "girepository/gicallableinfo.c",
                                    "@line": "424",
                                    "#text": "Returned name, must not be freed"
                                },
                                "type": {
                                    "@name": "utf8",
                                    "@c:type": "char**"
                                }
                            },
                            {
                                "@name": "value",
                                "@direction": "out",
                                "@caller-allocates": "0",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "girepository/gicallableinfo.c",
                                    "@line": "425",
                                    "#text": "Returned name, must not be freed"
                                },
                                "type": {
                                    "@name": "utf8",
                                    "@c:type": "char**"
                                }
                            }
                        ]
                    }
                },
                {
                    "@name": "callable_info_load_arg",
                    "@c:identifier": "g_callable_info_load_arg",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "girepository/gicallableinfo.c",
                        "@line": "365",
                        "#text": "Obtain information about a particular argument of this callable; this\nfunction is a variant of g_callable_info_get_arg() designed for stack\nallocation.\n\nThe initialized @arg must not be referenced after @info is deallocated."
                    },
                    "source-position": {
                        "@filename": "girepository/gicallableinfo.h",
                        "@line": "87"
                    },
                    "return-value": {
                        "@transfer-ownership": "none",
                        "type": {
                            "@name": "none",
                            "@c:type": "void"
                        }
                    },
                    "parameters": {
                        "parameter": [
                            {
                                "@name": "info",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "girepository/gicallableinfo.c",
                                    "@line": "367",
                                    "#text": "a #GICallableInfo"
                                },
                                "type": {
                                    "@name": "CallableInfo",
                                    "@c:type": "GICallableInfo*"
                                }
                            },
                            {
                                "@name": "n",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "girepository/gicallableinfo.c",
                                    "@line": "368",
                                    "#text": "the argument index to fetch"
                                },
                                "type": {
                                    "@name": "gint",
                                    "@c:type": "gint"
                                }
                            },
                            {
                                "@name": "arg",
                                "@direction": "out",
                                "@caller-allocates": "1",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "girepository/gicallableinfo.c",
                                    "@line": "369",
                                    "#text": "Initialize with argument number @n"
                                },
                                "type": {
                                    "@name": "ArgInfo",
                                    "@c:type": "GIArgInfo*"
                                }
                            }
                        ]
                    }
                },
                {
                    "@name": "callable_info_load_return_type",
                    "@c:identifier": "g_callable_info_load_return_type",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "girepository/gicallableinfo.c",
                        "@line": "188",
                        "#text": "Obtain information about a return value of callable; this\nfunction is a variant of g_callable_info_get_return_type() designed for stack\nallocation.\n\nThe initialized @type must not be referenced after @info is deallocated."
                    },
                    "source-position": {
                        "@filename": "girepository/gicallableinfo.h",
                        "@line": "57"
                    },
                    "return-value": {
                        "@transfer-ownership": "none",
                        "type": {
                            "@name": "none",
                            "@c:type": "void"
                        }
                    },
                    "parameters": {
                        "parameter": [
                            {
                                "@name": "info",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "girepository/gicallableinfo.c",
                                    "@line": "190",
                                    "#text": "a #GICallableInfo"
                                },
                                "type": {
                                    "@name": "CallableInfo",
                                    "@c:type": "GICallableInfo*"
                                }
                            },
                            {
                                "@name": "type",
                                "@direction": "out",
                                "@caller-allocates": "1",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "girepository/gicallableinfo.c",
                                    "@line": "191",
                                    "#text": "Initialized with return type of @info"
                                },
                                "type": {
                                    "@name": "TypeInfo",
                                    "@c:type": "GITypeInfo*"
                                }
                            }
                        ]
                    }
                },
                {
                    "@name": "callable_info_may_return_null",
                    "@c:identifier": "g_callable_info_may_return_null",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "girepository/gicallableinfo.c",
                        "@line": "214",
                        "#text": "See if a callable could return %NULL."
                    },
                    "source-position": {
                        "@filename": "girepository/gicallableinfo.h",
                        "@line": "74"
                    },
                    "return-value": {
                        "@transfer-ownership": "none",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "girepository/gicallableinfo.c",
                            "@line": "220",
                            "#text": "%TRUE if callable could return %NULL"
                        },
                        "type": {
                            "@name": "gboolean",
                            "@c:type": "gboolean"
                        }
                    },
                    "parameters": {
                        "parameter": {
                            "@name": "info",
                            "@transfer-ownership": "none",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "girepository/gicallableinfo.c",
                                "@line": "216",
                                "#text": "a #GICallableInfo"
                            },
                            "type": {
                                "@name": "CallableInfo",
                                "@c:type": "GICallableInfo*"
                            }
                        }
                    }
                },
                {
                    "@name": "callable_info_skip_return",
                    "@c:identifier": "g_callable_info_skip_return",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "girepository/gicallableinfo.c",
                        "@line": "236",
                        "#text": "See if a callable's return value is only useful in C."
                    },
                    "source-position": {
                        "@filename": "girepository/gicallableinfo.h",
                        "@line": "77"
                    },
                    "return-value": {
                        "@transfer-ownership": "none",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "girepository/gicallableinfo.c",
                            "@line": "242",
                            "#text": "%TRUE if return value is only useful in C."
                        },
                        "type": {
                            "@name": "gboolean",
                            "@c:type": "gboolean"
                        }
                    },
                    "parameters": {
                        "parameter": {
                            "@name": "info",
                            "@transfer-ownership": "none",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "girepository/gicallableinfo.c",
                                "@line": "238",
                                "#text": "a #GICallableInfo"
                            },
                            "type": {
                                "@name": "CallableInfo",
                                "@c:type": "GICallableInfo*"
                            }
                        }
                    }
                },
                {
                    "@name": "cclosure_marshal_generic",
                    "@c:identifier": "gi_cclosure_marshal_generic",
                    "source-position": {
                        "@filename": "girepository/girepository.h",
                        "@line": "239"
                    },
                    "return-value": {
                        "@transfer-ownership": "none",
                        "type": {
                            "@name": "none",
                            "@c:type": "void"
                        }
                    },
                    "parameters": {
                        "parameter": [
                            {
                                "@name": "closure",
                                "@transfer-ownership": "none",
                                "type": {
                                    "@name": "GObject.Closure",
                                    "@c:type": "GClosure*"
                                }
                            },
                            {
                                "@name": "return_gvalue",
                                "@transfer-ownership": "none",
                                "type": {
                                    "@name": "GObject.Value",
                                    "@c:type": "GValue*"
                                }
                            },
                            {
                                "@name": "n_param_values",
                                "@transfer-ownership": "none",
                                "type": {
                                    "@name": "guint",
                                    "@c:type": "guint"
                                }
                            },
                            {
                                "@name": "param_values",
                                "@transfer-ownership": "none",
                                "type": {
                                    "@name": "GObject.Value",
                                    "@c:type": "const GValue*"
                                }
                            },
                            {
                                "@name": "invocation_hint",
                                "@transfer-ownership": "none",
                                "@nullable": "1",
                                "@allow-none": "1",
                                "type": {
                                    "@name": "gpointer",
                                    "@c:type": "gpointer"
                                }
                            },
                            {
                                "@name": "marshal_data",
                                "@transfer-ownership": "none",
                                "@nullable": "1",
                                "@allow-none": "1",
                                "type": {
                                    "@name": "gpointer",
                                    "@c:type": "gpointer"
                                }
                            }
                        ]
                    }
                },
                {
                    "@name": "constant_info_free_value",
                    "@c:identifier": "g_constant_info_free_value",
                    "@version": "1.32",
                    "@introspectable": "0",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "girepository/giconstantinfo.c",
                        "@line": "68",
                        "#text": "Free the value returned from g_constant_info_get_value()."
                    },
                    "source-position": {
                        "@filename": "girepository/giconstantinfo.h",
                        "@line": "48"
                    },
                    "return-value": {
                        "@transfer-ownership": "none",
                        "type": {
                            "@name": "none",
                            "@c:type": "void"
                        }
                    },
                    "parameters": {
                        "parameter": [
                            {
                                "@name": "info",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "girepository/giconstantinfo.c",
                                    "@line": "70",
                                    "#text": "a #GIConstantInfo"
                                },
                                "type": {
                                    "@name": "ConstantInfo",
                                    "@c:type": "GIConstantInfo*"
                                }
                            },
                            {
                                "@name": "value",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "girepository/giconstantinfo.c",
                                    "@line": "71",
                                    "#text": "the argument"
                                },
                                "type": {
                                    "@name": "Argument",
                                    "@c:type": "GIArgument*"
                                }
                            }
                        ]
                    }
                },
                {
                    "@name": "constant_info_get_type",
                    "@c:identifier": "g_constant_info_get_type",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "girepository/giconstantinfo.c",
                        "@line": "45",
                        "#text": "Obtain the type of the constant as a #GITypeInfo."
                    },
                    "source-position": {
                        "@filename": "girepository/giconstantinfo.h",
                        "@line": "45"
                    },
                    "return-value": {
                        "@transfer-ownership": "full",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "girepository/giconstantinfo.c",
                            "@line": "51",
                            "#text": "the #GITypeInfo. Free the struct by calling\ng_base_info_unref() when done."
                        },
                        "type": {
                            "@name": "TypeInfo",
                            "@c:type": "GITypeInfo*"
                        }
                    },
                    "parameters": {
                        "parameter": {
                            "@name": "info",
                            "@transfer-ownership": "none",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "girepository/giconstantinfo.c",
                                "@line": "47",
                                "#text": "a #GIConstantInfo"
                            },
                            "type": {
                                "@name": "ConstantInfo",
                                "@c:type": "GIConstantInfo*"
                            }
                        }
                    }
                },
                {
                    "@name": "constant_info_get_value",
                    "@c:identifier": "g_constant_info_get_value",
                    "@introspectable": "0",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "girepository/giconstantinfo.c",
                        "@line": "97",
                        "#text": "Obtain the value associated with the #GIConstantInfo and store it in the\n@value parameter. @argument needs to be allocated before passing it in.\nThe size of the constant value stored in @argument will be returned.\nFree the value with g_constant_info_free_value()."
                    },
                    "source-position": {
                        "@filename": "girepository/giconstantinfo.h",
                        "@line": "52"
                    },
                    "return-value": {
                        "@transfer-ownership": "none",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "girepository/giconstantinfo.c",
                            "@line": "107",
                            "#text": "size of the constant"
                        },
                        "type": {
                            "@name": "gint",
                            "@c:type": "gint"
                        }
                    },
                    "parameters": {
                        "parameter": [
                            {
                                "@name": "info",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "girepository/giconstantinfo.c",
                                    "@line": "99",
                                    "#text": "a #GIConstantInfo"
                                },
                                "type": {
                                    "@name": "ConstantInfo",
                                    "@c:type": "GIConstantInfo*"
                                }
                            },
                            {
                                "@name": "value",
                                "@direction": "out",
                                "@caller-allocates": "1",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "girepository/giconstantinfo.c",
                                    "@line": "100",
                                    "#text": "an argument"
                                },
                                "type": {
                                    "@name": "Argument",
                                    "@c:type": "GIArgument*"
                                }
                            }
                        ]
                    }
                },
                {
                    "@name": "enum_info_get_error_domain",
                    "@c:identifier": "g_enum_info_get_error_domain",
                    "@version": "1.30",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "girepository/gienuminfo.c",
                        "@line": "67",
                        "#text": "Obtain the string form of the quark for the error domain associated with\nthis enum, if any."
                    },
                    "source-position": {
                        "@filename": "girepository/gienuminfo.h",
                        "@line": "72"
                    },
                    "return-value": {
                        "@transfer-ownership": "none",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "girepository/gienuminfo.c",
                            "@line": "74",
                            "#text": "the string form of the error domain associated\nwith this enum, or %NULL."
                        },
                        "type": {
                            "@name": "utf8",
                            "@c:type": "const gchar*"
                        }
                    },
                    "parameters": {
                        "parameter": {
                            "@name": "info",
                            "@transfer-ownership": "none",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "girepository/gienuminfo.c",
                                "@line": "69",
                                "#text": "a #GIEnumInfo"
                            },
                            "type": {
                                "@name": "EnumInfo",
                                "@c:type": "GIEnumInfo*"
                            }
                        }
                    }
                },
                {
                    "@name": "enum_info_get_method",
                    "@c:identifier": "g_enum_info_get_method",
                    "@version": "1.30",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "girepository/gienuminfo.c",
                        "@line": "146",
                        "#text": "Obtain an enum type method at index @n."
                    },
                    "source-position": {
                        "@filename": "girepository/gienuminfo.h",
                        "@line": "65"
                    },
                    "return-value": {
                        "@transfer-ownership": "full",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "girepository/gienuminfo.c",
                            "@line": "153",
                            "#text": "the #GIFunctionInfo. Free the struct by calling\ng_base_info_unref() when done."
                        },
                        "type": {
                            "@name": "FunctionInfo",
                            "@c:type": "GIFunctionInfo*"
                        }
                    },
                    "parameters": {
                        "parameter": [
                            {
                                "@name": "info",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "girepository/gienuminfo.c",
                                    "@line": "148",
                                    "#text": "a #GIEnumInfo"
                                },
                                "type": {
                                    "@name": "EnumInfo",
                                    "@c:type": "GIEnumInfo*"
                                }
                            },
                            {
                                "@name": "n",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "girepository/gienuminfo.c",
                                    "@line": "149",
                                    "#text": "index of method to get"
                                },
                                "type": {
                                    "@name": "gint",
                                    "@c:type": "gint"
                                }
                            }
                        ]
                    }
                },
                {
                    "@name": "enum_info_get_n_methods",
                    "@c:identifier": "g_enum_info_get_n_methods",
                    "@version": "1.30",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "girepository/gienuminfo.c",
                        "@line": "123",
                        "#text": "Obtain the number of methods that this enum type has."
                    },
                    "source-position": {
                        "@filename": "girepository/gienuminfo.h",
                        "@line": "62"
                    },
                    "return-value": {
                        "@transfer-ownership": "none",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "girepository/gienuminfo.c",
                            "@line": "129",
                            "#text": "number of methods"
                        },
                        "type": {
                            "@name": "gint",
                            "@c:type": "gint"
                        }
                    },
                    "parameters": {
                        "parameter": {
                            "@name": "info",
                            "@transfer-ownership": "none",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "girepository/gienuminfo.c",
                                "@line": "125",
                                "#text": "a #GIEnumInfo"
                            },
                            "type": {
                                "@name": "EnumInfo",
                                "@c:type": "GIEnumInfo*"
                            }
                        }
                    }
                },
                {
                    "@name": "enum_info_get_n_values",
                    "@c:identifier": "g_enum_info_get_n_values",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "girepository/gienuminfo.c",
                        "@line": "45",
                        "#text": "Obtain the number of values this enumeration contains."
                    },
                    "source-position": {
                        "@filename": "girepository/gienuminfo.h",
                        "@line": "55"
                    },
                    "return-value": {
                        "@transfer-ownership": "none",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "girepository/gienuminfo.c",
                            "@line": "51",
                            "#text": "the number of enumeration values"
                        },
                        "type": {
                            "@name": "gint",
                            "@c:type": "gint"
                        }
                    },
                    "parameters": {
                        "parameter": {
                            "@name": "info",
                            "@transfer-ownership": "none",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "girepository/gienuminfo.c",
                                "@line": "47",
                                "#text": "a #GIEnumInfo"
                            },
                            "type": {
                                "@name": "EnumInfo",
                                "@c:type": "GIEnumInfo*"
                            }
                        }
                    }
                },
                {
                    "@name": "enum_info_get_storage_type",
                    "@c:identifier": "g_enum_info_get_storage_type",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "girepository/gienuminfo.c",
                        "@line": "180",
                        "#text": "Obtain the tag of the type used for the enum in the C ABI. This will\nwill be a signed or unsigned integral type.\n\nNote that in the current implementation the width of the type is\ncomputed correctly, but the signed or unsigned nature of the type\nmay not match the sign of the type used by the C compiler."
                    },
                    "source-position": {
                        "@filename": "girepository/gienuminfo.h",
                        "@line": "69"
                    },
                    "return-value": {
                        "@transfer-ownership": "none",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "girepository/gienuminfo.c",
                            "@line": "191",
                            "#text": "the storage type for the enumeration"
                        },
                        "type": {
                            "@name": "TypeTag",
                            "@c:type": "GITypeTag"
                        }
                    },
                    "parameters": {
                        "parameter": {
                            "@name": "info",
                            "@transfer-ownership": "none",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "girepository/gienuminfo.c",
                                "@line": "182",
                                "#text": "a #GIEnumInfo"
                            },
                            "type": {
                                "@name": "EnumInfo",
                                "@c:type": "GIEnumInfo*"
                            }
                        }
                    }
                },
                {
                    "@name": "enum_info_get_value",
                    "@c:identifier": "g_enum_info_get_value",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "girepository/gienuminfo.c",
                        "@line": "95",
                        "#text": "Obtain a value for this enumeration."
                    },
                    "source-position": {
                        "@filename": "girepository/gienuminfo.h",
                        "@line": "58"
                    },
                    "return-value": {
                        "@transfer-ownership": "full",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "girepository/gienuminfo.c",
                            "@line": "102",
                            "#text": "the enumeration value or %NULL if type tag is wrong,\nfree the struct with g_base_info_unref() when done."
                        },
                        "type": {
                            "@name": "ValueInfo",
                            "@c:type": "GIValueInfo*"
                        }
                    },
                    "parameters": {
                        "parameter": [
                            {
                                "@name": "info",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "girepository/gienuminfo.c",
                                    "@line": "97",
                                    "#text": "a #GIEnumInfo"
                                },
                                "type": {
                                    "@name": "EnumInfo",
                                    "@c:type": "GIEnumInfo*"
                                }
                            },
                            {
                                "@name": "n",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "girepository/gienuminfo.c",
                                    "@line": "98",
                                    "#text": "index of value to fetch"
                                },
                                "type": {
                                    "@name": "gint",
                                    "@c:type": "gint"
                                }
                            }
                        ]
                    }
                },
                {
                    "@name": "field_info_get_field",
                    "@c:identifier": "g_field_info_get_field",
                    "@introspectable": "0",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "girepository/gifieldinfo.c",
                        "@line": "161",
                        "#text": "Reads a field identified by a #GIFieldInfo from a C structure or\nunion.  This only handles fields of simple C types. It will fail\nfor a field of a composite type like a nested structure or union\neven if that is actually readable."
                    },
                    "source-position": {
                        "@filename": "girepository/gifieldinfo.h",
                        "@line": "58"
                    },
                    "return-value": {
                        "@transfer-ownership": "none",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "girepository/gifieldinfo.c",
                            "@line": "172",
                            "#text": "%TRUE if reading the field succeeded, otherwise %FALSE"
                        },
                        "type": {
                            "@name": "gboolean",
                            "@c:type": "gboolean"
                        }
                    },
                    "parameters": {
                        "parameter": [
                            {
                                "@name": "field_info",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "girepository/gifieldinfo.c",
                                    "@line": "163",
                                    "#text": "a #GIFieldInfo"
                                },
                                "type": {
                                    "@name": "FieldInfo",
                                    "@c:type": "GIFieldInfo*"
                                }
                            },
                            {
                                "@name": "mem",
                                "@transfer-ownership": "none",
                                "@nullable": "1",
                                "@allow-none": "1",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "girepository/gifieldinfo.c",
                                    "@line": "164",
                                    "#text": "pointer to a block of memory representing a C structure or union"
                                },
                                "type": {
                                    "@name": "gpointer",
                                    "@c:type": "gpointer"
                                }
                            },
                            {
                                "@name": "value",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "girepository/gifieldinfo.c",
                                    "@line": "165",
                                    "#text": "a #GIArgument into which to store the value retrieved"
                                },
                                "type": {
                                    "@name": "Argument",
                                    "@c:type": "GIArgument*"
                                }
                            }
                        ]
                    }
                },
                {
                    "@name": "field_info_get_flags",
                    "@c:identifier": "g_field_info_get_flags",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "girepository/gifieldinfo.c",
                        "@line": "48",
                        "#text": "Obtain the flags for this #GIFieldInfo. See #GIFieldInfoFlags for possible\nflag values."
                    },
                    "source-position": {
                        "@filename": "girepository/gifieldinfo.h",
                        "@line": "46"
                    },
                    "return-value": {
                        "@transfer-ownership": "none",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "girepository/gifieldinfo.c",
                            "@line": "55",
                            "#text": "the flags"
                        },
                        "type": {
                            "@name": "FieldInfoFlags",
                            "@c:type": "GIFieldInfoFlags"
                        }
                    },
                    "parameters": {
                        "parameter": {
                            "@name": "info",
                            "@transfer-ownership": "none",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "girepository/gifieldinfo.c",
                                "@line": "50",
                                "#text": "a #GIFieldInfo"
                            },
                            "type": {
                                "@name": "FieldInfo",
                                "@c:type": "GIFieldInfo*"
                            }
                        }
                    }
                },
                {
                    "@name": "field_info_get_offset",
                    "@c:identifier": "g_field_info_get_offset",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "girepository/gifieldinfo.c",
                        "@line": "103",
                        "#text": "Obtain the offset in bytes of the field member, this is relative\nto the beginning of the struct or union."
                    },
                    "source-position": {
                        "@filename": "girepository/gifieldinfo.h",
                        "@line": "52"
                    },
                    "return-value": {
                        "@transfer-ownership": "none",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "girepository/gifieldinfo.c",
                            "@line": "110",
                            "#text": "the field offset"
                        },
                        "type": {
                            "@name": "gint",
                            "@c:type": "gint"
                        }
                    },
                    "parameters": {
                        "parameter": {
                            "@name": "info",
                            "@transfer-ownership": "none",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "girepository/gifieldinfo.c",
                                "@line": "105",
                                "#text": "a #GIFieldInfo"
                            },
                            "type": {
                                "@name": "FieldInfo",
                                "@c:type": "GIFieldInfo*"
                            }
                        }
                    }
                },
                {
                    "@name": "field_info_get_size",
                    "@c:identifier": "g_field_info_get_size",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "girepository/gifieldinfo.c",
                        "@line": "80",
                        "#text": "Obtain the size in bits of the field member, this is how\nmuch space you need to allocate to store the field."
                    },
                    "source-position": {
                        "@filename": "girepository/gifieldinfo.h",
                        "@line": "49"
                    },
                    "return-value": {
                        "@transfer-ownership": "none",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "girepository/gifieldinfo.c",
                            "@line": "87",
                            "#text": "the field size"
                        },
                        "type": {
                            "@name": "gint",
                            "@c:type": "gint"
                        }
                    },
                    "parameters": {
                        "parameter": {
                            "@name": "info",
                            "@transfer-ownership": "none",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "girepository/gifieldinfo.c",
                                "@line": "82",
                                "#text": "a #GIFieldInfo"
                            },
                            "type": {
                                "@name": "FieldInfo",
                                "@c:type": "GIFieldInfo*"
                            }
                        }
                    }
                },
                {
                    "@name": "field_info_get_type",
                    "@c:identifier": "g_field_info_get_type",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "girepository/gifieldinfo.c",
                        "@line": "126",
                        "#text": "Obtain the type of a field as a #GITypeInfo."
                    },
                    "source-position": {
                        "@filename": "girepository/gifieldinfo.h",
                        "@line": "55"
                    },
                    "return-value": {
                        "@transfer-ownership": "full",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "girepository/gifieldinfo.c",
                            "@line": "132",
                            "#text": "the #GITypeInfo. Free the struct by calling\ng_base_info_unref() when done."
                        },
                        "type": {
                            "@name": "TypeInfo",
                            "@c:type": "GITypeInfo*"
                        }
                    },
                    "parameters": {
                        "parameter": {
                            "@name": "info",
                            "@transfer-ownership": "none",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "girepository/gifieldinfo.c",
                                "@line": "128",
                                "#text": "a #GIFieldInfo"
                            },
                            "type": {
                                "@name": "FieldInfo",
                                "@c:type": "GIFieldInfo*"
                            }
                        }
                    }
                },
                {
                    "@name": "field_info_set_field",
                    "@c:identifier": "g_field_info_set_field",
                    "@introspectable": "0",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "girepository/gifieldinfo.c",
                        "@line": "353",
                        "#text": "Writes a field identified by a #GIFieldInfo to a C structure or\nunion.  This only handles fields of simple C types. It will fail\nfor a field of a composite type like a nested structure or union\neven if that is actually writable. Note also that that it will refuse\nto write fields where memory management would by required. A field\nwith a type such as 'char *' must be set with a setter function."
                    },
                    "source-position": {
                        "@filename": "girepository/gifieldinfo.h",
                        "@line": "63"
                    },
                    "return-value": {
                        "@transfer-ownership": "none",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "girepository/gifieldinfo.c",
                            "@line": "366",
                            "#text": "%TRUE if writing the field succeeded, otherwise %FALSE"
                        },
                        "type": {
                            "@name": "gboolean",
                            "@c:type": "gboolean"
                        }
                    },
                    "parameters": {
                        "parameter": [
                            {
                                "@name": "field_info",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "girepository/gifieldinfo.c",
                                    "@line": "355",
                                    "#text": "a #GIFieldInfo"
                                },
                                "type": {
                                    "@name": "FieldInfo",
                                    "@c:type": "GIFieldInfo*"
                                }
                            },
                            {
                                "@name": "mem",
                                "@transfer-ownership": "none",
                                "@nullable": "1",
                                "@allow-none": "1",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "girepository/gifieldinfo.c",
                                    "@line": "356",
                                    "#text": "pointer to a block of memory representing a C structure or union"
                                },
                                "type": {
                                    "@name": "gpointer",
                                    "@c:type": "gpointer"
                                }
                            },
                            {
                                "@name": "value",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "girepository/gifieldinfo.c",
                                    "@line": "357",
                                    "#text": "a #GIArgument holding the value to store"
                                },
                                "type": {
                                    "@name": "Argument",
                                    "@c:type": "const GIArgument*"
                                }
                            }
                        ]
                    }
                },
                {
                    "@name": "function_info_get_flags",
                    "@c:identifier": "g_function_info_get_flags",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "girepository/gifunctioninfo.c",
                        "@line": "98",
                        "#text": "Obtain the #GIFunctionInfoFlags for the @info."
                    },
                    "source-position": {
                        "@filename": "girepository/gifunctioninfo.h",
                        "@line": "48"
                    },
                    "return-value": {
                        "@transfer-ownership": "none",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "girepository/gifunctioninfo.c",
                            "@line": "104",
                            "#text": "the flags"
                        },
                        "type": {
                            "@name": "FunctionInfoFlags",
                            "@c:type": "GIFunctionInfoFlags"
                        }
                    },
                    "parameters": {
                        "parameter": {
                            "@name": "info",
                            "@transfer-ownership": "none",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "girepository/gifunctioninfo.c",
                                "@line": "100",
                                "#text": "a #GIFunctionInfo"
                            },
                            "type": {
                                "@name": "FunctionInfo",
                                "@c:type": "GIFunctionInfo*"
                            }
                        }
                    }
                },
                {
                    "@name": "function_info_get_property",
                    "@c:identifier": "g_function_info_get_property",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "girepository/gifunctioninfo.c",
                        "@line": "143",
                        "#text": "Obtain the property associated with this #GIFunctionInfo.\nOnly #GIFunctionInfo with the flag %GI_FUNCTION_IS_GETTER or\n%GI_FUNCTION_IS_SETTER have a property set. For other cases,\n%NULL will be returned."
                    },
                    "source-position": {
                        "@filename": "girepository/gifunctioninfo.h",
                        "@line": "51"
                    },
                    "return-value": {
                        "@transfer-ownership": "full",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "girepository/gifunctioninfo.c",
                            "@line": "152",
                            "#text": "the property or %NULL if not set. Free it with\ng_base_info_unref() when done."
                        },
                        "type": {
                            "@name": "PropertyInfo",
                            "@c:type": "GIPropertyInfo*"
                        }
                    },
                    "parameters": {
                        "parameter": {
                            "@name": "info",
                            "@transfer-ownership": "none",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "girepository/gifunctioninfo.c",
                                "@line": "145",
                                "#text": "a #GIFunctionInfo"
                            },
                            "type": {
                                "@name": "FunctionInfo",
                                "@c:type": "GIFunctionInfo*"
                            }
                        }
                    }
                },
                {
                    "@name": "function_info_get_symbol",
                    "@c:identifier": "g_function_info_get_symbol",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "girepository/gifunctioninfo.c",
                        "@line": "73",
                        "#text": "Obtain the symbol of the function. The symbol is the name of the\nexported function, suitable to be used as an argument to\ng_module_symbol()."
                    },
                    "source-position": {
                        "@filename": "girepository/gifunctioninfo.h",
                        "@line": "45"
                    },
                    "return-value": {
                        "@transfer-ownership": "none",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "girepository/gifunctioninfo.c",
                            "@line": "81",
                            "#text": "the symbol"
                        },
                        "type": {
                            "@name": "utf8",
                            "@c:type": "const gchar*"
                        }
                    },
                    "parameters": {
                        "parameter": {
                            "@name": "info",
                            "@transfer-ownership": "none",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "girepository/gifunctioninfo.c",
                                "@line": "75",
                                "#text": "a #GIFunctionInfo"
                            },
                            "type": {
                                "@name": "FunctionInfo",
                                "@c:type": "GIFunctionInfo*"
                            }
                        }
                    }
                },
                {
                    "@name": "function_info_get_vfunc",
                    "@c:identifier": "g_function_info_get_vfunc",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "girepository/gifunctioninfo.c",
                        "@line": "184",
                        "#text": "Obtain the virtual function associated with this #GIFunctionInfo.\nOnly #GIFunctionInfo with the flag %GI_FUNCTION_WRAPS_VFUNC has\na virtual function set. For other cases, %NULL will be returned."
                    },
                    "source-position": {
                        "@filename": "girepository/gifunctioninfo.h",
                        "@line": "54"
                    },
                    "return-value": {
                        "@transfer-ownership": "full",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "girepository/gifunctioninfo.c",
                            "@line": "192",
                            "#text": "the virtual function or %NULL if not set.\nFree it by calling g_base_info_unref() when done."
                        },
                        "type": {
                            "@name": "VFuncInfo",
                            "@c:type": "GIVFuncInfo*"
                        }
                    },
                    "parameters": {
                        "parameter": {
                            "@name": "info",
                            "@transfer-ownership": "none",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "girepository/gifunctioninfo.c",
                                "@line": "186",
                                "#text": "a #GIFunctionInfo"
                            },
                            "type": {
                                "@name": "FunctionInfo",
                                "@c:type": "GIFunctionInfo*"
                            }
                        }
                    }
                },
                {
                    "@name": "function_info_invoke",
                    "@c:identifier": "g_function_info_invoke",
                    "@introspectable": "0",
                    "@throws": "1",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "girepository/gifunctioninfo.c",
                        "@line": "228",
                        "#text": "Invokes the function described in @info with the given\narguments. Note that inout parameters must appear in both\nargument lists. This function uses dlsym() to obtain a pointer\nto the function, so the library or shared object containing the\ndescribed function must either be linked to the caller, or must\nhave been g_module_symbol()<!-- -->ed before calling this function."
                    },
                    "source-position": {
                        "@filename": "girepository/gifunctioninfo.h",
                        "@line": "87"
                    },
                    "return-value": {
                        "@transfer-ownership": "none",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "girepository/gifunctioninfo.c",
                            "@line": "250",
                            "#text": "%TRUE if the function has been invoked, %FALSE if an\n  error occurred."
                        },
                        "type": {
                            "@name": "gboolean",
                            "@c:type": "gboolean"
                        }
                    },
                    "parameters": {
                        "parameter": [
                            {
                                "@name": "info",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "girepository/gifunctioninfo.c",
                                    "@line": "230",
                                    "#text": "a #GIFunctionInfo describing the function to invoke"
                                },
                                "type": {
                                    "@name": "FunctionInfo",
                                    "@c:type": "GIFunctionInfo*"
                                }
                            },
                            {
                                "@name": "in_args",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "girepository/gifunctioninfo.c",
                                    "@line": "231",
                                    "#text": "an array of #GIArgument<!-- -->s, one for each in\n   parameter of @info. If there are no in parameter, @in_args\n   can be %NULL"
                                },
                                "array": {
                                    "@length": "2",
                                    "@zero-terminated": "0",
                                    "@c:type": "const GIArgument*",
                                    "type": {
                                        "@name": "Argument",
                                        "@c:type": "GIArgument"
                                    }
                                }
                            },
                            {
                                "@name": "n_in_args",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "girepository/gifunctioninfo.c",
                                    "@line": "234",
                                    "#text": "the length of the @in_args array"
                                },
                                "type": {
                                    "@name": "gint",
                                    "@c:type": "int"
                                }
                            },
                            {
                                "@name": "out_args",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "girepository/gifunctioninfo.c",
                                    "@line": "235",
                                    "#text": "an array of #GIArgument<!-- -->s, one for each out\n   parameter of @info. If there are no out parameters, @out_args\n   may be %NULL"
                                },
                                "array": {
                                    "@length": "4",
                                    "@zero-terminated": "0",
                                    "@c:type": "const GIArgument*",
                                    "type": {
                                        "@name": "Argument",
                                        "@c:type": "GIArgument"
                                    }
                                }
                            },
                            {
                                "@name": "n_out_args",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "girepository/gifunctioninfo.c",
                                    "@line": "238",
                                    "#text": "the length of the @out_args array"
                                },
                                "type": {
                                    "@name": "gint",
                                    "@c:type": "int"
                                }
                            },
                            {
                                "@name": "return_value",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "girepository/gifunctioninfo.c",
                                    "@line": "239",
                                    "#text": "return location for the return value of the\n   function."
                                },
                                "type": {
                                    "@name": "Argument",
                                    "@c:type": "GIArgument*"
                                }
                            }
                        ]
                    }
                },
                {
                    "@name": "get_major_version",
                    "@c:identifier": "gi_get_major_version",
                    "@version": "1.60",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "girepository/giversion.c",
                        "@line": "68",
                        "#text": "Returns the major version number of the girepository library.\n(e.g. in version 1.58.2 this is 1.)"
                    },
                    "source-position": {
                        "@filename": "redhat-linux-build/girepository/giversion.h",
                        "@line": "39"
                    },
                    "return-value": {
                        "@transfer-ownership": "none",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "girepository/giversion.c",
                            "@line": "74",
                            "#text": "the major version number of the girepository library"
                        },
                        "type": {
                            "@name": "guint",
                            "@c:type": "guint"
                        }
                    }
                },
                {
                    "@name": "get_micro_version",
                    "@c:identifier": "gi_get_micro_version",
                    "@version": "1.60",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "girepository/giversion.c",
                        "@line": "100",
                        "#text": "Returns the micro version number of the girepository library.\n(e.g. in version 1.58.2 this is 2.)"
                    },
                    "source-position": {
                        "@filename": "redhat-linux-build/girepository/giversion.h",
                        "@line": "43"
                    },
                    "return-value": {
                        "@transfer-ownership": "none",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "girepository/giversion.c",
                            "@line": "106",
                            "#text": "the micro version number of the girepository library"
                        },
                        "type": {
                            "@name": "guint",
                            "@c:type": "guint"
                        }
                    }
                },
                {
                    "@name": "get_minor_version",
                    "@c:identifier": "gi_get_minor_version",
                    "@version": "1.60",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "girepository/giversion.c",
                        "@line": "84",
                        "#text": "Returns the minor version number of the girepository library.\n(e.g. in version 1.58.2 this is 58.)"
                    },
                    "source-position": {
                        "@filename": "redhat-linux-build/girepository/giversion.h",
                        "@line": "41"
                    },
                    "return-value": {
                        "@transfer-ownership": "none",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "girepository/giversion.c",
                            "@line": "90",
                            "#text": "the minor version number of the girepository library"
                        },
                        "type": {
                            "@name": "guint",
                            "@c:type": "guint"
                        }
                    }
                },
                {
                    "@name": "info_new",
                    "@c:identifier": "g_info_new",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "girepository/gibaseinfo.c",
                        "@line": "76",
                        "#text": "TODO"
                    },
                    "source-position": {
                        "@filename": "girepository/gibaseinfo.h",
                        "@line": "95"
                    },
                    "return-value": {
                        "@transfer-ownership": "full",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "girepository/gibaseinfo.c",
                            "@line": "85",
                            "#text": "TODO"
                        },
                        "type": {
                            "@name": "BaseInfo",
                            "@c:type": "GIBaseInfo*"
                        }
                    },
                    "parameters": {
                        "parameter": [
                            {
                                "@name": "type",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "girepository/gibaseinfo.c",
                                    "@line": "78",
                                    "#text": "TODO"
                                },
                                "type": {
                                    "@name": "InfoType",
                                    "@c:type": "GIInfoType"
                                }
                            },
                            {
                                "@name": "container",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "girepository/gibaseinfo.c",
                                    "@line": "79",
                                    "#text": "TODO"
                                },
                                "type": {
                                    "@name": "BaseInfo",
                                    "@c:type": "GIBaseInfo*"
                                }
                            },
                            {
                                "@name": "typelib",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "girepository/gibaseinfo.c",
                                    "@line": "80",
                                    "#text": "TODO"
                                },
                                "type": {
                                    "@name": "Typelib",
                                    "@c:type": "GITypelib*"
                                }
                            },
                            {
                                "@name": "offset",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "girepository/gibaseinfo.c",
                                    "@line": "81",
                                    "#text": "TODO"
                                },
                                "type": {
                                    "@name": "guint32",
                                    "@c:type": "guint32"
                                }
                            }
                        ]
                    }
                },
                {
                    "@name": "info_type_to_string",
                    "@c:identifier": "g_info_type_to_string",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "girepository/girepository.c",
                        "@line": "1826",
                        "#text": "Obtain a string representation of @type"
                    },
                    "source-position": {
                        "@filename": "girepository/gitypeinfo.h",
                        "@line": "109"
                    },
                    "return-value": {
                        "@transfer-ownership": "none",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "girepository/girepository.c",
                            "@line": "1832",
                            "#text": "the string"
                        },
                        "type": {
                            "@name": "utf8",
                            "@c:type": "const gchar*"
                        }
                    },
                    "parameters": {
                        "parameter": {
                            "@name": "type",
                            "@transfer-ownership": "none",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "girepository/girepository.c",
                                "@line": "1828",
                                "#text": "the info type"
                            },
                            "type": {
                                "@name": "InfoType",
                                "@c:type": "GIInfoType"
                            }
                        }
                    }
                },
                {
                    "@name": "interface_info_find_method",
                    "@c:identifier": "g_interface_info_find_method",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "girepository/giinterfaceinfo.c",
                        "@line": "204",
                        "#text": "Obtain a method of the interface type given a @name. %NULL will be\nreturned if there's no method available with that name."
                    },
                    "source-position": {
                        "@filename": "girepository/giinterfaceinfo.h",
                        "@line": "66"
                    },
                    "return-value": {
                        "@transfer-ownership": "full",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "girepository/giinterfaceinfo.c",
                            "@line": "212",
                            "#text": "the #GIFunctionInfo or %NULL if none found.\nFree the struct by calling g_base_info_unref() when done."
                        },
                        "type": {
                            "@name": "FunctionInfo",
                            "@c:type": "GIFunctionInfo*"
                        }
                    },
                    "parameters": {
                        "parameter": [
                            {
                                "@name": "info",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "girepository/giinterfaceinfo.c",
                                    "@line": "206",
                                    "#text": "a #GIInterfaceInfo"
                                },
                                "type": {
                                    "@name": "InterfaceInfo",
                                    "@c:type": "GIInterfaceInfo*"
                                }
                            },
                            {
                                "@name": "name",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "girepository/giinterfaceinfo.c",
                                    "@line": "207",
                                    "#text": "name of method to obtain"
                                },
                                "type": {
                                    "@name": "utf8",
                                    "@c:type": "const gchar*"
                                }
                            }
                        ]
                    }
                },
                {
                    "@name": "interface_info_find_signal",
                    "@c:identifier": "g_interface_info_find_signal",
                    "@version": "1.34",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "girepository/giinterfaceinfo.c",
                        "@line": "288",
                        "#text": "TODO"
                    },
                    "source-position": {
                        "@filename": "girepository/giinterfaceinfo.h",
                        "@line": "77"
                    },
                    "return-value": {
                        "@transfer-ownership": "full",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "girepository/giinterfaceinfo.c",
                            "@line": "295",
                            "#text": "Info for the signal with name @name in @info, or\n%NULL on failure."
                        },
                        "type": {
                            "@name": "SignalInfo",
                            "@c:type": "GISignalInfo*"
                        }
                    },
                    "parameters": {
                        "parameter": [
                            {
                                "@name": "info",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "girepository/giinterfaceinfo.c",
                                    "@line": "290",
                                    "#text": "a #GIInterfaceInfo"
                                },
                                "type": {
                                    "@name": "InterfaceInfo",
                                    "@c:type": "GIInterfaceInfo*"
                                }
                            },
                            {
                                "@name": "name",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "girepository/giinterfaceinfo.c",
                                    "@line": "291",
                                    "#text": "Name of signal"
                                },
                                "type": {
                                    "@name": "utf8",
                                    "@c:type": "const gchar*"
                                }
                            }
                        ]
                    }
                },
                {
                    "@name": "interface_info_find_vfunc",
                    "@c:identifier": "g_interface_info_find_vfunc",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "girepository/giinterfaceinfo.c",
                        "@line": "380",
                        "#text": "Locate a virtual function slot with name @name. See the documentation\nfor g_object_info_find_vfunc() for more information on virtuals."
                    },
                    "source-position": {
                        "@filename": "girepository/giinterfaceinfo.h",
                        "@line": "88"
                    },
                    "return-value": {
                        "@transfer-ownership": "full",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "girepository/giinterfaceinfo.c",
                            "@line": "388",
                            "#text": "the #GIVFuncInfo, or %NULL. Free it with\ng_base_info_unref() when done."
                        },
                        "type": {
                            "@name": "VFuncInfo",
                            "@c:type": "GIVFuncInfo*"
                        }
                    },
                    "parameters": {
                        "parameter": [
                            {
                                "@name": "info",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "girepository/giinterfaceinfo.c",
                                    "@line": "382",
                                    "#text": "a #GIInterfaceInfo"
                                },
                                "type": {
                                    "@name": "InterfaceInfo",
                                    "@c:type": "GIInterfaceInfo*"
                                }
                            },
                            {
                                "@name": "name",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "girepository/giinterfaceinfo.c",
                                    "@line": "383",
                                    "#text": "The name of a virtual function to find."
                                },
                                "type": {
                                    "@name": "utf8",
                                    "@c:type": "const gchar*"
                                }
                            }
                        ]
                    }
                },
                {
                    "@name": "interface_info_get_constant",
                    "@c:identifier": "g_interface_info_get_constant",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "girepository/giinterfaceinfo.c",
                        "@line": "437",
                        "#text": "Obtain an interface type constant at index @n."
                    },
                    "source-position": {
                        "@filename": "girepository/giinterfaceinfo.h",
                        "@line": "95"
                    },
                    "return-value": {
                        "@transfer-ownership": "full",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "girepository/giinterfaceinfo.c",
                            "@line": "444",
                            "#text": "the #GIConstantInfo. Free the struct by calling\ng_base_info_unref() when done."
                        },
                        "type": {
                            "@name": "ConstantInfo",
                            "@c:type": "GIConstantInfo*"
                        }
                    },
                    "parameters": {
                        "parameter": [
                            {
                                "@name": "info",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "girepository/giinterfaceinfo.c",
                                    "@line": "439",
                                    "#text": "a #GIInterfaceInfo"
                                },
                                "type": {
                                    "@name": "InterfaceInfo",
                                    "@c:type": "GIInterfaceInfo*"
                                }
                            },
                            {
                                "@name": "n",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "girepository/giinterfaceinfo.c",
                                    "@line": "440",
                                    "#text": "index of constant to get"
                                },
                                "type": {
                                    "@name": "gint",
                                    "@c:type": "gint"
                                }
                            }
                        ]
                    }
                },
                {
                    "@name": "interface_info_get_iface_struct",
                    "@c:identifier": "g_interface_info_get_iface_struct",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "girepository/giinterfaceinfo.c",
                        "@line": "474",
                        "#text": "Returns the layout C structure associated with this #GInterface."
                    },
                    "source-position": {
                        "@filename": "girepository/giinterfaceinfo.h",
                        "@line": "100"
                    },
                    "return-value": {
                        "@transfer-ownership": "full",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "girepository/giinterfaceinfo.c",
                            "@line": "480",
                            "#text": "the #GIStructInfo or %NULL. Free it with\ng_base_info_unref() when done."
                        },
                        "type": {
                            "@name": "StructInfo",
                            "@c:type": "GIStructInfo*"
                        }
                    },
                    "parameters": {
                        "parameter": {
                            "@name": "info",
                            "@transfer-ownership": "none",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "girepository/giinterfaceinfo.c",
                                "@line": "476",
                                "#text": "a #GIInterfaceInfo"
                            },
                            "type": {
                                "@name": "InterfaceInfo",
                                "@c:type": "GIInterfaceInfo*"
                            }
                        }
                    }
                },
                {
                    "@name": "interface_info_get_method",
                    "@c:identifier": "g_interface_info_get_method",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "girepository/giinterfaceinfo.c",
                        "@line": "170",
                        "#text": "Obtain an interface type method at index @n."
                    },
                    "source-position": {
                        "@filename": "girepository/giinterfaceinfo.h",
                        "@line": "62"
                    },
                    "return-value": {
                        "@transfer-ownership": "full",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "girepository/giinterfaceinfo.c",
                            "@line": "177",
                            "#text": "the #GIFunctionInfo. Free the struct by calling\ng_base_info_unref() when done."
                        },
                        "type": {
                            "@name": "FunctionInfo",
                            "@c:type": "GIFunctionInfo*"
                        }
                    },
                    "parameters": {
                        "parameter": [
                            {
                                "@name": "info",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "girepository/giinterfaceinfo.c",
                                    "@line": "172",
                                    "#text": "a #GIInterfaceInfo"
                                },
                                "type": {
                                    "@name": "InterfaceInfo",
                                    "@c:type": "GIInterfaceInfo*"
                                }
                            },
                            {
                                "@name": "n",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "girepository/giinterfaceinfo.c",
                                    "@line": "173",
                                    "#text": "index of method to get"
                                },
                                "type": {
                                    "@name": "gint",
                                    "@c:type": "gint"
                                }
                            }
                        ]
                    }
                },
                {
                    "@name": "interface_info_get_n_constants",
                    "@c:identifier": "g_interface_info_get_n_constants",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "girepository/giinterfaceinfo.c",
                        "@line": "415",
                        "#text": "Obtain the number of constants that this interface type has."
                    },
                    "source-position": {
                        "@filename": "girepository/giinterfaceinfo.h",
                        "@line": "92"
                    },
                    "return-value": {
                        "@transfer-ownership": "none",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "girepository/giinterfaceinfo.c",
                            "@line": "421",
                            "#text": "number of constants"
                        },
                        "type": {
                            "@name": "gint",
                            "@c:type": "gint"
                        }
                    },
                    "parameters": {
                        "parameter": {
                            "@name": "info",
                            "@transfer-ownership": "none",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "girepository/giinterfaceinfo.c",
                                "@line": "417",
                                "#text": "a #GIInterfaceInfo"
                            },
                            "type": {
                                "@name": "InterfaceInfo",
                                "@c:type": "GIInterfaceInfo*"
                            }
                        }
                    }
                },
                {
                    "@name": "interface_info_get_n_methods",
                    "@c:identifier": "g_interface_info_get_n_methods",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "girepository/giinterfaceinfo.c",
                        "@line": "148",
                        "#text": "Obtain the number of methods that this interface type has."
                    },
                    "source-position": {
                        "@filename": "girepository/giinterfaceinfo.h",
                        "@line": "59"
                    },
                    "return-value": {
                        "@transfer-ownership": "none",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "girepository/giinterfaceinfo.c",
                            "@line": "154",
                            "#text": "number of methods"
                        },
                        "type": {
                            "@name": "gint",
                            "@c:type": "gint"
                        }
                    },
                    "parameters": {
                        "parameter": {
                            "@name": "info",
                            "@transfer-ownership": "none",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "girepository/giinterfaceinfo.c",
                                "@line": "150",
                                "#text": "a #GIInterfaceInfo"
                            },
                            "type": {
                                "@name": "InterfaceInfo",
                                "@c:type": "GIInterfaceInfo*"
                            }
                        }
                    }
                },
                {
                    "@name": "interface_info_get_n_prerequisites",
                    "@c:identifier": "g_interface_info_get_n_prerequisites",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "girepository/giinterfaceinfo.c",
                        "@line": "42",
                        "#text": "Obtain the number of prerequisites for this interface type.\nA prerequisites is another interface that needs to be implemented for\ninterface, similar to an base class for GObjects."
                    },
                    "source-position": {
                        "@filename": "girepository/giinterfaceinfo.h",
                        "@line": "45"
                    },
                    "return-value": {
                        "@transfer-ownership": "none",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "girepository/giinterfaceinfo.c",
                            "@line": "50",
                            "#text": "number of prerequisites"
                        },
                        "type": {
                            "@name": "gint",
                            "@c:type": "gint"
                        }
                    },
                    "parameters": {
                        "parameter": {
                            "@name": "info",
                            "@transfer-ownership": "none",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "girepository/giinterfaceinfo.c",
                                "@line": "44",
                                "#text": "a #GIInterfaceInfo"
                            },
                            "type": {
                                "@name": "InterfaceInfo",
                                "@c:type": "GIInterfaceInfo*"
                            }
                        }
                    }
                },
                {
                    "@name": "interface_info_get_n_properties",
                    "@c:identifier": "g_interface_info_get_n_properties",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "girepository/giinterfaceinfo.c",
                        "@line": "93",
                        "#text": "Obtain the number of properties that this interface type has."
                    },
                    "source-position": {
                        "@filename": "girepository/giinterfaceinfo.h",
                        "@line": "52"
                    },
                    "return-value": {
                        "@transfer-ownership": "none",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "girepository/giinterfaceinfo.c",
                            "@line": "99",
                            "#text": "number of properties"
                        },
                        "type": {
                            "@name": "gint",
                            "@c:type": "gint"
                        }
                    },
                    "parameters": {
                        "parameter": {
                            "@name": "info",
                            "@transfer-ownership": "none",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "girepository/giinterfaceinfo.c",
                                "@line": "95",
                                "#text": "a #GIInterfaceInfo"
                            },
                            "type": {
                                "@name": "InterfaceInfo",
                                "@c:type": "GIInterfaceInfo*"
                            }
                        }
                    }
                },
                {
                    "@name": "interface_info_get_n_signals",
                    "@c:identifier": "g_interface_info_get_n_signals",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "girepository/giinterfaceinfo.c",
                        "@line": "231",
                        "#text": "Obtain the number of signals that this interface type has."
                    },
                    "source-position": {
                        "@filename": "girepository/giinterfaceinfo.h",
                        "@line": "70"
                    },
                    "return-value": {
                        "@transfer-ownership": "none",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "girepository/giinterfaceinfo.c",
                            "@line": "237",
                            "#text": "number of signals"
                        },
                        "type": {
                            "@name": "gint",
                            "@c:type": "gint"
                        }
                    },
                    "parameters": {
                        "parameter": {
                            "@name": "info",
                            "@transfer-ownership": "none",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "girepository/giinterfaceinfo.c",
                                "@line": "233",
                                "#text": "a #GIInterfaceInfo"
                            },
                            "type": {
                                "@name": "InterfaceInfo",
                                "@c:type": "GIInterfaceInfo*"
                            }
                        }
                    }
                },
                {
                    "@name": "interface_info_get_n_vfuncs",
                    "@c:identifier": "g_interface_info_get_n_vfuncs",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "girepository/giinterfaceinfo.c",
                        "@line": "322",
                        "#text": "Obtain the number of virtual functions that this interface type has."
                    },
                    "source-position": {
                        "@filename": "girepository/giinterfaceinfo.h",
                        "@line": "81"
                    },
                    "return-value": {
                        "@transfer-ownership": "none",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "girepository/giinterfaceinfo.c",
                            "@line": "328",
                            "#text": "number of virtual functions"
                        },
                        "type": {
                            "@name": "gint",
                            "@c:type": "gint"
                        }
                    },
                    "parameters": {
                        "parameter": {
                            "@name": "info",
                            "@transfer-ownership": "none",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "girepository/giinterfaceinfo.c",
                                "@line": "324",
                                "#text": "a #GIInterfaceInfo"
                            },
                            "type": {
                                "@name": "InterfaceInfo",
                                "@c:type": "GIInterfaceInfo*"
                            }
                        }
                    }
                },
                {
                    "@name": "interface_info_get_prerequisite",
                    "@c:identifier": "g_interface_info_get_prerequisite",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "girepository/giinterfaceinfo.c",
                        "@line": "66",
                        "#text": "Obtain an interface type prerequisites index @n."
                    },
                    "source-position": {
                        "@filename": "girepository/giinterfaceinfo.h",
                        "@line": "48"
                    },
                    "return-value": {
                        "@transfer-ownership": "full",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "girepository/giinterfaceinfo.c",
                            "@line": "73",
                            "#text": "the prerequisites as a #GIBaseInfo. Free the struct by calling\ng_base_info_unref() when done."
                        },
                        "type": {
                            "@name": "BaseInfo",
                            "@c:type": "GIBaseInfo*"
                        }
                    },
                    "parameters": {
                        "parameter": [
                            {
                                "@name": "info",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "girepository/giinterfaceinfo.c",
                                    "@line": "68",
                                    "#text": "a #GIInterfaceInfo"
                                },
                                "type": {
                                    "@name": "InterfaceInfo",
                                    "@c:type": "GIInterfaceInfo*"
                                }
                            },
                            {
                                "@name": "n",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "girepository/giinterfaceinfo.c",
                                    "@line": "69",
                                    "#text": "index of prerequisites to get"
                                },
                                "type": {
                                    "@name": "gint",
                                    "@c:type": "gint"
                                }
                            }
                        ]
                    }
                },
                {
                    "@name": "interface_info_get_property",
                    "@c:identifier": "g_interface_info_get_property",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "girepository/giinterfaceinfo.c",
                        "@line": "115",
                        "#text": "Obtain an interface type property at index @n."
                    },
                    "source-position": {
                        "@filename": "girepository/giinterfaceinfo.h",
                        "@line": "55"
                    },
                    "return-value": {
                        "@transfer-ownership": "full",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "girepository/giinterfaceinfo.c",
                            "@line": "122",
                            "#text": "the #GIPropertyInfo. Free the struct by calling\ng_base_info_unref() when done."
                        },
                        "type": {
                            "@name": "PropertyInfo",
                            "@c:type": "GIPropertyInfo*"
                        }
                    },
                    "parameters": {
                        "parameter": [
                            {
                                "@name": "info",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "girepository/giinterfaceinfo.c",
                                    "@line": "117",
                                    "#text": "a #GIInterfaceInfo"
                                },
                                "type": {
                                    "@name": "InterfaceInfo",
                                    "@c:type": "GIInterfaceInfo*"
                                }
                            },
                            {
                                "@name": "n",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "girepository/giinterfaceinfo.c",
                                    "@line": "118",
                                    "#text": "index of property to get"
                                },
                                "type": {
                                    "@name": "gint",
                                    "@c:type": "gint"
                                }
                            }
                        ]
                    }
                },
                {
                    "@name": "interface_info_get_signal",
                    "@c:identifier": "g_interface_info_get_signal",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "girepository/giinterfaceinfo.c",
                        "@line": "253",
                        "#text": "Obtain an interface type signal at index @n."
                    },
                    "source-position": {
                        "@filename": "girepository/giinterfaceinfo.h",
                        "@line": "73"
                    },
                    "return-value": {
                        "@transfer-ownership": "full",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "girepository/giinterfaceinfo.c",
                            "@line": "260",
                            "#text": "the #GISignalInfo. Free the struct by calling\ng_base_info_unref() when done."
                        },
                        "type": {
                            "@name": "SignalInfo",
                            "@c:type": "GISignalInfo*"
                        }
                    },
                    "parameters": {
                        "parameter": [
                            {
                                "@name": "info",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "girepository/giinterfaceinfo.c",
                                    "@line": "255",
                                    "#text": "a #GIInterfaceInfo"
                                },
                                "type": {
                                    "@name": "InterfaceInfo",
                                    "@c:type": "GIInterfaceInfo*"
                                }
                            },
                            {
                                "@name": "n",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "girepository/giinterfaceinfo.c",
                                    "@line": "256",
                                    "#text": "index of signal to get"
                                },
                                "type": {
                                    "@name": "gint",
                                    "@c:type": "gint"
                                }
                            }
                        ]
                    }
                },
                {
                    "@name": "interface_info_get_vfunc",
                    "@c:identifier": "g_interface_info_get_vfunc",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "girepository/giinterfaceinfo.c",
                        "@line": "344",
                        "#text": "Obtain an interface type virtual function at index @n."
                    },
                    "source-position": {
                        "@filename": "girepository/giinterfaceinfo.h",
                        "@line": "84"
                    },
                    "return-value": {
                        "@transfer-ownership": "full",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "girepository/giinterfaceinfo.c",
                            "@line": "351",
                            "#text": "the #GIVFuncInfo. Free the struct by calling\ng_base_info_unref() when done."
                        },
                        "type": {
                            "@name": "VFuncInfo",
                            "@c:type": "GIVFuncInfo*"
                        }
                    },
                    "parameters": {
                        "parameter": [
                            {
                                "@name": "info",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "girepository/giinterfaceinfo.c",
                                    "@line": "346",
                                    "#text": "a #GIInterfaceInfo"
                                },
                                "type": {
                                    "@name": "InterfaceInfo",
                                    "@c:type": "GIInterfaceInfo*"
                                }
                            },
                            {
                                "@name": "n",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "girepository/giinterfaceinfo.c",
                                    "@line": "347",
                                    "#text": "index of virtual function to get"
                                },
                                "type": {
                                    "@name": "gint",
                                    "@c:type": "gint"
                                }
                            }
                        ]
                    }
                },
                {
                    "@name": "invoke_error_quark",
                    "@c:identifier": "g_invoke_error_quark",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "girepository/gifunctioninfo.c",
                        "@line": "212",
                        "#text": "TODO"
                    },
                    "return-value": {
                        "@transfer-ownership": "none",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "girepository/gifunctioninfo.c",
                            "@line": "217",
                            "#text": "TODO"
                        },
                        "type": {
                            "@name": "GLib.Quark",
                            "@c:type": "GQuark"
                        }
                    }
                },
                {
                    "@name": "object_info_find_method",
                    "@c:identifier": "g_object_info_find_method",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "girepository/giobjectinfo.c",
                        "@line": "435",
                        "#text": "Obtain a method of the object type given a @name. %NULL will be\nreturned if there's no method available with that name."
                    },
                    "source-position": {
                        "@filename": "girepository/giobjectinfo.h",
                        "@line": "128"
                    },
                    "return-value": {
                        "@transfer-ownership": "full",
                        "@nullable": "1",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "girepository/giobjectinfo.c",
                            "@line": "443",
                            "#text": "the #GIFunctionInfo. Free the struct by calling\ng_base_info_unref() when done."
                        },
                        "type": {
                            "@name": "FunctionInfo",
                            "@c:type": "GIFunctionInfo*"
                        }
                    },
                    "parameters": {
                        "parameter": [
                            {
                                "@name": "info",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "girepository/giobjectinfo.c",
                                    "@line": "437",
                                    "#text": "a #GIObjectInfo"
                                },
                                "type": {
                                    "@name": "ObjectInfo",
                                    "@c:type": "GIObjectInfo*"
                                }
                            },
                            {
                                "@name": "name",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "girepository/giobjectinfo.c",
                                    "@line": "438",
                                    "#text": "name of method to obtain"
                                },
                                "type": {
                                    "@name": "utf8",
                                    "@c:type": "const gchar*"
                                }
                            }
                        ]
                    }
                },
                {
                    "@name": "object_info_find_method_using_interfaces",
                    "@c:identifier": "g_object_info_find_method_using_interfaces",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "girepository/giobjectinfo.c",
                        "@line": "470",
                        "#text": "Obtain a method of the object given a @name, searching both the\nobject @info and any interfaces it implements.  %NULL will be\nreturned if there's no method available with that name.\n\nNote that this function does *not* search parent classes; you will have\nto chain up if that's desired."
                    },
                    "source-position": {
                        "@filename": "girepository/giobjectinfo.h",
                        "@line": "133"
                    },
                    "return-value": {
                        "@transfer-ownership": "full",
                        "@nullable": "1",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "girepository/giobjectinfo.c",
                            "@line": "483",
                            "#text": "the #GIFunctionInfo. Free the struct by calling\ng_base_info_unref() when done."
                        },
                        "type": {
                            "@name": "FunctionInfo",
                            "@c:type": "GIFunctionInfo*"
                        }
                    },
                    "parameters": {
                        "parameter": [
                            {
                                "@name": "info",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "girepository/giobjectinfo.c",
                                    "@line": "472",
                                    "#text": "a #GIObjectInfo"
                                },
                                "type": {
                                    "@name": "ObjectInfo",
                                    "@c:type": "GIObjectInfo*"
                                }
                            },
                            {
                                "@name": "name",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "girepository/giobjectinfo.c",
                                    "@line": "473",
                                    "#text": "name of method to obtain"
                                },
                                "type": {
                                    "@name": "utf8",
                                    "@c:type": "const gchar*"
                                }
                            },
                            {
                                "@name": "implementor",
                                "@direction": "out",
                                "@caller-allocates": "0",
                                "@transfer-ownership": "full",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "girepository/giobjectinfo.c",
                                    "@line": "474",
                                    "#text": "The implementor of the interface"
                                },
                                "type": {
                                    "@name": "ObjectInfo",
                                    "@c:type": "GIObjectInfo**"
                                }
                            }
                        ]
                    }
                },
                {
                    "@name": "object_info_find_signal",
                    "@c:identifier": "g_object_info_find_signal",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "girepository/giobjectinfo.c",
                        "@line": "586",
                        "#text": "TODO"
                    },
                    "source-position": {
                        "@filename": "girepository/giobjectinfo.h",
                        "@line": "147"
                    },
                    "return-value": {
                        "@transfer-ownership": "full",
                        "@nullable": "1",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "girepository/giobjectinfo.c",
                            "@line": "593",
                            "#text": "Info for the signal with name @name in @info, or %NULL on failure."
                        },
                        "type": {
                            "@name": "SignalInfo",
                            "@c:type": "GISignalInfo*"
                        }
                    },
                    "parameters": {
                        "parameter": [
                            {
                                "@name": "info",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "girepository/giobjectinfo.c",
                                    "@line": "588",
                                    "#text": "a #GIObjectInfo"
                                },
                                "type": {
                                    "@name": "ObjectInfo",
                                    "@c:type": "GIObjectInfo*"
                                }
                            },
                            {
                                "@name": "name",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "girepository/giobjectinfo.c",
                                    "@line": "589",
                                    "#text": "Name of signal"
                                },
                                "type": {
                                    "@name": "utf8",
                                    "@c:type": "const gchar*"
                                }
                            }
                        ]
                    }
                },
                {
                    "@name": "object_info_find_vfunc",
                    "@c:identifier": "g_object_info_find_vfunc",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "girepository/giobjectinfo.c",
                        "@line": "679",
                        "#text": "Locate a virtual function slot with name @name. Note that the namespace\nfor virtuals is distinct from that of methods; there may or may not be\na concrete method associated for a virtual. If there is one, it may\nbe retrieved using g_vfunc_info_get_invoker(), otherwise %NULL will be\nreturned.\nSee the documentation for g_vfunc_info_get_invoker() for more\ninformation on invoking virtuals."
                    },
                    "source-position": {
                        "@filename": "girepository/giobjectinfo.h",
                        "@line": "159"
                    },
                    "return-value": {
                        "@transfer-ownership": "full",
                        "@nullable": "1",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "girepository/giobjectinfo.c",
                            "@line": "692",
                            "#text": "the #GIVFuncInfo, or %NULL. Free it with\ng_base_info_unref() when done."
                        },
                        "type": {
                            "@name": "VFuncInfo",
                            "@c:type": "GIVFuncInfo*"
                        }
                    },
                    "parameters": {
                        "parameter": [
                            {
                                "@name": "info",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "girepository/giobjectinfo.c",
                                    "@line": "681",
                                    "#text": "a #GIObjectInfo"
                                },
                                "type": {
                                    "@name": "ObjectInfo",
                                    "@c:type": "GIObjectInfo*"
                                }
                            },
                            {
                                "@name": "name",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "girepository/giobjectinfo.c",
                                    "@line": "682",
                                    "#text": "The name of a virtual function to find."
                                },
                                "type": {
                                    "@name": "utf8",
                                    "@c:type": "const gchar*"
                                }
                            }
                        ]
                    }
                },
                {
                    "@name": "object_info_find_vfunc_using_interfaces",
                    "@c:identifier": "g_object_info_find_vfunc_using_interfaces",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "girepository/giobjectinfo.c",
                        "@line": "721",
                        "#text": "Locate a virtual function slot with name @name, searching both the object\n@info and any interfaces it implements.  Note that the namespace for\nvirtuals is distinct from that of methods; there may or may not be a\nconcrete method associated for a virtual. If there is one, it may be\nretrieved using g_vfunc_info_get_invoker(), otherwise %NULL will be\nreturned.\n\nNote that this function does *not* search parent classes; you will have\nto chain up if that's desired."
                    },
                    "source-position": {
                        "@filename": "girepository/giobjectinfo.h",
                        "@line": "163"
                    },
                    "return-value": {
                        "@transfer-ownership": "full",
                        "@nullable": "1",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "girepository/giobjectinfo.c",
                            "@line": "737",
                            "#text": "the #GIVFuncInfo. Free the struct by calling\ng_base_info_unref() when done."
                        },
                        "type": {
                            "@name": "VFuncInfo",
                            "@c:type": "GIVFuncInfo*"
                        }
                    },
                    "parameters": {
                        "parameter": [
                            {
                                "@name": "info",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "girepository/giobjectinfo.c",
                                    "@line": "723",
                                    "#text": "a #GIObjectInfo"
                                },
                                "type": {
                                    "@name": "ObjectInfo",
                                    "@c:type": "GIObjectInfo*"
                                }
                            },
                            {
                                "@name": "name",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "girepository/giobjectinfo.c",
                                    "@line": "724",
                                    "#text": "name of vfunc to obtain"
                                },
                                "type": {
                                    "@name": "utf8",
                                    "@c:type": "const gchar*"
                                }
                            },
                            {
                                "@name": "implementor",
                                "@direction": "out",
                                "@caller-allocates": "0",
                                "@transfer-ownership": "full",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "girepository/giobjectinfo.c",
                                    "@line": "725",
                                    "#text": "The implementor of the interface"
                                },
                                "type": {
                                    "@name": "ObjectInfo",
                                    "@c:type": "GIObjectInfo**"
                                }
                            }
                        ]
                    }
                },
                {
                    "@name": "object_info_get_abstract",
                    "@c:identifier": "g_object_info_get_abstract",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "girepository/giobjectinfo.c",
                        "@line": "109",
                        "#text": "Obtain if the object type is an abstract type, eg if it cannot be\ninstantiated"
                    },
                    "source-position": {
                        "@filename": "girepository/giobjectinfo.h",
                        "@line": "88"
                    },
                    "return-value": {
                        "@transfer-ownership": "none",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "girepository/giobjectinfo.c",
                            "@line": "116",
                            "#text": "%TRUE if the object type is abstract"
                        },
                        "type": {
                            "@name": "gboolean",
                            "@c:type": "gboolean"
                        }
                    },
                    "parameters": {
                        "parameter": {
                            "@name": "info",
                            "@transfer-ownership": "none",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "girepository/giobjectinfo.c",
                                "@line": "111",
                                "#text": "a #GIObjectInfo"
                            },
                            "type": {
                                "@name": "ObjectInfo",
                                "@c:type": "GIObjectInfo*"
                            }
                        }
                    }
                },
                {
                    "@name": "object_info_get_class_struct",
                    "@c:identifier": "g_object_info_get_class_struct",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "girepository/giobjectinfo.c",
                        "@line": "842",
                        "#text": "Every #GObject has two structures; an instance structure and a class\nstructure.  This function returns the metadata for the class structure."
                    },
                    "source-position": {
                        "@filename": "girepository/giobjectinfo.h",
                        "@line": "175"
                    },
                    "return-value": {
                        "@transfer-ownership": "full",
                        "@nullable": "1",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "girepository/giobjectinfo.c",
                            "@line": "849",
                            "#text": "the #GIStructInfo or %NULL. Free with\ng_base_info_unref() when done."
                        },
                        "type": {
                            "@name": "StructInfo",
                            "@c:type": "GIStructInfo*"
                        }
                    },
                    "parameters": {
                        "parameter": {
                            "@name": "info",
                            "@transfer-ownership": "none",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "girepository/giobjectinfo.c",
                                "@line": "844",
                                "#text": "a #GIObjectInfo"
                            },
                            "type": {
                                "@name": "ObjectInfo",
                                "@c:type": "GIObjectInfo*"
                            }
                        }
                    }
                },
                {
                    "@name": "object_info_get_constant",
                    "@c:identifier": "g_object_info_get_constant",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "girepository/giobjectinfo.c",
                        "@line": "803",
                        "#text": "Obtain an object type constant at index @n."
                    },
                    "source-position": {
                        "@filename": "girepository/giobjectinfo.h",
                        "@line": "171"
                    },
                    "return-value": {
                        "@transfer-ownership": "full",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "girepository/giobjectinfo.c",
                            "@line": "810",
                            "#text": "the #GIConstantInfo. Free the struct by calling\ng_base_info_unref() when done."
                        },
                        "type": {
                            "@name": "ConstantInfo",
                            "@c:type": "GIConstantInfo*"
                        }
                    },
                    "parameters": {
                        "parameter": [
                            {
                                "@name": "info",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "girepository/giobjectinfo.c",
                                    "@line": "805",
                                    "#text": "a #GIObjectInfo"
                                },
                                "type": {
                                    "@name": "ObjectInfo",
                                    "@c:type": "GIObjectInfo*"
                                }
                            },
                            {
                                "@name": "n",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "girepository/giobjectinfo.c",
                                    "@line": "806",
                                    "#text": "index of constant to get"
                                },
                                "type": {
                                    "@name": "gint",
                                    "@c:type": "gint"
                                }
                            }
                        ]
                    }
                },
                {
                    "@name": "object_info_get_field",
                    "@c:identifier": "g_object_info_get_field",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "girepository/giobjectinfo.c",
                        "@line": "295",
                        "#text": "Obtain an object type field at index @n."
                    },
                    "source-position": {
                        "@filename": "girepository/giobjectinfo.h",
                        "@line": "110"
                    },
                    "return-value": {
                        "@transfer-ownership": "full",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "girepository/giobjectinfo.c",
                            "@line": "302",
                            "#text": "the #GIFieldInfo. Free the struct by calling\ng_base_info_unref() when done."
                        },
                        "type": {
                            "@name": "FieldInfo",
                            "@c:type": "GIFieldInfo*"
                        }
                    },
                    "parameters": {
                        "parameter": [
                            {
                                "@name": "info",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "girepository/giobjectinfo.c",
                                    "@line": "297",
                                    "#text": "a #GIObjectInfo"
                                },
                                "type": {
                                    "@name": "ObjectInfo",
                                    "@c:type": "GIObjectInfo*"
                                }
                            },
                            {
                                "@name": "n",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "girepository/giobjectinfo.c",
                                    "@line": "298",
                                    "#text": "index of field to get"
                                },
                                "type": {
                                    "@name": "gint",
                                    "@c:type": "gint"
                                }
                            }
                        ]
                    }
                },
                {
                    "@name": "object_info_get_final",
                    "@c:identifier": "g_object_info_get_final",
                    "@version": "1.70",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "girepository/giobjectinfo.c",
                        "@line": "132",
                        "#text": "Checks whether the object type is a final type, i.e. if it cannot\nbe derived"
                    },
                    "source-position": {
                        "@filename": "girepository/giobjectinfo.h",
                        "@line": "91"
                    },
                    "return-value": {
                        "@transfer-ownership": "none",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "girepository/giobjectinfo.c",
                            "@line": "139",
                            "#text": "%TRUE if the object type is final"
                        },
                        "type": {
                            "@name": "gboolean",
                            "@c:type": "gboolean"
                        }
                    },
                    "parameters": {
                        "parameter": {
                            "@name": "info",
                            "@transfer-ownership": "none",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "girepository/giobjectinfo.c",
                                "@line": "134",
                                "#text": "a #GIObjectInfo"
                            },
                            "type": {
                                "@name": "ObjectInfo",
                                "@c:type": "GIObjectInfo*"
                            }
                        }
                    }
                },
                {
                    "@name": "object_info_get_fundamental",
                    "@c:identifier": "g_object_info_get_fundamental",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "girepository/giobjectinfo.c",
                        "@line": "157",
                        "#text": "Obtain if the object type is of a fundamental type which is not\nG_TYPE_OBJECT. This is mostly for supporting GstMiniObject."
                    },
                    "source-position": {
                        "@filename": "girepository/giobjectinfo.h",
                        "@line": "94"
                    },
                    "return-value": {
                        "@transfer-ownership": "none",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "girepository/giobjectinfo.c",
                            "@line": "164",
                            "#text": "%TRUE if the object type is a fundamental type"
                        },
                        "type": {
                            "@name": "gboolean",
                            "@c:type": "gboolean"
                        }
                    },
                    "parameters": {
                        "parameter": {
                            "@name": "info",
                            "@transfer-ownership": "none",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "girepository/giobjectinfo.c",
                                "@line": "159",
                                "#text": "a #GIObjectInfo"
                            },
                            "type": {
                                "@name": "ObjectInfo",
                                "@c:type": "GIObjectInfo*"
                            }
                        }
                    }
                },
                {
                    "@name": "object_info_get_get_value_function",
                    "@c:identifier": "g_object_info_get_get_value_function",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "girepository/giobjectinfo.c",
                        "@line": "1049",
                        "#text": "Obtain the symbol name of the function that should be called to convert\nan object instance pointer of this object type to a GValue.\nI's mainly used fundamental types. The type signature for the symbol\nis %GIObjectInfoGetValueFunction, to fetch the function pointer\nsee g_object_info_get_get_value_function()."
                    },
                    "source-position": {
                        "@filename": "girepository/giobjectinfo.h",
                        "@line": "200"
                    },
                    "return-value": {
                        "@transfer-ownership": "none",
                        "@nullable": "1",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "girepository/giobjectinfo.c",
                            "@line": "1059",
                            "#text": "the symbol or %NULL"
                        },
                        "type": {
                            "@name": "utf8",
                            "@c:type": "const char*"
                        }
                    },
                    "parameters": {
                        "parameter": {
                            "@name": "info",
                            "@transfer-ownership": "none",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "girepository/giobjectinfo.c",
                                "@line": "1051",
                                "#text": "a #GIObjectInfo"
                            },
                            "type": {
                                "@name": "ObjectInfo",
                                "@c:type": "GIObjectInfo*"
                            }
                        }
                    }
                },
                {
                    "@name": "object_info_get_get_value_function_pointer",
                    "@c:identifier": "g_object_info_get_get_value_function_pointer",
                    "@introspectable": "0",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "girepository/giobjectinfo.c",
                        "@line": "1078",
                        "#text": "Obtain a pointer to a function which can be used to\nextract an instance of this object type out of a GValue.\nThis takes derivation into account and will reversely traverse\nthe base classes of this type, starting at the top type."
                    },
                    "source-position": {
                        "@filename": "girepository/giobjectinfo.h",
                        "@line": "203"
                    },
                    "return-value": {
                        "@nullable": "1",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "girepository/giobjectinfo.c",
                            "@line": "1087",
                            "#text": "the function pointer or %NULL"
                        },
                        "type": {
                            "@name": "ObjectInfoGetValueFunction",
                            "@c:type": "GIObjectInfoGetValueFunction"
                        }
                    },
                    "parameters": {
                        "parameter": {
                            "@name": "info",
                            "@transfer-ownership": "none",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "girepository/giobjectinfo.c",
                                "@line": "1080",
                                "#text": "a #GIObjectInfo"
                            },
                            "type": {
                                "@name": "ObjectInfo",
                                "@c:type": "GIObjectInfo*"
                            }
                        }
                    }
                },
                {
                    "@name": "object_info_get_interface",
                    "@c:identifier": "g_object_info_get_interface",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "girepository/giobjectinfo.c",
                        "@line": "247",
                        "#text": "Obtain an object type interface at index @n."
                    },
                    "source-position": {
                        "@filename": "girepository/giobjectinfo.h",
                        "@line": "103"
                    },
                    "return-value": {
                        "@transfer-ownership": "full",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "girepository/giobjectinfo.c",
                            "@line": "254",
                            "#text": "the #GIInterfaceInfo. Free the struct by calling\ng_base_info_unref() when done."
                        },
                        "type": {
                            "@name": "InterfaceInfo",
                            "@c:type": "GIInterfaceInfo*"
                        }
                    },
                    "parameters": {
                        "parameter": [
                            {
                                "@name": "info",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "girepository/giobjectinfo.c",
                                    "@line": "249",
                                    "#text": "a #GIObjectInfo"
                                },
                                "type": {
                                    "@name": "ObjectInfo",
                                    "@c:type": "GIObjectInfo*"
                                }
                            },
                            {
                                "@name": "n",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "girepository/giobjectinfo.c",
                                    "@line": "250",
                                    "#text": "index of interface to get"
                                },
                                "type": {
                                    "@name": "gint",
                                    "@c:type": "gint"
                                }
                            }
                        ]
                    }
                },
                {
                    "@name": "object_info_get_method",
                    "@c:identifier": "g_object_info_get_method",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "girepository/giobjectinfo.c",
                        "@line": "398",
                        "#text": "Obtain an object type method at index @n."
                    },
                    "source-position": {
                        "@filename": "girepository/giobjectinfo.h",
                        "@line": "124"
                    },
                    "return-value": {
                        "@transfer-ownership": "full",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "girepository/giobjectinfo.c",
                            "@line": "405",
                            "#text": "the #GIFunctionInfo. Free the struct by calling\ng_base_info_unref() when done."
                        },
                        "type": {
                            "@name": "FunctionInfo",
                            "@c:type": "GIFunctionInfo*"
                        }
                    },
                    "parameters": {
                        "parameter": [
                            {
                                "@name": "info",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "girepository/giobjectinfo.c",
                                    "@line": "400",
                                    "#text": "a #GIObjectInfo"
                                },
                                "type": {
                                    "@name": "ObjectInfo",
                                    "@c:type": "GIObjectInfo*"
                                }
                            },
                            {
                                "@name": "n",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "girepository/giobjectinfo.c",
                                    "@line": "401",
                                    "#text": "index of method to get"
                                },
                                "type": {
                                    "@name": "gint",
                                    "@c:type": "gint"
                                }
                            }
                        ]
                    }
                },
                {
                    "@name": "object_info_get_n_constants",
                    "@c:identifier": "g_object_info_get_n_constants",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "girepository/giobjectinfo.c",
                        "@line": "781",
                        "#text": "Obtain the number of constants that this object type has."
                    },
                    "source-position": {
                        "@filename": "girepository/giobjectinfo.h",
                        "@line": "168"
                    },
                    "return-value": {
                        "@transfer-ownership": "none",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "girepository/giobjectinfo.c",
                            "@line": "787",
                            "#text": "number of constants"
                        },
                        "type": {
                            "@name": "gint",
                            "@c:type": "gint"
                        }
                    },
                    "parameters": {
                        "parameter": {
                            "@name": "info",
                            "@transfer-ownership": "none",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "girepository/giobjectinfo.c",
                                "@line": "783",
                                "#text": "a #GIObjectInfo"
                            },
                            "type": {
                                "@name": "ObjectInfo",
                                "@c:type": "GIObjectInfo*"
                            }
                        }
                    }
                },
                {
                    "@name": "object_info_get_n_fields",
                    "@c:identifier": "g_object_info_get_n_fields",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "girepository/giobjectinfo.c",
                        "@line": "273",
                        "#text": "Obtain the number of fields that this object type has."
                    },
                    "source-position": {
                        "@filename": "girepository/giobjectinfo.h",
                        "@line": "107"
                    },
                    "return-value": {
                        "@transfer-ownership": "none",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "girepository/giobjectinfo.c",
                            "@line": "279",
                            "#text": "number of fields"
                        },
                        "type": {
                            "@name": "gint",
                            "@c:type": "gint"
                        }
                    },
                    "parameters": {
                        "parameter": {
                            "@name": "info",
                            "@transfer-ownership": "none",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "girepository/giobjectinfo.c",
                                "@line": "275",
                                "#text": "a #GIObjectInfo"
                            },
                            "type": {
                                "@name": "ObjectInfo",
                                "@c:type": "GIObjectInfo*"
                            }
                        }
                    }
                },
                {
                    "@name": "object_info_get_n_interfaces",
                    "@c:identifier": "g_object_info_get_n_interfaces",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "girepository/giobjectinfo.c",
                        "@line": "225",
                        "#text": "Obtain the number of interfaces that this object type has."
                    },
                    "source-position": {
                        "@filename": "girepository/giobjectinfo.h",
                        "@line": "100"
                    },
                    "return-value": {
                        "@transfer-ownership": "none",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "girepository/giobjectinfo.c",
                            "@line": "231",
                            "#text": "number of interfaces"
                        },
                        "type": {
                            "@name": "gint",
                            "@c:type": "gint"
                        }
                    },
                    "parameters": {
                        "parameter": {
                            "@name": "info",
                            "@transfer-ownership": "none",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "girepository/giobjectinfo.c",
                                "@line": "227",
                                "#text": "a #GIObjectInfo"
                            },
                            "type": {
                                "@name": "ObjectInfo",
                                "@c:type": "GIObjectInfo*"
                            }
                        }
                    }
                },
                {
                    "@name": "object_info_get_n_methods",
                    "@c:identifier": "g_object_info_get_n_methods",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "girepository/giobjectinfo.c",
                        "@line": "376",
                        "#text": "Obtain the number of methods that this object type has."
                    },
                    "source-position": {
                        "@filename": "girepository/giobjectinfo.h",
                        "@line": "121"
                    },
                    "return-value": {
                        "@transfer-ownership": "none",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "girepository/giobjectinfo.c",
                            "@line": "382",
                            "#text": "number of methods"
                        },
                        "type": {
                            "@name": "gint",
                            "@c:type": "gint"
                        }
                    },
                    "parameters": {
                        "parameter": {
                            "@name": "info",
                            "@transfer-ownership": "none",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "girepository/giobjectinfo.c",
                                "@line": "378",
                                "#text": "a #GIObjectInfo"
                            },
                            "type": {
                                "@name": "ObjectInfo",
                                "@c:type": "GIObjectInfo*"
                            }
                        }
                    }
                },
                {
                    "@name": "object_info_get_n_properties",
                    "@c:identifier": "g_object_info_get_n_properties",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "girepository/giobjectinfo.c",
                        "@line": "320",
                        "#text": "Obtain the number of properties that this object type has."
                    },
                    "source-position": {
                        "@filename": "girepository/giobjectinfo.h",
                        "@line": "114"
                    },
                    "return-value": {
                        "@transfer-ownership": "none",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "girepository/giobjectinfo.c",
                            "@line": "326",
                            "#text": "number of properties"
                        },
                        "type": {
                            "@name": "gint",
                            "@c:type": "gint"
                        }
                    },
                    "parameters": {
                        "parameter": {
                            "@name": "info",
                            "@transfer-ownership": "none",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "girepository/giobjectinfo.c",
                                "@line": "322",
                                "#text": "a #GIObjectInfo"
                            },
                            "type": {
                                "@name": "ObjectInfo",
                                "@c:type": "GIObjectInfo*"
                            }
                        }
                    }
                },
                {
                    "@name": "object_info_get_n_signals",
                    "@c:identifier": "g_object_info_get_n_signals",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "girepository/giobjectinfo.c",
                        "@line": "527",
                        "#text": "Obtain the number of signals that this object type has."
                    },
                    "source-position": {
                        "@filename": "girepository/giobjectinfo.h",
                        "@line": "139"
                    },
                    "return-value": {
                        "@transfer-ownership": "none",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "girepository/giobjectinfo.c",
                            "@line": "533",
                            "#text": "number of signals"
                        },
                        "type": {
                            "@name": "gint",
                            "@c:type": "gint"
                        }
                    },
                    "parameters": {
                        "parameter": {
                            "@name": "info",
                            "@transfer-ownership": "none",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "girepository/giobjectinfo.c",
                                "@line": "529",
                                "#text": "a #GIObjectInfo"
                            },
                            "type": {
                                "@name": "ObjectInfo",
                                "@c:type": "GIObjectInfo*"
                            }
                        }
                    }
                },
                {
                    "@name": "object_info_get_n_vfuncs",
                    "@c:identifier": "g_object_info_get_n_vfuncs",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "girepository/giobjectinfo.c",
                        "@line": "619",
                        "#text": "Obtain the number of virtual functions that this object type has."
                    },
                    "source-position": {
                        "@filename": "girepository/giobjectinfo.h",
                        "@line": "152"
                    },
                    "return-value": {
                        "@transfer-ownership": "none",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "girepository/giobjectinfo.c",
                            "@line": "625",
                            "#text": "number of virtual functions"
                        },
                        "type": {
                            "@name": "gint",
                            "@c:type": "gint"
                        }
                    },
                    "parameters": {
                        "parameter": {
                            "@name": "info",
                            "@transfer-ownership": "none",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "girepository/giobjectinfo.c",
                                "@line": "621",
                                "#text": "a #GIObjectInfo"
                            },
                            "type": {
                                "@name": "ObjectInfo",
                                "@c:type": "GIObjectInfo*"
                            }
                        }
                    }
                },
                {
                    "@name": "object_info_get_parent",
                    "@c:identifier": "g_object_info_get_parent",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "girepository/giobjectinfo.c",
                        "@line": "82",
                        "#text": "Obtain the parent of the object type."
                    },
                    "source-position": {
                        "@filename": "girepository/giobjectinfo.h",
                        "@line": "97"
                    },
                    "return-value": {
                        "@transfer-ownership": "full",
                        "@nullable": "1",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "girepository/giobjectinfo.c",
                            "@line": "88",
                            "#text": "the #GIObjectInfo. Free the struct by calling\ng_base_info_unref() when done."
                        },
                        "type": {
                            "@name": "ObjectInfo",
                            "@c:type": "GIObjectInfo*"
                        }
                    },
                    "parameters": {
                        "parameter": {
                            "@name": "info",
                            "@transfer-ownership": "none",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "girepository/giobjectinfo.c",
                                "@line": "84",
                                "#text": "a #GIObjectInfo"
                            },
                            "type": {
                                "@name": "ObjectInfo",
                                "@c:type": "GIObjectInfo*"
                            }
                        }
                    }
                },
                {
                    "@name": "object_info_get_property",
                    "@c:identifier": "g_object_info_get_property",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "girepository/giobjectinfo.c",
                        "@line": "341",
                        "#text": "Obtain an object type property at index @n."
                    },
                    "source-position": {
                        "@filename": "girepository/giobjectinfo.h",
                        "@line": "117"
                    },
                    "return-value": {
                        "@transfer-ownership": "full",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "girepository/giobjectinfo.c",
                            "@line": "348",
                            "#text": "the #GIPropertyInfo. Free the struct by calling\ng_base_info_unref() when done."
                        },
                        "type": {
                            "@name": "PropertyInfo",
                            "@c:type": "GIPropertyInfo*"
                        }
                    },
                    "parameters": {
                        "parameter": [
                            {
                                "@name": "info",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "girepository/giobjectinfo.c",
                                    "@line": "343",
                                    "#text": "a #GIObjectInfo"
                                },
                                "type": {
                                    "@name": "ObjectInfo",
                                    "@c:type": "GIObjectInfo*"
                                }
                            },
                            {
                                "@name": "n",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "girepository/giobjectinfo.c",
                                    "@line": "344",
                                    "#text": "index of property to get"
                                },
                                "type": {
                                    "@name": "gint",
                                    "@c:type": "gint"
                                }
                            }
                        ]
                    }
                },
                {
                    "@name": "object_info_get_ref_function",
                    "@c:identifier": "g_object_info_get_ref_function",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "girepository/giobjectinfo.c",
                        "@line": "904",
                        "#text": "Obtain the symbol name of the function that should be called to ref this\nobject type. It's mainly used fundamental types. The type signature for\nthe symbol is %GIObjectInfoRefFunction, to fetch the function pointer\nsee g_object_info_get_ref_function()."
                    },
                    "source-position": {
                        "@filename": "girepository/giobjectinfo.h",
                        "@line": "179"
                    },
                    "return-value": {
                        "@transfer-ownership": "none",
                        "@nullable": "1",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "girepository/giobjectinfo.c",
                            "@line": "913",
                            "#text": "the symbol or %NULL"
                        },
                        "type": {
                            "@name": "utf8",
                            "@c:type": "const char*"
                        }
                    },
                    "parameters": {
                        "parameter": {
                            "@name": "info",
                            "@transfer-ownership": "none",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "girepository/giobjectinfo.c",
                                "@line": "906",
                                "#text": "a #GIObjectInfo"
                            },
                            "type": {
                                "@name": "ObjectInfo",
                                "@c:type": "GIObjectInfo*"
                            }
                        }
                    }
                },
                {
                    "@name": "object_info_get_ref_function_pointer",
                    "@c:identifier": "g_object_info_get_ref_function_pointer",
                    "@introspectable": "0",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "girepository/giobjectinfo.c",
                        "@line": "932",
                        "#text": "Obtain a pointer to a function which can be used to\nincrease the reference count an instance of this object type.\nThis takes derivation into account and will reversely traverse\nthe base classes of this type, starting at the top type."
                    },
                    "source-position": {
                        "@filename": "girepository/giobjectinfo.h",
                        "@line": "182"
                    },
                    "return-value": {
                        "@nullable": "1",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "girepository/giobjectinfo.c",
                            "@line": "941",
                            "#text": "the function pointer or %NULL"
                        },
                        "type": {
                            "@name": "ObjectInfoRefFunction",
                            "@c:type": "GIObjectInfoRefFunction"
                        }
                    },
                    "parameters": {
                        "parameter": {
                            "@name": "info",
                            "@transfer-ownership": "none",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "girepository/giobjectinfo.c",
                                "@line": "934",
                                "#text": "a #GIObjectInfo"
                            },
                            "type": {
                                "@name": "ObjectInfo",
                                "@c:type": "GIObjectInfo*"
                            }
                        }
                    }
                },
                {
                    "@name": "object_info_get_set_value_function",
                    "@c:identifier": "g_object_info_get_set_value_function",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "girepository/giobjectinfo.c",
                        "@line": "1000",
                        "#text": "Obtain the symbol name of the function that should be called to convert\nset a GValue giving an object instance pointer of this object type.\nI's mainly used fundamental types. The type signature for the symbol\nis %GIObjectInfoSetValueFunction, to fetch the function pointer\nsee g_object_info_get_set_value_function()."
                    },
                    "source-position": {
                        "@filename": "girepository/giobjectinfo.h",
                        "@line": "193"
                    },
                    "return-value": {
                        "@transfer-ownership": "none",
                        "@nullable": "1",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "girepository/giobjectinfo.c",
                            "@line": "1010",
                            "#text": "the symbol or %NULL"
                        },
                        "type": {
                            "@name": "utf8",
                            "@c:type": "const char*"
                        }
                    },
                    "parameters": {
                        "parameter": {
                            "@name": "info",
                            "@transfer-ownership": "none",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "girepository/giobjectinfo.c",
                                "@line": "1002",
                                "#text": "a #GIObjectInfo"
                            },
                            "type": {
                                "@name": "ObjectInfo",
                                "@c:type": "GIObjectInfo*"
                            }
                        }
                    }
                },
                {
                    "@name": "object_info_get_set_value_function_pointer",
                    "@c:identifier": "g_object_info_get_set_value_function_pointer",
                    "@introspectable": "0",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "girepository/giobjectinfo.c",
                        "@line": "1029",
                        "#text": "Obtain a pointer to a function which can be used to\nset a GValue given an instance of this object type.\nThis takes derivation into account and will reversely traverse\nthe base classes of this type, starting at the top type."
                    },
                    "source-position": {
                        "@filename": "girepository/giobjectinfo.h",
                        "@line": "196"
                    },
                    "return-value": {
                        "@nullable": "1",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "girepository/giobjectinfo.c",
                            "@line": "1038",
                            "#text": "the function pointer or %NULL"
                        },
                        "type": {
                            "@name": "ObjectInfoSetValueFunction",
                            "@c:type": "GIObjectInfoSetValueFunction"
                        }
                    },
                    "parameters": {
                        "parameter": {
                            "@name": "info",
                            "@transfer-ownership": "none",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "girepository/giobjectinfo.c",
                                "@line": "1031",
                                "#text": "a #GIObjectInfo"
                            },
                            "type": {
                                "@name": "ObjectInfo",
                                "@c:type": "GIObjectInfo*"
                            }
                        }
                    }
                },
                {
                    "@name": "object_info_get_signal",
                    "@c:identifier": "g_object_info_get_signal",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "girepository/giobjectinfo.c",
                        "@line": "549",
                        "#text": "Obtain an object type signal at index @n."
                    },
                    "source-position": {
                        "@filename": "girepository/giobjectinfo.h",
                        "@line": "142"
                    },
                    "return-value": {
                        "@transfer-ownership": "full",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "girepository/giobjectinfo.c",
                            "@line": "556",
                            "#text": "the #GISignalInfo. Free the struct by calling\ng_base_info_unref() when done."
                        },
                        "type": {
                            "@name": "SignalInfo",
                            "@c:type": "GISignalInfo*"
                        }
                    },
                    "parameters": {
                        "parameter": [
                            {
                                "@name": "info",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "girepository/giobjectinfo.c",
                                    "@line": "551",
                                    "#text": "a #GIObjectInfo"
                                },
                                "type": {
                                    "@name": "ObjectInfo",
                                    "@c:type": "GIObjectInfo*"
                                }
                            },
                            {
                                "@name": "n",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "girepository/giobjectinfo.c",
                                    "@line": "552",
                                    "#text": "index of signal to get"
                                },
                                "type": {
                                    "@name": "gint",
                                    "@c:type": "gint"
                                }
                            }
                        ]
                    }
                },
                {
                    "@name": "object_info_get_type_init",
                    "@c:identifier": "g_object_info_get_type_init",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "girepository/giobjectinfo.c",
                        "@line": "202",
                        "#text": "Obtain the function which when called will return the GType\nfunction for which this object type is registered."
                    },
                    "source-position": {
                        "@filename": "girepository/giobjectinfo.h",
                        "@line": "85"
                    },
                    "return-value": {
                        "@transfer-ownership": "none",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "girepository/giobjectinfo.c",
                            "@line": "209",
                            "#text": "the type init function"
                        },
                        "type": {
                            "@name": "utf8",
                            "@c:type": "const gchar*"
                        }
                    },
                    "parameters": {
                        "parameter": {
                            "@name": "info",
                            "@transfer-ownership": "none",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "girepository/giobjectinfo.c",
                                "@line": "204",
                                "#text": "a #GIObjectInfo"
                            },
                            "type": {
                                "@name": "ObjectInfo",
                                "@c:type": "GIObjectInfo*"
                            }
                        }
                    }
                },
                {
                    "@name": "object_info_get_type_name",
                    "@c:identifier": "g_object_info_get_type_name",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "girepository/giobjectinfo.c",
                        "@line": "180",
                        "#text": "Obtain the name of the objects class/type."
                    },
                    "source-position": {
                        "@filename": "girepository/giobjectinfo.h",
                        "@line": "82"
                    },
                    "return-value": {
                        "@transfer-ownership": "none",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "girepository/giobjectinfo.c",
                            "@line": "186",
                            "#text": "name of the objects type"
                        },
                        "type": {
                            "@name": "utf8",
                            "@c:type": "const gchar*"
                        }
                    },
                    "parameters": {
                        "parameter": {
                            "@name": "info",
                            "@transfer-ownership": "none",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "girepository/giobjectinfo.c",
                                "@line": "182",
                                "#text": "a #GIObjectInfo"
                            },
                            "type": {
                                "@name": "ObjectInfo",
                                "@c:type": "GIObjectInfo*"
                            }
                        }
                    }
                },
                {
                    "@name": "object_info_get_unref_function",
                    "@c:identifier": "g_object_info_get_unref_function",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "girepository/giobjectinfo.c",
                        "@line": "952",
                        "#text": "Obtain the symbol name of the function that should be called to unref this\nobject type. It's mainly used fundamental types. The type signature for\nthe symbol is %GIObjectInfoUnrefFunction, to fetch the function pointer\nsee g_object_info_get_unref_function()."
                    },
                    "source-position": {
                        "@filename": "girepository/giobjectinfo.h",
                        "@line": "186"
                    },
                    "return-value": {
                        "@transfer-ownership": "none",
                        "@nullable": "1",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "girepository/giobjectinfo.c",
                            "@line": "961",
                            "#text": "the symbol or %NULL"
                        },
                        "type": {
                            "@name": "utf8",
                            "@c:type": "const char*"
                        }
                    },
                    "parameters": {
                        "parameter": {
                            "@name": "info",
                            "@transfer-ownership": "none",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "girepository/giobjectinfo.c",
                                "@line": "954",
                                "#text": "a #GIObjectInfo"
                            },
                            "type": {
                                "@name": "ObjectInfo",
                                "@c:type": "GIObjectInfo*"
                            }
                        }
                    }
                },
                {
                    "@name": "object_info_get_unref_function_pointer",
                    "@c:identifier": "g_object_info_get_unref_function_pointer",
                    "@introspectable": "0",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "girepository/giobjectinfo.c",
                        "@line": "980",
                        "#text": "Obtain a pointer to a function which can be used to\ndecrease the reference count an instance of this object type.\nThis takes derivation into account and will reversely traverse\nthe base classes of this type, starting at the top type."
                    },
                    "source-position": {
                        "@filename": "girepository/giobjectinfo.h",
                        "@line": "189"
                    },
                    "return-value": {
                        "@nullable": "1",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "girepository/giobjectinfo.c",
                            "@line": "989",
                            "#text": "the function pointer or %NULL"
                        },
                        "type": {
                            "@name": "ObjectInfoUnrefFunction",
                            "@c:type": "GIObjectInfoUnrefFunction"
                        }
                    },
                    "parameters": {
                        "parameter": {
                            "@name": "info",
                            "@transfer-ownership": "none",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "girepository/giobjectinfo.c",
                                "@line": "982",
                                "#text": "a #GIObjectInfo"
                            },
                            "type": {
                                "@name": "ObjectInfo",
                                "@c:type": "GIObjectInfo*"
                            }
                        }
                    }
                },
                {
                    "@name": "object_info_get_vfunc",
                    "@c:identifier": "g_object_info_get_vfunc",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "girepository/giobjectinfo.c",
                        "@line": "641",
                        "#text": "Obtain an object type virtual function at index @n."
                    },
                    "source-position": {
                        "@filename": "girepository/giobjectinfo.h",
                        "@line": "155"
                    },
                    "return-value": {
                        "@transfer-ownership": "full",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "girepository/giobjectinfo.c",
                            "@line": "648",
                            "#text": "the #GIVFuncInfo. Free the struct by calling\ng_base_info_unref() when done."
                        },
                        "type": {
                            "@name": "VFuncInfo",
                            "@c:type": "GIVFuncInfo*"
                        }
                    },
                    "parameters": {
                        "parameter": [
                            {
                                "@name": "info",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "girepository/giobjectinfo.c",
                                    "@line": "643",
                                    "#text": "a #GIObjectInfo"
                                },
                                "type": {
                                    "@name": "ObjectInfo",
                                    "@c:type": "GIObjectInfo*"
                                }
                            },
                            {
                                "@name": "n",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "girepository/giobjectinfo.c",
                                    "@line": "644",
                                    "#text": "index of virtual function to get"
                                },
                                "type": {
                                    "@name": "gint",
                                    "@c:type": "gint"
                                }
                            }
                        ]
                    }
                },
                {
                    "@name": "property_info_get_flags",
                    "@c:identifier": "g_property_info_get_flags",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "girepository/gipropertyinfo.c",
                        "@line": "41",
                        "#text": "Obtain the flags for this property info. See #GParamFlags for\nmore information about possible flag values."
                    },
                    "source-position": {
                        "@filename": "girepository/gipropertyinfo.h",
                        "@line": "45"
                    },
                    "return-value": {
                        "@transfer-ownership": "none",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "girepository/gipropertyinfo.c",
                            "@line": "48",
                            "#text": "the flags"
                        },
                        "type": {
                            "@name": "GObject.ParamFlags",
                            "@c:type": "GParamFlags"
                        }
                    },
                    "parameters": {
                        "parameter": {
                            "@name": "info",
                            "@transfer-ownership": "none",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "girepository/gipropertyinfo.c",
                                "@line": "43",
                                "#text": "a #GIPropertyInfo"
                            },
                            "type": {
                                "@name": "PropertyInfo",
                                "@c:type": "GIPropertyInfo*"
                            }
                        }
                    }
                },
                {
                    "@name": "property_info_get_getter",
                    "@c:identifier": "g_property_info_get_getter",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "girepository/gipropertyinfo.c",
                        "@line": "169",
                        "#text": "Obtains the getter function associated with this #GIPropertyInfo.\n\nThe setter is only available for %G_PARAM_READABLE properties."
                    },
                    "source-position": {
                        "@filename": "girepository/gipropertyinfo.h",
                        "@line": "57"
                    },
                    "return-value": {
                        "@transfer-ownership": "full",
                        "@nullable": "1",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "girepository/gipropertyinfo.c",
                            "@line": "177",
                            "#text": "the function info or %NULL if not set.\n  Free it with g_base_info_unref() when done."
                        },
                        "type": {
                            "@name": "FunctionInfo",
                            "@c:type": "GIFunctionInfo*"
                        }
                    },
                    "parameters": {
                        "parameter": {
                            "@name": "info",
                            "@transfer-ownership": "none",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "girepository/gipropertyinfo.c",
                                "@line": "171",
                                "#text": "a #GIPropertyInfo"
                            },
                            "type": {
                                "@name": "PropertyInfo",
                                "@c:type": "GIPropertyInfo*"
                            }
                        }
                    }
                },
                {
                    "@name": "property_info_get_ownership_transfer",
                    "@c:identifier": "g_property_info_get_ownership_transfer",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "girepository/gipropertyinfo.c",
                        "@line": "101",
                        "#text": "Obtain the ownership transfer for this property. See #GITransfer for more\ninformation about transfer values."
                    },
                    "source-position": {
                        "@filename": "girepository/gipropertyinfo.h",
                        "@line": "51"
                    },
                    "return-value": {
                        "@transfer-ownership": "none",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "girepository/gipropertyinfo.c",
                            "@line": "108",
                            "#text": "the transfer"
                        },
                        "type": {
                            "@name": "Transfer",
                            "@c:type": "GITransfer"
                        }
                    },
                    "parameters": {
                        "parameter": {
                            "@name": "info",
                            "@transfer-ownership": "none",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "girepository/gipropertyinfo.c",
                                "@line": "103",
                                "#text": "a #GIPropertyInfo"
                            },
                            "type": {
                                "@name": "PropertyInfo",
                                "@c:type": "GIPropertyInfo*"
                            }
                        }
                    }
                },
                {
                    "@name": "property_info_get_setter",
                    "@c:identifier": "g_property_info_get_setter",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "girepository/gipropertyinfo.c",
                        "@line": "129",
                        "#text": "Obtains the setter function associated with this #GIPropertyInfo.\n\nThe setter is only available for %G_PARAM_WRITABLE properties that\nare also not %G_PARAM_CONSTRUCT_ONLY."
                    },
                    "source-position": {
                        "@filename": "girepository/gipropertyinfo.h",
                        "@line": "54"
                    },
                    "return-value": {
                        "@transfer-ownership": "full",
                        "@nullable": "1",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "girepository/gipropertyinfo.c",
                            "@line": "138",
                            "#text": "the function info or %NULL if not set.\n  Free it with g_base_info_unref() when done."
                        },
                        "type": {
                            "@name": "FunctionInfo",
                            "@c:type": "GIFunctionInfo*"
                        }
                    },
                    "parameters": {
                        "parameter": {
                            "@name": "info",
                            "@transfer-ownership": "none",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "girepository/gipropertyinfo.c",
                                "@line": "131",
                                "#text": "a #GIPropertyInfo"
                            },
                            "type": {
                                "@name": "PropertyInfo",
                                "@c:type": "GIPropertyInfo*"
                            }
                        }
                    }
                },
                {
                    "@name": "property_info_get_type",
                    "@c:identifier": "g_property_info_get_type",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "girepository/gipropertyinfo.c",
                        "@line": "79",
                        "#text": "Obtain the type information for the property @info."
                    },
                    "source-position": {
                        "@filename": "girepository/gipropertyinfo.h",
                        "@line": "48"
                    },
                    "return-value": {
                        "@transfer-ownership": "full",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "girepository/gipropertyinfo.c",
                            "@line": "85",
                            "#text": "the #GITypeInfo, free it with\ng_base_info_unref() when done."
                        },
                        "type": {
                            "@name": "TypeInfo",
                            "@c:type": "GITypeInfo*"
                        }
                    },
                    "parameters": {
                        "parameter": {
                            "@name": "info",
                            "@transfer-ownership": "none",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "girepository/gipropertyinfo.c",
                                "@line": "81",
                                "#text": "a #GIPropertyInfo"
                            },
                            "type": {
                                "@name": "PropertyInfo",
                                "@c:type": "GIPropertyInfo*"
                            }
                        }
                    }
                },
                {
                    "@name": "registered_type_info_get_g_type",
                    "@c:identifier": "g_registered_type_info_get_g_type",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "girepository/giregisteredtypeinfo.c",
                        "@line": "105",
                        "#text": "Obtain the #GType for this registered type or G_TYPE_NONE which a special meaning.\nIt means that either there is no type information associated with this @info or\nthat the shared library which provides the type_init function for this\n@info cannot be called."
                    },
                    "source-position": {
                        "@filename": "girepository/giregisteredtypeinfo.h",
                        "@line": "58"
                    },
                    "return-value": {
                        "@transfer-ownership": "none",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "girepository/giregisteredtypeinfo.c",
                            "@line": "114",
                            "#text": "the #GType."
                        },
                        "type": {
                            "@name": "GType",
                            "@c:type": "GType"
                        }
                    },
                    "parameters": {
                        "parameter": {
                            "@name": "info",
                            "@transfer-ownership": "none",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "girepository/giregisteredtypeinfo.c",
                                "@line": "107",
                                "#text": "a #GIRegisteredTypeInfo"
                            },
                            "type": {
                                "@name": "RegisteredTypeInfo",
                                "@c:type": "GIRegisteredTypeInfo*"
                            }
                        }
                    }
                },
                {
                    "@name": "registered_type_info_get_type_init",
                    "@c:identifier": "g_registered_type_info_get_type_init",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "girepository/giregisteredtypeinfo.c",
                        "@line": "76",
                        "#text": "Obtain the type init function for @info. The type init function is the\nfunction which will register the GType within the GObject type system.\nUsually this is not called by langauge bindings or applications, use\ng_registered_type_info_get_g_type() directly instead."
                    },
                    "source-position": {
                        "@filename": "girepository/giregisteredtypeinfo.h",
                        "@line": "55"
                    },
                    "return-value": {
                        "@transfer-ownership": "none",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "girepository/giregisteredtypeinfo.c",
                            "@line": "85",
                            "#text": "the symbol name of the type init function, suitable for\npassing into g_module_symbol()."
                        },
                        "type": {
                            "@name": "utf8",
                            "@c:type": "const gchar*"
                        }
                    },
                    "parameters": {
                        "parameter": {
                            "@name": "info",
                            "@transfer-ownership": "none",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "girepository/giregisteredtypeinfo.c",
                                "@line": "78",
                                "#text": "a #GIRegisteredTypeInfo"
                            },
                            "type": {
                                "@name": "RegisteredTypeInfo",
                                "@c:type": "GIRegisteredTypeInfo*"
                            }
                        }
                    }
                },
                {
                    "@name": "registered_type_info_get_type_name",
                    "@c:identifier": "g_registered_type_info_get_type_name",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "girepository/giregisteredtypeinfo.c",
                        "@line": "50",
                        "#text": "Obtain the type name of the struct within the GObject type system.\nThis type can be passed to g_type_name() to get a #GType."
                    },
                    "source-position": {
                        "@filename": "girepository/giregisteredtypeinfo.h",
                        "@line": "52"
                    },
                    "return-value": {
                        "@transfer-ownership": "none",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "girepository/giregisteredtypeinfo.c",
                            "@line": "57",
                            "#text": "the type name"
                        },
                        "type": {
                            "@name": "utf8",
                            "@c:type": "const gchar*"
                        }
                    },
                    "parameters": {
                        "parameter": {
                            "@name": "info",
                            "@transfer-ownership": "none",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "girepository/giregisteredtypeinfo.c",
                                "@line": "52",
                                "#text": "a #GIRegisteredTypeInfo"
                            },
                            "type": {
                                "@name": "RegisteredTypeInfo",
                                "@c:type": "GIRegisteredTypeInfo*"
                            }
                        }
                    }
                },
                {
                    "@name": "signal_info_get_class_closure",
                    "@c:identifier": "g_signal_info_get_class_closure",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "girepository/gisignalinfo.c",
                        "@line": "91",
                        "#text": "Obtain the class closure for this signal if one is set. The class\nclosure is a virtual function on the type that the signal belongs to.\nIf the signal lacks a closure %NULL will be returned."
                    },
                    "source-position": {
                        "@filename": "girepository/gisignalinfo.h",
                        "@line": "49"
                    },
                    "return-value": {
                        "@transfer-ownership": "full",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "girepository/gisignalinfo.c",
                            "@line": "99",
                            "#text": "the class closure or %NULL"
                        },
                        "type": {
                            "@name": "VFuncInfo",
                            "@c:type": "GIVFuncInfo*"
                        }
                    },
                    "parameters": {
                        "parameter": {
                            "@name": "info",
                            "@transfer-ownership": "none",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "girepository/gisignalinfo.c",
                                "@line": "93",
                                "#text": "a #GISignalInfo"
                            },
                            "type": {
                                "@name": "SignalInfo",
                                "@c:type": "GISignalInfo*"
                            }
                        }
                    }
                },
                {
                    "@name": "signal_info_get_flags",
                    "@c:identifier": "g_signal_info_get_flags",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "girepository/gisignalinfo.c",
                        "@line": "45",
                        "#text": "Obtain the flags for this signal info. See #GSignalFlags for\nmore information about possible flag values."
                    },
                    "source-position": {
                        "@filename": "girepository/gisignalinfo.h",
                        "@line": "46"
                    },
                    "return-value": {
                        "@transfer-ownership": "none",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "girepository/gisignalinfo.c",
                            "@line": "52",
                            "#text": "the flags"
                        },
                        "type": {
                            "@name": "GObject.SignalFlags",
                            "@c:type": "GSignalFlags"
                        }
                    },
                    "parameters": {
                        "parameter": {
                            "@name": "info",
                            "@transfer-ownership": "none",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "girepository/gisignalinfo.c",
                                "@line": "47",
                                "#text": "a #GISignalInfo"
                            },
                            "type": {
                                "@name": "SignalInfo",
                                "@c:type": "GISignalInfo*"
                            }
                        }
                    }
                },
                {
                    "@name": "signal_info_true_stops_emit",
                    "@c:identifier": "g_signal_info_true_stops_emit",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "girepository/gisignalinfo.c",
                        "@line": "118",
                        "#text": "Obtain if the returning true in the signal handler will\nstop the emission of the signal."
                    },
                    "source-position": {
                        "@filename": "girepository/gisignalinfo.h",
                        "@line": "52"
                    },
                    "return-value": {
                        "@transfer-ownership": "none",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "girepository/gisignalinfo.c",
                            "@line": "125",
                            "#text": "%TRUE if returning true stops the signal emission"
                        },
                        "type": {
                            "@name": "gboolean",
                            "@c:type": "gboolean"
                        }
                    },
                    "parameters": {
                        "parameter": {
                            "@name": "info",
                            "@transfer-ownership": "none",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "girepository/gisignalinfo.c",
                                "@line": "120",
                                "#text": "a #GISignalInfo"
                            },
                            "type": {
                                "@name": "SignalInfo",
                                "@c:type": "GISignalInfo*"
                            }
                        }
                    }
                },
                {
                    "@name": "struct_info_find_field",
                    "@c:identifier": "g_struct_info_find_field",
                    "@version": "1.46",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "girepository/gistructinfo.c",
                        "@line": "110",
                        "#text": "Obtain the type information for field named @name."
                    },
                    "source-position": {
                        "@filename": "girepository/gistructinfo.h",
                        "@line": "52"
                    },
                    "return-value": {
                        "@transfer-ownership": "full",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "girepository/gistructinfo.c",
                            "@line": "118",
                            "#text": "the #GIFieldInfo or %NULL if not found,\nfree it with g_base_info_unref() when done."
                        },
                        "type": {
                            "@name": "FieldInfo",
                            "@c:type": "GIFieldInfo*"
                        }
                    },
                    "parameters": {
                        "parameter": [
                            {
                                "@name": "info",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "girepository/gistructinfo.c",
                                    "@line": "112",
                                    "#text": "a #GIStructInfo"
                                },
                                "type": {
                                    "@name": "StructInfo",
                                    "@c:type": "GIStructInfo*"
                                }
                            },
                            {
                                "@name": "name",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "girepository/gistructinfo.c",
                                    "@line": "113",
                                    "#text": "a field name"
                                },
                                "type": {
                                    "@name": "utf8",
                                    "@c:type": "const gchar*"
                                }
                            }
                        ]
                    }
                },
                {
                    "@name": "struct_info_find_method",
                    "@c:identifier": "g_struct_info_find_method",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "girepository/gistructinfo.c",
                        "@line": "193",
                        "#text": "Obtain the type information for method named @name."
                    },
                    "source-position": {
                        "@filename": "girepository/gistructinfo.h",
                        "@line": "63"
                    },
                    "return-value": {
                        "@transfer-ownership": "full",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "girepository/gistructinfo.c",
                            "@line": "200",
                            "#text": "the #GIFunctionInfo, free it with g_base_info_unref()\nwhen done."
                        },
                        "type": {
                            "@name": "FunctionInfo",
                            "@c:type": "GIFunctionInfo*"
                        }
                    },
                    "parameters": {
                        "parameter": [
                            {
                                "@name": "info",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "girepository/gistructinfo.c",
                                    "@line": "195",
                                    "#text": "a #GIStructInfo"
                                },
                                "type": {
                                    "@name": "StructInfo",
                                    "@c:type": "GIStructInfo*"
                                }
                            },
                            {
                                "@name": "name",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "girepository/gistructinfo.c",
                                    "@line": "196",
                                    "#text": "a method name"
                                },
                                "type": {
                                    "@name": "utf8",
                                    "@c:type": "const gchar*"
                                }
                            }
                        ]
                    }
                },
                {
                    "@name": "struct_info_get_alignment",
                    "@c:identifier": "g_struct_info_get_alignment",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "girepository/gistructinfo.c",
                        "@line": "232",
                        "#text": "Obtain the required alignment of the structure."
                    },
                    "source-position": {
                        "@filename": "girepository/gistructinfo.h",
                        "@line": "70"
                    },
                    "return-value": {
                        "@transfer-ownership": "none",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "girepository/gistructinfo.c",
                            "@line": "238",
                            "#text": "required alignment in bytes"
                        },
                        "type": {
                            "@name": "gsize",
                            "@c:type": "gsize"
                        }
                    },
                    "parameters": {
                        "parameter": {
                            "@name": "info",
                            "@transfer-ownership": "none",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "girepository/gistructinfo.c",
                                "@line": "234",
                                "#text": "a #GIStructInfo"
                            },
                            "type": {
                                "@name": "StructInfo",
                                "@c:type": "GIStructInfo*"
                            }
                        }
                    }
                },
                {
                    "@name": "struct_info_get_field",
                    "@c:identifier": "g_struct_info_get_field",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "girepository/gistructinfo.c",
                        "@line": "90",
                        "#text": "Obtain the type information for field with specified index."
                    },
                    "source-position": {
                        "@filename": "girepository/gistructinfo.h",
                        "@line": "48"
                    },
                    "return-value": {
                        "@transfer-ownership": "full",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "girepository/gistructinfo.c",
                            "@line": "97",
                            "#text": "the #GIFieldInfo, free it with g_base_info_unref()\nwhen done."
                        },
                        "type": {
                            "@name": "FieldInfo",
                            "@c:type": "GIFieldInfo*"
                        }
                    },
                    "parameters": {
                        "parameter": [
                            {
                                "@name": "info",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "girepository/gistructinfo.c",
                                    "@line": "92",
                                    "#text": "a #GIStructInfo"
                                },
                                "type": {
                                    "@name": "StructInfo",
                                    "@c:type": "GIStructInfo*"
                                }
                            },
                            {
                                "@name": "n",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "girepository/gistructinfo.c",
                                    "@line": "93",
                                    "#text": "a field index"
                                },
                                "type": {
                                    "@name": "gint",
                                    "@c:type": "gint"
                                }
                            }
                        ]
                    }
                },
                {
                    "@name": "struct_info_get_method",
                    "@c:identifier": "g_struct_info_get_method",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "girepository/gistructinfo.c",
                        "@line": "169",
                        "#text": "Obtain the type information for method with specified index."
                    },
                    "source-position": {
                        "@filename": "girepository/gistructinfo.h",
                        "@line": "59"
                    },
                    "return-value": {
                        "@transfer-ownership": "full",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "girepository/gistructinfo.c",
                            "@line": "176",
                            "#text": "the #GIFunctionInfo, free it with g_base_info_unref()\nwhen done."
                        },
                        "type": {
                            "@name": "FunctionInfo",
                            "@c:type": "GIFunctionInfo*"
                        }
                    },
                    "parameters": {
                        "parameter": [
                            {
                                "@name": "info",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "girepository/gistructinfo.c",
                                    "@line": "171",
                                    "#text": "a #GIStructInfo"
                                },
                                "type": {
                                    "@name": "StructInfo",
                                    "@c:type": "GIStructInfo*"
                                }
                            },
                            {
                                "@name": "n",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "girepository/gistructinfo.c",
                                    "@line": "172",
                                    "#text": "a method index"
                                },
                                "type": {
                                    "@name": "gint",
                                    "@c:type": "gint"
                                }
                            }
                        ]
                    }
                },
                {
                    "@name": "struct_info_get_n_fields",
                    "@c:identifier": "g_struct_info_get_n_fields",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "girepository/gistructinfo.c",
                        "@line": "43",
                        "#text": "Obtain the number of fields this structure has."
                    },
                    "source-position": {
                        "@filename": "girepository/gistructinfo.h",
                        "@line": "45"
                    },
                    "return-value": {
                        "@transfer-ownership": "none",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "girepository/gistructinfo.c",
                            "@line": "49",
                            "#text": "number of fields"
                        },
                        "type": {
                            "@name": "gint",
                            "@c:type": "gint"
                        }
                    },
                    "parameters": {
                        "parameter": {
                            "@name": "info",
                            "@transfer-ownership": "none",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "girepository/gistructinfo.c",
                                "@line": "45",
                                "#text": "a #GIStructInfo"
                            },
                            "type": {
                                "@name": "StructInfo",
                                "@c:type": "GIStructInfo*"
                            }
                        }
                    }
                },
                {
                    "@name": "struct_info_get_n_methods",
                    "@c:identifier": "g_struct_info_get_n_methods",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "girepository/gistructinfo.c",
                        "@line": "152",
                        "#text": "Obtain the number of methods this structure has."
                    },
                    "source-position": {
                        "@filename": "girepository/gistructinfo.h",
                        "@line": "56"
                    },
                    "return-value": {
                        "@transfer-ownership": "none",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "girepository/gistructinfo.c",
                            "@line": "158",
                            "#text": "number of methods"
                        },
                        "type": {
                            "@name": "gint",
                            "@c:type": "gint"
                        }
                    },
                    "parameters": {
                        "parameter": {
                            "@name": "info",
                            "@transfer-ownership": "none",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "girepository/gistructinfo.c",
                                "@line": "154",
                                "#text": "a #GIStructInfo"
                            },
                            "type": {
                                "@name": "StructInfo",
                                "@c:type": "GIStructInfo*"
                            }
                        }
                    }
                },
                {
                    "@name": "struct_info_get_size",
                    "@c:identifier": "g_struct_info_get_size",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "girepository/gistructinfo.c",
                        "@line": "215",
                        "#text": "Obtain the total size of the structure."
                    },
                    "source-position": {
                        "@filename": "girepository/gistructinfo.h",
                        "@line": "67"
                    },
                    "return-value": {
                        "@transfer-ownership": "none",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "girepository/gistructinfo.c",
                            "@line": "221",
                            "#text": "size of the structure in bytes"
                        },
                        "type": {
                            "@name": "gsize",
                            "@c:type": "gsize"
                        }
                    },
                    "parameters": {
                        "parameter": {
                            "@name": "info",
                            "@transfer-ownership": "none",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "girepository/gistructinfo.c",
                                "@line": "217",
                                "#text": "a #GIStructInfo"
                            },
                            "type": {
                                "@name": "StructInfo",
                                "@c:type": "GIStructInfo*"
                            }
                        }
                    }
                },
                {
                    "@name": "struct_info_is_foreign",
                    "@c:identifier": "g_struct_info_is_foreign",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "girepository/gistructinfo.c",
                        "@line": "249",
                        "#text": "TODO"
                    },
                    "source-position": {
                        "@filename": "girepository/gistructinfo.h",
                        "@line": "76"
                    },
                    "return-value": {
                        "@transfer-ownership": "none",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "girepository/gistructinfo.c",
                            "@line": "255",
                            "#text": "TODO"
                        },
                        "type": {
                            "@name": "gboolean",
                            "@c:type": "gboolean"
                        }
                    },
                    "parameters": {
                        "parameter": {
                            "@name": "info",
                            "@transfer-ownership": "none",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "girepository/gistructinfo.c",
                                "@line": "251",
                                "#text": "TODO"
                            },
                            "type": {
                                "@name": "StructInfo",
                                "@c:type": "GIStructInfo*"
                            }
                        }
                    }
                },
                {
                    "@name": "struct_info_is_gtype_struct",
                    "@c:identifier": "g_struct_info_is_gtype_struct",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "girepository/gistructinfo.c",
                        "@line": "266",
                        "#text": "Return true if this structure represents the \"class structure\" for some\n#GObject or #GInterface.  This function is mainly useful to hide this kind of structure\nfrom generated public APIs."
                    },
                    "source-position": {
                        "@filename": "girepository/gistructinfo.h",
                        "@line": "73"
                    },
                    "return-value": {
                        "@transfer-ownership": "none",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "girepository/gistructinfo.c",
                            "@line": "274",
                            "#text": "%TRUE if this is a class struct, %FALSE otherwise"
                        },
                        "type": {
                            "@name": "gboolean",
                            "@c:type": "gboolean"
                        }
                    },
                    "parameters": {
                        "parameter": {
                            "@name": "info",
                            "@transfer-ownership": "none",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "girepository/gistructinfo.c",
                                "@line": "268",
                                "#text": "a #GIStructInfo"
                            },
                            "type": {
                                "@name": "StructInfo",
                                "@c:type": "GIStructInfo*"
                            }
                        }
                    }
                },
                {
                    "@name": "type_info_argument_from_hash_pointer",
                    "@c:identifier": "g_type_info_argument_from_hash_pointer",
                    "@version": "1.66",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "girepository/gitypeinfo.c",
                        "@line": "447",
                        "#text": "GLib data structures, such as #GList, #GSList, and #GHashTable, all store\ndata pointers.\nIn the case where the list or hash table is storing single types rather than\nstructs, these data pointers may have values stuffed into them via macros\nsuch as %GPOINTER_TO_INT.\n\nUse this function to ensure that all values are correctly extracted from\nstuffed pointers, regardless of the machine's architecture or endianness.\n\nThis function fills in the appropriate field of @arg with the value extracted\nfrom @hash_pointer, depending on the storage type of @info."
                    },
                    "source-position": {
                        "@filename": "girepository/gitypeinfo.h",
                        "@line": "141"
                    },
                    "return-value": {
                        "@transfer-ownership": "none",
                        "type": {
                            "@name": "none",
                            "@c:type": "void"
                        }
                    },
                    "parameters": {
                        "parameter": [
                            {
                                "@name": "info",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "girepository/gitypeinfo.c",
                                    "@line": "449",
                                    "#text": "a #GITypeInfo"
                                },
                                "type": {
                                    "@name": "TypeInfo",
                                    "@c:type": "GITypeInfo*"
                                }
                            },
                            {
                                "@name": "hash_pointer",
                                "@transfer-ownership": "none",
                                "@nullable": "1",
                                "@allow-none": "1",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "girepository/gitypeinfo.c",
                                    "@line": "450",
                                    "#text": "A pointer, such as a #GHashTable data pointer"
                                },
                                "type": {
                                    "@name": "gpointer",
                                    "@c:type": "gpointer"
                                }
                            },
                            {
                                "@name": "arg",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "girepository/gitypeinfo.c",
                                    "@line": "451",
                                    "#text": "A #GIArgument to fill in"
                                },
                                "type": {
                                    "@name": "Argument",
                                    "@c:type": "GIArgument*"
                                }
                            }
                        ]
                    }
                },
                {
                    "@name": "type_info_get_array_fixed_size",
                    "@c:identifier": "g_type_info_get_array_fixed_size",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "girepository/gitypeinfo.c",
                        "@line": "248",
                        "#text": "Obtain the fixed array size of the type. The type tag must be a\n#GI_TYPE_TAG_ARRAY or -1 will be returned."
                    },
                    "source-position": {
                        "@filename": "girepository/gitypeinfo.h",
                        "@line": "129"
                    },
                    "return-value": {
                        "@transfer-ownership": "none",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "girepository/gitypeinfo.c",
                            "@line": "255",
                            "#text": "the size or -1 if it's not an array"
                        },
                        "type": {
                            "@name": "gint",
                            "@c:type": "gint"
                        }
                    },
                    "parameters": {
                        "parameter": {
                            "@name": "info",
                            "@transfer-ownership": "none",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "girepository/gitypeinfo.c",
                                "@line": "250",
                                "#text": "a #GITypeInfo"
                            },
                            "type": {
                                "@name": "TypeInfo",
                                "@c:type": "GITypeInfo*"
                            }
                        }
                    }
                },
                {
                    "@name": "type_info_get_array_length",
                    "@c:identifier": "g_type_info_get_array_length",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "girepository/gitypeinfo.c",
                        "@line": "214",
                        "#text": "Obtain the position of the argument which gives the array length of the type.\nThe type tag must be a #GI_TYPE_TAG_ARRAY or -1 will be returned."
                    },
                    "source-position": {
                        "@filename": "girepository/gitypeinfo.h",
                        "@line": "126"
                    },
                    "return-value": {
                        "@transfer-ownership": "none",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "girepository/gitypeinfo.c",
                            "@line": "221",
                            "#text": "the array length, or -1 if the type is not an array"
                        },
                        "type": {
                            "@name": "gint",
                            "@c:type": "gint"
                        }
                    },
                    "parameters": {
                        "parameter": {
                            "@name": "info",
                            "@transfer-ownership": "none",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "girepository/gitypeinfo.c",
                                "@line": "216",
                                "#text": "a #GITypeInfo"
                            },
                            "type": {
                                "@name": "TypeInfo",
                                "@c:type": "GITypeInfo*"
                            }
                        }
                    }
                },
                {
                    "@name": "type_info_get_array_type",
                    "@c:identifier": "g_type_info_get_array_type",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "girepository/gitypeinfo.c",
                        "@line": "313",
                        "#text": "Obtain the array type for this type. See #GIArrayType for a list of\npossible values. If the type tag of this type is not array, -1 will be\nreturned."
                    },
                    "source-position": {
                        "@filename": "girepository/gitypeinfo.h",
                        "@line": "135"
                    },
                    "return-value": {
                        "@transfer-ownership": "none",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "girepository/gitypeinfo.c",
                            "@line": "321",
                            "#text": "the array type or -1"
                        },
                        "type": {
                            "@name": "ArrayType",
                            "@c:type": "GIArrayType"
                        }
                    },
                    "parameters": {
                        "parameter": {
                            "@name": "info",
                            "@transfer-ownership": "none",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "girepository/gitypeinfo.c",
                                "@line": "315",
                                "#text": "a #GITypeInfo"
                            },
                            "type": {
                                "@name": "TypeInfo",
                                "@c:type": "GITypeInfo*"
                            }
                        }
                    }
                },
                {
                    "@name": "type_info_get_interface",
                    "@c:identifier": "g_type_info_get_interface",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "girepository/gitypeinfo.c",
                        "@line": "158",
                        "#text": "For types which have #GI_TYPE_TAG_INTERFACE such as GObjects and boxed values,\nthis function returns full information about the referenced type.  You can then\ninspect the type of the returned #GIBaseInfo to further query whether it is\na concrete GObject, a GInterface, a structure, etc. using g_base_info_get_type()."
                    },
                    "source-position": {
                        "@filename": "girepository/gitypeinfo.h",
                        "@line": "123"
                    },
                    "return-value": {
                        "@transfer-ownership": "full",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "girepository/gitypeinfo.c",
                            "@line": "167",
                            "#text": "the #GIBaseInfo, or %NULL. Free it with\ng_base_info_unref() when done."
                        },
                        "type": {
                            "@name": "BaseInfo",
                            "@c:type": "GIBaseInfo*"
                        }
                    },
                    "parameters": {
                        "parameter": {
                            "@name": "info",
                            "@transfer-ownership": "none",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "girepository/gitypeinfo.c",
                                "@line": "160",
                                "#text": "a #GITypeInfo"
                            },
                            "type": {
                                "@name": "TypeInfo",
                                "@c:type": "GITypeInfo*"
                            }
                        }
                    }
                },
                {
                    "@name": "type_info_get_param_type",
                    "@c:identifier": "g_type_info_get_param_type",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "girepository/gitypeinfo.c",
                        "@line": "115",
                        "#text": "Obtain the parameter type @n."
                    },
                    "source-position": {
                        "@filename": "girepository/gitypeinfo.h",
                        "@line": "119"
                    },
                    "return-value": {
                        "@transfer-ownership": "full",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "girepository/gitypeinfo.c",
                            "@line": "122",
                            "#text": "the param type info"
                        },
                        "type": {
                            "@name": "TypeInfo",
                            "@c:type": "GITypeInfo*"
                        }
                    },
                    "parameters": {
                        "parameter": [
                            {
                                "@name": "info",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "girepository/gitypeinfo.c",
                                    "@line": "117",
                                    "#text": "a #GITypeInfo"
                                },
                                "type": {
                                    "@name": "TypeInfo",
                                    "@c:type": "GITypeInfo*"
                                }
                            },
                            {
                                "@name": "n",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "girepository/gitypeinfo.c",
                                    "@line": "118",
                                    "#text": "index of the parameter"
                                },
                                "type": {
                                    "@name": "gint",
                                    "@c:type": "gint"
                                }
                            }
                        ]
                    }
                },
                {
                    "@name": "type_info_get_storage_type",
                    "@c:identifier": "g_type_info_get_storage_type",
                    "@version": "1.66",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "girepository/gitypeinfo.c",
                        "@line": "345",
                        "#text": "Obtain the type tag corresponding to the underlying storage type in C for\nthe type.\nSee #GITypeTag for a list of type tags."
                    },
                    "source-position": {
                        "@filename": "girepository/gitypeinfo.h",
                        "@line": "138"
                    },
                    "return-value": {
                        "@transfer-ownership": "none",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "girepository/gitypeinfo.c",
                            "@line": "353",
                            "#text": "the type tag"
                        },
                        "type": {
                            "@name": "TypeTag",
                            "@c:type": "GITypeTag"
                        }
                    },
                    "parameters": {
                        "parameter": {
                            "@name": "info",
                            "@transfer-ownership": "none",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "girepository/gitypeinfo.c",
                                "@line": "347",
                                "#text": "a #GITypeInfo"
                            },
                            "type": {
                                "@name": "TypeInfo",
                                "@c:type": "GITypeInfo*"
                            }
                        }
                    }
                },
                {
                    "@name": "type_info_get_tag",
                    "@c:identifier": "g_type_info_get_tag",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "girepository/gitypeinfo.c",
                        "@line": "83",
                        "#text": "Obtain the type tag for the type. See #GITypeTag for a list\nof type tags."
                    },
                    "source-position": {
                        "@filename": "girepository/gitypeinfo.h",
                        "@line": "116"
                    },
                    "return-value": {
                        "@transfer-ownership": "none",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "girepository/gitypeinfo.c",
                            "@line": "90",
                            "#text": "the type tag"
                        },
                        "type": {
                            "@name": "TypeTag",
                            "@c:type": "GITypeTag"
                        }
                    },
                    "parameters": {
                        "parameter": {
                            "@name": "info",
                            "@transfer-ownership": "none",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "girepository/gitypeinfo.c",
                                "@line": "85",
                                "#text": "a #GITypeInfo"
                            },
                            "type": {
                                "@name": "TypeInfo",
                                "@c:type": "GITypeInfo*"
                            }
                        }
                    }
                },
                {
                    "@name": "type_info_hash_pointer_from_argument",
                    "@c:identifier": "g_type_info_hash_pointer_from_argument",
                    "@version": "1.66",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "girepository/gitypeinfo.c",
                        "@line": "541",
                        "#text": "GLib data structures, such as #GList, #GSList, and #GHashTable, all store\ndata pointers.\nIn the case where the list or hash table is storing single types rather than\nstructs, these data pointers may have values stuffed into them via macros\nsuch as %GPOINTER_TO_INT.\n\nUse this function to ensure that all values are correctly stuffed into\npointers, regardless of the machine's architecture or endianness.\n\nThis function returns a pointer stuffed with the appropriate field of @arg,\ndepending on the storage type of @info."
                    },
                    "source-position": {
                        "@filename": "girepository/gitypeinfo.h",
                        "@line": "146"
                    },
                    "return-value": {
                        "@transfer-ownership": "none",
                        "@nullable": "1",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "girepository/gitypeinfo.c",
                            "@line": "558",
                            "#text": "A stuffed pointer, that can be stored in a #GHashTable, for example"
                        },
                        "type": {
                            "@name": "gpointer",
                            "@c:type": "gpointer"
                        }
                    },
                    "parameters": {
                        "parameter": [
                            {
                                "@name": "info",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "girepository/gitypeinfo.c",
                                    "@line": "543",
                                    "#text": "a #GITypeInfo"
                                },
                                "type": {
                                    "@name": "TypeInfo",
                                    "@c:type": "GITypeInfo*"
                                }
                            },
                            {
                                "@name": "arg",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "girepository/gitypeinfo.c",
                                    "@line": "544",
                                    "#text": "A #GIArgument with the value to stuff into a pointer"
                                },
                                "type": {
                                    "@name": "Argument",
                                    "@c:type": "GIArgument*"
                                }
                            }
                        ]
                    }
                },
                {
                    "@name": "type_info_is_pointer",
                    "@c:identifier": "g_type_info_is_pointer",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "girepository/gitypeinfo.c",
                        "@line": "49",
                        "#text": "Obtain if the type is passed as a reference.\n\nNote that the types of %GI_DIRECTION_OUT and %GI_DIRECTION_INOUT parameters\nwill only be pointers if the underlying type being transferred is a pointer\n(i.e. only if the type of the C function\u2019s formal parameter is a pointer to a\npointer)."
                    },
                    "source-position": {
                        "@filename": "girepository/gitypeinfo.h",
                        "@line": "113"
                    },
                    "return-value": {
                        "@transfer-ownership": "none",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "girepository/gitypeinfo.c",
                            "@line": "60",
                            "#text": "%TRUE if it is a pointer"
                        },
                        "type": {
                            "@name": "gboolean",
                            "@c:type": "gboolean"
                        }
                    },
                    "parameters": {
                        "parameter": {
                            "@name": "info",
                            "@transfer-ownership": "none",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "girepository/gitypeinfo.c",
                                "@line": "51",
                                "#text": "a #GITypeInfo"
                            },
                            "type": {
                                "@name": "TypeInfo",
                                "@c:type": "GITypeInfo*"
                            }
                        }
                    }
                },
                {
                    "@name": "type_info_is_zero_terminated",
                    "@c:identifier": "g_type_info_is_zero_terminated",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "girepository/gitypeinfo.c",
                        "@line": "282",
                        "#text": "Obtain if the last element of the array is %NULL. The type tag must be a\n#GI_TYPE_TAG_ARRAY or %FALSE will be returned."
                    },
                    "source-position": {
                        "@filename": "girepository/gitypeinfo.h",
                        "@line": "132"
                    },
                    "return-value": {
                        "@transfer-ownership": "none",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "girepository/gitypeinfo.c",
                            "@line": "289",
                            "#text": "%TRUE if zero terminated"
                        },
                        "type": {
                            "@name": "gboolean",
                            "@c:type": "gboolean"
                        }
                    },
                    "parameters": {
                        "parameter": {
                            "@name": "info",
                            "@transfer-ownership": "none",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "girepository/gitypeinfo.c",
                                "@line": "284",
                                "#text": "a #GITypeInfo"
                            },
                            "type": {
                                "@name": "TypeInfo",
                                "@c:type": "GITypeInfo*"
                            }
                        }
                    }
                },
                {
                    "@name": "type_tag_argument_from_hash_pointer",
                    "@c:identifier": "gi_type_tag_argument_from_hash_pointer",
                    "@version": "1.72",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "girepository/gitypeinfo.c",
                        "@line": "374",
                        "#text": "GLib data structures, such as #GList, #GSList, and #GHashTable, all store\ndata pointers.\nIn the case where the list or hash table is storing single types rather than\nstructs, these data pointers may have values stuffed into them via macros\nsuch as %GPOINTER_TO_INT.\n\nUse this function to ensure that all values are correctly extracted from\nstuffed pointers, regardless of the machine's architecture or endianness.\n\nThis function fills in the appropriate field of @arg with the value extracted\nfrom @hash_pointer, depending on @storage_type."
                    },
                    "source-position": {
                        "@filename": "girepository/gitypeinfo.h",
                        "@line": "150"
                    },
                    "return-value": {
                        "@transfer-ownership": "none",
                        "type": {
                            "@name": "none",
                            "@c:type": "void"
                        }
                    },
                    "parameters": {
                        "parameter": [
                            {
                                "@name": "storage_type",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "girepository/gitypeinfo.c",
                                    "@line": "376",
                                    "#text": "a #GITypeTag obtained from g_type_info_get_storage_type()"
                                },
                                "type": {
                                    "@name": "TypeTag",
                                    "@c:type": "GITypeTag"
                                }
                            },
                            {
                                "@name": "hash_pointer",
                                "@transfer-ownership": "none",
                                "@nullable": "1",
                                "@allow-none": "1",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "girepository/gitypeinfo.c",
                                    "@line": "377",
                                    "#text": "A pointer, such as a #GHashTable data pointer"
                                },
                                "type": {
                                    "@name": "gpointer",
                                    "@c:type": "gpointer"
                                }
                            },
                            {
                                "@name": "arg",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "girepository/gitypeinfo.c",
                                    "@line": "378",
                                    "#text": "A #GIArgument to fill in"
                                },
                                "type": {
                                    "@name": "Argument",
                                    "@c:type": "GIArgument*"
                                }
                            }
                        ]
                    }
                },
                {
                    "@name": "type_tag_hash_pointer_from_argument",
                    "@c:identifier": "gi_type_tag_hash_pointer_from_argument",
                    "@version": "1.72",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "girepository/gitypeinfo.c",
                        "@line": "477",
                        "#text": "GLib data structures, such as #GList, #GSList, and #GHashTable, all store\ndata pointers.\nIn the case where the list or hash table is storing single types rather than\nstructs, these data pointers may have values stuffed into them via macros\nsuch as %GPOINTER_TO_INT.\n\nUse this function to ensure that all values are correctly stuffed into\npointers, regardless of the machine's architecture or endianness.\n\nThis function returns a pointer stuffed with the appropriate field of @arg,\ndepending on @storage_type."
                    },
                    "source-position": {
                        "@filename": "girepository/gitypeinfo.h",
                        "@line": "155"
                    },
                    "return-value": {
                        "@transfer-ownership": "none",
                        "@nullable": "1",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "girepository/gitypeinfo.c",
                            "@line": "494",
                            "#text": "A stuffed pointer, that can be stored in a #GHashTable, for example"
                        },
                        "type": {
                            "@name": "gpointer",
                            "@c:type": "gpointer"
                        }
                    },
                    "parameters": {
                        "parameter": [
                            {
                                "@name": "storage_type",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "girepository/gitypeinfo.c",
                                    "@line": "479",
                                    "#text": "a #GITypeTag obtained from g_type_info_get_storage_type()"
                                },
                                "type": {
                                    "@name": "TypeTag",
                                    "@c:type": "GITypeTag"
                                }
                            },
                            {
                                "@name": "arg",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "girepository/gitypeinfo.c",
                                    "@line": "480",
                                    "#text": "A #GIArgument with the value to stuff into a pointer"
                                },
                                "type": {
                                    "@name": "Argument",
                                    "@c:type": "GIArgument*"
                                }
                            }
                        ]
                    }
                },
                {
                    "@name": "type_tag_to_string",
                    "@c:identifier": "g_type_tag_to_string",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "girepository/girepository.c",
                        "@line": "1764",
                        "#text": "Obtain a string representation of @type"
                    },
                    "source-position": {
                        "@filename": "girepository/gitypeinfo.h",
                        "@line": "106"
                    },
                    "return-value": {
                        "@transfer-ownership": "none",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "girepository/girepository.c",
                            "@line": "1770",
                            "#text": "the string"
                        },
                        "type": {
                            "@name": "utf8",
                            "@c:type": "const gchar*"
                        }
                    },
                    "parameters": {
                        "parameter": {
                            "@name": "type",
                            "@transfer-ownership": "none",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "girepository/girepository.c",
                                "@line": "1766",
                                "#text": "the type_tag"
                            },
                            "type": {
                                "@name": "TypeTag",
                                "@c:type": "GITypeTag"
                            }
                        }
                    }
                },
                {
                    "@name": "union_info_find_method",
                    "@c:identifier": "g_union_info_find_method",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "girepository/giunioninfo.c",
                        "@line": "212",
                        "#text": "Obtain the type information for method named @name."
                    },
                    "source-position": {
                        "@filename": "girepository/giunioninfo.h",
                        "@line": "71"
                    },
                    "return-value": {
                        "@transfer-ownership": "full",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "girepository/giunioninfo.c",
                            "@line": "219",
                            "#text": "the #GIFunctionInfo, free it with g_base_info_unref()\nwhen done."
                        },
                        "type": {
                            "@name": "FunctionInfo",
                            "@c:type": "GIFunctionInfo*"
                        }
                    },
                    "parameters": {
                        "parameter": [
                            {
                                "@name": "info",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "girepository/giunioninfo.c",
                                    "@line": "214",
                                    "#text": "a #GIUnionInfo"
                                },
                                "type": {
                                    "@name": "UnionInfo",
                                    "@c:type": "GIUnionInfo*"
                                }
                            },
                            {
                                "@name": "name",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "girepository/giunioninfo.c",
                                    "@line": "215",
                                    "#text": "a method name"
                                },
                                "type": {
                                    "@name": "utf8",
                                    "@c:type": "const gchar*"
                                }
                            }
                        ]
                    }
                },
                {
                    "@name": "union_info_get_alignment",
                    "@c:identifier": "g_union_info_get_alignment",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "girepository/giunioninfo.c",
                        "@line": "254",
                        "#text": "Obtain the required alignment of the union."
                    },
                    "source-position": {
                        "@filename": "girepository/giunioninfo.h",
                        "@line": "78"
                    },
                    "return-value": {
                        "@transfer-ownership": "none",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "girepository/giunioninfo.c",
                            "@line": "260",
                            "#text": "required alignment in bytes"
                        },
                        "type": {
                            "@name": "gsize",
                            "@c:type": "gsize"
                        }
                    },
                    "parameters": {
                        "parameter": {
                            "@name": "info",
                            "@transfer-ownership": "none",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "girepository/giunioninfo.c",
                                "@line": "256",
                                "#text": "a #GIUnionInfo"
                            },
                            "type": {
                                "@name": "UnionInfo",
                                "@c:type": "GIUnionInfo*"
                            }
                        }
                    }
                },
                {
                    "@name": "union_info_get_discriminator",
                    "@c:identifier": "g_union_info_get_discriminator",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "girepository/giunioninfo.c",
                        "@line": "176",
                        "#text": "Obtain discriminator value assigned for n-th union field, i.e. n-th\nunion field is the active one if discriminator contains this\nconstant."
                    },
                    "source-position": {
                        "@filename": "girepository/giunioninfo.h",
                        "@line": "67"
                    },
                    "return-value": {
                        "@transfer-ownership": "full",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "girepository/giunioninfo.c",
                            "@line": "185",
                            "#text": "the #GIConstantInfo, free it with g_base_info_unref()\nwhen done."
                        },
                        "type": {
                            "@name": "ConstantInfo",
                            "@c:type": "GIConstantInfo*"
                        }
                    },
                    "parameters": {
                        "parameter": [
                            {
                                "@name": "info",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "girepository/giunioninfo.c",
                                    "@line": "178",
                                    "#text": "a #GIUnionInfo"
                                },
                                "type": {
                                    "@name": "UnionInfo",
                                    "@c:type": "GIUnionInfo*"
                                }
                            },
                            {
                                "@name": "n",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "girepository/giunioninfo.c",
                                    "@line": "179",
                                    "#text": "a union field index"
                                },
                                "type": {
                                    "@name": "gint",
                                    "@c:type": "gint"
                                }
                            }
                        ]
                    }
                },
                {
                    "@name": "union_info_get_discriminator_offset",
                    "@c:identifier": "g_union_info_get_discriminator_offset",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "girepository/giunioninfo.c",
                        "@line": "142",
                        "#text": "Returns offset of the discriminator field in the structure."
                    },
                    "source-position": {
                        "@filename": "girepository/giunioninfo.h",
                        "@line": "61"
                    },
                    "return-value": {
                        "@transfer-ownership": "none",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "girepository/giunioninfo.c",
                            "@line": "148",
                            "#text": "offset in bytes of the discriminator"
                        },
                        "type": {
                            "@name": "gint",
                            "@c:type": "gint"
                        }
                    },
                    "parameters": {
                        "parameter": {
                            "@name": "info",
                            "@transfer-ownership": "none",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "girepository/giunioninfo.c",
                                "@line": "144",
                                "#text": "a #GIUnionInfo"
                            },
                            "type": {
                                "@name": "UnionInfo",
                                "@c:type": "GIUnionInfo*"
                            }
                        }
                    }
                },
                {
                    "@name": "union_info_get_discriminator_type",
                    "@c:identifier": "g_union_info_get_discriminator_type",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "girepository/giunioninfo.c",
                        "@line": "159",
                        "#text": "Obtain the type information of the union discriminator."
                    },
                    "source-position": {
                        "@filename": "girepository/giunioninfo.h",
                        "@line": "64"
                    },
                    "return-value": {
                        "@transfer-ownership": "full",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "girepository/giunioninfo.c",
                            "@line": "165",
                            "#text": "the #GITypeInfo, free it with g_base_info_unref()\nwhen done."
                        },
                        "type": {
                            "@name": "TypeInfo",
                            "@c:type": "GITypeInfo*"
                        }
                    },
                    "parameters": {
                        "parameter": {
                            "@name": "info",
                            "@transfer-ownership": "none",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "girepository/giunioninfo.c",
                                "@line": "161",
                                "#text": "a #GIUnionInfo"
                            },
                            "type": {
                                "@name": "UnionInfo",
                                "@c:type": "GIUnionInfo*"
                            }
                        }
                    }
                },
                {
                    "@name": "union_info_get_field",
                    "@c:identifier": "g_union_info_get_field",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "girepository/giunioninfo.c",
                        "@line": "60",
                        "#text": "Obtain the type information for field with specified index."
                    },
                    "source-position": {
                        "@filename": "girepository/giunioninfo.h",
                        "@line": "47"
                    },
                    "return-value": {
                        "@transfer-ownership": "full",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "girepository/giunioninfo.c",
                            "@line": "67",
                            "#text": "the #GIFieldInfo, free it with g_base_info_unref()\nwhen done."
                        },
                        "type": {
                            "@name": "FieldInfo",
                            "@c:type": "GIFieldInfo*"
                        }
                    },
                    "parameters": {
                        "parameter": [
                            {
                                "@name": "info",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "girepository/giunioninfo.c",
                                    "@line": "62",
                                    "#text": "a #GIUnionInfo"
                                },
                                "type": {
                                    "@name": "UnionInfo",
                                    "@c:type": "GIUnionInfo*"
                                }
                            },
                            {
                                "@name": "n",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "girepository/giunioninfo.c",
                                    "@line": "63",
                                    "#text": "a field index"
                                },
                                "type": {
                                    "@name": "gint",
                                    "@c:type": "gint"
                                }
                            }
                        ]
                    }
                },
                {
                    "@name": "union_info_get_method",
                    "@c:identifier": "g_union_info_get_method",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "girepository/giunioninfo.c",
                        "@line": "99",
                        "#text": "Obtain the type information for method with specified index."
                    },
                    "source-position": {
                        "@filename": "girepository/giunioninfo.h",
                        "@line": "54"
                    },
                    "return-value": {
                        "@transfer-ownership": "full",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "girepository/giunioninfo.c",
                            "@line": "106",
                            "#text": "the #GIFunctionInfo, free it with g_base_info_unref()\nwhen done."
                        },
                        "type": {
                            "@name": "FunctionInfo",
                            "@c:type": "GIFunctionInfo*"
                        }
                    },
                    "parameters": {
                        "parameter": [
                            {
                                "@name": "info",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "girepository/giunioninfo.c",
                                    "@line": "101",
                                    "#text": "a #GIUnionInfo"
                                },
                                "type": {
                                    "@name": "UnionInfo",
                                    "@c:type": "GIUnionInfo*"
                                }
                            },
                            {
                                "@name": "n",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "girepository/giunioninfo.c",
                                    "@line": "102",
                                    "#text": "a method index"
                                },
                                "type": {
                                    "@name": "gint",
                                    "@c:type": "gint"
                                }
                            }
                        ]
                    }
                },
                {
                    "@name": "union_info_get_n_fields",
                    "@c:identifier": "g_union_info_get_n_fields",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "girepository/giunioninfo.c",
                        "@line": "43",
                        "#text": "Obtain the number of fields this union has."
                    },
                    "source-position": {
                        "@filename": "girepository/giunioninfo.h",
                        "@line": "44"
                    },
                    "return-value": {
                        "@transfer-ownership": "none",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "girepository/giunioninfo.c",
                            "@line": "49",
                            "#text": "number of fields"
                        },
                        "type": {
                            "@name": "gint",
                            "@c:type": "gint"
                        }
                    },
                    "parameters": {
                        "parameter": {
                            "@name": "info",
                            "@transfer-ownership": "none",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "girepository/giunioninfo.c",
                                "@line": "45",
                                "#text": "a #GIUnionInfo"
                            },
                            "type": {
                                "@name": "UnionInfo",
                                "@c:type": "GIUnionInfo*"
                            }
                        }
                    }
                },
                {
                    "@name": "union_info_get_n_methods",
                    "@c:identifier": "g_union_info_get_n_methods",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "girepository/giunioninfo.c",
                        "@line": "82",
                        "#text": "Obtain the number of methods this union has."
                    },
                    "source-position": {
                        "@filename": "girepository/giunioninfo.h",
                        "@line": "51"
                    },
                    "return-value": {
                        "@transfer-ownership": "none",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "girepository/giunioninfo.c",
                            "@line": "88",
                            "#text": "number of methods"
                        },
                        "type": {
                            "@name": "gint",
                            "@c:type": "gint"
                        }
                    },
                    "parameters": {
                        "parameter": {
                            "@name": "info",
                            "@transfer-ownership": "none",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "girepository/giunioninfo.c",
                                "@line": "84",
                                "#text": "a #GIUnionInfo"
                            },
                            "type": {
                                "@name": "UnionInfo",
                                "@c:type": "GIUnionInfo*"
                            }
                        }
                    }
                },
                {
                    "@name": "union_info_get_size",
                    "@c:identifier": "g_union_info_get_size",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "girepository/giunioninfo.c",
                        "@line": "237",
                        "#text": "Obtain the total size of the union."
                    },
                    "source-position": {
                        "@filename": "girepository/giunioninfo.h",
                        "@line": "75"
                    },
                    "return-value": {
                        "@transfer-ownership": "none",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "girepository/giunioninfo.c",
                            "@line": "243",
                            "#text": "size of the union in bytes"
                        },
                        "type": {
                            "@name": "gsize",
                            "@c:type": "gsize"
                        }
                    },
                    "parameters": {
                        "parameter": {
                            "@name": "info",
                            "@transfer-ownership": "none",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "girepository/giunioninfo.c",
                                "@line": "239",
                                "#text": "a #GIUnionInfo"
                            },
                            "type": {
                                "@name": "UnionInfo",
                                "@c:type": "GIUnionInfo*"
                            }
                        }
                    }
                },
                {
                    "@name": "union_info_is_discriminated",
                    "@c:identifier": "g_union_info_is_discriminated",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "girepository/giunioninfo.c",
                        "@line": "125",
                        "#text": "Return true if this union contains discriminator field."
                    },
                    "source-position": {
                        "@filename": "girepository/giunioninfo.h",
                        "@line": "58"
                    },
                    "return-value": {
                        "@transfer-ownership": "none",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "girepository/giunioninfo.c",
                            "@line": "131",
                            "#text": "%TRUE if this is a discriminated union, %FALSE otherwise"
                        },
                        "type": {
                            "@name": "gboolean",
                            "@c:type": "gboolean"
                        }
                    },
                    "parameters": {
                        "parameter": {
                            "@name": "info",
                            "@transfer-ownership": "none",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "girepository/giunioninfo.c",
                                "@line": "127",
                                "#text": "a #GIUnionInfo"
                            },
                            "type": {
                                "@name": "UnionInfo",
                                "@c:type": "GIUnionInfo*"
                            }
                        }
                    }
                },
                {
                    "@name": "value_info_get_value",
                    "@c:identifier": "g_value_info_get_value",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "girepository/gienuminfo.c",
                        "@line": "207",
                        "#text": "Obtain the enumeration value of the #GIValueInfo."
                    },
                    "source-position": {
                        "@filename": "girepository/gienuminfo.h",
                        "@line": "76"
                    },
                    "return-value": {
                        "@transfer-ownership": "none",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "girepository/gienuminfo.c",
                            "@line": "213",
                            "#text": "the enumeration value. This will always be representable\n  as a 32-bit signed or unsigned value. The use of gint64 as the\n  return type is to allow both."
                        },
                        "type": {
                            "@name": "gint64",
                            "@c:type": "gint64"
                        }
                    },
                    "parameters": {
                        "parameter": {
                            "@name": "info",
                            "@transfer-ownership": "none",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "girepository/gienuminfo.c",
                                "@line": "209",
                                "#text": "a #GIValueInfo"
                            },
                            "type": {
                                "@name": "ValueInfo",
                                "@c:type": "GIValueInfo*"
                            }
                        }
                    }
                },
                {
                    "@name": "vfunc_info_get_address",
                    "@c:identifier": "g_vfunc_info_get_address",
                    "@throws": "1",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "girepository/givfuncinfo.c",
                        "@line": "196",
                        "#text": "This method will look up where inside the type struct of @implementor_gtype\nis the implementation for @info."
                    },
                    "source-position": {
                        "@filename": "girepository/givfuncinfo.h",
                        "@line": "56"
                    },
                    "return-value": {
                        "@transfer-ownership": "none",
                        "@nullable": "1",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "girepository/givfuncinfo.c",
                            "@line": "205",
                            "#text": "address to a function or %NULL if an error happened"
                        },
                        "type": {
                            "@name": "gpointer",
                            "@c:type": "gpointer"
                        }
                    },
                    "parameters": {
                        "parameter": [
                            {
                                "@name": "info",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "girepository/givfuncinfo.c",
                                    "@line": "198",
                                    "#text": "a #GIVFuncInfo"
                                },
                                "type": {
                                    "@name": "VFuncInfo",
                                    "@c:type": "GIVFuncInfo*"
                                }
                            },
                            {
                                "@name": "implementor_gtype",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "girepository/givfuncinfo.c",
                                    "@line": "199",
                                    "#text": "#GType implementing this virtual function"
                                },
                                "type": {
                                    "@name": "GType",
                                    "@c:type": "GType"
                                }
                            }
                        ]
                    }
                },
                {
                    "@name": "vfunc_info_get_flags",
                    "@c:identifier": "g_vfunc_info_get_flags",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "girepository/givfuncinfo.c",
                        "@line": "69",
                        "#text": "Obtain the flags for this virtual function info. See #GIVFuncInfoFlags for\nmore information about possible flag values."
                    },
                    "source-position": {
                        "@filename": "girepository/givfuncinfo.h",
                        "@line": "44"
                    },
                    "return-value": {
                        "@transfer-ownership": "none",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "girepository/givfuncinfo.c",
                            "@line": "76",
                            "#text": "the flags"
                        },
                        "type": {
                            "@name": "VFuncInfoFlags",
                            "@c:type": "GIVFuncInfoFlags"
                        }
                    },
                    "parameters": {
                        "parameter": {
                            "@name": "info",
                            "@transfer-ownership": "none",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "girepository/givfuncinfo.c",
                                "@line": "71",
                                "#text": "a #GIVFuncInfo"
                            },
                            "type": {
                                "@name": "VFuncInfo",
                                "@c:type": "GIVFuncInfo*"
                            }
                        }
                    }
                },
                {
                    "@name": "vfunc_info_get_invoker",
                    "@c:identifier": "g_vfunc_info_get_invoker",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "girepository/givfuncinfo.c",
                        "@line": "157",
                        "#text": "If this virtual function has an associated invoker method, this\nmethod will return it.  An invoker method is a C entry point.\n\nNot all virtuals will have invokers."
                    },
                    "source-position": {
                        "@filename": "girepository/givfuncinfo.h",
                        "@line": "53"
                    },
                    "return-value": {
                        "@transfer-ownership": "full",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "girepository/givfuncinfo.c",
                            "@line": "166",
                            "#text": "the #GIVFuncInfo or %NULL. Free it with\ng_base_info_unref() when done."
                        },
                        "type": {
                            "@name": "FunctionInfo",
                            "@c:type": "GIFunctionInfo*"
                        }
                    },
                    "parameters": {
                        "parameter": {
                            "@name": "info",
                            "@transfer-ownership": "none",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "girepository/givfuncinfo.c",
                                "@line": "159",
                                "#text": "a #GIVFuncInfo"
                            },
                            "type": {
                                "@name": "VFuncInfo",
                                "@c:type": "GIVFuncInfo*"
                            }
                        }
                    }
                },
                {
                    "@name": "vfunc_info_get_offset",
                    "@c:identifier": "g_vfunc_info_get_offset",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "girepository/givfuncinfo.c",
                        "@line": "107",
                        "#text": "Obtain the offset of the function pointer in the class struct. The value\n0xFFFF indicates that the struct offset is unknown."
                    },
                    "source-position": {
                        "@filename": "girepository/givfuncinfo.h",
                        "@line": "47"
                    },
                    "return-value": {
                        "@transfer-ownership": "none",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "girepository/givfuncinfo.c",
                            "@line": "114",
                            "#text": "the struct offset or 0xFFFF if it's unknown"
                        },
                        "type": {
                            "@name": "gint",
                            "@c:type": "gint"
                        }
                    },
                    "parameters": {
                        "parameter": {
                            "@name": "info",
                            "@transfer-ownership": "none",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "girepository/givfuncinfo.c",
                                "@line": "109",
                                "#text": "a #GIVFuncInfo"
                            },
                            "type": {
                                "@name": "VFuncInfo",
                                "@c:type": "GIVFuncInfo*"
                            }
                        }
                    }
                },
                {
                    "@name": "vfunc_info_get_signal",
                    "@c:identifier": "g_vfunc_info_get_signal",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "girepository/givfuncinfo.c",
                        "@line": "130",
                        "#text": "Obtain the signal for the virtual function if one is set.\nThe signal comes from the object or interface to which\nthis virtual function belongs."
                    },
                    "source-position": {
                        "@filename": "girepository/givfuncinfo.h",
                        "@line": "50"
                    },
                    "return-value": {
                        "@transfer-ownership": "full",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "girepository/givfuncinfo.c",
                            "@line": "138",
                            "#text": "the signal or %NULL if none set"
                        },
                        "type": {
                            "@name": "SignalInfo",
                            "@c:type": "GISignalInfo*"
                        }
                    },
                    "parameters": {
                        "parameter": {
                            "@name": "info",
                            "@transfer-ownership": "none",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "girepository/givfuncinfo.c",
                                "@line": "132",
                                "#text": "a #GIVFuncInfo"
                            },
                            "type": {
                                "@name": "VFuncInfo",
                                "@c:type": "GIVFuncInfo*"
                            }
                        }
                    }
                },
                {
                    "@name": "vfunc_info_invoke",
                    "@c:identifier": "g_vfunc_info_invoke",
                    "@introspectable": "0",
                    "@throws": "1",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "girepository/givfuncinfo.c",
                        "@line": "295",
                        "#text": "Invokes the function described in @info with the given\narguments. Note that inout parameters must appear in both\nargument lists."
                    },
                    "source-position": {
                        "@filename": "girepository/givfuncinfo.h",
                        "@line": "61"
                    },
                    "return-value": {
                        "@transfer-ownership": "none",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "girepository/givfuncinfo.c",
                            "@line": "316",
                            "#text": "%TRUE if the function has been invoked, %FALSE if an\n  error occurred."
                        },
                        "type": {
                            "@name": "gboolean",
                            "@c:type": "gboolean"
                        }
                    },
                    "parameters": {
                        "parameter": [
                            {
                                "@name": "info",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "girepository/givfuncinfo.c",
                                    "@line": "297",
                                    "#text": "a #GIVFuncInfo describing the virtual function to invoke"
                                },
                                "type": {
                                    "@name": "VFuncInfo",
                                    "@c:type": "GIVFuncInfo*"
                                }
                            },
                            {
                                "@name": "implementor",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "girepository/givfuncinfo.c",
                                    "@line": "298",
                                    "#text": "#GType of the type that implements this virtual function"
                                },
                                "type": {
                                    "@name": "GType",
                                    "@c:type": "GType"
                                }
                            },
                            {
                                "@name": "in_args",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "girepository/givfuncinfo.c",
                                    "@line": "299",
                                    "#text": "an array of #GIArgument<!-- -->s, one for each in\n   parameter of @info. If there are no in parameter, @in_args\n   can be %NULL"
                                },
                                "array": {
                                    "@length": "3",
                                    "@zero-terminated": "0",
                                    "@c:type": "const GIArgument*",
                                    "type": {
                                        "@name": "Argument",
                                        "@c:type": "GIArgument"
                                    }
                                }
                            },
                            {
                                "@name": "n_in_args",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "girepository/givfuncinfo.c",
                                    "@line": "302",
                                    "#text": "the length of the @in_args array"
                                },
                                "type": {
                                    "@name": "gint",
                                    "@c:type": "int"
                                }
                            },
                            {
                                "@name": "out_args",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "girepository/givfuncinfo.c",
                                    "@line": "303",
                                    "#text": "an array of #GIArgument<!-- -->s, one for each out\n   parameter of @info. If there are no out parameters, @out_args\n   may be %NULL"
                                },
                                "array": {
                                    "@length": "5",
                                    "@zero-terminated": "0",
                                    "@c:type": "const GIArgument*",
                                    "type": {
                                        "@name": "Argument",
                                        "@c:type": "GIArgument"
                                    }
                                }
                            },
                            {
                                "@name": "n_out_args",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "girepository/givfuncinfo.c",
                                    "@line": "306",
                                    "#text": "the length of the @out_args array"
                                },
                                "type": {
                                    "@name": "gint",
                                    "@c:type": "int"
                                }
                            },
                            {
                                "@name": "return_value",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "girepository/givfuncinfo.c",
                                    "@line": "307",
                                    "#text": "return location for the return value of the\n   function. If the function returns void, @return_value may be\n   %NULL"
                                },
                                "type": {
                                    "@name": "Argument",
                                    "@c:type": "GIArgument*"
                                }
                            }
                        ]
                    }
                }
            ],
            "docsection": [
                {
                    "@name": "giarginfo",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "girepository/giarginfo.c",
                        "@line": "33",
                        "#text": "GIArgInfo represents an argument of a callable.\n\nAn argument is always part of a #GICallableInfo."
                    }
                },
                {
                    "@name": "gicallableinfo",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "girepository/gicallableinfo.c",
                        "@line": "36",
                        "#text": "GICallableInfo represents an entity which is callable.\n\nExamples of callable are:\n\n - functions (#GIFunctionInfo)\n - virtual functions (#GIVFuncInfo)\n - callbacks (#GICallbackInfo).\n\nA callable has a list of arguments (#GIArgInfo), a return type,\ndirection and a flag which decides if it returns null."
                    }
                },
                {
                    "@name": "gicallbackinfo",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "girepository/gitypes.h",
                        "@line": "61",
                        "#text": "GICallbackInfo represents a callback."
                    }
                },
                {
                    "@name": "giconstantinfo",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "girepository/giconstantinfo.c",
                        "@line": "32",
                        "#text": "GIConstantInfo represents a constant.\n\nA constant has a type associated which can be obtained by calling\ng_constant_info_get_type() and a value, which can be obtained by\ncalling g_constant_info_get_value()."
                    }
                },
                {
                    "@name": "gienuminfo",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "girepository/gienuminfo.c",
                        "@line": "31",
                        "#text": "A GIEnumInfo represents an enumeration, and a GIValueInfo represents\na value in the enumeration.\n\nThe GIEnumInfo contains a set of values and a type.\n\nThe GIValueInfo is fetched by calling g_enum_info_get_value() on\na GIEnumInfo."
                    }
                },
                {
                    "@name": "gifieldinfo",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "girepository/gifieldinfo.c",
                        "@line": "32",
                        "#text": "A GIFieldInfo struct represents a field of a struct, union, or object.\n\nThe GIFieldInfo is fetched by calling g_struct_info_get_field(),\ng_union_info_get_field() or g_object_info_get_field().\n\nA field has a size, type and a struct offset asssociated and a set of flags,\nwhich are currently #GI_FIELD_IS_READABLE or #GI_FIELD_IS_WRITABLE.\n\nSee also: #GIStructInfo, #GIUnionInfo, #GIObjectInfo"
                    }
                },
                {
                    "@name": "gifunctioninfo",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "girepository/gifunctioninfo.c",
                        "@line": "33",
                        "#text": "GIFunctionInfo represents a function, method or constructor.\n\nTo find out what kind of entity a #GIFunctionInfo represents, call\ng_function_info_get_flags().\n\nSee also #GICallableInfo for information on how to retreive arguments and\nother metadata."
                    }
                },
                {
                    "@name": "giinterfaceinfo",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "girepository/giinterfaceinfo.c",
                        "@line": "31",
                        "#text": "GIInterfaceInfo represents a #GInterface type.\n\nA GInterface has methods, fields, properties, signals, interfaces, constants,\nvirtual functions and prerequisites."
                    }
                },
                {
                    "@name": "giobjectinfo",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "girepository/giobjectinfo.c",
                        "@line": "31",
                        "#text": "GIObjectInfo represents a classed type.\n\nClassed types in GType inherit from #GTypeInstance; the most common\ntype is #GObject.\n\nA GIObjectInfo doesn't represent a specific instance of a classed type,\ninstead this represent the object type (eg class).\n\nA GIObjectInfo has methods, fields, properties, signals, interfaces,\nconstants and virtual functions."
                    }
                },
                {
                    "@name": "gipropertyinfo",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "girepository/gipropertyinfo.c",
                        "@line": "31",
                        "#text": "GIPropertyInfo represents a property in a #GObject.\n\nA property belongs to either a #GIObjectInfo or a #GIInterfaceInfo."
                    }
                },
                {
                    "@name": "giregisteredtypeinfo",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "girepository/giregisteredtypeinfo.c",
                        "@line": "33",
                        "#text": "GIRegisteredTypeInfo represents an entity with a GType associated.\n\nCould be either a #GIEnumInfo, #GIInterfaceInfo, #GIObjectInfo,\n#GIStructInfo or a #GIUnionInfo.\n\nA registered type info struct has a name and a type function.\n\nTo get the name call g_registered_type_info_get_type_name().\nMost users want to call g_registered_type_info_get_g_type() and don't worry\nabout the rest of the details."
                    }
                },
                {
                    "@name": "gisignalinfo",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "girepository/gisignalinfo.c",
                        "@line": "31",
                        "#text": "GISignalInfo represents a signal.\n\nIt's a sub-struct of #GICallableInfo and contains a set of flags and\na class closure.\n\nSee #GICallableInfo for information on how to retreive arguments\nand other metadata from the signal."
                    }
                },
                {
                    "@name": "gistructinfo",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "girepository/gistructinfo.c",
                        "@line": "33",
                        "#text": "GIStructInfo represents a generic C structure type.\n\nA structure has methods and fields."
                    }
                },
                {
                    "@name": "gitypeinfo",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "girepository/gitypeinfo.c",
                        "@line": "31",
                        "#text": "GITypeInfo represents a type.\n\nYou can retrieve a type info from an argument (see #GIArgInfo), a\nfunctions return value (see #GIFunctionInfo), a field (see\n#GIFieldInfo), a property (see #GIPropertyInfo), a constant\n(see #GIConstantInfo) or for a union discriminator (see #GIUnionInfo).\n\nA type can either be a of a basic type which is a standard C primitive\ntype or an interface type. For interface types you need to call\ng_type_info_get_interface() to get a reference to the base info for that\ninterface."
                    }
                },
                {
                    "@name": "giunioninfo",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "girepository/giunioninfo.c",
                        "@line": "31",
                        "#text": "GIUnionInfo represents a union type.\n\nA union has methods and fields.  Unions can optionally have a\ndiscriminator, which is a field deciding what type of real union\nfields is valid for specified instance."
                    }
                },
                {
                    "@name": "givalueinfo",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "girepository/gitypes.h",
                        "@line": "125",
                        "#text": "GIValueInfo represents a value."
                    }
                },
                {
                    "@name": "givfuncinfo",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "girepository/givfuncinfo.c",
                        "@line": "33",
                        "#text": "GIVfuncInfo represents a virtual function.\n\nA virtual function is a callable object that belongs to either a\n#GIObjectInfo or a #GIInterfaceInfo."
                    }
                }
            ]
        }
    }
}