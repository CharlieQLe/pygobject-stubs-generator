{
    "repository": {
        "@version": "1.2",
        "@xmlns": "http://www.gtk.org/introspection/core/1.0",
        "@xmlns:c": "http://www.gtk.org/introspection/c/1.0",
        "@xmlns:glib": "http://www.gtk.org/introspection/glib/1.0",
        "include": [
            {
                "@name": "Gdk",
                "@version": "3.0"
            },
            {
                "@name": "GdkPixbuf",
                "@version": "2.0"
            },
            {
                "@name": "Gio",
                "@version": "2.0"
            },
            {
                "@name": "Pango",
                "@version": "1.0"
            },
            {
                "@name": "cairo",
                "@version": "1.0"
            },
            {
                "@name": "xlib",
                "@version": "2.0"
            }
        ],
        "package": {
            "@name": "gdk-x11-3.0"
        },
        "c:include": {
            "@name": "gdk/gdkx.h"
        },
        "namespace": {
            "@name": "GdkX11",
            "@version": "3.0",
            "@shared-library": "libgdk-3.so.0",
            "@c:identifier-prefixes": "Gdk",
            "@c:symbol-prefixes": "gdk",
            "function-macro": [
                {
                    "@name": "CURSOR_XCURSOR",
                    "@c:identifier": "GDK_CURSOR_XCURSOR",
                    "@introspectable": "0",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "gdk/x11/gdkx11cursor.h",
                        "@line": "71",
                        "#text": "Returns the X cursor belonging to a #GdkCursor."
                    },
                    "source-position": {
                        "@filename": "gdk/x11/gdkx11cursor.h",
                        "@line": "79"
                    },
                    "parameters": {
                        "parameter": {
                            "@name": "cursor",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/x11/gdkx11cursor.h",
                                "@line": "73",
                                "#text": "a #GdkCursor."
                            }
                        }
                    }
                },
                {
                    "@name": "CURSOR_XDISPLAY",
                    "@c:identifier": "GDK_CURSOR_XDISPLAY",
                    "@introspectable": "0",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "gdk/x11/gdkx11cursor.h",
                        "@line": "61",
                        "#text": "Returns the display of a #GdkCursor."
                    },
                    "source-position": {
                        "@filename": "gdk/x11/gdkx11cursor.h",
                        "@line": "69"
                    },
                    "parameters": {
                        "parameter": {
                            "@name": "cursor",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/x11/gdkx11cursor.h",
                                "@line": "63",
                                "#text": "a #GdkCursor."
                            }
                        }
                    }
                },
                {
                    "@name": "DISPLAY_XDISPLAY",
                    "@c:identifier": "GDK_DISPLAY_XDISPLAY",
                    "@introspectable": "0",
                    "source-position": {
                        "@filename": "gdk/x11/gdkx11display.h",
                        "@line": "59"
                    },
                    "parameters": {
                        "parameter": {
                            "@name": "display"
                        }
                    }
                },
                {
                    "@name": "IS_X11_APP_LAUNCH_CONTEXT",
                    "@c:identifier": "GDK_IS_X11_APP_LAUNCH_CONTEXT",
                    "@introspectable": "0",
                    "source-position": {
                        "@filename": "gdk/x11/gdkx11applaunchcontext.h",
                        "@line": "32"
                    },
                    "parameters": {
                        "parameter": {
                            "@name": "object"
                        }
                    }
                },
                {
                    "@name": "IS_X11_APP_LAUNCH_CONTEXT_CLASS",
                    "@c:identifier": "GDK_IS_X11_APP_LAUNCH_CONTEXT_CLASS",
                    "@introspectable": "0",
                    "source-position": {
                        "@filename": "gdk/x11/gdkx11applaunchcontext.h",
                        "@line": "33"
                    },
                    "parameters": {
                        "parameter": {
                            "@name": "klass"
                        }
                    }
                },
                {
                    "@name": "IS_X11_CURSOR",
                    "@c:identifier": "GDK_IS_X11_CURSOR",
                    "@introspectable": "0",
                    "source-position": {
                        "@filename": "gdk/x11/gdkx11cursor.h",
                        "@line": "42"
                    },
                    "parameters": {
                        "parameter": {
                            "@name": "object"
                        }
                    }
                },
                {
                    "@name": "IS_X11_CURSOR_CLASS",
                    "@c:identifier": "GDK_IS_X11_CURSOR_CLASS",
                    "@introspectable": "0",
                    "source-position": {
                        "@filename": "gdk/x11/gdkx11cursor.h",
                        "@line": "43"
                    },
                    "parameters": {
                        "parameter": {
                            "@name": "klass"
                        }
                    }
                },
                {
                    "@name": "IS_X11_DEVICE_CORE",
                    "@c:identifier": "GDK_IS_X11_DEVICE_CORE",
                    "@introspectable": "0",
                    "source-position": {
                        "@filename": "gdk/x11/gdkx11device-core.h",
                        "@line": "28"
                    },
                    "parameters": {
                        "parameter": {
                            "@name": "o"
                        }
                    }
                },
                {
                    "@name": "IS_X11_DEVICE_CORE_CLASS",
                    "@c:identifier": "GDK_IS_X11_DEVICE_CORE_CLASS",
                    "@introspectable": "0",
                    "source-position": {
                        "@filename": "gdk/x11/gdkx11device-core.h",
                        "@line": "29"
                    },
                    "parameters": {
                        "parameter": {
                            "@name": "c"
                        }
                    }
                },
                {
                    "@name": "IS_X11_DEVICE_MANAGER_CORE",
                    "@c:identifier": "GDK_IS_X11_DEVICE_MANAGER_CORE",
                    "@introspectable": "0",
                    "source-position": {
                        "@filename": "gdk/x11/gdkx11devicemanager-core.h",
                        "@line": "28"
                    },
                    "parameters": {
                        "parameter": {
                            "@name": "o"
                        }
                    }
                },
                {
                    "@name": "IS_X11_DEVICE_MANAGER_CORE_CLASS",
                    "@c:identifier": "GDK_IS_X11_DEVICE_MANAGER_CORE_CLASS",
                    "@introspectable": "0",
                    "source-position": {
                        "@filename": "gdk/x11/gdkx11devicemanager-core.h",
                        "@line": "29"
                    },
                    "parameters": {
                        "parameter": {
                            "@name": "c"
                        }
                    }
                },
                {
                    "@name": "IS_X11_DEVICE_MANAGER_XI2",
                    "@c:identifier": "GDK_IS_X11_DEVICE_MANAGER_XI2",
                    "@introspectable": "0",
                    "source-position": {
                        "@filename": "gdk/x11/gdkx11devicemanager-xi2.h",
                        "@line": "28"
                    },
                    "parameters": {
                        "parameter": {
                            "@name": "o"
                        }
                    }
                },
                {
                    "@name": "IS_X11_DEVICE_MANAGER_XI2_CLASS",
                    "@c:identifier": "GDK_IS_X11_DEVICE_MANAGER_XI2_CLASS",
                    "@introspectable": "0",
                    "source-position": {
                        "@filename": "gdk/x11/gdkx11devicemanager-xi2.h",
                        "@line": "29"
                    },
                    "parameters": {
                        "parameter": {
                            "@name": "c"
                        }
                    }
                },
                {
                    "@name": "IS_X11_DEVICE_XI2",
                    "@c:identifier": "GDK_IS_X11_DEVICE_XI2",
                    "@introspectable": "0",
                    "source-position": {
                        "@filename": "gdk/x11/gdkx11device-xi2.h",
                        "@line": "28"
                    },
                    "parameters": {
                        "parameter": {
                            "@name": "o"
                        }
                    }
                },
                {
                    "@name": "IS_X11_DEVICE_XI2_CLASS",
                    "@c:identifier": "GDK_IS_X11_DEVICE_XI2_CLASS",
                    "@introspectable": "0",
                    "source-position": {
                        "@filename": "gdk/x11/gdkx11device-xi2.h",
                        "@line": "29"
                    },
                    "parameters": {
                        "parameter": {
                            "@name": "c"
                        }
                    }
                },
                {
                    "@name": "IS_X11_DISPLAY",
                    "@c:identifier": "GDK_IS_X11_DISPLAY",
                    "@introspectable": "0",
                    "source-position": {
                        "@filename": "gdk/x11/gdkx11display.h",
                        "@line": "49"
                    },
                    "parameters": {
                        "parameter": {
                            "@name": "object"
                        }
                    }
                },
                {
                    "@name": "IS_X11_DISPLAY_CLASS",
                    "@c:identifier": "GDK_IS_X11_DISPLAY_CLASS",
                    "@introspectable": "0",
                    "source-position": {
                        "@filename": "gdk/x11/gdkx11display.h",
                        "@line": "50"
                    },
                    "parameters": {
                        "parameter": {
                            "@name": "klass"
                        }
                    }
                },
                {
                    "@name": "IS_X11_DISPLAY_MANAGER",
                    "@c:identifier": "GDK_IS_X11_DISPLAY_MANAGER",
                    "@introspectable": "0",
                    "source-position": {
                        "@filename": "gdk/x11/gdkx11displaymanager.h",
                        "@line": "39"
                    },
                    "parameters": {
                        "parameter": {
                            "@name": "object"
                        }
                    }
                },
                {
                    "@name": "IS_X11_DISPLAY_MANAGER_CLASS",
                    "@c:identifier": "GDK_IS_X11_DISPLAY_MANAGER_CLASS",
                    "@introspectable": "0",
                    "source-position": {
                        "@filename": "gdk/x11/gdkx11displaymanager.h",
                        "@line": "40"
                    },
                    "parameters": {
                        "parameter": {
                            "@name": "klass"
                        }
                    }
                },
                {
                    "@name": "IS_X11_DRAG_CONTEXT",
                    "@c:identifier": "GDK_IS_X11_DRAG_CONTEXT",
                    "@introspectable": "0",
                    "source-position": {
                        "@filename": "gdk/x11/gdkx11dnd.h",
                        "@line": "32"
                    },
                    "parameters": {
                        "parameter": {
                            "@name": "object"
                        }
                    }
                },
                {
                    "@name": "IS_X11_DRAG_CONTEXT_CLASS",
                    "@c:identifier": "GDK_IS_X11_DRAG_CONTEXT_CLASS",
                    "@introspectable": "0",
                    "source-position": {
                        "@filename": "gdk/x11/gdkx11dnd.h",
                        "@line": "33"
                    },
                    "parameters": {
                        "parameter": {
                            "@name": "klass"
                        }
                    }
                },
                {
                    "@name": "IS_X11_KEYMAP",
                    "@c:identifier": "GDK_IS_X11_KEYMAP",
                    "@introspectable": "0",
                    "source-position": {
                        "@filename": "gdk/x11/gdkx11keys.h",
                        "@line": "39"
                    },
                    "parameters": {
                        "parameter": {
                            "@name": "object"
                        }
                    }
                },
                {
                    "@name": "IS_X11_KEYMAP_CLASS",
                    "@c:identifier": "GDK_IS_X11_KEYMAP_CLASS",
                    "@introspectable": "0",
                    "source-position": {
                        "@filename": "gdk/x11/gdkx11keys.h",
                        "@line": "40"
                    },
                    "parameters": {
                        "parameter": {
                            "@name": "klass"
                        }
                    }
                },
                {
                    "@name": "IS_X11_MONITOR",
                    "@c:identifier": "GDK_IS_X11_MONITOR",
                    "@introspectable": "0",
                    "source-position": {
                        "@filename": "gdk/x11/gdkx11monitor.h",
                        "@line": "35"
                    },
                    "parameters": {
                        "parameter": {
                            "@name": "object"
                        }
                    }
                },
                {
                    "@name": "IS_X11_SCREEN",
                    "@c:identifier": "GDK_IS_X11_SCREEN",
                    "@introspectable": "0",
                    "source-position": {
                        "@filename": "gdk/x11/gdkx11screen.h",
                        "@line": "42"
                    },
                    "parameters": {
                        "parameter": {
                            "@name": "object"
                        }
                    }
                },
                {
                    "@name": "IS_X11_SCREEN_CLASS",
                    "@c:identifier": "GDK_IS_X11_SCREEN_CLASS",
                    "@introspectable": "0",
                    "source-position": {
                        "@filename": "gdk/x11/gdkx11screen.h",
                        "@line": "43"
                    },
                    "parameters": {
                        "parameter": {
                            "@name": "klass"
                        }
                    }
                },
                {
                    "@name": "IS_X11_VISUAL",
                    "@c:identifier": "GDK_IS_X11_VISUAL",
                    "@introspectable": "0",
                    "source-position": {
                        "@filename": "gdk/x11/gdkx11visual.h",
                        "@line": "42"
                    },
                    "parameters": {
                        "parameter": {
                            "@name": "object"
                        }
                    }
                },
                {
                    "@name": "IS_X11_VISUAL_CLASS",
                    "@c:identifier": "GDK_IS_X11_VISUAL_CLASS",
                    "@introspectable": "0",
                    "source-position": {
                        "@filename": "gdk/x11/gdkx11visual.h",
                        "@line": "43"
                    },
                    "parameters": {
                        "parameter": {
                            "@name": "klass"
                        }
                    }
                },
                {
                    "@name": "IS_X11_WINDOW",
                    "@c:identifier": "GDK_IS_X11_WINDOW",
                    "@introspectable": "0",
                    "source-position": {
                        "@filename": "gdk/x11/gdkx11window.h",
                        "@line": "42"
                    },
                    "parameters": {
                        "parameter": {
                            "@name": "object"
                        }
                    }
                },
                {
                    "@name": "IS_X11_WINDOW_CLASS",
                    "@c:identifier": "GDK_IS_X11_WINDOW_CLASS",
                    "@introspectable": "0",
                    "source-position": {
                        "@filename": "gdk/x11/gdkx11window.h",
                        "@line": "43"
                    },
                    "parameters": {
                        "parameter": {
                            "@name": "klass"
                        }
                    }
                },
                {
                    "@name": "POINTER_TO_XID",
                    "@c:identifier": "GDK_POINTER_TO_XID",
                    "@introspectable": "0",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "gdk/x11/gdkx11utils.h",
                        "@line": "61",
                        "#text": "Converts a @gpointer back to an XID that was previously converted\nusing GDK_XID_TO_POINTER()."
                    },
                    "source-position": {
                        "@filename": "gdk/x11/gdkx11utils.h",
                        "@line": "68"
                    },
                    "parameters": {
                        "parameter": {
                            "@name": "pointer",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/x11/gdkx11utils.h",
                                "@line": "63",
                                "#text": "pointer to extract an XID from"
                            }
                        }
                    }
                },
                {
                    "@name": "ROOT_WINDOW",
                    "@c:identifier": "GDK_ROOT_WINDOW",
                    "@introspectable": "0",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "gdk/x11/gdkx11utils.h",
                        "@line": "44",
                        "#text": "Obtains the Xlib window id of the root window of the current screen."
                    },
                    "source-position": {
                        "@filename": "gdk/x11/gdkx11utils.h",
                        "@line": "49"
                    }
                },
                {
                    "@name": "SCREEN_XDISPLAY",
                    "@c:identifier": "GDK_SCREEN_XDISPLAY",
                    "@introspectable": "0",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "gdk/x11/gdkx11screen.h",
                        "@line": "67",
                        "#text": "Returns the display of a X11 #GdkScreen."
                    },
                    "source-position": {
                        "@filename": "gdk/x11/gdkx11screen.h",
                        "@line": "75"
                    },
                    "parameters": {
                        "parameter": {
                            "@name": "screen",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/x11/gdkx11screen.h",
                                "@line": "69",
                                "#text": "a #GdkScreen"
                            }
                        }
                    }
                },
                {
                    "@name": "SCREEN_XNUMBER",
                    "@c:identifier": "GDK_SCREEN_XNUMBER",
                    "@introspectable": "0",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "gdk/x11/gdkx11screen.h",
                        "@line": "87",
                        "#text": "Returns the index of a X11 #GdkScreen."
                    },
                    "source-position": {
                        "@filename": "gdk/x11/gdkx11screen.h",
                        "@line": "95"
                    },
                    "parameters": {
                        "parameter": {
                            "@name": "screen",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/x11/gdkx11screen.h",
                                "@line": "89",
                                "#text": "a #GdkScreen"
                            }
                        }
                    }
                },
                {
                    "@name": "SCREEN_XSCREEN",
                    "@c:identifier": "GDK_SCREEN_XSCREEN",
                    "@introspectable": "0",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "gdk/x11/gdkx11screen.h",
                        "@line": "77",
                        "#text": "Returns the screen of a X11 #GdkScreen."
                    },
                    "source-position": {
                        "@filename": "gdk/x11/gdkx11screen.h",
                        "@line": "85"
                    },
                    "parameters": {
                        "parameter": {
                            "@name": "screen",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/x11/gdkx11screen.h",
                                "@line": "79",
                                "#text": "a #GdkScreen"
                            }
                        }
                    }
                },
                {
                    "@name": "VISUAL_XVISUAL",
                    "@c:identifier": "GDK_VISUAL_XVISUAL",
                    "@introspectable": "0",
                    "source-position": {
                        "@filename": "gdk/x11/gdkx11visual.h",
                        "@line": "59"
                    },
                    "parameters": {
                        "parameter": {
                            "@name": "visual"
                        }
                    }
                },
                {
                    "@name": "WINDOW_XDISPLAY",
                    "@c:identifier": "GDK_WINDOW_XDISPLAY",
                    "@introspectable": "0",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "gdk/x11/gdkx11window.h",
                        "@line": "90",
                        "#text": "Returns the display of a #GdkWindow."
                    },
                    "source-position": {
                        "@filename": "gdk/x11/gdkx11window.h",
                        "@line": "98"
                    },
                    "parameters": {
                        "parameter": {
                            "@name": "win",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/x11/gdkx11window.h",
                                "@line": "92",
                                "#text": "a #GdkWindow."
                            }
                        }
                    }
                },
                {
                    "@name": "WINDOW_XID",
                    "@c:identifier": "GDK_WINDOW_XID",
                    "@introspectable": "0",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "gdk/x11/gdkx11window.h",
                        "@line": "100",
                        "#text": "Returns the X window belonging to a #GdkWindow."
                    },
                    "source-position": {
                        "@filename": "gdk/x11/gdkx11window.h",
                        "@line": "108"
                    },
                    "parameters": {
                        "parameter": {
                            "@name": "win",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/x11/gdkx11window.h",
                                "@line": "102",
                                "#text": "a #GdkWindow."
                            }
                        }
                    }
                },
                {
                    "@name": "X11_APP_LAUNCH_CONTEXT",
                    "@c:identifier": "GDK_X11_APP_LAUNCH_CONTEXT",
                    "@introspectable": "0",
                    "source-position": {
                        "@filename": "gdk/x11/gdkx11applaunchcontext.h",
                        "@line": "30"
                    },
                    "parameters": {
                        "parameter": {
                            "@name": "object"
                        }
                    }
                },
                {
                    "@name": "X11_APP_LAUNCH_CONTEXT_CLASS",
                    "@c:identifier": "GDK_X11_APP_LAUNCH_CONTEXT_CLASS",
                    "@introspectable": "0",
                    "source-position": {
                        "@filename": "gdk/x11/gdkx11applaunchcontext.h",
                        "@line": "31"
                    },
                    "parameters": {
                        "parameter": {
                            "@name": "klass"
                        }
                    }
                },
                {
                    "@name": "X11_APP_LAUNCH_CONTEXT_GET_CLASS",
                    "@c:identifier": "GDK_X11_APP_LAUNCH_CONTEXT_GET_CLASS",
                    "@introspectable": "0",
                    "source-position": {
                        "@filename": "gdk/x11/gdkx11applaunchcontext.h",
                        "@line": "34"
                    },
                    "parameters": {
                        "parameter": {
                            "@name": "obj"
                        }
                    }
                },
                {
                    "@name": "X11_CURSOR",
                    "@c:identifier": "GDK_X11_CURSOR",
                    "@introspectable": "0",
                    "source-position": {
                        "@filename": "gdk/x11/gdkx11cursor.h",
                        "@line": "40"
                    },
                    "parameters": {
                        "parameter": {
                            "@name": "object"
                        }
                    }
                },
                {
                    "@name": "X11_CURSOR_CLASS",
                    "@c:identifier": "GDK_X11_CURSOR_CLASS",
                    "@introspectable": "0",
                    "source-position": {
                        "@filename": "gdk/x11/gdkx11cursor.h",
                        "@line": "41"
                    },
                    "parameters": {
                        "parameter": {
                            "@name": "klass"
                        }
                    }
                },
                {
                    "@name": "X11_CURSOR_GET_CLASS",
                    "@c:identifier": "GDK_X11_CURSOR_GET_CLASS",
                    "@introspectable": "0",
                    "source-position": {
                        "@filename": "gdk/x11/gdkx11cursor.h",
                        "@line": "44"
                    },
                    "parameters": {
                        "parameter": {
                            "@name": "obj"
                        }
                    }
                },
                {
                    "@name": "X11_DEVICE_CORE",
                    "@c:identifier": "GDK_X11_DEVICE_CORE",
                    "@introspectable": "0",
                    "source-position": {
                        "@filename": "gdk/x11/gdkx11device-core.h",
                        "@line": "26"
                    },
                    "parameters": {
                        "parameter": {
                            "@name": "o"
                        }
                    }
                },
                {
                    "@name": "X11_DEVICE_CORE_CLASS",
                    "@c:identifier": "GDK_X11_DEVICE_CORE_CLASS",
                    "@introspectable": "0",
                    "source-position": {
                        "@filename": "gdk/x11/gdkx11device-core.h",
                        "@line": "27"
                    },
                    "parameters": {
                        "parameter": {
                            "@name": "c"
                        }
                    }
                },
                {
                    "@name": "X11_DEVICE_CORE_GET_CLASS",
                    "@c:identifier": "GDK_X11_DEVICE_CORE_GET_CLASS",
                    "@introspectable": "0",
                    "source-position": {
                        "@filename": "gdk/x11/gdkx11device-core.h",
                        "@line": "30"
                    },
                    "parameters": {
                        "parameter": {
                            "@name": "o"
                        }
                    }
                },
                {
                    "@name": "X11_DEVICE_MANAGER_CORE",
                    "@c:identifier": "GDK_X11_DEVICE_MANAGER_CORE",
                    "@introspectable": "0",
                    "source-position": {
                        "@filename": "gdk/x11/gdkx11devicemanager-core.h",
                        "@line": "26"
                    },
                    "parameters": {
                        "parameter": {
                            "@name": "o"
                        }
                    }
                },
                {
                    "@name": "X11_DEVICE_MANAGER_CORE_CLASS",
                    "@c:identifier": "GDK_X11_DEVICE_MANAGER_CORE_CLASS",
                    "@introspectable": "0",
                    "source-position": {
                        "@filename": "gdk/x11/gdkx11devicemanager-core.h",
                        "@line": "27"
                    },
                    "parameters": {
                        "parameter": {
                            "@name": "c"
                        }
                    }
                },
                {
                    "@name": "X11_DEVICE_MANAGER_CORE_GET_CLASS",
                    "@c:identifier": "GDK_X11_DEVICE_MANAGER_CORE_GET_CLASS",
                    "@introspectable": "0",
                    "source-position": {
                        "@filename": "gdk/x11/gdkx11devicemanager-core.h",
                        "@line": "30"
                    },
                    "parameters": {
                        "parameter": {
                            "@name": "o"
                        }
                    }
                },
                {
                    "@name": "X11_DEVICE_MANAGER_XI2",
                    "@c:identifier": "GDK_X11_DEVICE_MANAGER_XI2",
                    "@introspectable": "0",
                    "source-position": {
                        "@filename": "gdk/x11/gdkx11devicemanager-xi2.h",
                        "@line": "26"
                    },
                    "parameters": {
                        "parameter": {
                            "@name": "o"
                        }
                    }
                },
                {
                    "@name": "X11_DEVICE_MANAGER_XI2_CLASS",
                    "@c:identifier": "GDK_X11_DEVICE_MANAGER_XI2_CLASS",
                    "@introspectable": "0",
                    "source-position": {
                        "@filename": "gdk/x11/gdkx11devicemanager-xi2.h",
                        "@line": "27"
                    },
                    "parameters": {
                        "parameter": {
                            "@name": "c"
                        }
                    }
                },
                {
                    "@name": "X11_DEVICE_MANAGER_XI2_GET_CLASS",
                    "@c:identifier": "GDK_X11_DEVICE_MANAGER_XI2_GET_CLASS",
                    "@introspectable": "0",
                    "source-position": {
                        "@filename": "gdk/x11/gdkx11devicemanager-xi2.h",
                        "@line": "30"
                    },
                    "parameters": {
                        "parameter": {
                            "@name": "o"
                        }
                    }
                },
                {
                    "@name": "X11_DEVICE_XI2",
                    "@c:identifier": "GDK_X11_DEVICE_XI2",
                    "@introspectable": "0",
                    "source-position": {
                        "@filename": "gdk/x11/gdkx11device-xi2.h",
                        "@line": "26"
                    },
                    "parameters": {
                        "parameter": {
                            "@name": "o"
                        }
                    }
                },
                {
                    "@name": "X11_DEVICE_XI2_CLASS",
                    "@c:identifier": "GDK_X11_DEVICE_XI2_CLASS",
                    "@introspectable": "0",
                    "source-position": {
                        "@filename": "gdk/x11/gdkx11device-xi2.h",
                        "@line": "27"
                    },
                    "parameters": {
                        "parameter": {
                            "@name": "c"
                        }
                    }
                },
                {
                    "@name": "X11_DEVICE_XI2_GET_CLASS",
                    "@c:identifier": "GDK_X11_DEVICE_XI2_GET_CLASS",
                    "@introspectable": "0",
                    "source-position": {
                        "@filename": "gdk/x11/gdkx11device-xi2.h",
                        "@line": "30"
                    },
                    "parameters": {
                        "parameter": {
                            "@name": "o"
                        }
                    }
                },
                {
                    "@name": "X11_DISPLAY",
                    "@c:identifier": "GDK_X11_DISPLAY",
                    "@introspectable": "0",
                    "source-position": {
                        "@filename": "gdk/x11/gdkx11display.h",
                        "@line": "47"
                    },
                    "parameters": {
                        "parameter": {
                            "@name": "object"
                        }
                    }
                },
                {
                    "@name": "X11_DISPLAY_CLASS",
                    "@c:identifier": "GDK_X11_DISPLAY_CLASS",
                    "@introspectable": "0",
                    "source-position": {
                        "@filename": "gdk/x11/gdkx11display.h",
                        "@line": "48"
                    },
                    "parameters": {
                        "parameter": {
                            "@name": "klass"
                        }
                    }
                },
                {
                    "@name": "X11_DISPLAY_GET_CLASS",
                    "@c:identifier": "GDK_X11_DISPLAY_GET_CLASS",
                    "@introspectable": "0",
                    "source-position": {
                        "@filename": "gdk/x11/gdkx11display.h",
                        "@line": "51"
                    },
                    "parameters": {
                        "parameter": {
                            "@name": "obj"
                        }
                    }
                },
                {
                    "@name": "X11_DISPLAY_MANAGER",
                    "@c:identifier": "GDK_X11_DISPLAY_MANAGER",
                    "@introspectable": "0",
                    "source-position": {
                        "@filename": "gdk/x11/gdkx11displaymanager.h",
                        "@line": "37"
                    },
                    "parameters": {
                        "parameter": {
                            "@name": "object"
                        }
                    }
                },
                {
                    "@name": "X11_DISPLAY_MANAGER_CLASS",
                    "@c:identifier": "GDK_X11_DISPLAY_MANAGER_CLASS",
                    "@introspectable": "0",
                    "source-position": {
                        "@filename": "gdk/x11/gdkx11displaymanager.h",
                        "@line": "38"
                    },
                    "parameters": {
                        "parameter": {
                            "@name": "klass"
                        }
                    }
                },
                {
                    "@name": "X11_DISPLAY_MANAGER_GET_CLASS",
                    "@c:identifier": "GDK_X11_DISPLAY_MANAGER_GET_CLASS",
                    "@introspectable": "0",
                    "source-position": {
                        "@filename": "gdk/x11/gdkx11displaymanager.h",
                        "@line": "41"
                    },
                    "parameters": {
                        "parameter": {
                            "@name": "obj"
                        }
                    }
                },
                {
                    "@name": "X11_DRAG_CONTEXT",
                    "@c:identifier": "GDK_X11_DRAG_CONTEXT",
                    "@introspectable": "0",
                    "source-position": {
                        "@filename": "gdk/x11/gdkx11dnd.h",
                        "@line": "30"
                    },
                    "parameters": {
                        "parameter": {
                            "@name": "object"
                        }
                    }
                },
                {
                    "@name": "X11_DRAG_CONTEXT_CLASS",
                    "@c:identifier": "GDK_X11_DRAG_CONTEXT_CLASS",
                    "@introspectable": "0",
                    "source-position": {
                        "@filename": "gdk/x11/gdkx11dnd.h",
                        "@line": "31"
                    },
                    "parameters": {
                        "parameter": {
                            "@name": "klass"
                        }
                    }
                },
                {
                    "@name": "X11_DRAG_CONTEXT_GET_CLASS",
                    "@c:identifier": "GDK_X11_DRAG_CONTEXT_GET_CLASS",
                    "@introspectable": "0",
                    "source-position": {
                        "@filename": "gdk/x11/gdkx11dnd.h",
                        "@line": "34"
                    },
                    "parameters": {
                        "parameter": {
                            "@name": "obj"
                        }
                    }
                },
                {
                    "@name": "X11_GL_CONTEXT",
                    "@c:identifier": "GDK_X11_GL_CONTEXT",
                    "@introspectable": "0",
                    "source-position": {
                        "@filename": "gdk/x11/gdkx11glcontext.h",
                        "@line": "33"
                    },
                    "parameters": {
                        "parameter": {
                            "@name": "obj"
                        }
                    }
                },
                {
                    "@name": "X11_IS_GL_CONTEXT",
                    "@c:identifier": "GDK_X11_IS_GL_CONTEXT",
                    "@introspectable": "0",
                    "source-position": {
                        "@filename": "gdk/x11/gdkx11glcontext.h",
                        "@line": "34"
                    },
                    "parameters": {
                        "parameter": {
                            "@name": "obj"
                        }
                    }
                },
                {
                    "@name": "X11_KEYMAP",
                    "@c:identifier": "GDK_X11_KEYMAP",
                    "@introspectable": "0",
                    "source-position": {
                        "@filename": "gdk/x11/gdkx11keys.h",
                        "@line": "37"
                    },
                    "parameters": {
                        "parameter": {
                            "@name": "object"
                        }
                    }
                },
                {
                    "@name": "X11_KEYMAP_CLASS",
                    "@c:identifier": "GDK_X11_KEYMAP_CLASS",
                    "@introspectable": "0",
                    "source-position": {
                        "@filename": "gdk/x11/gdkx11keys.h",
                        "@line": "38"
                    },
                    "parameters": {
                        "parameter": {
                            "@name": "klass"
                        }
                    }
                },
                {
                    "@name": "X11_KEYMAP_GET_CLASS",
                    "@c:identifier": "GDK_X11_KEYMAP_GET_CLASS",
                    "@introspectable": "0",
                    "source-position": {
                        "@filename": "gdk/x11/gdkx11keys.h",
                        "@line": "41"
                    },
                    "parameters": {
                        "parameter": {
                            "@name": "obj"
                        }
                    }
                },
                {
                    "@name": "X11_MONITOR",
                    "@c:identifier": "GDK_X11_MONITOR",
                    "@introspectable": "0",
                    "source-position": {
                        "@filename": "gdk/x11/gdkx11monitor.h",
                        "@line": "34"
                    },
                    "parameters": {
                        "parameter": {
                            "@name": "object"
                        }
                    }
                },
                {
                    "@name": "X11_SCREEN",
                    "@c:identifier": "GDK_X11_SCREEN",
                    "@introspectable": "0",
                    "source-position": {
                        "@filename": "gdk/x11/gdkx11screen.h",
                        "@line": "40"
                    },
                    "parameters": {
                        "parameter": {
                            "@name": "object"
                        }
                    }
                },
                {
                    "@name": "X11_SCREEN_CLASS",
                    "@c:identifier": "GDK_X11_SCREEN_CLASS",
                    "@introspectable": "0",
                    "source-position": {
                        "@filename": "gdk/x11/gdkx11screen.h",
                        "@line": "41"
                    },
                    "parameters": {
                        "parameter": {
                            "@name": "klass"
                        }
                    }
                },
                {
                    "@name": "X11_SCREEN_GET_CLASS",
                    "@c:identifier": "GDK_X11_SCREEN_GET_CLASS",
                    "@introspectable": "0",
                    "source-position": {
                        "@filename": "gdk/x11/gdkx11screen.h",
                        "@line": "44"
                    },
                    "parameters": {
                        "parameter": {
                            "@name": "obj"
                        }
                    }
                },
                {
                    "@name": "X11_VISUAL",
                    "@c:identifier": "GDK_X11_VISUAL",
                    "@introspectable": "0",
                    "source-position": {
                        "@filename": "gdk/x11/gdkx11visual.h",
                        "@line": "40"
                    },
                    "parameters": {
                        "parameter": {
                            "@name": "object"
                        }
                    }
                },
                {
                    "@name": "X11_VISUAL_CLASS",
                    "@c:identifier": "GDK_X11_VISUAL_CLASS",
                    "@introspectable": "0",
                    "source-position": {
                        "@filename": "gdk/x11/gdkx11visual.h",
                        "@line": "41"
                    },
                    "parameters": {
                        "parameter": {
                            "@name": "klass"
                        }
                    }
                },
                {
                    "@name": "X11_VISUAL_GET_CLASS",
                    "@c:identifier": "GDK_X11_VISUAL_GET_CLASS",
                    "@introspectable": "0",
                    "source-position": {
                        "@filename": "gdk/x11/gdkx11visual.h",
                        "@line": "44"
                    },
                    "parameters": {
                        "parameter": {
                            "@name": "obj"
                        }
                    }
                },
                {
                    "@name": "X11_WINDOW",
                    "@c:identifier": "GDK_X11_WINDOW",
                    "@introspectable": "0",
                    "source-position": {
                        "@filename": "gdk/x11/gdkx11window.h",
                        "@line": "40"
                    },
                    "parameters": {
                        "parameter": {
                            "@name": "object"
                        }
                    }
                },
                {
                    "@name": "X11_WINDOW_CLASS",
                    "@c:identifier": "GDK_X11_WINDOW_CLASS",
                    "@introspectable": "0",
                    "source-position": {
                        "@filename": "gdk/x11/gdkx11window.h",
                        "@line": "41"
                    },
                    "parameters": {
                        "parameter": {
                            "@name": "klass"
                        }
                    }
                },
                {
                    "@name": "X11_WINDOW_GET_CLASS",
                    "@c:identifier": "GDK_X11_WINDOW_GET_CLASS",
                    "@introspectable": "0",
                    "source-position": {
                        "@filename": "gdk/x11/gdkx11window.h",
                        "@line": "44"
                    },
                    "parameters": {
                        "parameter": {
                            "@name": "obj"
                        }
                    }
                },
                {
                    "@name": "XID_TO_POINTER",
                    "@c:identifier": "GDK_XID_TO_POINTER",
                    "@introspectable": "0",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "gdk/x11/gdkx11utils.h",
                        "@line": "51",
                        "#text": "Converts an XID into a @gpointer. This is useful with data structures\nthat use pointer arguments such as #GHashTable. Use GDK_POINTER_TO_XID()\nto convert the argument back to an XID."
                    },
                    "source-position": {
                        "@filename": "gdk/x11/gdkx11utils.h",
                        "@line": "59"
                    },
                    "parameters": {
                        "parameter": {
                            "@name": "xid",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/x11/gdkx11utils.h",
                                "@line": "53",
                                "#text": "XID to stuff into the pointer"
                            }
                        }
                    }
                }
            ],
            "class": [
                {
                    "@name": "X11AppLaunchContext",
                    "@c:symbol-prefix": "x11_app_launch_context",
                    "@c:type": "GdkX11AppLaunchContext",
                    "@parent": "Gdk.AppLaunchContext",
                    "@glib:type-name": "GdkX11AppLaunchContext",
                    "@glib:get-type": "gdk_x11_app_launch_context_get_type",
                    "@glib:type-struct": "X11AppLaunchContextClass",
                    "source-position": {
                        "@filename": "gdk/x11/gdkx11applaunchcontext.h",
                        "@line": "41"
                    }
                },
                {
                    "@name": "X11Cursor",
                    "@c:symbol-prefix": "x11_cursor",
                    "@c:type": "GdkX11Cursor",
                    "@parent": "Gdk.Cursor",
                    "@glib:type-name": "GdkX11Cursor",
                    "@glib:get-type": "gdk_x11_cursor_get_type",
                    "@glib:type-struct": "X11CursorClass",
                    "source-position": {
                        "@filename": "gdk/x11/gdkx11cursor.h",
                        "@line": "51"
                    },
                    "method": [
                        {
                            "@name": "get_xcursor",
                            "@c:identifier": "gdk_x11_cursor_get_xcursor",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/x11/gdkcursor-x11.c",
                                "@line": "304",
                                "#text": "Returns the X cursor belonging to a #GdkCursor."
                            },
                            "source-position": {
                                "@filename": "gdk/x11/gdkx11cursor.h",
                                "@line": "59"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "gdk/x11/gdkcursor-x11.c",
                                    "@line": "310",
                                    "#text": "an Xlib Cursor."
                                },
                                "type": {
                                    "@name": "xlib.Cursor",
                                    "@c:type": "Cursor"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "cursor",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "gdk/x11/gdkcursor-x11.c",
                                        "@line": "306",
                                        "#text": "a #GdkCursor."
                                    },
                                    "type": {
                                        "@name": "X11Cursor",
                                        "@c:type": "GdkCursor*"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "get_xdisplay",
                            "@c:identifier": "gdk_x11_cursor_get_xdisplay",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/x11/gdkcursor-x11.c",
                                "@line": "288",
                                "#text": "Returns the display of a #GdkCursor."
                            },
                            "source-position": {
                                "@filename": "gdk/x11/gdkx11cursor.h",
                                "@line": "57"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "gdk/x11/gdkcursor-x11.c",
                                    "@line": "294",
                                    "#text": "an Xlib Display*."
                                },
                                "type": {
                                    "@name": "xlib.Display",
                                    "@c:type": "Display*"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "cursor",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "gdk/x11/gdkcursor-x11.c",
                                        "@line": "290",
                                        "#text": "a #GdkCursor."
                                    },
                                    "type": {
                                        "@name": "X11Cursor",
                                        "@c:type": "GdkCursor*"
                                    }
                                }
                            }
                        }
                    ]
                },
                {
                    "@name": "X11DeviceCore",
                    "@c:symbol-prefix": "x11_device_core",
                    "@c:type": "GdkX11DeviceCore",
                    "@parent": "Gdk.Device",
                    "@glib:type-name": "GdkX11DeviceCore",
                    "@glib:get-type": "gdk_x11_device_core_get_type",
                    "@glib:type-struct": "X11DeviceCoreClass",
                    "source-position": {
                        "@filename": "gdk/x11/gdkx11device-core.h",
                        "@line": "33"
                    }
                },
                {
                    "@name": "X11DeviceManagerCore",
                    "@c:symbol-prefix": "x11_device_manager_core",
                    "@c:type": "GdkX11DeviceManagerCore",
                    "@parent": "Gdk.DeviceManager",
                    "@glib:type-name": "GdkX11DeviceManagerCore",
                    "@glib:get-type": "gdk_x11_device_manager_core_get_type",
                    "@glib:type-struct": "X11DeviceManagerCoreClass",
                    "source-position": {
                        "@filename": "gdk/x11/gdkx11devicemanager-core.h",
                        "@line": "33"
                    }
                },
                {
                    "@name": "X11DeviceManagerXI2",
                    "@c:symbol-prefix": "x11_device_manager_xi2",
                    "@c:type": "GdkX11DeviceManagerXI2",
                    "@parent": "X11DeviceManagerCore",
                    "@glib:type-name": "GdkX11DeviceManagerXI2",
                    "@glib:get-type": "gdk_x11_device_manager_xi2_get_type",
                    "@glib:type-struct": "X11DeviceManagerXI2Class",
                    "source-position": {
                        "@filename": "gdk/x11/gdkx11devicemanager-xi2.h",
                        "@line": "33"
                    },
                    "property": [
                        {
                            "@name": "major",
                            "@writable": "1",
                            "@construct-only": "1",
                            "@transfer-ownership": "none",
                            "type": {
                                "@name": "gint",
                                "@c:type": "gint"
                            }
                        },
                        {
                            "@name": "minor",
                            "@writable": "1",
                            "@construct-only": "1",
                            "@transfer-ownership": "none",
                            "type": {
                                "@name": "gint",
                                "@c:type": "gint"
                            }
                        },
                        {
                            "@name": "opcode",
                            "@writable": "1",
                            "@construct-only": "1",
                            "@transfer-ownership": "none",
                            "type": {
                                "@name": "gint",
                                "@c:type": "gint"
                            }
                        }
                    ]
                },
                {
                    "@name": "X11DeviceXI2",
                    "@c:symbol-prefix": "x11_device_xi2",
                    "@c:type": "GdkX11DeviceXI2",
                    "@parent": "Gdk.Device",
                    "@glib:type-name": "GdkX11DeviceXI2",
                    "@glib:get-type": "gdk_x11_device_xi2_get_type",
                    "@glib:type-struct": "X11DeviceXI2Class",
                    "source-position": {
                        "@filename": "gdk/x11/gdkx11device-xi2.h",
                        "@line": "33"
                    },
                    "property": {
                        "@name": "device-id",
                        "@writable": "1",
                        "@construct-only": "1",
                        "@transfer-ownership": "none",
                        "type": {
                            "@name": "gint",
                            "@c:type": "gint"
                        }
                    }
                },
                {
                    "@name": "X11Display",
                    "@c:symbol-prefix": "x11_display",
                    "@c:type": "GdkX11Display",
                    "@parent": "Gdk.Display",
                    "@glib:type-name": "GdkX11Display",
                    "@glib:get-type": "gdk_x11_display_get_type",
                    "@glib:type-struct": "X11DisplayClass",
                    "source-position": {
                        "@filename": "gdk/x11/gdkx11display.h",
                        "@line": "44"
                    },
                    "function": {
                        "@name": "get_glx_version",
                        "@c:identifier": "gdk_x11_display_get_glx_version",
                        "@version": "3.16",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "gdk/x11/gdkglcontext-x11.c",
                            "@line": "1362",
                            "#text": "Retrieves the version of the GLX implementation."
                        },
                        "source-position": {
                            "@filename": "gdk/x11/gdkx11glcontext.h",
                            "@line": "43"
                        },
                        "return-value": {
                            "@transfer-ownership": "none",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/x11/gdkglcontext-x11.c",
                                "@line": "1370",
                                "#text": "%TRUE if GLX is available"
                            },
                            "type": {
                                "@name": "gboolean",
                                "@c:type": "gboolean"
                            }
                        },
                        "parameters": {
                            "parameter": [
                                {
                                    "@name": "display",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "gdk/x11/gdkglcontext-x11.c",
                                        "@line": "1364",
                                        "#text": "a #GdkDisplay"
                                    },
                                    "type": {
                                        "@name": "Gdk.Display",
                                        "@c:type": "GdkDisplay*"
                                    }
                                },
                                {
                                    "@name": "major",
                                    "@direction": "out",
                                    "@caller-allocates": "0",
                                    "@transfer-ownership": "full",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "gdk/x11/gdkglcontext-x11.c",
                                        "@line": "1365",
                                        "#text": "return location for the GLX major version"
                                    },
                                    "type": {
                                        "@name": "gint",
                                        "@c:type": "gint*"
                                    }
                                },
                                {
                                    "@name": "minor",
                                    "@direction": "out",
                                    "@caller-allocates": "0",
                                    "@transfer-ownership": "full",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "gdk/x11/gdkglcontext-x11.c",
                                        "@line": "1366",
                                        "#text": "return location for the GLX minor version"
                                    },
                                    "type": {
                                        "@name": "gint",
                                        "@c:type": "gint*"
                                    }
                                }
                            ]
                        }
                    },
                    "method": [
                        {
                            "@name": "broadcast_startup_message",
                            "@c:identifier": "gdk_x11_display_broadcast_startup_message",
                            "@version": "2.12",
                            "@introspectable": "0",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/x11/gdkdisplay-x11.c",
                                "@line": "2335",
                                "#text": "Sends a startup notification message of type @message_type to\n@display.\n\nThis is a convenience function for use by code that implements the\nfreedesktop startup notification specification. Applications should\nnot normally need to call it directly. See the\n[Startup Notification Protocol specification](http://standards.freedesktop.org/startup-notification-spec/startup-notification-latest.txt)\nfor definitions of the message types and keys that can be used."
                            },
                            "source-position": {
                                "@filename": "gdk/x11/gdkx11display.h",
                                "@line": "76"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "type": {
                                    "@name": "none",
                                    "@c:type": "void"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "display",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "gdk/x11/gdkdisplay-x11.c",
                                        "@line": "2337",
                                        "#text": "a #GdkDisplay"
                                    },
                                    "type": {
                                        "@name": "X11Display",
                                        "@c:type": "GdkDisplay*"
                                    }
                                },
                                "parameter": [
                                    {
                                        "@name": "message_type",
                                        "@transfer-ownership": "none",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "gdk/x11/gdkdisplay-x11.c",
                                            "@line": "2338",
                                            "#text": "startup notification message type (\"new\", \"change\",\nor \"remove\")"
                                        },
                                        "type": {
                                            "@name": "utf8",
                                            "@c:type": "const char*"
                                        }
                                    },
                                    {
                                        "@name": "...",
                                        "@transfer-ownership": "none",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "gdk/x11/gdkdisplay-x11.c",
                                            "@line": "2340",
                                            "#text": "a list of key/value pairs (as strings), terminated by a\n%NULL key. (A %NULL value for a key will cause that key to be\nskipped in the output.)"
                                        },
                                        "varargs": null
                                    }
                                ]
                            }
                        },
                        {
                            "@name": "error_trap_pop",
                            "@c:identifier": "gdk_x11_display_error_trap_pop",
                            "@version": "3.0",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/x11/gdkdisplay-x11.c",
                                "@line": "2955",
                                "#text": "Pops the error trap pushed by gdk_x11_display_error_trap_push().\nWill XSync() if necessary and will always block until\nthe error is known to have occurred or not occurred,\nso the error code can be returned.\n\nIf you don\u2019t need to use the return value,\ngdk_x11_display_error_trap_pop_ignored() would be more efficient.\n\nSee gdk_error_trap_pop() for the all-displays-at-once\nequivalent."
                            },
                            "source-position": {
                                "@filename": "gdk/x11/gdkx11display.h",
                                "@line": "96"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "gdk/x11/gdkdisplay-x11.c",
                                    "@line": "2972",
                                    "#text": "X error code or 0 on success"
                                },
                                "type": {
                                    "@name": "gint",
                                    "@c:type": "gint"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "display",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "gdk/x11/gdkdisplay-x11.c",
                                        "@line": "2957",
                                        "#text": "the display"
                                    },
                                    "type": {
                                        "@name": "X11Display",
                                        "@c:type": "GdkDisplay*"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "error_trap_pop_ignored",
                            "@c:identifier": "gdk_x11_display_error_trap_pop_ignored",
                            "@version": "3.0",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/x11/gdkdisplay-x11.c",
                                "@line": "2982",
                                "#text": "Pops the error trap pushed by gdk_x11_display_error_trap_push().\nDoes not block to see if an error occurred; merely records the\nrange of requests to ignore errors for, and ignores those errors\nif they arrive asynchronously.\n\nSee gdk_error_trap_pop_ignored() for the all-displays-at-once\nequivalent."
                            },
                            "source-position": {
                                "@filename": "gdk/x11/gdkx11display.h",
                                "@line": "98"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "type": {
                                    "@name": "none",
                                    "@c:type": "void"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "display",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "gdk/x11/gdkdisplay-x11.c",
                                        "@line": "2984",
                                        "#text": "the display"
                                    },
                                    "type": {
                                        "@name": "X11Display",
                                        "@c:type": "GdkDisplay*"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "error_trap_push",
                            "@c:identifier": "gdk_x11_display_error_trap_push",
                            "@version": "3.0",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/x11/gdkdisplay-x11.c",
                                "@line": "2805",
                                "#text": "Begins a range of X requests on @display for which X error events\nwill be ignored. Unignored errors (when no trap is pushed) will abort\nthe application. Use gdk_x11_display_error_trap_pop() or\ngdk_x11_display_error_trap_pop_ignored()to lift a trap pushed\nwith this function.\n\nSee also gdk_error_trap_push() to push a trap on all displays."
                            },
                            "source-position": {
                                "@filename": "gdk/x11/gdkx11display.h",
                                "@line": "93"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "type": {
                                    "@name": "none",
                                    "@c:type": "void"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "display",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "gdk/x11/gdkdisplay-x11.c",
                                        "@line": "2807",
                                        "#text": "a #GdkDisplay"
                                    },
                                    "type": {
                                        "@name": "X11Display",
                                        "@c:type": "GdkDisplay*"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "get_startup_notification_id",
                            "@c:identifier": "gdk_x11_display_get_startup_notification_id",
                            "@version": "2.12",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/x11/gdkdisplay-x11.c",
                                "@line": "2547",
                                "#text": "Gets the startup notification ID for a display."
                            },
                            "source-position": {
                                "@filename": "gdk/x11/gdkx11display.h",
                                "@line": "65"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "gdk/x11/gdkdisplay-x11.c",
                                    "@line": "2553",
                                    "#text": "the startup notification ID for @display"
                                },
                                "type": {
                                    "@name": "utf8",
                                    "@c:type": "const gchar*"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "display",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "gdk/x11/gdkdisplay-x11.c",
                                        "@line": "2549",
                                        "#text": "a #GdkDisplay"
                                    },
                                    "type": {
                                        "@name": "X11Display",
                                        "@c:type": "GdkDisplay*"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "get_user_time",
                            "@c:identifier": "gdk_x11_display_get_user_time",
                            "@version": "2.8",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/x11/gdkdisplay-x11.c",
                                "@line": "2515",
                                "#text": "Returns the timestamp of the last user interaction on\n@display. The timestamp is taken from events caused\nby user interaction such as key presses or pointer\nmovements. See gdk_x11_window_set_user_time()."
                            },
                            "source-position": {
                                "@filename": "gdk/x11/gdkx11display.h",
                                "@line": "62"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "gdk/x11/gdkdisplay-x11.c",
                                    "@line": "2524",
                                    "#text": "the timestamp of the last user interaction"
                                },
                                "type": {
                                    "@name": "guint32",
                                    "@c:type": "guint32"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "display",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "gdk/x11/gdkdisplay-x11.c",
                                        "@line": "2517",
                                        "#text": "a #GdkDisplay"
                                    },
                                    "type": {
                                        "@name": "X11Display",
                                        "@c:type": "GdkDisplay*"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "get_xdisplay",
                            "@c:identifier": "gdk_x11_display_get_xdisplay",
                            "@version": "2.2",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/x11/gdkdisplay-x11.c",
                                "@line": "2213",
                                "#text": "Returns the X display of a #GdkDisplay."
                            },
                            "source-position": {
                                "@filename": "gdk/x11/gdkx11display.h",
                                "@line": "57"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "gdk/x11/gdkdisplay-x11.c",
                                    "@line": "2219",
                                    "#text": "an X display"
                                },
                                "type": {
                                    "@name": "xlib.Display",
                                    "@c:type": "Display*"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "display",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "gdk/x11/gdkdisplay-x11.c",
                                        "@line": "2215",
                                        "#text": "a #GdkDisplay"
                                    },
                                    "type": {
                                        "@name": "X11Display",
                                        "@c:type": "GdkDisplay*"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "grab",
                            "@c:identifier": "gdk_x11_display_grab",
                            "@version": "2.2",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/x11/gdkdisplay-x11.c",
                                "@line": "2004",
                                "#text": "Call XGrabServer() on @display.\nTo ungrab the display again, use gdk_x11_display_ungrab().\n\ngdk_x11_display_grab()/gdk_x11_display_ungrab() calls can be nested."
                            },
                            "source-position": {
                                "@filename": "gdk/x11/gdkx11display.h",
                                "@line": "84"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "type": {
                                    "@name": "none",
                                    "@c:type": "void"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "display",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "gdk/x11/gdkdisplay-x11.c",
                                        "@line": "2006",
                                        "#text": "a #GdkDisplay"
                                    },
                                    "type": {
                                        "@name": "X11Display",
                                        "@c:type": "GdkDisplay*"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "set_cursor_theme",
                            "@c:identifier": "gdk_x11_display_set_cursor_theme",
                            "@version": "2.8",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/x11/gdkcursor-x11.c",
                                "@line": "441",
                                "#text": "Sets the cursor theme from which the images for cursor\nshould be taken.\n\nIf the windowing system supports it, existing cursors created\nwith gdk_cursor_new(), gdk_cursor_new_for_display() and\ngdk_cursor_new_from_name() are updated to reflect the theme\nchange. Custom cursors constructed with\ngdk_cursor_new_from_pixbuf() will have to be handled\nby the application (GTK+ applications can learn about\ncursor theme changes by listening for change notification\nfor the corresponding #GtkSetting)."
                            },
                            "source-position": {
                                "@filename": "gdk/x11/gdkx11display.h",
                                "@line": "71"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "type": {
                                    "@name": "none",
                                    "@c:type": "void"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "display",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "gdk/x11/gdkcursor-x11.c",
                                        "@line": "443",
                                        "#text": "a #GdkDisplay"
                                    },
                                    "type": {
                                        "@name": "X11Display",
                                        "@c:type": "GdkDisplay*"
                                    }
                                },
                                "parameter": [
                                    {
                                        "@name": "theme",
                                        "@transfer-ownership": "none",
                                        "@nullable": "1",
                                        "@allow-none": "1",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "gdk/x11/gdkcursor-x11.c",
                                            "@line": "444",
                                            "#text": "the name of the cursor theme to use, or %NULL to unset\n        a previously set value"
                                        },
                                        "type": {
                                            "@name": "utf8",
                                            "@c:type": "const gchar*"
                                        }
                                    },
                                    {
                                        "@name": "size",
                                        "@transfer-ownership": "none",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "gdk/x11/gdkcursor-x11.c",
                                            "@line": "446",
                                            "#text": "the cursor size to use, or 0 to keep the previous size"
                                        },
                                        "type": {
                                            "@name": "gint",
                                            "@c:type": "const gint"
                                        }
                                    }
                                ]
                            }
                        },
                        {
                            "@name": "set_startup_notification_id",
                            "@c:identifier": "gdk_x11_display_set_startup_notification_id",
                            "@version": "3.0",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/x11/gdkdisplay-x11.c",
                                "@line": "2563",
                                "#text": "Sets the startup notification ID for a display.\n\nThis is usually taken from the value of the DESKTOP_STARTUP_ID\nenvironment variable, but in some cases (such as the application not\nbeing launched using exec()) it can come from other sources.\n\nIf the ID contains the string \"_TIME\" then the portion following that\nstring is taken to be the X11 timestamp of the event that triggered\nthe application to be launched and the GDK current event time is set\naccordingly.\n\nThe startup ID is also what is used to signal that the startup is\ncomplete (for example, when opening a window or when calling\ngdk_notify_startup_complete())."
                            },
                            "source-position": {
                                "@filename": "gdk/x11/gdkx11display.h",
                                "@line": "67"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "type": {
                                    "@name": "none",
                                    "@c:type": "void"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "display",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "gdk/x11/gdkdisplay-x11.c",
                                        "@line": "2565",
                                        "#text": "a #GdkDisplay"
                                    },
                                    "type": {
                                        "@name": "X11Display",
                                        "@c:type": "GdkDisplay*"
                                    }
                                },
                                "parameter": {
                                    "@name": "startup_id",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "gdk/x11/gdkdisplay-x11.c",
                                        "@line": "2566",
                                        "#text": "the startup notification ID (must be valid utf8)"
                                    },
                                    "type": {
                                        "@name": "utf8",
                                        "@c:type": "const gchar*"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "set_window_scale",
                            "@c:identifier": "gdk_x11_display_set_window_scale",
                            "@version": "3.10",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/x11/gdkdisplay-x11.c",
                                "@line": "2910",
                                "#text": "Forces a specific window scale for all windows on this display,\ninstead of using the default or user configured scale. This\nis can be used to disable scaling support by setting @scale to\n1, or to programmatically set the window scale.\n\nOnce the scale is set by this call it will not change in response\nto later user configuration changes."
                            },
                            "source-position": {
                                "@filename": "gdk/x11/gdkx11display.h",
                                "@line": "89"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "type": {
                                    "@name": "none",
                                    "@c:type": "void"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "display",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "gdk/x11/gdkdisplay-x11.c",
                                        "@line": "2912",
                                        "#text": "the display"
                                    },
                                    "type": {
                                        "@name": "X11Display",
                                        "@c:type": "GdkDisplay*"
                                    }
                                },
                                "parameter": {
                                    "@name": "scale",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "gdk/x11/gdkdisplay-x11.c",
                                        "@line": "2913",
                                        "#text": "The new scale value"
                                    },
                                    "type": {
                                        "@name": "gint",
                                        "@c:type": "gint"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "string_to_compound_text",
                            "@c:identifier": "gdk_x11_display_string_to_compound_text",
                            "@version": "2.24",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/x11/gdkselection-x11.c",
                                "@line": "573",
                                "#text": "Convert a string from the encoding of the current\nlocale into a form suitable for storing in a window property."
                            },
                            "source-position": {
                                "@filename": "gdk/x11/gdkx11selection.h",
                                "@line": "49"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "gdk/x11/gdkselection-x11.c",
                                    "@line": "587",
                                    "#text": "0 upon success, non-zero upon failure"
                                },
                                "type": {
                                    "@name": "gint",
                                    "@c:type": "gint"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "display",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "gdk/x11/gdkselection-x11.c",
                                        "@line": "575",
                                        "#text": "the #GdkDisplay where the encoding is defined"
                                    },
                                    "type": {
                                        "@name": "X11Display",
                                        "@c:type": "GdkDisplay*"
                                    }
                                },
                                "parameter": [
                                    {
                                        "@name": "str",
                                        "@transfer-ownership": "none",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "gdk/x11/gdkselection-x11.c",
                                            "@line": "576",
                                            "#text": "a nul-terminated string"
                                        },
                                        "type": {
                                            "@name": "utf8",
                                            "@c:type": "const gchar*"
                                        }
                                    },
                                    {
                                        "@name": "encoding",
                                        "@direction": "out",
                                        "@caller-allocates": "1",
                                        "@transfer-ownership": "none",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "gdk/x11/gdkselection-x11.c",
                                            "@line": "577",
                                            "#text": "location to store the encoding atom\n    (to be used as the type for the property)"
                                        },
                                        "type": {
                                            "@name": "Gdk.Atom",
                                            "@c:type": "GdkAtom*"
                                        }
                                    },
                                    {
                                        "@name": "format",
                                        "@direction": "out",
                                        "@caller-allocates": "0",
                                        "@transfer-ownership": "full",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "gdk/x11/gdkselection-x11.c",
                                            "@line": "579",
                                            "#text": "location to store the format of the property"
                                        },
                                        "type": {
                                            "@name": "gint",
                                            "@c:type": "gint*"
                                        }
                                    },
                                    {
                                        "@name": "ctext",
                                        "@direction": "out",
                                        "@caller-allocates": "0",
                                        "@transfer-ownership": "full",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "gdk/x11/gdkselection-x11.c",
                                            "@line": "580",
                                            "#text": "location to store newly\n    allocated data for the property"
                                        },
                                        "array": {
                                            "@length": "4",
                                            "@zero-terminated": "0",
                                            "@c:type": "guchar**",
                                            "type": {
                                                "@name": "guint8",
                                                "@c:type": "guchar*"
                                            }
                                        }
                                    },
                                    {
                                        "@name": "length",
                                        "@direction": "out",
                                        "@caller-allocates": "0",
                                        "@transfer-ownership": "full",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "gdk/x11/gdkselection-x11.c",
                                            "@line": "582",
                                            "#text": "the length of @ctext, in bytes"
                                        },
                                        "type": {
                                            "@name": "gint",
                                            "@c:type": "gint*"
                                        }
                                    }
                                ]
                            }
                        },
                        {
                            "@name": "text_property_to_text_list",
                            "@c:identifier": "gdk_x11_display_text_property_to_text_list",
                            "@version": "2.24",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/x11/gdkselection-x11.c",
                                "@line": "332",
                                "#text": "Convert a text string from the encoding as it is stored\nin a property into an array of strings in the encoding of\nthe current locale. (The elements of the array represent the\nnul-separated elements of the original text string.)"
                            },
                            "source-position": {
                                "@filename": "gdk/x11/gdkx11selection.h",
                                "@line": "40"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "gdk/x11/gdkselection-x11.c",
                                    "@line": "350",
                                    "#text": "the number of strings stored in list, or 0,\n    if the conversion failed"
                                },
                                "type": {
                                    "@name": "gint",
                                    "@c:type": "gint"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "display",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "gdk/x11/gdkselection-x11.c",
                                        "@line": "334",
                                        "#text": "The #GdkDisplay where the encoding is defined"
                                    },
                                    "type": {
                                        "@name": "X11Display",
                                        "@c:type": "GdkDisplay*"
                                    }
                                },
                                "parameter": [
                                    {
                                        "@name": "encoding",
                                        "@transfer-ownership": "none",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "gdk/x11/gdkselection-x11.c",
                                            "@line": "335",
                                            "#text": "an atom representing the encoding. The most\n   common values for this are STRING, or COMPOUND_TEXT.\n   This is value used as the type for the property"
                                        },
                                        "type": {
                                            "@name": "Gdk.Atom",
                                            "@c:type": "GdkAtom"
                                        }
                                    },
                                    {
                                        "@name": "format",
                                        "@transfer-ownership": "none",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "gdk/x11/gdkselection-x11.c",
                                            "@line": "338",
                                            "#text": "the format of the property"
                                        },
                                        "type": {
                                            "@name": "gint",
                                            "@c:type": "gint"
                                        }
                                    },
                                    {
                                        "@name": "text",
                                        "@transfer-ownership": "none",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "gdk/x11/gdkselection-x11.c",
                                            "@line": "339",
                                            "#text": "The text data"
                                        },
                                        "type": {
                                            "@name": "guint8",
                                            "@c:type": "const guchar*"
                                        }
                                    },
                                    {
                                        "@name": "length",
                                        "@transfer-ownership": "none",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "gdk/x11/gdkselection-x11.c",
                                            "@line": "340",
                                            "#text": "The number of items to transform"
                                        },
                                        "type": {
                                            "@name": "gint",
                                            "@c:type": "gint"
                                        }
                                    },
                                    {
                                        "@name": "list",
                                        "@transfer-ownership": "none",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "gdk/x11/gdkselection-x11.c",
                                            "@line": "341",
                                            "#text": "location to store an  array of strings in\n   the encoding of the current locale. This array should be\n   freed using gdk_free_text_list()."
                                        },
                                        "type": {
                                            "@name": "utf8",
                                            "@c:type": "gchar***"
                                        }
                                    }
                                ]
                            }
                        },
                        {
                            "@name": "ungrab",
                            "@c:identifier": "gdk_x11_display_ungrab",
                            "@version": "2.2",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/x11/gdkdisplay-x11.c",
                                "@line": "2029",
                                "#text": "Ungrab @display after it has been grabbed with\ngdk_x11_display_grab()."
                            },
                            "source-position": {
                                "@filename": "gdk/x11/gdkx11display.h",
                                "@line": "86"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "type": {
                                    "@name": "none",
                                    "@c:type": "void"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "display",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "gdk/x11/gdkdisplay-x11.c",
                                        "@line": "2031",
                                        "#text": "a #GdkDisplay"
                                    },
                                    "type": {
                                        "@name": "X11Display",
                                        "@c:type": "GdkDisplay*"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "utf8_to_compound_text",
                            "@c:identifier": "gdk_x11_display_utf8_to_compound_text",
                            "@version": "2.24",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/x11/gdkselection-x11.c",
                                "@line": "694",
                                "#text": "Converts from UTF-8 to compound text."
                            },
                            "source-position": {
                                "@filename": "gdk/x11/gdkx11selection.h",
                                "@line": "56"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "gdk/x11/gdkselection-x11.c",
                                    "@line": "706",
                                    "#text": "%TRUE if the conversion succeeded,\n    otherwise %FALSE"
                                },
                                "type": {
                                    "@name": "gboolean",
                                    "@c:type": "gboolean"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "display",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "gdk/x11/gdkselection-x11.c",
                                        "@line": "696",
                                        "#text": "a #GdkDisplay"
                                    },
                                    "type": {
                                        "@name": "X11Display",
                                        "@c:type": "GdkDisplay*"
                                    }
                                },
                                "parameter": [
                                    {
                                        "@name": "str",
                                        "@transfer-ownership": "none",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "gdk/x11/gdkselection-x11.c",
                                            "@line": "697",
                                            "#text": "a UTF-8 string"
                                        },
                                        "type": {
                                            "@name": "utf8",
                                            "@c:type": "const gchar*"
                                        }
                                    },
                                    {
                                        "@name": "encoding",
                                        "@direction": "out",
                                        "@caller-allocates": "1",
                                        "@transfer-ownership": "none",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "gdk/x11/gdkselection-x11.c",
                                            "@line": "698",
                                            "#text": "location to store resulting encoding"
                                        },
                                        "type": {
                                            "@name": "Gdk.Atom",
                                            "@c:type": "GdkAtom*"
                                        }
                                    },
                                    {
                                        "@name": "format",
                                        "@direction": "out",
                                        "@caller-allocates": "0",
                                        "@transfer-ownership": "full",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "gdk/x11/gdkselection-x11.c",
                                            "@line": "699",
                                            "#text": "location to store format of the result"
                                        },
                                        "type": {
                                            "@name": "gint",
                                            "@c:type": "gint*"
                                        }
                                    },
                                    {
                                        "@name": "ctext",
                                        "@direction": "out",
                                        "@caller-allocates": "0",
                                        "@transfer-ownership": "full",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "gdk/x11/gdkselection-x11.c",
                                            "@line": "700",
                                            "#text": "location to store the data of the result"
                                        },
                                        "array": {
                                            "@length": "4",
                                            "@zero-terminated": "0",
                                            "@c:type": "guchar**",
                                            "type": {
                                                "@name": "guint8",
                                                "@c:type": "guchar*"
                                            }
                                        }
                                    },
                                    {
                                        "@name": "length",
                                        "@direction": "out",
                                        "@caller-allocates": "0",
                                        "@transfer-ownership": "full",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "gdk/x11/gdkselection-x11.c",
                                            "@line": "701",
                                            "#text": "location to store the length of the data\n    stored in @ctext"
                                        },
                                        "type": {
                                            "@name": "gint",
                                            "@c:type": "gint*"
                                        }
                                    }
                                ]
                            }
                        }
                    ]
                },
                {
                    "@name": "X11DisplayManager",
                    "@c:symbol-prefix": "x11_display_manager",
                    "@c:type": "GdkX11DisplayManager",
                    "@parent": "Gdk.DisplayManager",
                    "@glib:type-name": "GdkX11DisplayManager",
                    "@glib:get-type": "gdk_x11_display_manager_get_type",
                    "@glib:type-struct": "X11DisplayManagerClass",
                    "source-position": {
                        "@filename": "gdk/x11/gdkx11displaymanager.h",
                        "@line": "34"
                    }
                },
                {
                    "@name": "X11DragContext",
                    "@c:symbol-prefix": "x11_drag_context",
                    "@c:type": "GdkX11DragContext",
                    "@parent": "Gdk.DragContext",
                    "@glib:type-name": "GdkX11DragContext",
                    "@glib:get-type": "gdk_x11_drag_context_get_type",
                    "@glib:type-struct": "X11DragContextClass",
                    "source-position": {
                        "@filename": "gdk/x11/gdkx11dnd.h",
                        "@line": "41"
                    }
                },
                {
                    "@name": "X11GLContext",
                    "@c:symbol-prefix": "x11_gl_context",
                    "@c:type": "GdkX11GLContext",
                    "@parent": "Gdk.GLContext",
                    "@glib:type-name": "GdkX11GLContext",
                    "@glib:get-type": "gdk_x11_gl_context_get_type",
                    "@glib:type-struct": "X11GLContextClass",
                    "source-position": {
                        "@filename": "gdk/x11/gdkx11glcontext.h",
                        "@line": "37"
                    }
                },
                {
                    "@name": "X11Keymap",
                    "@c:symbol-prefix": "x11_keymap",
                    "@c:type": "GdkX11Keymap",
                    "@parent": "Gdk.Keymap",
                    "@glib:type-name": "GdkX11Keymap",
                    "@glib:get-type": "gdk_x11_keymap_get_type",
                    "@glib:type-struct": "X11KeymapClass",
                    "source-position": {
                        "@filename": "gdk/x11/gdkx11keys.h",
                        "@line": "34"
                    },
                    "method": [
                        {
                            "@name": "get_group_for_state",
                            "@c:identifier": "gdk_x11_keymap_get_group_for_state",
                            "@version": "3.6",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/x11/gdkkeys-x11.c",
                                "@line": "1381",
                                "#text": "Extracts the group from the state field sent in an X Key event.\nThis is only needed for code processing raw X events, since #GdkEventKey\ndirectly includes an is_modifier field."
                            },
                            "source-position": {
                                "@filename": "gdk/x11/gdkx11keys.h",
                                "@line": "47"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "gdk/x11/gdkkeys-x11.c",
                                    "@line": "1390",
                                    "#text": "the index of the active keyboard group for the event"
                                },
                                "type": {
                                    "@name": "gint",
                                    "@c:type": "gint"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "keymap",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "gdk/x11/gdkkeys-x11.c",
                                        "@line": "1383",
                                        "#text": "a #GdkX11Keymap"
                                    },
                                    "type": {
                                        "@name": "X11Keymap",
                                        "@c:type": "GdkKeymap*"
                                    }
                                },
                                "parameter": {
                                    "@name": "state",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "gdk/x11/gdkkeys-x11.c",
                                        "@line": "1384",
                                        "#text": "raw state returned from X"
                                    },
                                    "type": {
                                        "@name": "guint",
                                        "@c:type": "guint"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "key_is_modifier",
                            "@c:identifier": "gdk_x11_keymap_key_is_modifier",
                            "@version": "3.6",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/x11/gdkkeys-x11.c",
                                "@line": "1469",
                                "#text": "Determines whether a particular key code represents a key that\nis a modifier. That is, it\u2019s a key that normally just affects\nthe keyboard state and the behavior of other keys rather than\nproducing a direct effect itself. This is only needed for code\nprocessing raw X events, since #GdkEventKey directly includes\nan is_modifier field."
                            },
                            "source-position": {
                                "@filename": "gdk/x11/gdkx11keys.h",
                                "@line": "51"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "gdk/x11/gdkkeys-x11.c",
                                    "@line": "1481",
                                    "#text": "%TRUE if the hardware keycode is a modifier key"
                                },
                                "type": {
                                    "@name": "gboolean",
                                    "@c:type": "gboolean"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "keymap",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "gdk/x11/gdkkeys-x11.c",
                                        "@line": "1471",
                                        "#text": "a #GdkX11Keymap"
                                    },
                                    "type": {
                                        "@name": "X11Keymap",
                                        "@c:type": "GdkKeymap*"
                                    }
                                },
                                "parameter": {
                                    "@name": "keycode",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "gdk/x11/gdkkeys-x11.c",
                                        "@line": "1472",
                                        "#text": "the hardware keycode from a key event"
                                    },
                                    "type": {
                                        "@name": "guint",
                                        "@c:type": "guint"
                                    }
                                }
                            }
                        }
                    ]
                },
                {
                    "@name": "X11Monitor",
                    "@c:symbol-prefix": "x11_monitor",
                    "@c:type": "GdkX11Monitor",
                    "@parent": "Gdk.Monitor",
                    "@glib:type-name": "GdkX11Monitor",
                    "@glib:get-type": "gdk_x11_monitor_get_type",
                    "@glib:type-struct": "X11MonitorClass",
                    "source-position": {
                        "@filename": "gdk/x11/gdkx11monitor.h",
                        "@line": "38"
                    },
                    "function": {
                        "@name": "get_output",
                        "@c:identifier": "gdk_x11_monitor_get_output",
                        "source-position": {
                            "@filename": "gdk/x11/gdkx11monitor.h",
                            "@line": "44"
                        },
                        "return-value": {
                            "@transfer-ownership": "none",
                            "type": {
                                "@name": "xlib.XID",
                                "@c:type": "XID"
                            }
                        },
                        "parameters": {
                            "parameter": {
                                "@name": "monitor",
                                "@transfer-ownership": "none",
                                "type": {
                                    "@name": "Gdk.Monitor",
                                    "@c:type": "GdkMonitor*"
                                }
                            }
                        }
                    }
                },
                {
                    "@name": "X11Screen",
                    "@c:symbol-prefix": "x11_screen",
                    "@c:type": "GdkX11Screen",
                    "@parent": "Gdk.Screen",
                    "@glib:type-name": "GdkX11Screen",
                    "@glib:get-type": "gdk_x11_screen_get_type",
                    "@glib:type-struct": "X11ScreenClass",
                    "source-position": {
                        "@filename": "gdk/x11/gdkx11screen.h",
                        "@line": "51"
                    },
                    "method": [
                        {
                            "@name": "get_current_desktop",
                            "@c:identifier": "gdk_x11_screen_get_current_desktop",
                            "@version": "3.10",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/x11/gdkscreen-x11.c",
                                "@line": "1827",
                                "#text": "Returns the current workspace for @screen when running under a\nwindow manager that supports multiple workspaces, as described\nin the\n[Extended Window Manager Hints](http://www.freedesktop.org/Standards/wm-spec) specification."
                            },
                            "source-position": {
                                "@filename": "gdk/x11/gdkx11screen.h",
                                "@line": "108"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "gdk/x11/gdkscreen-x11.c",
                                    "@line": "1836",
                                    "#text": "the current workspace, or 0 if workspaces are not supported"
                                },
                                "type": {
                                    "@name": "guint32",
                                    "@c:type": "guint32"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "screen",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "gdk/x11/gdkscreen-x11.c",
                                        "@line": "1829",
                                        "#text": "a #GdkScreen"
                                    },
                                    "type": {
                                        "@name": "X11Screen",
                                        "@c:type": "GdkScreen*"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "get_monitor_output",
                            "@c:identifier": "gdk_x11_screen_get_monitor_output",
                            "@version": "2.14",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/x11/gdkscreen-x11.c",
                                "@line": "171",
                                "#text": "Gets the XID of the specified output/monitor.\nIf the X server does not support version 1.2 of the RANDR\nextension, 0 is returned."
                            },
                            "source-position": {
                                "@filename": "gdk/x11/gdkx11screen.h",
                                "@line": "102"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "gdk/x11/gdkscreen-x11.c",
                                    "@line": "180",
                                    "#text": "the XID of the monitor"
                                },
                                "type": {
                                    "@name": "xlib.XID",
                                    "@c:type": "XID"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "screen",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "gdk/x11/gdkscreen-x11.c",
                                        "@line": "173",
                                        "#text": "a #GdkScreen"
                                    },
                                    "type": {
                                        "@name": "X11Screen",
                                        "@c:type": "GdkScreen*"
                                    }
                                },
                                "parameter": {
                                    "@name": "monitor_num",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "gdk/x11/gdkscreen-x11.c",
                                        "@line": "174",
                                        "#text": "number of the monitor, between 0 and gdk_screen_get_n_monitors (screen)"
                                    },
                                    "type": {
                                        "@name": "gint",
                                        "@c:type": "gint"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "get_number_of_desktops",
                            "@c:identifier": "gdk_x11_screen_get_number_of_desktops",
                            "@version": "3.10",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/x11/gdkscreen-x11.c",
                                "@line": "1808",
                                "#text": "Returns the number of workspaces for @screen when running under a\nwindow manager that supports multiple workspaces, as described\nin the\n[Extended Window Manager Hints](http://www.freedesktop.org/Standards/wm-spec) specification."
                            },
                            "source-position": {
                                "@filename": "gdk/x11/gdkx11screen.h",
                                "@line": "106"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "gdk/x11/gdkscreen-x11.c",
                                    "@line": "1817",
                                    "#text": "the number of workspaces, or 0 if workspaces are not supported"
                                },
                                "type": {
                                    "@name": "guint32",
                                    "@c:type": "guint32"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "screen",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "gdk/x11/gdkscreen-x11.c",
                                        "@line": "1810",
                                        "#text": "a #GdkScreen"
                                    },
                                    "type": {
                                        "@name": "X11Screen",
                                        "@c:type": "GdkScreen*"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "get_screen_number",
                            "@c:identifier": "gdk_x11_screen_get_screen_number",
                            "@version": "2.2",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/x11/gdkscreen-x11.c",
                                "@line": "437",
                                "#text": "Returns the index of a #GdkScreen."
                            },
                            "source-position": {
                                "@filename": "gdk/x11/gdkx11screen.h",
                                "@line": "59"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "gdk/x11/gdkscreen-x11.c",
                                    "@line": "443",
                                    "#text": "the position of @screen among the screens\n    of its display"
                                },
                                "type": {
                                    "@name": "gint",
                                    "@c:type": "int"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "screen",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "gdk/x11/gdkscreen-x11.c",
                                        "@line": "439",
                                        "#text": "a #GdkScreen"
                                    },
                                    "type": {
                                        "@name": "X11Screen",
                                        "@c:type": "GdkScreen*"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "get_window_manager_name",
                            "@c:identifier": "gdk_x11_screen_get_window_manager_name",
                            "@version": "2.2",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/x11/gdkscreen-x11.c",
                                "@line": "1660",
                                "#text": "Returns the name of the window manager for @screen."
                            },
                            "source-position": {
                                "@filename": "gdk/x11/gdkx11screen.h",
                                "@line": "62"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "gdk/x11/gdkscreen-x11.c",
                                    "@line": "1666",
                                    "#text": "the name of the window manager screen @screen, or\n\"unknown\" if the window manager is unknown. The string is owned by GDK\nand should not be freed."
                                },
                                "type": {
                                    "@name": "utf8",
                                    "@c:type": "const char*"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "screen",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "gdk/x11/gdkscreen-x11.c",
                                        "@line": "1662",
                                        "#text": "a #GdkScreen"
                                    },
                                    "type": {
                                        "@name": "X11Screen",
                                        "@c:type": "GdkScreen*"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "get_xscreen",
                            "@c:identifier": "gdk_x11_screen_get_xscreen",
                            "@version": "2.2",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/x11/gdkscreen-x11.c",
                                "@line": "421",
                                "#text": "Returns the screen of a #GdkScreen."
                            },
                            "source-position": {
                                "@filename": "gdk/x11/gdkx11screen.h",
                                "@line": "57"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "gdk/x11/gdkscreen-x11.c",
                                    "@line": "427",
                                    "#text": "an Xlib Screen*"
                                },
                                "type": {
                                    "@name": "xlib.Screen",
                                    "@c:type": "Screen*"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "screen",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "gdk/x11/gdkscreen-x11.c",
                                        "@line": "423",
                                        "#text": "a #GdkScreen"
                                    },
                                    "type": {
                                        "@name": "X11Screen",
                                        "@c:type": "GdkScreen*"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "lookup_visual",
                            "@c:identifier": "gdk_x11_screen_lookup_visual",
                            "@version": "2.2",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/x11/gdkvisual-x11.c",
                                "@line": "439",
                                "#text": "Looks up the #GdkVisual for a particular screen and X Visual ID."
                            },
                            "source-position": {
                                "@filename": "gdk/x11/gdkx11visual.h",
                                "@line": "62"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "gdk/x11/gdkvisual-x11.c",
                                    "@line": "446",
                                    "#text": "the #GdkVisual (owned by the screen\n  object), or %NULL if the visual ID wasn\u2019t found."
                                },
                                "type": {
                                    "@name": "X11Visual",
                                    "@c:type": "GdkVisual*"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "screen",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "gdk/x11/gdkvisual-x11.c",
                                        "@line": "441",
                                        "#text": "a #GdkScreen."
                                    },
                                    "type": {
                                        "@name": "X11Screen",
                                        "@c:type": "GdkScreen*"
                                    }
                                },
                                "parameter": {
                                    "@name": "xvisualid",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "gdk/x11/gdkvisual-x11.c",
                                        "@line": "442",
                                        "#text": "an X Visual ID."
                                    },
                                    "type": {
                                        "@name": "xlib.VisualID",
                                        "@c:type": "VisualID"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "supports_net_wm_hint",
                            "@c:identifier": "gdk_x11_screen_supports_net_wm_hint",
                            "@version": "2.2",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/x11/gdkscreen-x11.c",
                                "@line": "1567",
                                "#text": "This function is specific to the X11 backend of GDK, and indicates\nwhether the window manager supports a certain hint from the\n[Extended Window Manager Hints](http://www.freedesktop.org/Standards/wm-spec) specification.\n\nWhen using this function, keep in mind that the window manager\ncan change over time; so you shouldn\u2019t use this function in\na way that impacts persistent application state. A common bug\nis that your application can start up before the window manager\ndoes when the user logs in, and before the window manager starts\ngdk_x11_screen_supports_net_wm_hint() will return %FALSE for every property.\nYou can monitor the window_manager_changed signal on #GdkScreen to detect\na window manager change."
                            },
                            "source-position": {
                                "@filename": "gdk/x11/gdkx11screen.h",
                                "@line": "98"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "gdk/x11/gdkscreen-x11.c",
                                    "@line": "1585",
                                    "#text": "%TRUE if the window manager supports @property"
                                },
                                "type": {
                                    "@name": "gboolean",
                                    "@c:type": "gboolean"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "screen",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "gdk/x11/gdkscreen-x11.c",
                                        "@line": "1569",
                                        "#text": "the relevant #GdkScreen."
                                    },
                                    "type": {
                                        "@name": "X11Screen",
                                        "@c:type": "GdkScreen*"
                                    }
                                },
                                "parameter": {
                                    "@name": "property",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "gdk/x11/gdkscreen-x11.c",
                                        "@line": "1570",
                                        "#text": "a property atom."
                                    },
                                    "type": {
                                        "@name": "Gdk.Atom",
                                        "@c:type": "GdkAtom"
                                    }
                                }
                            }
                        }
                    ],
                    "glib:signal": {
                        "@name": "window-manager-changed",
                        "@when": "last",
                        "return-value": {
                            "@transfer-ownership": "none",
                            "type": {
                                "@name": "none",
                                "@c:type": "void"
                            }
                        }
                    }
                },
                {
                    "@name": "X11Visual",
                    "@c:symbol-prefix": "x11_visual",
                    "@c:type": "GdkX11Visual",
                    "@parent": "Gdk.Visual",
                    "@glib:type-name": "GdkX11Visual",
                    "@glib:get-type": "gdk_x11_visual_get_type",
                    "@glib:type-struct": "X11VisualClass",
                    "source-position": {
                        "@filename": "gdk/x11/gdkx11visual.h",
                        "@line": "51"
                    },
                    "method": {
                        "@name": "get_xvisual",
                        "@c:identifier": "gdk_x11_visual_get_xvisual",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "gdk/x11/gdkvisual-x11.c",
                            "@line": "520",
                            "#text": "Returns the X visual belonging to a #GdkVisual."
                        },
                        "source-position": {
                            "@filename": "gdk/x11/gdkx11visual.h",
                            "@line": "57"
                        },
                        "return-value": {
                            "@transfer-ownership": "none",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/x11/gdkvisual-x11.c",
                                "@line": "526",
                                "#text": "an Xlib Visual*."
                            },
                            "type": {
                                "@name": "xlib.Visual",
                                "@c:type": "Visual*"
                            }
                        },
                        "parameters": {
                            "instance-parameter": {
                                "@name": "visual",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "gdk/x11/gdkvisual-x11.c",
                                    "@line": "522",
                                    "#text": "a #GdkVisual."
                                },
                                "type": {
                                    "@name": "X11Visual",
                                    "@c:type": "GdkVisual*"
                                }
                            }
                        }
                    }
                },
                {
                    "@name": "X11Window",
                    "@c:symbol-prefix": "x11_window",
                    "@c:type": "GdkX11Window",
                    "@parent": "Gdk.Window",
                    "@glib:type-name": "GdkX11Window",
                    "@glib:get-type": "gdk_x11_window_get_type",
                    "@glib:type-struct": "X11WindowClass",
                    "source-position": {
                        "@filename": "gdk/x11/gdkx11window.h",
                        "@line": "51"
                    },
                    "constructor": {
                        "@name": "foreign_new_for_display",
                        "@c:identifier": "gdk_x11_window_foreign_new_for_display",
                        "@version": "2.24",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "gdk/x11/gdkwindow-x11.c",
                            "@line": "1207",
                            "#text": "Wraps a native window in a #GdkWindow. The function will try to\nlook up the window using gdk_x11_window_lookup_for_display() first.\nIf it does not find it there, it will create a new window.\n\nThis may fail if the window has been destroyed. If the window\nwas already known to GDK, a new reference to the existing\n#GdkWindow is returned."
                        },
                        "source-position": {
                            "@filename": "gdk/x11/gdkx11window.h",
                            "@line": "114"
                        },
                        "return-value": {
                            "@transfer-ownership": "full",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/x11/gdkwindow-x11.c",
                                "@line": "1220",
                                "#text": "a #GdkWindow wrapper for the native\n  window, or %NULL if the window has been destroyed. The wrapper\n  will be newly created, if one doesn\u2019t exist already."
                            },
                            "type": {
                                "@name": "Gdk.Window",
                                "@c:type": "GdkWindow*"
                            }
                        },
                        "parameters": {
                            "parameter": [
                                {
                                    "@name": "display",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "gdk/x11/gdkwindow-x11.c",
                                        "@line": "1209",
                                        "#text": "the #GdkDisplay where the window handle comes from."
                                    },
                                    "type": {
                                        "@name": "X11Display",
                                        "@c:type": "GdkDisplay*"
                                    }
                                },
                                {
                                    "@name": "window",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "gdk/x11/gdkwindow-x11.c",
                                        "@line": "1210",
                                        "#text": "an Xlib Window"
                                    },
                                    "type": {
                                        "@name": "xlib.Window",
                                        "@c:type": "Window"
                                    }
                                }
                            ]
                        }
                    },
                    "function": {
                        "@name": "lookup_for_display",
                        "@c:identifier": "gdk_x11_window_lookup_for_display",
                        "@version": "2.24",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "gdk/x11/gdkxid.c",
                            "@line": "80",
                            "#text": "Looks up the #GdkWindow that wraps the given native window handle."
                        },
                        "source-position": {
                            "@filename": "gdk/x11/gdkx11window.h",
                            "@line": "117"
                        },
                        "return-value": {
                            "@transfer-ownership": "none",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/x11/gdkxid.c",
                                "@line": "88",
                                "#text": "the #GdkWindow wrapper for the native\n   window, or %NULL if there is none."
                            },
                            "type": {
                                "@name": "X11Window",
                                "@c:type": "GdkWindow*"
                            }
                        },
                        "parameters": {
                            "parameter": [
                                {
                                    "@name": "display",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "gdk/x11/gdkxid.c",
                                        "@line": "82",
                                        "#text": "the #GdkDisplay corresponding to the\n          window handle"
                                    },
                                    "type": {
                                        "@name": "X11Display",
                                        "@c:type": "GdkDisplay*"
                                    }
                                },
                                {
                                    "@name": "window",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "gdk/x11/gdkxid.c",
                                        "@line": "84",
                                        "#text": "an Xlib Window"
                                    },
                                    "type": {
                                        "@name": "xlib.Window",
                                        "@c:type": "Window"
                                    }
                                }
                            ]
                        }
                    },
                    "method": [
                        {
                            "@name": "get_desktop",
                            "@c:identifier": "gdk_x11_window_get_desktop",
                            "@version": "3.10",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/x11/gdkwindow-x11.c",
                                "@line": "2220",
                                "#text": "Gets the number of the workspace @window is on."
                            },
                            "source-position": {
                                "@filename": "gdk/x11/gdkx11window.h",
                                "@line": "81"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "gdk/x11/gdkwindow-x11.c",
                                    "@line": "2226",
                                    "#text": "the current workspace of @window"
                                },
                                "type": {
                                    "@name": "guint32",
                                    "@c:type": "guint32"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "window",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "gdk/x11/gdkwindow-x11.c",
                                        "@line": "2222",
                                        "#text": "a #GdkWindow"
                                    },
                                    "type": {
                                        "@name": "X11Window",
                                        "@c:type": "GdkWindow*"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "get_xid",
                            "@c:identifier": "gdk_x11_window_get_xid",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/x11/gdkwindow-x11.c",
                                "@line": "5633",
                                "#text": "Returns the X resource (window) belonging to a #GdkWindow."
                            },
                            "source-position": {
                                "@filename": "gdk/x11/gdkx11window.h",
                                "@line": "57"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "gdk/x11/gdkwindow-x11.c",
                                    "@line": "5639",
                                    "#text": "the ID of @drawable\u2019s X resource."
                                },
                                "type": {
                                    "@name": "xlib.Window",
                                    "@c:type": "Window"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "window",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "gdk/x11/gdkwindow-x11.c",
                                        "@line": "5635",
                                        "#text": "a native #GdkWindow."
                                    },
                                    "type": {
                                        "@name": "X11Window",
                                        "@c:type": "GdkWindow*"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "move_to_current_desktop",
                            "@c:identifier": "gdk_x11_window_move_to_current_desktop",
                            "@version": "2.8",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/x11/gdkwindow-x11.c",
                                "@line": "2150",
                                "#text": "Moves the window to the correct workspace when running under a\nwindow manager that supports multiple workspaces, as described\nin the [Extended Window Manager Hints](http://www.freedesktop.org/Standards/wm-spec) specification.\nWill not do anything if the window is already on all workspaces."
                            },
                            "source-position": {
                                "@filename": "gdk/x11/gdkx11window.h",
                                "@line": "78"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "type": {
                                    "@name": "none",
                                    "@c:type": "void"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "window",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "gdk/x11/gdkwindow-x11.c",
                                        "@line": "2152",
                                        "#text": "a #GdkWindow"
                                    },
                                    "type": {
                                        "@name": "X11Window",
                                        "@c:type": "GdkWindow*"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "move_to_desktop",
                            "@c:identifier": "gdk_x11_window_move_to_desktop",
                            "@version": "3.10",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/x11/gdkwindow-x11.c",
                                "@line": "2238",
                                "#text": "Moves the window to the given workspace when running unde a\nwindow manager that supports multiple workspaces, as described\nin the [Extended Window Manager Hints](http://www.freedesktop.org/Standards/wm-spec) specification."
                            },
                            "source-position": {
                                "@filename": "gdk/x11/gdkx11window.h",
                                "@line": "83"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "type": {
                                    "@name": "none",
                                    "@c:type": "void"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "window",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "gdk/x11/gdkwindow-x11.c",
                                        "@line": "2240",
                                        "#text": "a #GdkWindow"
                                    },
                                    "type": {
                                        "@name": "X11Window",
                                        "@c:type": "GdkWindow*"
                                    }
                                },
                                "parameter": {
                                    "@name": "desktop",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "gdk/x11/gdkwindow-x11.c",
                                        "@line": "2241",
                                        "#text": "the number of the workspace to move the window to"
                                    },
                                    "type": {
                                        "@name": "guint32",
                                        "@c:type": "guint32"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "set_frame_extents",
                            "@c:identifier": "gdk_x11_window_set_frame_extents",
                            "@version": "3.10",
                            "@deprecated": "1",
                            "@deprecated-version": "3.12",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/x11/gdkwindow-x11.c",
                                "@line": "3766",
                                "#text": "This is the same as gdk_window_set_shadow_width() but it only works\non GdkX11Window."
                            },
                            "doc-deprecated": {
                                "@xml:space": "preserve",
                                "#text": "Use gdk_window_set_shadow_width() instead."
                            },
                            "source-position": {
                                "@filename": "gdk/x11/gdkx11window.h",
                                "@line": "69"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "type": {
                                    "@name": "none",
                                    "@c:type": "void"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "window",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "gdk/x11/gdkwindow-x11.c",
                                        "@line": "3768",
                                        "#text": "a #GdkWindow"
                                    },
                                    "type": {
                                        "@name": "X11Window",
                                        "@c:type": "GdkWindow*"
                                    }
                                },
                                "parameter": [
                                    {
                                        "@name": "left",
                                        "@transfer-ownership": "none",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "gdk/x11/gdkwindow-x11.c",
                                            "@line": "3769",
                                            "#text": "The left extent"
                                        },
                                        "type": {
                                            "@name": "gint",
                                            "@c:type": "int"
                                        }
                                    },
                                    {
                                        "@name": "right",
                                        "@transfer-ownership": "none",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "gdk/x11/gdkwindow-x11.c",
                                            "@line": "3770",
                                            "#text": "The right extent"
                                        },
                                        "type": {
                                            "@name": "gint",
                                            "@c:type": "int"
                                        }
                                    },
                                    {
                                        "@name": "top",
                                        "@transfer-ownership": "none",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "gdk/x11/gdkwindow-x11.c",
                                            "@line": "3771",
                                            "#text": "The top extent"
                                        },
                                        "type": {
                                            "@name": "gint",
                                            "@c:type": "int"
                                        }
                                    },
                                    {
                                        "@name": "bottom",
                                        "@transfer-ownership": "none",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "gdk/x11/gdkwindow-x11.c",
                                            "@line": "3772",
                                            "#text": "The bottom extent"
                                        },
                                        "type": {
                                            "@name": "gint",
                                            "@c:type": "int"
                                        }
                                    }
                                ]
                            }
                        },
                        {
                            "@name": "set_frame_sync_enabled",
                            "@c:identifier": "gdk_x11_window_set_frame_sync_enabled",
                            "@version": "3.8",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/x11/gdkwindow-x11.c",
                                "@line": "5678",
                                "#text": "This function can be used to disable frame synchronization for a window.\nNormally frame synchronziation will be enabled or disabled based on whether\nthe system has a compositor that supports frame synchronization, but if\nthe window is not directly managed by the window manager, then frame\nsynchronziation may need to be disabled. This is the case for a window\nembedded via the XEMBED protocol."
                            },
                            "source-position": {
                                "@filename": "gdk/x11/gdkx11window.h",
                                "@line": "87"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "type": {
                                    "@name": "none",
                                    "@c:type": "void"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "window",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "gdk/x11/gdkwindow-x11.c",
                                        "@line": "5680",
                                        "#text": "a native #GdkWindow"
                                    },
                                    "type": {
                                        "@name": "X11Window",
                                        "@c:type": "GdkWindow*"
                                    }
                                },
                                "parameter": {
                                    "@name": "frame_sync_enabled",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "gdk/x11/gdkwindow-x11.c",
                                        "@line": "5681",
                                        "#text": "whether frame-synchronization should be enabled"
                                    },
                                    "type": {
                                        "@name": "gboolean",
                                        "@c:type": "gboolean"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "set_hide_titlebar_when_maximized",
                            "@c:identifier": "gdk_x11_window_set_hide_titlebar_when_maximized",
                            "@version": "3.4",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/x11/gdkwindow-x11.c",
                                "@line": "3698",
                                "#text": "Set a hint for the window manager, requesting that the titlebar\nshould be hidden when the window is maximized.\n\nNote that this property is automatically updated by GTK+, so this\nfunction should only be used by applications which do not use GTK+\nto create toplevel windows."
                            },
                            "source-position": {
                                "@filename": "gdk/x11/gdkx11window.h",
                                "@line": "75"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "type": {
                                    "@name": "none",
                                    "@c:type": "void"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "window",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "gdk/x11/gdkwindow-x11.c",
                                        "@line": "3700",
                                        "#text": "a #GdkWindow"
                                    },
                                    "type": {
                                        "@name": "X11Window",
                                        "@c:type": "GdkWindow*"
                                    }
                                },
                                "parameter": {
                                    "@name": "hide_titlebar_when_maximized",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "gdk/x11/gdkwindow-x11.c",
                                        "@line": "3701",
                                        "#text": "whether to hide the titlebar when\n                               maximized"
                                    },
                                    "type": {
                                        "@name": "gboolean",
                                        "@c:type": "gboolean"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "set_theme_variant",
                            "@c:identifier": "gdk_x11_window_set_theme_variant",
                            "@version": "3.2",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/x11/gdkwindow-x11.c",
                                "@line": "3791",
                                "#text": "GTK+ applications can request a dark theme variant. In order to\nmake other applications - namely window managers using GTK+ for\nthemeing - aware of this choice, GTK+ uses this function to\nexport the requested theme variant as _GTK_THEME_VARIANT property\non toplevel windows.\n\nNote that this property is automatically updated by GTK+, so this\nfunction should only be used by applications which do not use GTK+\nto create toplevel windows."
                            },
                            "source-position": {
                                "@filename": "gdk/x11/gdkx11window.h",
                                "@line": "66"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "type": {
                                    "@name": "none",
                                    "@c:type": "void"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "window",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "gdk/x11/gdkwindow-x11.c",
                                        "@line": "3793",
                                        "#text": "a #GdkWindow"
                                    },
                                    "type": {
                                        "@name": "X11Window",
                                        "@c:type": "GdkWindow*"
                                    }
                                },
                                "parameter": {
                                    "@name": "variant",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "gdk/x11/gdkwindow-x11.c",
                                        "@line": "3794",
                                        "#text": "the theme variant to export"
                                    },
                                    "type": {
                                        "@name": "utf8",
                                        "@c:type": "char*"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "set_user_time",
                            "@c:identifier": "gdk_x11_window_set_user_time",
                            "@version": "2.6",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/x11/gdkwindow-x11.c",
                                "@line": "3593",
                                "#text": "The application can use this call to update the _NET_WM_USER_TIME\nproperty on a toplevel window.  This property stores an Xserver\ntime which represents the time of the last user input event\nreceived for this window.  This property may be used by the window\nmanager to alter the focus, stacking, and/or placement behavior of\nwindows when they are mapped depending on whether the new window\nwas created by a user action or is a \"pop-up\" window activated by a\ntimer or some other event.\n\nNote that this property is automatically updated by GDK, so this\nfunction should only be used by applications which handle input\nevents bypassing GDK."
                            },
                            "source-position": {
                                "@filename": "gdk/x11/gdkx11window.h",
                                "@line": "59"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "type": {
                                    "@name": "none",
                                    "@c:type": "void"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "window",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "gdk/x11/gdkwindow-x11.c",
                                        "@line": "3595",
                                        "#text": "A toplevel #GdkWindow"
                                    },
                                    "type": {
                                        "@name": "X11Window",
                                        "@c:type": "GdkWindow*"
                                    }
                                },
                                "parameter": {
                                    "@name": "timestamp",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "gdk/x11/gdkwindow-x11.c",
                                        "@line": "3596",
                                        "#text": "An XServer timestamp to which the property should be set"
                                    },
                                    "type": {
                                        "@name": "guint32",
                                        "@c:type": "guint32"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "set_utf8_property",
                            "@c:identifier": "gdk_x11_window_set_utf8_property",
                            "@version": "3.4",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/x11/gdkwindow-x11.c",
                                "@line": "3658",
                                "#text": "This function modifies or removes an arbitrary X11 window\nproperty of type UTF8_STRING.  If the given @window is\nnot a toplevel window, it is ignored."
                            },
                            "source-position": {
                                "@filename": "gdk/x11/gdkx11window.h",
                                "@line": "62"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "type": {
                                    "@name": "none",
                                    "@c:type": "void"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "window",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "gdk/x11/gdkwindow-x11.c",
                                        "@line": "3660",
                                        "#text": "a #GdkWindow"
                                    },
                                    "type": {
                                        "@name": "X11Window",
                                        "@c:type": "GdkWindow*"
                                    }
                                },
                                "parameter": [
                                    {
                                        "@name": "name",
                                        "@transfer-ownership": "none",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "gdk/x11/gdkwindow-x11.c",
                                            "@line": "3661",
                                            "#text": "Property name, will be interned as an X atom"
                                        },
                                        "type": {
                                            "@name": "utf8",
                                            "@c:type": "const gchar*"
                                        }
                                    },
                                    {
                                        "@name": "value",
                                        "@transfer-ownership": "none",
                                        "@nullable": "1",
                                        "@allow-none": "1",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "gdk/x11/gdkwindow-x11.c",
                                            "@line": "3662",
                                            "#text": "Property value, or %NULL to delete"
                                        },
                                        "type": {
                                            "@name": "utf8",
                                            "@c:type": "const gchar*"
                                        }
                                    }
                                ]
                            }
                        }
                    ]
                }
            ],
            "record": [
                {
                    "@name": "X11AppLaunchContextClass",
                    "@c:type": "GdkX11AppLaunchContextClass",
                    "@disguised": "1",
                    "@glib:is-gtype-struct-for": "X11AppLaunchContext",
                    "source-position": {
                        "@filename": "gdk/x11/gdkx11applaunchcontext.h",
                        "@line": "41"
                    }
                },
                {
                    "@name": "X11CursorClass",
                    "@c:type": "GdkX11CursorClass",
                    "@disguised": "1",
                    "@glib:is-gtype-struct-for": "X11Cursor",
                    "source-position": {
                        "@filename": "gdk/x11/gdkx11cursor.h",
                        "@line": "51"
                    }
                },
                {
                    "@name": "X11DeviceCoreClass",
                    "@c:type": "GdkX11DeviceCoreClass",
                    "@disguised": "1",
                    "@glib:is-gtype-struct-for": "X11DeviceCore",
                    "source-position": {
                        "@filename": "gdk/x11/gdkx11device-core.h",
                        "@line": "33"
                    }
                },
                {
                    "@name": "X11DeviceManagerCoreClass",
                    "@c:type": "GdkX11DeviceManagerCoreClass",
                    "@disguised": "1",
                    "@glib:is-gtype-struct-for": "X11DeviceManagerCore",
                    "source-position": {
                        "@filename": "gdk/x11/gdkx11devicemanager-core.h",
                        "@line": "33"
                    }
                },
                {
                    "@name": "X11DeviceManagerXI2Class",
                    "@c:type": "GdkX11DeviceManagerXI2Class",
                    "@disguised": "1",
                    "@glib:is-gtype-struct-for": "X11DeviceManagerXI2",
                    "source-position": {
                        "@filename": "gdk/x11/gdkx11devicemanager-xi2.h",
                        "@line": "33"
                    }
                },
                {
                    "@name": "X11DeviceXI2Class",
                    "@c:type": "GdkX11DeviceXI2Class",
                    "@disguised": "1",
                    "@glib:is-gtype-struct-for": "X11DeviceXI2",
                    "source-position": {
                        "@filename": "gdk/x11/gdkx11device-xi2.h",
                        "@line": "33"
                    }
                },
                {
                    "@name": "X11DisplayClass",
                    "@c:type": "GdkX11DisplayClass",
                    "@disguised": "1",
                    "@glib:is-gtype-struct-for": "X11Display",
                    "source-position": {
                        "@filename": "gdk/x11/gdkx11display.h",
                        "@line": "44"
                    }
                },
                {
                    "@name": "X11DisplayManagerClass",
                    "@c:type": "GdkX11DisplayManagerClass",
                    "@disguised": "1",
                    "@glib:is-gtype-struct-for": "X11DisplayManager",
                    "source-position": {
                        "@filename": "gdk/x11/gdkx11displaymanager.h",
                        "@line": "34"
                    }
                },
                {
                    "@name": "X11DragContextClass",
                    "@c:type": "GdkX11DragContextClass",
                    "@disguised": "1",
                    "@glib:is-gtype-struct-for": "X11DragContext",
                    "source-position": {
                        "@filename": "gdk/x11/gdkx11dnd.h",
                        "@line": "41"
                    }
                },
                {
                    "@name": "X11GLContextClass",
                    "@c:type": "GdkX11GLContextClass",
                    "@disguised": "1",
                    "@glib:is-gtype-struct-for": "X11GLContext",
                    "source-position": {
                        "@filename": "gdk/x11/gdkx11glcontext.h",
                        "@line": "37"
                    }
                },
                {
                    "@name": "X11KeymapClass",
                    "@c:type": "GdkX11KeymapClass",
                    "@disguised": "1",
                    "@glib:is-gtype-struct-for": "X11Keymap",
                    "source-position": {
                        "@filename": "gdk/x11/gdkx11keys.h",
                        "@line": "34"
                    }
                },
                {
                    "@name": "X11MonitorClass",
                    "@c:type": "GdkX11MonitorClass",
                    "@disguised": "1",
                    "@glib:is-gtype-struct-for": "X11Monitor",
                    "source-position": {
                        "@filename": "gdk/x11/gdkx11monitor.h",
                        "@line": "38"
                    }
                },
                {
                    "@name": "X11ScreenClass",
                    "@c:type": "GdkX11ScreenClass",
                    "@disguised": "1",
                    "@glib:is-gtype-struct-for": "X11Screen",
                    "source-position": {
                        "@filename": "gdk/x11/gdkx11screen.h",
                        "@line": "51"
                    }
                },
                {
                    "@name": "X11VisualClass",
                    "@c:type": "GdkX11VisualClass",
                    "@disguised": "1",
                    "@glib:is-gtype-struct-for": "X11Visual",
                    "source-position": {
                        "@filename": "gdk/x11/gdkx11visual.h",
                        "@line": "51"
                    }
                },
                {
                    "@name": "X11WindowClass",
                    "@c:type": "GdkX11WindowClass",
                    "@disguised": "1",
                    "@glib:is-gtype-struct-for": "X11Window",
                    "source-position": {
                        "@filename": "gdk/x11/gdkx11window.h",
                        "@line": "51"
                    }
                }
            ],
            "function": [
                {
                    "@name": "x11_atom_to_xatom",
                    "@c:identifier": "gdk_x11_atom_to_xatom",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "gdk/x11/gdkproperty-x11.c",
                        "@line": "163",
                        "#text": "Converts from a #GdkAtom to the X atom for the default GDK display\nwith the same string value."
                    },
                    "source-position": {
                        "@filename": "gdk/x11/gdkx11property.h",
                        "@line": "53"
                    },
                    "return-value": {
                        "@transfer-ownership": "none",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "gdk/x11/gdkproperty-x11.c",
                            "@line": "170",
                            "#text": "the X atom corresponding to @atom."
                        },
                        "type": {
                            "@name": "xlib.Atom",
                            "@c:type": "Atom"
                        }
                    },
                    "parameters": {
                        "parameter": {
                            "@name": "atom",
                            "@transfer-ownership": "none",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/x11/gdkproperty-x11.c",
                                "@line": "165",
                                "#text": "A #GdkAtom"
                            },
                            "type": {
                                "@name": "Gdk.Atom",
                                "@c:type": "GdkAtom"
                            }
                        }
                    }
                },
                {
                    "@name": "x11_atom_to_xatom_for_display",
                    "@c:identifier": "gdk_x11_atom_to_xatom_for_display",
                    "@version": "2.2",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "gdk/x11/gdkproperty-x11.c",
                        "@line": "82",
                        "#text": "Converts from a #GdkAtom to the X atom for a #GdkDisplay\nwith the same string value. The special value %GDK_NONE\nis converted to %None."
                    },
                    "source-position": {
                        "@filename": "gdk/x11/gdkx11property.h",
                        "@line": "41"
                    },
                    "return-value": {
                        "@transfer-ownership": "none",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "gdk/x11/gdkproperty-x11.c",
                            "@line": "91",
                            "#text": "the X atom corresponding to @atom, or %None"
                        },
                        "type": {
                            "@name": "xlib.Atom",
                            "@c:type": "Atom"
                        }
                    },
                    "parameters": {
                        "parameter": [
                            {
                                "@name": "display",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "gdk/x11/gdkproperty-x11.c",
                                    "@line": "84",
                                    "#text": "A #GdkDisplay"
                                },
                                "type": {
                                    "@name": "X11Display",
                                    "@c:type": "GdkDisplay*"
                                }
                            },
                            {
                                "@name": "atom",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "gdk/x11/gdkproperty-x11.c",
                                    "@line": "85",
                                    "#text": "A #GdkAtom, or %GDK_NONE"
                                },
                                "type": {
                                    "@name": "Gdk.Atom",
                                    "@c:type": "GdkAtom"
                                }
                            }
                        ]
                    }
                },
                {
                    "@name": "x11_device_get_id",
                    "@c:identifier": "gdk_x11_device_get_id",
                    "@version": "3.2",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "gdk/x11/gdkdevicemanager-x11.c",
                        "@line": "122",
                        "#text": "Returns the device ID as seen by XInput2.\n\n> If gdk_disable_multidevice() has been called, this function\n> will respectively return 2/3 for the core pointer and keyboard,\n> (matching the IDs for the Virtual Core Pointer and Keyboard in\n> XInput 2), but calling this function on any slave devices (i.e.\n> those managed via XInput 1.x), will return 0."
                    },
                    "source-position": {
                        "@filename": "gdk/x11/gdkx11device.h",
                        "@line": "30"
                    },
                    "return-value": {
                        "@transfer-ownership": "none",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "gdk/x11/gdkdevicemanager-x11.c",
                            "@line": "134",
                            "#text": "the XInput2 device ID."
                        },
                        "type": {
                            "@name": "gint",
                            "@c:type": "gint"
                        }
                    },
                    "parameters": {
                        "parameter": {
                            "@name": "device",
                            "@transfer-ownership": "none",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/x11/gdkdevicemanager-x11.c",
                                "@line": "124",
                                "#text": "a #GdkDevice"
                            },
                            "type": {
                                "@name": "X11DeviceCore",
                                "@c:type": "GdkDevice*"
                            }
                        }
                    }
                },
                {
                    "@name": "x11_device_manager_lookup",
                    "@c:identifier": "gdk_x11_device_manager_lookup",
                    "@version": "3.2",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "gdk/x11/gdkdevicemanager-x11.c",
                        "@line": "81",
                        "#text": "Returns the #GdkDevice that wraps the given device ID."
                    },
                    "source-position": {
                        "@filename": "gdk/x11/gdkx11devicemanager.h",
                        "@line": "33"
                    },
                    "return-value": {
                        "@transfer-ownership": "none",
                        "@nullable": "1",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "gdk/x11/gdkdevicemanager-x11.c",
                            "@line": "88",
                            "#text": "The #GdkDevice wrapping the device ID,\n         or %NULL if the given ID doesn\u2019t currently represent a device."
                        },
                        "type": {
                            "@name": "X11DeviceCore",
                            "@c:type": "GdkDevice*"
                        }
                    },
                    "parameters": {
                        "parameter": [
                            {
                                "@name": "device_manager",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "gdk/x11/gdkdevicemanager-x11.c",
                                    "@line": "83",
                                    "#text": "a #GdkDeviceManager"
                                },
                                "type": {
                                    "@name": "X11DeviceManagerCore",
                                    "@c:type": "GdkDeviceManager*"
                                }
                            },
                            {
                                "@name": "device_id",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "gdk/x11/gdkdevicemanager-x11.c",
                                    "@line": "84",
                                    "#text": "a device ID, as understood by the XInput2 protocol"
                                },
                                "type": {
                                    "@name": "gint",
                                    "@c:type": "gint"
                                }
                            }
                        ]
                    }
                },
                {
                    "@name": "x11_free_compound_text",
                    "@c:identifier": "gdk_x11_free_compound_text",
                    "@version": "2.24",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "gdk/x11/gdkselection-x11.c",
                        "@line": "773",
                        "#text": "Frees the data returned from gdk_x11_display_string_to_compound_text()."
                    },
                    "source-position": {
                        "@filename": "gdk/x11/gdkx11selection.h",
                        "@line": "63"
                    },
                    "return-value": {
                        "@transfer-ownership": "none",
                        "type": {
                            "@name": "none",
                            "@c:type": "void"
                        }
                    },
                    "parameters": {
                        "parameter": {
                            "@name": "ctext",
                            "@transfer-ownership": "none",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/x11/gdkselection-x11.c",
                                "@line": "775",
                                "#text": "The pointer stored in @ctext from a call to\n  gdk_x11_display_string_to_compound_text()."
                            },
                            "type": {
                                "@name": "guint8",
                                "@c:type": "guchar*"
                            }
                        }
                    }
                },
                {
                    "@name": "x11_free_text_list",
                    "@c:identifier": "gdk_x11_free_text_list",
                    "@version": "2.24",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "gdk/x11/gdkselection-x11.c",
                        "@line": "394",
                        "#text": "Frees the array of strings created by\ngdk_x11_display_text_property_to_text_list()."
                    },
                    "source-position": {
                        "@filename": "gdk/x11/gdkx11selection.h",
                        "@line": "47"
                    },
                    "return-value": {
                        "@transfer-ownership": "none",
                        "type": {
                            "@name": "none",
                            "@c:type": "void"
                        }
                    },
                    "parameters": {
                        "parameter": {
                            "@name": "list",
                            "@transfer-ownership": "none",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/x11/gdkselection-x11.c",
                                "@line": "396",
                                "#text": "the value stored in the @list parameter by\n  a call to gdk_x11_display_text_property_to_text_list()."
                            },
                            "type": {
                                "@name": "utf8",
                                "@c:type": "gchar**"
                            }
                        }
                    }
                },
                {
                    "@name": "x11_get_default_root_xwindow",
                    "@c:identifier": "gdk_x11_get_default_root_xwindow",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "gdk/x11/gdkmain-x11.c",
                        "@line": "429",
                        "#text": "Gets the root window of the default screen\n(see gdk_x11_get_default_screen())."
                    },
                    "source-position": {
                        "@filename": "gdk/x11/gdkx11utils.h",
                        "@line": "40"
                    },
                    "return-value": {
                        "@transfer-ownership": "none",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "gdk/x11/gdkmain-x11.c",
                            "@line": "435",
                            "#text": "an Xlib Window."
                        },
                        "type": {
                            "@name": "xlib.Window",
                            "@c:type": "Window"
                        }
                    }
                },
                {
                    "@name": "x11_get_default_screen",
                    "@c:identifier": "gdk_x11_get_default_screen",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "gdk/x11/gdkmain-x11.c",
                        "@line": "414",
                        "#text": "Gets the default GTK+ screen number."
                    },
                    "source-position": {
                        "@filename": "gdk/x11/gdkx11screen.h",
                        "@line": "65"
                    },
                    "return-value": {
                        "@transfer-ownership": "none",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "gdk/x11/gdkmain-x11.c",
                            "@line": "419",
                            "#text": "returns the screen number specified by\n  the --display command line option or the DISPLAY environment\n  variable when gdk_init() calls XOpenDisplay()."
                        },
                        "type": {
                            "@name": "gint",
                            "@c:type": "gint"
                        }
                    }
                },
                {
                    "@name": "x11_get_default_xdisplay",
                    "@c:identifier": "gdk_x11_get_default_xdisplay",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "gdk/x11/gdkmain-x11.c",
                        "@line": "443",
                        "#text": "Gets the default GTK+ display."
                    },
                    "source-position": {
                        "@filename": "gdk/x11/gdkx11utils.h",
                        "@line": "42"
                    },
                    "return-value": {
                        "@transfer-ownership": "none",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "gdk/x11/gdkmain-x11.c",
                            "@line": "448",
                            "#text": "the Xlib Display* for\nthe display specified in the `--display` command\nline option or the `DISPLAY` environment variable."
                        },
                        "type": {
                            "@name": "xlib.Display",
                            "@c:type": "Display*"
                        }
                    }
                },
                {
                    "@name": "x11_get_parent_relative_pattern",
                    "@c:identifier": "gdk_x11_get_parent_relative_pattern",
                    "@version": "3.24.2",
                    "@deprecated": "1",
                    "@deprecated-version": "3.24",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "gdk/x11/gdkmain-x11.c",
                        "@line": "458",
                        "#text": "Used with gdk_window_set_background_pattern() to inherit background from\nparent window. Useful for imitating transparency when compositing is not\navailable. Otherwise behaves like a transparent pattern."
                    },
                    "doc-deprecated": {
                        "@xml:space": "preserve",
                        "#text": "Don't use this function"
                    },
                    "source-position": {
                        "@filename": "gdk/x11/gdkx11utils.h",
                        "@line": "76"
                    },
                    "return-value": {
                        "@transfer-ownership": "full",
                        "type": {
                            "@name": "cairo.Pattern",
                            "@c:type": "cairo_pattern_t*"
                        }
                    }
                },
                {
                    "@name": "x11_get_server_time",
                    "@c:identifier": "gdk_x11_get_server_time",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "gdk/x11/gdkwindow-x11.c",
                        "@line": "5594",
                        "#text": "Routine to get the current X server time stamp."
                    },
                    "source-position": {
                        "@filename": "gdk/x11/gdkx11window.h",
                        "@line": "111"
                    },
                    "return-value": {
                        "@transfer-ownership": "none",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "gdk/x11/gdkwindow-x11.c",
                            "@line": "5603",
                            "#text": "the time stamp."
                        },
                        "type": {
                            "@name": "guint32",
                            "@c:type": "guint32"
                        }
                    },
                    "parameters": {
                        "parameter": {
                            "@name": "window",
                            "@transfer-ownership": "none",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/x11/gdkwindow-x11.c",
                                "@line": "5596",
                                "#text": "a #GdkWindow, used for communication\n         with the server.  The window must have\n         GDK_PROPERTY_CHANGE_MASK in its events mask or a hang will\n         result."
                            },
                            "type": {
                                "@name": "X11Window",
                                "@c:type": "GdkWindow*"
                            }
                        }
                    }
                },
                {
                    "@name": "x11_get_xatom_by_name",
                    "@c:identifier": "gdk_x11_get_xatom_by_name",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "gdk/x11/gdkproperty-x11.c",
                        "@line": "295",
                        "#text": "Returns the X atom for GDK\u2019s default display corresponding to @atom_name.\nThis function caches the result, so if called repeatedly it is much\nfaster than XInternAtom(), which is a round trip to the server each time."
                    },
                    "source-position": {
                        "@filename": "gdk/x11/gdkx11property.h",
                        "@line": "57"
                    },
                    "return-value": {
                        "@transfer-ownership": "none",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "gdk/x11/gdkproperty-x11.c",
                            "@line": "303",
                            "#text": "a X atom for GDK\u2019s default display."
                        },
                        "type": {
                            "@name": "xlib.Atom",
                            "@c:type": "Atom"
                        }
                    },
                    "parameters": {
                        "parameter": {
                            "@name": "atom_name",
                            "@transfer-ownership": "none",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/x11/gdkproperty-x11.c",
                                "@line": "297",
                                "#text": "a string"
                            },
                            "type": {
                                "@name": "utf8",
                                "@c:type": "const gchar*"
                            }
                        }
                    }
                },
                {
                    "@name": "x11_get_xatom_by_name_for_display",
                    "@c:identifier": "gdk_x11_get_xatom_by_name_for_display",
                    "@version": "2.2",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "gdk/x11/gdkproperty-x11.c",
                        "@line": "253",
                        "#text": "Returns the X atom for a #GdkDisplay corresponding to @atom_name.\nThis function caches the result, so if called repeatedly it is much\nfaster than XInternAtom(), which is a round trip to the server each time."
                    },
                    "source-position": {
                        "@filename": "gdk/x11/gdkx11property.h",
                        "@line": "47"
                    },
                    "return-value": {
                        "@transfer-ownership": "none",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "gdk/x11/gdkproperty-x11.c",
                            "@line": "262",
                            "#text": "a X atom for a #GdkDisplay"
                        },
                        "type": {
                            "@name": "xlib.Atom",
                            "@c:type": "Atom"
                        }
                    },
                    "parameters": {
                        "parameter": [
                            {
                                "@name": "display",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "gdk/x11/gdkproperty-x11.c",
                                    "@line": "255",
                                    "#text": "a #GdkDisplay"
                                },
                                "type": {
                                    "@name": "X11Display",
                                    "@c:type": "GdkDisplay*"
                                }
                            },
                            {
                                "@name": "atom_name",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "gdk/x11/gdkproperty-x11.c",
                                    "@line": "256",
                                    "#text": "a string"
                                },
                                "type": {
                                    "@name": "utf8",
                                    "@c:type": "const gchar*"
                                }
                            }
                        ]
                    }
                },
                {
                    "@name": "x11_get_xatom_name",
                    "@c:identifier": "gdk_x11_get_xatom_name",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "gdk/x11/gdkproperty-x11.c",
                        "@line": "336",
                        "#text": "Returns the name of an X atom for GDK\u2019s default display. This\nfunction is meant mainly for debugging, so for convenience, unlike\nXAtomName() and gdk_atom_name(), the result\ndoesn\u2019t need to be freed. Also, this function will never return %NULL,\neven if @xatom is invalid."
                    },
                    "source-position": {
                        "@filename": "gdk/x11/gdkx11property.h",
                        "@line": "59"
                    },
                    "return-value": {
                        "@transfer-ownership": "none",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "gdk/x11/gdkproperty-x11.c",
                            "@line": "346",
                            "#text": "name of the X atom; this string is owned by GTK+,\n  so it shouldn\u2019t be modifed or freed."
                        },
                        "type": {
                            "@name": "utf8",
                            "@c:type": "const gchar*"
                        }
                    },
                    "parameters": {
                        "parameter": {
                            "@name": "xatom",
                            "@transfer-ownership": "none",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/x11/gdkproperty-x11.c",
                                "@line": "338",
                                "#text": "an X atom for GDK\u2019s default display"
                            },
                            "type": {
                                "@name": "xlib.Atom",
                                "@c:type": "Atom"
                            }
                        }
                    }
                },
                {
                    "@name": "x11_get_xatom_name_for_display",
                    "@c:identifier": "gdk_x11_get_xatom_name_for_display",
                    "@version": "2.2",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "gdk/x11/gdkproperty-x11.c",
                        "@line": "312",
                        "#text": "Returns the name of an X atom for its display. This\nfunction is meant mainly for debugging, so for convenience, unlike\nXAtomName() and gdk_atom_name(), the result doesn\u2019t need to\nbe freed."
                    },
                    "source-position": {
                        "@filename": "gdk/x11/gdkx11property.h",
                        "@line": "50"
                    },
                    "return-value": {
                        "@transfer-ownership": "none",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "gdk/x11/gdkproperty-x11.c",
                            "@line": "322",
                            "#text": "name of the X atom; this string is owned by GDK,\n  so it shouldn\u2019t be modifed or freed."
                        },
                        "type": {
                            "@name": "utf8",
                            "@c:type": "const gchar*"
                        }
                    },
                    "parameters": {
                        "parameter": [
                            {
                                "@name": "display",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "gdk/x11/gdkproperty-x11.c",
                                    "@line": "314",
                                    "#text": "the #GdkDisplay where @xatom is defined"
                                },
                                "type": {
                                    "@name": "X11Display",
                                    "@c:type": "GdkDisplay*"
                                }
                            },
                            {
                                "@name": "xatom",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "gdk/x11/gdkproperty-x11.c",
                                    "@line": "315",
                                    "#text": "an X atom"
                                },
                                "type": {
                                    "@name": "xlib.Atom",
                                    "@c:type": "Atom"
                                }
                            }
                        ]
                    }
                },
                {
                    "@name": "x11_grab_server",
                    "@c:identifier": "gdk_x11_grab_server",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "gdk/x11/gdkmain-x11.c",
                        "@line": "388",
                        "#text": "Call gdk_x11_display_grab() on the default display.\nTo ungrab the server again, use gdk_x11_ungrab_server().\n\ngdk_x11_grab_server()/gdk_x11_ungrab_server() calls can be nested."
                    },
                    "source-position": {
                        "@filename": "gdk/x11/gdkx11utils.h",
                        "@line": "71"
                    },
                    "return-value": {
                        "@transfer-ownership": "none",
                        "type": {
                            "@name": "none",
                            "@c:type": "void"
                        }
                    }
                },
                {
                    "@name": "x11_lookup_xdisplay",
                    "@c:identifier": "gdk_x11_lookup_xdisplay",
                    "@version": "2.2",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "gdk/x11/gdkdisplay-x11.c",
                        "@line": "2131",
                        "#text": "Find the #GdkDisplay corresponding to @xdisplay, if any exists."
                    },
                    "source-position": {
                        "@filename": "gdk/x11/gdkx11display.h",
                        "@line": "81"
                    },
                    "return-value": {
                        "@transfer-ownership": "none",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "gdk/x11/gdkdisplay-x11.c",
                            "@line": "2137",
                            "#text": "the #GdkDisplay, if found, otherwise %NULL."
                        },
                        "type": {
                            "@name": "X11Display",
                            "@c:type": "GdkDisplay*"
                        }
                    },
                    "parameters": {
                        "parameter": {
                            "@name": "xdisplay",
                            "@transfer-ownership": "none",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/x11/gdkdisplay-x11.c",
                                "@line": "2133",
                                "#text": "a pointer to an X Display"
                            },
                            "type": {
                                "@name": "xlib.Display",
                                "@c:type": "Display*"
                            }
                        }
                    }
                },
                {
                    "@name": "x11_register_standard_event_type",
                    "@c:identifier": "gdk_x11_register_standard_event_type",
                    "@version": "2.4",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "gdk/x11/gdkdisplay-x11.c",
                        "@line": "2647",
                        "#text": "Registers interest in receiving extension events with type codes\nbetween @event_base and `event_base + n_events - 1`.\nThe registered events must have the window field in the same place\nas core X events (this is not the case for e.g. XKB extension events).\n\nIf an event type is registered, events of this type will go through\nglobal and window-specific filters (see gdk_window_add_filter()).\nUnregistered events will only go through global filters.\nGDK may register the events of some X extensions on its own.\n\nThis function should only be needed in unusual circumstances, e.g.\nwhen filtering XInput extension events on the root window."
                    },
                    "source-position": {
                        "@filename": "gdk/x11/gdkx11display.h",
                        "@line": "101"
                    },
                    "return-value": {
                        "@transfer-ownership": "none",
                        "type": {
                            "@name": "none",
                            "@c:type": "void"
                        }
                    },
                    "parameters": {
                        "parameter": [
                            {
                                "@name": "display",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "gdk/x11/gdkdisplay-x11.c",
                                    "@line": "2649",
                                    "#text": "a #GdkDisplay"
                                },
                                "type": {
                                    "@name": "X11Display",
                                    "@c:type": "GdkDisplay*"
                                }
                            },
                            {
                                "@name": "event_base",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "gdk/x11/gdkdisplay-x11.c",
                                    "@line": "2650",
                                    "#text": "first event type code to register"
                                },
                                "type": {
                                    "@name": "gint",
                                    "@c:type": "gint"
                                }
                            },
                            {
                                "@name": "n_events",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "gdk/x11/gdkdisplay-x11.c",
                                    "@line": "2651",
                                    "#text": "number of event type codes to register"
                                },
                                "type": {
                                    "@name": "gint",
                                    "@c:type": "gint"
                                }
                            }
                        ]
                    }
                },
                {
                    "@name": "x11_set_sm_client_id",
                    "@c:identifier": "gdk_x11_set_sm_client_id",
                    "@version": "2.24",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "gdk/x11/gdkdisplay-x11.c",
                        "@line": "3004",
                        "#text": "Sets the `SM_CLIENT_ID` property on the application\u2019s leader window so that\nthe window manager can save the application\u2019s state using the X11R6 ICCCM\nsession management protocol.\n\nSee the X Session Management Library documentation for more information on\nsession management and the Inter-Client Communication Conventions Manual"
                    },
                    "source-position": {
                        "@filename": "gdk/x11/gdkx11display.h",
                        "@line": "106"
                    },
                    "return-value": {
                        "@transfer-ownership": "none",
                        "type": {
                            "@name": "none",
                            "@c:type": "void"
                        }
                    },
                    "parameters": {
                        "parameter": {
                            "@name": "sm_client_id",
                            "@transfer-ownership": "none",
                            "@nullable": "1",
                            "@allow-none": "1",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/x11/gdkdisplay-x11.c",
                                "@line": "3006",
                                "#text": "the client id assigned by the session manager\n   when the connection was opened, or %NULL to remove the property."
                            },
                            "type": {
                                "@name": "utf8",
                                "@c:type": "const gchar*"
                            }
                        }
                    }
                },
                {
                    "@name": "x11_ungrab_server",
                    "@c:identifier": "gdk_x11_ungrab_server",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "gdk/x11/gdkmain-x11.c",
                        "@line": "402",
                        "#text": "Ungrab the default display after it has been grabbed with\ngdk_x11_grab_server()."
                    },
                    "source-position": {
                        "@filename": "gdk/x11/gdkx11utils.h",
                        "@line": "73"
                    },
                    "return-value": {
                        "@transfer-ownership": "none",
                        "type": {
                            "@name": "none",
                            "@c:type": "void"
                        }
                    }
                },
                {
                    "@name": "x11_xatom_to_atom",
                    "@c:identifier": "gdk_x11_xatom_to_atom",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "gdk/x11/gdkproperty-x11.c",
                        "@line": "238",
                        "#text": "Convert from an X atom for the default display to the corresponding\n#GdkAtom."
                    },
                    "source-position": {
                        "@filename": "gdk/x11/gdkx11property.h",
                        "@line": "55"
                    },
                    "return-value": {
                        "@transfer-ownership": "none",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "gdk/x11/gdkproperty-x11.c",
                            "@line": "245",
                            "#text": "the corresponding G#dkAtom."
                        },
                        "type": {
                            "@name": "Gdk.Atom",
                            "@c:type": "GdkAtom"
                        }
                    },
                    "parameters": {
                        "parameter": {
                            "@name": "xatom",
                            "@transfer-ownership": "none",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/x11/gdkproperty-x11.c",
                                "@line": "240",
                                "#text": "an X atom for the default GDK display"
                            },
                            "type": {
                                "@name": "xlib.Atom",
                                "@c:type": "Atom"
                            }
                        }
                    }
                },
                {
                    "@name": "x11_xatom_to_atom_for_display",
                    "@c:identifier": "gdk_x11_xatom_to_atom_for_display",
                    "@version": "2.2",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "gdk/x11/gdkproperty-x11.c",
                        "@line": "178",
                        "#text": "Convert from an X atom for a #GdkDisplay to the corresponding\n#GdkAtom."
                    },
                    "source-position": {
                        "@filename": "gdk/x11/gdkx11property.h",
                        "@line": "44"
                    },
                    "return-value": {
                        "@transfer-ownership": "none",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "gdk/x11/gdkproperty-x11.c",
                            "@line": "186",
                            "#text": "the corresponding #GdkAtom."
                        },
                        "type": {
                            "@name": "Gdk.Atom",
                            "@c:type": "GdkAtom"
                        }
                    },
                    "parameters": {
                        "parameter": [
                            {
                                "@name": "display",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "gdk/x11/gdkproperty-x11.c",
                                    "@line": "180",
                                    "#text": "A #GdkDisplay"
                                },
                                "type": {
                                    "@name": "X11Display",
                                    "@c:type": "GdkDisplay*"
                                }
                            },
                            {
                                "@name": "xatom",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "gdk/x11/gdkproperty-x11.c",
                                    "@line": "181",
                                    "#text": "an X atom"
                                },
                                "type": {
                                    "@name": "xlib.Atom",
                                    "@c:type": "Atom"
                                }
                            }
                        ]
                    }
                }
            ],
            "docsection": {
                "@name": "x_interaction",
                "doc": {
                    "@xml:space": "preserve",
                    "@filename": "gdk/x11/gdkmain-x11.c",
                    "@line": "49",
                    "#text": "The functions in this section are specific to the GDK X11 backend.\nTo use them, you need to include the `<gdk/gdkx.h>` header and use\nthe X11-specific pkg-config files to build your application (either\n`gdk-x11-3.0` or `gtk+-x11-3.0`).\n\nTo make your code compile with other GDK backends, guard backend-specific\ncalls by an ifdef as follows. Since GDK may be built with multiple\nbackends, you should also check for the backend that is in use (e.g. by\nusing the GDK_IS_X11_DISPLAY() macro).\n|[\n#ifdef GDK_WINDOWING_X11\n  if (GDK_IS_X11_DISPLAY (display))\n    {\n      // make X11-specific calls here\n    }\n  else\n#endif\n#ifdef GDK_WINDOWING_QUARTZ\n  if (GDK_IS_QUARTZ_DISPLAY (display))\n    {\n      // make Quartz-specific calls here\n    }\n  else\n#endif\n  g_error (\"Unsupported GDK backend\");\n]|"
                }
            }
        }
    }
}