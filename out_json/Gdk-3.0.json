{
    "repository": {
        "@version": "1.2",
        "@xmlns": "http://www.gtk.org/introspection/core/1.0",
        "@xmlns:c": "http://www.gtk.org/introspection/c/1.0",
        "@xmlns:glib": "http://www.gtk.org/introspection/glib/1.0",
        "include": [
            {
                "@name": "GdkPixbuf",
                "@version": "2.0"
            },
            {
                "@name": "Gio",
                "@version": "2.0"
            },
            {
                "@name": "Pango",
                "@version": "1.0"
            },
            {
                "@name": "cairo",
                "@version": "1.0"
            }
        ],
        "package": {
            "@name": "gdk-3.0"
        },
        "c:include": {
            "@name": "gdk/gdk.h"
        },
        "namespace": {
            "@name": "Gdk",
            "@version": "3.0",
            "@shared-library": "libgdk-3.so.0",
            "@c:identifier-prefixes": "Gdk",
            "@c:symbol-prefixes": "gdk",
            "alias": {
                "@name": "XEvent",
                "@c:type": "GdkXEvent",
                "doc": {
                    "@xml:space": "preserve",
                    "@filename": "gdk/gdkevents.h",
                    "@line": "167",
                    "#text": "Used to represent native events (XEvents for the X11\nbackend, MSGs for Win32)."
                },
                "source-position": {
                    "@filename": "gdk/gdkevents.h",
                    "@line": "173"
                },
                "type": {
                    "@name": "none",
                    "@c:type": "void"
                }
            },
            "function-macro": [
                {
                    "@name": "APP_LAUNCH_CONTEXT",
                    "@c:identifier": "GDK_APP_LAUNCH_CONTEXT",
                    "@introspectable": "0",
                    "source-position": {
                        "@filename": "gdk/gdkapplaunchcontext.h",
                        "@line": "36"
                    },
                    "parameters": {
                        "parameter": {
                            "@name": "o"
                        }
                    }
                },
                {
                    "@name": "ATOM_TO_POINTER",
                    "@c:identifier": "GDK_ATOM_TO_POINTER",
                    "@introspectable": "0",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "gdk/gdktypes.h",
                        "@line": "104",
                        "#text": "Converts a #GdkAtom into a pointer type."
                    },
                    "source-position": {
                        "@filename": "gdk/gdktypes.h",
                        "@line": "110"
                    },
                    "parameters": {
                        "parameter": {
                            "@name": "atom",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdktypes.h",
                                "@line": "106",
                                "#text": "a #GdkAtom."
                            }
                        }
                    }
                },
                {
                    "@name": "CURSOR",
                    "@c:identifier": "GDK_CURSOR",
                    "@introspectable": "0",
                    "source-position": {
                        "@filename": "gdk/gdkcursor.h",
                        "@line": "39"
                    },
                    "parameters": {
                        "parameter": {
                            "@name": "object"
                        }
                    }
                },
                {
                    "@name": "DEPRECATED_FOR",
                    "@c:identifier": "GDK_DEPRECATED_FOR",
                    "@introspectable": "0",
                    "source-position": {
                        "@filename": "gdk/gdkversionmacros.h",
                        "@line": "45"
                    },
                    "parameters": {
                        "parameter": {
                            "@name": "f"
                        }
                    }
                },
                {
                    "@name": "DEPRECATED_IN_3_0_FOR",
                    "@c:identifier": "GDK_DEPRECATED_IN_3_0_FOR",
                    "@introspectable": "0",
                    "source-position": {
                        "@filename": "gdk/gdkversionmacros.h",
                        "@line": "259"
                    },
                    "parameters": {
                        "parameter": {
                            "@name": "f"
                        }
                    }
                },
                {
                    "@name": "DEPRECATED_IN_3_10_FOR",
                    "@c:identifier": "GDK_DEPRECATED_IN_3_10_FOR",
                    "@introspectable": "0",
                    "source-position": {
                        "@filename": "gdk/gdkversionmacros.h",
                        "@line": "329"
                    },
                    "parameters": {
                        "parameter": {
                            "@name": "f"
                        }
                    }
                },
                {
                    "@name": "DEPRECATED_IN_3_12_FOR",
                    "@c:identifier": "GDK_DEPRECATED_IN_3_12_FOR",
                    "@introspectable": "0",
                    "source-position": {
                        "@filename": "gdk/gdkversionmacros.h",
                        "@line": "343"
                    },
                    "parameters": {
                        "parameter": {
                            "@name": "f"
                        }
                    }
                },
                {
                    "@name": "DEPRECATED_IN_3_14_FOR",
                    "@c:identifier": "GDK_DEPRECATED_IN_3_14_FOR",
                    "@introspectable": "0",
                    "source-position": {
                        "@filename": "gdk/gdkversionmacros.h",
                        "@line": "357"
                    },
                    "parameters": {
                        "parameter": {
                            "@name": "f"
                        }
                    }
                },
                {
                    "@name": "DEPRECATED_IN_3_16_FOR",
                    "@c:identifier": "GDK_DEPRECATED_IN_3_16_FOR",
                    "@introspectable": "0",
                    "source-position": {
                        "@filename": "gdk/gdkversionmacros.h",
                        "@line": "371"
                    },
                    "parameters": {
                        "parameter": {
                            "@name": "f"
                        }
                    }
                },
                {
                    "@name": "DEPRECATED_IN_3_18_FOR",
                    "@c:identifier": "GDK_DEPRECATED_IN_3_18_FOR",
                    "@introspectable": "0",
                    "source-position": {
                        "@filename": "gdk/gdkversionmacros.h",
                        "@line": "385"
                    },
                    "parameters": {
                        "parameter": {
                            "@name": "f"
                        }
                    }
                },
                {
                    "@name": "DEPRECATED_IN_3_20_FOR",
                    "@c:identifier": "GDK_DEPRECATED_IN_3_20_FOR",
                    "@introspectable": "0",
                    "source-position": {
                        "@filename": "gdk/gdkversionmacros.h",
                        "@line": "399"
                    },
                    "parameters": {
                        "parameter": {
                            "@name": "f"
                        }
                    }
                },
                {
                    "@name": "DEPRECATED_IN_3_22_FOR",
                    "@c:identifier": "GDK_DEPRECATED_IN_3_22_FOR",
                    "@introspectable": "0",
                    "source-position": {
                        "@filename": "gdk/gdkversionmacros.h",
                        "@line": "413"
                    },
                    "parameters": {
                        "parameter": {
                            "@name": "f"
                        }
                    }
                },
                {
                    "@name": "DEPRECATED_IN_3_24_FOR",
                    "@c:identifier": "GDK_DEPRECATED_IN_3_24_FOR",
                    "@introspectable": "0",
                    "source-position": {
                        "@filename": "gdk/gdkversionmacros.h",
                        "@line": "427"
                    },
                    "parameters": {
                        "parameter": {
                            "@name": "f"
                        }
                    }
                },
                {
                    "@name": "DEPRECATED_IN_3_2_FOR",
                    "@c:identifier": "GDK_DEPRECATED_IN_3_2_FOR",
                    "@introspectable": "0",
                    "source-position": {
                        "@filename": "gdk/gdkversionmacros.h",
                        "@line": "273"
                    },
                    "parameters": {
                        "parameter": {
                            "@name": "f"
                        }
                    }
                },
                {
                    "@name": "DEPRECATED_IN_3_4_FOR",
                    "@c:identifier": "GDK_DEPRECATED_IN_3_4_FOR",
                    "@introspectable": "0",
                    "source-position": {
                        "@filename": "gdk/gdkversionmacros.h",
                        "@line": "287"
                    },
                    "parameters": {
                        "parameter": {
                            "@name": "f"
                        }
                    }
                },
                {
                    "@name": "DEPRECATED_IN_3_6_FOR",
                    "@c:identifier": "GDK_DEPRECATED_IN_3_6_FOR",
                    "@introspectable": "0",
                    "source-position": {
                        "@filename": "gdk/gdkversionmacros.h",
                        "@line": "301"
                    },
                    "parameters": {
                        "parameter": {
                            "@name": "f"
                        }
                    }
                },
                {
                    "@name": "DEPRECATED_IN_3_8_FOR",
                    "@c:identifier": "GDK_DEPRECATED_IN_3_8_FOR",
                    "@introspectable": "0",
                    "source-position": {
                        "@filename": "gdk/gdkversionmacros.h",
                        "@line": "315"
                    },
                    "parameters": {
                        "parameter": {
                            "@name": "f"
                        }
                    }
                },
                {
                    "@name": "DEVICE",
                    "@c:identifier": "GDK_DEVICE",
                    "@introspectable": "0",
                    "source-position": {
                        "@filename": "gdk/gdkdevice.h",
                        "@line": "32"
                    },
                    "parameters": {
                        "parameter": {
                            "@name": "o"
                        }
                    }
                },
                {
                    "@name": "DEVICE_MANAGER",
                    "@c:identifier": "GDK_DEVICE_MANAGER",
                    "@introspectable": "0",
                    "source-position": {
                        "@filename": "gdk/gdkdevicemanager.h",
                        "@line": "31"
                    },
                    "parameters": {
                        "parameter": {
                            "@name": "o"
                        }
                    }
                },
                {
                    "@name": "DEVICE_PAD",
                    "@c:identifier": "GDK_DEVICE_PAD",
                    "@introspectable": "0",
                    "source-position": {
                        "@filename": "gdk/gdkdevicepad.h",
                        "@line": "33"
                    },
                    "parameters": {
                        "parameter": {
                            "@name": "o"
                        }
                    }
                },
                {
                    "@name": "DEVICE_TOOL",
                    "@c:identifier": "GDK_DEVICE_TOOL",
                    "@introspectable": "0",
                    "source-position": {
                        "@filename": "gdk/gdkdevicetool.h",
                        "@line": "32"
                    },
                    "parameters": {
                        "parameter": {
                            "@name": "o"
                        }
                    }
                },
                {
                    "@name": "DISPLAY",
                    "@c:identifier": "GDK_DISPLAY",
                    "@introspectable": "0",
                    "source-position": {
                        "@filename": "gdk/gdkdisplay.h",
                        "@line": "39"
                    },
                    "parameters": {
                        "parameter": {
                            "@name": "object"
                        }
                    }
                },
                {
                    "@name": "DISPLAY_MANAGER",
                    "@c:identifier": "GDK_DISPLAY_MANAGER",
                    "@introspectable": "0",
                    "source-position": {
                        "@filename": "gdk/gdkdisplaymanager.h",
                        "@line": "39"
                    },
                    "parameters": {
                        "parameter": {
                            "@name": "object"
                        }
                    }
                },
                {
                    "@name": "DISPLAY_OBJECT",
                    "@c:identifier": "GDK_DISPLAY_OBJECT",
                    "@introspectable": "0",
                    "source-position": {
                        "@filename": "gdk/gdkdisplay.h",
                        "@line": "42"
                    },
                    "parameters": {
                        "parameter": {
                            "@name": "object"
                        }
                    }
                },
                {
                    "@name": "DRAG_CONTEXT",
                    "@c:identifier": "GDK_DRAG_CONTEXT",
                    "@introspectable": "0",
                    "source-position": {
                        "@filename": "gdk/gdkdnd.h",
                        "@line": "39"
                    },
                    "parameters": {
                        "parameter": {
                            "@name": "object"
                        }
                    }
                },
                {
                    "@name": "DRAWING_CONTEXT",
                    "@c:identifier": "GDK_DRAWING_CONTEXT",
                    "@introspectable": "0",
                    "source-position": {
                        "@filename": "gdk/gdkdrawingcontext.h",
                        "@line": "31"
                    },
                    "parameters": {
                        "parameter": {
                            "@name": "obj"
                        }
                    }
                },
                {
                    "@name": "FRAME_CLOCK",
                    "@c:identifier": "GDK_FRAME_CLOCK",
                    "@introspectable": "0",
                    "source-position": {
                        "@filename": "gdk/gdkframeclock.h",
                        "@line": "37"
                    },
                    "parameters": {
                        "parameter": {
                            "@name": "obj"
                        }
                    }
                },
                {
                    "@name": "FRAME_CLOCK_CLASS",
                    "@c:identifier": "GDK_FRAME_CLOCK_CLASS",
                    "@introspectable": "0",
                    "source-position": {
                        "@filename": "gdk/gdkframeclock.h",
                        "@line": "38"
                    },
                    "parameters": {
                        "parameter": {
                            "@name": "klass"
                        }
                    }
                },
                {
                    "@name": "FRAME_CLOCK_GET_CLASS",
                    "@c:identifier": "GDK_FRAME_CLOCK_GET_CLASS",
                    "@introspectable": "0",
                    "source-position": {
                        "@filename": "gdk/gdkframeclock.h",
                        "@line": "41"
                    },
                    "parameters": {
                        "parameter": {
                            "@name": "obj"
                        }
                    }
                },
                {
                    "@name": "GL_CONTEXT",
                    "@c:identifier": "GDK_GL_CONTEXT",
                    "@introspectable": "0",
                    "source-position": {
                        "@filename": "gdk/gdkglcontext.h",
                        "@line": "34"
                    },
                    "parameters": {
                        "parameter": {
                            "@name": "obj"
                        }
                    }
                },
                {
                    "@name": "IS_APP_LAUNCH_CONTEXT",
                    "@c:identifier": "GDK_IS_APP_LAUNCH_CONTEXT",
                    "@introspectable": "0",
                    "source-position": {
                        "@filename": "gdk/gdkapplaunchcontext.h",
                        "@line": "37"
                    },
                    "parameters": {
                        "parameter": {
                            "@name": "o"
                        }
                    }
                },
                {
                    "@name": "IS_CURSOR",
                    "@c:identifier": "GDK_IS_CURSOR",
                    "@introspectable": "0",
                    "source-position": {
                        "@filename": "gdk/gdkcursor.h",
                        "@line": "40"
                    },
                    "parameters": {
                        "parameter": {
                            "@name": "object"
                        }
                    }
                },
                {
                    "@name": "IS_DEVICE",
                    "@c:identifier": "GDK_IS_DEVICE",
                    "@introspectable": "0",
                    "source-position": {
                        "@filename": "gdk/gdkdevice.h",
                        "@line": "33"
                    },
                    "parameters": {
                        "parameter": {
                            "@name": "o"
                        }
                    }
                },
                {
                    "@name": "IS_DEVICE_MANAGER",
                    "@c:identifier": "GDK_IS_DEVICE_MANAGER",
                    "@introspectable": "0",
                    "source-position": {
                        "@filename": "gdk/gdkdevicemanager.h",
                        "@line": "32"
                    },
                    "parameters": {
                        "parameter": {
                            "@name": "o"
                        }
                    }
                },
                {
                    "@name": "IS_DEVICE_PAD",
                    "@c:identifier": "GDK_IS_DEVICE_PAD",
                    "@introspectable": "0",
                    "source-position": {
                        "@filename": "gdk/gdkdevicepad.h",
                        "@line": "34"
                    },
                    "parameters": {
                        "parameter": {
                            "@name": "o"
                        }
                    }
                },
                {
                    "@name": "IS_DEVICE_TOOL",
                    "@c:identifier": "GDK_IS_DEVICE_TOOL",
                    "@introspectable": "0",
                    "source-position": {
                        "@filename": "gdk/gdkdevicetool.h",
                        "@line": "33"
                    },
                    "parameters": {
                        "parameter": {
                            "@name": "o"
                        }
                    }
                },
                {
                    "@name": "IS_DISPLAY",
                    "@c:identifier": "GDK_IS_DISPLAY",
                    "@introspectable": "0",
                    "source-position": {
                        "@filename": "gdk/gdkdisplay.h",
                        "@line": "40"
                    },
                    "parameters": {
                        "parameter": {
                            "@name": "object"
                        }
                    }
                },
                {
                    "@name": "IS_DISPLAY_MANAGER",
                    "@c:identifier": "GDK_IS_DISPLAY_MANAGER",
                    "@introspectable": "0",
                    "source-position": {
                        "@filename": "gdk/gdkdisplaymanager.h",
                        "@line": "40"
                    },
                    "parameters": {
                        "parameter": {
                            "@name": "object"
                        }
                    }
                },
                {
                    "@name": "IS_DRAG_CONTEXT",
                    "@c:identifier": "GDK_IS_DRAG_CONTEXT",
                    "@introspectable": "0",
                    "source-position": {
                        "@filename": "gdk/gdkdnd.h",
                        "@line": "40"
                    },
                    "parameters": {
                        "parameter": {
                            "@name": "object"
                        }
                    }
                },
                {
                    "@name": "IS_DRAWING_CONTEXT",
                    "@c:identifier": "GDK_IS_DRAWING_CONTEXT",
                    "@introspectable": "0",
                    "source-position": {
                        "@filename": "gdk/gdkdrawingcontext.h",
                        "@line": "32"
                    },
                    "parameters": {
                        "parameter": {
                            "@name": "obj"
                        }
                    }
                },
                {
                    "@name": "IS_FRAME_CLOCK",
                    "@c:identifier": "GDK_IS_FRAME_CLOCK",
                    "@introspectable": "0",
                    "source-position": {
                        "@filename": "gdk/gdkframeclock.h",
                        "@line": "39"
                    },
                    "parameters": {
                        "parameter": {
                            "@name": "obj"
                        }
                    }
                },
                {
                    "@name": "IS_FRAME_CLOCK_CLASS",
                    "@c:identifier": "GDK_IS_FRAME_CLOCK_CLASS",
                    "@introspectable": "0",
                    "source-position": {
                        "@filename": "gdk/gdkframeclock.h",
                        "@line": "40"
                    },
                    "parameters": {
                        "parameter": {
                            "@name": "klass"
                        }
                    }
                },
                {
                    "@name": "IS_GL_CONTEXT",
                    "@c:identifier": "GDK_IS_GL_CONTEXT",
                    "@introspectable": "0",
                    "source-position": {
                        "@filename": "gdk/gdkglcontext.h",
                        "@line": "35"
                    },
                    "parameters": {
                        "parameter": {
                            "@name": "obj"
                        }
                    }
                },
                {
                    "@name": "IS_KEYMAP",
                    "@c:identifier": "GDK_IS_KEYMAP",
                    "@introspectable": "0",
                    "source-position": {
                        "@filename": "gdk/gdkkeys.h",
                        "@line": "67"
                    },
                    "parameters": {
                        "parameter": {
                            "@name": "object"
                        }
                    }
                },
                {
                    "@name": "IS_MONITOR",
                    "@c:identifier": "GDK_IS_MONITOR",
                    "@introspectable": "0",
                    "source-position": {
                        "@filename": "gdk/gdkmonitor.h",
                        "@line": "37"
                    },
                    "parameters": {
                        "parameter": {
                            "@name": "object"
                        }
                    }
                },
                {
                    "@name": "IS_SCREEN",
                    "@c:identifier": "GDK_IS_SCREEN",
                    "@introspectable": "0",
                    "source-position": {
                        "@filename": "gdk/gdkscreen.h",
                        "@line": "38"
                    },
                    "parameters": {
                        "parameter": {
                            "@name": "object"
                        }
                    }
                },
                {
                    "@name": "IS_SEAT",
                    "@c:identifier": "GDK_IS_SEAT",
                    "@introspectable": "0",
                    "source-position": {
                        "@filename": "gdk/gdkseat.h",
                        "@line": "36"
                    },
                    "parameters": {
                        "parameter": {
                            "@name": "o"
                        }
                    }
                },
                {
                    "@name": "IS_VISUAL",
                    "@c:identifier": "GDK_IS_VISUAL",
                    "@introspectable": "0",
                    "source-position": {
                        "@filename": "gdk/gdkvisual.h",
                        "@line": "39"
                    },
                    "parameters": {
                        "parameter": {
                            "@name": "object"
                        }
                    }
                },
                {
                    "@name": "IS_WINDOW",
                    "@c:identifier": "GDK_IS_WINDOW",
                    "@introspectable": "0",
                    "source-position": {
                        "@filename": "gdk/gdkwindow.h",
                        "@line": "466"
                    },
                    "parameters": {
                        "parameter": {
                            "@name": "object"
                        }
                    }
                },
                {
                    "@name": "IS_WINDOW_CLASS",
                    "@c:identifier": "GDK_IS_WINDOW_CLASS",
                    "@introspectable": "0",
                    "source-position": {
                        "@filename": "gdk/gdkwindow.h",
                        "@line": "467"
                    },
                    "parameters": {
                        "parameter": {
                            "@name": "klass"
                        }
                    }
                },
                {
                    "@name": "KEYMAP",
                    "@c:identifier": "GDK_KEYMAP",
                    "@introspectable": "0",
                    "source-position": {
                        "@filename": "gdk/gdkkeys.h",
                        "@line": "66"
                    },
                    "parameters": {
                        "parameter": {
                            "@name": "object"
                        }
                    }
                },
                {
                    "@name": "MONITOR",
                    "@c:identifier": "GDK_MONITOR",
                    "@introspectable": "0",
                    "source-position": {
                        "@filename": "gdk/gdkmonitor.h",
                        "@line": "36"
                    },
                    "parameters": {
                        "parameter": {
                            "@name": "object"
                        }
                    }
                },
                {
                    "@name": "POINTER_TO_ATOM",
                    "@c:identifier": "GDK_POINTER_TO_ATOM",
                    "@introspectable": "0",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "gdk/gdktypes.h",
                        "@line": "112",
                        "#text": "Extracts a #GdkAtom from a pointer. The #GdkAtom must have been\nstored in the pointer with GDK_ATOM_TO_POINTER()."
                    },
                    "source-position": {
                        "@filename": "gdk/gdktypes.h",
                        "@line": "119"
                    },
                    "parameters": {
                        "parameter": {
                            "@name": "ptr",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdktypes.h",
                                "@line": "114",
                                "#text": "a pointer containing a #GdkAtom."
                            }
                        }
                    }
                },
                {
                    "@name": "SCREEN",
                    "@c:identifier": "GDK_SCREEN",
                    "@introspectable": "0",
                    "source-position": {
                        "@filename": "gdk/gdkscreen.h",
                        "@line": "37"
                    },
                    "parameters": {
                        "parameter": {
                            "@name": "object"
                        }
                    }
                },
                {
                    "@name": "SEAT",
                    "@c:identifier": "GDK_SEAT",
                    "@introspectable": "0",
                    "source-position": {
                        "@filename": "gdk/gdkseat.h",
                        "@line": "35"
                    },
                    "parameters": {
                        "parameter": {
                            "@name": "o"
                        }
                    }
                },
                {
                    "@name": "THREADS_ENTER",
                    "@c:identifier": "GDK_THREADS_ENTER",
                    "@introspectable": "0",
                    "@deprecated": "1",
                    "@deprecated-version": "3.6",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "gdk/gdkthreads.h",
                        "@line": "83",
                        "#text": "This macro marks the beginning of a critical section in which GDK and\nGTK+ functions can be called safely and without causing race\nconditions.  Only one thread at a time can be in such a critial\nsection. The macro expands to a no-op if #G_THREADS_ENABLED has not\nbeen defined. Typically gdk_threads_enter() should be used instead of\nthis macro."
                    },
                    "doc-deprecated": {
                        "@xml:space": "preserve",
                        "#text": "Use g_main_context_invoke(), g_idle_add() and related\n    functions if you need to schedule GTK+ calls from other threads."
                    },
                    "source-position": {
                        "@filename": "gdk/gdkthreads.h",
                        "@line": "96"
                    }
                },
                {
                    "@name": "THREADS_LEAVE",
                    "@c:identifier": "GDK_THREADS_LEAVE",
                    "@introspectable": "0",
                    "@deprecated": "1",
                    "@deprecated-version": "3.6",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "gdk/gdkthreads.h",
                        "@line": "98",
                        "#text": "This macro marks the end of a critical section\nbegun with #GDK_THREADS_ENTER."
                    },
                    "doc-deprecated": {
                        "@xml:space": "preserve",
                        "#text": "Deprecated in 3.6."
                    },
                    "source-position": {
                        "@filename": "gdk/gdkthreads.h",
                        "@line": "106"
                    }
                },
                {
                    "@name": "UNAVAILABLE",
                    "@c:identifier": "GDK_UNAVAILABLE",
                    "@introspectable": "0",
                    "source-position": {
                        "@filename": "gdk/gdkversionmacros.h",
                        "@line": "46"
                    },
                    "parameters": {
                        "parameter": [
                            {
                                "@name": "maj"
                            },
                            {
                                "@name": "min"
                            }
                        ]
                    }
                },
                {
                    "@name": "VISUAL",
                    "@c:identifier": "GDK_VISUAL",
                    "@introspectable": "0",
                    "source-position": {
                        "@filename": "gdk/gdkvisual.h",
                        "@line": "38"
                    },
                    "parameters": {
                        "parameter": {
                            "@name": "object"
                        }
                    }
                },
                {
                    "@name": "WINDOW",
                    "@c:identifier": "GDK_WINDOW",
                    "@introspectable": "0",
                    "source-position": {
                        "@filename": "gdk/gdkwindow.h",
                        "@line": "464"
                    },
                    "parameters": {
                        "parameter": {
                            "@name": "object"
                        }
                    }
                },
                {
                    "@name": "WINDOW_CLASS",
                    "@c:identifier": "GDK_WINDOW_CLASS",
                    "@introspectable": "0",
                    "source-position": {
                        "@filename": "gdk/gdkwindow.h",
                        "@line": "465"
                    },
                    "parameters": {
                        "parameter": {
                            "@name": "klass"
                        }
                    }
                },
                {
                    "@name": "WINDOW_GET_CLASS",
                    "@c:identifier": "GDK_WINDOW_GET_CLASS",
                    "@introspectable": "0",
                    "source-position": {
                        "@filename": "gdk/gdkwindow.h",
                        "@line": "468"
                    },
                    "parameters": {
                        "parameter": {
                            "@name": "obj"
                        }
                    }
                }
            ],
            "bitfield": [
                {
                    "@name": "AnchorHints",
                    "@version": "3.22",
                    "@stability": "Unstable",
                    "@glib:type-name": "GdkAnchorHints",
                    "@glib:get-type": "gdk_anchor_hints_get_type",
                    "@c:type": "GdkAnchorHints",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "gdk/gdkwindow.h",
                        "@line": "248",
                        "#text": "Positioning hints for aligning a window relative to a rectangle.\n\nThese hints determine how the window should be positioned in the case that\nthe window would fall off-screen if placed in its ideal position.\n\nFor example, %GDK_ANCHOR_FLIP_X will replace %GDK_GRAVITY_NORTH_WEST with\n%GDK_GRAVITY_NORTH_EAST and vice versa if the window extends beyond the left\nor right edges of the monitor.\n\nIf %GDK_ANCHOR_SLIDE_X is set, the window can be shifted horizontally to fit\non-screen. If %GDK_ANCHOR_RESIZE_X is set, the window can be shrunken\nhorizontally to fit.\n\nIn general, when multiple flags are set, flipping should take precedence over\nsliding, which should take precedence over resizing."
                    },
                    "member": [
                        {
                            "@name": "flip_x",
                            "@value": "1",
                            "@c:identifier": "GDK_ANCHOR_FLIP_X",
                            "@glib:nick": "flip-x",
                            "@glib:name": "GDK_ANCHOR_FLIP_X",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkwindow.h",
                                "@line": "250",
                                "#text": "allow flipping anchors horizontally"
                            }
                        },
                        {
                            "@name": "flip_y",
                            "@value": "2",
                            "@c:identifier": "GDK_ANCHOR_FLIP_Y",
                            "@glib:nick": "flip-y",
                            "@glib:name": "GDK_ANCHOR_FLIP_Y",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkwindow.h",
                                "@line": "251",
                                "#text": "allow flipping anchors vertically"
                            }
                        },
                        {
                            "@name": "slide_x",
                            "@value": "4",
                            "@c:identifier": "GDK_ANCHOR_SLIDE_X",
                            "@glib:nick": "slide-x",
                            "@glib:name": "GDK_ANCHOR_SLIDE_X",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkwindow.h",
                                "@line": "252",
                                "#text": "allow sliding window horizontally"
                            }
                        },
                        {
                            "@name": "slide_y",
                            "@value": "8",
                            "@c:identifier": "GDK_ANCHOR_SLIDE_Y",
                            "@glib:nick": "slide-y",
                            "@glib:name": "GDK_ANCHOR_SLIDE_Y",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkwindow.h",
                                "@line": "253",
                                "#text": "allow sliding window vertically"
                            }
                        },
                        {
                            "@name": "resize_x",
                            "@value": "16",
                            "@c:identifier": "GDK_ANCHOR_RESIZE_X",
                            "@glib:nick": "resize-x",
                            "@glib:name": "GDK_ANCHOR_RESIZE_X",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkwindow.h",
                                "@line": "254",
                                "#text": "allow resizing window horizontally"
                            }
                        },
                        {
                            "@name": "resize_y",
                            "@value": "32",
                            "@c:identifier": "GDK_ANCHOR_RESIZE_Y",
                            "@glib:nick": "resize-y",
                            "@glib:name": "GDK_ANCHOR_RESIZE_Y",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkwindow.h",
                                "@line": "255",
                                "#text": "allow resizing window vertically"
                            }
                        },
                        {
                            "@name": "flip",
                            "@value": "3",
                            "@c:identifier": "GDK_ANCHOR_FLIP",
                            "@glib:nick": "flip",
                            "@glib:name": "GDK_ANCHOR_FLIP",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkwindow.h",
                                "@line": "256",
                                "#text": "allow flipping anchors on both axes"
                            }
                        },
                        {
                            "@name": "slide",
                            "@value": "12",
                            "@c:identifier": "GDK_ANCHOR_SLIDE",
                            "@glib:nick": "slide",
                            "@glib:name": "GDK_ANCHOR_SLIDE",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkwindow.h",
                                "@line": "257",
                                "#text": "allow sliding window on both axes"
                            }
                        },
                        {
                            "@name": "resize",
                            "@value": "48",
                            "@c:identifier": "GDK_ANCHOR_RESIZE",
                            "@glib:nick": "resize",
                            "@glib:name": "GDK_ANCHOR_RESIZE",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkwindow.h",
                                "@line": "258",
                                "#text": "allow resizing window on both axes"
                            }
                        }
                    ]
                },
                {
                    "@name": "AxisFlags",
                    "@version": "3.22",
                    "@glib:type-name": "GdkAxisFlags",
                    "@glib:get-type": "gdk_axis_flags_get_type",
                    "@c:type": "GdkAxisFlags",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "gdk/gdktypes.h",
                        "@line": "571",
                        "#text": "Flags describing the current capabilities of a device/tool."
                    },
                    "member": [
                        {
                            "@name": "x",
                            "@value": "2",
                            "@c:identifier": "GDK_AXIS_FLAG_X",
                            "@glib:nick": "x",
                            "@glib:name": "GDK_AXIS_FLAG_X",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdktypes.h",
                                "@line": "573",
                                "#text": "X axis is present"
                            }
                        },
                        {
                            "@name": "y",
                            "@value": "4",
                            "@c:identifier": "GDK_AXIS_FLAG_Y",
                            "@glib:nick": "y",
                            "@glib:name": "GDK_AXIS_FLAG_Y",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdktypes.h",
                                "@line": "574",
                                "#text": "Y axis is present"
                            }
                        },
                        {
                            "@name": "pressure",
                            "@value": "8",
                            "@c:identifier": "GDK_AXIS_FLAG_PRESSURE",
                            "@glib:nick": "pressure",
                            "@glib:name": "GDK_AXIS_FLAG_PRESSURE",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdktypes.h",
                                "@line": "575",
                                "#text": "Pressure axis is present"
                            }
                        },
                        {
                            "@name": "xtilt",
                            "@value": "16",
                            "@c:identifier": "GDK_AXIS_FLAG_XTILT",
                            "@glib:nick": "xtilt",
                            "@glib:name": "GDK_AXIS_FLAG_XTILT",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdktypes.h",
                                "@line": "576",
                                "#text": "X tilt axis is present"
                            }
                        },
                        {
                            "@name": "ytilt",
                            "@value": "32",
                            "@c:identifier": "GDK_AXIS_FLAG_YTILT",
                            "@glib:nick": "ytilt",
                            "@glib:name": "GDK_AXIS_FLAG_YTILT",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdktypes.h",
                                "@line": "577",
                                "#text": "Y tilt axis is present"
                            }
                        },
                        {
                            "@name": "wheel",
                            "@value": "64",
                            "@c:identifier": "GDK_AXIS_FLAG_WHEEL",
                            "@glib:nick": "wheel",
                            "@glib:name": "GDK_AXIS_FLAG_WHEEL",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdktypes.h",
                                "@line": "578",
                                "#text": "Wheel axis is present"
                            }
                        },
                        {
                            "@name": "distance",
                            "@value": "128",
                            "@c:identifier": "GDK_AXIS_FLAG_DISTANCE",
                            "@glib:nick": "distance",
                            "@glib:name": "GDK_AXIS_FLAG_DISTANCE",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdktypes.h",
                                "@line": "579",
                                "#text": "Distance axis is present"
                            }
                        },
                        {
                            "@name": "rotation",
                            "@value": "256",
                            "@c:identifier": "GDK_AXIS_FLAG_ROTATION",
                            "@glib:nick": "rotation",
                            "@glib:name": "GDK_AXIS_FLAG_ROTATION",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdktypes.h",
                                "@line": "580",
                                "#text": "Z-axis rotation is present"
                            }
                        },
                        {
                            "@name": "slider",
                            "@value": "512",
                            "@c:identifier": "GDK_AXIS_FLAG_SLIDER",
                            "@glib:nick": "slider",
                            "@glib:name": "GDK_AXIS_FLAG_SLIDER",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdktypes.h",
                                "@line": "581",
                                "#text": "Slider axis is present"
                            }
                        }
                    ]
                },
                {
                    "@name": "DragAction",
                    "@glib:type-name": "GdkDragAction",
                    "@glib:get-type": "gdk_drag_action_get_type",
                    "@c:type": "GdkDragAction",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "gdk/gdkdnd.h",
                        "@line": "42",
                        "#text": "Used in #GdkDragContext to indicate what the destination\nshould do with the dropped data."
                    },
                    "member": [
                        {
                            "@name": "default",
                            "@value": "1",
                            "@c:identifier": "GDK_ACTION_DEFAULT",
                            "@glib:nick": "default",
                            "@glib:name": "GDK_ACTION_DEFAULT",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkdnd.h",
                                "@line": "44",
                                "#text": "Means nothing, and should not be used."
                            }
                        },
                        {
                            "@name": "copy",
                            "@value": "2",
                            "@c:identifier": "GDK_ACTION_COPY",
                            "@glib:nick": "copy",
                            "@glib:name": "GDK_ACTION_COPY",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkdnd.h",
                                "@line": "45",
                                "#text": "Copy the data."
                            }
                        },
                        {
                            "@name": "move",
                            "@value": "4",
                            "@c:identifier": "GDK_ACTION_MOVE",
                            "@glib:nick": "move",
                            "@glib:name": "GDK_ACTION_MOVE",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkdnd.h",
                                "@line": "46",
                                "#text": "Move the data, i.e. first copy it, then delete\n it from the source using the DELETE target of the X selection protocol."
                            }
                        },
                        {
                            "@name": "link",
                            "@value": "8",
                            "@c:identifier": "GDK_ACTION_LINK",
                            "@glib:nick": "link",
                            "@glib:name": "GDK_ACTION_LINK",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkdnd.h",
                                "@line": "48",
                                "#text": "Add a link to the data. Note that this is only\n useful if source and destination agree on what it means."
                            }
                        },
                        {
                            "@name": "private",
                            "@value": "16",
                            "@c:identifier": "GDK_ACTION_PRIVATE",
                            "@glib:nick": "private",
                            "@glib:name": "GDK_ACTION_PRIVATE",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkdnd.h",
                                "@line": "50",
                                "#text": "Special action which tells the source that the\n destination will do something that the source doesn\u2019t understand."
                            }
                        },
                        {
                            "@name": "ask",
                            "@value": "32",
                            "@c:identifier": "GDK_ACTION_ASK",
                            "@glib:nick": "ask",
                            "@glib:name": "GDK_ACTION_ASK",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkdnd.h",
                                "@line": "52",
                                "#text": "Ask the user what to do with the data."
                            }
                        }
                    ]
                },
                {
                    "@name": "EventMask",
                    "@glib:type-name": "GdkEventMask",
                    "@glib:get-type": "gdk_event_mask_get_type",
                    "@c:type": "GdkEventMask",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "gdk/gdktypes.h",
                        "@line": "370",
                        "#text": "A set of bit-flags to indicate which events a window is to receive.\nMost of these masks map onto one or more of the #GdkEventType event types\nabove.\n\nSee the [input handling overview][chap-input-handling] for details of\n[event masks][event-masks] and [event propagation][event-propagation].\n\n%GDK_POINTER_MOTION_HINT_MASK is deprecated. It is a special mask\nto reduce the number of %GDK_MOTION_NOTIFY events received. When using\n%GDK_POINTER_MOTION_HINT_MASK, fewer %GDK_MOTION_NOTIFY events will\nbe sent, some of which are marked as a hint (the is_hint member is\n%TRUE). To receive more motion events after a motion hint event,\nthe application needs to asks for more, by calling\ngdk_event_request_motions().\n\nSince GTK 3.8, motion events are already compressed by default, independent\nof this mechanism. This compression can be disabled with\ngdk_window_set_event_compression(). See the documentation of that function\nfor details.\n\nIf %GDK_TOUCH_MASK is enabled, the window will receive touch events\nfrom touch-enabled devices. Those will come as sequences of #GdkEventTouch\nwith type %GDK_TOUCH_UPDATE, enclosed by two events with\ntype %GDK_TOUCH_BEGIN and %GDK_TOUCH_END (or %GDK_TOUCH_CANCEL).\ngdk_event_get_event_sequence() returns the event sequence for these\nevents, so different sequences may be distinguished."
                    },
                    "member": [
                        {
                            "@name": "exposure_mask",
                            "@value": "2",
                            "@c:identifier": "GDK_EXPOSURE_MASK",
                            "@glib:nick": "exposure-mask",
                            "@glib:name": "GDK_EXPOSURE_MASK",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdktypes.h",
                                "@line": "372",
                                "#text": "receive expose events"
                            }
                        },
                        {
                            "@name": "pointer_motion_mask",
                            "@value": "4",
                            "@c:identifier": "GDK_POINTER_MOTION_MASK",
                            "@glib:nick": "pointer-motion-mask",
                            "@glib:name": "GDK_POINTER_MOTION_MASK",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdktypes.h",
                                "@line": "373",
                                "#text": "receive all pointer motion events"
                            }
                        },
                        {
                            "@name": "pointer_motion_hint_mask",
                            "@value": "8",
                            "@c:identifier": "GDK_POINTER_MOTION_HINT_MASK",
                            "@glib:nick": "pointer-motion-hint-mask",
                            "@glib:name": "GDK_POINTER_MOTION_HINT_MASK",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdktypes.h",
                                "@line": "374",
                                "#text": "deprecated. see the explanation above"
                            }
                        },
                        {
                            "@name": "button_motion_mask",
                            "@value": "16",
                            "@c:identifier": "GDK_BUTTON_MOTION_MASK",
                            "@glib:nick": "button-motion-mask",
                            "@glib:name": "GDK_BUTTON_MOTION_MASK",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdktypes.h",
                                "@line": "375",
                                "#text": "receive pointer motion events while any button is pressed"
                            }
                        },
                        {
                            "@name": "button1_motion_mask",
                            "@value": "32",
                            "@c:identifier": "GDK_BUTTON1_MOTION_MASK",
                            "@glib:nick": "button1-motion-mask",
                            "@glib:name": "GDK_BUTTON1_MOTION_MASK",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdktypes.h",
                                "@line": "376",
                                "#text": "receive pointer motion events while 1 button is pressed"
                            }
                        },
                        {
                            "@name": "button2_motion_mask",
                            "@value": "64",
                            "@c:identifier": "GDK_BUTTON2_MOTION_MASK",
                            "@glib:nick": "button2-motion-mask",
                            "@glib:name": "GDK_BUTTON2_MOTION_MASK",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdktypes.h",
                                "@line": "377",
                                "#text": "receive pointer motion events while 2 button is pressed"
                            }
                        },
                        {
                            "@name": "button3_motion_mask",
                            "@value": "128",
                            "@c:identifier": "GDK_BUTTON3_MOTION_MASK",
                            "@glib:nick": "button3-motion-mask",
                            "@glib:name": "GDK_BUTTON3_MOTION_MASK",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdktypes.h",
                                "@line": "378",
                                "#text": "receive pointer motion events while 3 button is pressed"
                            }
                        },
                        {
                            "@name": "button_press_mask",
                            "@value": "256",
                            "@c:identifier": "GDK_BUTTON_PRESS_MASK",
                            "@glib:nick": "button-press-mask",
                            "@glib:name": "GDK_BUTTON_PRESS_MASK",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdktypes.h",
                                "@line": "379",
                                "#text": "receive button press events"
                            }
                        },
                        {
                            "@name": "button_release_mask",
                            "@value": "512",
                            "@c:identifier": "GDK_BUTTON_RELEASE_MASK",
                            "@glib:nick": "button-release-mask",
                            "@glib:name": "GDK_BUTTON_RELEASE_MASK",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdktypes.h",
                                "@line": "380",
                                "#text": "receive button release events"
                            }
                        },
                        {
                            "@name": "key_press_mask",
                            "@value": "1024",
                            "@c:identifier": "GDK_KEY_PRESS_MASK",
                            "@glib:nick": "key-press-mask",
                            "@glib:name": "GDK_KEY_PRESS_MASK",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdktypes.h",
                                "@line": "381",
                                "#text": "receive key press events"
                            }
                        },
                        {
                            "@name": "key_release_mask",
                            "@value": "2048",
                            "@c:identifier": "GDK_KEY_RELEASE_MASK",
                            "@glib:nick": "key-release-mask",
                            "@glib:name": "GDK_KEY_RELEASE_MASK",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdktypes.h",
                                "@line": "382",
                                "#text": "receive key release events"
                            }
                        },
                        {
                            "@name": "enter_notify_mask",
                            "@value": "4096",
                            "@c:identifier": "GDK_ENTER_NOTIFY_MASK",
                            "@glib:nick": "enter-notify-mask",
                            "@glib:name": "GDK_ENTER_NOTIFY_MASK",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdktypes.h",
                                "@line": "383",
                                "#text": "receive window enter events"
                            }
                        },
                        {
                            "@name": "leave_notify_mask",
                            "@value": "8192",
                            "@c:identifier": "GDK_LEAVE_NOTIFY_MASK",
                            "@glib:nick": "leave-notify-mask",
                            "@glib:name": "GDK_LEAVE_NOTIFY_MASK",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdktypes.h",
                                "@line": "384",
                                "#text": "receive window leave events"
                            }
                        },
                        {
                            "@name": "focus_change_mask",
                            "@value": "16384",
                            "@c:identifier": "GDK_FOCUS_CHANGE_MASK",
                            "@glib:nick": "focus-change-mask",
                            "@glib:name": "GDK_FOCUS_CHANGE_MASK",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdktypes.h",
                                "@line": "385",
                                "#text": "receive focus change events"
                            }
                        },
                        {
                            "@name": "structure_mask",
                            "@value": "32768",
                            "@c:identifier": "GDK_STRUCTURE_MASK",
                            "@glib:nick": "structure-mask",
                            "@glib:name": "GDK_STRUCTURE_MASK",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdktypes.h",
                                "@line": "386",
                                "#text": "receive events about window configuration change"
                            }
                        },
                        {
                            "@name": "property_change_mask",
                            "@value": "65536",
                            "@c:identifier": "GDK_PROPERTY_CHANGE_MASK",
                            "@glib:nick": "property-change-mask",
                            "@glib:name": "GDK_PROPERTY_CHANGE_MASK",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdktypes.h",
                                "@line": "387",
                                "#text": "receive property change events"
                            }
                        },
                        {
                            "@name": "visibility_notify_mask",
                            "@value": "131072",
                            "@c:identifier": "GDK_VISIBILITY_NOTIFY_MASK",
                            "@glib:nick": "visibility-notify-mask",
                            "@glib:name": "GDK_VISIBILITY_NOTIFY_MASK",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdktypes.h",
                                "@line": "388",
                                "#text": "receive visibility change events"
                            }
                        },
                        {
                            "@name": "proximity_in_mask",
                            "@value": "262144",
                            "@c:identifier": "GDK_PROXIMITY_IN_MASK",
                            "@glib:nick": "proximity-in-mask",
                            "@glib:name": "GDK_PROXIMITY_IN_MASK",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdktypes.h",
                                "@line": "389",
                                "#text": "receive proximity in events"
                            }
                        },
                        {
                            "@name": "proximity_out_mask",
                            "@value": "524288",
                            "@c:identifier": "GDK_PROXIMITY_OUT_MASK",
                            "@glib:nick": "proximity-out-mask",
                            "@glib:name": "GDK_PROXIMITY_OUT_MASK",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdktypes.h",
                                "@line": "390",
                                "#text": "receive proximity out events"
                            }
                        },
                        {
                            "@name": "substructure_mask",
                            "@value": "1048576",
                            "@c:identifier": "GDK_SUBSTRUCTURE_MASK",
                            "@glib:nick": "substructure-mask",
                            "@glib:name": "GDK_SUBSTRUCTURE_MASK",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdktypes.h",
                                "@line": "391",
                                "#text": "receive events about window configuration changes of\n  child windows"
                            }
                        },
                        {
                            "@name": "scroll_mask",
                            "@value": "2097152",
                            "@c:identifier": "GDK_SCROLL_MASK",
                            "@glib:nick": "scroll-mask",
                            "@glib:name": "GDK_SCROLL_MASK",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdktypes.h",
                                "@line": "393",
                                "#text": "receive scroll events"
                            }
                        },
                        {
                            "@name": "touch_mask",
                            "@value": "4194304",
                            "@c:identifier": "GDK_TOUCH_MASK",
                            "@glib:nick": "touch-mask",
                            "@glib:name": "GDK_TOUCH_MASK",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdktypes.h",
                                "@line": "394",
                                "#text": "receive touch events. Since 3.4"
                            }
                        },
                        {
                            "@name": "smooth_scroll_mask",
                            "@value": "8388608",
                            "@c:identifier": "GDK_SMOOTH_SCROLL_MASK",
                            "@glib:nick": "smooth-scroll-mask",
                            "@glib:name": "GDK_SMOOTH_SCROLL_MASK",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdktypes.h",
                                "@line": "395",
                                "#text": "receive smooth scrolling events. Since 3.4"
                            }
                        },
                        {
                            "@name": "touchpad_gesture_mask",
                            "@value": "16777216",
                            "@c:identifier": "GDK_TOUCHPAD_GESTURE_MASK",
                            "@glib:nick": "touchpad-gesture-mask",
                            "@glib:name": "GDK_TOUCHPAD_GESTURE_MASK",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdktypes.h",
                                "@line": "396",
                                "#text": "receive touchpad gesture events. Since 3.18"
                            }
                        },
                        {
                            "@name": "tablet_pad_mask",
                            "@value": "33554432",
                            "@c:identifier": "GDK_TABLET_PAD_MASK",
                            "@glib:nick": "tablet-pad-mask",
                            "@glib:name": "GDK_TABLET_PAD_MASK",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdktypes.h",
                                "@line": "397",
                                "#text": "receive tablet pad events. Since 3.22"
                            }
                        },
                        {
                            "@name": "all_events_mask",
                            "@value": "67108862",
                            "@c:identifier": "GDK_ALL_EVENTS_MASK",
                            "@glib:nick": "all-events-mask",
                            "@glib:name": "GDK_ALL_EVENTS_MASK",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdktypes.h",
                                "@line": "398",
                                "#text": "the combination of all the above event masks."
                            }
                        }
                    ]
                },
                {
                    "@name": "FrameClockPhase",
                    "@version": "3.8",
                    "@glib:type-name": "GdkFrameClockPhase",
                    "@glib:get-type": "gdk_frame_clock_phase_get_type",
                    "@c:type": "GdkFrameClockPhase",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "gdk/gdkframeclock.h",
                        "@line": "47",
                        "#text": "#GdkFrameClockPhase is used to represent the different paint clock\nphases that can be requested. The elements of the enumeration\ncorrespond to the signals of #GdkFrameClock."
                    },
                    "member": [
                        {
                            "@name": "none",
                            "@value": "0",
                            "@c:identifier": "GDK_FRAME_CLOCK_PHASE_NONE",
                            "@glib:nick": "none",
                            "@glib:name": "GDK_FRAME_CLOCK_PHASE_NONE",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkframeclock.h",
                                "@line": "49",
                                "#text": "no phase"
                            }
                        },
                        {
                            "@name": "flush_events",
                            "@value": "1",
                            "@c:identifier": "GDK_FRAME_CLOCK_PHASE_FLUSH_EVENTS",
                            "@glib:nick": "flush-events",
                            "@glib:name": "GDK_FRAME_CLOCK_PHASE_FLUSH_EVENTS",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkframeclock.h",
                                "@line": "50",
                                "#text": "corresponds to GdkFrameClock::flush-events. Should not be handled by applications."
                            }
                        },
                        {
                            "@name": "before_paint",
                            "@value": "2",
                            "@c:identifier": "GDK_FRAME_CLOCK_PHASE_BEFORE_PAINT",
                            "@glib:nick": "before-paint",
                            "@glib:name": "GDK_FRAME_CLOCK_PHASE_BEFORE_PAINT",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkframeclock.h",
                                "@line": "51",
                                "#text": "corresponds to GdkFrameClock::before-paint. Should not be handled by applications."
                            }
                        },
                        {
                            "@name": "update",
                            "@value": "4",
                            "@c:identifier": "GDK_FRAME_CLOCK_PHASE_UPDATE",
                            "@glib:nick": "update",
                            "@glib:name": "GDK_FRAME_CLOCK_PHASE_UPDATE",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkframeclock.h",
                                "@line": "52",
                                "#text": "corresponds to GdkFrameClock::update."
                            }
                        },
                        {
                            "@name": "layout",
                            "@value": "8",
                            "@c:identifier": "GDK_FRAME_CLOCK_PHASE_LAYOUT",
                            "@glib:nick": "layout",
                            "@glib:name": "GDK_FRAME_CLOCK_PHASE_LAYOUT",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkframeclock.h",
                                "@line": "53",
                                "#text": "corresponds to GdkFrameClock::layout."
                            }
                        },
                        {
                            "@name": "paint",
                            "@value": "16",
                            "@c:identifier": "GDK_FRAME_CLOCK_PHASE_PAINT",
                            "@glib:nick": "paint",
                            "@glib:name": "GDK_FRAME_CLOCK_PHASE_PAINT",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkframeclock.h",
                                "@line": "54",
                                "#text": "corresponds to GdkFrameClock::paint."
                            }
                        },
                        {
                            "@name": "resume_events",
                            "@value": "32",
                            "@c:identifier": "GDK_FRAME_CLOCK_PHASE_RESUME_EVENTS",
                            "@glib:nick": "resume-events",
                            "@glib:name": "GDK_FRAME_CLOCK_PHASE_RESUME_EVENTS",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkframeclock.h",
                                "@line": "55",
                                "#text": "corresponds to GdkFrameClock::resume-events. Should not be handled by applications."
                            }
                        },
                        {
                            "@name": "after_paint",
                            "@value": "64",
                            "@c:identifier": "GDK_FRAME_CLOCK_PHASE_AFTER_PAINT",
                            "@glib:nick": "after-paint",
                            "@glib:name": "GDK_FRAME_CLOCK_PHASE_AFTER_PAINT",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkframeclock.h",
                                "@line": "56",
                                "#text": "corresponds to GdkFrameClock::after-paint. Should not be handled by applications."
                            }
                        }
                    ]
                },
                {
                    "@name": "ModifierType",
                    "@glib:type-name": "GdkModifierType",
                    "@glib:get-type": "gdk_modifier_type_get_type",
                    "@c:type": "GdkModifierType",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "gdk/gdktypes.h",
                        "@line": "170",
                        "#text": "A set of bit-flags to indicate the state of modifier keys and mouse buttons\nin various event types. Typical modifier keys are Shift, Control, Meta,\nSuper, Hyper, Alt, Compose, Apple, CapsLock or ShiftLock.\n\nLike the X Window System, GDK supports 8 modifier keys and 5 mouse buttons.\n\nSince 2.10, GDK recognizes which of the Meta, Super or Hyper keys are mapped\nto Mod2 - Mod5, and indicates this by setting %GDK_SUPER_MASK,\n%GDK_HYPER_MASK or %GDK_META_MASK in the state field of key events.\n\nNote that GDK may add internal values to events which include\nreserved values such as %GDK_MODIFIER_RESERVED_13_MASK.  Your code\nshould preserve and ignore them.  You can use %GDK_MODIFIER_MASK to\nremove all reserved values.\n\nAlso note that the GDK X backend interprets button press events for button\n4-7 as scroll events, so %GDK_BUTTON4_MASK and %GDK_BUTTON5_MASK will never\nbe set."
                    },
                    "member": [
                        {
                            "@name": "shift_mask",
                            "@value": "1",
                            "@c:identifier": "GDK_SHIFT_MASK",
                            "@glib:nick": "shift-mask",
                            "@glib:name": "GDK_SHIFT_MASK",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdktypes.h",
                                "@line": "172",
                                "#text": "the Shift key."
                            }
                        },
                        {
                            "@name": "lock_mask",
                            "@value": "2",
                            "@c:identifier": "GDK_LOCK_MASK",
                            "@glib:nick": "lock-mask",
                            "@glib:name": "GDK_LOCK_MASK",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdktypes.h",
                                "@line": "173",
                                "#text": "a Lock key (depending on the modifier mapping of the\n X server this may either be CapsLock or ShiftLock)."
                            }
                        },
                        {
                            "@name": "control_mask",
                            "@value": "4",
                            "@c:identifier": "GDK_CONTROL_MASK",
                            "@glib:nick": "control-mask",
                            "@glib:name": "GDK_CONTROL_MASK",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdktypes.h",
                                "@line": "175",
                                "#text": "the Control key."
                            }
                        },
                        {
                            "@name": "mod1_mask",
                            "@value": "8",
                            "@c:identifier": "GDK_MOD1_MASK",
                            "@glib:nick": "mod1-mask",
                            "@glib:name": "GDK_MOD1_MASK",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdktypes.h",
                                "@line": "176",
                                "#text": "the fourth modifier key (it depends on the modifier\n mapping of the X server which key is interpreted as this modifier, but\n normally it is the Alt key)."
                            }
                        },
                        {
                            "@name": "mod2_mask",
                            "@value": "16",
                            "@c:identifier": "GDK_MOD2_MASK",
                            "@glib:nick": "mod2-mask",
                            "@glib:name": "GDK_MOD2_MASK",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdktypes.h",
                                "@line": "179",
                                "#text": "the fifth modifier key (it depends on the modifier\n mapping of the X server which key is interpreted as this modifier)."
                            }
                        },
                        {
                            "@name": "mod3_mask",
                            "@value": "32",
                            "@c:identifier": "GDK_MOD3_MASK",
                            "@glib:nick": "mod3-mask",
                            "@glib:name": "GDK_MOD3_MASK",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdktypes.h",
                                "@line": "181",
                                "#text": "the sixth modifier key (it depends on the modifier\n mapping of the X server which key is interpreted as this modifier)."
                            }
                        },
                        {
                            "@name": "mod4_mask",
                            "@value": "64",
                            "@c:identifier": "GDK_MOD4_MASK",
                            "@glib:nick": "mod4-mask",
                            "@glib:name": "GDK_MOD4_MASK",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdktypes.h",
                                "@line": "183",
                                "#text": "the seventh modifier key (it depends on the modifier\n mapping of the X server which key is interpreted as this modifier)."
                            }
                        },
                        {
                            "@name": "mod5_mask",
                            "@value": "128",
                            "@c:identifier": "GDK_MOD5_MASK",
                            "@glib:nick": "mod5-mask",
                            "@glib:name": "GDK_MOD5_MASK",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdktypes.h",
                                "@line": "185",
                                "#text": "the eighth modifier key (it depends on the modifier\n mapping of the X server which key is interpreted as this modifier)."
                            }
                        },
                        {
                            "@name": "button1_mask",
                            "@value": "256",
                            "@c:identifier": "GDK_BUTTON1_MASK",
                            "@glib:nick": "button1-mask",
                            "@glib:name": "GDK_BUTTON1_MASK",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdktypes.h",
                                "@line": "187",
                                "#text": "the first mouse button."
                            }
                        },
                        {
                            "@name": "button2_mask",
                            "@value": "512",
                            "@c:identifier": "GDK_BUTTON2_MASK",
                            "@glib:nick": "button2-mask",
                            "@glib:name": "GDK_BUTTON2_MASK",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdktypes.h",
                                "@line": "188",
                                "#text": "the second mouse button."
                            }
                        },
                        {
                            "@name": "button3_mask",
                            "@value": "1024",
                            "@c:identifier": "GDK_BUTTON3_MASK",
                            "@glib:nick": "button3-mask",
                            "@glib:name": "GDK_BUTTON3_MASK",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdktypes.h",
                                "@line": "189",
                                "#text": "the third mouse button."
                            }
                        },
                        {
                            "@name": "button4_mask",
                            "@value": "2048",
                            "@c:identifier": "GDK_BUTTON4_MASK",
                            "@glib:nick": "button4-mask",
                            "@glib:name": "GDK_BUTTON4_MASK",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdktypes.h",
                                "@line": "190",
                                "#text": "the fourth mouse button."
                            }
                        },
                        {
                            "@name": "button5_mask",
                            "@value": "4096",
                            "@c:identifier": "GDK_BUTTON5_MASK",
                            "@glib:nick": "button5-mask",
                            "@glib:name": "GDK_BUTTON5_MASK",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdktypes.h",
                                "@line": "191",
                                "#text": "the fifth mouse button."
                            }
                        },
                        {
                            "@name": "modifier_reserved_13_mask",
                            "@value": "8192",
                            "@c:identifier": "GDK_MODIFIER_RESERVED_13_MASK",
                            "@glib:nick": "modifier-reserved-13-mask",
                            "@glib:name": "GDK_MODIFIER_RESERVED_13_MASK",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdktypes.h",
                                "@line": "192",
                                "#text": "A reserved bit flag; do not use in your own code"
                            }
                        },
                        {
                            "@name": "modifier_reserved_14_mask",
                            "@value": "16384",
                            "@c:identifier": "GDK_MODIFIER_RESERVED_14_MASK",
                            "@glib:nick": "modifier-reserved-14-mask",
                            "@glib:name": "GDK_MODIFIER_RESERVED_14_MASK",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdktypes.h",
                                "@line": "193",
                                "#text": "A reserved bit flag; do not use in your own code"
                            }
                        },
                        {
                            "@name": "modifier_reserved_15_mask",
                            "@value": "32768",
                            "@c:identifier": "GDK_MODIFIER_RESERVED_15_MASK",
                            "@glib:nick": "modifier-reserved-15-mask",
                            "@glib:name": "GDK_MODIFIER_RESERVED_15_MASK",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdktypes.h",
                                "@line": "194",
                                "#text": "A reserved bit flag; do not use in your own code"
                            }
                        },
                        {
                            "@name": "modifier_reserved_16_mask",
                            "@value": "65536",
                            "@c:identifier": "GDK_MODIFIER_RESERVED_16_MASK",
                            "@glib:nick": "modifier-reserved-16-mask",
                            "@glib:name": "GDK_MODIFIER_RESERVED_16_MASK",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdktypes.h",
                                "@line": "195",
                                "#text": "A reserved bit flag; do not use in your own code"
                            }
                        },
                        {
                            "@name": "modifier_reserved_17_mask",
                            "@value": "131072",
                            "@c:identifier": "GDK_MODIFIER_RESERVED_17_MASK",
                            "@glib:nick": "modifier-reserved-17-mask",
                            "@glib:name": "GDK_MODIFIER_RESERVED_17_MASK",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdktypes.h",
                                "@line": "196",
                                "#text": "A reserved bit flag; do not use in your own code"
                            }
                        },
                        {
                            "@name": "modifier_reserved_18_mask",
                            "@value": "262144",
                            "@c:identifier": "GDK_MODIFIER_RESERVED_18_MASK",
                            "@glib:nick": "modifier-reserved-18-mask",
                            "@glib:name": "GDK_MODIFIER_RESERVED_18_MASK",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdktypes.h",
                                "@line": "197",
                                "#text": "A reserved bit flag; do not use in your own code"
                            }
                        },
                        {
                            "@name": "modifier_reserved_19_mask",
                            "@value": "524288",
                            "@c:identifier": "GDK_MODIFIER_RESERVED_19_MASK",
                            "@glib:nick": "modifier-reserved-19-mask",
                            "@glib:name": "GDK_MODIFIER_RESERVED_19_MASK",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdktypes.h",
                                "@line": "198",
                                "#text": "A reserved bit flag; do not use in your own code"
                            }
                        },
                        {
                            "@name": "modifier_reserved_20_mask",
                            "@value": "1048576",
                            "@c:identifier": "GDK_MODIFIER_RESERVED_20_MASK",
                            "@glib:nick": "modifier-reserved-20-mask",
                            "@glib:name": "GDK_MODIFIER_RESERVED_20_MASK",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdktypes.h",
                                "@line": "199",
                                "#text": "A reserved bit flag; do not use in your own code"
                            }
                        },
                        {
                            "@name": "modifier_reserved_21_mask",
                            "@value": "2097152",
                            "@c:identifier": "GDK_MODIFIER_RESERVED_21_MASK",
                            "@glib:nick": "modifier-reserved-21-mask",
                            "@glib:name": "GDK_MODIFIER_RESERVED_21_MASK",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdktypes.h",
                                "@line": "200",
                                "#text": "A reserved bit flag; do not use in your own code"
                            }
                        },
                        {
                            "@name": "modifier_reserved_22_mask",
                            "@value": "4194304",
                            "@c:identifier": "GDK_MODIFIER_RESERVED_22_MASK",
                            "@glib:nick": "modifier-reserved-22-mask",
                            "@glib:name": "GDK_MODIFIER_RESERVED_22_MASK",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdktypes.h",
                                "@line": "201",
                                "#text": "A reserved bit flag; do not use in your own code"
                            }
                        },
                        {
                            "@name": "modifier_reserved_23_mask",
                            "@value": "8388608",
                            "@c:identifier": "GDK_MODIFIER_RESERVED_23_MASK",
                            "@glib:nick": "modifier-reserved-23-mask",
                            "@glib:name": "GDK_MODIFIER_RESERVED_23_MASK",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdktypes.h",
                                "@line": "202",
                                "#text": "A reserved bit flag; do not use in your own code"
                            }
                        },
                        {
                            "@name": "modifier_reserved_24_mask",
                            "@value": "16777216",
                            "@c:identifier": "GDK_MODIFIER_RESERVED_24_MASK",
                            "@glib:nick": "modifier-reserved-24-mask",
                            "@glib:name": "GDK_MODIFIER_RESERVED_24_MASK",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdktypes.h",
                                "@line": "203",
                                "#text": "A reserved bit flag; do not use in your own code"
                            }
                        },
                        {
                            "@name": "modifier_reserved_25_mask",
                            "@value": "33554432",
                            "@c:identifier": "GDK_MODIFIER_RESERVED_25_MASK",
                            "@glib:nick": "modifier-reserved-25-mask",
                            "@glib:name": "GDK_MODIFIER_RESERVED_25_MASK",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdktypes.h",
                                "@line": "204",
                                "#text": "A reserved bit flag; do not use in your own code"
                            }
                        },
                        {
                            "@name": "super_mask",
                            "@value": "67108864",
                            "@c:identifier": "GDK_SUPER_MASK",
                            "@glib:nick": "super-mask",
                            "@glib:name": "GDK_SUPER_MASK",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdktypes.h",
                                "@line": "205",
                                "#text": "the Super modifier. Since 2.10"
                            }
                        },
                        {
                            "@name": "hyper_mask",
                            "@value": "134217728",
                            "@c:identifier": "GDK_HYPER_MASK",
                            "@glib:nick": "hyper-mask",
                            "@glib:name": "GDK_HYPER_MASK",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdktypes.h",
                                "@line": "206",
                                "#text": "the Hyper modifier. Since 2.10"
                            }
                        },
                        {
                            "@name": "meta_mask",
                            "@value": "268435456",
                            "@c:identifier": "GDK_META_MASK",
                            "@glib:nick": "meta-mask",
                            "@glib:name": "GDK_META_MASK",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdktypes.h",
                                "@line": "207",
                                "#text": "the Meta modifier. Since 2.10"
                            }
                        },
                        {
                            "@name": "modifier_reserved_29_mask",
                            "@value": "536870912",
                            "@c:identifier": "GDK_MODIFIER_RESERVED_29_MASK",
                            "@glib:nick": "modifier-reserved-29-mask",
                            "@glib:name": "GDK_MODIFIER_RESERVED_29_MASK",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdktypes.h",
                                "@line": "208",
                                "#text": "A reserved bit flag; do not use in your own code"
                            }
                        },
                        {
                            "@name": "release_mask",
                            "@value": "1073741824",
                            "@c:identifier": "GDK_RELEASE_MASK",
                            "@glib:nick": "release-mask",
                            "@glib:name": "GDK_RELEASE_MASK",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdktypes.h",
                                "@line": "209",
                                "#text": "not used in GDK itself. GTK+ uses it to differentiate\n between (keyval, modifiers) pairs from key press and release events."
                            }
                        },
                        {
                            "@name": "modifier_mask",
                            "@value": "1543512063",
                            "@c:identifier": "GDK_MODIFIER_MASK",
                            "@glib:nick": "modifier-mask",
                            "@glib:name": "GDK_MODIFIER_MASK",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdktypes.h",
                                "@line": "211",
                                "#text": "a mask covering all modifier types."
                            }
                        }
                    ]
                },
                {
                    "@name": "SeatCapabilities",
                    "@version": "3.20",
                    "@glib:type-name": "GdkSeatCapabilities",
                    "@glib:get-type": "gdk_seat_capabilities_get_type",
                    "@c:type": "GdkSeatCapabilities",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "gdk/gdkseat.h",
                        "@line": "38",
                        "#text": "Flags describing the seat capabilities."
                    },
                    "member": [
                        {
                            "@name": "none",
                            "@value": "0",
                            "@c:identifier": "GDK_SEAT_CAPABILITY_NONE",
                            "@glib:nick": "none",
                            "@glib:name": "GDK_SEAT_CAPABILITY_NONE",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkseat.h",
                                "@line": "40",
                                "#text": "No input capabilities"
                            }
                        },
                        {
                            "@name": "pointer",
                            "@value": "1",
                            "@c:identifier": "GDK_SEAT_CAPABILITY_POINTER",
                            "@glib:nick": "pointer",
                            "@glib:name": "GDK_SEAT_CAPABILITY_POINTER",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkseat.h",
                                "@line": "41",
                                "#text": "The seat has a pointer (e.g. mouse)"
                            }
                        },
                        {
                            "@name": "touch",
                            "@value": "2",
                            "@c:identifier": "GDK_SEAT_CAPABILITY_TOUCH",
                            "@glib:nick": "touch",
                            "@glib:name": "GDK_SEAT_CAPABILITY_TOUCH",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkseat.h",
                                "@line": "42",
                                "#text": "The seat has touchscreen(s) attached"
                            }
                        },
                        {
                            "@name": "tablet_stylus",
                            "@value": "4",
                            "@c:identifier": "GDK_SEAT_CAPABILITY_TABLET_STYLUS",
                            "@glib:nick": "tablet-stylus",
                            "@glib:name": "GDK_SEAT_CAPABILITY_TABLET_STYLUS",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkseat.h",
                                "@line": "43",
                                "#text": "The seat has drawing tablet(s) attached"
                            }
                        },
                        {
                            "@name": "keyboard",
                            "@value": "8",
                            "@c:identifier": "GDK_SEAT_CAPABILITY_KEYBOARD",
                            "@glib:nick": "keyboard",
                            "@glib:name": "GDK_SEAT_CAPABILITY_KEYBOARD",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkseat.h",
                                "@line": "44",
                                "#text": "The seat has keyboard(s) attached"
                            }
                        },
                        {
                            "@name": "all_pointing",
                            "@value": "7",
                            "@c:identifier": "GDK_SEAT_CAPABILITY_ALL_POINTING",
                            "@glib:nick": "all-pointing",
                            "@glib:name": "GDK_SEAT_CAPABILITY_ALL_POINTING",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkseat.h",
                                "@line": "45",
                                "#text": "The union of all pointing capabilities"
                            }
                        },
                        {
                            "@name": "all",
                            "@value": "15",
                            "@c:identifier": "GDK_SEAT_CAPABILITY_ALL",
                            "@glib:nick": "all",
                            "@glib:name": "GDK_SEAT_CAPABILITY_ALL",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkseat.h",
                                "@line": "46",
                                "#text": "The union of all capabilities"
                            }
                        }
                    ]
                },
                {
                    "@name": "WMDecoration",
                    "@glib:type-name": "GdkWMDecoration",
                    "@glib:get-type": "gdk_wm_decoration_get_type",
                    "@c:type": "GdkWMDecoration",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "gdk/gdkwindow.h",
                        "@line": "162",
                        "#text": "These are hints originally defined by the Motif toolkit.\nThe window manager can use them when determining how to decorate\nthe window. The hint must be set before mapping the window."
                    },
                    "member": [
                        {
                            "@name": "all",
                            "@value": "1",
                            "@c:identifier": "GDK_DECOR_ALL",
                            "@glib:nick": "all",
                            "@glib:name": "GDK_DECOR_ALL",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkwindow.h",
                                "@line": "164",
                                "#text": "all decorations should be applied."
                            }
                        },
                        {
                            "@name": "border",
                            "@value": "2",
                            "@c:identifier": "GDK_DECOR_BORDER",
                            "@glib:nick": "border",
                            "@glib:name": "GDK_DECOR_BORDER",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkwindow.h",
                                "@line": "165",
                                "#text": "a frame should be drawn around the window."
                            }
                        },
                        {
                            "@name": "resizeh",
                            "@value": "4",
                            "@c:identifier": "GDK_DECOR_RESIZEH",
                            "@glib:nick": "resizeh",
                            "@glib:name": "GDK_DECOR_RESIZEH",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkwindow.h",
                                "@line": "166",
                                "#text": "the frame should have resize handles."
                            }
                        },
                        {
                            "@name": "title",
                            "@value": "8",
                            "@c:identifier": "GDK_DECOR_TITLE",
                            "@glib:nick": "title",
                            "@glib:name": "GDK_DECOR_TITLE",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkwindow.h",
                                "@line": "167",
                                "#text": "a titlebar should be placed above the window."
                            }
                        },
                        {
                            "@name": "menu",
                            "@value": "16",
                            "@c:identifier": "GDK_DECOR_MENU",
                            "@glib:nick": "menu",
                            "@glib:name": "GDK_DECOR_MENU",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkwindow.h",
                                "@line": "168",
                                "#text": "a button for opening a menu should be included."
                            }
                        },
                        {
                            "@name": "minimize",
                            "@value": "32",
                            "@c:identifier": "GDK_DECOR_MINIMIZE",
                            "@glib:nick": "minimize",
                            "@glib:name": "GDK_DECOR_MINIMIZE",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkwindow.h",
                                "@line": "169",
                                "#text": "a minimize button should be included."
                            }
                        },
                        {
                            "@name": "maximize",
                            "@value": "64",
                            "@c:identifier": "GDK_DECOR_MAXIMIZE",
                            "@glib:nick": "maximize",
                            "@glib:name": "GDK_DECOR_MAXIMIZE",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkwindow.h",
                                "@line": "170",
                                "#text": "a maximize button should be included."
                            }
                        }
                    ]
                },
                {
                    "@name": "WMFunction",
                    "@glib:type-name": "GdkWMFunction",
                    "@glib:get-type": "gdk_wm_function_get_type",
                    "@c:type": "GdkWMFunction",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "gdk/gdkwindow.h",
                        "@line": "187",
                        "#text": "These are hints originally defined by the Motif toolkit. The window manager\ncan use them when determining the functions to offer for the window. The\nhint must be set before mapping the window."
                    },
                    "member": [
                        {
                            "@name": "all",
                            "@value": "1",
                            "@c:identifier": "GDK_FUNC_ALL",
                            "@glib:nick": "all",
                            "@glib:name": "GDK_FUNC_ALL",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkwindow.h",
                                "@line": "189",
                                "#text": "all functions should be offered."
                            }
                        },
                        {
                            "@name": "resize",
                            "@value": "2",
                            "@c:identifier": "GDK_FUNC_RESIZE",
                            "@glib:nick": "resize",
                            "@glib:name": "GDK_FUNC_RESIZE",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkwindow.h",
                                "@line": "190",
                                "#text": "the window should be resizable."
                            }
                        },
                        {
                            "@name": "move",
                            "@value": "4",
                            "@c:identifier": "GDK_FUNC_MOVE",
                            "@glib:nick": "move",
                            "@glib:name": "GDK_FUNC_MOVE",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkwindow.h",
                                "@line": "191",
                                "#text": "the window should be movable."
                            }
                        },
                        {
                            "@name": "minimize",
                            "@value": "8",
                            "@c:identifier": "GDK_FUNC_MINIMIZE",
                            "@glib:nick": "minimize",
                            "@glib:name": "GDK_FUNC_MINIMIZE",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkwindow.h",
                                "@line": "192",
                                "#text": "the window should be minimizable."
                            }
                        },
                        {
                            "@name": "maximize",
                            "@value": "16",
                            "@c:identifier": "GDK_FUNC_MAXIMIZE",
                            "@glib:nick": "maximize",
                            "@glib:name": "GDK_FUNC_MAXIMIZE",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkwindow.h",
                                "@line": "193",
                                "#text": "the window should be maximizable."
                            }
                        },
                        {
                            "@name": "close",
                            "@value": "32",
                            "@c:identifier": "GDK_FUNC_CLOSE",
                            "@glib:nick": "close",
                            "@glib:name": "GDK_FUNC_CLOSE",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkwindow.h",
                                "@line": "194",
                                "#text": "the window should be closable."
                            }
                        }
                    ]
                },
                {
                    "@name": "WindowAttributesType",
                    "@glib:type-name": "GdkWindowAttributesType",
                    "@glib:get-type": "gdk_window_attributes_type_get_type",
                    "@c:type": "GdkWindowAttributesType",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "gdk/gdkwindow.h",
                        "@line": "89",
                        "#text": "Used to indicate which fields in the #GdkWindowAttr struct should be honored.\nFor example, if you filled in the \u201ccursor\u201d and \u201cx\u201d fields of #GdkWindowAttr,\npass \u201c@GDK_WA_X | @GDK_WA_CURSOR\u201d to gdk_window_new(). Fields in\n#GdkWindowAttr not covered by a bit in this enum are required; for example,\nthe @width/@height, @wclass, and @window_type fields are required, they have\nno corresponding flag in #GdkWindowAttributesType."
                    },
                    "member": [
                        {
                            "@name": "title",
                            "@value": "2",
                            "@c:identifier": "GDK_WA_TITLE",
                            "@glib:nick": "title",
                            "@glib:name": "GDK_WA_TITLE",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkwindow.h",
                                "@line": "91",
                                "#text": "Honor the title field"
                            }
                        },
                        {
                            "@name": "x",
                            "@value": "4",
                            "@c:identifier": "GDK_WA_X",
                            "@glib:nick": "x",
                            "@glib:name": "GDK_WA_X",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkwindow.h",
                                "@line": "92",
                                "#text": "Honor the X coordinate field"
                            }
                        },
                        {
                            "@name": "y",
                            "@value": "8",
                            "@c:identifier": "GDK_WA_Y",
                            "@glib:nick": "y",
                            "@glib:name": "GDK_WA_Y",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkwindow.h",
                                "@line": "93",
                                "#text": "Honor the Y coordinate field"
                            }
                        },
                        {
                            "@name": "cursor",
                            "@value": "16",
                            "@c:identifier": "GDK_WA_CURSOR",
                            "@glib:nick": "cursor",
                            "@glib:name": "GDK_WA_CURSOR",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkwindow.h",
                                "@line": "94",
                                "#text": "Honor the cursor field"
                            }
                        },
                        {
                            "@name": "visual",
                            "@value": "32",
                            "@c:identifier": "GDK_WA_VISUAL",
                            "@glib:nick": "visual",
                            "@glib:name": "GDK_WA_VISUAL",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkwindow.h",
                                "@line": "95",
                                "#text": "Honor the visual field"
                            }
                        },
                        {
                            "@name": "wmclass",
                            "@value": "64",
                            "@c:identifier": "GDK_WA_WMCLASS",
                            "@glib:nick": "wmclass",
                            "@glib:name": "GDK_WA_WMCLASS",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkwindow.h",
                                "@line": "96",
                                "#text": "Honor the wmclass_class and wmclass_name fields"
                            }
                        },
                        {
                            "@name": "noredir",
                            "@value": "128",
                            "@c:identifier": "GDK_WA_NOREDIR",
                            "@glib:nick": "noredir",
                            "@glib:name": "GDK_WA_NOREDIR",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkwindow.h",
                                "@line": "97",
                                "#text": "Honor the override_redirect field"
                            }
                        },
                        {
                            "@name": "type_hint",
                            "@value": "256",
                            "@c:identifier": "GDK_WA_TYPE_HINT",
                            "@glib:nick": "type-hint",
                            "@glib:name": "GDK_WA_TYPE_HINT",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkwindow.h",
                                "@line": "98",
                                "#text": "Honor the type_hint field"
                            }
                        }
                    ]
                },
                {
                    "@name": "WindowHints",
                    "@glib:type-name": "GdkWindowHints",
                    "@glib:get-type": "gdk_window_hints_get_type",
                    "@c:type": "GdkWindowHints",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "gdk/gdkwindow.h",
                        "@line": "121",
                        "#text": "Used to indicate which fields of a #GdkGeometry struct should be paid\nattention to. Also, the presence/absence of @GDK_HINT_POS,\n@GDK_HINT_USER_POS, and @GDK_HINT_USER_SIZE is significant, though they don't\ndirectly refer to #GdkGeometry fields. @GDK_HINT_USER_POS will be set\nautomatically by #GtkWindow if you call gtk_window_move().\n@GDK_HINT_USER_POS and @GDK_HINT_USER_SIZE should be set if the user\nspecified a size/position using a --geometry command-line argument;\ngtk_window_parse_geometry() automatically sets these flags."
                    },
                    "member": [
                        {
                            "@name": "pos",
                            "@value": "1",
                            "@c:identifier": "GDK_HINT_POS",
                            "@glib:nick": "pos",
                            "@glib:name": "GDK_HINT_POS",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkwindow.h",
                                "@line": "123",
                                "#text": "indicates that the program has positioned the window"
                            }
                        },
                        {
                            "@name": "min_size",
                            "@value": "2",
                            "@c:identifier": "GDK_HINT_MIN_SIZE",
                            "@glib:nick": "min-size",
                            "@glib:name": "GDK_HINT_MIN_SIZE",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkwindow.h",
                                "@line": "124",
                                "#text": "min size fields are set"
                            }
                        },
                        {
                            "@name": "max_size",
                            "@value": "4",
                            "@c:identifier": "GDK_HINT_MAX_SIZE",
                            "@glib:nick": "max-size",
                            "@glib:name": "GDK_HINT_MAX_SIZE",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkwindow.h",
                                "@line": "125",
                                "#text": "max size fields are set"
                            }
                        },
                        {
                            "@name": "base_size",
                            "@value": "8",
                            "@c:identifier": "GDK_HINT_BASE_SIZE",
                            "@glib:nick": "base-size",
                            "@glib:name": "GDK_HINT_BASE_SIZE",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkwindow.h",
                                "@line": "126",
                                "#text": "base size fields are set"
                            }
                        },
                        {
                            "@name": "aspect",
                            "@value": "16",
                            "@c:identifier": "GDK_HINT_ASPECT",
                            "@glib:nick": "aspect",
                            "@glib:name": "GDK_HINT_ASPECT",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkwindow.h",
                                "@line": "127",
                                "#text": "aspect ratio fields are set"
                            }
                        },
                        {
                            "@name": "resize_inc",
                            "@value": "32",
                            "@c:identifier": "GDK_HINT_RESIZE_INC",
                            "@glib:nick": "resize-inc",
                            "@glib:name": "GDK_HINT_RESIZE_INC",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkwindow.h",
                                "@line": "128",
                                "#text": "resize increment fields are set"
                            }
                        },
                        {
                            "@name": "win_gravity",
                            "@value": "64",
                            "@c:identifier": "GDK_HINT_WIN_GRAVITY",
                            "@glib:nick": "win-gravity",
                            "@glib:name": "GDK_HINT_WIN_GRAVITY",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkwindow.h",
                                "@line": "129",
                                "#text": "window gravity field is set"
                            }
                        },
                        {
                            "@name": "user_pos",
                            "@value": "128",
                            "@c:identifier": "GDK_HINT_USER_POS",
                            "@glib:nick": "user-pos",
                            "@glib:name": "GDK_HINT_USER_POS",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkwindow.h",
                                "@line": "130",
                                "#text": "indicates that the window\u2019s position was explicitly set\n by the user"
                            }
                        },
                        {
                            "@name": "user_size",
                            "@value": "256",
                            "@c:identifier": "GDK_HINT_USER_SIZE",
                            "@glib:nick": "user-size",
                            "@glib:name": "GDK_HINT_USER_SIZE",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkwindow.h",
                                "@line": "132",
                                "#text": "indicates that the window\u2019s size was explicitly set by\n the user"
                            }
                        }
                    ]
                },
                {
                    "@name": "WindowState",
                    "@glib:type-name": "GdkWindowState",
                    "@glib:get-type": "gdk_window_state_get_type",
                    "@c:type": "GdkWindowState",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "gdk/gdkevents.h",
                        "@line": "512",
                        "#text": "Specifies the state of a toplevel window."
                    },
                    "member": [
                        {
                            "@name": "withdrawn",
                            "@value": "1",
                            "@c:identifier": "GDK_WINDOW_STATE_WITHDRAWN",
                            "@glib:nick": "withdrawn",
                            "@glib:name": "GDK_WINDOW_STATE_WITHDRAWN",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkevents.h",
                                "@line": "514",
                                "#text": "the window is not shown."
                            }
                        },
                        {
                            "@name": "iconified",
                            "@value": "2",
                            "@c:identifier": "GDK_WINDOW_STATE_ICONIFIED",
                            "@glib:nick": "iconified",
                            "@glib:name": "GDK_WINDOW_STATE_ICONIFIED",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkevents.h",
                                "@line": "515",
                                "#text": "the window is minimized."
                            }
                        },
                        {
                            "@name": "maximized",
                            "@value": "4",
                            "@c:identifier": "GDK_WINDOW_STATE_MAXIMIZED",
                            "@glib:nick": "maximized",
                            "@glib:name": "GDK_WINDOW_STATE_MAXIMIZED",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkevents.h",
                                "@line": "516",
                                "#text": "the window is maximized."
                            }
                        },
                        {
                            "@name": "sticky",
                            "@value": "8",
                            "@c:identifier": "GDK_WINDOW_STATE_STICKY",
                            "@glib:nick": "sticky",
                            "@glib:name": "GDK_WINDOW_STATE_STICKY",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkevents.h",
                                "@line": "517",
                                "#text": "the window is sticky."
                            }
                        },
                        {
                            "@name": "fullscreen",
                            "@value": "16",
                            "@c:identifier": "GDK_WINDOW_STATE_FULLSCREEN",
                            "@glib:nick": "fullscreen",
                            "@glib:name": "GDK_WINDOW_STATE_FULLSCREEN",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkevents.h",
                                "@line": "518",
                                "#text": "the window is maximized without\n  decorations."
                            }
                        },
                        {
                            "@name": "above",
                            "@value": "32",
                            "@c:identifier": "GDK_WINDOW_STATE_ABOVE",
                            "@glib:nick": "above",
                            "@glib:name": "GDK_WINDOW_STATE_ABOVE",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkevents.h",
                                "@line": "520",
                                "#text": "the window is kept above other windows."
                            }
                        },
                        {
                            "@name": "below",
                            "@value": "64",
                            "@c:identifier": "GDK_WINDOW_STATE_BELOW",
                            "@glib:nick": "below",
                            "@glib:name": "GDK_WINDOW_STATE_BELOW",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkevents.h",
                                "@line": "521",
                                "#text": "the window is kept below other windows."
                            }
                        },
                        {
                            "@name": "focused",
                            "@value": "128",
                            "@c:identifier": "GDK_WINDOW_STATE_FOCUSED",
                            "@glib:nick": "focused",
                            "@glib:name": "GDK_WINDOW_STATE_FOCUSED",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkevents.h",
                                "@line": "522",
                                "#text": "the window is presented as focused (with active decorations)."
                            }
                        },
                        {
                            "@name": "tiled",
                            "@value": "256",
                            "@c:identifier": "GDK_WINDOW_STATE_TILED",
                            "@glib:nick": "tiled",
                            "@glib:name": "GDK_WINDOW_STATE_TILED",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkevents.h",
                                "@line": "523",
                                "#text": "the window is in a tiled state, Since 3.10. Since 3.22.23, this\n                         is deprecated in favor of per-edge information."
                            }
                        },
                        {
                            "@name": "top_tiled",
                            "@value": "512",
                            "@c:identifier": "GDK_WINDOW_STATE_TOP_TILED",
                            "@glib:nick": "top-tiled",
                            "@glib:name": "GDK_WINDOW_STATE_TOP_TILED",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkevents.h",
                                "@line": "525",
                                "#text": "whether the top edge is tiled, Since 3.22.23"
                            }
                        },
                        {
                            "@name": "top_resizable",
                            "@value": "1024",
                            "@c:identifier": "GDK_WINDOW_STATE_TOP_RESIZABLE",
                            "@glib:nick": "top-resizable",
                            "@glib:name": "GDK_WINDOW_STATE_TOP_RESIZABLE",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkevents.h",
                                "@line": "526",
                                "#text": "whether the top edge is resizable, Since 3.22.23"
                            }
                        },
                        {
                            "@name": "right_tiled",
                            "@value": "2048",
                            "@c:identifier": "GDK_WINDOW_STATE_RIGHT_TILED",
                            "@glib:nick": "right-tiled",
                            "@glib:name": "GDK_WINDOW_STATE_RIGHT_TILED",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkevents.h",
                                "@line": "527",
                                "#text": "whether the right edge is tiled, Since 3.22.23"
                            }
                        },
                        {
                            "@name": "right_resizable",
                            "@value": "4096",
                            "@c:identifier": "GDK_WINDOW_STATE_RIGHT_RESIZABLE",
                            "@glib:nick": "right-resizable",
                            "@glib:name": "GDK_WINDOW_STATE_RIGHT_RESIZABLE",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkevents.h",
                                "@line": "528",
                                "#text": "whether the right edge is resizable, Since 3.22.23"
                            }
                        },
                        {
                            "@name": "bottom_tiled",
                            "@value": "8192",
                            "@c:identifier": "GDK_WINDOW_STATE_BOTTOM_TILED",
                            "@glib:nick": "bottom-tiled",
                            "@glib:name": "GDK_WINDOW_STATE_BOTTOM_TILED",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkevents.h",
                                "@line": "529",
                                "#text": "whether the bottom edge is tiled, Since 3.22.23"
                            }
                        },
                        {
                            "@name": "bottom_resizable",
                            "@value": "16384",
                            "@c:identifier": "GDK_WINDOW_STATE_BOTTOM_RESIZABLE",
                            "@glib:nick": "bottom-resizable",
                            "@glib:name": "GDK_WINDOW_STATE_BOTTOM_RESIZABLE",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkevents.h",
                                "@line": "530",
                                "#text": "whether the bottom edge is resizable, Since 3.22.23"
                            }
                        },
                        {
                            "@name": "left_tiled",
                            "@value": "32768",
                            "@c:identifier": "GDK_WINDOW_STATE_LEFT_TILED",
                            "@glib:nick": "left-tiled",
                            "@glib:name": "GDK_WINDOW_STATE_LEFT_TILED",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkevents.h",
                                "@line": "531",
                                "#text": "whether the left edge is tiled, Since 3.22.23"
                            }
                        },
                        {
                            "@name": "left_resizable",
                            "@value": "65536",
                            "@c:identifier": "GDK_WINDOW_STATE_LEFT_RESIZABLE",
                            "@glib:nick": "left-resizable",
                            "@glib:name": "GDK_WINDOW_STATE_LEFT_RESIZABLE",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkevents.h",
                                "@line": "532",
                                "#text": "whether the left edge is resizable, Since 3.22.23"
                            }
                        }
                    ]
                }
            ],
            "class": [
                {
                    "@name": "AppLaunchContext",
                    "@c:symbol-prefix": "app_launch_context",
                    "@c:type": "GdkAppLaunchContext",
                    "@parent": "Gio.AppLaunchContext",
                    "@glib:type-name": "GdkAppLaunchContext",
                    "@glib:get-type": "gdk_app_launch_context_get_type",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "gdk/gdkapplaunchcontext.c",
                        "@line": "28",
                        "#text": "GdkAppLaunchContext is an implementation of #GAppLaunchContext that\nhandles launching an application in a graphical context. It provides\nstartup notification and allows to launch applications on a specific\nscreen or workspace.\n\n## Launching an application\n\n|[<!-- language=\"C\" -->\nGdkAppLaunchContext *context;\n\ncontext = gdk_display_get_app_launch_context (display);\n\ngdk_app_launch_context_set_screen (screen);\ngdk_app_launch_context_set_timestamp (event->time);\n\nif (!g_app_info_launch_default_for_uri (\"http://www.gtk.org\", context, &error))\n  g_warning (\"Launching failed: %s\\n\", error->message);\n\ng_object_unref (context);\n]|"
                    },
                    "constructor": {
                        "@name": "new",
                        "@c:identifier": "gdk_app_launch_context_new",
                        "@version": "2.14",
                        "@deprecated": "1",
                        "@deprecated-version": "3.0",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "gdk/gdkapplaunchcontext.c",
                            "@line": "343",
                            "#text": "Creates a new #GdkAppLaunchContext."
                        },
                        "doc-deprecated": {
                            "@xml:space": "preserve",
                            "#text": "Use gdk_display_get_app_launch_context() instead"
                        },
                        "source-position": {
                            "@filename": "gdk/gdkapplaunchcontext.h",
                            "@line": "44"
                        },
                        "return-value": {
                            "@transfer-ownership": "full",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkapplaunchcontext.c",
                                "@line": "348",
                                "#text": "a new #GdkAppLaunchContext"
                            },
                            "type": {
                                "@name": "AppLaunchContext",
                                "@c:type": "GdkAppLaunchContext*"
                            }
                        }
                    },
                    "method": [
                        {
                            "@name": "set_desktop",
                            "@c:identifier": "gdk_app_launch_context_set_desktop",
                            "@version": "2.14",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkapplaunchcontext.c",
                                "@line": "236",
                                "#text": "Sets the workspace on which applications will be launched when\nusing this context when running under a window manager that\nsupports multiple workspaces, as described in the\n[Extended Window Manager Hints](http://www.freedesktop.org/Standards/wm-spec).\n\nWhen the workspace is not specified or @desktop is set to -1,\nit is up to the window manager to pick one, typically it will\nbe the current workspace."
                            },
                            "source-position": {
                                "@filename": "gdk/gdkapplaunchcontext.h",
                                "@line": "52"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "type": {
                                    "@name": "none",
                                    "@c:type": "void"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "context",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "gdk/gdkapplaunchcontext.c",
                                        "@line": "238",
                                        "#text": "a #GdkAppLaunchContext"
                                    },
                                    "type": {
                                        "@name": "AppLaunchContext",
                                        "@c:type": "GdkAppLaunchContext*"
                                    }
                                },
                                "parameter": {
                                    "@name": "desktop",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "gdk/gdkapplaunchcontext.c",
                                        "@line": "239",
                                        "#text": "the number of a workspace, or -1"
                                    },
                                    "type": {
                                        "@name": "gint",
                                        "@c:type": "gint"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "set_display",
                            "@c:identifier": "gdk_app_launch_context_set_display",
                            "@version": "2.14",
                            "@deprecated": "1",
                            "@deprecated-version": "3.0",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkapplaunchcontext.c",
                                "@line": "178",
                                "#text": "Sets the display on which applications will be launched when\nusing this context. See also gdk_app_launch_context_set_screen()."
                            },
                            "doc-deprecated": {
                                "@xml:space": "preserve",
                                "#text": "Use gdk_display_get_app_launch_context() instead"
                            },
                            "source-position": {
                                "@filename": "gdk/gdkapplaunchcontext.h",
                                "@line": "46"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "type": {
                                    "@name": "none",
                                    "@c:type": "void"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "context",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "gdk/gdkapplaunchcontext.c",
                                        "@line": "180",
                                        "#text": "a #GdkAppLaunchContext"
                                    },
                                    "type": {
                                        "@name": "AppLaunchContext",
                                        "@c:type": "GdkAppLaunchContext*"
                                    }
                                },
                                "parameter": {
                                    "@name": "display",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "gdk/gdkapplaunchcontext.c",
                                        "@line": "181",
                                        "#text": "a #GdkDisplay"
                                    },
                                    "type": {
                                        "@name": "Display",
                                        "@c:type": "GdkDisplay*"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "set_icon",
                            "@c:identifier": "gdk_app_launch_context_set_icon",
                            "@version": "2.14",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkapplaunchcontext.c",
                                "@line": "285",
                                "#text": "Sets the icon for applications that are launched with this\ncontext.\n\nWindow Managers can use this information when displaying startup\nnotification.\n\nSee also gdk_app_launch_context_set_icon_name()."
                            },
                            "source-position": {
                                "@filename": "gdk/gdkapplaunchcontext.h",
                                "@line": "58"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "type": {
                                    "@name": "none",
                                    "@c:type": "void"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "context",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "gdk/gdkapplaunchcontext.c",
                                        "@line": "287",
                                        "#text": "a #GdkAppLaunchContext"
                                    },
                                    "type": {
                                        "@name": "AppLaunchContext",
                                        "@c:type": "GdkAppLaunchContext*"
                                    }
                                },
                                "parameter": {
                                    "@name": "icon",
                                    "@transfer-ownership": "none",
                                    "@nullable": "1",
                                    "@allow-none": "1",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "gdk/gdkapplaunchcontext.c",
                                        "@line": "288",
                                        "#text": "a #GIcon, or %NULL"
                                    },
                                    "type": {
                                        "@name": "Gio.Icon",
                                        "@c:type": "GIcon*"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "set_icon_name",
                            "@c:identifier": "gdk_app_launch_context_set_icon_name",
                            "@version": "2.14",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkapplaunchcontext.c",
                                "@line": "317",
                                "#text": "Sets the icon for applications that are launched with this context.\nThe @icon_name will be interpreted in the same way as the Icon field\nin desktop files. See also gdk_app_launch_context_set_icon().\n\nIf both @icon and @icon_name are set, the @icon_name takes priority.\nIf neither @icon or @icon_name is set, the icon is taken from either\nthe file that is passed to launched application or from the #GAppInfo\nfor the launched application itself."
                            },
                            "source-position": {
                                "@filename": "gdk/gdkapplaunchcontext.h",
                                "@line": "61"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "type": {
                                    "@name": "none",
                                    "@c:type": "void"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "context",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "gdk/gdkapplaunchcontext.c",
                                        "@line": "319",
                                        "#text": "a #GdkAppLaunchContext"
                                    },
                                    "type": {
                                        "@name": "AppLaunchContext",
                                        "@c:type": "GdkAppLaunchContext*"
                                    }
                                },
                                "parameter": {
                                    "@name": "icon_name",
                                    "@transfer-ownership": "none",
                                    "@nullable": "1",
                                    "@allow-none": "1",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "gdk/gdkapplaunchcontext.c",
                                        "@line": "320",
                                        "#text": "an icon name, or %NULL"
                                    },
                                    "type": {
                                        "@name": "utf8",
                                        "@c:type": "const char*"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "set_screen",
                            "@c:identifier": "gdk_app_launch_context_set_screen",
                            "@version": "2.14",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkapplaunchcontext.c",
                                "@line": "200",
                                "#text": "Sets the screen on which applications will be launched when\nusing this context. See also gdk_app_launch_context_set_display().\n\nNote that, typically, a #GdkScreen represents a logical screen,\nnot a physical monitor.\n\nIf both @screen and @display are set, the @screen takes priority.\nIf neither @screen or @display are set, the default screen and\ndisplay are used."
                            },
                            "source-position": {
                                "@filename": "gdk/gdkapplaunchcontext.h",
                                "@line": "49"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "type": {
                                    "@name": "none",
                                    "@c:type": "void"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "context",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "gdk/gdkapplaunchcontext.c",
                                        "@line": "202",
                                        "#text": "a #GdkAppLaunchContext"
                                    },
                                    "type": {
                                        "@name": "AppLaunchContext",
                                        "@c:type": "GdkAppLaunchContext*"
                                    }
                                },
                                "parameter": {
                                    "@name": "screen",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "gdk/gdkapplaunchcontext.c",
                                        "@line": "203",
                                        "#text": "a #GdkScreen"
                                    },
                                    "type": {
                                        "@name": "Screen",
                                        "@c:type": "GdkScreen*"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "set_timestamp",
                            "@c:identifier": "gdk_app_launch_context_set_timestamp",
                            "@version": "2.14",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkapplaunchcontext.c",
                                "@line": "261",
                                "#text": "Sets the timestamp of @context. The timestamp should ideally\nbe taken from the event that triggered the launch.\n\nWindow managers can use this information to avoid moving the\nfocus to the newly launched application when the user is busy\ntyping in another window. This is also known as 'focus stealing\nprevention'."
                            },
                            "source-position": {
                                "@filename": "gdk/gdkapplaunchcontext.h",
                                "@line": "55"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "type": {
                                    "@name": "none",
                                    "@c:type": "void"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "context",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "gdk/gdkapplaunchcontext.c",
                                        "@line": "263",
                                        "#text": "a #GdkAppLaunchContext"
                                    },
                                    "type": {
                                        "@name": "AppLaunchContext",
                                        "@c:type": "GdkAppLaunchContext*"
                                    }
                                },
                                "parameter": {
                                    "@name": "timestamp",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "gdk/gdkapplaunchcontext.c",
                                        "@line": "264",
                                        "#text": "a timestamp"
                                    },
                                    "type": {
                                        "@name": "guint32",
                                        "@c:type": "guint32"
                                    }
                                }
                            }
                        }
                    ],
                    "property": {
                        "@name": "display",
                        "@writable": "1",
                        "@construct-only": "1",
                        "@transfer-ownership": "none",
                        "type": {
                            "@name": "Display"
                        }
                    }
                },
                {
                    "@name": "Cursor",
                    "@c:symbol-prefix": "cursor",
                    "@c:type": "GdkCursor",
                    "@parent": "GObject.Object",
                    "@abstract": "1",
                    "@glib:type-name": "GdkCursor",
                    "@glib:get-type": "gdk_cursor_get_type",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "gdk/gdkcursor.c",
                        "@line": "60",
                        "#text": "A #GdkCursor represents a cursor. Its contents are private."
                    },
                    "constructor": [
                        {
                            "@name": "new",
                            "@c:identifier": "gdk_cursor_new",
                            "@deprecated": "1",
                            "@deprecated-version": "3.16",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkcursor.c",
                                "@line": "185",
                                "#text": "Creates a new cursor from the set of builtin cursors for the default display.\nSee gdk_cursor_new_for_display().\n\nTo make the cursor invisible, use %GDK_BLANK_CURSOR."
                            },
                            "doc-deprecated": {
                                "@xml:space": "preserve",
                                "#text": "Use gdk_cursor_new_for_display() instead."
                            },
                            "source-position": {
                                "@filename": "gdk/gdkcursor.h",
                                "@line": "228"
                            },
                            "return-value": {
                                "@transfer-ownership": "full",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "gdk/gdkcursor.c",
                                    "@line": "194",
                                    "#text": "a new #GdkCursor"
                                },
                                "type": {
                                    "@name": "Cursor",
                                    "@c:type": "GdkCursor*"
                                }
                            },
                            "parameters": {
                                "parameter": {
                                    "@name": "cursor_type",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "gdk/gdkcursor.c",
                                        "@line": "187",
                                        "#text": "cursor to create"
                                    },
                                    "type": {
                                        "@name": "CursorType",
                                        "@c:type": "GdkCursorType"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "new_for_display",
                            "@c:identifier": "gdk_cursor_new_for_display",
                            "@version": "2.2",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkcursor.c",
                                "@line": "222",
                                "#text": "Creates a new cursor from the set of builtin cursors."
                            },
                            "source-position": {
                                "@filename": "gdk/gdkcursor.h",
                                "@line": "225"
                            },
                            "return-value": {
                                "@transfer-ownership": "full",
                                "@nullable": "1",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "gdk/gdkcursor.c",
                                    "@line": "229",
                                    "#text": "a new #GdkCursor, or %NULL on failure"
                                },
                                "type": {
                                    "@name": "Cursor",
                                    "@c:type": "GdkCursor*"
                                }
                            },
                            "parameters": {
                                "parameter": [
                                    {
                                        "@name": "display",
                                        "@transfer-ownership": "none",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "gdk/gdkcursor.c",
                                            "@line": "224",
                                            "#text": "the #GdkDisplay for which the cursor will be created"
                                        },
                                        "type": {
                                            "@name": "Display",
                                            "@c:type": "GdkDisplay*"
                                        }
                                    },
                                    {
                                        "@name": "cursor_type",
                                        "@transfer-ownership": "none",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "gdk/gdkcursor.c",
                                            "@line": "225",
                                            "#text": "cursor to create"
                                        },
                                        "type": {
                                            "@name": "CursorType",
                                            "@c:type": "GdkCursorType"
                                        }
                                    }
                                ]
                            }
                        },
                        {
                            "@name": "new_from_name",
                            "@c:identifier": "gdk_cursor_new_from_name",
                            "@version": "2.8",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkcursor.c",
                                "@line": "242",
                                "#text": "Creates a new cursor by looking up @name in the current cursor\ntheme.\n\nA recommended set of cursor names that will work across different\nplatforms can be found in the CSS specification:\n- \"none\"\n- ![](default_cursor.png) \"default\"\n- ![](help_cursor.png) \"help\"\n- ![](pointer_cursor.png) \"pointer\"\n- ![](context_menu_cursor.png) \"context-menu\"\n- ![](progress_cursor.png) \"progress\"\n- ![](wait_cursor.png) \"wait\"\n- ![](cell_cursor.png) \"cell\"\n- ![](crosshair_cursor.png) \"crosshair\"\n- ![](text_cursor.png) \"text\"\n- ![](vertical_text_cursor.png) \"vertical-text\"\n- ![](alias_cursor.png) \"alias\"\n- ![](copy_cursor.png) \"copy\"\n- ![](no_drop_cursor.png) \"no-drop\"\n- ![](move_cursor.png) \"move\"\n- ![](not_allowed_cursor.png) \"not-allowed\"\n- ![](grab_cursor.png) \"grab\"\n- ![](grabbing_cursor.png) \"grabbing\"\n- ![](all_scroll_cursor.png) \"all-scroll\"\n- ![](col_resize_cursor.png) \"col-resize\"\n- ![](row_resize_cursor.png) \"row-resize\"\n- ![](n_resize_cursor.png) \"n-resize\"\n- ![](e_resize_cursor.png) \"e-resize\"\n- ![](s_resize_cursor.png) \"s-resize\"\n- ![](w_resize_cursor.png) \"w-resize\"\n- ![](ne_resize_cursor.png) \"ne-resize\"\n- ![](nw_resize_cursor.png) \"nw-resize\"\n- ![](sw_resize_cursor.png) \"sw-resize\"\n- ![](se_resize_cursor.png) \"se-resize\"\n- ![](ew_resize_cursor.png) \"ew-resize\"\n- ![](ns_resize_cursor.png) \"ns-resize\"\n- ![](nesw_resize_cursor.png) \"nesw-resize\"\n- ![](nwse_resize_cursor.png) \"nwse-resize\"\n- ![](zoom_in_cursor.png) \"zoom-in\"\n- ![](zoom_out_cursor.png) \"zoom-out\""
                            },
                            "source-position": {
                                "@filename": "gdk/gdkcursor.h",
                                "@line": "240"
                            },
                            "return-value": {
                                "@transfer-ownership": "full",
                                "@nullable": "1",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "gdk/gdkcursor.c",
                                    "@line": "289",
                                    "#text": "a new #GdkCursor, or %NULL if there is no\n  cursor with the given name"
                                },
                                "type": {
                                    "@name": "Cursor",
                                    "@c:type": "GdkCursor*"
                                }
                            },
                            "parameters": {
                                "parameter": [
                                    {
                                        "@name": "display",
                                        "@transfer-ownership": "none",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "gdk/gdkcursor.c",
                                            "@line": "244",
                                            "#text": "the #GdkDisplay for which the cursor will be created"
                                        },
                                        "type": {
                                            "@name": "Display",
                                            "@c:type": "GdkDisplay*"
                                        }
                                    },
                                    {
                                        "@name": "name",
                                        "@transfer-ownership": "none",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "gdk/gdkcursor.c",
                                            "@line": "245",
                                            "#text": "the name of the cursor"
                                        },
                                        "type": {
                                            "@name": "utf8",
                                            "@c:type": "const gchar*"
                                        }
                                    }
                                ]
                            }
                        },
                        {
                            "@name": "new_from_pixbuf",
                            "@c:identifier": "gdk_cursor_new_from_pixbuf",
                            "@version": "2.4",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkcursor.c",
                                "@line": "303",
                                "#text": "Creates a new cursor from a pixbuf.\n\nNot all GDK backends support RGBA cursors. If they are not\nsupported, a monochrome approximation will be displayed.\nThe functions gdk_display_supports_cursor_alpha() and\ngdk_display_supports_cursor_color() can be used to determine\nwhether RGBA cursors are supported;\ngdk_display_get_default_cursor_size() and\ngdk_display_get_maximal_cursor_size() give information about\ncursor sizes.\n\nIf @x or @y are `-1`, the pixbuf must have\noptions named \u201cx_hot\u201d and \u201cy_hot\u201d, resp., containing\ninteger values between `0` and the width resp. height of\nthe pixbuf. (Since: 3.0)\n\nOn the X backend, support for RGBA cursors requires a\nsufficently new version of the X Render extension."
                            },
                            "source-position": {
                                "@filename": "gdk/gdkcursor.h",
                                "@line": "230"
                            },
                            "return-value": {
                                "@transfer-ownership": "full",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "gdk/gdkcursor.c",
                                    "@line": "329",
                                    "#text": "a new #GdkCursor."
                                },
                                "type": {
                                    "@name": "Cursor",
                                    "@c:type": "GdkCursor*"
                                }
                            },
                            "parameters": {
                                "parameter": [
                                    {
                                        "@name": "display",
                                        "@transfer-ownership": "none",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "gdk/gdkcursor.c",
                                            "@line": "305",
                                            "#text": "the #GdkDisplay for which the cursor will be created"
                                        },
                                        "type": {
                                            "@name": "Display",
                                            "@c:type": "GdkDisplay*"
                                        }
                                    },
                                    {
                                        "@name": "pixbuf",
                                        "@transfer-ownership": "none",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "gdk/gdkcursor.c",
                                            "@line": "306",
                                            "#text": "the #GdkPixbuf containing the cursor image"
                                        },
                                        "type": {
                                            "@name": "GdkPixbuf.Pixbuf",
                                            "@c:type": "GdkPixbuf*"
                                        }
                                    },
                                    {
                                        "@name": "x",
                                        "@transfer-ownership": "none",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "gdk/gdkcursor.c",
                                            "@line": "307",
                                            "#text": "the horizontal offset of the \u201chotspot\u201d of the cursor."
                                        },
                                        "type": {
                                            "@name": "gint",
                                            "@c:type": "gint"
                                        }
                                    },
                                    {
                                        "@name": "y",
                                        "@transfer-ownership": "none",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "gdk/gdkcursor.c",
                                            "@line": "308",
                                            "#text": "the vertical offset of the \u201chotspot\u201d of the cursor."
                                        },
                                        "type": {
                                            "@name": "gint",
                                            "@c:type": "gint"
                                        }
                                    }
                                ]
                            }
                        },
                        {
                            "@name": "new_from_surface",
                            "@c:identifier": "gdk_cursor_new_from_surface",
                            "@version": "3.10",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkcursor.c",
                                "@line": "379",
                                "#text": "Creates a new cursor from a cairo image surface.\n\nNot all GDK backends support RGBA cursors. If they are not\nsupported, a monochrome approximation will be displayed.\nThe functions gdk_display_supports_cursor_alpha() and\ngdk_display_supports_cursor_color() can be used to determine\nwhether RGBA cursors are supported;\ngdk_display_get_default_cursor_size() and\ngdk_display_get_maximal_cursor_size() give information about\ncursor sizes.\n\nOn the X backend, support for RGBA cursors requires a\nsufficently new version of the X Render extension."
                            },
                            "source-position": {
                                "@filename": "gdk/gdkcursor.h",
                                "@line": "235"
                            },
                            "return-value": {
                                "@transfer-ownership": "full",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "gdk/gdkcursor.c",
                                    "@line": "400",
                                    "#text": "a new #GdkCursor."
                                },
                                "type": {
                                    "@name": "Cursor",
                                    "@c:type": "GdkCursor*"
                                }
                            },
                            "parameters": {
                                "parameter": [
                                    {
                                        "@name": "display",
                                        "@transfer-ownership": "none",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "gdk/gdkcursor.c",
                                            "@line": "381",
                                            "#text": "the #GdkDisplay for which the cursor will be created"
                                        },
                                        "type": {
                                            "@name": "Display",
                                            "@c:type": "GdkDisplay*"
                                        }
                                    },
                                    {
                                        "@name": "surface",
                                        "@transfer-ownership": "none",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "gdk/gdkcursor.c",
                                            "@line": "382",
                                            "#text": "the cairo image surface containing the cursor pixel data"
                                        },
                                        "type": {
                                            "@name": "cairo.Surface",
                                            "@c:type": "cairo_surface_t*"
                                        }
                                    },
                                    {
                                        "@name": "x",
                                        "@transfer-ownership": "none",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "gdk/gdkcursor.c",
                                            "@line": "383",
                                            "#text": "the horizontal offset of the \u201chotspot\u201d of the cursor"
                                        },
                                        "type": {
                                            "@name": "gdouble",
                                            "@c:type": "gdouble"
                                        }
                                    },
                                    {
                                        "@name": "y",
                                        "@transfer-ownership": "none",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "gdk/gdkcursor.c",
                                            "@line": "384",
                                            "#text": "the vertical offset of the \u201chotspot\u201d of the cursor"
                                        },
                                        "type": {
                                            "@name": "gdouble",
                                            "@c:type": "gdouble"
                                        }
                                    }
                                ]
                            }
                        }
                    ],
                    "method": [
                        {
                            "@name": "get_cursor_type",
                            "@c:identifier": "gdk_cursor_get_cursor_type",
                            "@glib:get-property": "cursor-type",
                            "@version": "2.22",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkcursor.c",
                                "@line": "204",
                                "#text": "Returns the cursor type for this cursor."
                            },
                            "source-position": {
                                "@filename": "gdk/gdkcursor.h",
                                "@line": "255"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "gdk/gdkcursor.c",
                                    "@line": "210",
                                    "#text": "a #GdkCursorType"
                                },
                                "type": {
                                    "@name": "CursorType",
                                    "@c:type": "GdkCursorType"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "cursor",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "gdk/gdkcursor.c",
                                        "@line": "206",
                                        "#text": "a #GdkCursor"
                                    },
                                    "type": {
                                        "@name": "Cursor",
                                        "@c:type": "GdkCursor*"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "get_display",
                            "@c:identifier": "gdk_cursor_get_display",
                            "@glib:get-property": "display",
                            "@version": "2.2",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkcursor.c",
                                "@line": "419",
                                "#text": "Returns the display on which the #GdkCursor is defined."
                            },
                            "source-position": {
                                "@filename": "gdk/gdkcursor.h",
                                "@line": "243"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "gdk/gdkcursor.c",
                                    "@line": "425",
                                    "#text": "the #GdkDisplay associated to @cursor"
                                },
                                "type": {
                                    "@name": "Display",
                                    "@c:type": "GdkDisplay*"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "cursor",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "gdk/gdkcursor.c",
                                        "@line": "421",
                                        "#text": "a #GdkCursor."
                                    },
                                    "type": {
                                        "@name": "Cursor",
                                        "@c:type": "GdkCursor*"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "get_image",
                            "@c:identifier": "gdk_cursor_get_image",
                            "@version": "2.8",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkcursor.c",
                                "@line": "438",
                                "#text": "Returns a #GdkPixbuf with the image used to display the cursor.\n\nNote that depending on the capabilities of the windowing system and\non the cursor, GDK may not be able to obtain the image data. In this\ncase, %NULL is returned."
                            },
                            "source-position": {
                                "@filename": "gdk/gdkcursor.h",
                                "@line": "249"
                            },
                            "return-value": {
                                "@transfer-ownership": "full",
                                "@nullable": "1",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "gdk/gdkcursor.c",
                                    "@line": "448",
                                    "#text": "a #GdkPixbuf representing\n  @cursor, or %NULL"
                                },
                                "type": {
                                    "@name": "GdkPixbuf.Pixbuf",
                                    "@c:type": "GdkPixbuf*"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "cursor",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "gdk/gdkcursor.c",
                                        "@line": "440",
                                        "#text": "a #GdkCursor"
                                    },
                                    "type": {
                                        "@name": "Cursor",
                                        "@c:type": "GdkCursor*"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "get_surface",
                            "@c:identifier": "gdk_cursor_get_surface",
                            "@version": "3.10",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkcursor.c",
                                "@line": "499",
                                "#text": "Returns a cairo image surface with the image used to display the cursor.\n\nNote that depending on the capabilities of the windowing system and\non the cursor, GDK may not be able to obtain the image data. In this\ncase, %NULL is returned."
                            },
                            "source-position": {
                                "@filename": "gdk/gdkcursor.h",
                                "@line": "251"
                            },
                            "return-value": {
                                "@transfer-ownership": "full",
                                "@nullable": "1",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "gdk/gdkcursor.c",
                                    "@line": "513",
                                    "#text": "a #cairo_surface_t\n  representing @cursor, or %NULL"
                                },
                                "type": {
                                    "@name": "cairo.Surface",
                                    "@c:type": "cairo_surface_t*"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "cursor",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "gdk/gdkcursor.c",
                                        "@line": "501",
                                        "#text": "a #GdkCursor"
                                    },
                                    "type": {
                                        "@name": "Cursor",
                                        "@c:type": "GdkCursor*"
                                    }
                                },
                                "parameter": [
                                    {
                                        "@name": "x_hot",
                                        "@direction": "out",
                                        "@caller-allocates": "0",
                                        "@transfer-ownership": "full",
                                        "@optional": "1",
                                        "@allow-none": "1",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "gdk/gdkcursor.c",
                                            "@line": "502",
                                            "#text": "Location to store the hotspot x position,\n  or %NULL"
                                        },
                                        "type": {
                                            "@name": "gdouble",
                                            "@c:type": "gdouble*"
                                        }
                                    },
                                    {
                                        "@name": "y_hot",
                                        "@direction": "out",
                                        "@caller-allocates": "0",
                                        "@transfer-ownership": "full",
                                        "@optional": "1",
                                        "@allow-none": "1",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "gdk/gdkcursor.c",
                                            "@line": "504",
                                            "#text": "Location to store the hotspot y position,\n  or %NULL"
                                        },
                                        "type": {
                                            "@name": "gdouble",
                                            "@c:type": "gdouble*"
                                        }
                                    }
                                ]
                            }
                        },
                        {
                            "@name": "ref",
                            "@c:identifier": "gdk_cursor_ref",
                            "@deprecated": "1",
                            "@deprecated-version": "3.0",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkcursor.c",
                                "@line": "150",
                                "#text": "Adds a reference to @cursor."
                            },
                            "doc-deprecated": {
                                "@xml:space": "preserve",
                                "#text": "Use g_object_ref() instead"
                            },
                            "source-position": {
                                "@filename": "gdk/gdkcursor.h",
                                "@line": "245"
                            },
                            "return-value": {
                                "@transfer-ownership": "full",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "gdk/gdkcursor.c",
                                    "@line": "156",
                                    "#text": "Same @cursor that was passed in"
                                },
                                "type": {
                                    "@name": "Cursor",
                                    "@c:type": "GdkCursor*"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "cursor",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "gdk/gdkcursor.c",
                                        "@line": "152",
                                        "#text": "a #GdkCursor"
                                    },
                                    "type": {
                                        "@name": "Cursor",
                                        "@c:type": "GdkCursor*"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "unref",
                            "@c:identifier": "gdk_cursor_unref",
                            "@deprecated": "1",
                            "@deprecated-version": "3.0",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkcursor.c",
                                "@line": "168",
                                "#text": "Removes a reference from @cursor, deallocating the cursor\nif no references remain."
                            },
                            "doc-deprecated": {
                                "@xml:space": "preserve",
                                "#text": "Use g_object_unref() instead"
                            },
                            "source-position": {
                                "@filename": "gdk/gdkcursor.h",
                                "@line": "247"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "type": {
                                    "@name": "none",
                                    "@c:type": "void"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "cursor",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "gdk/gdkcursor.c",
                                        "@line": "170",
                                        "#text": "a #GdkCursor"
                                    },
                                    "type": {
                                        "@name": "Cursor",
                                        "@c:type": "GdkCursor*"
                                    }
                                }
                            }
                        }
                    ],
                    "property": [
                        {
                            "@name": "cursor-type",
                            "@writable": "1",
                            "@construct-only": "1",
                            "@transfer-ownership": "none",
                            "@getter": "get_cursor_type",
                            "type": {
                                "@name": "CursorType"
                            }
                        },
                        {
                            "@name": "display",
                            "@writable": "1",
                            "@construct-only": "1",
                            "@transfer-ownership": "none",
                            "@getter": "get_display",
                            "type": {
                                "@name": "Display"
                            }
                        }
                    ]
                },
                {
                    "@name": "Device",
                    "@c:symbol-prefix": "device",
                    "@c:type": "GdkDevice",
                    "@parent": "GObject.Object",
                    "@abstract": "1",
                    "@glib:type-name": "GdkDevice",
                    "@glib:get-type": "gdk_device_get_type",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "gdk/gdkdevice.c",
                        "@line": "31",
                        "#text": "The #GdkDevice object represents a single input device, such\nas a keyboard, a mouse, a touchpad, etc.\n\nSee the #GdkDeviceManager documentation for more information\nabout the various kinds of master and slave devices, and their\nrelationships."
                    },
                    "function": [
                        {
                            "@name": "free_history",
                            "@c:identifier": "gdk_device_free_history",
                            "@introspectable": "0",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkdevice.c",
                                "@line": "804",
                                "#text": "Frees an array of #GdkTimeCoord that was returned by gdk_device_get_history()."
                            },
                            "source-position": {
                                "@filename": "gdk/gdkdevice.h",
                                "@line": "200"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "type": {
                                    "@name": "none",
                                    "@c:type": "void"
                                }
                            },
                            "parameters": {
                                "parameter": [
                                    {
                                        "@name": "events",
                                        "@transfer-ownership": "none",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "gdk/gdkdevice.c",
                                            "@line": "806",
                                            "#text": "an array of #GdkTimeCoord."
                                        },
                                        "array": {
                                            "@length": "1",
                                            "@zero-terminated": "0",
                                            "@c:type": "GdkTimeCoord**",
                                            "type": {
                                                "@name": "TimeCoord",
                                                "@c:type": "GdkTimeCoord*"
                                            }
                                        }
                                    },
                                    {
                                        "@name": "n_events",
                                        "@transfer-ownership": "none",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "gdk/gdkdevice.c",
                                            "@line": "807",
                                            "#text": "the length of the array."
                                        },
                                        "type": {
                                            "@name": "gint",
                                            "@c:type": "gint"
                                        }
                                    }
                                ]
                            }
                        },
                        {
                            "@name": "grab_info_libgtk_only",
                            "@c:identifier": "gdk_device_grab_info_libgtk_only",
                            "@deprecated": "1",
                            "@deprecated-version": "3.16",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkdisplay.c",
                                "@line": "1462",
                                "#text": "Determines information about the current keyboard grab.\nThis is not public API and must not be used by applications."
                            },
                            "doc-deprecated": {
                                "@xml:space": "preserve",
                                "#text": "The symbol was never meant to be used outside\n  of GTK+"
                            },
                            "source-position": {
                                "@filename": "gdk/gdkdevice.h",
                                "@line": "249"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "gdk/gdkdisplay.c",
                                    "@line": "1474",
                                    "#text": "%TRUE if this application currently has the\n keyboard grabbed."
                                },
                                "type": {
                                    "@name": "gboolean",
                                    "@c:type": "gboolean"
                                }
                            },
                            "parameters": {
                                "parameter": [
                                    {
                                        "@name": "display",
                                        "@transfer-ownership": "none",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "gdk/gdkdisplay.c",
                                            "@line": "1464",
                                            "#text": "the display for which to get the grab information"
                                        },
                                        "type": {
                                            "@name": "Display",
                                            "@c:type": "GdkDisplay*"
                                        }
                                    },
                                    {
                                        "@name": "device",
                                        "@transfer-ownership": "none",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "gdk/gdkdisplay.c",
                                            "@line": "1465",
                                            "#text": "device to get the grab information from"
                                        },
                                        "type": {
                                            "@name": "Device",
                                            "@c:type": "GdkDevice*"
                                        }
                                    },
                                    {
                                        "@name": "grab_window",
                                        "@direction": "out",
                                        "@caller-allocates": "0",
                                        "@transfer-ownership": "none",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "gdk/gdkdisplay.c",
                                            "@line": "1466",
                                            "#text": "location to store current grab window"
                                        },
                                        "type": {
                                            "@name": "Window",
                                            "@c:type": "GdkWindow**"
                                        }
                                    },
                                    {
                                        "@name": "owner_events",
                                        "@direction": "out",
                                        "@caller-allocates": "0",
                                        "@transfer-ownership": "full",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "gdk/gdkdisplay.c",
                                            "@line": "1467",
                                            "#text": "location to store boolean indicating whether\n  the @owner_events flag to gdk_keyboard_grab() or\n  gdk_pointer_grab() was %TRUE."
                                        },
                                        "type": {
                                            "@name": "gboolean",
                                            "@c:type": "gboolean*"
                                        }
                                    }
                                ]
                            }
                        }
                    ],
                    "method": [
                        {
                            "@name": "get_associated_device",
                            "@c:identifier": "gdk_device_get_associated_device",
                            "@glib:get-property": "associated-device",
                            "@version": "3.0",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkdevice.c",
                                "@line": "1093",
                                "#text": "Returns the associated device to @device, if @device is of type\n%GDK_DEVICE_TYPE_MASTER, it will return the paired pointer or\nkeyboard.\n\nIf @device is of type %GDK_DEVICE_TYPE_SLAVE, it will return\nthe master device to which @device is attached to.\n\nIf @device is of type %GDK_DEVICE_TYPE_FLOATING, %NULL will be\nreturned, as there is no associated device."
                            },
                            "source-position": {
                                "@filename": "gdk/gdkdevice.h",
                                "@line": "222"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "@nullable": "1",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "gdk/gdkdevice.c",
                                    "@line": "1107",
                                    "#text": "The associated device, or\n  %NULL"
                                },
                                "type": {
                                    "@name": "Device",
                                    "@c:type": "GdkDevice*"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "device",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "gdk/gdkdevice.c",
                                        "@line": "1095",
                                        "#text": "a #GdkDevice"
                                    },
                                    "type": {
                                        "@name": "Device",
                                        "@c:type": "GdkDevice*"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "get_axes",
                            "@c:identifier": "gdk_device_get_axes",
                            "@glib:get-property": "axes",
                            "@version": "3.22",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkdevice.c",
                                "@line": "2028",
                                "#text": "Returns the axes currently available on the device."
                            },
                            "source-position": {
                                "@filename": "gdk/gdkdevice.h",
                                "@line": "266"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "type": {
                                    "@name": "AxisFlags",
                                    "@c:type": "GdkAxisFlags"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "device",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "gdk/gdkdevice.c",
                                        "@line": "2030",
                                        "#text": "a #GdkDevice"
                                    },
                                    "type": {
                                        "@name": "Device",
                                        "@c:type": "GdkDevice*"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "get_axis",
                            "@c:identifier": "gdk_device_get_axis",
                            "@introspectable": "0",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkdevice.c",
                                "@line": "1326",
                                "#text": "Interprets an array of double as axis values for a given device,\nand locates the value in the array for a given axis use."
                            },
                            "source-position": {
                                "@filename": "gdk/gdkdevice.h",
                                "@line": "214"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "gdk/gdkdevice.c",
                                    "@line": "1336",
                                    "#text": "%TRUE if the given axis use was found, otherwise %FALSE"
                                },
                                "type": {
                                    "@name": "gboolean",
                                    "@c:type": "gboolean"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "device",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "gdk/gdkdevice.c",
                                        "@line": "1328",
                                        "#text": "a #GdkDevice"
                                    },
                                    "type": {
                                        "@name": "Device",
                                        "@c:type": "GdkDevice*"
                                    }
                                },
                                "parameter": [
                                    {
                                        "@name": "axes",
                                        "@transfer-ownership": "none",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "gdk/gdkdevice.c",
                                            "@line": "1329",
                                            "#text": "pointer to an array of axes"
                                        },
                                        "array": {
                                            "@zero-terminated": "0",
                                            "@c:type": "gdouble*",
                                            "type": {
                                                "@name": "gdouble",
                                                "@c:type": "gdouble"
                                            }
                                        }
                                    },
                                    {
                                        "@name": "use",
                                        "@transfer-ownership": "none",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "gdk/gdkdevice.c",
                                            "@line": "1330",
                                            "#text": "the use to look for"
                                        },
                                        "type": {
                                            "@name": "AxisUse",
                                            "@c:type": "GdkAxisUse"
                                        }
                                    },
                                    {
                                        "@name": "value",
                                        "@direction": "out",
                                        "@caller-allocates": "0",
                                        "@transfer-ownership": "full",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "gdk/gdkdevice.c",
                                            "@line": "1331",
                                            "#text": "location to store the found value."
                                        },
                                        "type": {
                                            "@name": "gdouble",
                                            "@c:type": "gdouble*"
                                        }
                                    }
                                ]
                            }
                        },
                        {
                            "@name": "get_axis_use",
                            "@c:identifier": "gdk_device_get_axis_use",
                            "@version": "2.20",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkdevice.c",
                                "@line": "1007",
                                "#text": "Returns the axis use for @index_."
                            },
                            "source-position": {
                                "@filename": "gdk/gdkdevice.h",
                                "@line": "157"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "gdk/gdkdevice.c",
                                    "@line": "1014",
                                    "#text": "a #GdkAxisUse specifying how the axis is used."
                                },
                                "type": {
                                    "@name": "AxisUse",
                                    "@c:type": "GdkAxisUse"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "device",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "gdk/gdkdevice.c",
                                        "@line": "1009",
                                        "#text": "a pointer #GdkDevice."
                                    },
                                    "type": {
                                        "@name": "Device",
                                        "@c:type": "GdkDevice*"
                                    }
                                },
                                "parameter": {
                                    "@name": "index_",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "gdk/gdkdevice.c",
                                        "@line": "1010",
                                        "#text": "the index of the axis."
                                    },
                                    "type": {
                                        "@name": "guint",
                                        "@c:type": "guint"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "get_axis_value",
                            "@c:identifier": "gdk_device_get_axis_value",
                            "@version": "3.0",
                            "@introspectable": "0",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkdevice.c",
                                "@line": "1279",
                                "#text": "Interprets an array of double as axis values for a given device,\nand locates the value in the array for a given axis label, as returned\nby gdk_device_list_axes()"
                            },
                            "source-position": {
                                "@filename": "gdk/gdkdevice.h",
                                "@line": "208"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "gdk/gdkdevice.c",
                                    "@line": "1290",
                                    "#text": "%TRUE if the given axis use was found, otherwise %FALSE."
                                },
                                "type": {
                                    "@name": "gboolean",
                                    "@c:type": "gboolean"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "device",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "gdk/gdkdevice.c",
                                        "@line": "1281",
                                        "#text": "a pointer #GdkDevice."
                                    },
                                    "type": {
                                        "@name": "Device",
                                        "@c:type": "GdkDevice*"
                                    }
                                },
                                "parameter": [
                                    {
                                        "@name": "axes",
                                        "@transfer-ownership": "none",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "gdk/gdkdevice.c",
                                            "@line": "1282",
                                            "#text": "pointer to an array of axes"
                                        },
                                        "array": {
                                            "@zero-terminated": "0",
                                            "@c:type": "gdouble*",
                                            "type": {
                                                "@name": "gdouble",
                                                "@c:type": "gdouble"
                                            }
                                        }
                                    },
                                    {
                                        "@name": "axis_label",
                                        "@transfer-ownership": "none",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "gdk/gdkdevice.c",
                                            "@line": "1283",
                                            "#text": "#GdkAtom with the axis label."
                                        },
                                        "type": {
                                            "@name": "Atom",
                                            "@c:type": "GdkAtom"
                                        }
                                    },
                                    {
                                        "@name": "value",
                                        "@direction": "out",
                                        "@caller-allocates": "0",
                                        "@transfer-ownership": "full",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "gdk/gdkdevice.c",
                                            "@line": "1284",
                                            "#text": "location to store the found value."
                                        },
                                        "type": {
                                            "@name": "gdouble",
                                            "@c:type": "gdouble*"
                                        }
                                    }
                                ]
                            }
                        },
                        {
                            "@name": "get_device_type",
                            "@c:identifier": "gdk_device_get_device_type",
                            "@version": "3.0",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkdevice.c",
                                "@line": "1210",
                                "#text": "Returns the device type for @device."
                            },
                            "source-position": {
                                "@filename": "gdk/gdkdevice.h",
                                "@line": "227"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "gdk/gdkdevice.c",
                                    "@line": "1216",
                                    "#text": "the #GdkDeviceType for @device."
                                },
                                "type": {
                                    "@name": "DeviceType",
                                    "@c:type": "GdkDeviceType"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "device",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "gdk/gdkdevice.c",
                                        "@line": "1212",
                                        "#text": "a #GdkDevice"
                                    },
                                    "type": {
                                        "@name": "Device",
                                        "@c:type": "GdkDevice*"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "get_display",
                            "@c:identifier": "gdk_device_get_display",
                            "@glib:get-property": "display",
                            "@version": "3.0",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkdevice.c",
                                "@line": "1074",
                                "#text": "Returns the #GdkDisplay to which @device pertains."
                            },
                            "source-position": {
                                "@filename": "gdk/gdkdevice.h",
                                "@line": "219"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "gdk/gdkdevice.c",
                                    "@line": "1080",
                                    "#text": "a #GdkDisplay. This memory is owned\n         by GTK+, and must not be freed or unreffed."
                                },
                                "type": {
                                    "@name": "Display",
                                    "@c:type": "GdkDisplay*"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "device",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "gdk/gdkdevice.c",
                                        "@line": "1076",
                                        "#text": "a #GdkDevice"
                                    },
                                    "type": {
                                        "@name": "Device",
                                        "@c:type": "GdkDevice*"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "get_has_cursor",
                            "@c:identifier": "gdk_device_get_has_cursor",
                            "@glib:get-property": "has-cursor",
                            "@version": "2.20",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkdevice.c",
                                "@line": "841",
                                "#text": "Determines whether the pointer follows device motion.\nThis is not meaningful for keyboard devices, which don't have a pointer."
                            },
                            "source-position": {
                                "@filename": "gdk/gdkdevice.h",
                                "@line": "131"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "gdk/gdkdevice.c",
                                    "@line": "848",
                                    "#text": "%TRUE if the pointer follows device motion"
                                },
                                "type": {
                                    "@name": "gboolean",
                                    "@c:type": "gboolean"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "device",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "gdk/gdkdevice.c",
                                        "@line": "843",
                                        "#text": "a #GdkDevice"
                                    },
                                    "type": {
                                        "@name": "Device",
                                        "@c:type": "GdkDevice*"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "get_history",
                            "@c:identifier": "gdk_device_get_history",
                            "@introspectable": "0",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkdevice.c",
                                "@line": "736",
                                "#text": "Obtains the motion history for a pointer device; given a starting and\nending timestamp, return all events in the motion history for\nthe device in the given range of time. Some windowing systems\ndo not support motion history, in which case, %FALSE will\nbe returned. (This is not distinguishable from the case where\nmotion history is supported and no events were found.)\n\nNote that there is also gdk_window_set_event_compression() to get\nmore motion events delivered directly, independent of the windowing\nsystem."
                            },
                            "source-position": {
                                "@filename": "gdk/gdkdevice.h",
                                "@line": "193"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "gdk/gdkdevice.c",
                                    "@line": "759",
                                    "#text": "%TRUE if the windowing system supports motion history and\n at least one event was found."
                                },
                                "type": {
                                    "@name": "gboolean",
                                    "@c:type": "gboolean"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "device",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "gdk/gdkdevice.c",
                                        "@line": "738",
                                        "#text": "a #GdkDevice"
                                    },
                                    "type": {
                                        "@name": "Device",
                                        "@c:type": "GdkDevice*"
                                    }
                                },
                                "parameter": [
                                    {
                                        "@name": "window",
                                        "@transfer-ownership": "none",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "gdk/gdkdevice.c",
                                            "@line": "739",
                                            "#text": "the window with respect to which which the event coordinates will be reported"
                                        },
                                        "type": {
                                            "@name": "Window",
                                            "@c:type": "GdkWindow*"
                                        }
                                    },
                                    {
                                        "@name": "start",
                                        "@transfer-ownership": "none",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "gdk/gdkdevice.c",
                                            "@line": "740",
                                            "#text": "starting timestamp for range of events to return"
                                        },
                                        "type": {
                                            "@name": "guint32",
                                            "@c:type": "guint32"
                                        }
                                    },
                                    {
                                        "@name": "stop",
                                        "@transfer-ownership": "none",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "gdk/gdkdevice.c",
                                            "@line": "741",
                                            "#text": "ending timestamp for the range of events to return"
                                        },
                                        "type": {
                                            "@name": "guint32",
                                            "@c:type": "guint32"
                                        }
                                    },
                                    {
                                        "@name": "events",
                                        "@direction": "out",
                                        "@caller-allocates": "0",
                                        "@transfer-ownership": "full",
                                        "@optional": "1",
                                        "@allow-none": "1",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "gdk/gdkdevice.c",
                                            "@line": "742",
                                            "#text": "location to store a newly-allocated array of #GdkTimeCoord, or\n  %NULL"
                                        },
                                        "array": {
                                            "@length": "4",
                                            "@zero-terminated": "0",
                                            "@c:type": "GdkTimeCoord***",
                                            "type": {
                                                "@name": "TimeCoord",
                                                "@c:type": "GdkTimeCoord**"
                                            }
                                        }
                                    },
                                    {
                                        "@name": "n_events",
                                        "@direction": "out",
                                        "@caller-allocates": "0",
                                        "@transfer-ownership": "full",
                                        "@optional": "1",
                                        "@allow-none": "1",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "gdk/gdkdevice.c",
                                            "@line": "745",
                                            "#text": "location to store the length of\n  @events, or %NULL"
                                        },
                                        "type": {
                                            "@name": "gint",
                                            "@c:type": "gint*"
                                        }
                                    }
                                ]
                            }
                        },
                        {
                            "@name": "get_key",
                            "@c:identifier": "gdk_device_get_key",
                            "@version": "2.20",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkdevice.c",
                                "@line": "948",
                                "#text": "If @index_ has a valid keyval, this function will return %TRUE\nand fill in @keyval and @modifiers with the keyval settings."
                            },
                            "source-position": {
                                "@filename": "gdk/gdkdevice.h",
                                "@line": "146"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "gdk/gdkdevice.c",
                                    "@line": "958",
                                    "#text": "%TRUE if keyval is set for @index."
                                },
                                "type": {
                                    "@name": "gboolean",
                                    "@c:type": "gboolean"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "device",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "gdk/gdkdevice.c",
                                        "@line": "950",
                                        "#text": "a #GdkDevice."
                                    },
                                    "type": {
                                        "@name": "Device",
                                        "@c:type": "GdkDevice*"
                                    }
                                },
                                "parameter": [
                                    {
                                        "@name": "index_",
                                        "@transfer-ownership": "none",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "gdk/gdkdevice.c",
                                            "@line": "951",
                                            "#text": "the index of the macro button to get."
                                        },
                                        "type": {
                                            "@name": "guint",
                                            "@c:type": "guint"
                                        }
                                    },
                                    {
                                        "@name": "keyval",
                                        "@direction": "out",
                                        "@caller-allocates": "0",
                                        "@transfer-ownership": "full",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "gdk/gdkdevice.c",
                                            "@line": "952",
                                            "#text": "return value for the keyval."
                                        },
                                        "type": {
                                            "@name": "guint",
                                            "@c:type": "guint*"
                                        }
                                    },
                                    {
                                        "@name": "modifiers",
                                        "@direction": "out",
                                        "@caller-allocates": "0",
                                        "@transfer-ownership": "full",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "gdk/gdkdevice.c",
                                            "@line": "953",
                                            "#text": "return value for modifiers."
                                        },
                                        "type": {
                                            "@name": "ModifierType",
                                            "@c:type": "GdkModifierType*"
                                        }
                                    }
                                ]
                            }
                        },
                        {
                            "@name": "get_last_event_window",
                            "@c:identifier": "gdk_device_get_last_event_window",
                            "@version": "3.12",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkdevice.c",
                                "@line": "1901",
                                "#text": "Gets information about which window the given pointer device is in, based on events\nthat have been received so far from the display server. If another application\nhas a pointer grab, or this application has a grab with owner_events = %FALSE,\n%NULL may be returned even if the pointer is physically over one of this\napplication's windows."
                            },
                            "source-position": {
                                "@filename": "gdk/gdkdevice.h",
                                "@line": "255"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "@nullable": "1",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "gdk/gdkdevice.c",
                                    "@line": "1911",
                                    "#text": "the last window the device"
                                },
                                "type": {
                                    "@name": "Window",
                                    "@c:type": "GdkWindow*"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "device",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "gdk/gdkdevice.c",
                                        "@line": "1903",
                                        "#text": "a #GdkDevice, with a source other than %GDK_SOURCE_KEYBOARD"
                                    },
                                    "type": {
                                        "@name": "Device",
                                        "@c:type": "GdkDevice*"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "get_mode",
                            "@c:identifier": "gdk_device_get_mode",
                            "@version": "2.20",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkdevice.c",
                                "@line": "878",
                                "#text": "Determines the mode of the device."
                            },
                            "source-position": {
                                "@filename": "gdk/gdkdevice.h",
                                "@line": "138"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "gdk/gdkdevice.c",
                                    "@line": "884",
                                    "#text": "a #GdkInputSource"
                                },
                                "type": {
                                    "@name": "InputMode",
                                    "@c:type": "GdkInputMode"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "device",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "gdk/gdkdevice.c",
                                        "@line": "880",
                                        "#text": "a #GdkDevice"
                                    },
                                    "type": {
                                        "@name": "Device",
                                        "@c:type": "GdkDevice*"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "get_n_axes",
                            "@c:identifier": "gdk_device_get_n_axes",
                            "@glib:get-property": "n-axes",
                            "@version": "3.0",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkdevice.c",
                                "@line": "1228",
                                "#text": "Returns the number of axes the device currently has."
                            },
                            "source-position": {
                                "@filename": "gdk/gdkdevice.h",
                                "@line": "204"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "gdk/gdkdevice.c",
                                    "@line": "1234",
                                    "#text": "the number of axes."
                                },
                                "type": {
                                    "@name": "gint",
                                    "@c:type": "gint"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "device",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "gdk/gdkdevice.c",
                                        "@line": "1230",
                                        "#text": "a pointer #GdkDevice"
                                    },
                                    "type": {
                                        "@name": "Device",
                                        "@c:type": "GdkDevice*"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "get_n_keys",
                            "@c:identifier": "gdk_device_get_n_keys",
                            "@version": "2.24",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkdevice.c",
                                "@line": "930",
                                "#text": "Returns the number of keys the device currently has."
                            },
                            "source-position": {
                                "@filename": "gdk/gdkdevice.h",
                                "@line": "144"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "gdk/gdkdevice.c",
                                    "@line": "936",
                                    "#text": "the number of keys."
                                },
                                "type": {
                                    "@name": "gint",
                                    "@c:type": "gint"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "device",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "gdk/gdkdevice.c",
                                        "@line": "932",
                                        "#text": "a #GdkDevice"
                                    },
                                    "type": {
                                        "@name": "Device",
                                        "@c:type": "GdkDevice*"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "get_name",
                            "@c:identifier": "gdk_device_get_name",
                            "@glib:get-property": "name",
                            "@version": "2.20",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkdevice.c",
                                "@line": "823",
                                "#text": "Determines the name of the device."
                            },
                            "source-position": {
                                "@filename": "gdk/gdkdevice.h",
                                "@line": "129"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "gdk/gdkdevice.c",
                                    "@line": "829",
                                    "#text": "a name"
                                },
                                "type": {
                                    "@name": "utf8",
                                    "@c:type": "const gchar*"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "device",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "gdk/gdkdevice.c",
                                        "@line": "825",
                                        "#text": "a #GdkDevice"
                                    },
                                    "type": {
                                        "@name": "Device",
                                        "@c:type": "GdkDevice*"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "get_position",
                            "@c:identifier": "gdk_device_get_position",
                            "@version": "3.0",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkdevice.c",
                                "@line": "615",
                                "#text": "Gets the current location of @device. As a slave device\ncoordinates are those of its master pointer, This function\nmay not be called on devices of type %GDK_DEVICE_TYPE_SLAVE,\nunless there is an ongoing grab on them, see gdk_device_grab()."
                            },
                            "source-position": {
                                "@filename": "gdk/gdkdevice.h",
                                "@line": "171"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "type": {
                                    "@name": "none",
                                    "@c:type": "void"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "device",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "gdk/gdkdevice.c",
                                        "@line": "617",
                                        "#text": "pointer device to query status about."
                                    },
                                    "type": {
                                        "@name": "Device",
                                        "@c:type": "GdkDevice*"
                                    }
                                },
                                "parameter": [
                                    {
                                        "@name": "screen",
                                        "@direction": "out",
                                        "@caller-allocates": "0",
                                        "@transfer-ownership": "none",
                                        "@optional": "1",
                                        "@allow-none": "1",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "gdk/gdkdevice.c",
                                            "@line": "618",
                                            "#text": "location to store the #GdkScreen\n         the @device is on, or %NULL."
                                        },
                                        "type": {
                                            "@name": "Screen",
                                            "@c:type": "GdkScreen**"
                                        }
                                    },
                                    {
                                        "@name": "x",
                                        "@direction": "out",
                                        "@caller-allocates": "0",
                                        "@transfer-ownership": "full",
                                        "@optional": "1",
                                        "@allow-none": "1",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "gdk/gdkdevice.c",
                                            "@line": "620",
                                            "#text": "location to store root window X coordinate of @device, or %NULL."
                                        },
                                        "type": {
                                            "@name": "gint",
                                            "@c:type": "gint*"
                                        }
                                    },
                                    {
                                        "@name": "y",
                                        "@direction": "out",
                                        "@caller-allocates": "0",
                                        "@transfer-ownership": "full",
                                        "@optional": "1",
                                        "@allow-none": "1",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "gdk/gdkdevice.c",
                                            "@line": "621",
                                            "#text": "location to store root window Y coordinate of @device, or %NULL."
                                        },
                                        "type": {
                                            "@name": "gint",
                                            "@c:type": "gint*"
                                        }
                                    }
                                ]
                            }
                        },
                        {
                            "@name": "get_position_double",
                            "@c:identifier": "gdk_device_get_position_double",
                            "@version": "3.10",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkdevice.c",
                                "@line": "565",
                                "#text": "Gets the current location of @device in double precision. As a slave device's\ncoordinates are those of its master pointer, this function\nmay not be called on devices of type %GDK_DEVICE_TYPE_SLAVE,\nunless there is an ongoing grab on them. See gdk_device_grab()."
                            },
                            "source-position": {
                                "@filename": "gdk/gdkdevice.h",
                                "@line": "182"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "type": {
                                    "@name": "none",
                                    "@c:type": "void"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "device",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "gdk/gdkdevice.c",
                                        "@line": "567",
                                        "#text": "pointer device to query status about."
                                    },
                                    "type": {
                                        "@name": "Device",
                                        "@c:type": "GdkDevice*"
                                    }
                                },
                                "parameter": [
                                    {
                                        "@name": "screen",
                                        "@direction": "out",
                                        "@caller-allocates": "0",
                                        "@transfer-ownership": "none",
                                        "@optional": "1",
                                        "@allow-none": "1",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "gdk/gdkdevice.c",
                                            "@line": "568",
                                            "#text": "location to store the #GdkScreen\n         the @device is on, or %NULL."
                                        },
                                        "type": {
                                            "@name": "Screen",
                                            "@c:type": "GdkScreen**"
                                        }
                                    },
                                    {
                                        "@name": "x",
                                        "@direction": "out",
                                        "@caller-allocates": "0",
                                        "@transfer-ownership": "full",
                                        "@optional": "1",
                                        "@allow-none": "1",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "gdk/gdkdevice.c",
                                            "@line": "570",
                                            "#text": "location to store root window X coordinate of @device, or %NULL."
                                        },
                                        "type": {
                                            "@name": "gdouble",
                                            "@c:type": "gdouble*"
                                        }
                                    },
                                    {
                                        "@name": "y",
                                        "@direction": "out",
                                        "@caller-allocates": "0",
                                        "@transfer-ownership": "full",
                                        "@optional": "1",
                                        "@allow-none": "1",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "gdk/gdkdevice.c",
                                            "@line": "571",
                                            "#text": "location to store root window Y coordinate of @device, or %NULL."
                                        },
                                        "type": {
                                            "@name": "gdouble",
                                            "@c:type": "gdouble*"
                                        }
                                    }
                                ]
                            }
                        },
                        {
                            "@name": "get_product_id",
                            "@c:identifier": "gdk_device_get_product_id",
                            "@glib:get-property": "product-id",
                            "@version": "3.16",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkdevice.c",
                                "@line": "1974",
                                "#text": "Returns the product ID of this device, or %NULL if this information couldn't\nbe obtained. This ID is retrieved from the device, and is thus constant for\nit. See gdk_device_get_vendor_id() for more information."
                            },
                            "source-position": {
                                "@filename": "gdk/gdkdevice.h",
                                "@line": "260"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "@nullable": "1",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "gdk/gdkdevice.c",
                                    "@line": "1982",
                                    "#text": "the product ID, or %NULL"
                                },
                                "type": {
                                    "@name": "utf8",
                                    "@c:type": "const gchar*"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "device",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "gdk/gdkdevice.c",
                                        "@line": "1976",
                                        "#text": "a slave #GdkDevice"
                                    },
                                    "type": {
                                        "@name": "Device",
                                        "@c:type": "GdkDevice*"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "get_seat",
                            "@c:identifier": "gdk_device_get_seat",
                            "@glib:get-property": "seat",
                            "@version": "3.20",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkdevice.c",
                                "@line": "2009",
                                "#text": "Returns the #GdkSeat the device belongs to."
                            },
                            "source-position": {
                                "@filename": "gdk/gdkdevice.h",
                                "@line": "263"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "gdk/gdkdevice.c",
                                    "@line": "2015",
                                    "#text": "A #GdkSeat. This memory is owned by GTK+ and\n         must not be freed."
                                },
                                "type": {
                                    "@name": "Seat",
                                    "@c:type": "GdkSeat*"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "device",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "gdk/gdkdevice.c",
                                        "@line": "2011",
                                        "#text": "A #GdkDevice"
                                    },
                                    "type": {
                                        "@name": "Device",
                                        "@c:type": "GdkDevice*"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "get_source",
                            "@c:identifier": "gdk_device_get_source",
                            "@version": "2.20",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkdevice.c",
                                "@line": "860",
                                "#text": "Determines the type of the device."
                            },
                            "source-position": {
                                "@filename": "gdk/gdkdevice.h",
                                "@line": "135"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "gdk/gdkdevice.c",
                                    "@line": "866",
                                    "#text": "a #GdkInputSource"
                                },
                                "type": {
                                    "@name": "InputSource",
                                    "@c:type": "GdkInputSource"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "device",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "gdk/gdkdevice.c",
                                        "@line": "862",
                                        "#text": "a #GdkDevice"
                                    },
                                    "type": {
                                        "@name": "Device",
                                        "@c:type": "GdkDevice*"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "get_state",
                            "@c:identifier": "gdk_device_get_state",
                            "@introspectable": "0",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkdevice.c",
                                "@line": "536",
                                "#text": "Gets the current state of a pointer device relative to @window. As a slave\ndevice\u2019s coordinates are those of its master pointer, this\nfunction may not be called on devices of type %GDK_DEVICE_TYPE_SLAVE,\nunless there is an ongoing grab on them. See gdk_device_grab()."
                            },
                            "source-position": {
                                "@filename": "gdk/gdkdevice.h",
                                "@line": "166"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "type": {
                                    "@name": "none",
                                    "@c:type": "void"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "device",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "gdk/gdkdevice.c",
                                        "@line": "538",
                                        "#text": "a #GdkDevice."
                                    },
                                    "type": {
                                        "@name": "Device",
                                        "@c:type": "GdkDevice*"
                                    }
                                },
                                "parameter": [
                                    {
                                        "@name": "window",
                                        "@transfer-ownership": "none",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "gdk/gdkdevice.c",
                                            "@line": "539",
                                            "#text": "a #GdkWindow."
                                        },
                                        "type": {
                                            "@name": "Window",
                                            "@c:type": "GdkWindow*"
                                        }
                                    },
                                    {
                                        "@name": "axes",
                                        "@transfer-ownership": "none",
                                        "@nullable": "1",
                                        "@allow-none": "1",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "gdk/gdkdevice.c",
                                            "@line": "540",
                                            "#text": "an array of doubles to store the values of\nthe axes of @device in, or %NULL."
                                        },
                                        "array": {
                                            "@zero-terminated": "0",
                                            "@c:type": "gdouble*",
                                            "type": {
                                                "@name": "gdouble",
                                                "@c:type": "gdouble"
                                            }
                                        }
                                    },
                                    {
                                        "@name": "mask",
                                        "@direction": "out",
                                        "@caller-allocates": "0",
                                        "@transfer-ownership": "full",
                                        "@optional": "1",
                                        "@allow-none": "1",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "gdk/gdkdevice.c",
                                            "@line": "542",
                                            "#text": "location to store the modifiers, or %NULL."
                                        },
                                        "type": {
                                            "@name": "ModifierType",
                                            "@c:type": "GdkModifierType*"
                                        }
                                    }
                                ]
                            }
                        },
                        {
                            "@name": "get_vendor_id",
                            "@c:identifier": "gdk_device_get_vendor_id",
                            "@glib:get-property": "vendor-id",
                            "@version": "3.16",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkdevice.c",
                                "@line": "1930",
                                "#text": "Returns the vendor ID of this device, or %NULL if this information couldn't\nbe obtained. This ID is retrieved from the device, and is thus constant for\nit.\n\nThis function, together with gdk_device_get_product_id(), can be used to eg.\ncompose #GSettings paths to store settings for this device.\n\n|[<!-- language=\"C\" -->\n static GSettings *\n get_device_settings (GdkDevice *device)\n {\n   const gchar *vendor, *product;\n   GSettings *settings;\n   GdkDevice *device;\n   gchar *path;\n\n   vendor = gdk_device_get_vendor_id (device);\n   product = gdk_device_get_product_id (device);\n\n   path = g_strdup_printf (\"/org/example/app/devices/%s:%s/\", vendor, product);\n   settings = g_settings_new_with_path (DEVICE_SCHEMA, path);\n   g_free (path);\n\n   return settings;\n }\n]|"
                            },
                            "source-position": {
                                "@filename": "gdk/gdkdevice.h",
                                "@line": "258"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "@nullable": "1",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "gdk/gdkdevice.c",
                                    "@line": "1961",
                                    "#text": "the vendor ID, or %NULL"
                                },
                                "type": {
                                    "@name": "utf8",
                                    "@c:type": "const gchar*"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "device",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "gdk/gdkdevice.c",
                                        "@line": "1932",
                                        "#text": "a slave #GdkDevice"
                                    },
                                    "type": {
                                        "@name": "Device",
                                        "@c:type": "GdkDevice*"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "get_window_at_position",
                            "@c:identifier": "gdk_device_get_window_at_position",
                            "@version": "3.0",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkdevice.c",
                                "@line": "697",
                                "#text": "Obtains the window underneath @device, returning the location of the device in @win_x and @win_y. Returns\n%NULL if the window tree under @device is not known to GDK (for example, belongs to another application).\n\nAs a slave device coordinates are those of its master pointer, This\nfunction may not be called on devices of type %GDK_DEVICE_TYPE_SLAVE,\nunless there is an ongoing grab on them, see gdk_device_grab()."
                            },
                            "source-position": {
                                "@filename": "gdk/gdkdevice.h",
                                "@line": "177"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "@nullable": "1",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "gdk/gdkdevice.c",
                                    "@line": "712",
                                    "#text": "the #GdkWindow under the\ndevice position, or %NULL."
                                },
                                "type": {
                                    "@name": "Window",
                                    "@c:type": "GdkWindow*"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "device",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "gdk/gdkdevice.c",
                                        "@line": "699",
                                        "#text": "pointer #GdkDevice to query info to."
                                    },
                                    "type": {
                                        "@name": "Device",
                                        "@c:type": "GdkDevice*"
                                    }
                                },
                                "parameter": [
                                    {
                                        "@name": "win_x",
                                        "@direction": "out",
                                        "@caller-allocates": "0",
                                        "@transfer-ownership": "full",
                                        "@optional": "1",
                                        "@allow-none": "1",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "gdk/gdkdevice.c",
                                            "@line": "700",
                                            "#text": "return location for the X coordinate of the device location,\n        relative to the window origin, or %NULL."
                                        },
                                        "type": {
                                            "@name": "gint",
                                            "@c:type": "gint*"
                                        }
                                    },
                                    {
                                        "@name": "win_y",
                                        "@direction": "out",
                                        "@caller-allocates": "0",
                                        "@transfer-ownership": "full",
                                        "@optional": "1",
                                        "@allow-none": "1",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "gdk/gdkdevice.c",
                                            "@line": "702",
                                            "#text": "return location for the Y coordinate of the device location,\n        relative to the window origin, or %NULL."
                                        },
                                        "type": {
                                            "@name": "gint",
                                            "@c:type": "gint*"
                                        }
                                    }
                                ]
                            }
                        },
                        {
                            "@name": "get_window_at_position_double",
                            "@c:identifier": "gdk_device_get_window_at_position_double",
                            "@version": "3.0",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkdevice.c",
                                "@line": "646",
                                "#text": "Obtains the window underneath @device, returning the location of the device in @win_x and @win_y in\ndouble precision. Returns %NULL if the window tree under @device is not known to GDK (for example,\nbelongs to another application).\n\nAs a slave device coordinates are those of its master pointer, This\nfunction may not be called on devices of type %GDK_DEVICE_TYPE_SLAVE,\nunless there is an ongoing grab on them, see gdk_device_grab()."
                            },
                            "source-position": {
                                "@filename": "gdk/gdkdevice.h",
                                "@line": "188"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "@nullable": "1",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "gdk/gdkdevice.c",
                                    "@line": "662",
                                    "#text": "the #GdkWindow under the\n  device position, or %NULL."
                                },
                                "type": {
                                    "@name": "Window",
                                    "@c:type": "GdkWindow*"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "device",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "gdk/gdkdevice.c",
                                        "@line": "648",
                                        "#text": "pointer #GdkDevice to query info to."
                                    },
                                    "type": {
                                        "@name": "Device",
                                        "@c:type": "GdkDevice*"
                                    }
                                },
                                "parameter": [
                                    {
                                        "@name": "win_x",
                                        "@direction": "out",
                                        "@caller-allocates": "0",
                                        "@transfer-ownership": "full",
                                        "@optional": "1",
                                        "@allow-none": "1",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "gdk/gdkdevice.c",
                                            "@line": "649",
                                            "#text": "return location for the X coordinate of the device location,\n        relative to the window origin, or %NULL."
                                        },
                                        "type": {
                                            "@name": "gdouble",
                                            "@c:type": "gdouble*"
                                        }
                                    },
                                    {
                                        "@name": "win_y",
                                        "@direction": "out",
                                        "@caller-allocates": "0",
                                        "@transfer-ownership": "full",
                                        "@optional": "1",
                                        "@allow-none": "1",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "gdk/gdkdevice.c",
                                            "@line": "651",
                                            "#text": "return location for the Y coordinate of the device location,\n        relative to the window origin, or %NULL."
                                        },
                                        "type": {
                                            "@name": "gdouble",
                                            "@c:type": "gdouble*"
                                        }
                                    }
                                ]
                            }
                        },
                        {
                            "@name": "grab",
                            "@c:identifier": "gdk_device_grab",
                            "@version": "3.0",
                            "@deprecated": "1",
                            "@deprecated-version": "3.20.",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkdevice.c",
                                "@line": "1389",
                                "#text": "Grabs the device so that all events coming from this device are passed to\nthis application until the device is ungrabbed with gdk_device_ungrab(),\nor the window becomes unviewable. This overrides any previous grab on the device\nby this client.\n\nNote that @device and @window need to be on the same display.\n\nDevice grabs are used for operations which need complete control over the\ngiven device events (either pointer or keyboard). For example in GTK+ this\nis used for Drag and Drop operations, popup menus and such.\n\nNote that if the event mask of an X window has selected both button press\nand button release events, then a button press event will cause an automatic\npointer grab until the button is released. X does this automatically since\nmost applications expect to receive button press and release events in pairs.\nIt is equivalent to a pointer grab on the window with @owner_events set to\n%TRUE.\n\nIf you set up anything at the time you take the grab that needs to be\ncleaned up when the grab ends, you should handle the #GdkEventGrabBroken\nevents that are emitted when the grab ends unvoluntarily."
                            },
                            "doc-deprecated": {
                                "@xml:space": "preserve",
                                "#text": "Use gdk_seat_grab() instead."
                            },
                            "source-position": {
                                "@filename": "gdk/gdkdevice.h",
                                "@line": "230"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "gdk/gdkdevice.c",
                                    "@line": "1435",
                                    "#text": "%GDK_GRAB_SUCCESS if the grab was successful."
                                },
                                "type": {
                                    "@name": "GrabStatus",
                                    "@c:type": "GdkGrabStatus"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "device",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "gdk/gdkdevice.c",
                                        "@line": "1391",
                                        "#text": "a #GdkDevice. To get the device you can use gtk_get_current_event_device()\n  or gdk_event_get_device() if the grab is in reaction to an event. Also, you can use\n  gdk_device_manager_get_client_pointer() but only in code that isn\u2019t triggered by a\n  #GdkEvent and there aren\u2019t other means to get a meaningful #GdkDevice to operate on."
                                    },
                                    "type": {
                                        "@name": "Device",
                                        "@c:type": "GdkDevice*"
                                    }
                                },
                                "parameter": [
                                    {
                                        "@name": "window",
                                        "@transfer-ownership": "none",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "gdk/gdkdevice.c",
                                            "@line": "1395",
                                            "#text": "the #GdkWindow which will own the grab (the grab window)"
                                        },
                                        "type": {
                                            "@name": "Window",
                                            "@c:type": "GdkWindow*"
                                        }
                                    },
                                    {
                                        "@name": "grab_ownership",
                                        "@transfer-ownership": "none",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "gdk/gdkdevice.c",
                                            "@line": "1396",
                                            "#text": "specifies the grab ownership."
                                        },
                                        "type": {
                                            "@name": "GrabOwnership",
                                            "@c:type": "GdkGrabOwnership"
                                        }
                                    },
                                    {
                                        "@name": "owner_events",
                                        "@transfer-ownership": "none",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "gdk/gdkdevice.c",
                                            "@line": "1397",
                                            "#text": "if %FALSE then all device events are reported with respect to\n               @window and are only reported if selected by @event_mask. If\n               %TRUE then pointer events for this application are reported\n               as normal, but pointer events outside this application are\n               reported with respect to @window and only if selected by\n               @event_mask. In either mode, unreported events are discarded."
                                        },
                                        "type": {
                                            "@name": "gboolean",
                                            "@c:type": "gboolean"
                                        }
                                    },
                                    {
                                        "@name": "event_mask",
                                        "@transfer-ownership": "none",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "gdk/gdkdevice.c",
                                            "@line": "1403",
                                            "#text": "specifies the event mask, which is used in accordance with\n             @owner_events."
                                        },
                                        "type": {
                                            "@name": "EventMask",
                                            "@c:type": "GdkEventMask"
                                        }
                                    },
                                    {
                                        "@name": "cursor",
                                        "@transfer-ownership": "none",
                                        "@nullable": "1",
                                        "@allow-none": "1",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "gdk/gdkdevice.c",
                                            "@line": "1405",
                                            "#text": "the cursor to display while the grab is active if the device is\n         a pointer. If this is %NULL then the normal cursors are used for\n         @window and its descendants, and the cursor for @window is used\n         elsewhere."
                                        },
                                        "type": {
                                            "@name": "Cursor",
                                            "@c:type": "GdkCursor*"
                                        }
                                    },
                                    {
                                        "@name": "time_",
                                        "@transfer-ownership": "none",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "gdk/gdkdevice.c",
                                            "@line": "1409",
                                            "#text": "the timestamp of the event which led to this pointer grab. This\n        usually comes from the #GdkEvent struct, though %GDK_CURRENT_TIME\n        can be used if the time isn\u2019t known."
                                        },
                                        "type": {
                                            "@name": "guint32",
                                            "@c:type": "guint32"
                                        }
                                    }
                                ]
                            }
                        },
                        {
                            "@name": "list_axes",
                            "@c:identifier": "gdk_device_list_axes",
                            "@version": "3.0",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkdevice.c",
                                "@line": "1247",
                                "#text": "Returns a #GList of #GdkAtoms, containing the labels for\nthe axes that @device currently has."
                            },
                            "source-position": {
                                "@filename": "gdk/gdkdevice.h",
                                "@line": "206"
                            },
                            "return-value": {
                                "@transfer-ownership": "container",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "gdk/gdkdevice.c",
                                    "@line": "1254",
                                    "#text": "A #GList of #GdkAtoms, free with g_list_free()."
                                },
                                "type": {
                                    "@name": "GLib.List",
                                    "@c:type": "GList*",
                                    "type": {
                                        "@name": "Atom"
                                    }
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "device",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "gdk/gdkdevice.c",
                                        "@line": "1249",
                                        "#text": "a pointer #GdkDevice"
                                    },
                                    "type": {
                                        "@name": "Device",
                                        "@c:type": "GdkDevice*"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "list_slave_devices",
                            "@c:identifier": "gdk_device_list_slave_devices",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkdevice.c",
                                "@line": "1160",
                                "#text": "If the device if of type %GDK_DEVICE_TYPE_MASTER, it will return\nthe list of slave devices attached to it, otherwise it will return\n%NULL"
                            },
                            "source-position": {
                                "@filename": "gdk/gdkdevice.h",
                                "@line": "224"
                            },
                            "return-value": {
                                "@transfer-ownership": "container",
                                "@nullable": "1",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "gdk/gdkdevice.c",
                                    "@line": "1168",
                                    "#text": "the list of slave devices, or %NULL. The list must be\n         freed with g_list_free(), the contents of the list are\n         owned by GTK+ and should not be freed."
                                },
                                "type": {
                                    "@name": "GLib.List",
                                    "@c:type": "GList*",
                                    "type": {
                                        "@name": "Device"
                                    }
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "device",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "gdk/gdkdevice.c",
                                        "@line": "1162",
                                        "#text": "a #GdkDevice"
                                    },
                                    "type": {
                                        "@name": "Device",
                                        "@c:type": "GdkDevice*"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "set_axis_use",
                            "@c:identifier": "gdk_device_set_axis_use",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkdevice.c",
                                "@line": "1033",
                                "#text": "Specifies how an axis of a device is used."
                            },
                            "source-position": {
                                "@filename": "gdk/gdkdevice.h",
                                "@line": "160"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "type": {
                                    "@name": "none",
                                    "@c:type": "void"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "device",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "gdk/gdkdevice.c",
                                        "@line": "1035",
                                        "#text": "a pointer #GdkDevice"
                                    },
                                    "type": {
                                        "@name": "Device",
                                        "@c:type": "GdkDevice*"
                                    }
                                },
                                "parameter": [
                                    {
                                        "@name": "index_",
                                        "@transfer-ownership": "none",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "gdk/gdkdevice.c",
                                            "@line": "1036",
                                            "#text": "the index of the axis"
                                        },
                                        "type": {
                                            "@name": "guint",
                                            "@c:type": "guint"
                                        }
                                    },
                                    {
                                        "@name": "use",
                                        "@transfer-ownership": "none",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "gdk/gdkdevice.c",
                                            "@line": "1037",
                                            "#text": "specifies how the axis is used"
                                        },
                                        "type": {
                                            "@name": "AxisUse",
                                            "@c:type": "GdkAxisUse"
                                        }
                                    }
                                ]
                            }
                        },
                        {
                            "@name": "set_key",
                            "@c:identifier": "gdk_device_set_key",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkdevice.c",
                                "@line": "984",
                                "#text": "Specifies the X key event to generate when a macro button of a device\nis pressed."
                            },
                            "source-position": {
                                "@filename": "gdk/gdkdevice.h",
                                "@line": "151"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "type": {
                                    "@name": "none",
                                    "@c:type": "void"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "device",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "gdk/gdkdevice.c",
                                        "@line": "986",
                                        "#text": "a #GdkDevice"
                                    },
                                    "type": {
                                        "@name": "Device",
                                        "@c:type": "GdkDevice*"
                                    }
                                },
                                "parameter": [
                                    {
                                        "@name": "index_",
                                        "@transfer-ownership": "none",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "gdk/gdkdevice.c",
                                            "@line": "987",
                                            "#text": "the index of the macro button to set"
                                        },
                                        "type": {
                                            "@name": "guint",
                                            "@c:type": "guint"
                                        }
                                    },
                                    {
                                        "@name": "keyval",
                                        "@transfer-ownership": "none",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "gdk/gdkdevice.c",
                                            "@line": "988",
                                            "#text": "the keyval to generate"
                                        },
                                        "type": {
                                            "@name": "guint",
                                            "@c:type": "guint"
                                        }
                                    },
                                    {
                                        "@name": "modifiers",
                                        "@transfer-ownership": "none",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "gdk/gdkdevice.c",
                                            "@line": "989",
                                            "#text": "the modifiers to set"
                                        },
                                        "type": {
                                            "@name": "ModifierType",
                                            "@c:type": "GdkModifierType"
                                        }
                                    }
                                ]
                            }
                        },
                        {
                            "@name": "set_mode",
                            "@c:identifier": "gdk_device_set_mode",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkdevice.c",
                                "@line": "896",
                                "#text": "Sets a the mode of an input device. The mode controls if the\ndevice is active and whether the device\u2019s range is mapped to the\nentire screen or to a single window.\n\nNote: This is only meaningful for floating devices, master devices (and\nslaves connected to these) drive the pointer cursor, which is not limited\nby the input mode."
                            },
                            "source-position": {
                                "@filename": "gdk/gdkdevice.h",
                                "@line": "140"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "gdk/gdkdevice.c",
                                    "@line": "909",
                                    "#text": "%TRUE if the mode was successfully changed."
                                },
                                "type": {
                                    "@name": "gboolean",
                                    "@c:type": "gboolean"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "device",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "gdk/gdkdevice.c",
                                        "@line": "898",
                                        "#text": "a #GdkDevice."
                                    },
                                    "type": {
                                        "@name": "Device",
                                        "@c:type": "GdkDevice*"
                                    }
                                },
                                "parameter": {
                                    "@name": "mode",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "gdk/gdkdevice.c",
                                        "@line": "899",
                                        "#text": "the input mode."
                                    },
                                    "type": {
                                        "@name": "InputMode",
                                        "@c:type": "GdkInputMode"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "ungrab",
                            "@c:identifier": "gdk_device_ungrab",
                            "@version": "3.0",
                            "@deprecated": "1",
                            "@deprecated-version": "3.20.",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkdevice.c",
                                "@line": "1505",
                                "#text": "Release any grab on @device."
                            },
                            "doc-deprecated": {
                                "@xml:space": "preserve",
                                "#text": "Use gdk_seat_ungrab() instead."
                            },
                            "source-position": {
                                "@filename": "gdk/gdkdevice.h",
                                "@line": "239"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "type": {
                                    "@name": "none",
                                    "@c:type": "void"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "device",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "gdk/gdkdevice.c",
                                        "@line": "1507",
                                        "#text": "a #GdkDevice"
                                    },
                                    "type": {
                                        "@name": "Device",
                                        "@c:type": "GdkDevice*"
                                    }
                                },
                                "parameter": {
                                    "@name": "time_",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "gdk/gdkdevice.c",
                                        "@line": "1508",
                                        "#text": "a timestap (e.g. %GDK_CURRENT_TIME)."
                                    },
                                    "type": {
                                        "@name": "guint32",
                                        "@c:type": "guint32"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "warp",
                            "@c:identifier": "gdk_device_warp",
                            "@version": "3.0",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkdevice.c",
                                "@line": "1525",
                                "#text": "Warps @device in @display to the point @x,@y on\nthe screen @screen, unless the device is confined\nto a window by a grab, in which case it will be moved\nas far as allowed by the grab. Warping the pointer\ncreates events as if the user had moved the mouse\ninstantaneously to the destination.\n\nNote that the pointer should normally be under the\ncontrol of the user. This function was added to cover\nsome rare use cases like keyboard navigation support\nfor the color picker in the #GtkColorSelectionDialog."
                            },
                            "source-position": {
                                "@filename": "gdk/gdkdevice.h",
                                "@line": "243"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "type": {
                                    "@name": "none",
                                    "@c:type": "void"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "device",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "gdk/gdkdevice.c",
                                        "@line": "1527",
                                        "#text": "the device to warp."
                                    },
                                    "type": {
                                        "@name": "Device",
                                        "@c:type": "GdkDevice*"
                                    }
                                },
                                "parameter": [
                                    {
                                        "@name": "screen",
                                        "@transfer-ownership": "none",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "gdk/gdkdevice.c",
                                            "@line": "1528",
                                            "#text": "the screen to warp @device to."
                                        },
                                        "type": {
                                            "@name": "Screen",
                                            "@c:type": "GdkScreen*"
                                        }
                                    },
                                    {
                                        "@name": "x",
                                        "@transfer-ownership": "none",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "gdk/gdkdevice.c",
                                            "@line": "1529",
                                            "#text": "the X coordinate of the destination."
                                        },
                                        "type": {
                                            "@name": "gint",
                                            "@c:type": "gint"
                                        }
                                    },
                                    {
                                        "@name": "y",
                                        "@transfer-ownership": "none",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "gdk/gdkdevice.c",
                                            "@line": "1530",
                                            "#text": "the Y coordinate of the destination."
                                        },
                                        "type": {
                                            "@name": "gint",
                                            "@c:type": "gint"
                                        }
                                    }
                                ]
                            }
                        }
                    ],
                    "property": [
                        {
                            "@name": "associated-device",
                            "@version": "3.0",
                            "@transfer-ownership": "none",
                            "@getter": "get_associated_device",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkdevice.c",
                                "@line": "173",
                                "#text": "Associated pointer or keyboard with this device, if any. Devices of type #GDK_DEVICE_TYPE_MASTER\nalways come in keyboard/pointer pairs. Other device types will have a %NULL associated device."
                            },
                            "type": {
                                "@name": "Device"
                            }
                        },
                        {
                            "@name": "axes",
                            "@version": "3.22",
                            "@transfer-ownership": "none",
                            "@getter": "get_axes",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkdevice.c",
                                "@line": "312",
                                "#text": "The axes currently available for this device."
                            },
                            "type": {
                                "@name": "AxisFlags"
                            }
                        },
                        {
                            "@name": "device-manager",
                            "@version": "3.0",
                            "@writable": "1",
                            "@construct-only": "1",
                            "@transfer-ownership": "none",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkdevice.c",
                                "@line": "129",
                                "#text": "The #GdkDeviceManager the #GdkDevice pertains to."
                            },
                            "type": {
                                "@name": "DeviceManager"
                            }
                        },
                        {
                            "@name": "display",
                            "@version": "3.0",
                            "@writable": "1",
                            "@construct-only": "1",
                            "@transfer-ownership": "none",
                            "@getter": "get_display",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkdevice.c",
                                "@line": "114",
                                "#text": "The #GdkDisplay the #GdkDevice pertains to."
                            },
                            "type": {
                                "@name": "Display"
                            }
                        },
                        {
                            "@name": "has-cursor",
                            "@version": "3.0",
                            "@writable": "1",
                            "@construct-only": "1",
                            "@transfer-ownership": "none",
                            "@getter": "get_has_cursor",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkdevice.c",
                                "@line": "219",
                                "#text": "Whether the device is represented by a cursor on the screen. Devices of type\n%GDK_DEVICE_TYPE_MASTER will have %TRUE here."
                            },
                            "type": {
                                "@name": "gboolean",
                                "@c:type": "gboolean"
                            }
                        },
                        {
                            "@name": "input-mode",
                            "@writable": "1",
                            "@transfer-ownership": "none",
                            "type": {
                                "@name": "InputMode"
                            }
                        },
                        {
                            "@name": "input-source",
                            "@version": "3.0",
                            "@writable": "1",
                            "@construct-only": "1",
                            "@transfer-ownership": "none",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkdevice.c",
                                "@line": "188",
                                "#text": "Source type for the device."
                            },
                            "type": {
                                "@name": "InputSource"
                            }
                        },
                        {
                            "@name": "n-axes",
                            "@version": "3.0",
                            "@transfer-ownership": "none",
                            "@getter": "get_n_axes",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkdevice.c",
                                "@line": "235",
                                "#text": "Number of axes in the device."
                            },
                            "type": {
                                "@name": "guint",
                                "@c:type": "guint"
                            }
                        },
                        {
                            "@name": "name",
                            "@version": "3.0",
                            "@writable": "1",
                            "@construct-only": "1",
                            "@transfer-ownership": "none",
                            "@getter": "get_name",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkdevice.c",
                                "@line": "143",
                                "#text": "The device name."
                            },
                            "type": {
                                "@name": "utf8",
                                "@c:type": "gchar*"
                            }
                        },
                        {
                            "@name": "num-touches",
                            "@version": "3.20",
                            "@writable": "1",
                            "@construct-only": "1",
                            "@transfer-ownership": "none",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkdevice.c",
                                "@line": "295",
                                "#text": "The maximal number of concurrent touches on a touch device.\nWill be 0 if the device is not a touch device or if the number\nof touches is unknown."
                            },
                            "type": {
                                "@name": "guint",
                                "@c:type": "guint"
                            }
                        },
                        {
                            "@name": "product-id",
                            "@version": "3.16",
                            "@writable": "1",
                            "@construct-only": "1",
                            "@transfer-ownership": "none",
                            "@getter": "get_product_id",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkdevice.c",
                                "@line": "265",
                                "#text": "Product ID of this device, see gdk_device_get_product_id()."
                            },
                            "type": {
                                "@name": "utf8",
                                "@c:type": "gchar*"
                            }
                        },
                        {
                            "@name": "seat",
                            "@version": "3.20",
                            "@writable": "1",
                            "@transfer-ownership": "none",
                            "@getter": "get_seat",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkdevice.c",
                                "@line": "280",
                                "#text": "#GdkSeat of this device."
                            },
                            "type": {
                                "@name": "Seat"
                            }
                        },
                        {
                            "@name": "tool",
                            "@transfer-ownership": "none",
                            "type": {
                                "@name": "DeviceTool"
                            }
                        },
                        {
                            "@name": "type",
                            "@version": "3.0",
                            "@writable": "1",
                            "@construct-only": "1",
                            "@transfer-ownership": "none",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkdevice.c",
                                "@line": "157",
                                "#text": "Device role in the device manager."
                            },
                            "type": {
                                "@name": "DeviceType"
                            }
                        },
                        {
                            "@name": "vendor-id",
                            "@version": "3.16",
                            "@writable": "1",
                            "@construct-only": "1",
                            "@transfer-ownership": "none",
                            "@getter": "get_vendor_id",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkdevice.c",
                                "@line": "250",
                                "#text": "Vendor ID of this device, see gdk_device_get_vendor_id()."
                            },
                            "type": {
                                "@name": "utf8",
                                "@c:type": "gchar*"
                            }
                        }
                    ],
                    "glib:signal": [
                        {
                            "@name": "changed",
                            "@when": "last",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkdevice.c",
                                "@line": "335",
                                "#text": "The ::changed signal is emitted either when the #GdkDevice\nhas changed the number of either axes or keys. For example\nIn X this will normally happen when the slave device routing\nevents through the master device changes (for example, user\nswitches from the USB mouse to a tablet), in that case the\nmaster device will change to reflect the new slave device\naxes and keys."
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "type": {
                                    "@name": "none",
                                    "@c:type": "void"
                                }
                            }
                        },
                        {
                            "@name": "tool-changed",
                            "@when": "last",
                            "@version": "3.22",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkdevice.c",
                                "@line": "355",
                                "#text": "The ::tool-changed signal is emitted on pen/eraser\n#GdkDevices whenever tools enter or leave proximity."
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "type": {
                                    "@name": "none",
                                    "@c:type": "void"
                                }
                            },
                            "parameters": {
                                "parameter": {
                                    "@name": "tool",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "gdk/gdkdevice.c",
                                        "@line": "358",
                                        "#text": "The new current tool"
                                    },
                                    "type": {
                                        "@name": "DeviceTool"
                                    }
                                }
                            }
                        }
                    ]
                },
                {
                    "@name": "DeviceManager",
                    "@c:symbol-prefix": "device_manager",
                    "@c:type": "GdkDeviceManager",
                    "@parent": "GObject.Object",
                    "@abstract": "1",
                    "@glib:type-name": "GdkDeviceManager",
                    "@glib:get-type": "gdk_device_manager_get_type",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "gdk/gdkdevicemanager.c",
                        "@line": "25",
                        "#text": "In addition to a single pointer and keyboard for user interface input,\nGDK contains support for a variety of input devices, including graphics\ntablets, touchscreens and multiple pointers/keyboards interacting\nsimultaneously with the user interface. Such input devices often have\nadditional features, such as sub-pixel positioning information and\nadditional device-dependent information.\n\nIn order to query the device hierarchy and be aware of changes in the\ndevice hierarchy (such as virtual devices being created or removed, or\nphysical devices being plugged or unplugged), GDK provides\n#GdkDeviceManager.\n\nBy default, and if the platform supports it, GDK is aware of multiple\nkeyboard/pointer pairs and multitouch devices. This behavior can be\nchanged by calling gdk_disable_multidevice() before gdk_display_open().\nThere should rarely be a need to do that though, since GDK defaults\nto a compatibility mode in which it will emit just one enter/leave\nevent pair for all devices on a window. To enable per-device\nenter/leave events and other multi-pointer interaction features,\ngdk_window_set_support_multidevice() must be called on\n#GdkWindows (or gtk_widget_set_support_multidevice() on widgets).\nwindow. See the gdk_window_set_support_multidevice() documentation\nfor more information.\n\nOn X11, multi-device support is implemented through XInput 2.\nUnless gdk_disable_multidevice() is called, the XInput 2\n#GdkDeviceManager implementation will be used as the input source.\nOtherwise either the core or XInput 1 implementations will be used.\n\nFor simple applications that don\u2019t have any special interest in\ninput devices, the so-called \u201cclient pointer\u201d\nprovides a reasonable approximation to a simple setup with a single\npointer and keyboard. The device that has been set as the client\npointer can be accessed via gdk_device_manager_get_client_pointer().\n\nConceptually, in multidevice mode there are 2 device types. Virtual\ndevices (or master devices) are represented by the pointer cursors\nand keyboard foci that are seen on the screen. Physical devices (or\nslave devices) represent the hardware that is controlling the virtual\ndevices, and thus have no visible cursor on the screen.\n\nVirtual devices are always paired, so there is a keyboard device for every\npointer device. Associations between devices may be inspected through\ngdk_device_get_associated_device().\n\nThere may be several virtual devices, and several physical devices could\nbe controlling each of these virtual devices. Physical devices may also\nbe \u201cfloating\u201d, which means they are not attached to any virtual device.\n\n# Master and slave devices\n\n|[\ncarlos@sacarino:~$ xinput list\n\u23a1 Virtual core pointer                          id=2    [master pointer  (3)]\n\u239c   \u21b3 Virtual core XTEST pointer                id=4    [slave  pointer  (2)]\n\u239c   \u21b3 Wacom ISDv4 E6 Pen stylus                 id=10   [slave  pointer  (2)]\n\u239c   \u21b3 Wacom ISDv4 E6 Finger touch               id=11   [slave  pointer  (2)]\n\u239c   \u21b3 SynPS/2 Synaptics TouchPad                id=13   [slave  pointer  (2)]\n\u239c   \u21b3 TPPS/2 IBM TrackPoint                     id=14   [slave  pointer  (2)]\n\u239c   \u21b3 Wacom ISDv4 E6 Pen eraser                 id=16   [slave  pointer  (2)]\n\u23a3 Virtual core keyboard                         id=3    [master keyboard (2)]\n    \u21b3 Virtual core XTEST keyboard               id=5    [slave  keyboard (3)]\n    \u21b3 Power Button                              id=6    [slave  keyboard (3)]\n    \u21b3 Video Bus                                 id=7    [slave  keyboard (3)]\n    \u21b3 Sleep Button                              id=8    [slave  keyboard (3)]\n    \u21b3 Integrated Camera                         id=9    [slave  keyboard (3)]\n    \u21b3 AT Translated Set 2 keyboard              id=12   [slave  keyboard (3)]\n    \u21b3 ThinkPad Extra Buttons                    id=15   [slave  keyboard (3)]\n]|\n\nBy default, GDK will automatically listen for events coming from all\nmaster devices, setting the #GdkDevice for all events coming from input\ndevices. Events containing device information are #GDK_MOTION_NOTIFY,\n#GDK_BUTTON_PRESS, #GDK_2BUTTON_PRESS, #GDK_3BUTTON_PRESS,\n#GDK_BUTTON_RELEASE, #GDK_SCROLL, #GDK_KEY_PRESS, #GDK_KEY_RELEASE,\n#GDK_ENTER_NOTIFY, #GDK_LEAVE_NOTIFY, #GDK_FOCUS_CHANGE,\n#GDK_PROXIMITY_IN, #GDK_PROXIMITY_OUT, #GDK_DRAG_ENTER, #GDK_DRAG_LEAVE,\n#GDK_DRAG_MOTION, #GDK_DRAG_STATUS, #GDK_DROP_START, #GDK_DROP_FINISHED\nand #GDK_GRAB_BROKEN. When dealing with an event on a master device,\nit is possible to get the source (slave) device that the event originated\nfrom via gdk_event_get_source_device().\n\nOn a standard session, all physical devices are connected by default to\nthe \"Virtual Core Pointer/Keyboard\" master devices, hence routing all events\nthrough these. This behavior is only modified by device grabs, where the\nslave device is temporarily detached for as long as the grab is held, and\nmore permanently by user modifications to the device hierarchy.\n\nOn certain application specific setups, it may make sense\nto detach a physical device from its master pointer, and mapping it to\nan specific window. This can be achieved by the combination of\ngdk_device_grab() and gdk_device_set_mode().\n\nIn order to listen for events coming from devices\nother than a virtual device, gdk_window_set_device_events() must be\ncalled. Generally, this function can be used to modify the event mask\nfor any given device.\n\nInput devices may also provide additional information besides X/Y.\nFor example, graphics tablets may also provide pressure and X/Y tilt\ninformation. This information is device-dependent, and may be\nqueried through gdk_device_get_axis(). In multidevice mode, virtual\ndevices will change axes in order to always represent the physical\ndevice that is routing events through it. Whenever the physical device\nchanges, the #GdkDevice:n-axes property will be notified, and\ngdk_device_list_axes() will return the new device axes.\n\nDevices may also have associated \u201ckeys\u201d or\nmacro buttons. Such keys can be globally set to map into normal X\nkeyboard events. The mapping is set using gdk_device_set_key().\n\nIn GTK+ 3.20, a new #GdkSeat object has been introduced that\nsupersedes #GdkDeviceManager and should be preferred in newly\nwritten code."
                    },
                    "method": [
                        {
                            "@name": "get_client_pointer",
                            "@c:identifier": "gdk_device_manager_get_client_pointer",
                            "@version": "3.0",
                            "@deprecated": "1",
                            "@deprecated-version": "3.20",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkdevicemanager.c",
                                "@line": "343",
                                "#text": "Returns the client pointer, that is, the master pointer that acts as the core pointer\nfor this application. In X11, window managers may change this depending on the interaction\npattern under the presence of several pointers.\n\nYou should use this function seldomly, only in code that isn\u2019t triggered by a #GdkEvent\nand there aren\u2019t other means to get a meaningful #GdkDevice to operate on."
                            },
                            "doc-deprecated": {
                                "@xml:space": "preserve",
                                "#text": "Use gdk_seat_get_pointer() instead."
                            },
                            "source-position": {
                                "@filename": "gdk/gdkdevicemanager.h",
                                "@line": "44"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "gdk/gdkdevicemanager.c",
                                    "@line": "354",
                                    "#text": "The client pointer. This memory is\n         owned by GDK and must not be freed or unreferenced."
                                },
                                "type": {
                                    "@name": "Device",
                                    "@c:type": "GdkDevice*"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "device_manager",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "gdk/gdkdevicemanager.c",
                                        "@line": "345",
                                        "#text": "a #GdkDeviceManager"
                                    },
                                    "type": {
                                        "@name": "DeviceManager",
                                        "@c:type": "GdkDeviceManager*"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "get_display",
                            "@c:identifier": "gdk_device_manager_get_display",
                            "@glib:get-property": "display",
                            "@version": "3.0",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkdevicemanager.c",
                                "@line": "296",
                                "#text": "Gets the #GdkDisplay associated to @device_manager."
                            },
                            "source-position": {
                                "@filename": "gdk/gdkdevicemanager.h",
                                "@line": "39"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "@nullable": "1",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "gdk/gdkdevicemanager.c",
                                    "@line": "302",
                                    "#text": "the #GdkDisplay to which\n         @device_manager is associated to, or %NULL. This memory is\n         owned by GDK and must not be freed or unreferenced."
                                },
                                "type": {
                                    "@name": "Display",
                                    "@c:type": "GdkDisplay*"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "device_manager",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "gdk/gdkdevicemanager.c",
                                        "@line": "298",
                                        "#text": "a #GdkDeviceManager"
                                    },
                                    "type": {
                                        "@name": "DeviceManager",
                                        "@c:type": "GdkDeviceManager*"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "list_devices",
                            "@c:identifier": "gdk_device_manager_list_devices",
                            "@version": "3.0",
                            "@deprecated": "1",
                            "@deprecated-version": "3.20",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkdevicemanager.c",
                                "@line": "316",
                                "#text": "Returns the list of devices of type @type currently attached to\n@device_manager."
                            },
                            "doc-deprecated": {
                                "@xml:space": "preserve",
                                "#text": ", use gdk_seat_get_pointer(), gdk_seat_get_keyboard()\n            and gdk_seat_get_slaves() instead."
                            },
                            "source-position": {
                                "@filename": "gdk/gdkdevicemanager.h",
                                "@line": "41"
                            },
                            "return-value": {
                                "@transfer-ownership": "container",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "gdk/gdkdevicemanager.c",
                                    "@line": "324",
                                    "#text": "a list of\n         #GdkDevices. The returned list must be\n         freed with g_list_free (). The list elements are owned by\n         GTK+ and must not be freed or unreffed."
                                },
                                "type": {
                                    "@name": "GLib.List",
                                    "@c:type": "GList*",
                                    "type": {
                                        "@name": "Device"
                                    }
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "device_manager",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "gdk/gdkdevicemanager.c",
                                        "@line": "318",
                                        "#text": "a #GdkDeviceManager"
                                    },
                                    "type": {
                                        "@name": "DeviceManager",
                                        "@c:type": "GdkDeviceManager*"
                                    }
                                },
                                "parameter": {
                                    "@name": "type",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "gdk/gdkdevicemanager.c",
                                        "@line": "319",
                                        "#text": "device type to get."
                                    },
                                    "type": {
                                        "@name": "DeviceType",
                                        "@c:type": "GdkDeviceType"
                                    }
                                }
                            }
                        }
                    ],
                    "property": {
                        "@name": "display",
                        "@writable": "1",
                        "@construct-only": "1",
                        "@transfer-ownership": "none",
                        "@getter": "get_display",
                        "type": {
                            "@name": "Display"
                        }
                    },
                    "glib:signal": [
                        {
                            "@name": "device-added",
                            "@when": "last",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkdevicemanager.c",
                                "@line": "191",
                                "#text": "The ::device-added signal is emitted either when a new master\npointer is created, or when a slave (Hardware) input device\nis plugged in."
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "type": {
                                    "@name": "none",
                                    "@c:type": "void"
                                }
                            },
                            "parameters": {
                                "parameter": {
                                    "@name": "device",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "gdk/gdkdevicemanager.c",
                                        "@line": "194",
                                        "#text": "the newly added #GdkDevice."
                                    },
                                    "type": {
                                        "@name": "Device"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "device-changed",
                            "@when": "last",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkdevicemanager.c",
                                "@line": "229",
                                "#text": "The ::device-changed signal is emitted whenever a device\nhas changed in the hierarchy, either slave devices being\ndisconnected from their master device or connected to\nanother one, or master devices being added or removed\na slave device.\n\nIf a slave device is detached from all master devices\n(gdk_device_get_associated_device() returns %NULL), its\n#GdkDeviceType will change to %GDK_DEVICE_TYPE_FLOATING,\nif it's attached, it will change to %GDK_DEVICE_TYPE_SLAVE."
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "type": {
                                    "@name": "none",
                                    "@c:type": "void"
                                }
                            },
                            "parameters": {
                                "parameter": {
                                    "@name": "device",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "gdk/gdkdevicemanager.c",
                                        "@line": "232",
                                        "#text": "the #GdkDevice that changed."
                                    },
                                    "type": {
                                        "@name": "Device"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "device-removed",
                            "@when": "last",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkdevicemanager.c",
                                "@line": "210",
                                "#text": "The ::device-removed signal is emitted either when a master\npointer is removed, or when a slave (Hardware) input device\nis unplugged."
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "type": {
                                    "@name": "none",
                                    "@c:type": "void"
                                }
                            },
                            "parameters": {
                                "parameter": {
                                    "@name": "device",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "gdk/gdkdevicemanager.c",
                                        "@line": "213",
                                        "#text": "the just removed #GdkDevice."
                                    },
                                    "type": {
                                        "@name": "Device"
                                    }
                                }
                            }
                        }
                    ]
                },
                {
                    "@name": "DeviceTool",
                    "@c:symbol-prefix": "device_tool",
                    "@c:type": "GdkDeviceTool",
                    "@parent": "GObject.Object",
                    "@glib:type-name": "GdkDeviceTool",
                    "@glib:get-type": "gdk_device_tool_get_type",
                    "method": [
                        {
                            "@name": "get_hardware_id",
                            "@c:identifier": "gdk_device_tool_get_hardware_id",
                            "@glib:get-property": "hardware-id",
                            "@version": "3.22",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkdevicetool.c",
                                "@line": "171",
                                "#text": "Gets the hardware ID of this tool, or 0 if it's not known. When\nnon-zero, the identificator is unique for the given tool model,\nmeaning that two identical tools will share the same @hardware_id,\nbut will have different serial numbers (see gdk_device_tool_get_serial()).\n\nThis is a more concrete (and device specific) method to identify\na #GdkDeviceTool than gdk_device_tool_get_tool_type(), as a tablet\nmay support multiple devices with the same #GdkDeviceToolType,\nbut having different hardware identificators."
                            },
                            "source-position": {
                                "@filename": "gdk/gdkdevicetool.h",
                                "@line": "71"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "gdk/gdkdevicetool.c",
                                    "@line": "185",
                                    "#text": "The hardware identificator of this tool."
                                },
                                "type": {
                                    "@name": "guint64",
                                    "@c:type": "guint64"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "tool",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "gdk/gdkdevicetool.c",
                                        "@line": "173",
                                        "#text": "a #GdkDeviceTool"
                                    },
                                    "type": {
                                        "@name": "DeviceTool",
                                        "@c:type": "GdkDeviceTool*"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "get_serial",
                            "@c:identifier": "gdk_device_tool_get_serial",
                            "@glib:get-property": "serial",
                            "@version": "3.22",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkdevicetool.c",
                                "@line": "152",
                                "#text": "Gets the serial of this tool, this value can be used to identify a\nphysical tool (eg. a tablet pen) across program executions."
                            },
                            "source-position": {
                                "@filename": "gdk/gdkdevicetool.h",
                                "@line": "68"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "gdk/gdkdevicetool.c",
                                    "@line": "159",
                                    "#text": "The serial ID for this tool"
                                },
                                "type": {
                                    "@name": "guint64",
                                    "@c:type": "guint64"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "tool",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "gdk/gdkdevicetool.c",
                                        "@line": "154",
                                        "#text": "a #GdkDeviceTool"
                                    },
                                    "type": {
                                        "@name": "DeviceTool",
                                        "@c:type": "GdkDeviceTool*"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "get_tool_type",
                            "@c:identifier": "gdk_device_tool_get_tool_type",
                            "@glib:get-property": "tool-type",
                            "@version": "3.22",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkdevicetool.c",
                                "@line": "197",
                                "#text": "Gets the #GdkDeviceToolType of the tool."
                            },
                            "source-position": {
                                "@filename": "gdk/gdkdevicetool.h",
                                "@line": "74"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "gdk/gdkdevicetool.c",
                                    "@line": "203",
                                    "#text": "The physical type for this tool. This can be used to figure out what\nsort of pen is being used, such as an airbrush or a pencil."
                                },
                                "type": {
                                    "@name": "DeviceToolType",
                                    "@c:type": "GdkDeviceToolType"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "tool",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "gdk/gdkdevicetool.c",
                                        "@line": "199",
                                        "#text": "a #GdkDeviceTool"
                                    },
                                    "type": {
                                        "@name": "DeviceTool",
                                        "@c:type": "GdkDeviceTool*"
                                    }
                                }
                            }
                        }
                    ],
                    "property": [
                        {
                            "@name": "axes",
                            "@writable": "1",
                            "@construct-only": "1",
                            "@transfer-ownership": "none",
                            "type": {
                                "@name": "AxisFlags"
                            }
                        },
                        {
                            "@name": "hardware-id",
                            "@writable": "1",
                            "@construct-only": "1",
                            "@transfer-ownership": "none",
                            "@getter": "get_hardware_id",
                            "type": {
                                "@name": "guint64",
                                "@c:type": "guint64"
                            }
                        },
                        {
                            "@name": "serial",
                            "@writable": "1",
                            "@construct-only": "1",
                            "@transfer-ownership": "none",
                            "@getter": "get_serial",
                            "type": {
                                "@name": "guint64",
                                "@c:type": "guint64"
                            }
                        },
                        {
                            "@name": "tool-type",
                            "@writable": "1",
                            "@construct-only": "1",
                            "@transfer-ownership": "none",
                            "@getter": "get_tool_type",
                            "type": {
                                "@name": "DeviceToolType"
                            }
                        }
                    ]
                },
                {
                    "@name": "Display",
                    "@c:symbol-prefix": "display",
                    "@c:type": "GdkDisplay",
                    "@parent": "GObject.Object",
                    "@glib:type-name": "GdkDisplay",
                    "@glib:get-type": "gdk_display_get_type",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "gdk/gdkdisplay.c",
                        "@line": "44",
                        "#text": "#GdkDisplay objects purpose are two fold:\n\n- To manage and provide information about input devices (pointers and keyboards)\n\n- To manage and provide information about the available #GdkScreens\n\nGdkDisplay objects are the GDK representation of an X Display,\nwhich can be described as a workstation consisting of\na keyboard, a pointing device (such as a mouse) and one or more\nscreens.\nIt is used to open and keep track of various GdkScreen objects\ncurrently instantiated by the application. It is also used to\naccess the keyboard(s) and mouse pointer(s) of the display.\n\nMost of the input device handling has been factored out into\nthe separate #GdkDeviceManager object. Every display has a\ndevice manager, which you can obtain using\ngdk_display_get_device_manager()."
                    },
                    "function": [
                        {
                            "@name": "get_default",
                            "@c:identifier": "gdk_display_get_default",
                            "@version": "2.2",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkdisplaymanager.c",
                                "@line": "324",
                                "#text": "Gets the default #GdkDisplay. This is a convenience\nfunction for:\n`gdk_display_manager_get_default_display (gdk_display_manager_get ())`."
                            },
                            "source-position": {
                                "@filename": "gdk/gdkdisplay.h",
                                "@line": "108"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "@nullable": "1",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "gdk/gdkdisplaymanager.c",
                                    "@line": "331",
                                    "#text": "a #GdkDisplay, or %NULL if\n  there is no default display."
                                },
                                "type": {
                                    "@name": "Display",
                                    "@c:type": "GdkDisplay*"
                                }
                            }
                        },
                        {
                            "@name": "open",
                            "@c:identifier": "gdk_display_open",
                            "@version": "2.2",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkdisplay.c",
                                "@line": "1966",
                                "#text": "Opens a display."
                            },
                            "source-position": {
                                "@filename": "gdk/gdkdisplay.h",
                                "@line": "48"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "@nullable": "1",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "gdk/gdkdisplay.c",
                                    "@line": "1972",
                                    "#text": "a #GdkDisplay, or %NULL if the\n    display could not be opened"
                                },
                                "type": {
                                    "@name": "Display",
                                    "@c:type": "GdkDisplay*"
                                }
                            },
                            "parameters": {
                                "parameter": {
                                    "@name": "display_name",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "gdk/gdkdisplay.c",
                                        "@line": "1968",
                                        "#text": "the name of the display to open"
                                    },
                                    "type": {
                                        "@name": "utf8",
                                        "@c:type": "const gchar*"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "open_default_libgtk_only",
                            "@c:identifier": "gdk_display_open_default_libgtk_only",
                            "@deprecated": "1",
                            "@deprecated-version": "3.16",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdk.c",
                                "@line": "498",
                                "#text": "Opens the default display specified by command line arguments or\nenvironment variables, sets it as the default display, and returns\nit. gdk_parse_args() must have been called first. If the default\ndisplay has previously been set, simply returns that. An internal\nfunction that should not be used by applications."
                            },
                            "doc-deprecated": {
                                "@xml:space": "preserve",
                                "#text": "This symbol was never meant to be used outside\n  of GTK+"
                            },
                            "source-position": {
                                "@filename": "gdk/gdkdisplay.h",
                                "@line": "129"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "@nullable": "1",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "gdk/gdk.c",
                                    "@line": "507",
                                    "#text": "the default display, if it\n  could be opened, otherwise %NULL."
                                },
                                "type": {
                                    "@name": "Display",
                                    "@c:type": "GdkDisplay*"
                                }
                            }
                        }
                    ],
                    "method": [
                        {
                            "@name": "beep",
                            "@c:identifier": "gdk_display_beep",
                            "@version": "2.2",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkdisplay.c",
                                "@line": "1654",
                                "#text": "Emits a short beep on @display"
                            },
                            "source-position": {
                                "@filename": "gdk/gdkdisplay.h",
                                "@line": "76"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "type": {
                                    "@name": "none",
                                    "@c:type": "void"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "display",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "gdk/gdkdisplay.c",
                                        "@line": "1656",
                                        "#text": "a #GdkDisplay"
                                    },
                                    "type": {
                                        "@name": "Display",
                                        "@c:type": "GdkDisplay*"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "close",
                            "@c:identifier": "gdk_display_close",
                            "@version": "2.2",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkdisplay.c",
                                "@line": "380",
                                "#text": "Closes the connection to the windowing system for the given display,\nand cleans up associated resources."
                            },
                            "source-position": {
                                "@filename": "gdk/gdkdisplay.h",
                                "@line": "83"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "type": {
                                    "@name": "none",
                                    "@c:type": "void"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "display",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "gdk/gdkdisplay.c",
                                        "@line": "382",
                                        "#text": "a #GdkDisplay"
                                    },
                                    "type": {
                                        "@name": "Display",
                                        "@c:type": "GdkDisplay*"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "device_is_grabbed",
                            "@c:identifier": "gdk_display_device_is_grabbed",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkdisplay.c",
                                "@line": "1527",
                                "#text": "Returns %TRUE if there is an ongoing grab on @device for @display."
                            },
                            "source-position": {
                                "@filename": "gdk/gdkdisplay.h",
                                "@line": "73"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "gdk/gdkdisplay.c",
                                    "@line": "1534",
                                    "#text": "%TRUE if there is a grab in effect for @device."
                                },
                                "type": {
                                    "@name": "gboolean",
                                    "@c:type": "gboolean"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "display",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "gdk/gdkdisplay.c",
                                        "@line": "1529",
                                        "#text": "a #GdkDisplay"
                                    },
                                    "type": {
                                        "@name": "Display",
                                        "@c:type": "GdkDisplay*"
                                    }
                                },
                                "parameter": {
                                    "@name": "device",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "gdk/gdkdisplay.c",
                                        "@line": "1530",
                                        "#text": "a #GdkDevice"
                                    },
                                    "type": {
                                        "@name": "Device",
                                        "@c:type": "GdkDevice*"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "flush",
                            "@c:identifier": "gdk_display_flush",
                            "@version": "2.4",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkdisplay.c",
                                "@line": "1694",
                                "#text": "Flushes any requests queued for the windowing system; this happens automatically\nwhen the main loop blocks waiting for new events, but if your application\nis drawing without returning control to the main loop, you may need\nto call this function explicitly. A common case where this function\nneeds to be called is when an application is executing drawing commands\nfrom a thread other than the thread where the main loop is running.\n\nThis is most useful for X11. On windowing systems where requests are\nhandled synchronously, this function will do nothing."
                            },
                            "source-position": {
                                "@filename": "gdk/gdkdisplay.h",
                                "@line": "80"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "type": {
                                    "@name": "none",
                                    "@c:type": "void"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "display",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "gdk/gdkdisplay.c",
                                        "@line": "1696",
                                        "#text": "a #GdkDisplay"
                                    },
                                    "type": {
                                        "@name": "Display",
                                        "@c:type": "GdkDisplay*"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "get_app_launch_context",
                            "@c:identifier": "gdk_display_get_app_launch_context",
                            "@version": "3.0",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkdisplay.c",
                                "@line": "1946",
                                "#text": "Returns a #GdkAppLaunchContext suitable for launching\napplications on the given display."
                            },
                            "source-position": {
                                "@filename": "gdk/gdkdisplay.h",
                                "@line": "174"
                            },
                            "return-value": {
                                "@transfer-ownership": "full",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "gdk/gdkdisplay.c",
                                    "@line": "1953",
                                    "#text": "a new #GdkAppLaunchContext for @display.\n    Free with g_object_unref() when done"
                                },
                                "type": {
                                    "@name": "AppLaunchContext",
                                    "@c:type": "GdkAppLaunchContext*"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "display",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "gdk/gdkdisplay.c",
                                        "@line": "1948",
                                        "#text": "a #GdkDisplay"
                                    },
                                    "type": {
                                        "@name": "Display",
                                        "@c:type": "GdkDisplay*"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "get_default_cursor_size",
                            "@c:identifier": "gdk_display_get_default_cursor_size",
                            "@version": "2.4",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkdisplay.c",
                                "@line": "2043",
                                "#text": "Returns the default size to use for cursors on @display."
                            },
                            "source-position": {
                                "@filename": "gdk/gdkdisplay.h",
                                "@line": "136"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "gdk/gdkdisplay.c",
                                    "@line": "2049",
                                    "#text": "the default cursor size."
                                },
                                "type": {
                                    "@name": "guint",
                                    "@c:type": "guint"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "display",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "gdk/gdkdisplay.c",
                                        "@line": "2045",
                                        "#text": "a #GdkDisplay"
                                    },
                                    "type": {
                                        "@name": "Display",
                                        "@c:type": "GdkDisplay*"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "get_default_group",
                            "@c:identifier": "gdk_display_get_default_group",
                            "@version": "2.4",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkdisplay.c",
                                "@line": "1718",
                                "#text": "Returns the default group leader window for all toplevel windows\non @display. This window is implicitly created by GDK.\nSee gdk_window_set_group()."
                            },
                            "source-position": {
                                "@filename": "gdk/gdkdisplay.h",
                                "@line": "143"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "gdk/gdkdisplay.c",
                                    "@line": "1726",
                                    "#text": "The default group leader window\nfor @display"
                                },
                                "type": {
                                    "@name": "Window",
                                    "@c:type": "GdkWindow*"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "display",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "gdk/gdkdisplay.c",
                                        "@line": "1720",
                                        "#text": "a #GdkDisplay"
                                    },
                                    "type": {
                                        "@name": "Display",
                                        "@c:type": "GdkDisplay*"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "get_default_screen",
                            "@c:identifier": "gdk_display_get_default_screen",
                            "@version": "2.2",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkdisplay.c",
                                "@line": "1636",
                                "#text": "Get the default #GdkScreen for @display."
                            },
                            "source-position": {
                                "@filename": "gdk/gdkdisplay.h",
                                "@line": "59"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "gdk/gdkdisplay.c",
                                    "@line": "1642",
                                    "#text": "the default #GdkScreen object for @display"
                                },
                                "type": {
                                    "@name": "Screen",
                                    "@c:type": "GdkScreen*"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "display",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "gdk/gdkdisplay.c",
                                        "@line": "1638",
                                        "#text": "a #GdkDisplay"
                                    },
                                    "type": {
                                        "@name": "Display",
                                        "@c:type": "GdkDisplay*"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "get_default_seat",
                            "@c:identifier": "gdk_display_get_default_seat",
                            "@version": "3.20",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkdisplay.c",
                                "@line": "2487",
                                "#text": "Returns the default #GdkSeat for this display."
                            },
                            "source-position": {
                                "@filename": "gdk/gdkdisplay.h",
                                "@line": "177"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "gdk/gdkdisplay.c",
                                    "@line": "2493",
                                    "#text": "the default seat."
                                },
                                "type": {
                                    "@name": "Seat",
                                    "@c:type": "GdkSeat*"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "display",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "gdk/gdkdisplay.c",
                                        "@line": "2489",
                                        "#text": "a #GdkDisplay"
                                    },
                                    "type": {
                                        "@name": "Display",
                                        "@c:type": "GdkDisplay*"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "get_device_manager",
                            "@c:identifier": "gdk_display_get_device_manager",
                            "@version": "3.0",
                            "@deprecated": "1",
                            "@deprecated-version": "3.20.",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkdisplay.c",
                                "@line": "1553",
                                "#text": "Returns the #GdkDeviceManager associated to @display."
                            },
                            "doc-deprecated": {
                                "@xml:space": "preserve",
                                "#text": "Use gdk_display_get_default_seat() and #GdkSeat operations."
                            },
                            "source-position": {
                                "@filename": "gdk/gdkdisplay.h",
                                "@line": "171"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "@nullable": "1",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "gdk/gdkdisplay.c",
                                    "@line": "1559",
                                    "#text": "A #GdkDeviceManager, or\n         %NULL. This memory is owned by GDK and must not be freed\n         or unreferenced."
                                },
                                "type": {
                                    "@name": "DeviceManager",
                                    "@c:type": "GdkDeviceManager*"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "display",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "gdk/gdkdisplay.c",
                                        "@line": "1555",
                                        "#text": "a #GdkDisplay."
                                    },
                                    "type": {
                                        "@name": "Display",
                                        "@c:type": "GdkDisplay*"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "get_event",
                            "@c:identifier": "gdk_display_get_event",
                            "@version": "2.2",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkdisplay.c",
                                "@line": "423",
                                "#text": "Gets the next #GdkEvent to be processed for @display, fetching events from the\nwindowing system if necessary."
                            },
                            "source-position": {
                                "@filename": "gdk/gdkdisplay.h",
                                "@line": "91"
                            },
                            "return-value": {
                                "@transfer-ownership": "full",
                                "@nullable": "1",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "gdk/gdkdisplay.c",
                                    "@line": "430",
                                    "#text": "the next #GdkEvent to be processed, or %NULL\nif no events are pending. The returned #GdkEvent should be freed\nwith gdk_event_free()."
                                },
                                "type": {
                                    "@name": "Event",
                                    "@c:type": "GdkEvent*"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "display",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "gdk/gdkdisplay.c",
                                        "@line": "425",
                                        "#text": "a #GdkDisplay"
                                    },
                                    "type": {
                                        "@name": "Display",
                                        "@c:type": "GdkDisplay*"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "get_maximal_cursor_size",
                            "@c:identifier": "gdk_display_get_maximal_cursor_size",
                            "@version": "2.4",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkdisplay.c",
                                "@line": "2067",
                                "#text": "Gets the maximal size to use for cursors on @display."
                            },
                            "source-position": {
                                "@filename": "gdk/gdkdisplay.h",
                                "@line": "138"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "type": {
                                    "@name": "none",
                                    "@c:type": "void"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "display",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "gdk/gdkdisplay.c",
                                        "@line": "2069",
                                        "#text": "a #GdkDisplay"
                                    },
                                    "type": {
                                        "@name": "Display",
                                        "@c:type": "GdkDisplay*"
                                    }
                                },
                                "parameter": [
                                    {
                                        "@name": "width",
                                        "@direction": "out",
                                        "@caller-allocates": "0",
                                        "@transfer-ownership": "full",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "gdk/gdkdisplay.c",
                                            "@line": "2070",
                                            "#text": "the return location for the maximal cursor width"
                                        },
                                        "type": {
                                            "@name": "guint",
                                            "@c:type": "guint*"
                                        }
                                    },
                                    {
                                        "@name": "height",
                                        "@direction": "out",
                                        "@caller-allocates": "0",
                                        "@transfer-ownership": "full",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "gdk/gdkdisplay.c",
                                            "@line": "2071",
                                            "#text": "the return location for the maximal cursor height"
                                        },
                                        "type": {
                                            "@name": "guint",
                                            "@c:type": "guint*"
                                        }
                                    }
                                ]
                            }
                        },
                        {
                            "@name": "get_monitor",
                            "@c:identifier": "gdk_display_get_monitor",
                            "@version": "3.22",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkdisplay.c",
                                "@line": "2579",
                                "#text": "Gets a monitor associated with this display."
                            },
                            "source-position": {
                                "@filename": "gdk/gdkdisplay.h",
                                "@line": "185"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "@nullable": "1",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "gdk/gdkdisplay.c",
                                    "@line": "2586",
                                    "#text": "the #GdkMonitor, or %NULL if\n   @monitor_num is not a valid monitor number"
                                },
                                "type": {
                                    "@name": "Monitor",
                                    "@c:type": "GdkMonitor*"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "display",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "gdk/gdkdisplay.c",
                                        "@line": "2581",
                                        "#text": "a #GdkDisplay"
                                    },
                                    "type": {
                                        "@name": "Display",
                                        "@c:type": "GdkDisplay*"
                                    }
                                },
                                "parameter": {
                                    "@name": "monitor_num",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "gdk/gdkdisplay.c",
                                        "@line": "2582",
                                        "#text": "number of the monitor"
                                    },
                                    "type": {
                                        "@name": "gint",
                                        "@c:type": "int"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "get_monitor_at_point",
                            "@c:identifier": "gdk_display_get_monitor_at_point",
                            "@version": "3.22",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkdisplay.c",
                                "@line": "2628",
                                "#text": "Gets the monitor in which the point (@x, @y) is located,\nor a nearby monitor if the point is not in any monitor."
                            },
                            "source-position": {
                                "@filename": "gdk/gdkdisplay.h",
                                "@line": "190"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "gdk/gdkdisplay.c",
                                    "@line": "2637",
                                    "#text": "the monitor containing the point"
                                },
                                "type": {
                                    "@name": "Monitor",
                                    "@c:type": "GdkMonitor*"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "display",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "gdk/gdkdisplay.c",
                                        "@line": "2630",
                                        "#text": "a #GdkDisplay"
                                    },
                                    "type": {
                                        "@name": "Display",
                                        "@c:type": "GdkDisplay*"
                                    }
                                },
                                "parameter": [
                                    {
                                        "@name": "x",
                                        "@transfer-ownership": "none",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "gdk/gdkdisplay.c",
                                            "@line": "2631",
                                            "#text": "the x coordinate of the point"
                                        },
                                        "type": {
                                            "@name": "gint",
                                            "@c:type": "int"
                                        }
                                    },
                                    {
                                        "@name": "y",
                                        "@transfer-ownership": "none",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "gdk/gdkdisplay.c",
                                            "@line": "2632",
                                            "#text": "the y coordinate of the point"
                                        },
                                        "type": {
                                            "@name": "gint",
                                            "@c:type": "int"
                                        }
                                    }
                                ]
                            }
                        },
                        {
                            "@name": "get_monitor_at_window",
                            "@c:identifier": "gdk_display_get_monitor_at_window",
                            "@version": "3.22",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkdisplay.c",
                                "@line": "2689",
                                "#text": "Gets the monitor in which the largest area of @window\nresides, or a monitor close to @window if it is outside\nof all monitors."
                            },
                            "source-position": {
                                "@filename": "gdk/gdkdisplay.h",
                                "@line": "194"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "gdk/gdkdisplay.c",
                                    "@line": "2698",
                                    "#text": "the monitor with the largest overlap with @window"
                                },
                                "type": {
                                    "@name": "Monitor",
                                    "@c:type": "GdkMonitor*"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "display",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "gdk/gdkdisplay.c",
                                        "@line": "2691",
                                        "#text": "a #GdkDisplay"
                                    },
                                    "type": {
                                        "@name": "Display",
                                        "@c:type": "GdkDisplay*"
                                    }
                                },
                                "parameter": {
                                    "@name": "window",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "gdk/gdkdisplay.c",
                                        "@line": "2692",
                                        "#text": "a #GdkWindow"
                                    },
                                    "type": {
                                        "@name": "Window",
                                        "@c:type": "GdkWindow*"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "get_n_monitors",
                            "@c:identifier": "gdk_display_get_n_monitors",
                            "@version": "3.22",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkdisplay.c",
                                "@line": "2528",
                                "#text": "Gets the number of monitors that belong to @display.\n\nThe returned number is valid until the next emission of the\n#GdkDisplay::monitor-added or #GdkDisplay::monitor-removed signal."
                            },
                            "source-position": {
                                "@filename": "gdk/gdkdisplay.h",
                                "@line": "183"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "gdk/gdkdisplay.c",
                                    "@line": "2537",
                                    "#text": "the number of monitors"
                                },
                                "type": {
                                    "@name": "gint",
                                    "@c:type": "int"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "display",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "gdk/gdkdisplay.c",
                                        "@line": "2530",
                                        "#text": "a #GdkDisplay"
                                    },
                                    "type": {
                                        "@name": "Display",
                                        "@c:type": "GdkDisplay*"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "get_n_screens",
                            "@c:identifier": "gdk_display_get_n_screens",
                            "@version": "2.2",
                            "@deprecated": "1",
                            "@deprecated-version": "3.10",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkdisplay.c",
                                "@line": "1594",
                                "#text": "Gets the number of screen managed by the @display."
                            },
                            "doc-deprecated": {
                                "@xml:space": "preserve",
                                "#text": "The number of screens is always 1."
                            },
                            "source-position": {
                                "@filename": "gdk/gdkdisplay.h",
                                "@line": "54"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "gdk/gdkdisplay.c",
                                    "@line": "1600",
                                    "#text": "number of screens."
                                },
                                "type": {
                                    "@name": "gint",
                                    "@c:type": "gint"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "display",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "gdk/gdkdisplay.c",
                                        "@line": "1596",
                                        "#text": "a #GdkDisplay"
                                    },
                                    "type": {
                                        "@name": "Display",
                                        "@c:type": "GdkDisplay*"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "get_name",
                            "@c:identifier": "gdk_display_get_name",
                            "@version": "2.2",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkdisplay.c",
                                "@line": "1575",
                                "#text": "Gets the name of the display."
                            },
                            "source-position": {
                                "@filename": "gdk/gdkdisplay.h",
                                "@line": "51"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "gdk/gdkdisplay.c",
                                    "@line": "1581",
                                    "#text": "a string representing the display name. This string is owned\nby GDK and should not be modified or freed."
                                },
                                "type": {
                                    "@name": "utf8",
                                    "@c:type": "const gchar*"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "display",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "gdk/gdkdisplay.c",
                                        "@line": "1577",
                                        "#text": "a #GdkDisplay"
                                    },
                                    "type": {
                                        "@name": "Display",
                                        "@c:type": "GdkDisplay*"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "get_pointer",
                            "@c:identifier": "gdk_display_get_pointer",
                            "@version": "2.2",
                            "@deprecated": "1",
                            "@deprecated-version": "3.0",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkdisplay.c",
                                "@line": "637",
                                "#text": "Gets the current location of the pointer and the current modifier\nmask for a given display."
                            },
                            "doc-deprecated": {
                                "@xml:space": "preserve",
                                "#text": "Use gdk_device_get_position() instead."
                            },
                            "source-position": {
                                "@filename": "gdk/gdkdisplay.h",
                                "@line": "112"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "type": {
                                    "@name": "none",
                                    "@c:type": "void"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "display",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "gdk/gdkdisplay.c",
                                        "@line": "639",
                                        "#text": "a #GdkDisplay"
                                    },
                                    "type": {
                                        "@name": "Display",
                                        "@c:type": "GdkDisplay*"
                                    }
                                },
                                "parameter": [
                                    {
                                        "@name": "screen",
                                        "@direction": "out",
                                        "@caller-allocates": "0",
                                        "@transfer-ownership": "none",
                                        "@optional": "1",
                                        "@allow-none": "1",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "gdk/gdkdisplay.c",
                                            "@line": "640",
                                            "#text": "location to store the screen that the\n         cursor is on, or %NULL."
                                        },
                                        "type": {
                                            "@name": "Screen",
                                            "@c:type": "GdkScreen**"
                                        }
                                    },
                                    {
                                        "@name": "x",
                                        "@direction": "out",
                                        "@caller-allocates": "0",
                                        "@transfer-ownership": "full",
                                        "@optional": "1",
                                        "@allow-none": "1",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "gdk/gdkdisplay.c",
                                            "@line": "642",
                                            "#text": "location to store root window X coordinate of pointer, or %NULL."
                                        },
                                        "type": {
                                            "@name": "gint",
                                            "@c:type": "gint*"
                                        }
                                    },
                                    {
                                        "@name": "y",
                                        "@direction": "out",
                                        "@caller-allocates": "0",
                                        "@transfer-ownership": "full",
                                        "@optional": "1",
                                        "@allow-none": "1",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "gdk/gdkdisplay.c",
                                            "@line": "643",
                                            "#text": "location to store root window Y coordinate of pointer, or %NULL."
                                        },
                                        "type": {
                                            "@name": "gint",
                                            "@c:type": "gint*"
                                        }
                                    },
                                    {
                                        "@name": "mask",
                                        "@direction": "out",
                                        "@caller-allocates": "0",
                                        "@transfer-ownership": "full",
                                        "@optional": "1",
                                        "@allow-none": "1",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "gdk/gdkdisplay.c",
                                            "@line": "644",
                                            "#text": "location to store current modifier mask, or %NULL"
                                        },
                                        "type": {
                                            "@name": "ModifierType",
                                            "@c:type": "GdkModifierType*"
                                        }
                                    }
                                ]
                            }
                        },
                        {
                            "@name": "get_primary_monitor",
                            "@c:identifier": "gdk_display_get_primary_monitor",
                            "@version": "3.22",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkdisplay.c",
                                "@line": "2602",
                                "#text": "Gets the primary monitor for the display.\n\nThe primary monitor is considered the monitor where the \u201cmain desktop\u201d\nlives. While normal application windows typically allow the window\nmanager to place the windows, specialized desktop applications\nsuch as panels should place themselves on the primary monitor."
                            },
                            "source-position": {
                                "@filename": "gdk/gdkdisplay.h",
                                "@line": "188"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "@nullable": "1",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "gdk/gdkdisplay.c",
                                    "@line": "2613",
                                    "#text": "the primary monitor, or %NULL if no primary\n    monitor is configured by the user"
                                },
                                "type": {
                                    "@name": "Monitor",
                                    "@c:type": "GdkMonitor*"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "display",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "gdk/gdkdisplay.c",
                                        "@line": "2604",
                                        "#text": "a #GdkDisplay"
                                    },
                                    "type": {
                                        "@name": "Display",
                                        "@c:type": "GdkDisplay*"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "get_screen",
                            "@c:identifier": "gdk_display_get_screen",
                            "@version": "2.2",
                            "@deprecated": "1",
                            "@deprecated-version": "3.20",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkdisplay.c",
                                "@line": "1614",
                                "#text": "Returns a screen object for one of the screens of the display."
                            },
                            "doc-deprecated": {
                                "@xml:space": "preserve",
                                "#text": "There is only one screen; use gdk_display_get_default_screen() to get it."
                            },
                            "source-position": {
                                "@filename": "gdk/gdkdisplay.h",
                                "@line": "56"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "gdk/gdkdisplay.c",
                                    "@line": "1621",
                                    "#text": "the #GdkScreen object"
                                },
                                "type": {
                                    "@name": "Screen",
                                    "@c:type": "GdkScreen*"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "display",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "gdk/gdkdisplay.c",
                                        "@line": "1616",
                                        "#text": "a #GdkDisplay"
                                    },
                                    "type": {
                                        "@name": "Display",
                                        "@c:type": "GdkDisplay*"
                                    }
                                },
                                "parameter": {
                                    "@name": "screen_num",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "gdk/gdkdisplay.c",
                                        "@line": "1617",
                                        "#text": "the screen number"
                                    },
                                    "type": {
                                        "@name": "gint",
                                        "@c:type": "gint"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "get_window_at_pointer",
                            "@c:identifier": "gdk_display_get_window_at_pointer",
                            "@version": "2.2",
                            "@deprecated": "1",
                            "@deprecated-version": "3.0",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkdisplay.c",
                                "@line": "694",
                                "#text": "Obtains the window underneath the mouse pointer, returning the location\nof the pointer in that window in @win_x, @win_y for @screen. Returns %NULL\nif the window under the mouse pointer is not known to GDK (for example,\nbelongs to another application)."
                            },
                            "doc-deprecated": {
                                "@xml:space": "preserve",
                                "#text": "Use gdk_device_get_window_at_position() instead."
                            },
                            "source-position": {
                                "@filename": "gdk/gdkdisplay.h",
                                "@line": "118"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "@nullable": "1",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "gdk/gdkdisplay.c",
                                    "@line": "707",
                                    "#text": "the window under the mouse\n  pointer, or %NULL"
                                },
                                "type": {
                                    "@name": "Window",
                                    "@c:type": "GdkWindow*"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "display",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "gdk/gdkdisplay.c",
                                        "@line": "696",
                                        "#text": "a #GdkDisplay"
                                    },
                                    "type": {
                                        "@name": "Display",
                                        "@c:type": "GdkDisplay*"
                                    }
                                },
                                "parameter": [
                                    {
                                        "@name": "win_x",
                                        "@direction": "out",
                                        "@caller-allocates": "0",
                                        "@transfer-ownership": "full",
                                        "@optional": "1",
                                        "@allow-none": "1",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "gdk/gdkdisplay.c",
                                            "@line": "697",
                                            "#text": "return location for x coordinate of the pointer location relative\n   to the window origin, or %NULL"
                                        },
                                        "type": {
                                            "@name": "gint",
                                            "@c:type": "gint*"
                                        }
                                    },
                                    {
                                        "@name": "win_y",
                                        "@direction": "out",
                                        "@caller-allocates": "0",
                                        "@transfer-ownership": "full",
                                        "@optional": "1",
                                        "@allow-none": "1",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "gdk/gdkdisplay.c",
                                            "@line": "699",
                                            "#text": "return location for y coordinate of the pointer location relative\n &    to the window origin, or %NULL"
                                        },
                                        "type": {
                                            "@name": "gint",
                                            "@c:type": "gint*"
                                        }
                                    }
                                ]
                            }
                        },
                        {
                            "@name": "has_pending",
                            "@c:identifier": "gdk_display_has_pending",
                            "@version": "3.0",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkdisplay.c",
                                "@line": "1984",
                                "#text": "Returns whether the display has events that are waiting\nto be processed."
                            },
                            "source-position": {
                                "@filename": "gdk/gdkdisplay.h",
                                "@line": "98"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "gdk/gdkdisplay.c",
                                    "@line": "1991",
                                    "#text": "%TRUE if there are events ready to be processed."
                                },
                                "type": {
                                    "@name": "gboolean",
                                    "@c:type": "gboolean"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "display",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "gdk/gdkdisplay.c",
                                        "@line": "1986",
                                        "#text": "a #GdkDisplay"
                                    },
                                    "type": {
                                        "@name": "Display",
                                        "@c:type": "GdkDisplay*"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "is_closed",
                            "@c:identifier": "gdk_display_is_closed",
                            "@version": "2.22",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkdisplay.c",
                                "@line": "405",
                                "#text": "Finds out if the display has been closed."
                            },
                            "source-position": {
                                "@filename": "gdk/gdkdisplay.h",
                                "@line": "85"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "gdk/gdkdisplay.c",
                                    "@line": "411",
                                    "#text": "%TRUE if the display is closed."
                                },
                                "type": {
                                    "@name": "gboolean",
                                    "@c:type": "gboolean"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "display",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "gdk/gdkdisplay.c",
                                        "@line": "407",
                                        "#text": "a #GdkDisplay"
                                    },
                                    "type": {
                                        "@name": "Display",
                                        "@c:type": "GdkDisplay*"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "keyboard_ungrab",
                            "@c:identifier": "gdk_display_keyboard_ungrab",
                            "@version": "2.2",
                            "@deprecated": "1",
                            "@deprecated-version": "3.0",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkdisplay.c",
                                "@line": "540",
                                "#text": "Release any keyboard grab"
                            },
                            "doc-deprecated": {
                                "@xml:space": "preserve",
                                "#text": "Use gdk_device_ungrab(), together with gdk_device_grab()\n            instead."
                            },
                            "source-position": {
                                "@filename": "gdk/gdkdisplay.h",
                                "@line": "66"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "type": {
                                    "@name": "none",
                                    "@c:type": "void"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "display",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "gdk/gdkdisplay.c",
                                        "@line": "542",
                                        "#text": "a #GdkDisplay."
                                    },
                                    "type": {
                                        "@name": "Display",
                                        "@c:type": "GdkDisplay*"
                                    }
                                },
                                "parameter": {
                                    "@name": "time_",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "gdk/gdkdisplay.c",
                                        "@line": "543",
                                        "#text": "a timestap (e.g #GDK_CURRENT_TIME)."
                                    },
                                    "type": {
                                        "@name": "guint32",
                                        "@c:type": "guint32"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "list_devices",
                            "@c:identifier": "gdk_display_list_devices",
                            "@version": "2.2",
                            "@deprecated": "1",
                            "@deprecated-version": "3.0",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkdisplay.c",
                                "@line": "1896",
                                "#text": "Returns the list of available input devices attached to @display.\nThe list is statically allocated and should not be freed."
                            },
                            "doc-deprecated": {
                                "@xml:space": "preserve",
                                "#text": "Use gdk_device_manager_list_devices() instead."
                            },
                            "source-position": {
                                "@filename": "gdk/gdkdisplay.h",
                                "@line": "88"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "gdk/gdkdisplay.c",
                                    "@line": "1903",
                                    "#text": "a list of #GdkDevice"
                                },
                                "type": {
                                    "@name": "GLib.List",
                                    "@c:type": "GList*",
                                    "type": {
                                        "@name": "Device"
                                    }
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "display",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "gdk/gdkdisplay.c",
                                        "@line": "1898",
                                        "#text": "a #GdkDisplay"
                                    },
                                    "type": {
                                        "@name": "Display",
                                        "@c:type": "GdkDisplay*"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "list_seats",
                            "@c:identifier": "gdk_display_list_seats",
                            "@version": "3.20",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkdisplay.c",
                                "@line": "2509",
                                "#text": "Returns the list of seats known to @display."
                            },
                            "source-position": {
                                "@filename": "gdk/gdkdisplay.h",
                                "@line": "180"
                            },
                            "return-value": {
                                "@transfer-ownership": "container",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "gdk/gdkdisplay.c",
                                    "@line": "2515",
                                    "#text": "the\n         list of seats known to the #GdkDisplay"
                                },
                                "type": {
                                    "@name": "GLib.List",
                                    "@c:type": "GList*",
                                    "type": {
                                        "@name": "Seat"
                                    }
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "display",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "gdk/gdkdisplay.c",
                                        "@line": "2511",
                                        "#text": "a #GdkDisplay"
                                    },
                                    "type": {
                                        "@name": "Display",
                                        "@c:type": "GdkDisplay*"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "notify_startup_complete",
                            "@c:identifier": "gdk_display_notify_startup_complete",
                            "@version": "3.0",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkdisplay.c",
                                "@line": "2178",
                                "#text": "Indicates to the GUI environment that the application has\nfinished loading, using a given identifier.\n\nGTK+ will call this function automatically for #GtkWindow\nwith custom startup-notification identifier unless\ngtk_window_set_auto_startup_notification() is called to\ndisable that feature."
                            },
                            "source-position": {
                                "@filename": "gdk/gdkdisplay.h",
                                "@line": "167"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "type": {
                                    "@name": "none",
                                    "@c:type": "void"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "display",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "gdk/gdkdisplay.c",
                                        "@line": "2180",
                                        "#text": "a #GdkDisplay"
                                    },
                                    "type": {
                                        "@name": "Display",
                                        "@c:type": "GdkDisplay*"
                                    }
                                },
                                "parameter": {
                                    "@name": "startup_id",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "gdk/gdkdisplay.c",
                                        "@line": "2181",
                                        "#text": "a startup-notification identifier, for which\n    notification process should be completed"
                                    },
                                    "type": {
                                        "@name": "utf8",
                                        "@c:type": "const gchar*"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "peek_event",
                            "@c:identifier": "gdk_display_peek_event",
                            "@version": "2.2",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkdisplay.c",
                                "@line": "447",
                                "#text": "Gets a copy of the first #GdkEvent in the @display\u2019s event queue, without\nremoving the event from the queue.  (Note that this function will\nnot get more events from the windowing system.  It only checks the events\nthat have already been moved to the GDK event queue.)"
                            },
                            "source-position": {
                                "@filename": "gdk/gdkdisplay.h",
                                "@line": "93"
                            },
                            "return-value": {
                                "@transfer-ownership": "full",
                                "@nullable": "1",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "gdk/gdkdisplay.c",
                                    "@line": "456",
                                    "#text": "a copy of the first #GdkEvent on the event\nqueue, or %NULL if no events are in the queue. The returned\n#GdkEvent should be freed with gdk_event_free()."
                                },
                                "type": {
                                    "@name": "Event",
                                    "@c:type": "GdkEvent*"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "display",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "gdk/gdkdisplay.c",
                                        "@line": "449",
                                        "#text": "a #GdkDisplay"
                                    },
                                    "type": {
                                        "@name": "Display",
                                        "@c:type": "GdkDisplay*"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "pointer_is_grabbed",
                            "@c:identifier": "gdk_display_pointer_is_grabbed",
                            "@version": "2.2",
                            "@deprecated": "1",
                            "@deprecated-version": "3.0",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkdisplay.c",
                                "@line": "1489",
                                "#text": "Test if the pointer is grabbed."
                            },
                            "doc-deprecated": {
                                "@xml:space": "preserve",
                                "#text": "Use gdk_display_device_is_grabbed() instead."
                            },
                            "source-position": {
                                "@filename": "gdk/gdkdisplay.h",
                                "@line": "69"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "gdk/gdkdisplay.c",
                                    "@line": "1495",
                                    "#text": "%TRUE if an active X pointer grab is in effect"
                                },
                                "type": {
                                    "@name": "gboolean",
                                    "@c:type": "gboolean"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "display",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "gdk/gdkdisplay.c",
                                        "@line": "1491",
                                        "#text": "a #GdkDisplay"
                                    },
                                    "type": {
                                        "@name": "Display",
                                        "@c:type": "GdkDisplay*"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "pointer_ungrab",
                            "@c:identifier": "gdk_display_pointer_ungrab",
                            "@version": "2.2",
                            "@deprecated": "1",
                            "@deprecated-version": "3.0",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkdisplay.c",
                                "@line": "506",
                                "#text": "Release any pointer grab."
                            },
                            "doc-deprecated": {
                                "@xml:space": "preserve",
                                "#text": "Use gdk_device_ungrab(), together with gdk_device_grab()\n            instead."
                            },
                            "source-position": {
                                "@filename": "gdk/gdkdisplay.h",
                                "@line": "63"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "type": {
                                    "@name": "none",
                                    "@c:type": "void"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "display",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "gdk/gdkdisplay.c",
                                        "@line": "508",
                                        "#text": "a #GdkDisplay."
                                    },
                                    "type": {
                                        "@name": "Display",
                                        "@c:type": "GdkDisplay*"
                                    }
                                },
                                "parameter": {
                                    "@name": "time_",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "gdk/gdkdisplay.c",
                                        "@line": "509",
                                        "#text": "a timestap (e.g. %GDK_CURRENT_TIME)."
                                    },
                                    "type": {
                                        "@name": "guint32",
                                        "@c:type": "guint32"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "put_event",
                            "@c:identifier": "gdk_display_put_event",
                            "@version": "2.2",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkdisplay.c",
                                "@line": "486",
                                "#text": "Appends a copy of the given event onto the front of the event\nqueue for @display."
                            },
                            "source-position": {
                                "@filename": "gdk/gdkdisplay.h",
                                "@line": "95"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "type": {
                                    "@name": "none",
                                    "@c:type": "void"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "display",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "gdk/gdkdisplay.c",
                                        "@line": "488",
                                        "#text": "a #GdkDisplay"
                                    },
                                    "type": {
                                        "@name": "Display",
                                        "@c:type": "GdkDisplay*"
                                    }
                                },
                                "parameter": {
                                    "@name": "event",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "gdk/gdkdisplay.c",
                                        "@line": "489",
                                        "#text": "a #GdkEvent."
                                    },
                                    "type": {
                                        "@name": "Event",
                                        "@c:type": "const GdkEvent*"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "request_selection_notification",
                            "@c:identifier": "gdk_display_request_selection_notification",
                            "@version": "2.6",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkdisplay.c",
                                "@line": "1759",
                                "#text": "Request #GdkEventOwnerChange events for ownership changes\nof the selection named by the given atom."
                            },
                            "source-position": {
                                "@filename": "gdk/gdkdisplay.h",
                                "@line": "148"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "gdk/gdkdisplay.c",
                                    "@line": "1768",
                                    "#text": "whether #GdkEventOwnerChange events will\n              be sent."
                                },
                                "type": {
                                    "@name": "gboolean",
                                    "@c:type": "gboolean"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "display",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "gdk/gdkdisplay.c",
                                        "@line": "1761",
                                        "#text": "a #GdkDisplay"
                                    },
                                    "type": {
                                        "@name": "Display",
                                        "@c:type": "GdkDisplay*"
                                    }
                                },
                                "parameter": {
                                    "@name": "selection",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "gdk/gdkdisplay.c",
                                        "@line": "1762",
                                        "#text": "the #GdkAtom naming the selection for which\n            ownership change notification is requested"
                                    },
                                    "type": {
                                        "@name": "Atom",
                                        "@c:type": "GdkAtom"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "set_double_click_distance",
                            "@c:identifier": "gdk_display_set_double_click_distance",
                            "@version": "2.4",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkevents.c",
                                "@line": "2372",
                                "#text": "Sets the double click distance (two clicks within this distance\ncount as a double click and result in a #GDK_2BUTTON_PRESS event).\nSee also gdk_display_set_double_click_time().\nApplications should not set this, it is a global\nuser-configured setting."
                            },
                            "source-position": {
                                "@filename": "gdk/gdkdisplay.h",
                                "@line": "104"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "type": {
                                    "@name": "none",
                                    "@c:type": "void"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "display",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "gdk/gdkevents.c",
                                        "@line": "2374",
                                        "#text": "a #GdkDisplay"
                                    },
                                    "type": {
                                        "@name": "Display",
                                        "@c:type": "GdkDisplay*"
                                    }
                                },
                                "parameter": {
                                    "@name": "distance",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "gdk/gdkevents.c",
                                        "@line": "2375",
                                        "#text": "distance in pixels"
                                    },
                                    "type": {
                                        "@name": "guint",
                                        "@c:type": "guint"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "set_double_click_time",
                            "@c:identifier": "gdk_display_set_double_click_time",
                            "@version": "2.2",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkevents.c",
                                "@line": "2337",
                                "#text": "Sets the double click time (two clicks within this time interval\ncount as a double click and result in a #GDK_2BUTTON_PRESS event).\nApplications should not set this, it is a global\nuser-configured setting."
                            },
                            "source-position": {
                                "@filename": "gdk/gdkdisplay.h",
                                "@line": "101"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "type": {
                                    "@name": "none",
                                    "@c:type": "void"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "display",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "gdk/gdkevents.c",
                                        "@line": "2339",
                                        "#text": "a #GdkDisplay"
                                    },
                                    "type": {
                                        "@name": "Display",
                                        "@c:type": "GdkDisplay*"
                                    }
                                },
                                "parameter": {
                                    "@name": "msec",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "gdk/gdkevents.c",
                                        "@line": "2340",
                                        "#text": "double click time in milliseconds (thousandths of a second)"
                                    },
                                    "type": {
                                        "@name": "guint",
                                        "@c:type": "guint"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "store_clipboard",
                            "@c:identifier": "gdk_display_store_clipboard",
                            "@version": "2.6",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkdisplay.c",
                                "@line": "1804",
                                "#text": "Issues a request to the clipboard manager to store the\nclipboard data. On X11, this is a special program that works\naccording to the\n[FreeDesktop Clipboard Specification](http://www.freedesktop.org/Standards/clipboard-manager-spec)."
                            },
                            "source-position": {
                                "@filename": "gdk/gdkdisplay.h",
                                "@line": "154"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "type": {
                                    "@name": "none",
                                    "@c:type": "void"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "display",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "gdk/gdkdisplay.c",
                                        "@line": "1806",
                                        "#text": "a #GdkDisplay"
                                    },
                                    "type": {
                                        "@name": "Display",
                                        "@c:type": "GdkDisplay*"
                                    }
                                },
                                "parameter": [
                                    {
                                        "@name": "clipboard_window",
                                        "@transfer-ownership": "none",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "gdk/gdkdisplay.c",
                                            "@line": "1807",
                                            "#text": "a #GdkWindow belonging to the clipboard owner"
                                        },
                                        "type": {
                                            "@name": "Window",
                                            "@c:type": "GdkWindow*"
                                        }
                                    },
                                    {
                                        "@name": "time_",
                                        "@transfer-ownership": "none",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "gdk/gdkdisplay.c",
                                            "@line": "1808",
                                            "#text": "a timestamp"
                                        },
                                        "type": {
                                            "@name": "guint32",
                                            "@c:type": "guint32"
                                        }
                                    },
                                    {
                                        "@name": "targets",
                                        "@transfer-ownership": "none",
                                        "@nullable": "1",
                                        "@allow-none": "1",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "gdk/gdkdisplay.c",
                                            "@line": "1809",
                                            "#text": "an array of targets\n                   that should be saved, or %NULL\n                   if all available targets should be saved."
                                        },
                                        "array": {
                                            "@length": "3",
                                            "@zero-terminated": "0",
                                            "@c:type": "const GdkAtom*",
                                            "type": {
                                                "@name": "Atom",
                                                "@c:type": "GdkAtom"
                                            }
                                        }
                                    },
                                    {
                                        "@name": "n_targets",
                                        "@transfer-ownership": "none",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "gdk/gdkdisplay.c",
                                            "@line": "1812",
                                            "#text": "length of the @targets array"
                                        },
                                        "type": {
                                            "@name": "gint",
                                            "@c:type": "gint"
                                        }
                                    }
                                ]
                            }
                        },
                        {
                            "@name": "supports_clipboard_persistence",
                            "@c:identifier": "gdk_display_supports_clipboard_persistence",
                            "@version": "2.6",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkdisplay.c",
                                "@line": "1783",
                                "#text": "Returns whether the speicifed display supports clipboard\npersistance; i.e. if it\u2019s possible to store the clipboard data after an\napplication has quit. On X11 this checks if a clipboard daemon is\nrunning."
                            },
                            "source-position": {
                                "@filename": "gdk/gdkdisplay.h",
                                "@line": "152"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "gdk/gdkdisplay.c",
                                    "@line": "1792",
                                    "#text": "%TRUE if the display supports clipboard persistance."
                                },
                                "type": {
                                    "@name": "gboolean",
                                    "@c:type": "gboolean"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "display",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "gdk/gdkdisplay.c",
                                        "@line": "1785",
                                        "#text": "a #GdkDisplay"
                                    },
                                    "type": {
                                        "@name": "Display",
                                        "@c:type": "GdkDisplay*"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "supports_composite",
                            "@c:identifier": "gdk_display_supports_composite",
                            "@version": "2.12",
                            "@deprecated": "1",
                            "@deprecated-version": "3.16",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkdisplay.c",
                                "@line": "1871",
                                "#text": "Returns %TRUE if gdk_window_set_composited() can be used\nto redirect drawing on the window using compositing.\n\nCurrently this only works on X11 with XComposite and\nXDamage extensions available."
                            },
                            "doc-deprecated": {
                                "@xml:space": "preserve",
                                "#text": "Compositing is an outdated technology that\n  only ever worked on X11."
                            },
                            "source-position": {
                                "@filename": "gdk/gdkdisplay.h",
                                "@line": "165"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "gdk/gdkdisplay.c",
                                    "@line": "1881",
                                    "#text": "%TRUE if windows may be composited."
                                },
                                "type": {
                                    "@name": "gboolean",
                                    "@c:type": "gboolean"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "display",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "gdk/gdkdisplay.c",
                                        "@line": "1873",
                                        "#text": "a #GdkDisplay"
                                    },
                                    "type": {
                                        "@name": "Display",
                                        "@c:type": "GdkDisplay*"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "supports_cursor_alpha",
                            "@c:identifier": "gdk_display_supports_cursor_alpha",
                            "@version": "2.4",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkdisplay.c",
                                "@line": "2003",
                                "#text": "Returns %TRUE if cursors can use an 8bit alpha channel\non @display. Otherwise, cursors are restricted to bilevel\nalpha (i.e. a mask)."
                            },
                            "source-position": {
                                "@filename": "gdk/gdkdisplay.h",
                                "@line": "132"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "gdk/gdkdisplay.c",
                                    "@line": "2011",
                                    "#text": "whether cursors can have alpha channels."
                                },
                                "type": {
                                    "@name": "gboolean",
                                    "@c:type": "gboolean"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "display",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "gdk/gdkdisplay.c",
                                        "@line": "2005",
                                        "#text": "a #GdkDisplay"
                                    },
                                    "type": {
                                        "@name": "Display",
                                        "@c:type": "GdkDisplay*"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "supports_cursor_color",
                            "@c:identifier": "gdk_display_supports_cursor_color",
                            "@version": "2.4",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkdisplay.c",
                                "@line": "2023",
                                "#text": "Returns %TRUE if multicolored cursors are supported\non @display. Otherwise, cursors have only a forground\nand a background color."
                            },
                            "source-position": {
                                "@filename": "gdk/gdkdisplay.h",
                                "@line": "134"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "gdk/gdkdisplay.c",
                                    "@line": "2031",
                                    "#text": "whether cursors can have multiple colors."
                                },
                                "type": {
                                    "@name": "gboolean",
                                    "@c:type": "gboolean"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "display",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "gdk/gdkdisplay.c",
                                        "@line": "2025",
                                        "#text": "a #GdkDisplay"
                                    },
                                    "type": {
                                        "@name": "Display",
                                        "@c:type": "GdkDisplay*"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "supports_input_shapes",
                            "@c:identifier": "gdk_display_supports_input_shapes",
                            "@version": "2.10",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkdisplay.c",
                                "@line": "1852",
                                "#text": "Returns %TRUE if gdk_window_input_shape_combine_mask() can\nbe used to modify the input shape of windows on @display."
                            },
                            "source-position": {
                                "@filename": "gdk/gdkdisplay.h",
                                "@line": "163"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "gdk/gdkdisplay.c",
                                    "@line": "1859",
                                    "#text": "%TRUE if windows with modified input shape are supported"
                                },
                                "type": {
                                    "@name": "gboolean",
                                    "@c:type": "gboolean"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "display",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "gdk/gdkdisplay.c",
                                        "@line": "1854",
                                        "#text": "a #GdkDisplay"
                                    },
                                    "type": {
                                        "@name": "Display",
                                        "@c:type": "GdkDisplay*"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "supports_selection_notification",
                            "@c:identifier": "gdk_display_supports_selection_notification",
                            "@version": "2.6",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkdisplay.c",
                                "@line": "1739",
                                "#text": "Returns whether #GdkEventOwnerChange events will be\nsent when the owner of a selection changes."
                            },
                            "source-position": {
                                "@filename": "gdk/gdkdisplay.h",
                                "@line": "146"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "gdk/gdkdisplay.c",
                                    "@line": "1746",
                                    "#text": "whether #GdkEventOwnerChange events will\n              be sent."
                                },
                                "type": {
                                    "@name": "gboolean",
                                    "@c:type": "gboolean"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "display",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "gdk/gdkdisplay.c",
                                        "@line": "1741",
                                        "#text": "a #GdkDisplay"
                                    },
                                    "type": {
                                        "@name": "Display",
                                        "@c:type": "GdkDisplay*"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "supports_shapes",
                            "@c:identifier": "gdk_display_supports_shapes",
                            "@version": "2.10",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkdisplay.c",
                                "@line": "1833",
                                "#text": "Returns %TRUE if gdk_window_shape_combine_mask() can\nbe used to create shaped windows on @display."
                            },
                            "source-position": {
                                "@filename": "gdk/gdkdisplay.h",
                                "@line": "161"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "gdk/gdkdisplay.c",
                                    "@line": "1840",
                                    "#text": "%TRUE if shaped windows are supported"
                                },
                                "type": {
                                    "@name": "gboolean",
                                    "@c:type": "gboolean"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "display",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "gdk/gdkdisplay.c",
                                        "@line": "1835",
                                        "#text": "a #GdkDisplay"
                                    },
                                    "type": {
                                        "@name": "Display",
                                        "@c:type": "GdkDisplay*"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "sync",
                            "@c:identifier": "gdk_display_sync",
                            "@version": "2.2",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkdisplay.c",
                                "@line": "1670",
                                "#text": "Flushes any requests queued for the windowing system and waits until all\nrequests have been handled. This is often used for making sure that the\ndisplay is synchronized with the current state of the program. Calling\ngdk_display_sync() before gdk_error_trap_pop() makes sure that any errors\ngenerated from earlier requests are handled before the error trap is\nremoved.\n\nThis is most useful for X11. On windowing systems where requests are\nhandled synchronously, this function will do nothing."
                            },
                            "source-position": {
                                "@filename": "gdk/gdkdisplay.h",
                                "@line": "78"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "type": {
                                    "@name": "none",
                                    "@c:type": "void"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "display",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "gdk/gdkdisplay.c",
                                        "@line": "1672",
                                        "#text": "a #GdkDisplay"
                                    },
                                    "type": {
                                        "@name": "Display",
                                        "@c:type": "GdkDisplay*"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "warp_pointer",
                            "@c:identifier": "gdk_display_warp_pointer",
                            "@version": "2.8",
                            "@deprecated": "1",
                            "@deprecated-version": "3.0",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkdisplay.c",
                                "@line": "2089",
                                "#text": "Warps the pointer of @display to the point @x,@y on\nthe screen @screen, unless the pointer is confined\nto a window by a grab, in which case it will be moved\nas far as allowed by the grab. Warping the pointer\ncreates events as if the user had moved the mouse\ninstantaneously to the destination.\n\nNote that the pointer should normally be under the\ncontrol of the user. This function was added to cover\nsome rare use cases like keyboard navigation support\nfor the color picker in the #GtkColorSelectionDialog."
                            },
                            "doc-deprecated": {
                                "@xml:space": "preserve",
                                "#text": "Use gdk_device_warp() instead."
                            },
                            "source-position": {
                                "@filename": "gdk/gdkdisplay.h",
                                "@line": "122"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "type": {
                                    "@name": "none",
                                    "@c:type": "void"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "display",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "gdk/gdkdisplay.c",
                                        "@line": "2091",
                                        "#text": "a #GdkDisplay"
                                    },
                                    "type": {
                                        "@name": "Display",
                                        "@c:type": "GdkDisplay*"
                                    }
                                },
                                "parameter": [
                                    {
                                        "@name": "screen",
                                        "@transfer-ownership": "none",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "gdk/gdkdisplay.c",
                                            "@line": "2092",
                                            "#text": "the screen of @display to warp the pointer to"
                                        },
                                        "type": {
                                            "@name": "Screen",
                                            "@c:type": "GdkScreen*"
                                        }
                                    },
                                    {
                                        "@name": "x",
                                        "@transfer-ownership": "none",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "gdk/gdkdisplay.c",
                                            "@line": "2093",
                                            "#text": "the x coordinate of the destination"
                                        },
                                        "type": {
                                            "@name": "gint",
                                            "@c:type": "gint"
                                        }
                                    },
                                    {
                                        "@name": "y",
                                        "@transfer-ownership": "none",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "gdk/gdkdisplay.c",
                                            "@line": "2094",
                                            "#text": "the y coordinate of the destination"
                                        },
                                        "type": {
                                            "@name": "gint",
                                            "@c:type": "gint"
                                        }
                                    }
                                ]
                            }
                        }
                    ],
                    "glib:signal": [
                        {
                            "@name": "closed",
                            "@when": "last",
                            "@version": "2.2",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkdisplay.c",
                                "@line": "179",
                                "#text": "The ::closed signal is emitted when the connection to the windowing\nsystem for @display is closed."
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "type": {
                                    "@name": "none",
                                    "@c:type": "void"
                                }
                            },
                            "parameters": {
                                "parameter": {
                                    "@name": "is_error",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "gdk/gdkdisplay.c",
                                        "@line": "182",
                                        "#text": "%TRUE if the display was closed due to an error"
                                    },
                                    "type": {
                                        "@name": "gboolean",
                                        "@c:type": "gboolean"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "monitor-added",
                            "@when": "last",
                            "@version": "3.22",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkdisplay.c",
                                "@line": "239",
                                "#text": "The ::monitor-added signal is emitted whenever a monitor is\nadded."
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "type": {
                                    "@name": "none",
                                    "@c:type": "void"
                                }
                            },
                            "parameters": {
                                "parameter": {
                                    "@name": "monitor",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "gdk/gdkdisplay.c",
                                        "@line": "242",
                                        "#text": "the monitor that was just added"
                                    },
                                    "type": {
                                        "@name": "Monitor"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "monitor-removed",
                            "@when": "last",
                            "@version": "3.22",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkdisplay.c",
                                "@line": "257",
                                "#text": "The ::monitor-removed signal is emitted whenever a monitor is\nremoved."
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "type": {
                                    "@name": "none",
                                    "@c:type": "void"
                                }
                            },
                            "parameters": {
                                "parameter": {
                                    "@name": "monitor",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "gdk/gdkdisplay.c",
                                        "@line": "260",
                                        "#text": "the monitor that was just removed"
                                    },
                                    "type": {
                                        "@name": "Monitor"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "opened",
                            "@when": "last",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkdisplay.c",
                                "@line": "163",
                                "#text": "The ::opened signal is emitted when the connection to the windowing\nsystem for @display is opened."
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "type": {
                                    "@name": "none",
                                    "@c:type": "void"
                                }
                            }
                        },
                        {
                            "@name": "seat-added",
                            "@when": "last",
                            "@version": "3.20",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkdisplay.c",
                                "@line": "203",
                                "#text": "The ::seat-added signal is emitted whenever a new seat is made\nknown to the windowing system."
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "type": {
                                    "@name": "none",
                                    "@c:type": "void"
                                }
                            },
                            "parameters": {
                                "parameter": {
                                    "@name": "seat",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "gdk/gdkdisplay.c",
                                        "@line": "206",
                                        "#text": "the seat that was just added"
                                    },
                                    "type": {
                                        "@name": "Seat"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "seat-removed",
                            "@when": "last",
                            "@version": "3.20",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkdisplay.c",
                                "@line": "221",
                                "#text": "The ::seat-removed signal is emitted whenever a seat is removed\nby the windowing system."
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "type": {
                                    "@name": "none",
                                    "@c:type": "void"
                                }
                            },
                            "parameters": {
                                "parameter": {
                                    "@name": "seat",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "gdk/gdkdisplay.c",
                                        "@line": "224",
                                        "#text": "the seat that was just removed"
                                    },
                                    "type": {
                                        "@name": "Seat"
                                    }
                                }
                            }
                        }
                    ]
                },
                {
                    "@name": "DisplayManager",
                    "@c:symbol-prefix": "display_manager",
                    "@c:type": "GdkDisplayManager",
                    "@parent": "GObject.Object",
                    "@glib:type-name": "GdkDisplayManager",
                    "@glib:get-type": "gdk_display_manager_get_type",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "gdk/gdkdisplaymanager.c",
                        "@line": "57",
                        "#text": "The purpose of the #GdkDisplayManager singleton object is to offer\nnotification when displays appear or disappear or the default display\nchanges.\n\nYou can use gdk_display_manager_get() to obtain the #GdkDisplayManager\nsingleton, but that should be rarely necessary. Typically, initializing\nGTK+ opens a display that you can work with without ever accessing the\n#GdkDisplayManager.\n\nThe GDK library can be built with support for multiple backends.\nThe #GdkDisplayManager object determines which backend is used\nat runtime.\n\nWhen writing backend-specific code that is supposed to work with\nmultiple GDK backends, you have to consider both compile time and\nruntime. At compile time, use the #GDK_WINDOWING_X11, #GDK_WINDOWING_WIN32\nmacros, etc. to find out which backends are present in the GDK library\nyou are building your application against. At runtime, use type-check\nmacros like GDK_IS_X11_DISPLAY() to find out which backend is in use:\n\n## Backend-specific code ## {#backend-specific}\n\n|[<!-- language=\"C\" -->\n#ifdef GDK_WINDOWING_X11\n  if (GDK_IS_X11_DISPLAY (display))\n    {\n      // make X11-specific calls here\n    }\n  else\n#endif\n#ifdef GDK_WINDOWING_QUARTZ\n  if (GDK_IS_QUARTZ_DISPLAY (display))\n    {\n      // make Quartz-specific calls here\n    }\n  else\n#endif\n  g_error (\"Unsupported GDK backend\");\n]|"
                    },
                    "function": {
                        "@name": "get",
                        "@c:identifier": "gdk_display_manager_get",
                        "@version": "2.2",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "gdk/gdkdisplaymanager.c",
                            "@line": "279",
                            "#text": "Gets the singleton #GdkDisplayManager object.\n\nWhen called for the first time, this function consults the\n`GDK_BACKEND` environment variable to find out which\nof the supported GDK backends to use (in case GDK has been compiled\nwith multiple backends). Applications can use gdk_set_allowed_backends()\nto limit what backends can be used."
                        },
                        "source-position": {
                            "@filename": "gdk/gdkdisplaymanager.h",
                            "@line": "47"
                        },
                        "return-value": {
                            "@transfer-ownership": "none",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkdisplaymanager.c",
                                "@line": "290",
                                "#text": "The global #GdkDisplayManager singleton;\n    gdk_parse_args(), gdk_init(), or gdk_init_check() must have\n    been called first."
                            },
                            "type": {
                                "@name": "DisplayManager",
                                "@c:type": "GdkDisplayManager*"
                            }
                        }
                    },
                    "method": [
                        {
                            "@name": "get_default_display",
                            "@c:identifier": "gdk_display_manager_get_default_display",
                            "@glib:get-property": "default-display",
                            "@version": "2.2",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkdisplaymanager.c",
                                "@line": "307",
                                "#text": "Gets the default #GdkDisplay."
                            },
                            "source-position": {
                                "@filename": "gdk/gdkdisplaymanager.h",
                                "@line": "49"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "@nullable": "1",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "gdk/gdkdisplaymanager.c",
                                    "@line": "313",
                                    "#text": "a #GdkDisplay, or %NULL if\n    there is no default display."
                                },
                                "type": {
                                    "@name": "Display",
                                    "@c:type": "GdkDisplay*"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "manager",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "gdk/gdkdisplaymanager.c",
                                        "@line": "309",
                                        "#text": "a #GdkDisplayManager"
                                    },
                                    "type": {
                                        "@name": "DisplayManager",
                                        "@c:type": "GdkDisplayManager*"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "list_displays",
                            "@c:identifier": "gdk_display_manager_list_displays",
                            "@version": "2.2",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkdisplaymanager.c",
                                "@line": "387",
                                "#text": "List all currently open displays."
                            },
                            "source-position": {
                                "@filename": "gdk/gdkdisplaymanager.h",
                                "@line": "54"
                            },
                            "return-value": {
                                "@transfer-ownership": "container",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "gdk/gdkdisplaymanager.c",
                                    "@line": "393",
                                    "#text": "a newly\n    allocated #GSList of #GdkDisplay objects. Free with g_slist_free()\n    when you are done with it."
                                },
                                "type": {
                                    "@name": "GLib.SList",
                                    "@c:type": "GSList*",
                                    "type": {
                                        "@name": "Display"
                                    }
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "manager",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "gdk/gdkdisplaymanager.c",
                                        "@line": "389",
                                        "#text": "a #GdkDisplayManager"
                                    },
                                    "type": {
                                        "@name": "DisplayManager",
                                        "@c:type": "GdkDisplayManager*"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "open_display",
                            "@c:identifier": "gdk_display_manager_open_display",
                            "@version": "3.0",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkdisplaymanager.c",
                                "@line": "405",
                                "#text": "Opens a display."
                            },
                            "source-position": {
                                "@filename": "gdk/gdkdisplaymanager.h",
                                "@line": "56"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "@nullable": "1",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "gdk/gdkdisplaymanager.c",
                                    "@line": "412",
                                    "#text": "a #GdkDisplay, or %NULL if the\n    display could not be opened"
                                },
                                "type": {
                                    "@name": "Display",
                                    "@c:type": "GdkDisplay*"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "manager",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "gdk/gdkdisplaymanager.c",
                                        "@line": "407",
                                        "#text": "a #GdkDisplayManager"
                                    },
                                    "type": {
                                        "@name": "DisplayManager",
                                        "@c:type": "GdkDisplayManager*"
                                    }
                                },
                                "parameter": {
                                    "@name": "name",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "gdk/gdkdisplaymanager.c",
                                        "@line": "408",
                                        "#text": "the name of the display to open"
                                    },
                                    "type": {
                                        "@name": "utf8",
                                        "@c:type": "const gchar*"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "set_default_display",
                            "@c:identifier": "gdk_display_manager_set_default_display",
                            "@glib:set-property": "default-display",
                            "@version": "2.2",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkdisplaymanager.c",
                                "@line": "366",
                                "#text": "Sets @display as the default display."
                            },
                            "source-position": {
                                "@filename": "gdk/gdkdisplaymanager.h",
                                "@line": "51"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "type": {
                                    "@name": "none",
                                    "@c:type": "void"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "manager",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "gdk/gdkdisplaymanager.c",
                                        "@line": "368",
                                        "#text": "a #GdkDisplayManager"
                                    },
                                    "type": {
                                        "@name": "DisplayManager",
                                        "@c:type": "GdkDisplayManager*"
                                    }
                                },
                                "parameter": {
                                    "@name": "display",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "gdk/gdkdisplaymanager.c",
                                        "@line": "369",
                                        "#text": "a #GdkDisplay"
                                    },
                                    "type": {
                                        "@name": "Display",
                                        "@c:type": "GdkDisplay*"
                                    }
                                }
                            }
                        }
                    ],
                    "property": {
                        "@name": "default-display",
                        "@writable": "1",
                        "@transfer-ownership": "none",
                        "@setter": "set_default_display",
                        "@getter": "get_default_display",
                        "type": {
                            "@name": "Display"
                        }
                    },
                    "glib:signal": {
                        "@name": "display-opened",
                        "@when": "last",
                        "@version": "2.2",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "gdk/gdkdisplaymanager.c",
                            "@line": "136",
                            "#text": "The ::display-opened signal is emitted when a display is opened."
                        },
                        "return-value": {
                            "@transfer-ownership": "none",
                            "type": {
                                "@name": "none",
                                "@c:type": "void"
                            }
                        },
                        "parameters": {
                            "parameter": {
                                "@name": "display",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "gdk/gdkdisplaymanager.c",
                                    "@line": "139",
                                    "#text": "the opened display"
                                },
                                "type": {
                                    "@name": "Display"
                                }
                            }
                        }
                    }
                },
                {
                    "@name": "DragContext",
                    "@c:symbol-prefix": "drag_context",
                    "@c:type": "GdkDragContext",
                    "@parent": "GObject.Object",
                    "@glib:type-name": "GdkDragContext",
                    "@glib:get-type": "gdk_drag_context_get_type",
                    "method": [
                        {
                            "@name": "get_actions",
                            "@c:identifier": "gdk_drag_context_get_actions",
                            "@version": "2.22",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkdnd.c",
                                "@line": "92",
                                "#text": "Determines the bitmask of actions proposed by the source if\ngdk_drag_context_get_suggested_action() returns %GDK_ACTION_ASK."
                            },
                            "source-position": {
                                "@filename": "gdk/gdkdnd.h",
                                "@line": "123"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "gdk/gdkdnd.c",
                                    "@line": "99",
                                    "#text": "the #GdkDragAction flags"
                                },
                                "type": {
                                    "@name": "DragAction",
                                    "@c:type": "GdkDragAction"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "context",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "gdk/gdkdnd.c",
                                        "@line": "94",
                                        "#text": "a #GdkDragContext"
                                    },
                                    "type": {
                                        "@name": "DragContext",
                                        "@c:type": "GdkDragContext*"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "get_dest_window",
                            "@c:identifier": "gdk_drag_context_get_dest_window",
                            "@version": "3.0",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkdnd.c",
                                "@line": "165",
                                "#text": "Returns the destination window for the DND operation."
                            },
                            "source-position": {
                                "@filename": "gdk/gdkdnd.h",
                                "@line": "132"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "gdk/gdkdnd.c",
                                    "@line": "171",
                                    "#text": "a #GdkWindow"
                                },
                                "type": {
                                    "@name": "Window",
                                    "@c:type": "GdkWindow*"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "context",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "gdk/gdkdnd.c",
                                        "@line": "167",
                                        "#text": "a #GdkDragContext"
                                    },
                                    "type": {
                                        "@name": "DragContext",
                                        "@c:type": "GdkDragContext*"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "get_device",
                            "@c:identifier": "gdk_drag_context_get_device",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkdnd.c",
                                "@line": "225",
                                "#text": "Returns the #GdkDevice associated to the drag context."
                            },
                            "source-position": {
                                "@filename": "gdk/gdkdnd.h",
                                "@line": "118"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "gdk/gdkdnd.c",
                                    "@line": "231",
                                    "#text": "The #GdkDevice associated to @context."
                                },
                                "type": {
                                    "@name": "Device",
                                    "@c:type": "GdkDevice*"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "context",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "gdk/gdkdnd.c",
                                        "@line": "227",
                                        "#text": "a #GdkDragContext"
                                    },
                                    "type": {
                                        "@name": "DragContext",
                                        "@c:type": "GdkDragContext*"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "get_drag_window",
                            "@c:identifier": "gdk_drag_context_get_drag_window",
                            "@version": "3.20",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkdnd.c",
                                "@line": "584",
                                "#text": "Returns the window on which the drag icon should be rendered\nduring the drag operation. Note that the window may not be\navailable until the drag operation has begun. GDK will move\nthe window in accordance with the ongoing drag operation.\nThe window is owned by @context and will be destroyed when\nthe drag operation is over."
                            },
                            "source-position": {
                                "@filename": "gdk/gdkdnd.h",
                                "@line": "202"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "@nullable": "1",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "gdk/gdkdnd.c",
                                    "@line": "595",
                                    "#text": "the drag window, or %NULL"
                                },
                                "type": {
                                    "@name": "Window",
                                    "@c:type": "GdkWindow*"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "context",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "gdk/gdkdnd.c",
                                        "@line": "586",
                                        "#text": "a #GdkDragContext"
                                    },
                                    "type": {
                                        "@name": "DragContext",
                                        "@c:type": "GdkDragContext*"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "get_protocol",
                            "@c:identifier": "gdk_drag_context_get_protocol",
                            "@version": "3.0",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkdnd.c",
                                "@line": "183",
                                "#text": "Returns the drag protocol that is used by this context."
                            },
                            "source-position": {
                                "@filename": "gdk/gdkdnd.h",
                                "@line": "134"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "gdk/gdkdnd.c",
                                    "@line": "189",
                                    "#text": "the drag protocol"
                                },
                                "type": {
                                    "@name": "DragProtocol",
                                    "@c:type": "GdkDragProtocol"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "context",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "gdk/gdkdnd.c",
                                        "@line": "185",
                                        "#text": "a #GdkDragContext"
                                    },
                                    "type": {
                                        "@name": "DragContext",
                                        "@c:type": "GdkDragContext*"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "get_selected_action",
                            "@c:identifier": "gdk_drag_context_get_selected_action",
                            "@version": "2.22",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkdnd.c",
                                "@line": "129",
                                "#text": "Determines the action chosen by the drag destination."
                            },
                            "source-position": {
                                "@filename": "gdk/gdkdnd.h",
                                "@line": "127"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "gdk/gdkdnd.c",
                                    "@line": "135",
                                    "#text": "a #GdkDragAction value"
                                },
                                "type": {
                                    "@name": "DragAction",
                                    "@c:type": "GdkDragAction"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "context",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "gdk/gdkdnd.c",
                                        "@line": "131",
                                        "#text": "a #GdkDragContext"
                                    },
                                    "type": {
                                        "@name": "DragContext",
                                        "@c:type": "GdkDragContext*"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "get_source_window",
                            "@c:identifier": "gdk_drag_context_get_source_window",
                            "@version": "2.22",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkdnd.c",
                                "@line": "147",
                                "#text": "Returns the #GdkWindow where the DND operation started."
                            },
                            "source-position": {
                                "@filename": "gdk/gdkdnd.h",
                                "@line": "130"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "gdk/gdkdnd.c",
                                    "@line": "153",
                                    "#text": "a #GdkWindow"
                                },
                                "type": {
                                    "@name": "Window",
                                    "@c:type": "GdkWindow*"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "context",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "gdk/gdkdnd.c",
                                        "@line": "149",
                                        "#text": "a #GdkDragContext"
                                    },
                                    "type": {
                                        "@name": "DragContext",
                                        "@c:type": "GdkDragContext*"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "get_suggested_action",
                            "@c:identifier": "gdk_drag_context_get_suggested_action",
                            "@version": "2.22",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkdnd.c",
                                "@line": "111",
                                "#text": "Determines the suggested drag action of the context."
                            },
                            "source-position": {
                                "@filename": "gdk/gdkdnd.h",
                                "@line": "125"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "gdk/gdkdnd.c",
                                    "@line": "117",
                                    "#text": "a #GdkDragAction value"
                                },
                                "type": {
                                    "@name": "DragAction",
                                    "@c:type": "GdkDragAction"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "context",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "gdk/gdkdnd.c",
                                        "@line": "113",
                                        "#text": "a #GdkDragContext"
                                    },
                                    "type": {
                                        "@name": "DragContext",
                                        "@c:type": "GdkDragContext*"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "list_targets",
                            "@c:identifier": "gdk_drag_context_list_targets",
                            "@version": "2.22",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkdnd.c",
                                "@line": "74",
                                "#text": "Retrieves the list of targets of the context."
                            },
                            "source-position": {
                                "@filename": "gdk/gdkdnd.h",
                                "@line": "121"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "gdk/gdkdnd.c",
                                    "@line": "80",
                                    "#text": "a #GList of targets"
                                },
                                "type": {
                                    "@name": "GLib.List",
                                    "@c:type": "GList*",
                                    "type": {
                                        "@name": "Atom"
                                    }
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "context",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "gdk/gdkdnd.c",
                                        "@line": "76",
                                        "#text": "a #GdkDragContext"
                                    },
                                    "type": {
                                        "@name": "DragContext",
                                        "@c:type": "GdkDragContext*"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "manage_dnd",
                            "@c:identifier": "gdk_drag_context_manage_dnd",
                            "@version": "3.20",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkdnd.c",
                                "@line": "666",
                                "#text": "Requests the drag and drop operation to be managed by @context.\nWhen a drag and drop operation becomes managed, the #GdkDragContext\nwill internally handle all input and source-side #GdkEventDND events\nas required by the windowing system.\n\nOnce the drag and drop operation is managed, the drag context will\nemit the following signals:\n- The #GdkDragContext::action-changed signal whenever the final action\n  to be performed by the drag and drop operation changes.\n- The #GdkDragContext::drop-performed signal after the user performs\n  the drag and drop gesture (typically by releasing the mouse button).\n- The #GdkDragContext::dnd-finished signal after the drag and drop\n  operation concludes (after all #GdkSelection transfers happen).\n- The #GdkDragContext::cancel signal if the drag and drop operation is\n  finished but doesn't happen over an accepting destination, or is\n  cancelled through other means."
                            },
                            "source-position": {
                                "@filename": "gdk/gdkdnd.h",
                                "@line": "210"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "gdk/gdkdnd.c",
                                    "@line": "689",
                                    "#text": "#TRUE if the drag and drop operation is managed."
                                },
                                "type": {
                                    "@name": "gboolean",
                                    "@c:type": "gboolean"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "context",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "gdk/gdkdnd.c",
                                        "@line": "668",
                                        "#text": "a #GdkDragContext"
                                    },
                                    "type": {
                                        "@name": "DragContext",
                                        "@c:type": "GdkDragContext*"
                                    }
                                },
                                "parameter": [
                                    {
                                        "@name": "ipc_window",
                                        "@transfer-ownership": "none",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "gdk/gdkdnd.c",
                                            "@line": "669",
                                            "#text": "Window to use for IPC messaging/events"
                                        },
                                        "type": {
                                            "@name": "Window",
                                            "@c:type": "GdkWindow*"
                                        }
                                    },
                                    {
                                        "@name": "actions",
                                        "@transfer-ownership": "none",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "gdk/gdkdnd.c",
                                            "@line": "670",
                                            "#text": "the actions supported by the drag source"
                                        },
                                        "type": {
                                            "@name": "DragAction",
                                            "@c:type": "GdkDragAction"
                                        }
                                    }
                                ]
                            }
                        },
                        {
                            "@name": "set_device",
                            "@c:identifier": "gdk_drag_context_set_device",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkdnd.c",
                                "@line": "201",
                                "#text": "Associates a #GdkDevice to @context, so all Drag and Drop events\nfor @context are emitted as if they came from this device."
                            },
                            "source-position": {
                                "@filename": "gdk/gdkdnd.h",
                                "@line": "115"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "type": {
                                    "@name": "none",
                                    "@c:type": "void"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "context",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "gdk/gdkdnd.c",
                                        "@line": "203",
                                        "#text": "a #GdkDragContext"
                                    },
                                    "type": {
                                        "@name": "DragContext",
                                        "@c:type": "GdkDragContext*"
                                    }
                                },
                                "parameter": {
                                    "@name": "device",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "gdk/gdkdnd.c",
                                        "@line": "204",
                                        "#text": "a #GdkDevice"
                                    },
                                    "type": {
                                        "@name": "Device",
                                        "@c:type": "GdkDevice*"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "set_hotspot",
                            "@c:identifier": "gdk_drag_context_set_hotspot",
                            "@version": "3.20",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkdnd.c",
                                "@line": "610",
                                "#text": "Sets the position of the drag window that will be kept\nunder the cursor hotspot. Initially, the hotspot is at the\ntop left corner of the drag window."
                            },
                            "source-position": {
                                "@filename": "gdk/gdkdnd.h",
                                "@line": "205"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "type": {
                                    "@name": "none",
                                    "@c:type": "void"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "context",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "gdk/gdkdnd.c",
                                        "@line": "612",
                                        "#text": "a #GdkDragContext"
                                    },
                                    "type": {
                                        "@name": "DragContext",
                                        "@c:type": "GdkDragContext*"
                                    }
                                },
                                "parameter": [
                                    {
                                        "@name": "hot_x",
                                        "@transfer-ownership": "none",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "gdk/gdkdnd.c",
                                            "@line": "613",
                                            "#text": "x coordinate of the drag window hotspot"
                                        },
                                        "type": {
                                            "@name": "gint",
                                            "@c:type": "gint"
                                        }
                                    },
                                    {
                                        "@name": "hot_y",
                                        "@transfer-ownership": "none",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "gdk/gdkdnd.c",
                                            "@line": "614",
                                            "#text": "y coordinate of the drag window hotspot"
                                        },
                                        "type": {
                                            "@name": "gint",
                                            "@c:type": "gint"
                                        }
                                    }
                                ]
                            }
                        }
                    ],
                    "glib:signal": [
                        {
                            "@name": "action-changed",
                            "@when": "last",
                            "@version": "3.20",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkdnd.c",
                                "@line": "340",
                                "#text": "A new action is being chosen for the drag and drop operation.\n\nThis signal will only be emitted if the #GdkDragContext manages\nthe drag and drop operation. See gdk_drag_context_manage_dnd()\nfor more information."
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "type": {
                                    "@name": "none",
                                    "@c:type": "void"
                                }
                            },
                            "parameters": {
                                "parameter": {
                                    "@name": "action",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "gdk/gdkdnd.c",
                                        "@line": "343",
                                        "#text": "The action currently chosen"
                                    },
                                    "type": {
                                        "@name": "DragAction"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "cancel",
                            "@when": "last",
                            "@version": "3.20",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkdnd.c",
                                "@line": "273",
                                "#text": "The drag and drop operation was cancelled.\n\nThis signal will only be emitted if the #GdkDragContext manages\nthe drag and drop operation. See gdk_drag_context_manage_dnd()\nfor more information."
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "type": {
                                    "@name": "none",
                                    "@c:type": "void"
                                }
                            },
                            "parameters": {
                                "parameter": {
                                    "@name": "reason",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "gdk/gdkdnd.c",
                                        "@line": "276",
                                        "#text": "The reason the context was cancelled"
                                    },
                                    "type": {
                                        "@name": "DragCancelReason"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "dnd-finished",
                            "@when": "last",
                            "@version": "3.20",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkdnd.c",
                                "@line": "317",
                                "#text": "The drag and drop operation was finished, the drag destination\nfinished reading all data. The drag source can now free all\nmiscellaneous data.\n\nThis signal will only be emitted if the #GdkDragContext manages\nthe drag and drop operation. See gdk_drag_context_manage_dnd()\nfor more information."
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "type": {
                                    "@name": "none",
                                    "@c:type": "void"
                                }
                            }
                        },
                        {
                            "@name": "drop-performed",
                            "@when": "last",
                            "@version": "3.20",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkdnd.c",
                                "@line": "295",
                                "#text": "The drag and drop operation was performed on an accepting client.\n\nThis signal will only be emitted if the #GdkDragContext manages\nthe drag and drop operation. See gdk_drag_context_manage_dnd()\nfor more information."
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "type": {
                                    "@name": "none",
                                    "@c:type": "void"
                                }
                            },
                            "parameters": {
                                "parameter": {
                                    "@name": "time",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "gdk/gdkdnd.c",
                                        "@line": "298",
                                        "#text": "the time at which the drop happened."
                                    },
                                    "type": {
                                        "@name": "gint",
                                        "@c:type": "gint"
                                    }
                                }
                            }
                        }
                    ]
                },
                {
                    "@name": "DrawingContext",
                    "@c:symbol-prefix": "drawing_context",
                    "@c:type": "GdkDrawingContext",
                    "@parent": "GObject.Object",
                    "@glib:type-name": "GdkDrawingContext",
                    "@glib:get-type": "gdk_drawing_context_get_type",
                    "@glib:type-struct": "DrawingContextClass",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "gdk/gdkdrawingcontext.c",
                        "@line": "18",
                        "#text": "#GdkDrawingContext is an object that represents the current drawing\nstate of a #GdkWindow.\n\nIt's possible to use a #GdkDrawingContext to draw on a #GdkWindow\nvia rendering API like Cairo or OpenGL.\n\nA #GdkDrawingContext can only be created by calling gdk_window_begin_draw_frame()\nand will be valid until a call to gdk_window_end_draw_frame().\n\n#GdkDrawingContext is available since GDK 3.22"
                    },
                    "source-position": {
                        "@filename": "gdk/gdkdrawingcontext.h",
                        "@line": "35"
                    },
                    "method": [
                        {
                            "@name": "get_cairo_context",
                            "@c:identifier": "gdk_drawing_context_get_cairo_context",
                            "@version": "3.22",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkdrawingcontext.c",
                                "@line": "215",
                                "#text": "Retrieves a Cairo context to be used to draw on the #GdkWindow\nthat created the #GdkDrawingContext.\n\nThe returned context is guaranteed to be valid as long as the\n#GdkDrawingContext is valid, that is between a call to\ngdk_window_begin_draw_frame() and gdk_window_end_draw_frame()."
                            },
                            "source-position": {
                                "@filename": "gdk/gdkdrawingcontext.h",
                                "@line": "49"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "gdk/gdkdrawingcontext.c",
                                    "@line": "226",
                                    "#text": "a Cairo context to be used to draw\n  the contents of the #GdkWindow. The context is owned by the\n  #GdkDrawingContext and should not be destroyed"
                                },
                                "type": {
                                    "@name": "cairo.Context",
                                    "@c:type": "cairo_t*"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "context",
                                    "@transfer-ownership": "none",
                                    "type": {
                                        "@name": "DrawingContext",
                                        "@c:type": "GdkDrawingContext*"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "get_clip",
                            "@c:identifier": "gdk_drawing_context_get_clip",
                            "@glib:get-property": "clip",
                            "@version": "3.22",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkdrawingcontext.c",
                                "@line": "278",
                                "#text": "Retrieves a copy of the clip region used when creating the @context."
                            },
                            "source-position": {
                                "@filename": "gdk/gdkdrawingcontext.h",
                                "@line": "43"
                            },
                            "return-value": {
                                "@transfer-ownership": "full",
                                "@nullable": "1",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "gdk/gdkdrawingcontext.c",
                                    "@line": "284",
                                    "#text": "a Cairo region"
                                },
                                "type": {
                                    "@name": "cairo.Region",
                                    "@c:type": "cairo_region_t*"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "context",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "gdk/gdkdrawingcontext.c",
                                        "@line": "280",
                                        "#text": "a #GdkDrawingContext"
                                    },
                                    "type": {
                                        "@name": "DrawingContext",
                                        "@c:type": "GdkDrawingContext*"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "get_window",
                            "@c:identifier": "gdk_drawing_context_get_window",
                            "@glib:get-property": "window",
                            "@version": "3.22",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkdrawingcontext.c",
                                "@line": "260",
                                "#text": "Retrieves the window that created the drawing @context."
                            },
                            "source-position": {
                                "@filename": "gdk/gdkdrawingcontext.h",
                                "@line": "41"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "gdk/gdkdrawingcontext.c",
                                    "@line": "266",
                                    "#text": "a #GdkWindow"
                                },
                                "type": {
                                    "@name": "Window",
                                    "@c:type": "GdkWindow*"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "context",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "gdk/gdkdrawingcontext.c",
                                        "@line": "262",
                                        "#text": "a #GdkDrawingContext"
                                    },
                                    "type": {
                                        "@name": "DrawingContext",
                                        "@c:type": "GdkDrawingContext*"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "is_valid",
                            "@c:identifier": "gdk_drawing_context_is_valid",
                            "@version": "3.22",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkdrawingcontext.c",
                                "@line": "299",
                                "#text": "Checks whether the given #GdkDrawingContext is valid."
                            },
                            "source-position": {
                                "@filename": "gdk/gdkdrawingcontext.h",
                                "@line": "46"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "gdk/gdkdrawingcontext.c",
                                    "@line": "305",
                                    "#text": "%TRUE if the context is valid"
                                },
                                "type": {
                                    "@name": "gboolean",
                                    "@c:type": "gboolean"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "context",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "gdk/gdkdrawingcontext.c",
                                        "@line": "301",
                                        "#text": "a #GdkDrawingContext"
                                    },
                                    "type": {
                                        "@name": "DrawingContext",
                                        "@c:type": "GdkDrawingContext*"
                                    }
                                }
                            }
                        }
                    ],
                    "property": [
                        {
                            "@name": "clip",
                            "@version": "3.22",
                            "@writable": "1",
                            "@construct-only": "1",
                            "@transfer-ownership": "none",
                            "@getter": "get_clip",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkdrawingcontext.c",
                                "@line": "165",
                                "#text": "The clip region applied to the drawing context."
                            },
                            "type": {
                                "@name": "cairo.Region"
                            }
                        },
                        {
                            "@name": "window",
                            "@version": "3.22",
                            "@writable": "1",
                            "@construct-only": "1",
                            "@transfer-ownership": "none",
                            "@getter": "get_window",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkdrawingcontext.c",
                                "@line": "152",
                                "#text": "The #GdkWindow that created the drawing context."
                            },
                            "type": {
                                "@name": "Window"
                            }
                        }
                    ]
                },
                {
                    "@name": "FrameClock",
                    "@c:symbol-prefix": "frame_clock",
                    "@c:type": "GdkFrameClock",
                    "@parent": "GObject.Object",
                    "@abstract": "1",
                    "@glib:type-name": "GdkFrameClock",
                    "@glib:get-type": "gdk_frame_clock_get_type",
                    "@glib:type-struct": "FrameClockClass",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "gdk/gdkframeclock.c",
                        "@line": "31",
                        "#text": "A #GdkFrameClock tells the application when to update and repaint a\nwindow. This may be synced to the vertical refresh rate of the\nmonitor, for example. Even when the frame clock uses a simple timer\nrather than a hardware-based vertical sync, the frame clock helps\nbecause it ensures everything paints at the same time (reducing the\ntotal number of frames). The frame clock can also automatically\nstop painting when it knows the frames will not be visible, or\nscale back animation framerates.\n\n#GdkFrameClock is designed to be compatible with an OpenGL-based\nimplementation or with mozRequestAnimationFrame in Firefox,\nfor example.\n\nA frame clock is idle until someone requests a frame with\ngdk_frame_clock_request_phase(). At some later point that makes\nsense for the synchronization being implemented, the clock will\nprocess a frame and emit signals for each phase that has been\nrequested. (See the signals of the #GdkFrameClock class for\ndocumentation of the phases. %GDK_FRAME_CLOCK_PHASE_UPDATE and the\n#GdkFrameClock::update signal are most interesting for application\nwriters, and are used to update the animations, using the frame time\ngiven by gdk_frame_clock_get_frame_time().\n\nThe frame time is reported in microseconds and generally in the same\ntimescale as g_get_monotonic_time(), however, it is not the same\nas g_get_monotonic_time(). The frame time does not advance during\nthe time a frame is being painted, and outside of a frame, an attempt\nis made so that all calls to gdk_frame_clock_get_frame_time() that\nare called at a \u201csimilar\u201d time get the same value. This means that\nif different animations are timed by looking at the difference in\ntime between an initial value from gdk_frame_clock_get_frame_time()\nand the value inside the #GdkFrameClock::update signal of the clock,\nthey will stay exactly synchronized."
                    },
                    "source-position": {
                        "@filename": "gdk/gdkframeclock.h",
                        "@line": "45"
                    },
                    "method": [
                        {
                            "@name": "begin_updating",
                            "@c:identifier": "gdk_frame_clock_begin_updating",
                            "@version": "3.8",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkframeclock.c",
                                "@line": "303",
                                "#text": "Starts updates for an animation. Until a matching call to\ngdk_frame_clock_end_updating() is made, the frame clock will continually\nrequest a new frame with the %GDK_FRAME_CLOCK_PHASE_UPDATE phase.\nThis function may be called multiple times and frames will be\nrequested until gdk_frame_clock_end_updating() is called the same\nnumber of times."
                            },
                            "source-position": {
                                "@filename": "gdk/gdkframeclock.h",
                                "@line": "86"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "type": {
                                    "@name": "none",
                                    "@c:type": "void"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "frame_clock",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "gdk/gdkframeclock.c",
                                        "@line": "305",
                                        "#text": "a #GdkFrameClock"
                                    },
                                    "type": {
                                        "@name": "FrameClock",
                                        "@c:type": "GdkFrameClock*"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "end_updating",
                            "@c:identifier": "gdk_frame_clock_end_updating",
                            "@version": "3.8",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkframeclock.c",
                                "@line": "324",
                                "#text": "Stops updates for an animation. See the documentation for\ngdk_frame_clock_begin_updating()."
                            },
                            "source-position": {
                                "@filename": "gdk/gdkframeclock.h",
                                "@line": "88"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "type": {
                                    "@name": "none",
                                    "@c:type": "void"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "frame_clock",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "gdk/gdkframeclock.c",
                                        "@line": "326",
                                        "#text": "a #GdkFrameClock"
                                    },
                                    "type": {
                                        "@name": "FrameClock",
                                        "@c:type": "GdkFrameClock*"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "get_current_timings",
                            "@c:identifier": "gdk_frame_clock_get_current_timings",
                            "@version": "3.8",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkframeclock.c",
                                "@line": "475",
                                "#text": "Gets the frame timings for the current frame."
                            },
                            "source-position": {
                                "@filename": "gdk/gdkframeclock.h",
                                "@line": "100"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "@nullable": "1",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "gdk/gdkframeclock.c",
                                    "@line": "481",
                                    "#text": "the #GdkFrameTimings for the\n frame currently being processed, or even no frame is being\n processed, for the previous frame. Before any frames have been\n processed, returns %NULL."
                                },
                                "type": {
                                    "@name": "FrameTimings",
                                    "@c:type": "GdkFrameTimings*"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "frame_clock",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "gdk/gdkframeclock.c",
                                        "@line": "477",
                                        "#text": "a #GdkFrameClock"
                                    },
                                    "type": {
                                        "@name": "FrameClock",
                                        "@c:type": "GdkFrameClock*"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "get_frame_counter",
                            "@c:identifier": "gdk_frame_clock_get_frame_counter",
                            "@version": "3.8",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkframeclock.c",
                                "@line": "358",
                                "#text": "A #GdkFrameClock maintains a 64-bit counter that increments for\neach frame drawn."
                            },
                            "source-position": {
                                "@filename": "gdk/gdkframeclock.h",
                                "@line": "92"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "gdk/gdkframeclock.c",
                                    "@line": "365",
                                    "#text": "inside frame processing, the value of the frame counter\n for the current frame. Outside of frame processing, the frame\n  counter for the last frame."
                                },
                                "type": {
                                    "@name": "gint64",
                                    "@c:type": "gint64"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "frame_clock",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "gdk/gdkframeclock.c",
                                        "@line": "360",
                                        "#text": "a #GdkFrameClock"
                                    },
                                    "type": {
                                        "@name": "FrameClock",
                                        "@c:type": "GdkFrameClock*"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "get_frame_time",
                            "@c:identifier": "gdk_frame_clock_get_frame_time",
                            "@version": "3.8",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkframeclock.c",
                                "@line": "253",
                                "#text": "Gets the time that should currently be used for animations.  Inside\nthe processing of a frame, it\u2019s the time used to compute the\nanimation position of everything in a frame. Outside of a frame, it's\nthe time of the conceptual \u201cprevious frame,\u201d which may be either\nthe actual previous frame time, or if that\u2019s too old, an updated\ntime."
                            },
                            "source-position": {
                                "@filename": "gdk/gdkframeclock.h",
                                "@line": "79"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "gdk/gdkframeclock.c",
                                    "@line": "265",
                                    "#text": "a timestamp in microseconds, in the timescale of\n of g_get_monotonic_time()."
                                },
                                "type": {
                                    "@name": "gint64",
                                    "@c:type": "gint64"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "frame_clock",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "gdk/gdkframeclock.c",
                                        "@line": "255",
                                        "#text": "a #GdkFrameClock"
                                    },
                                    "type": {
                                        "@name": "FrameClock",
                                        "@c:type": "GdkFrameClock*"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "get_history_start",
                            "@c:identifier": "gdk_frame_clock_get_history_start",
                            "@version": "3.8",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkframeclock.c",
                                "@line": "382",
                                "#text": "#GdkFrameClock internally keeps a history of #GdkFrameTimings\nobjects for recent frames that can be retrieved with\ngdk_frame_clock_get_timings(). The set of stored frames\nis the set from the counter values given by\ngdk_frame_clock_get_history_start() and\ngdk_frame_clock_get_frame_counter(), inclusive."
                            },
                            "source-position": {
                                "@filename": "gdk/gdkframeclock.h",
                                "@line": "94"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "gdk/gdkframeclock.c",
                                    "@line": "393",
                                    "#text": "the frame counter value for the oldest frame\n that is available in the internal frame history of the\n #GdkFrameClock."
                                },
                                "type": {
                                    "@name": "gint64",
                                    "@c:type": "gint64"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "frame_clock",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "gdk/gdkframeclock.c",
                                        "@line": "384",
                                        "#text": "a #GdkFrameClock"
                                    },
                                    "type": {
                                        "@name": "FrameClock",
                                        "@c:type": "GdkFrameClock*"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "get_refresh_info",
                            "@c:identifier": "gdk_frame_clock_get_refresh_info",
                            "@version": "3.8",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkframeclock.c",
                                "@line": "552",
                                "#text": "Using the frame history stored in the frame clock, finds the last\nknown presentation time and refresh interval, and assuming that\npresentation times are separated by the refresh interval,\npredicts a presentation time that is a multiple of the refresh\ninterval after the last presentation time, and later than @base_time."
                            },
                            "source-position": {
                                "@filename": "gdk/gdkframeclock.h",
                                "@line": "103"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "type": {
                                    "@name": "none",
                                    "@c:type": "void"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "frame_clock",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "gdk/gdkframeclock.c",
                                        "@line": "554",
                                        "#text": "a #GdkFrameClock"
                                    },
                                    "type": {
                                        "@name": "FrameClock",
                                        "@c:type": "GdkFrameClock*"
                                    }
                                },
                                "parameter": [
                                    {
                                        "@name": "base_time",
                                        "@transfer-ownership": "none",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "gdk/gdkframeclock.c",
                                            "@line": "555",
                                            "#text": "base time for determining a presentaton time"
                                        },
                                        "type": {
                                            "@name": "gint64",
                                            "@c:type": "gint64"
                                        }
                                    },
                                    {
                                        "@name": "refresh_interval_return",
                                        "@direction": "out",
                                        "@caller-allocates": "0",
                                        "@transfer-ownership": "full",
                                        "@optional": "1",
                                        "@allow-none": "1",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "gdk/gdkframeclock.c",
                                            "@line": "556",
                                            "#text": "a location to store the\ndetermined refresh interval, or %NULL. A default refresh interval of\n1/60th of a second will be stored if no history is present."
                                        },
                                        "type": {
                                            "@name": "gint64",
                                            "@c:type": "gint64*"
                                        }
                                    },
                                    {
                                        "@name": "presentation_time_return",
                                        "@direction": "out",
                                        "@caller-allocates": "0",
                                        "@transfer-ownership": "full",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "gdk/gdkframeclock.c",
                                            "@line": "559",
                                            "#text": "a location to store the next\n candidate presentation time after the given base time.\n 0 will be will be stored if no history is present."
                                        },
                                        "type": {
                                            "@name": "gint64",
                                            "@c:type": "gint64*"
                                        }
                                    }
                                ]
                            }
                        },
                        {
                            "@name": "get_timings",
                            "@c:identifier": "gdk_frame_clock_get_timings",
                            "@version": "3.8",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkframeclock.c",
                                "@line": "438",
                                "#text": "Retrieves a #GdkFrameTimings object holding timing information\nfor the current frame or a recent frame. The #GdkFrameTimings\nobject may not yet be complete: see gdk_frame_timings_get_complete()."
                            },
                            "source-position": {
                                "@filename": "gdk/gdkframeclock.h",
                                "@line": "96"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "@nullable": "1",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "gdk/gdkframeclock.c",
                                    "@line": "448",
                                    "#text": "the #GdkFrameTimings object for\n the specified frame, or %NULL if it is not available. See\n gdk_frame_clock_get_history_start()."
                                },
                                "type": {
                                    "@name": "FrameTimings",
                                    "@c:type": "GdkFrameTimings*"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "frame_clock",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "gdk/gdkframeclock.c",
                                        "@line": "440",
                                        "#text": "a #GdkFrameClock"
                                    },
                                    "type": {
                                        "@name": "FrameClock",
                                        "@c:type": "GdkFrameClock*"
                                    }
                                },
                                "parameter": {
                                    "@name": "frame_counter",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "gdk/gdkframeclock.c",
                                        "@line": "441",
                                        "#text": "the frame counter value identifying the frame to\n be received."
                                    },
                                    "type": {
                                        "@name": "gint64",
                                        "@c:type": "gint64"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "request_phase",
                            "@c:identifier": "gdk_frame_clock_request_phase",
                            "@version": "3.8",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkframeclock.c",
                                "@line": "276",
                                "#text": "Asks the frame clock to run a particular phase. The signal\ncorresponding the requested phase will be emitted the next\ntime the frame clock processes. Multiple calls to\ngdk_frame_clock_request_phase() will be combined together\nand only one frame processed. If you are displaying animated\ncontent and want to continually request the\n%GDK_FRAME_CLOCK_PHASE_UPDATE phase for a period of time,\nyou should use gdk_frame_clock_begin_updating() instead, since\nthis allows GTK+ to adjust system parameters to get maximally\nsmooth animations."
                            },
                            "source-position": {
                                "@filename": "gdk/gdkframeclock.h",
                                "@line": "82"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "type": {
                                    "@name": "none",
                                    "@c:type": "void"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "frame_clock",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "gdk/gdkframeclock.c",
                                        "@line": "278",
                                        "#text": "a #GdkFrameClock"
                                    },
                                    "type": {
                                        "@name": "FrameClock",
                                        "@c:type": "GdkFrameClock*"
                                    }
                                },
                                "parameter": {
                                    "@name": "phase",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "gdk/gdkframeclock.c",
                                        "@line": "279",
                                        "#text": "the phase that is requested"
                                    },
                                    "type": {
                                        "@name": "FrameClockPhase",
                                        "@c:type": "GdkFrameClockPhase"
                                    }
                                }
                            }
                        }
                    ],
                    "glib:signal": [
                        {
                            "@name": "after-paint",
                            "@when": "last",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkframeclock.c",
                                "@line": "205",
                                "#text": "This signal ends processing of the frame. Applications\nshould generally not handle this signal."
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "type": {
                                    "@name": "none",
                                    "@c:type": "void"
                                }
                            }
                        },
                        {
                            "@name": "before-paint",
                            "@when": "last",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkframeclock.c",
                                "@line": "136",
                                "#text": "This signal begins processing of the frame. Applications\nshould generally not handle this signal."
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "type": {
                                    "@name": "none",
                                    "@c:type": "void"
                                }
                            }
                        },
                        {
                            "@name": "flush-events",
                            "@when": "last",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkframeclock.c",
                                "@line": "120",
                                "#text": "This signal is used to flush pending motion events that\nare being batched up and compressed together. Applications\nshould not handle this signal."
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "type": {
                                    "@name": "none",
                                    "@c:type": "void"
                                }
                            }
                        },
                        {
                            "@name": "layout",
                            "@when": "last",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkframeclock.c",
                                "@line": "170",
                                "#text": "This signal is emitted as the second step of toolkit and\napplication processing of the frame. Any work to update\nsizes and positions of application elements should be\nperformed. GTK+ normally handles this internally."
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "type": {
                                    "@name": "none",
                                    "@c:type": "void"
                                }
                            }
                        },
                        {
                            "@name": "paint",
                            "@when": "last",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkframeclock.c",
                                "@line": "187",
                                "#text": "This signal is emitted as the third step of toolkit and\napplication processing of the frame. The frame is\nrepainted. GDK normally handles this internally and\nproduces expose events, which are turned into GTK+\n#GtkWidget::draw signals."
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "type": {
                                    "@name": "none",
                                    "@c:type": "void"
                                }
                            }
                        },
                        {
                            "@name": "resume-events",
                            "@when": "last",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkframeclock.c",
                                "@line": "220",
                                "#text": "This signal is emitted after processing of the frame is\nfinished, and is handled internally by GTK+ to resume normal\nevent processing. Applications should not handle this signal."
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "type": {
                                    "@name": "none",
                                    "@c:type": "void"
                                }
                            }
                        },
                        {
                            "@name": "update",
                            "@when": "last",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkframeclock.c",
                                "@line": "151",
                                "#text": "This signal is emitted as the first step of toolkit and\napplication processing of the frame. Animations should\nbe updated using gdk_frame_clock_get_frame_time().\nApplications can connect directly to this signal, or\nuse gtk_widget_add_tick_callback() as a more convenient\ninterface."
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "type": {
                                    "@name": "none",
                                    "@c:type": "void"
                                }
                            }
                        }
                    ]
                },
                {
                    "@name": "GLContext",
                    "@c:symbol-prefix": "gl_context",
                    "@c:type": "GdkGLContext",
                    "@parent": "GObject.Object",
                    "@abstract": "1",
                    "@glib:type-name": "GdkGLContext",
                    "@glib:get-type": "gdk_gl_context_get_type",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "gdk/gdkglcontext.c",
                        "@line": "21",
                        "#text": "#GdkGLContext is an object representing the platform-specific\nOpenGL drawing context.\n\n#GdkGLContexts are created for a #GdkWindow using\ngdk_window_create_gl_context(), and the context will match\nthe #GdkVisual of the window.\n\nA #GdkGLContext is not tied to any particular normal framebuffer.\nFor instance, it cannot draw to the #GdkWindow back buffer. The GDK\nrepaint system is in full control of the painting to that. Instead,\nyou can create render buffers or textures and use gdk_cairo_draw_from_gl()\nin the draw function of your widget to draw them. Then GDK will handle\nthe integration of your rendering with that of other widgets.\n\nSupport for #GdkGLContext is platform-specific, context creation\ncan fail, returning %NULL context.\n\nA #GdkGLContext has to be made \"current\" in order to start using\nit, otherwise any OpenGL call will be ignored.\n\n## Creating a new OpenGL context ##\n\nIn order to create a new #GdkGLContext instance you need a\n#GdkWindow, which you typically get during the realize call\nof a widget.\n\nA #GdkGLContext is not realized until either gdk_gl_context_make_current(),\nor until it is realized using gdk_gl_context_realize(). It is possible to\nspecify details of the GL context like the OpenGL version to be used, or\nwhether the GL context should have extra state validation enabled after\ncalling gdk_window_create_gl_context() by calling gdk_gl_context_realize().\nIf the realization fails you have the option to change the settings of the\n#GdkGLContext and try again.\n\n## Using a GdkGLContext ##\n\nYou will need to make the #GdkGLContext the current context\nbefore issuing OpenGL calls; the system sends OpenGL commands to\nwhichever context is current. It is possible to have multiple\ncontexts, so you always need to ensure that the one which you\nwant to draw with is the current one before issuing commands:\n\n|[<!-- language=\"C\" -->\n  gdk_gl_context_make_current (context);\n]|\n\nYou can now perform your drawing using OpenGL commands.\n\nYou can check which #GdkGLContext is the current one by using\ngdk_gl_context_get_current(); you can also unset any #GdkGLContext\nthat is currently set by calling gdk_gl_context_clear_current()."
                    },
                    "function": [
                        {
                            "@name": "clear_current",
                            "@c:identifier": "gdk_gl_context_clear_current",
                            "@version": "3.16",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkglcontext.c",
                                "@line": "987",
                                "#text": "Clears the current #GdkGLContext.\n\nAny OpenGL call after this function returns will be ignored\nuntil gdk_gl_context_make_current() is called."
                            },
                            "source-position": {
                                "@filename": "gdk/gdkglcontext.h",
                                "@line": "90"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "type": {
                                    "@name": "none",
                                    "@c:type": "void"
                                }
                            }
                        },
                        {
                            "@name": "get_current",
                            "@c:identifier": "gdk_gl_context_get_current",
                            "@version": "3.16",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkglcontext.c",
                                "@line": "1012",
                                "#text": "Retrieves the current #GdkGLContext."
                            },
                            "source-position": {
                                "@filename": "gdk/gdkglcontext.h",
                                "@line": "88"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "@nullable": "1",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "gdk/gdkglcontext.c",
                                    "@line": "1017",
                                    "#text": "the current #GdkGLContext, or %NULL"
                                },
                                "type": {
                                    "@name": "GLContext",
                                    "@c:type": "GdkGLContext*"
                                }
                            }
                        }
                    ],
                    "method": [
                        {
                            "@name": "get_debug_enabled",
                            "@c:identifier": "gdk_gl_context_get_debug_enabled",
                            "@version": "3.16",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkglcontext.c",
                                "@line": "472",
                                "#text": "Retrieves the value set using gdk_gl_context_set_debug_enabled()."
                            },
                            "source-position": {
                                "@filename": "gdk/gdkglcontext.h",
                                "@line": "70"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "gdk/gdkglcontext.c",
                                    "@line": "478",
                                    "#text": "%TRUE if debugging is enabled"
                                },
                                "type": {
                                    "@name": "gboolean",
                                    "@c:type": "gboolean"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "context",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "gdk/gdkglcontext.c",
                                        "@line": "474",
                                        "#text": "a #GdkGLContext"
                                    },
                                    "type": {
                                        "@name": "GLContext",
                                        "@c:type": "GdkGLContext*"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "get_display",
                            "@c:identifier": "gdk_gl_context_get_display",
                            "@glib:get-property": "display",
                            "@version": "3.16",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkglcontext.c",
                                "@line": "899",
                                "#text": "Retrieves the #GdkDisplay the @context is created for"
                            },
                            "source-position": {
                                "@filename": "gdk/gdkglcontext.h",
                                "@line": "46"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "@nullable": "1",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "gdk/gdkglcontext.c",
                                    "@line": "905",
                                    "#text": "a #GdkDisplay or %NULL"
                                },
                                "type": {
                                    "@name": "Display",
                                    "@c:type": "GdkDisplay*"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "context",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "gdk/gdkglcontext.c",
                                        "@line": "901",
                                        "#text": "a #GdkGLContext"
                                    },
                                    "type": {
                                        "@name": "GLContext",
                                        "@c:type": "GdkGLContext*"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "get_forward_compatible",
                            "@c:identifier": "gdk_gl_context_get_forward_compatible",
                            "@version": "3.16",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkglcontext.c",
                                "@line": "523",
                                "#text": "Retrieves the value set using gdk_gl_context_set_forward_compatible()."
                            },
                            "source-position": {
                                "@filename": "gdk/gdkglcontext.h",
                                "@line": "75"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "gdk/gdkglcontext.c",
                                    "@line": "529",
                                    "#text": "%TRUE if the context should be forward compatible"
                                },
                                "type": {
                                    "@name": "gboolean",
                                    "@c:type": "gboolean"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "context",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "gdk/gdkglcontext.c",
                                        "@line": "525",
                                        "#text": "a #GdkGLContext"
                                    },
                                    "type": {
                                        "@name": "GLContext",
                                        "@c:type": "GdkGLContext*"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "get_required_version",
                            "@c:identifier": "gdk_gl_context_get_required_version",
                            "@version": "3.16",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkglcontext.c",
                                "@line": "594",
                                "#text": "Retrieves the major and minor version requested by calling\ngdk_gl_context_set_required_version()."
                            },
                            "source-position": {
                                "@filename": "gdk/gdkglcontext.h",
                                "@line": "63"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "type": {
                                    "@name": "none",
                                    "@c:type": "void"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "context",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "gdk/gdkglcontext.c",
                                        "@line": "596",
                                        "#text": "a #GdkGLContext"
                                    },
                                    "type": {
                                        "@name": "GLContext",
                                        "@c:type": "GdkGLContext*"
                                    }
                                },
                                "parameter": [
                                    {
                                        "@name": "major",
                                        "@direction": "out",
                                        "@caller-allocates": "0",
                                        "@transfer-ownership": "full",
                                        "@nullable": "1",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "gdk/gdkglcontext.c",
                                            "@line": "597",
                                            "#text": "return location for the major version to request"
                                        },
                                        "type": {
                                            "@name": "gint",
                                            "@c:type": "int*"
                                        }
                                    },
                                    {
                                        "@name": "minor",
                                        "@direction": "out",
                                        "@caller-allocates": "0",
                                        "@transfer-ownership": "full",
                                        "@nullable": "1",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "gdk/gdkglcontext.c",
                                            "@line": "598",
                                            "#text": "return location for the minor version to request"
                                        },
                                        "type": {
                                            "@name": "gint",
                                            "@c:type": "int*"
                                        }
                                    }
                                ]
                            }
                        },
                        {
                            "@name": "get_shared_context",
                            "@c:identifier": "gdk_gl_context_get_shared_context",
                            "@glib:get-property": "shared-context",
                            "@version": "3.16",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkglcontext.c",
                                "@line": "939",
                                "#text": "Retrieves the #GdkGLContext that this @context share data with."
                            },
                            "source-position": {
                                "@filename": "gdk/gdkglcontext.h",
                                "@line": "50"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "@nullable": "1",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "gdk/gdkglcontext.c",
                                    "@line": "945",
                                    "#text": "a #GdkGLContext or %NULL"
                                },
                                "type": {
                                    "@name": "GLContext",
                                    "@c:type": "GdkGLContext*"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "context",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "gdk/gdkglcontext.c",
                                        "@line": "941",
                                        "#text": "a #GdkGLContext"
                                    },
                                    "type": {
                                        "@name": "GLContext",
                                        "@c:type": "GdkGLContext*"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "get_use_es",
                            "@c:identifier": "gdk_gl_context_get_use_es",
                            "@version": "3.22",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkglcontext.c",
                                "@line": "722",
                                "#text": "Checks whether the @context is using an OpenGL or OpenGL ES profile."
                            },
                            "source-position": {
                                "@filename": "gdk/gdkglcontext.h",
                                "@line": "80"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "gdk/gdkglcontext.c",
                                    "@line": "728",
                                    "#text": "%TRUE if the #GdkGLContext is using an OpenGL ES profile"
                                },
                                "type": {
                                    "@name": "gboolean",
                                    "@c:type": "gboolean"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "context",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "gdk/gdkglcontext.c",
                                        "@line": "724",
                                        "#text": "a #GdkGLContext"
                                    },
                                    "type": {
                                        "@name": "GLContext",
                                        "@c:type": "GdkGLContext*"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "get_version",
                            "@c:identifier": "gdk_gl_context_get_version",
                            "@version": "3.16",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkglcontext.c",
                                "@line": "959",
                                "#text": "Retrieves the OpenGL version of the @context.\n\nThe @context must be realized prior to calling this function."
                            },
                            "source-position": {
                                "@filename": "gdk/gdkglcontext.h",
                                "@line": "52"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "type": {
                                    "@name": "none",
                                    "@c:type": "void"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "context",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "gdk/gdkglcontext.c",
                                        "@line": "961",
                                        "#text": "a #GdkGLContext"
                                    },
                                    "type": {
                                        "@name": "GLContext",
                                        "@c:type": "GdkGLContext*"
                                    }
                                },
                                "parameter": [
                                    {
                                        "@name": "major",
                                        "@direction": "out",
                                        "@caller-allocates": "0",
                                        "@transfer-ownership": "full",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "gdk/gdkglcontext.c",
                                            "@line": "962",
                                            "#text": "return location for the major version"
                                        },
                                        "type": {
                                            "@name": "gint",
                                            "@c:type": "int*"
                                        }
                                    },
                                    {
                                        "@name": "minor",
                                        "@direction": "out",
                                        "@caller-allocates": "0",
                                        "@transfer-ownership": "full",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "gdk/gdkglcontext.c",
                                            "@line": "963",
                                            "#text": "return location for the minor version"
                                        },
                                        "type": {
                                            "@name": "gint",
                                            "@c:type": "int*"
                                        }
                                    }
                                ]
                            }
                        },
                        {
                            "@name": "get_window",
                            "@c:identifier": "gdk_gl_context_get_window",
                            "@glib:get-property": "window",
                            "@version": "3.16",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkglcontext.c",
                                "@line": "919",
                                "#text": "Retrieves the #GdkWindow used by the @context."
                            },
                            "source-position": {
                                "@filename": "gdk/gdkglcontext.h",
                                "@line": "48"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "@nullable": "1",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "gdk/gdkglcontext.c",
                                    "@line": "925",
                                    "#text": "a #GdkWindow or %NULL"
                                },
                                "type": {
                                    "@name": "Window",
                                    "@c:type": "GdkWindow*"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "context",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "gdk/gdkglcontext.c",
                                        "@line": "921",
                                        "#text": "a #GdkGLContext"
                                    },
                                    "type": {
                                        "@name": "GLContext",
                                        "@c:type": "GdkGLContext*"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "is_legacy",
                            "@c:identifier": "gdk_gl_context_is_legacy",
                            "@version": "3.20",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkglcontext.c",
                                "@line": "643",
                                "#text": "Whether the #GdkGLContext is in legacy mode or not.\n\nThe #GdkGLContext must be realized before calling this function.\n\nWhen realizing a GL context, GDK will try to use the OpenGL 3.2 core\nprofile; this profile removes all the OpenGL API that was deprecated\nprior to the 3.2 version of the specification. If the realization is\nsuccessful, this function will return %FALSE.\n\nIf the underlying OpenGL implementation does not support core profiles,\nGDK will fall back to a pre-3.2 compatibility profile, and this function\nwill return %TRUE.\n\nYou can use the value returned by this function to decide which kind\nof OpenGL API to use, or whether to do extension discovery, or what\nkind of shader programs to load."
                            },
                            "source-position": {
                                "@filename": "gdk/gdkglcontext.h",
                                "@line": "56"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "gdk/gdkglcontext.c",
                                    "@line": "664",
                                    "#text": "%TRUE if the GL context is in legacy mode"
                                },
                                "type": {
                                    "@name": "gboolean",
                                    "@c:type": "gboolean"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "context",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "gdk/gdkglcontext.c",
                                        "@line": "645",
                                        "#text": "a #GdkGLContext"
                                    },
                                    "type": {
                                        "@name": "GLContext",
                                        "@c:type": "GdkGLContext*"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "make_current",
                            "@c:identifier": "gdk_gl_context_make_current",
                            "@version": "3.16",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkglcontext.c",
                                "@line": "858",
                                "#text": "Makes the @context the current one."
                            },
                            "source-position": {
                                "@filename": "gdk/gdkglcontext.h",
                                "@line": "86"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "type": {
                                    "@name": "none",
                                    "@c:type": "void"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "context",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "gdk/gdkglcontext.c",
                                        "@line": "860",
                                        "#text": "a #GdkGLContext"
                                    },
                                    "type": {
                                        "@name": "GLContext",
                                        "@c:type": "GdkGLContext*"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "realize",
                            "@c:identifier": "gdk_gl_context_realize",
                            "@version": "3.16",
                            "@throws": "1",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkglcontext.c",
                                "@line": "745",
                                "#text": "Realizes the given #GdkGLContext.\n\nIt is safe to call this function on a realized #GdkGLContext."
                            },
                            "source-position": {
                                "@filename": "gdk/gdkglcontext.h",
                                "@line": "83"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "gdk/gdkglcontext.c",
                                    "@line": "754",
                                    "#text": "%TRUE if the context is realized"
                                },
                                "type": {
                                    "@name": "gboolean",
                                    "@c:type": "gboolean"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "context",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "gdk/gdkglcontext.c",
                                        "@line": "747",
                                        "#text": "a #GdkGLContext"
                                    },
                                    "type": {
                                        "@name": "GLContext",
                                        "@c:type": "GdkGLContext*"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "set_debug_enabled",
                            "@c:identifier": "gdk_gl_context_set_debug_enabled",
                            "@version": "3.16",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkglcontext.c",
                                "@line": "444",
                                "#text": "Sets whether the #GdkGLContext should perform extra validations and\nrun time checking. This is useful during development, but has\nadditional overhead.\n\nThe #GdkGLContext must not be realized or made current prior to\ncalling this function."
                            },
                            "source-position": {
                                "@filename": "gdk/gdkglcontext.h",
                                "@line": "67"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "type": {
                                    "@name": "none",
                                    "@c:type": "void"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "context",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "gdk/gdkglcontext.c",
                                        "@line": "446",
                                        "#text": "a #GdkGLContext"
                                    },
                                    "type": {
                                        "@name": "GLContext",
                                        "@c:type": "GdkGLContext*"
                                    }
                                },
                                "parameter": {
                                    "@name": "enabled",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "gdk/gdkglcontext.c",
                                        "@line": "447",
                                        "#text": "whether to enable debugging in the context"
                                    },
                                    "type": {
                                        "@name": "gboolean",
                                        "@c:type": "gboolean"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "set_forward_compatible",
                            "@c:identifier": "gdk_gl_context_set_forward_compatible",
                            "@version": "3.16",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkglcontext.c",
                                "@line": "492",
                                "#text": "Sets whether the #GdkGLContext should be forward compatible.\n\nForward compatibile contexts must not support OpenGL functionality that\nhas been marked as deprecated in the requested version; non-forward\ncompatible contexts, on the other hand, must support both deprecated and\nnon deprecated functionality.\n\nThe #GdkGLContext must not be realized or made current prior to calling\nthis function."
                            },
                            "source-position": {
                                "@filename": "gdk/gdkglcontext.h",
                                "@line": "72"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "type": {
                                    "@name": "none",
                                    "@c:type": "void"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "context",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "gdk/gdkglcontext.c",
                                        "@line": "494",
                                        "#text": "a #GdkGLContext"
                                    },
                                    "type": {
                                        "@name": "GLContext",
                                        "@c:type": "GdkGLContext*"
                                    }
                                },
                                "parameter": {
                                    "@name": "compatible",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "gdk/gdkglcontext.c",
                                        "@line": "495",
                                        "#text": "whether the context should be forward compatible"
                                    },
                                    "type": {
                                        "@name": "gboolean",
                                        "@c:type": "gboolean"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "set_required_version",
                            "@c:identifier": "gdk_gl_context_set_required_version",
                            "@version": "3.16",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkglcontext.c",
                                "@line": "543",
                                "#text": "Sets the major and minor version of OpenGL to request.\n\nSetting @major and @minor to zero will use the default values.\n\nThe #GdkGLContext must not be realized or made current prior to calling\nthis function."
                            },
                            "source-position": {
                                "@filename": "gdk/gdkglcontext.h",
                                "@line": "59"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "type": {
                                    "@name": "none",
                                    "@c:type": "void"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "context",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "gdk/gdkglcontext.c",
                                        "@line": "545",
                                        "#text": "a #GdkGLContext"
                                    },
                                    "type": {
                                        "@name": "GLContext",
                                        "@c:type": "GdkGLContext*"
                                    }
                                },
                                "parameter": [
                                    {
                                        "@name": "major",
                                        "@transfer-ownership": "none",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "gdk/gdkglcontext.c",
                                            "@line": "546",
                                            "#text": "the major version to request"
                                        },
                                        "type": {
                                            "@name": "gint",
                                            "@c:type": "int"
                                        }
                                    },
                                    {
                                        "@name": "minor",
                                        "@transfer-ownership": "none",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "gdk/gdkglcontext.c",
                                            "@line": "547",
                                            "#text": "the minor version to request"
                                        },
                                        "type": {
                                            "@name": "gint",
                                            "@c:type": "int"
                                        }
                                    }
                                ]
                            }
                        },
                        {
                            "@name": "set_use_es",
                            "@c:identifier": "gdk_gl_context_set_use_es",
                            "@version": "3.22",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkglcontext.c",
                                "@line": "688",
                                "#text": "Requests that GDK create a OpenGL ES context instead of an OpenGL one,\nif the platform and windowing system allows it.\n\nThe @context must not have been realized.\n\nBy default, GDK will attempt to automatically detect whether the\nunderlying GL implementation is OpenGL or OpenGL ES once the @context\nis realized.\n\nYou should check the return value of gdk_gl_context_get_use_es() after\ncalling gdk_gl_context_realize() to decide whether to use the OpenGL or\nOpenGL ES API, extensions, or shaders."
                            },
                            "source-position": {
                                "@filename": "gdk/gdkglcontext.h",
                                "@line": "77"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "type": {
                                    "@name": "none",
                                    "@c:type": "void"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "context",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "gdk/gdkglcontext.c",
                                        "@line": "690",
                                        "#text": "a #GdkGLContext:"
                                    },
                                    "type": {
                                        "@name": "GLContext",
                                        "@c:type": "GdkGLContext*"
                                    }
                                },
                                "parameter": {
                                    "@name": "use_es",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "gdk/gdkglcontext.c",
                                        "@line": "691",
                                        "#text": "whether the context should use OpenGL ES instead of OpenGL,\n  or -1 to allow auto-detection"
                                    },
                                    "type": {
                                        "@name": "gint",
                                        "@c:type": "int"
                                    }
                                }
                            }
                        }
                    ],
                    "property": [
                        {
                            "@name": "display",
                            "@version": "3.16",
                            "@writable": "1",
                            "@construct-only": "1",
                            "@transfer-ownership": "none",
                            "@getter": "get_display",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkglcontext.c",
                                "@line": "308",
                                "#text": "The #GdkDisplay used to create the #GdkGLContext."
                            },
                            "type": {
                                "@name": "Display"
                            }
                        },
                        {
                            "@name": "shared-context",
                            "@version": "3.16",
                            "@writable": "1",
                            "@construct-only": "1",
                            "@transfer-ownership": "none",
                            "@getter": "get_shared_context",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkglcontext.c",
                                "@line": "340",
                                "#text": "The #GdkGLContext that this context is sharing data with, or %NULL"
                            },
                            "type": {
                                "@name": "GLContext"
                            }
                        },
                        {
                            "@name": "window",
                            "@version": "3.16",
                            "@writable": "1",
                            "@construct-only": "1",
                            "@transfer-ownership": "none",
                            "@getter": "get_window",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkglcontext.c",
                                "@line": "324",
                                "#text": "The #GdkWindow the gl context is bound to."
                            },
                            "type": {
                                "@name": "Window"
                            }
                        }
                    ]
                },
                {
                    "@name": "Keymap",
                    "@c:symbol-prefix": "keymap",
                    "@c:type": "GdkKeymap",
                    "@parent": "GObject.Object",
                    "@glib:type-name": "GdkKeymap",
                    "@glib:get-type": "gdk_keymap_get_type",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "gdk/gdkkeys.h",
                        "@line": "69",
                        "#text": "A #GdkKeymap defines the translation from keyboard state\n(including a hardware key, a modifier mask, and active keyboard group)\nto a keyval. This translation has two phases. The first phase is\nto determine the effective keyboard group and level for the keyboard\nstate; the second phase is to look up the keycode/group/level triplet\nin the keymap and see what keyval it corresponds to."
                    },
                    "function": [
                        {
                            "@name": "get_default",
                            "@c:identifier": "gdk_keymap_get_default",
                            "@deprecated": "1",
                            "@deprecated-version": "3.22",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkkeys.c",
                                "@line": "274",
                                "#text": "Returns the #GdkKeymap attached to the default display."
                            },
                            "doc-deprecated": {
                                "@xml:space": "preserve",
                                "#text": "Use gdk_keymap_get_for_display() instead"
                            },
                            "source-position": {
                                "@filename": "gdk/gdkkeys.h",
                                "@line": "84"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "gdk/gdkkeys.c",
                                    "@line": "279",
                                    "#text": "the #GdkKeymap attached to the default display."
                                },
                                "type": {
                                    "@name": "Keymap",
                                    "@c:type": "GdkKeymap*"
                                }
                            }
                        },
                        {
                            "@name": "get_for_display",
                            "@c:identifier": "gdk_keymap_get_for_display",
                            "@version": "2.2",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkdisplay.c",
                                "@line": "2256",
                                "#text": "Returns the #GdkKeymap attached to @display."
                            },
                            "source-position": {
                                "@filename": "gdk/gdkkeys.h",
                                "@line": "86"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "gdk/gdkdisplay.c",
                                    "@line": "2262",
                                    "#text": "the #GdkKeymap attached to @display."
                                },
                                "type": {
                                    "@name": "Keymap",
                                    "@c:type": "GdkKeymap*"
                                }
                            },
                            "parameters": {
                                "parameter": {
                                    "@name": "display",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "gdk/gdkdisplay.c",
                                        "@line": "2258",
                                        "#text": "the #GdkDisplay."
                                    },
                                    "type": {
                                        "@name": "Display",
                                        "@c:type": "GdkDisplay*"
                                    }
                                }
                            }
                        }
                    ],
                    "method": [
                        {
                            "@name": "add_virtual_modifiers",
                            "@c:identifier": "gdk_keymap_add_virtual_modifiers",
                            "@version": "2.20",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkkeys.c",
                                "@line": "579",
                                "#text": "Maps the non-virtual modifiers (i.e Mod2, Mod3, ...) which are set\nin @state to the virtual modifiers (i.e. Super, Hyper and Meta) and\nset the corresponding bits in @state.\n\nGDK already does this before delivering key events, but for\ncompatibility reasons, it only sets the first virtual modifier\nit finds, whereas this function sets all matching virtual modifiers.\n\nThis function is useful when matching key events against\naccelerators."
                            },
                            "source-position": {
                                "@filename": "gdk/gdkkeys.h",
                                "@line": "125"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "type": {
                                    "@name": "none",
                                    "@c:type": "void"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "keymap",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "gdk/gdkkeys.c",
                                        "@line": "581",
                                        "#text": "a #GdkKeymap"
                                    },
                                    "type": {
                                        "@name": "Keymap",
                                        "@c:type": "GdkKeymap*"
                                    }
                                },
                                "parameter": {
                                    "@name": "state",
                                    "@direction": "inout",
                                    "@caller-allocates": "0",
                                    "@transfer-ownership": "full",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "gdk/gdkkeys.c",
                                        "@line": "582",
                                        "#text": "pointer to the modifier mask to change"
                                    },
                                    "type": {
                                        "@name": "ModifierType",
                                        "@c:type": "GdkModifierType*"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "get_caps_lock_state",
                            "@c:identifier": "gdk_keymap_get_caps_lock_state",
                            "@version": "2.16",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkkeys.c",
                                "@line": "326",
                                "#text": "Returns whether the Caps Lock modifer is locked."
                            },
                            "source-position": {
                                "@filename": "gdk/gdkkeys.h",
                                "@line": "117"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "gdk/gdkkeys.c",
                                    "@line": "332",
                                    "#text": "%TRUE if Caps Lock is on"
                                },
                                "type": {
                                    "@name": "gboolean",
                                    "@c:type": "gboolean"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "keymap",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "gdk/gdkkeys.c",
                                        "@line": "328",
                                        "#text": "a #GdkKeymap"
                                    },
                                    "type": {
                                        "@name": "Keymap",
                                        "@c:type": "GdkKeymap*"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "get_direction",
                            "@c:identifier": "gdk_keymap_get_direction",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkkeys.c",
                                "@line": "289",
                                "#text": "Returns the direction of effective layout of the keymap."
                            },
                            "source-position": {
                                "@filename": "gdk/gdkkeys.h",
                                "@line": "113"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "gdk/gdkkeys.c",
                                    "@line": "295",
                                    "#text": "%PANGO_DIRECTION_LTR or %PANGO_DIRECTION_RTL\n  if it can determine the direction. %PANGO_DIRECTION_NEUTRAL\n  otherwise."
                                },
                                "type": {
                                    "@name": "Pango.Direction",
                                    "@c:type": "PangoDirection"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "keymap",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "gdk/gdkkeys.c",
                                        "@line": "291",
                                        "#text": "a #GdkKeymap"
                                    },
                                    "type": {
                                        "@name": "Keymap",
                                        "@c:type": "GdkKeymap*"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "get_entries_for_keycode",
                            "@c:identifier": "gdk_keymap_get_entries_for_keycode",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkkeys.c",
                                "@line": "438",
                                "#text": "Returns the keyvals bound to @hardware_keycode.\nThe Nth #GdkKeymapKey in @keys is bound to the Nth\nkeyval in @keyvals. Free the returned arrays with g_free().\nWhen a keycode is pressed by the user, the keyval from\nthis list of entries is selected by considering the effective\nkeyboard group and level. See gdk_keymap_translate_keyboard_state()."
                            },
                            "source-position": {
                                "@filename": "gdk/gdkkeys.h",
                                "@line": "106"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "gdk/gdkkeys.c",
                                    "@line": "455",
                                    "#text": "%TRUE if there were any entries"
                                },
                                "type": {
                                    "@name": "gboolean",
                                    "@c:type": "gboolean"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "keymap",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "gdk/gdkkeys.c",
                                        "@line": "440",
                                        "#text": "a #GdkKeymap"
                                    },
                                    "type": {
                                        "@name": "Keymap",
                                        "@c:type": "GdkKeymap*"
                                    }
                                },
                                "parameter": [
                                    {
                                        "@name": "hardware_keycode",
                                        "@transfer-ownership": "none",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "gdk/gdkkeys.c",
                                            "@line": "441",
                                            "#text": "a keycode"
                                        },
                                        "type": {
                                            "@name": "guint",
                                            "@c:type": "guint"
                                        }
                                    },
                                    {
                                        "@name": "keys",
                                        "@direction": "out",
                                        "@caller-allocates": "0",
                                        "@transfer-ownership": "full",
                                        "@optional": "1",
                                        "@allow-none": "1",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "gdk/gdkkeys.c",
                                            "@line": "442",
                                            "#text": "return\n    location for array of #GdkKeymapKey, or %NULL"
                                        },
                                        "array": {
                                            "@length": "3",
                                            "@zero-terminated": "0",
                                            "@c:type": "GdkKeymapKey**",
                                            "type": {
                                                "@name": "KeymapKey",
                                                "@c:type": "GdkKeymapKey*"
                                            }
                                        }
                                    },
                                    {
                                        "@name": "keyvals",
                                        "@direction": "out",
                                        "@caller-allocates": "0",
                                        "@transfer-ownership": "full",
                                        "@optional": "1",
                                        "@allow-none": "1",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "gdk/gdkkeys.c",
                                            "@line": "444",
                                            "#text": "return\n    location for array of keyvals, or %NULL"
                                        },
                                        "array": {
                                            "@length": "3",
                                            "@zero-terminated": "0",
                                            "@c:type": "guint**",
                                            "type": {
                                                "@name": "guint",
                                                "@c:type": "guint*"
                                            }
                                        }
                                    },
                                    {
                                        "@name": "n_entries",
                                        "@direction": "out",
                                        "@caller-allocates": "0",
                                        "@transfer-ownership": "full",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "gdk/gdkkeys.c",
                                            "@line": "446",
                                            "#text": "length of @keys and @keyvals"
                                        },
                                        "type": {
                                            "@name": "gint",
                                            "@c:type": "gint*"
                                        }
                                    }
                                ]
                            }
                        },
                        {
                            "@name": "get_entries_for_keyval",
                            "@c:identifier": "gdk_keymap_get_entries_for_keyval",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkkeys.c",
                                "@line": "401",
                                "#text": "Obtains a list of keycode/group/level combinations that will\ngenerate @keyval. Groups and levels are two kinds of keyboard mode;\nin general, the level determines whether the top or bottom symbol\non a key is used, and the group determines whether the left or\nright symbol is used. On US keyboards, the shift key changes the\nkeyboard level, and there are no groups. A group switch key might\nconvert a keyboard between Hebrew to English modes, for example.\n#GdkEventKey contains a %group field that indicates the active\nkeyboard group. The level is computed from the modifier mask.\nThe returned array should be freed\nwith g_free()."
                            },
                            "source-position": {
                                "@filename": "gdk/gdkkeys.h",
                                "@line": "101"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "gdk/gdkkeys.c",
                                    "@line": "421",
                                    "#text": "%TRUE if keys were found and returned"
                                },
                                "type": {
                                    "@name": "gboolean",
                                    "@c:type": "gboolean"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "keymap",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "gdk/gdkkeys.c",
                                        "@line": "403",
                                        "#text": "a #GdkKeymap"
                                    },
                                    "type": {
                                        "@name": "Keymap",
                                        "@c:type": "GdkKeymap*"
                                    }
                                },
                                "parameter": [
                                    {
                                        "@name": "keyval",
                                        "@transfer-ownership": "none",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "gdk/gdkkeys.c",
                                            "@line": "404",
                                            "#text": "a keyval, such as %GDK_KEY_a, %GDK_KEY_Up, %GDK_KEY_Return, etc."
                                        },
                                        "type": {
                                            "@name": "guint",
                                            "@c:type": "guint"
                                        }
                                    },
                                    {
                                        "@name": "keys",
                                        "@direction": "out",
                                        "@caller-allocates": "0",
                                        "@transfer-ownership": "full",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "gdk/gdkkeys.c",
                                            "@line": "405",
                                            "#text": "return location\n    for an array of #GdkKeymapKey"
                                        },
                                        "array": {
                                            "@length": "2",
                                            "@zero-terminated": "0",
                                            "@c:type": "GdkKeymapKey**",
                                            "type": {
                                                "@name": "KeymapKey",
                                                "@c:type": "GdkKeymapKey*"
                                            }
                                        }
                                    },
                                    {
                                        "@name": "n_keys",
                                        "@direction": "out",
                                        "@caller-allocates": "0",
                                        "@transfer-ownership": "full",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "gdk/gdkkeys.c",
                                            "@line": "407",
                                            "#text": "return location for number of elements in returned array"
                                        },
                                        "type": {
                                            "@name": "gint",
                                            "@c:type": "gint*"
                                        }
                                    }
                                ]
                            }
                        },
                        {
                            "@name": "get_modifier_mask",
                            "@c:identifier": "gdk_keymap_get_modifier_mask",
                            "@version": "3.4",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkkeys.c",
                                "@line": "667",
                                "#text": "Returns the modifier mask the @keymap\u2019s windowing system backend\nuses for a particular purpose.\n\nNote that this function always returns real hardware modifiers, not\nvirtual ones (e.g. it will return #GDK_MOD1_MASK rather than\n#GDK_META_MASK if the backend maps MOD1 to META), so there are use\ncases where the return value of this function has to be transformed\nby gdk_keymap_add_virtual_modifiers() in order to contain the\nexpected result."
                            },
                            "source-position": {
                                "@filename": "gdk/gdkkeys.h",
                                "@line": "131"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "gdk/gdkkeys.c",
                                    "@line": "682",
                                    "#text": "the modifier mask used for @intent."
                                },
                                "type": {
                                    "@name": "ModifierType",
                                    "@c:type": "GdkModifierType"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "keymap",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "gdk/gdkkeys.c",
                                        "@line": "669",
                                        "#text": "a #GdkKeymap"
                                    },
                                    "type": {
                                        "@name": "Keymap",
                                        "@c:type": "GdkKeymap*"
                                    }
                                },
                                "parameter": {
                                    "@name": "intent",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "gdk/gdkkeys.c",
                                        "@line": "670",
                                        "#text": "the use case for the modifier mask"
                                    },
                                    "type": {
                                        "@name": "ModifierIntent",
                                        "@c:type": "GdkModifierIntent"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "get_modifier_state",
                            "@c:identifier": "gdk_keymap_get_modifier_state",
                            "@version": "3.4",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkkeys.c",
                                "@line": "380",
                                "#text": "Returns the current modifier state."
                            },
                            "source-position": {
                                "@filename": "gdk/gdkkeys.h",
                                "@line": "123"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "gdk/gdkkeys.c",
                                    "@line": "386",
                                    "#text": "the current modifier state."
                                },
                                "type": {
                                    "@name": "guint",
                                    "@c:type": "guint"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "keymap",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "gdk/gdkkeys.c",
                                        "@line": "382",
                                        "#text": "a #GdkKeymap"
                                    },
                                    "type": {
                                        "@name": "Keymap",
                                        "@c:type": "GdkKeymap*"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "get_num_lock_state",
                            "@c:identifier": "gdk_keymap_get_num_lock_state",
                            "@version": "3.0",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkkeys.c",
                                "@line": "344",
                                "#text": "Returns whether the Num Lock modifer is locked."
                            },
                            "source-position": {
                                "@filename": "gdk/gdkkeys.h",
                                "@line": "119"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "gdk/gdkkeys.c",
                                    "@line": "350",
                                    "#text": "%TRUE if Num Lock is on"
                                },
                                "type": {
                                    "@name": "gboolean",
                                    "@c:type": "gboolean"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "keymap",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "gdk/gdkkeys.c",
                                        "@line": "346",
                                        "#text": "a #GdkKeymap"
                                    },
                                    "type": {
                                        "@name": "Keymap",
                                        "@c:type": "GdkKeymap*"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "get_scroll_lock_state",
                            "@c:identifier": "gdk_keymap_get_scroll_lock_state",
                            "@version": "3.18",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkkeys.c",
                                "@line": "362",
                                "#text": "Returns whether the Scroll Lock modifer is locked."
                            },
                            "source-position": {
                                "@filename": "gdk/gdkkeys.h",
                                "@line": "121"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "gdk/gdkkeys.c",
                                    "@line": "368",
                                    "#text": "%TRUE if Scroll Lock is on"
                                },
                                "type": {
                                    "@name": "gboolean",
                                    "@c:type": "gboolean"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "keymap",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "gdk/gdkkeys.c",
                                        "@line": "364",
                                        "#text": "a #GdkKeymap"
                                    },
                                    "type": {
                                        "@name": "Keymap",
                                        "@c:type": "GdkKeymap*"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "have_bidi_layouts",
                            "@c:identifier": "gdk_keymap_have_bidi_layouts",
                            "@version": "2.12",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkkeys.c",
                                "@line": "307",
                                "#text": "Determines if keyboard layouts for both right-to-left and left-to-right\nlanguages are in use."
                            },
                            "source-position": {
                                "@filename": "gdk/gdkkeys.h",
                                "@line": "115"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "gdk/gdkkeys.c",
                                    "@line": "314",
                                    "#text": "%TRUE if there are layouts in both directions, %FALSE otherwise"
                                },
                                "type": {
                                    "@name": "gboolean",
                                    "@c:type": "gboolean"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "keymap",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "gdk/gdkkeys.c",
                                        "@line": "309",
                                        "#text": "a #GdkKeymap"
                                    },
                                    "type": {
                                        "@name": "Keymap",
                                        "@c:type": "GdkKeymap*"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "lookup_key",
                            "@c:identifier": "gdk_keymap_lookup_key",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkkeys.c",
                                "@line": "471",
                                "#text": "Looks up the keyval mapped to a keycode/group/level triplet.\nIf no keyval is bound to @key, returns 0. For normal user input,\nyou want to use gdk_keymap_translate_keyboard_state() instead of\nthis function, since the effective group/level may not be\nthe same as the current keyboard state."
                            },
                            "source-position": {
                                "@filename": "gdk/gdkkeys.h",
                                "@line": "89"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "gdk/gdkkeys.c",
                                    "@line": "482",
                                    "#text": "a keyval, or 0 if none was mapped to the given @key"
                                },
                                "type": {
                                    "@name": "guint",
                                    "@c:type": "guint"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "keymap",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "gdk/gdkkeys.c",
                                        "@line": "473",
                                        "#text": "a #GdkKeymap"
                                    },
                                    "type": {
                                        "@name": "Keymap",
                                        "@c:type": "GdkKeymap*"
                                    }
                                },
                                "parameter": {
                                    "@name": "key",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "gdk/gdkkeys.c",
                                        "@line": "474",
                                        "#text": "a #GdkKeymapKey with keycode, group, and level initialized"
                                    },
                                    "type": {
                                        "@name": "KeymapKey",
                                        "@c:type": "const GdkKeymapKey*"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "map_virtual_modifiers",
                            "@c:identifier": "gdk_keymap_map_virtual_modifiers",
                            "@version": "2.20",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkkeys.c",
                                "@line": "606",
                                "#text": "Maps the virtual modifiers (i.e. Super, Hyper and Meta) which\nare set in @state to their non-virtual counterparts (i.e. Mod2,\nMod3,...) and set the corresponding bits in @state.\n\nThis function is useful when matching key events against\naccelerators."
                            },
                            "source-position": {
                                "@filename": "gdk/gdkkeys.h",
                                "@line": "128"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "gdk/gdkkeys.c",
                                    "@line": "618",
                                    "#text": "%FALSE if two virtual modifiers were mapped to the\n    same non-virtual modifier. Note that %FALSE is also returned\n    if a virtual modifier is mapped to a non-virtual modifier that\n    was already set in @state."
                                },
                                "type": {
                                    "@name": "gboolean",
                                    "@c:type": "gboolean"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "keymap",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "gdk/gdkkeys.c",
                                        "@line": "608",
                                        "#text": "a #GdkKeymap"
                                    },
                                    "type": {
                                        "@name": "Keymap",
                                        "@c:type": "GdkKeymap*"
                                    }
                                },
                                "parameter": {
                                    "@name": "state",
                                    "@direction": "inout",
                                    "@caller-allocates": "0",
                                    "@transfer-ownership": "full",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "gdk/gdkkeys.c",
                                        "@line": "609",
                                        "#text": "pointer to the modifier state to map"
                                    },
                                    "type": {
                                        "@name": "ModifierType",
                                        "@c:type": "GdkModifierType*"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "translate_keyboard_state",
                            "@c:identifier": "gdk_keymap_translate_keyboard_state",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkkeys.c",
                                "@line": "494",
                                "#text": "Translates the contents of a #GdkEventKey into a keyval, effective\ngroup, and level. Modifiers that affected the translation and\nare thus unavailable for application use are returned in\n@consumed_modifiers.\nSee [Groups][key-group-explanation] for an explanation of\ngroups and levels. The @effective_group is the group that was\nactually used for the translation; some keys such as Enter are not\naffected by the active keyboard group. The @level is derived from\n@state. For convenience, #GdkEventKey already contains the translated\nkeyval, so this function isn\u2019t as useful as you might think.\n\n@consumed_modifiers gives modifiers that should be masked outfrom @state\nwhen comparing this key press to a hot key. For instance, on a US keyboard,\nthe `plus` symbol is shifted, so when comparing a key press to a\n`<Control>plus` accelerator `<Shift>` should be masked out.\n\n|[<!-- language=\"C\" -->\n// We want to ignore irrelevant modifiers like ScrollLock\n#define ALL_ACCELS_MASK (GDK_CONTROL_MASK | GDK_SHIFT_MASK | GDK_MOD1_MASK)\ngdk_keymap_translate_keyboard_state (keymap, event->hardware_keycode,\n                                     event->state, event->group,\n                                     &keyval, NULL, NULL, &consumed);\nif (keyval == GDK_PLUS &&\n    (event->state & ~consumed & ALL_ACCELS_MASK) == GDK_CONTROL_MASK)\n  // Control was pressed\n]|\n\nAn older interpretation @consumed_modifiers was that it contained\nall modifiers that might affect the translation of the key;\nthis allowed accelerators to be stored with irrelevant consumed\nmodifiers, by doing:\n|[<!-- language=\"C\" -->\n// XXX Don\u2019t do this XXX\nif (keyval == accel_keyval &&\n    (event->state & ~consumed & ALL_ACCELS_MASK) == (accel_mods & ~consumed))\n  // Accelerator was pressed\n]|\n\nHowever, this did not work if multi-modifier combinations were\nused in the keymap, since, for instance, `<Control>` would be\nmasked out even if only `<Control><Alt>` was used in the keymap.\nTo support this usage as well as well as possible, all single\nmodifier combinations that could affect the key for any combination\nof modifiers will be returned in @consumed_modifiers; multi-modifier\ncombinations are returned only when actually found in @state. When\nyou store accelerators, you should always store them with consumed\nmodifiers removed. Store `<Control>plus`, not `<Control><Shift>plus`,"
                            },
                            "source-position": {
                                "@filename": "gdk/gdkkeys.h",
                                "@line": "92"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "gdk/gdkkeys.c",
                                    "@line": "555",
                                    "#text": "%TRUE if there was a keyval bound to the keycode/state/group"
                                },
                                "type": {
                                    "@name": "gboolean",
                                    "@c:type": "gboolean"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "keymap",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "gdk/gdkkeys.c",
                                        "@line": "496",
                                        "#text": "a #GdkKeymap"
                                    },
                                    "type": {
                                        "@name": "Keymap",
                                        "@c:type": "GdkKeymap*"
                                    }
                                },
                                "parameter": [
                                    {
                                        "@name": "hardware_keycode",
                                        "@transfer-ownership": "none",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "gdk/gdkkeys.c",
                                            "@line": "497",
                                            "#text": "a keycode"
                                        },
                                        "type": {
                                            "@name": "guint",
                                            "@c:type": "guint"
                                        }
                                    },
                                    {
                                        "@name": "state",
                                        "@transfer-ownership": "none",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "gdk/gdkkeys.c",
                                            "@line": "498",
                                            "#text": "a modifier state"
                                        },
                                        "type": {
                                            "@name": "ModifierType",
                                            "@c:type": "GdkModifierType"
                                        }
                                    },
                                    {
                                        "@name": "group",
                                        "@transfer-ownership": "none",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "gdk/gdkkeys.c",
                                            "@line": "499",
                                            "#text": "active keyboard group"
                                        },
                                        "type": {
                                            "@name": "gint",
                                            "@c:type": "gint"
                                        }
                                    },
                                    {
                                        "@name": "keyval",
                                        "@direction": "out",
                                        "@caller-allocates": "0",
                                        "@transfer-ownership": "full",
                                        "@optional": "1",
                                        "@allow-none": "1",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "gdk/gdkkeys.c",
                                            "@line": "500",
                                            "#text": "return location for keyval, or %NULL"
                                        },
                                        "type": {
                                            "@name": "guint",
                                            "@c:type": "guint*"
                                        }
                                    },
                                    {
                                        "@name": "effective_group",
                                        "@direction": "out",
                                        "@caller-allocates": "0",
                                        "@transfer-ownership": "full",
                                        "@optional": "1",
                                        "@allow-none": "1",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "gdk/gdkkeys.c",
                                            "@line": "501",
                                            "#text": "return location for effective\n    group, or %NULL"
                                        },
                                        "type": {
                                            "@name": "gint",
                                            "@c:type": "gint*"
                                        }
                                    },
                                    {
                                        "@name": "level",
                                        "@direction": "out",
                                        "@caller-allocates": "0",
                                        "@transfer-ownership": "full",
                                        "@optional": "1",
                                        "@allow-none": "1",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "gdk/gdkkeys.c",
                                            "@line": "503",
                                            "#text": "return location for level, or %NULL"
                                        },
                                        "type": {
                                            "@name": "gint",
                                            "@c:type": "gint*"
                                        }
                                    },
                                    {
                                        "@name": "consumed_modifiers",
                                        "@direction": "out",
                                        "@caller-allocates": "0",
                                        "@transfer-ownership": "full",
                                        "@optional": "1",
                                        "@allow-none": "1",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "gdk/gdkkeys.c",
                                            "@line": "504",
                                            "#text": "return location for modifiers\n    that were used to determine the group or level, or %NULL"
                                        },
                                        "type": {
                                            "@name": "ModifierType",
                                            "@c:type": "GdkModifierType*"
                                        }
                                    }
                                ]
                            }
                        }
                    ],
                    "glib:signal": [
                        {
                            "@name": "direction-changed",
                            "@when": "last",
                            "@version": "2.0",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkkeys.c",
                                "@line": "126",
                                "#text": "The ::direction-changed signal gets emitted when the direction of\nthe keymap changes."
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "type": {
                                    "@name": "none",
                                    "@c:type": "void"
                                }
                            }
                        },
                        {
                            "@name": "keys-changed",
                            "@when": "last",
                            "@version": "2.2",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkkeys.c",
                                "@line": "144",
                                "#text": "The ::keys-changed signal is emitted when the mapping represented by\n@keymap changes."
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "type": {
                                    "@name": "none",
                                    "@c:type": "void"
                                }
                            }
                        },
                        {
                            "@name": "state-changed",
                            "@when": "last",
                            "@version": "2.16",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkkeys.c",
                                "@line": "163",
                                "#text": "The ::state-changed signal is emitted when the state of the\nkeyboard changes, e.g when Caps Lock is turned on or off.\nSee gdk_keymap_get_caps_lock_state()."
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "type": {
                                    "@name": "none",
                                    "@c:type": "void"
                                }
                            }
                        }
                    ]
                },
                {
                    "@name": "Monitor",
                    "@c:symbol-prefix": "monitor",
                    "@c:type": "GdkMonitor",
                    "@parent": "GObject.Object",
                    "@glib:type-name": "GdkMonitor",
                    "@glib:get-type": "gdk_monitor_get_type",
                    "@glib:type-struct": "MonitorClass",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "gdk/gdkmonitor.c",
                        "@line": "28",
                        "#text": "GdkMonitor objects represent the individual outputs that are\nassociated with a #GdkDisplay. GdkDisplay has APIs to enumerate\nmonitors with gdk_display_get_n_monitors() and gdk_display_get_monitor(), and\nto find particular monitors with gdk_display_get_primary_monitor() or\ngdk_display_get_monitor_at_window().\n\nGdkMonitor was introduced in GTK+ 3.22 and supersedes earlier\nAPIs in GdkScreen to obtain monitor-related information."
                    },
                    "source-position": {
                        "@filename": "gdk/gdkmonitor.h",
                        "@line": "40"
                    },
                    "method": [
                        {
                            "@name": "get_display",
                            "@c:identifier": "gdk_monitor_get_display",
                            "@glib:get-property": "display",
                            "@version": "3.22",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkmonitor.c",
                                "@line": "251",
                                "#text": "Gets the display that this monitor belongs to."
                            },
                            "source-position": {
                                "@filename": "gdk/gdkmonitor.h",
                                "@line": "69"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "gdk/gdkmonitor.c",
                                    "@line": "257",
                                    "#text": "the display"
                                },
                                "type": {
                                    "@name": "Display",
                                    "@c:type": "GdkDisplay*"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "monitor",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "gdk/gdkmonitor.c",
                                        "@line": "253",
                                        "#text": "a #GdkMonitor"
                                    },
                                    "type": {
                                        "@name": "Monitor",
                                        "@c:type": "GdkMonitor*"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "get_geometry",
                            "@c:identifier": "gdk_monitor_get_geometry",
                            "@glib:get-property": "geometry",
                            "@version": "3.22",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkmonitor.c",
                                "@line": "268",
                                "#text": "Retrieves the size and position of an individual monitor within the\ndisplay coordinate space. The returned geometry is in  \u201dapplication pixels\u201d,\nnot in \u201ddevice pixels\u201d (see gdk_monitor_get_scale_factor())."
                            },
                            "source-position": {
                                "@filename": "gdk/gdkmonitor.h",
                                "@line": "71"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "type": {
                                    "@name": "none",
                                    "@c:type": "void"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "monitor",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "gdk/gdkmonitor.c",
                                        "@line": "270",
                                        "#text": "a #GdkMonitor"
                                    },
                                    "type": {
                                        "@name": "Monitor",
                                        "@c:type": "GdkMonitor*"
                                    }
                                },
                                "parameter": {
                                    "@name": "geometry",
                                    "@direction": "out",
                                    "@caller-allocates": "1",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "gdk/gdkmonitor.c",
                                        "@line": "271",
                                        "#text": "a #GdkRectangle to be filled with the monitor geometry"
                                    },
                                    "type": {
                                        "@name": "Rectangle",
                                        "@c:type": "GdkRectangle*"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "get_height_mm",
                            "@c:identifier": "gdk_monitor_get_height_mm",
                            "@glib:get-property": "height-mm",
                            "@version": "3.22",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkmonitor.c",
                                "@line": "341",
                                "#text": "Gets the height in millimeters of the monitor."
                            },
                            "source-position": {
                                "@filename": "gdk/gdkmonitor.h",
                                "@line": "79"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "gdk/gdkmonitor.c",
                                    "@line": "347",
                                    "#text": "the physical height of the monitor"
                                },
                                "type": {
                                    "@name": "gint",
                                    "@c:type": "int"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "monitor",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "gdk/gdkmonitor.c",
                                        "@line": "343",
                                        "#text": "a #GdkMonitor"
                                    },
                                    "type": {
                                        "@name": "Monitor",
                                        "@c:type": "GdkMonitor*"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "get_manufacturer",
                            "@c:identifier": "gdk_monitor_get_manufacturer",
                            "@glib:get-property": "manufacturer",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkmonitor.c",
                                "@line": "374",
                                "#text": "Gets the name or PNP ID of the monitor's manufacturer, if available.\n\nNote that this value might also vary depending on actual\ndisplay backend.\n\nPNP ID registry is located at https://uefi.org/pnp_id_list"
                            },
                            "source-position": {
                                "@filename": "gdk/gdkmonitor.h",
                                "@line": "81"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "@nullable": "1",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "gdk/gdkmonitor.c",
                                    "@line": "385",
                                    "#text": "the name of the manufacturer, or %NULL"
                                },
                                "type": {
                                    "@name": "utf8",
                                    "@c:type": "const char*"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "monitor",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "gdk/gdkmonitor.c",
                                        "@line": "376",
                                        "#text": "a #GdkMonitor"
                                    },
                                    "type": {
                                        "@name": "Monitor",
                                        "@c:type": "GdkMonitor*"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "get_model",
                            "@c:identifier": "gdk_monitor_get_model",
                            "@glib:get-property": "model",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkmonitor.c",
                                "@line": "395",
                                "#text": "Gets the a string identifying the monitor model, if available."
                            },
                            "source-position": {
                                "@filename": "gdk/gdkmonitor.h",
                                "@line": "83"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "@nullable": "1",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "gdk/gdkmonitor.c",
                                    "@line": "401",
                                    "#text": "the monitor model, or %NULL"
                                },
                                "type": {
                                    "@name": "utf8",
                                    "@c:type": "const char*"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "monitor",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "gdk/gdkmonitor.c",
                                        "@line": "397",
                                        "#text": "a #GdkMonitor"
                                    },
                                    "type": {
                                        "@name": "Monitor",
                                        "@c:type": "GdkMonitor*"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "get_refresh_rate",
                            "@c:identifier": "gdk_monitor_get_refresh_rate",
                            "@glib:get-property": "refresh-rate",
                            "@version": "3.22",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkmonitor.c",
                                "@line": "434",
                                "#text": "Gets the refresh rate of the monitor, if available.\n\nThe value is in milli-Hertz, so a refresh rate of 60Hz\nis returned as 60000."
                            },
                            "source-position": {
                                "@filename": "gdk/gdkmonitor.h",
                                "@line": "87"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "gdk/gdkmonitor.c",
                                    "@line": "443",
                                    "#text": "the refresh rate in milli-Hertz, or 0"
                                },
                                "type": {
                                    "@name": "gint",
                                    "@c:type": "int"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "monitor",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "gdk/gdkmonitor.c",
                                        "@line": "436",
                                        "#text": "a #GdkMonitor"
                                    },
                                    "type": {
                                        "@name": "Monitor",
                                        "@c:type": "GdkMonitor*"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "get_scale_factor",
                            "@c:identifier": "gdk_monitor_get_scale_factor",
                            "@glib:get-property": "scale-factor",
                            "@version": "3.22",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkmonitor.c",
                                "@line": "411",
                                "#text": "Gets the internal scale factor that maps from monitor coordinates\nto the actual device pixels. On traditional systems this is 1, but\non very high density outputs this can be a higher value (often 2).\n\nThis can be used if you want to create pixel based data for a\nparticular monitor, but most of the time you\u2019re drawing to a window\nwhere it is better to use gdk_window_get_scale_factor() instead."
                            },
                            "source-position": {
                                "@filename": "gdk/gdkmonitor.h",
                                "@line": "85"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "gdk/gdkmonitor.c",
                                    "@line": "423",
                                    "#text": "the scale factor"
                                },
                                "type": {
                                    "@name": "gint",
                                    "@c:type": "int"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "monitor",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "gdk/gdkmonitor.c",
                                        "@line": "413",
                                        "#text": "a #GdkMonitor"
                                    },
                                    "type": {
                                        "@name": "Monitor",
                                        "@c:type": "GdkMonitor*"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "get_subpixel_layout",
                            "@c:identifier": "gdk_monitor_get_subpixel_layout",
                            "@glib:get-property": "subpixel-layout",
                            "@version": "3.22",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkmonitor.c",
                                "@line": "454",
                                "#text": "Gets information about the layout of red, green and blue\nprimaries for each pixel in this monitor, if available."
                            },
                            "source-position": {
                                "@filename": "gdk/gdkmonitor.h",
                                "@line": "89"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "gdk/gdkmonitor.c",
                                    "@line": "461",
                                    "#text": "the subpixel layout"
                                },
                                "type": {
                                    "@name": "SubpixelLayout",
                                    "@c:type": "GdkSubpixelLayout"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "monitor",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "gdk/gdkmonitor.c",
                                        "@line": "456",
                                        "#text": "a #GdkMonitor"
                                    },
                                    "type": {
                                        "@name": "Monitor",
                                        "@c:type": "GdkMonitor*"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "get_width_mm",
                            "@c:identifier": "gdk_monitor_get_width_mm",
                            "@glib:get-property": "width-mm",
                            "@version": "3.22",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkmonitor.c",
                                "@line": "323",
                                "#text": "Gets the width in millimeters of the monitor."
                            },
                            "source-position": {
                                "@filename": "gdk/gdkmonitor.h",
                                "@line": "77"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "gdk/gdkmonitor.c",
                                    "@line": "329",
                                    "#text": "the physical width of the monitor"
                                },
                                "type": {
                                    "@name": "gint",
                                    "@c:type": "int"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "monitor",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "gdk/gdkmonitor.c",
                                        "@line": "325",
                                        "#text": "a #GdkMonitor"
                                    },
                                    "type": {
                                        "@name": "Monitor",
                                        "@c:type": "GdkMonitor*"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "get_workarea",
                            "@c:identifier": "gdk_monitor_get_workarea",
                            "@glib:get-property": "workarea",
                            "@version": "3.22",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkmonitor.c",
                                "@line": "289",
                                "#text": "Retrieves the size and position of the \u201cwork area\u201d on a monitor\nwithin the display coordinate space. The returned geometry is in\n\u201dapplication pixels\u201d, not in \u201ddevice pixels\u201d (see\ngdk_monitor_get_scale_factor()).\n\nThe work area should be considered when positioning menus and\nsimilar popups, to avoid placing them below panels, docks or other\ndesktop components.\n\nNote that not all backends may have a concept of workarea. This\nfunction will return the monitor geometry if a workarea is not\navailable, or does not apply."
                            },
                            "source-position": {
                                "@filename": "gdk/gdkmonitor.h",
                                "@line": "74"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "type": {
                                    "@name": "none",
                                    "@c:type": "void"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "monitor",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "gdk/gdkmonitor.c",
                                        "@line": "291",
                                        "#text": "a #GdkMonitor"
                                    },
                                    "type": {
                                        "@name": "Monitor",
                                        "@c:type": "GdkMonitor*"
                                    }
                                },
                                "parameter": {
                                    "@name": "workarea",
                                    "@direction": "out",
                                    "@caller-allocates": "1",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "gdk/gdkmonitor.c",
                                        "@line": "292",
                                        "#text": "a #GdkRectangle to be filled with\n    the monitor workarea"
                                    },
                                    "type": {
                                        "@name": "Rectangle",
                                        "@c:type": "GdkRectangle*"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "is_primary",
                            "@c:identifier": "gdk_monitor_is_primary",
                            "@version": "3.22",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkmonitor.c",
                                "@line": "472",
                                "#text": "Gets whether this monitor should be considered primary\n(see gdk_display_get_primary_monitor())."
                            },
                            "source-position": {
                                "@filename": "gdk/gdkmonitor.h",
                                "@line": "91"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "gdk/gdkmonitor.c",
                                    "@line": "479",
                                    "#text": "%TRUE if @monitor is primary"
                                },
                                "type": {
                                    "@name": "gboolean",
                                    "@c:type": "gboolean"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "monitor",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "gdk/gdkmonitor.c",
                                        "@line": "474",
                                        "#text": "a #GdkMonitor"
                                    },
                                    "type": {
                                        "@name": "Monitor",
                                        "@c:type": "GdkMonitor*"
                                    }
                                }
                            }
                        }
                    ],
                    "property": [
                        {
                            "@name": "display",
                            "@writable": "1",
                            "@construct-only": "1",
                            "@transfer-ownership": "none",
                            "@getter": "get_display",
                            "type": {
                                "@name": "Display"
                            }
                        },
                        {
                            "@name": "geometry",
                            "@transfer-ownership": "none",
                            "@getter": "get_geometry",
                            "type": {
                                "@name": "Rectangle"
                            }
                        },
                        {
                            "@name": "height-mm",
                            "@transfer-ownership": "none",
                            "@getter": "get_height_mm",
                            "type": {
                                "@name": "gint",
                                "@c:type": "gint"
                            }
                        },
                        {
                            "@name": "manufacturer",
                            "@transfer-ownership": "none",
                            "@getter": "get_manufacturer",
                            "type": {
                                "@name": "utf8",
                                "@c:type": "gchar*"
                            }
                        },
                        {
                            "@name": "model",
                            "@transfer-ownership": "none",
                            "@getter": "get_model",
                            "type": {
                                "@name": "utf8",
                                "@c:type": "gchar*"
                            }
                        },
                        {
                            "@name": "refresh-rate",
                            "@transfer-ownership": "none",
                            "@getter": "get_refresh_rate",
                            "type": {
                                "@name": "gint",
                                "@c:type": "gint"
                            }
                        },
                        {
                            "@name": "scale-factor",
                            "@transfer-ownership": "none",
                            "@getter": "get_scale_factor",
                            "type": {
                                "@name": "gint",
                                "@c:type": "gint"
                            }
                        },
                        {
                            "@name": "subpixel-layout",
                            "@transfer-ownership": "none",
                            "@getter": "get_subpixel_layout",
                            "type": {
                                "@name": "SubpixelLayout"
                            }
                        },
                        {
                            "@name": "width-mm",
                            "@transfer-ownership": "none",
                            "@getter": "get_width_mm",
                            "type": {
                                "@name": "gint",
                                "@c:type": "gint"
                            }
                        },
                        {
                            "@name": "workarea",
                            "@transfer-ownership": "none",
                            "@getter": "get_workarea",
                            "type": {
                                "@name": "Rectangle"
                            }
                        }
                    ],
                    "glib:signal": {
                        "@name": "invalidate",
                        "@when": "first",
                        "return-value": {
                            "@transfer-ownership": "none",
                            "type": {
                                "@name": "none",
                                "@c:type": "void"
                            }
                        }
                    }
                },
                {
                    "@name": "Screen",
                    "@c:symbol-prefix": "screen",
                    "@c:type": "GdkScreen",
                    "@parent": "GObject.Object",
                    "@glib:type-name": "GdkScreen",
                    "@glib:get-type": "gdk_screen_get_type",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "gdk/gdkscreen.c",
                        "@line": "33",
                        "#text": "#GdkScreen objects are the GDK representation of the screen on\nwhich windows can be displayed and on which the pointer moves.\nX originally identified screens with physical screens, but\nnowadays it is more common to have a single #GdkScreen which\ncombines several physical monitors (see gdk_screen_get_n_monitors()).\n\nGdkScreen is used throughout GDK and GTK+ to specify which screen\nthe top level windows are to be displayed on. it is also used to\nquery the screen specification and default settings such as\nthe default visual (gdk_screen_get_system_visual()), the dimensions\nof the physical monitors (gdk_screen_get_monitor_geometry()), etc."
                    },
                    "function": [
                        {
                            "@name": "get_default",
                            "@c:identifier": "gdk_screen_get_default",
                            "@version": "2.2",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkdisplaymanager.c",
                                "@line": "342",
                                "#text": "Gets the default screen for the default display. (See\ngdk_display_get_default ())."
                            },
                            "source-position": {
                                "@filename": "gdk/gdkscreen.h",
                                "@line": "107"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "@nullable": "1",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "gdk/gdkdisplaymanager.c",
                                    "@line": "348",
                                    "#text": "a #GdkScreen, or %NULL if\n    there is no default display."
                                },
                                "type": {
                                    "@name": "Screen",
                                    "@c:type": "GdkScreen*"
                                }
                            }
                        },
                        {
                            "@name": "height",
                            "@c:identifier": "gdk_screen_height",
                            "@deprecated": "1",
                            "@deprecated-version": "3.22",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkscreen.c",
                                "@line": "295",
                                "#text": "Gets the height of the default screen in pixels. The returned\nsize is in \u201dapplication pixels\u201d, not in \u201ddevice pixels\u201d (see\ngdk_screen_get_monitor_scale_factor())."
                            },
                            "doc-deprecated": {
                                "@xml:space": "preserve",
                                "#text": "Use per-monitor information"
                            },
                            "source-position": {
                                "@filename": "gdk/gdkmain.h",
                                "@line": "110"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "gdk/gdkscreen.c",
                                    "@line": "302",
                                    "#text": "the height of the default screen in pixels."
                                },
                                "type": {
                                    "@name": "gint",
                                    "@c:type": "gint"
                                }
                            }
                        },
                        {
                            "@name": "height_mm",
                            "@c:identifier": "gdk_screen_height_mm",
                            "@deprecated": "1",
                            "@deprecated-version": "3.22",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkscreen.c",
                                "@line": "333",
                                "#text": "Returns the height of the default screen in millimeters.\nNote that on many X servers this value will not be correct."
                            },
                            "doc-deprecated": {
                                "@xml:space": "preserve",
                                "#text": "Use per-monitor information"
                            },
                            "source-position": {
                                "@filename": "gdk/gdkmain.h",
                                "@line": "115"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "gdk/gdkscreen.c",
                                    "@line": "339",
                                    "#text": "the height of the default screen in millimeters,\nthough it is not always correct."
                                },
                                "type": {
                                    "@name": "gint",
                                    "@c:type": "gint"
                                }
                            }
                        },
                        {
                            "@name": "width",
                            "@c:identifier": "gdk_screen_width",
                            "@deprecated": "1",
                            "@deprecated-version": "3.22",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkscreen.c",
                                "@line": "276",
                                "#text": "Gets the width of the default screen in pixels. The returned\nsize is in \u201dapplication pixels\u201d, not in \u201ddevice pixels\u201d (see\ngdk_screen_get_monitor_scale_factor())."
                            },
                            "doc-deprecated": {
                                "@xml:space": "preserve",
                                "#text": "Use per-monitor information"
                            },
                            "source-position": {
                                "@filename": "gdk/gdkmain.h",
                                "@line": "108"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "gdk/gdkscreen.c",
                                    "@line": "283",
                                    "#text": "the width of the default screen in pixels."
                                },
                                "type": {
                                    "@name": "gint",
                                    "@c:type": "gint"
                                }
                            }
                        },
                        {
                            "@name": "width_mm",
                            "@c:identifier": "gdk_screen_width_mm",
                            "@deprecated": "1",
                            "@deprecated-version": "3.22",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkscreen.c",
                                "@line": "314",
                                "#text": "Returns the width of the default screen in millimeters.\nNote that on many X servers this value will not be correct."
                            },
                            "doc-deprecated": {
                                "@xml:space": "preserve",
                                "#text": "Use per-monitor information"
                            },
                            "source-position": {
                                "@filename": "gdk/gdkmain.h",
                                "@line": "113"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "gdk/gdkscreen.c",
                                    "@line": "320",
                                    "#text": "the width of the default screen in millimeters,\nthough it is not always correct."
                                },
                                "type": {
                                    "@name": "gint",
                                    "@c:type": "gint"
                                }
                            }
                        }
                    ],
                    "method": [
                        {
                            "@name": "get_active_window",
                            "@c:identifier": "gdk_screen_get_active_window",
                            "@version": "2.10",
                            "@deprecated": "1",
                            "@deprecated-version": "3.22",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkscreen.c",
                                "@line": "1031",
                                "#text": "Returns the screen\u2019s currently active window.\n\nOn X11, this is done by inspecting the _NET_ACTIVE_WINDOW property\non the root window, as described in the\n[Extended Window Manager Hints](http://www.freedesktop.org/Standards/wm-spec).\nIf there is no currently currently active\nwindow, or the window manager does not support the\n_NET_ACTIVE_WINDOW hint, this function returns %NULL.\n\nOn other platforms, this function may return %NULL, depending on whether\nit is implementable on that platform.\n\nThe returned window should be unrefed using g_object_unref() when\nno longer needed."
                            },
                            "source-position": {
                                "@filename": "gdk/gdkscreen.h",
                                "@line": "127"
                            },
                            "return-value": {
                                "@transfer-ownership": "full",
                                "@nullable": "1",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "gdk/gdkscreen.c",
                                    "@line": "1050",
                                    "#text": "the currently active window,\n  or %NULL."
                                },
                                "type": {
                                    "@name": "Window",
                                    "@c:type": "GdkWindow*"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "screen",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "gdk/gdkscreen.c",
                                        "@line": "1033",
                                        "#text": "a #GdkScreen"
                                    },
                                    "type": {
                                        "@name": "Screen",
                                        "@c:type": "GdkScreen*"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "get_display",
                            "@c:identifier": "gdk_screen_get_display",
                            "@version": "2.2",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkscreen.c",
                                "@line": "524",
                                "#text": "Gets the display to which the @screen belongs."
                            },
                            "source-position": {
                                "@filename": "gdk/gdkscreen.h",
                                "@line": "54"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "gdk/gdkscreen.c",
                                    "@line": "530",
                                    "#text": "the display to which @screen belongs"
                                },
                                "type": {
                                    "@name": "Display",
                                    "@c:type": "GdkDisplay*"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "screen",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "gdk/gdkscreen.c",
                                        "@line": "526",
                                        "#text": "a #GdkScreen"
                                    },
                                    "type": {
                                        "@name": "Screen",
                                        "@c:type": "GdkScreen*"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "get_font_options",
                            "@c:identifier": "gdk_screen_get_font_options",
                            "@glib:get-property": "font-options",
                            "@version": "2.10",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkscreen.c",
                                "@line": "386",
                                "#text": "Gets any options previously set with gdk_screen_set_font_options()."
                            },
                            "source-position": {
                                "@filename": "gdk/gdkscreen.h",
                                "@line": "118"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "@nullable": "1",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "gdk/gdkscreen.c",
                                    "@line": "392",
                                    "#text": "the current font options, or %NULL if no\n default font options have been set."
                                },
                                "type": {
                                    "@name": "cairo.FontOptions",
                                    "@c:type": "const cairo_font_options_t*"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "screen",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "gdk/gdkscreen.c",
                                        "@line": "388",
                                        "#text": "a #GdkScreen"
                                    },
                                    "type": {
                                        "@name": "Screen",
                                        "@c:type": "GdkScreen*"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "get_height",
                            "@c:identifier": "gdk_screen_get_height",
                            "@version": "2.2",
                            "@deprecated": "1",
                            "@deprecated-version": "3.22",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkscreen.c",
                                "@line": "565",
                                "#text": "Gets the height of @screen in pixels. The returned size is in\n\u201dapplication pixels\u201d, not in \u201ddevice pixels\u201d (see\ngdk_screen_get_monitor_scale_factor())."
                            },
                            "doc-deprecated": {
                                "@xml:space": "preserve",
                                "#text": "Use per-monitor information instead"
                            },
                            "source-position": {
                                "@filename": "gdk/gdkscreen.h",
                                "@line": "60"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "gdk/gdkscreen.c",
                                    "@line": "573",
                                    "#text": "the height of @screen in pixels."
                                },
                                "type": {
                                    "@name": "gint",
                                    "@c:type": "gint"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "screen",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "gdk/gdkscreen.c",
                                        "@line": "567",
                                        "#text": "a #GdkScreen"
                                    },
                                    "type": {
                                        "@name": "Screen",
                                        "@c:type": "GdkScreen*"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "get_height_mm",
                            "@c:identifier": "gdk_screen_get_height_mm",
                            "@version": "2.2",
                            "@deprecated": "1",
                            "@deprecated-version": "3.22",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkscreen.c",
                                "@line": "611",
                                "#text": "Returns the height of @screen in millimeters.\n\nNote that this value is somewhat ill-defined when the screen\nhas multiple monitors of different resolution. It is recommended\nto use the monitor dimensions instead."
                            },
                            "doc-deprecated": {
                                "@xml:space": "preserve",
                                "#text": "Use per-monitor information instead"
                            },
                            "source-position": {
                                "@filename": "gdk/gdkscreen.h",
                                "@line": "64"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "gdk/gdkscreen.c",
                                    "@line": "621",
                                    "#text": "the heigth of @screen in millimeters."
                                },
                                "type": {
                                    "@name": "gint",
                                    "@c:type": "gint"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "screen",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "gdk/gdkscreen.c",
                                        "@line": "613",
                                        "#text": "a #GdkScreen"
                                    },
                                    "type": {
                                        "@name": "Screen",
                                        "@c:type": "GdkScreen*"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "get_monitor_at_point",
                            "@c:identifier": "gdk_screen_get_monitor_at_point",
                            "@version": "2.2",
                            "@deprecated": "1",
                            "@deprecated-version": "3.22",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkscreen.c",
                                "@line": "215",
                                "#text": "Returns the monitor number in which the point (@x,@y) is located."
                            },
                            "doc-deprecated": {
                                "@xml:space": "preserve",
                                "#text": "Use gdk_display_get_monitor_at_point() instead"
                            },
                            "source-position": {
                                "@filename": "gdk/gdkscreen.h",
                                "@line": "87"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "gdk/gdkscreen.c",
                                    "@line": "223",
                                    "#text": "the monitor number in which the point (@x,@y) lies, or\n  a monitor close to (@x,@y) if the point is not in any monitor."
                                },
                                "type": {
                                    "@name": "gint",
                                    "@c:type": "gint"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "screen",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "gdk/gdkscreen.c",
                                        "@line": "217",
                                        "#text": "a #GdkScreen."
                                    },
                                    "type": {
                                        "@name": "Screen",
                                        "@c:type": "GdkScreen*"
                                    }
                                },
                                "parameter": [
                                    {
                                        "@name": "x",
                                        "@transfer-ownership": "none",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "gdk/gdkscreen.c",
                                            "@line": "218",
                                            "#text": "the x coordinate in the virtual screen."
                                        },
                                        "type": {
                                            "@name": "gint",
                                            "@c:type": "gint"
                                        }
                                    },
                                    {
                                        "@name": "y",
                                        "@transfer-ownership": "none",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "gdk/gdkscreen.c",
                                            "@line": "219",
                                            "#text": "the y coordinate in the virtual screen."
                                        },
                                        "type": {
                                            "@name": "gint",
                                            "@c:type": "gint"
                                        }
                                    }
                                ]
                            }
                        },
                        {
                            "@name": "get_monitor_at_window",
                            "@c:identifier": "gdk_screen_get_monitor_at_window",
                            "@version": "2.2",
                            "@deprecated": "1",
                            "@deprecated-version": "3.22",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkscreen.c",
                                "@line": "245",
                                "#text": "Returns the number of the monitor in which the largest area of the\nbounding rectangle of @window resides."
                            },
                            "doc-deprecated": {
                                "@xml:space": "preserve",
                                "#text": "Use gdk_display_get_monitor_at_window() instead"
                            },
                            "source-position": {
                                "@filename": "gdk/gdkscreen.h",
                                "@line": "91"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "gdk/gdkscreen.c",
                                    "@line": "253",
                                    "#text": "the monitor number in which most of @window is located,\n    or if @window does not intersect any monitors, a monitor,\n    close to @window."
                                },
                                "type": {
                                    "@name": "gint",
                                    "@c:type": "gint"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "screen",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "gdk/gdkscreen.c",
                                        "@line": "247",
                                        "#text": "a #GdkScreen."
                                    },
                                    "type": {
                                        "@name": "Screen",
                                        "@c:type": "GdkScreen*"
                                    }
                                },
                                "parameter": {
                                    "@name": "window",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "gdk/gdkscreen.c",
                                        "@line": "248",
                                        "#text": "a #GdkWindow"
                                    },
                                    "type": {
                                        "@name": "Window",
                                        "@c:type": "GdkWindow*"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "get_monitor_geometry",
                            "@c:identifier": "gdk_screen_get_monitor_geometry",
                            "@version": "2.2",
                            "@deprecated": "1",
                            "@deprecated-version": "3.22",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkscreen.c",
                                "@line": "829",
                                "#text": "Retrieves the #GdkRectangle representing the size and position of\nthe individual monitor within the entire screen area. The returned\ngeometry is in \u201dapplication pixels\u201d, not in \u201ddevice pixels\u201d (see\ngdk_screen_get_monitor_scale_factor()).\n\nMonitor numbers start at 0. To obtain the number of monitors of\n@screen, use gdk_screen_get_n_monitors().\n\nNote that the size of the entire screen area can be retrieved via\ngdk_screen_get_width() and gdk_screen_get_height()."
                            },
                            "doc-deprecated": {
                                "@xml:space": "preserve",
                                "#text": "Use gdk_monitor_get_geometry() instead"
                            },
                            "source-position": {
                                "@filename": "gdk/gdkscreen.h",
                                "@line": "78"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "type": {
                                    "@name": "none",
                                    "@c:type": "void"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "screen",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "gdk/gdkscreen.c",
                                        "@line": "831",
                                        "#text": "a #GdkScreen"
                                    },
                                    "type": {
                                        "@name": "Screen",
                                        "@c:type": "GdkScreen*"
                                    }
                                },
                                "parameter": [
                                    {
                                        "@name": "monitor_num",
                                        "@transfer-ownership": "none",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "gdk/gdkscreen.c",
                                            "@line": "832",
                                            "#text": "the monitor number"
                                        },
                                        "type": {
                                            "@name": "gint",
                                            "@c:type": "gint"
                                        }
                                    },
                                    {
                                        "@name": "dest",
                                        "@direction": "out",
                                        "@caller-allocates": "1",
                                        "@transfer-ownership": "none",
                                        "@optional": "1",
                                        "@allow-none": "1",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "gdk/gdkscreen.c",
                                            "@line": "833",
                                            "#text": "a #GdkRectangle to be filled with\n    the monitor geometry"
                                        },
                                        "type": {
                                            "@name": "Rectangle",
                                            "@c:type": "GdkRectangle*"
                                        }
                                    }
                                ]
                            }
                        },
                        {
                            "@name": "get_monitor_height_mm",
                            "@c:identifier": "gdk_screen_get_monitor_height_mm",
                            "@version": "2.14",
                            "@deprecated": "1",
                            "@deprecated-version": "3.22",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkscreen.c",
                                "@line": "770",
                                "#text": "Gets the height in millimeters of the specified monitor."
                            },
                            "doc-deprecated": {
                                "@xml:space": "preserve",
                                "#text": "Use gdk_monitor_get_height_mm() instead"
                            },
                            "source-position": {
                                "@filename": "gdk/gdkscreen.h",
                                "@line": "97"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "gdk/gdkscreen.c",
                                    "@line": "777",
                                    "#text": "the height of the monitor, or -1 if not available"
                                },
                                "type": {
                                    "@name": "gint",
                                    "@c:type": "gint"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "screen",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "gdk/gdkscreen.c",
                                        "@line": "772",
                                        "#text": "a #GdkScreen"
                                    },
                                    "type": {
                                        "@name": "Screen",
                                        "@c:type": "GdkScreen*"
                                    }
                                },
                                "parameter": {
                                    "@name": "monitor_num",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "gdk/gdkscreen.c",
                                        "@line": "773",
                                        "#text": "number of the monitor, between 0 and gdk_screen_get_n_monitors (screen)"
                                    },
                                    "type": {
                                        "@name": "gint",
                                        "@c:type": "gint"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "get_monitor_plug_name",
                            "@c:identifier": "gdk_screen_get_monitor_plug_name",
                            "@version": "2.14",
                            "@deprecated": "1",
                            "@deprecated-version": "3.22",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkscreen.c",
                                "@line": "798",
                                "#text": "Returns the output name of the specified monitor.\nUsually something like VGA, DVI, or TV, not the actual\nproduct name of the display device."
                            },
                            "doc-deprecated": {
                                "@xml:space": "preserve",
                                "#text": "Use gdk_monitor_get_model() instead"
                            },
                            "source-position": {
                                "@filename": "gdk/gdkscreen.h",
                                "@line": "100"
                            },
                            "return-value": {
                                "@transfer-ownership": "full",
                                "@nullable": "1",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "gdk/gdkscreen.c",
                                    "@line": "807",
                                    "#text": "a newly-allocated string containing the name\n  of the monitor, or %NULL if the name cannot be determined"
                                },
                                "type": {
                                    "@name": "utf8",
                                    "@c:type": "gchar*"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "screen",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "gdk/gdkscreen.c",
                                        "@line": "800",
                                        "#text": "a #GdkScreen"
                                    },
                                    "type": {
                                        "@name": "Screen",
                                        "@c:type": "GdkScreen*"
                                    }
                                },
                                "parameter": {
                                    "@name": "monitor_num",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "gdk/gdkscreen.c",
                                        "@line": "801",
                                        "#text": "number of the monitor, between 0 and gdk_screen_get_n_monitors (screen)"
                                    },
                                    "type": {
                                        "@name": "gint",
                                        "@c:type": "gint"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "get_monitor_scale_factor",
                            "@c:identifier": "gdk_screen_get_monitor_scale_factor",
                            "@version": "3.10",
                            "@deprecated": "1",
                            "@deprecated-version": "3.22",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkscreen.c",
                                "@line": "1127",
                                "#text": "Returns the internal scale factor that maps from monitor coordinates\nto the actual device pixels. On traditional systems this is 1, but\non very high density outputs this can be a higher value (often 2).\n\nThis can be used if you want to create pixel based data for a\nparticular monitor, but most of the time you\u2019re drawing to a window\nwhere it is better to use gdk_window_get_scale_factor() instead."
                            },
                            "doc-deprecated": {
                                "@xml:space": "preserve",
                                "#text": "Use gdk_monitor_get_scale_factor() instead"
                            },
                            "source-position": {
                                "@filename": "gdk/gdkscreen.h",
                                "@line": "103"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "gdk/gdkscreen.c",
                                    "@line": "1140",
                                    "#text": "the scale factor"
                                },
                                "type": {
                                    "@name": "gint",
                                    "@c:type": "gint"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "screen",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "gdk/gdkscreen.c",
                                        "@line": "1129",
                                        "#text": "screen to get scale factor for"
                                    },
                                    "type": {
                                        "@name": "Screen",
                                        "@c:type": "GdkScreen*"
                                    }
                                },
                                "parameter": {
                                    "@name": "monitor_num",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "gdk/gdkscreen.c",
                                        "@line": "1130",
                                        "#text": "number of the monitor, between 0 and gdk_screen_get_n_monitors (screen)"
                                    },
                                    "type": {
                                        "@name": "gint",
                                        "@c:type": "gint"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "get_monitor_width_mm",
                            "@c:identifier": "gdk_screen_get_monitor_width_mm",
                            "@version": "2.14",
                            "@deprecated": "1",
                            "@deprecated-version": "3.22",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkscreen.c",
                                "@line": "742",
                                "#text": "Gets the width in millimeters of the specified monitor, if available."
                            },
                            "doc-deprecated": {
                                "@xml:space": "preserve",
                                "#text": "Use gdk_monitor_get_width_mm() instead"
                            },
                            "source-position": {
                                "@filename": "gdk/gdkscreen.h",
                                "@line": "94"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "gdk/gdkscreen.c",
                                    "@line": "749",
                                    "#text": "the width of the monitor, or -1 if not available"
                                },
                                "type": {
                                    "@name": "gint",
                                    "@c:type": "gint"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "screen",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "gdk/gdkscreen.c",
                                        "@line": "744",
                                        "#text": "a #GdkScreen"
                                    },
                                    "type": {
                                        "@name": "Screen",
                                        "@c:type": "GdkScreen*"
                                    }
                                },
                                "parameter": {
                                    "@name": "monitor_num",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "gdk/gdkscreen.c",
                                        "@line": "745",
                                        "#text": "number of the monitor, between 0 and gdk_screen_get_n_monitors (screen)"
                                    },
                                    "type": {
                                        "@name": "gint",
                                        "@c:type": "gint"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "get_monitor_workarea",
                            "@c:identifier": "gdk_screen_get_monitor_workarea",
                            "@version": "3.4",
                            "@deprecated": "1",
                            "@deprecated-version": "3.22",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkscreen.c",
                                "@line": "867",
                                "#text": "Retrieves the #GdkRectangle representing the size and position of\nthe \u201cwork area\u201d on a monitor within the entire screen area. The returned\ngeometry is in \u201dapplication pixels\u201d, not in \u201ddevice pixels\u201d (see\ngdk_screen_get_monitor_scale_factor()).\n\nThe work area should be considered when positioning menus and\nsimilar popups, to avoid placing them below panels, docks or other\ndesktop components.\n\nNote that not all backends may have a concept of workarea. This\nfunction will return the monitor geometry if a workarea is not\navailable, or does not apply.\n\nMonitor numbers start at 0. To obtain the number of monitors of\n@screen, use gdk_screen_get_n_monitors()."
                            },
                            "doc-deprecated": {
                                "@xml:space": "preserve",
                                "#text": "Use gdk_monitor_get_workarea() instead"
                            },
                            "source-position": {
                                "@filename": "gdk/gdkscreen.h",
                                "@line": "82"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "type": {
                                    "@name": "none",
                                    "@c:type": "void"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "screen",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "gdk/gdkscreen.c",
                                        "@line": "869",
                                        "#text": "a #GdkScreen"
                                    },
                                    "type": {
                                        "@name": "Screen",
                                        "@c:type": "GdkScreen*"
                                    }
                                },
                                "parameter": [
                                    {
                                        "@name": "monitor_num",
                                        "@transfer-ownership": "none",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "gdk/gdkscreen.c",
                                            "@line": "870",
                                            "#text": "the monitor number"
                                        },
                                        "type": {
                                            "@name": "gint",
                                            "@c:type": "gint"
                                        }
                                    },
                                    {
                                        "@name": "dest",
                                        "@direction": "out",
                                        "@caller-allocates": "1",
                                        "@transfer-ownership": "none",
                                        "@optional": "1",
                                        "@allow-none": "1",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "gdk/gdkscreen.c",
                                            "@line": "871",
                                            "#text": "a #GdkRectangle to be filled with\n    the monitor workarea"
                                        },
                                        "type": {
                                            "@name": "Rectangle",
                                            "@c:type": "GdkRectangle*"
                                        }
                                    }
                                ]
                            }
                        },
                        {
                            "@name": "get_n_monitors",
                            "@c:identifier": "gdk_screen_get_n_monitors",
                            "@version": "2.2",
                            "@deprecated": "1",
                            "@deprecated-version": "3.22",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkscreen.c",
                                "@line": "684",
                                "#text": "Returns the number of monitors which @screen consists of."
                            },
                            "doc-deprecated": {
                                "@xml:space": "preserve",
                                "#text": "Use gdk_display_get_n_monitors() instead"
                            },
                            "source-position": {
                                "@filename": "gdk/gdkscreen.h",
                                "@line": "74"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "gdk/gdkscreen.c",
                                    "@line": "690",
                                    "#text": "number of monitors which @screen consists of"
                                },
                                "type": {
                                    "@name": "gint",
                                    "@c:type": "gint"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "screen",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "gdk/gdkscreen.c",
                                        "@line": "686",
                                        "#text": "a #GdkScreen"
                                    },
                                    "type": {
                                        "@name": "Screen",
                                        "@c:type": "GdkScreen*"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "get_number",
                            "@c:identifier": "gdk_screen_get_number",
                            "@version": "2.2",
                            "@deprecated": "1",
                            "@deprecated-version": "3.22",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkscreen.c",
                                "@line": "635",
                                "#text": "Gets the index of @screen among the screens in the display\nto which it belongs. (See gdk_screen_get_display())"
                            },
                            "source-position": {
                                "@filename": "gdk/gdkscreen.h",
                                "@line": "56"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "gdk/gdkscreen.c",
                                    "@line": "642",
                                    "#text": "the index"
                                },
                                "type": {
                                    "@name": "gint",
                                    "@c:type": "gint"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "screen",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "gdk/gdkscreen.c",
                                        "@line": "637",
                                        "#text": "a #GdkScreen"
                                    },
                                    "type": {
                                        "@name": "Screen",
                                        "@c:type": "GdkScreen*"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "get_primary_monitor",
                            "@c:identifier": "gdk_screen_get_primary_monitor",
                            "@version": "2.20",
                            "@deprecated": "1",
                            "@deprecated-version": "3.22",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkscreen.c",
                                "@line": "707",
                                "#text": "Gets the primary monitor for @screen.  The primary monitor\nis considered the monitor where the \u201cmain desktop\u201d lives.\nWhile normal application windows typically allow the window\nmanager to place the windows, specialized desktop applications\nsuch as panels should place themselves on the primary monitor.\n\nIf no primary monitor is configured by the user, the return value\nwill be 0, defaulting to the first monitor."
                            },
                            "doc-deprecated": {
                                "@xml:space": "preserve",
                                "#text": "Use gdk_display_get_primary_monitor() instead"
                            },
                            "source-position": {
                                "@filename": "gdk/gdkscreen.h",
                                "@line": "76"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "gdk/gdkscreen.c",
                                    "@line": "720",
                                    "#text": "An integer index for the primary monitor, or 0 if none is configured."
                                },
                                "type": {
                                    "@name": "gint",
                                    "@c:type": "gint"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "screen",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "gdk/gdkscreen.c",
                                        "@line": "709",
                                        "#text": "a #GdkScreen."
                                    },
                                    "type": {
                                        "@name": "Screen",
                                        "@c:type": "GdkScreen*"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "get_resolution",
                            "@c:identifier": "gdk_screen_get_resolution",
                            "@glib:get-property": "resolution",
                            "@version": "2.10",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkscreen.c",
                                "@line": "460",
                                "#text": "Gets the resolution for font handling on the screen; see\ngdk_screen_set_resolution() for full details."
                            },
                            "source-position": {
                                "@filename": "gdk/gdkscreen.h",
                                "@line": "124"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "gdk/gdkscreen.c",
                                    "@line": "467",
                                    "#text": "the current resolution, or -1 if no resolution\nhas been set."
                                },
                                "type": {
                                    "@name": "gdouble",
                                    "@c:type": "gdouble"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "screen",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "gdk/gdkscreen.c",
                                        "@line": "462",
                                        "#text": "a #GdkScreen"
                                    },
                                    "type": {
                                        "@name": "Screen",
                                        "@c:type": "GdkScreen*"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "get_rgba_visual",
                            "@c:identifier": "gdk_screen_get_rgba_visual",
                            "@version": "2.8",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkscreen.c",
                                "@line": "954",
                                "#text": "Gets a visual to use for creating windows with an alpha channel.\nThe windowing system on which GTK+ is running\nmay not support this capability, in which case %NULL will\nbe returned. Even if a non-%NULL value is returned, its\npossible that the window\u2019s alpha channel won\u2019t be honored\nwhen displaying the window on the screen: in particular, for\nX an appropriate windowing manager and compositing manager\nmust be running to provide appropriate display.\n\nThis functionality is not implemented in the Windows backend.\n\nFor setting an overall opacity for a top-level window, see\ngdk_window_set_opacity()."
                            },
                            "source-position": {
                                "@filename": "gdk/gdkscreen.h",
                                "@line": "47"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "@nullable": "1",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "gdk/gdkscreen.c",
                                    "@line": "972",
                                    "#text": "a visual to use for windows\n    with an alpha channel or %NULL if the capability is not\n    available."
                                },
                                "type": {
                                    "@name": "Visual",
                                    "@c:type": "GdkVisual*"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "screen",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "gdk/gdkscreen.c",
                                        "@line": "956",
                                        "#text": "a #GdkScreen"
                                    },
                                    "type": {
                                        "@name": "Screen",
                                        "@c:type": "GdkScreen*"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "get_root_window",
                            "@c:identifier": "gdk_screen_get_root_window",
                            "@version": "2.2",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkscreen.c",
                                "@line": "656",
                                "#text": "Gets the root window of @screen."
                            },
                            "source-position": {
                                "@filename": "gdk/gdkscreen.h",
                                "@line": "52"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "gdk/gdkscreen.c",
                                    "@line": "662",
                                    "#text": "the root window"
                                },
                                "type": {
                                    "@name": "Window",
                                    "@c:type": "GdkWindow*"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "screen",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "gdk/gdkscreen.c",
                                        "@line": "658",
                                        "#text": "a #GdkScreen"
                                    },
                                    "type": {
                                        "@name": "Screen",
                                        "@c:type": "GdkScreen*"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "get_setting",
                            "@c:identifier": "gdk_screen_get_setting",
                            "@version": "2.2",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkscreen.c",
                                "@line": "1098",
                                "#text": "Retrieves a desktop-wide setting such as double-click time\nfor the #GdkScreen @screen.\n\nFIXME needs a list of valid settings here, or a link to\nmore information."
                            },
                            "source-position": {
                                "@filename": "gdk/gdkscreen.h",
                                "@line": "110"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "gdk/gdkscreen.c",
                                    "@line": "1110",
                                    "#text": "%TRUE if the setting existed and a value was stored\n  in @value, %FALSE otherwise."
                                },
                                "type": {
                                    "@name": "gboolean",
                                    "@c:type": "gboolean"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "screen",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "gdk/gdkscreen.c",
                                        "@line": "1100",
                                        "#text": "the #GdkScreen where the setting is located"
                                    },
                                    "type": {
                                        "@name": "Screen",
                                        "@c:type": "GdkScreen*"
                                    }
                                },
                                "parameter": [
                                    {
                                        "@name": "name",
                                        "@transfer-ownership": "none",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "gdk/gdkscreen.c",
                                            "@line": "1101",
                                            "#text": "the name of the setting"
                                        },
                                        "type": {
                                            "@name": "utf8",
                                            "@c:type": "const gchar*"
                                        }
                                    },
                                    {
                                        "@name": "value",
                                        "@transfer-ownership": "none",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "gdk/gdkscreen.c",
                                            "@line": "1102",
                                            "#text": "location to store the value of the setting"
                                        },
                                        "type": {
                                            "@name": "GObject.Value",
                                            "@c:type": "GValue*"
                                        }
                                    }
                                ]
                            }
                        },
                        {
                            "@name": "get_system_visual",
                            "@c:identifier": "gdk_screen_get_system_visual",
                            "@version": "2.2",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkscreen.c",
                                "@line": "934",
                                "#text": "Get the system\u2019s default visual for @screen.\nThis is the visual for the root window of the display.\nThe return value should not be freed."
                            },
                            "source-position": {
                                "@filename": "gdk/gdkscreen.h",
                                "@line": "45"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "gdk/gdkscreen.c",
                                    "@line": "942",
                                    "#text": "the system visual"
                                },
                                "type": {
                                    "@name": "Visual",
                                    "@c:type": "GdkVisual*"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "screen",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "gdk/gdkscreen.c",
                                        "@line": "936",
                                        "#text": "a #GdkScreen."
                                    },
                                    "type": {
                                        "@name": "Screen",
                                        "@c:type": "GdkScreen*"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "get_toplevel_windows",
                            "@c:identifier": "gdk_screen_get_toplevel_windows",
                            "@version": "2.2",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkwindow.c",
                                "@line": "2724",
                                "#text": "Obtains a list of all toplevel windows known to GDK on the screen @screen.\nA toplevel window is a child of the root window (see\ngdk_get_default_root_window()).\n\nThe returned list should be freed with g_list_free(), but\nits elements need not be freed."
                            },
                            "source-position": {
                                "@filename": "gdk/gdkscreen.h",
                                "@line": "69"
                            },
                            "return-value": {
                                "@transfer-ownership": "container",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "gdk/gdkwindow.c",
                                    "@line": "2735",
                                    "#text": "list of toplevel windows, free with g_list_free()"
                                },
                                "type": {
                                    "@name": "GLib.List",
                                    "@c:type": "GList*",
                                    "type": {
                                        "@name": "Window"
                                    }
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "screen",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "gdk/gdkwindow.c",
                                        "@line": "2726",
                                        "#text": "The #GdkScreen where the toplevels are located."
                                    },
                                    "type": {
                                        "@name": "Screen",
                                        "@c:type": "GdkScreen*"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "get_width",
                            "@c:identifier": "gdk_screen_get_width",
                            "@version": "2.2",
                            "@deprecated": "1",
                            "@deprecated-version": "3.22",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkscreen.c",
                                "@line": "543",
                                "#text": "Gets the width of @screen in pixels. The returned size is in\n\u201dapplication pixels\u201d, not in \u201ddevice pixels\u201d (see\ngdk_screen_get_monitor_scale_factor())."
                            },
                            "doc-deprecated": {
                                "@xml:space": "preserve",
                                "#text": "Use per-monitor information instead"
                            },
                            "source-position": {
                                "@filename": "gdk/gdkscreen.h",
                                "@line": "58"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "gdk/gdkscreen.c",
                                    "@line": "551",
                                    "#text": "the width of @screen in pixels."
                                },
                                "type": {
                                    "@name": "gint",
                                    "@c:type": "gint"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "screen",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "gdk/gdkscreen.c",
                                        "@line": "545",
                                        "#text": "a #GdkScreen"
                                    },
                                    "type": {
                                        "@name": "Screen",
                                        "@c:type": "GdkScreen*"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "get_width_mm",
                            "@c:identifier": "gdk_screen_get_width_mm",
                            "@version": "2.2",
                            "@deprecated": "1",
                            "@deprecated-version": "3.22",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkscreen.c",
                                "@line": "587",
                                "#text": "Gets the width of @screen in millimeters.\n\nNote that this value is somewhat ill-defined when the screen\nhas multiple monitors of different resolution. It is recommended\nto use the monitor dimensions instead."
                            },
                            "doc-deprecated": {
                                "@xml:space": "preserve",
                                "#text": "Use per-monitor information instead"
                            },
                            "source-position": {
                                "@filename": "gdk/gdkscreen.h",
                                "@line": "62"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "gdk/gdkscreen.c",
                                    "@line": "597",
                                    "#text": "the width of @screen in millimeters."
                                },
                                "type": {
                                    "@name": "gint",
                                    "@c:type": "gint"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "screen",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "gdk/gdkscreen.c",
                                        "@line": "589",
                                        "#text": "a #GdkScreen"
                                    },
                                    "type": {
                                        "@name": "Screen",
                                        "@c:type": "GdkScreen*"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "get_window_stack",
                            "@c:identifier": "gdk_screen_get_window_stack",
                            "@version": "2.10",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkscreen.c",
                                "@line": "1065",
                                "#text": "Returns a #GList of #GdkWindows representing the current\nwindow stack.\n\nOn X11, this is done by inspecting the _NET_CLIENT_LIST_STACKING\nproperty on the root window, as described in the\n[Extended Window Manager Hints](http://www.freedesktop.org/Standards/wm-spec).\nIf the window manager does not support the\n_NET_CLIENT_LIST_STACKING hint, this function returns %NULL.\n\nOn other platforms, this function may return %NULL, depending on whether\nit is implementable on that platform.\n\nThe returned list is newly allocated and owns references to the\nwindows it contains, so it should be freed using g_list_free() and\nits windows unrefed using g_object_unref() when no longer needed."
                            },
                            "source-position": {
                                "@filename": "gdk/gdkscreen.h",
                                "@line": "129"
                            },
                            "return-value": {
                                "@transfer-ownership": "full",
                                "@nullable": "1",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "gdk/gdkscreen.c",
                                    "@line": "1085",
                                    "#text": "a\n    list of #GdkWindows for the current window stack, or %NULL."
                                },
                                "type": {
                                    "@name": "GLib.List",
                                    "@c:type": "GList*",
                                    "type": {
                                        "@name": "Window"
                                    }
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "screen",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "gdk/gdkscreen.c",
                                        "@line": "1067",
                                        "#text": "a #GdkScreen"
                                    },
                                    "type": {
                                        "@name": "Screen",
                                        "@c:type": "GdkScreen*"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "is_composited",
                            "@c:identifier": "gdk_screen_is_composited",
                            "@version": "2.10",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkscreen.c",
                                "@line": "986",
                                "#text": "Returns whether windows with an RGBA visual can reasonably\nbe expected to have their alpha channel drawn correctly on\nthe screen.\n\nOn X11 this function returns whether a compositing manager is\ncompositing @screen."
                            },
                            "source-position": {
                                "@filename": "gdk/gdkscreen.h",
                                "@line": "49"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "gdk/gdkscreen.c",
                                    "@line": "997",
                                    "#text": "Whether windows with RGBA visuals can reasonably be\nexpected to have their alpha channels drawn correctly on the screen."
                                },
                                "type": {
                                    "@name": "gboolean",
                                    "@c:type": "gboolean"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "screen",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "gdk/gdkscreen.c",
                                        "@line": "988",
                                        "#text": "a #GdkScreen"
                                    },
                                    "type": {
                                        "@name": "Screen",
                                        "@c:type": "GdkScreen*"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "list_visuals",
                            "@c:identifier": "gdk_screen_list_visuals",
                            "@version": "2.2",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkscreen.c",
                                "@line": "910",
                                "#text": "Lists the available visuals for the specified @screen.\nA visual describes a hardware image data format.\nFor example, a visual might support 24-bit color, or 8-bit color,\nand might expect pixels to be in a certain format.\n\nCall g_list_free() on the return value when you\u2019re finished with it."
                            },
                            "source-position": {
                                "@filename": "gdk/gdkscreen.h",
                                "@line": "67"
                            },
                            "return-value": {
                                "@transfer-ownership": "container",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "gdk/gdkscreen.c",
                                    "@line": "921",
                                    "#text": "a list of visuals; the list must be freed, but not its contents"
                                },
                                "type": {
                                    "@name": "GLib.List",
                                    "@c:type": "GList*",
                                    "type": {
                                        "@name": "Visual"
                                    }
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "screen",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "gdk/gdkscreen.c",
                                        "@line": "912",
                                        "#text": "the relevant #GdkScreen."
                                    },
                                    "type": {
                                        "@name": "Screen",
                                        "@c:type": "GdkScreen*"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "make_display_name",
                            "@c:identifier": "gdk_screen_make_display_name",
                            "@version": "2.2",
                            "@deprecated": "1",
                            "@deprecated-version": "3.22",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkscreen.c",
                                "@line": "1010",
                                "#text": "Determines the name to pass to gdk_display_open() to get\na #GdkDisplay with this screen as the default screen."
                            },
                            "source-position": {
                                "@filename": "gdk/gdkscreen.h",
                                "@line": "71"
                            },
                            "return-value": {
                                "@transfer-ownership": "full",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "gdk/gdkscreen.c",
                                    "@line": "1017",
                                    "#text": "a newly allocated string, free with g_free()"
                                },
                                "type": {
                                    "@name": "utf8",
                                    "@c:type": "gchar*"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "screen",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "gdk/gdkscreen.c",
                                        "@line": "1012",
                                        "#text": "a #GdkScreen"
                                    },
                                    "type": {
                                        "@name": "Screen",
                                        "@c:type": "GdkScreen*"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "set_font_options",
                            "@c:identifier": "gdk_screen_set_font_options",
                            "@glib:set-property": "font-options",
                            "@version": "2.10",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkscreen.c",
                                "@line": "352",
                                "#text": "Sets the default font options for the screen. These\noptions will be set on any #PangoContext\u2019s newly created\nwith gdk_pango_context_get_for_screen(). Changing the\ndefault set of font options does not affect contexts that\nhave already been created."
                            },
                            "source-position": {
                                "@filename": "gdk/gdkscreen.h",
                                "@line": "115"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "type": {
                                    "@name": "none",
                                    "@c:type": "void"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "screen",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "gdk/gdkscreen.c",
                                        "@line": "354",
                                        "#text": "a #GdkScreen"
                                    },
                                    "type": {
                                        "@name": "Screen",
                                        "@c:type": "GdkScreen*"
                                    }
                                },
                                "parameter": {
                                    "@name": "options",
                                    "@transfer-ownership": "none",
                                    "@nullable": "1",
                                    "@allow-none": "1",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "gdk/gdkscreen.c",
                                        "@line": "355",
                                        "#text": "a #cairo_font_options_t, or %NULL to unset any\n  previously set default font options."
                                    },
                                    "type": {
                                        "@name": "cairo.FontOptions",
                                        "@c:type": "const cairo_font_options_t*"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "set_resolution",
                            "@c:identifier": "gdk_screen_set_resolution",
                            "@glib:set-property": "resolution",
                            "@version": "2.10",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkscreen.c",
                                "@line": "405",
                                "#text": "Sets the resolution for font handling on the screen. This is a\nscale factor between points specified in a #PangoFontDescription\nand cairo units. The default value is 96, meaning that a 10 point\nfont will be 13 units high. (10 * 96. / 72. = 13.3)."
                            },
                            "source-position": {
                                "@filename": "gdk/gdkscreen.h",
                                "@line": "121"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "type": {
                                    "@name": "none",
                                    "@c:type": "void"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "screen",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "gdk/gdkscreen.c",
                                        "@line": "407",
                                        "#text": "a #GdkScreen"
                                    },
                                    "type": {
                                        "@name": "Screen",
                                        "@c:type": "GdkScreen*"
                                    }
                                },
                                "parameter": {
                                    "@name": "dpi",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "gdk/gdkscreen.c",
                                        "@line": "408",
                                        "#text": "the resolution in \u201cdots per inch\u201d. (Physical inches aren\u2019t actually\n  involved; the terminology is conventional.)"
                                    },
                                    "type": {
                                        "@name": "gdouble",
                                        "@c:type": "gdouble"
                                    }
                                }
                            }
                        }
                    ],
                    "property": [
                        {
                            "@name": "font-options",
                            "@writable": "1",
                            "@transfer-ownership": "none",
                            "@setter": "set_font_options",
                            "@getter": "get_font_options",
                            "type": {
                                "@name": "gpointer",
                                "@c:type": "gpointer"
                            }
                        },
                        {
                            "@name": "resolution",
                            "@writable": "1",
                            "@transfer-ownership": "none",
                            "@setter": "set_resolution",
                            "@getter": "get_resolution",
                            "type": {
                                "@name": "gdouble",
                                "@c:type": "gdouble"
                            }
                        }
                    ],
                    "glib:signal": [
                        {
                            "@name": "composited-changed",
                            "@when": "last",
                            "@version": "2.10",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkscreen.c",
                                "@line": "128",
                                "#text": "The ::composited-changed signal is emitted when the composited\nstatus of the screen changes"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "type": {
                                    "@name": "none",
                                    "@c:type": "void"
                                }
                            }
                        },
                        {
                            "@name": "monitors-changed",
                            "@when": "last",
                            "@version": "2.14",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkscreen.c",
                                "@line": "147",
                                "#text": "The ::monitors-changed signal is emitted when the number, size\nor position of the monitors attached to the screen change.\n\nOnly for X11 and OS X for now. A future implementation for Win32\nmay be a possibility."
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "type": {
                                    "@name": "none",
                                    "@c:type": "void"
                                }
                            }
                        },
                        {
                            "@name": "size-changed",
                            "@when": "last",
                            "@version": "2.2",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkscreen.c",
                                "@line": "109",
                                "#text": "The ::size-changed signal is emitted when the pixel width or\nheight of a screen changes."
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "type": {
                                    "@name": "none",
                                    "@c:type": "void"
                                }
                            }
                        }
                    ]
                },
                {
                    "@name": "Seat",
                    "@c:symbol-prefix": "seat",
                    "@c:type": "GdkSeat",
                    "@parent": "GObject.Object",
                    "@abstract": "1",
                    "@glib:type-name": "GdkSeat",
                    "@glib:get-type": "gdk_seat_get_type",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "gdk/gdkseat.c",
                        "@line": "29",
                        "#text": "The #GdkSeat object represents a collection of input devices\nthat belong to a user."
                    },
                    "method": [
                        {
                            "@name": "get_capabilities",
                            "@c:identifier": "gdk_seat_get_capabilities",
                            "@version": "3.20",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkseat.c",
                                "@line": "217",
                                "#text": "Returns the capabilities this #GdkSeat currently has."
                            },
                            "source-position": {
                                "@filename": "gdk/gdkseat.h",
                                "@line": "104"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "gdk/gdkseat.c",
                                    "@line": "223",
                                    "#text": "the seat capabilities"
                                },
                                "type": {
                                    "@name": "SeatCapabilities",
                                    "@c:type": "GdkSeatCapabilities"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "seat",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "gdk/gdkseat.c",
                                        "@line": "219",
                                        "#text": "a #GdkSeat"
                                    },
                                    "type": {
                                        "@name": "Seat",
                                        "@c:type": "GdkSeat*"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "get_display",
                            "@c:identifier": "gdk_seat_get_display",
                            "@glib:get-property": "display",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkseat.c",
                                "@line": "417",
                                "#text": "Returns the #GdkDisplay this seat belongs to."
                            },
                            "source-position": {
                                "@filename": "gdk/gdkseat.h",
                                "@line": "100"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "gdk/gdkseat.c",
                                    "@line": "423",
                                    "#text": "a #GdkDisplay. This object is owned by GTK+\n         and must not be freed."
                                },
                                "type": {
                                    "@name": "Display",
                                    "@c:type": "GdkDisplay*"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "seat",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "gdk/gdkseat.c",
                                        "@line": "419",
                                        "#text": "a #GdkSeat"
                                    },
                                    "type": {
                                        "@name": "Seat",
                                        "@c:type": "GdkSeat*"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "get_keyboard",
                            "@c:identifier": "gdk_seat_get_keyboard",
                            "@version": "3.20",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkseat.c",
                                "@line": "379",
                                "#text": "Returns the master device that routes keyboard events."
                            },
                            "source-position": {
                                "@filename": "gdk/gdkseat.h",
                                "@line": "113"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "@nullable": "1",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "gdk/gdkseat.c",
                                    "@line": "385",
                                    "#text": "a master #GdkDevice with keyboard\n         capabilities. This object is owned by GTK+ and must not be freed."
                                },
                                "type": {
                                    "@name": "Device",
                                    "@c:type": "GdkDevice*"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "seat",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "gdk/gdkseat.c",
                                        "@line": "381",
                                        "#text": "a #GdkSeat"
                                    },
                                    "type": {
                                        "@name": "Seat",
                                        "@c:type": "GdkSeat*"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "get_pointer",
                            "@c:identifier": "gdk_seat_get_pointer",
                            "@version": "3.20",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkseat.c",
                                "@line": "357",
                                "#text": "Returns the master device that routes pointer events."
                            },
                            "source-position": {
                                "@filename": "gdk/gdkseat.h",
                                "@line": "111"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "@nullable": "1",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "gdk/gdkseat.c",
                                    "@line": "363",
                                    "#text": "a master #GdkDevice with pointer\n         capabilities. This object is owned by GTK+ and must not be freed."
                                },
                                "type": {
                                    "@name": "Device",
                                    "@c:type": "GdkDevice*"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "seat",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "gdk/gdkseat.c",
                                        "@line": "359",
                                        "#text": "a #GdkSeat"
                                    },
                                    "type": {
                                        "@name": "Seat",
                                        "@c:type": "GdkSeat*"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "get_slaves",
                            "@c:identifier": "gdk_seat_get_slaves",
                            "@version": "3.20",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkseat.c",
                                "@line": "332",
                                "#text": "Returns the slave devices that match the given capabilities."
                            },
                            "source-position": {
                                "@filename": "gdk/gdkseat.h",
                                "@line": "107"
                            },
                            "return-value": {
                                "@transfer-ownership": "container",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "gdk/gdkseat.c",
                                    "@line": "339",
                                    "#text": "A list of #GdkDevices.\n         The list must be freed with g_list_free(), the elements are owned\n         by GDK and must not be freed."
                                },
                                "type": {
                                    "@name": "GLib.List",
                                    "@c:type": "GList*",
                                    "type": {
                                        "@name": "Device"
                                    }
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "seat",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "gdk/gdkseat.c",
                                        "@line": "334",
                                        "#text": "a #GdkSeat"
                                    },
                                    "type": {
                                        "@name": "Seat",
                                        "@c:type": "GdkSeat*"
                                    }
                                },
                                "parameter": {
                                    "@name": "capabilities",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "gdk/gdkseat.c",
                                        "@line": "335",
                                        "#text": "capabilities to get devices for"
                                    },
                                    "type": {
                                        "@name": "SeatCapabilities",
                                        "@c:type": "GdkSeatCapabilities"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "grab",
                            "@c:identifier": "gdk_seat_grab",
                            "@version": "3.20",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkseat.c",
                                "@line": "238",
                                "#text": "Grabs the seat so that all events corresponding to the given @capabilities\nare passed to this application until the seat is ungrabbed with gdk_seat_ungrab(),\nor the window becomes hidden. This overrides any previous grab on the\nseat by this client.\n\nAs a rule of thumb, if a grab is desired over %GDK_SEAT_CAPABILITY_POINTER,\nall other \"pointing\" capabilities (eg. %GDK_SEAT_CAPABILITY_TOUCH) should\nbe grabbed too, so the user is able to interact with all of those while\nthe grab holds, you should thus use %GDK_SEAT_CAPABILITY_ALL_POINTING most\ncommonly.\n\nGrabs are used for operations which need complete control over the\nevents corresponding to the given capabilities. For example in GTK+ this\nis used for Drag and Drop operations, popup menus and such.\n\nNote that if the event mask of a #GdkWindow has selected both button press\nand button release events, or touch begin and touch end, then a press event\nwill cause an automatic grab until the button is released, equivalent to a\ngrab on the window with @owner_events set to %TRUE. This is done because most\napplications expect to receive paired press and release events.\n\nIf you set up anything at the time you take the grab that needs to be\ncleaned up when the grab ends, you should handle the #GdkEventGrabBroken\nevents that are emitted when the grab ends unvoluntarily."
                            },
                            "source-position": {
                                "@filename": "gdk/gdkseat.h",
                                "@line": "88"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "gdk/gdkseat.c",
                                    "@line": "285",
                                    "#text": "%GDK_GRAB_SUCCESS if the grab was successful."
                                },
                                "type": {
                                    "@name": "GrabStatus",
                                    "@c:type": "GdkGrabStatus"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "seat",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "gdk/gdkseat.c",
                                        "@line": "240",
                                        "#text": "a #GdkSeat"
                                    },
                                    "type": {
                                        "@name": "Seat",
                                        "@c:type": "GdkSeat*"
                                    }
                                },
                                "parameter": [
                                    {
                                        "@name": "window",
                                        "@transfer-ownership": "none",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "gdk/gdkseat.c",
                                            "@line": "241",
                                            "#text": "the #GdkWindow which will own the grab"
                                        },
                                        "type": {
                                            "@name": "Window",
                                            "@c:type": "GdkWindow*"
                                        }
                                    },
                                    {
                                        "@name": "capabilities",
                                        "@transfer-ownership": "none",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "gdk/gdkseat.c",
                                            "@line": "242",
                                            "#text": "capabilities that will be grabbed"
                                        },
                                        "type": {
                                            "@name": "SeatCapabilities",
                                            "@c:type": "GdkSeatCapabilities"
                                        }
                                    },
                                    {
                                        "@name": "owner_events",
                                        "@transfer-ownership": "none",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "gdk/gdkseat.c",
                                            "@line": "243",
                                            "#text": "if %FALSE then all device events are reported with respect to\n               @window and are only reported if selected by @event_mask. If\n               %TRUE then pointer events for this application are reported\n               as normal, but pointer events outside this application are\n               reported with respect to @window and only if selected by\n               @event_mask. In either mode, unreported events are discarded."
                                        },
                                        "type": {
                                            "@name": "gboolean",
                                            "@c:type": "gboolean"
                                        }
                                    },
                                    {
                                        "@name": "cursor",
                                        "@transfer-ownership": "none",
                                        "@nullable": "1",
                                        "@allow-none": "1",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "gdk/gdkseat.c",
                                            "@line": "249",
                                            "#text": "the cursor to display while the grab is active. If\n         this is %NULL then the normal cursors are used for\n         @window and its descendants, and the cursor for @window is used\n         elsewhere."
                                        },
                                        "type": {
                                            "@name": "Cursor",
                                            "@c:type": "GdkCursor*"
                                        }
                                    },
                                    {
                                        "@name": "event",
                                        "@transfer-ownership": "none",
                                        "@nullable": "1",
                                        "@allow-none": "1",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "gdk/gdkseat.c",
                                            "@line": "253",
                                            "#text": "the event that is triggering the grab, or %NULL if none\n        is available."
                                        },
                                        "type": {
                                            "@name": "Event",
                                            "@c:type": "const GdkEvent*"
                                        }
                                    },
                                    {
                                        "@name": "prepare_func",
                                        "@transfer-ownership": "none",
                                        "@nullable": "1",
                                        "@allow-none": "1",
                                        "@scope": "call",
                                        "@closure": "6",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "gdk/gdkseat.c",
                                            "@line": "255",
                                            "#text": "function to\n               prepare the window to be grabbed, it can be %NULL if @window is\n               visible before this call."
                                        },
                                        "type": {
                                            "@name": "SeatGrabPrepareFunc",
                                            "@c:type": "GdkSeatGrabPrepareFunc"
                                        }
                                    },
                                    {
                                        "@name": "prepare_func_data",
                                        "@transfer-ownership": "none",
                                        "@nullable": "1",
                                        "@allow-none": "1",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "gdk/gdkseat.c",
                                            "@line": "258",
                                            "#text": "user data to pass to @prepare_func"
                                        },
                                        "type": {
                                            "@name": "gpointer",
                                            "@c:type": "gpointer"
                                        }
                                    }
                                ]
                            }
                        },
                        {
                            "@name": "ungrab",
                            "@c:identifier": "gdk_seat_ungrab",
                            "@version": "3.20",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkseat.c",
                                "@line": "313",
                                "#text": "Releases a grab added through gdk_seat_grab()."
                            },
                            "source-position": {
                                "@filename": "gdk/gdkseat.h",
                                "@line": "97"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "type": {
                                    "@name": "none",
                                    "@c:type": "void"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "seat",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "gdk/gdkseat.c",
                                        "@line": "315",
                                        "#text": "a #GdkSeat"
                                    },
                                    "type": {
                                        "@name": "Seat",
                                        "@c:type": "GdkSeat*"
                                    }
                                }
                            }
                        }
                    ],
                    "property": {
                        "@name": "display",
                        "@version": "3.20",
                        "@writable": "1",
                        "@construct-only": "1",
                        "@transfer-ownership": "none",
                        "@getter": "get_display",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "gdk/gdkseat.c",
                            "@line": "193",
                            "#text": "#GdkDisplay of this seat."
                        },
                        "type": {
                            "@name": "Display"
                        }
                    },
                    "field": {
                        "@name": "parent_instance",
                        "type": {
                            "@name": "GObject.Object",
                            "@c:type": "GObject"
                        }
                    },
                    "glib:signal": [
                        {
                            "@name": "device-added",
                            "@when": "last",
                            "@version": "3.20",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkseat.c",
                                "@line": "111",
                                "#text": "The ::device-added signal is emitted when a new input\ndevice is related to this seat."
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "type": {
                                    "@name": "none",
                                    "@c:type": "void"
                                }
                            },
                            "parameters": {
                                "parameter": {
                                    "@name": "device",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "gdk/gdkseat.c",
                                        "@line": "114",
                                        "#text": "the newly added #GdkDevice."
                                    },
                                    "type": {
                                        "@name": "Device"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "device-removed",
                            "@when": "last",
                            "@version": "3.20",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkseat.c",
                                "@line": "131",
                                "#text": "The ::device-removed signal is emitted when an\ninput device is removed (e.g. unplugged)."
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "type": {
                                    "@name": "none",
                                    "@c:type": "void"
                                }
                            },
                            "parameters": {
                                "parameter": {
                                    "@name": "device",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "gdk/gdkseat.c",
                                        "@line": "134",
                                        "#text": "the just removed #GdkDevice."
                                    },
                                    "type": {
                                        "@name": "Device"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "tool-added",
                            "@when": "last",
                            "@version": "3.22",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkseat.c",
                                "@line": "151",
                                "#text": "The ::tool-added signal is emitted whenever a new tool\nis made known to the seat. The tool may later be assigned\nto a device (i.e. on proximity with a tablet). The device\nwill emit the #GdkDevice::tool-changed signal accordingly.\n\nA same tool may be used by several devices."
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "type": {
                                    "@name": "none",
                                    "@c:type": "void"
                                }
                            },
                            "parameters": {
                                "parameter": {
                                    "@name": "tool",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "gdk/gdkseat.c",
                                        "@line": "154",
                                        "#text": "the new #GdkDeviceTool known to the seat"
                                    },
                                    "type": {
                                        "@name": "DeviceTool"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "tool-removed",
                            "@when": "last",
                            "@version": "3.22",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkseat.c",
                                "@line": "174",
                                "#text": "This signal is emitted whenever a tool is no longer known\nto this @seat."
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "type": {
                                    "@name": "none",
                                    "@c:type": "void"
                                }
                            },
                            "parameters": {
                                "parameter": {
                                    "@name": "tool",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "gdk/gdkseat.c",
                                        "@line": "177",
                                        "#text": "the just removed #GdkDeviceTool"
                                    },
                                    "type": {
                                        "@name": "DeviceTool"
                                    }
                                }
                            }
                        }
                    ]
                },
                {
                    "@name": "Visual",
                    "@c:symbol-prefix": "visual",
                    "@c:type": "GdkVisual",
                    "@parent": "GObject.Object",
                    "@glib:type-name": "GdkVisual",
                    "@glib:get-type": "gdk_visual_get_type",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "gdk/gdkvisual.h",
                        "@line": "75",
                        "#text": "A #GdkVisual contains information about\na particular visual."
                    },
                    "function": [
                        {
                            "@name": "get_best",
                            "@c:identifier": "gdk_visual_get_best",
                            "@deprecated": "1",
                            "@deprecated-version": "3.22",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkvisual.c",
                                "@line": "155",
                                "#text": "Get the visual with the most available colors for the default\nGDK screen. The return value should not be freed."
                            },
                            "doc-deprecated": {
                                "@xml:space": "preserve",
                                "#text": "Visual selection should be done using\n    gdk_screen_get_system_visual() and gdk_screen_get_rgba_visual()"
                            },
                            "source-position": {
                                "@filename": "gdk/gdkvisual.h",
                                "@line": "92"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "gdk/gdkvisual.c",
                                    "@line": "161",
                                    "#text": "best visual"
                                },
                                "type": {
                                    "@name": "Visual",
                                    "@c:type": "GdkVisual*"
                                }
                            }
                        },
                        {
                            "@name": "get_best_depth",
                            "@c:identifier": "gdk_visual_get_best_depth",
                            "@deprecated": "1",
                            "@deprecated-version": "3.22",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkvisual.c",
                                "@line": "117",
                                "#text": "Get the best available depth for the default GDK screen.  \u201cBest\u201d\nmeans \u201clargest,\u201d i.e. 32 preferred over 24 preferred over 8 bits\nper pixel."
                            },
                            "doc-deprecated": {
                                "@xml:space": "preserve",
                                "#text": "Visual selection should be done using\n    gdk_screen_get_system_visual() and gdk_screen_get_rgba_visual()"
                            },
                            "source-position": {
                                "@filename": "gdk/gdkvisual.h",
                                "@line": "86"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "gdk/gdkvisual.c",
                                    "@line": "124",
                                    "#text": "best available depth"
                                },
                                "type": {
                                    "@name": "gint",
                                    "@c:type": "gint"
                                }
                            }
                        },
                        {
                            "@name": "get_best_type",
                            "@c:identifier": "gdk_visual_get_best_type",
                            "@deprecated": "1",
                            "@deprecated-version": "3.22",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkvisual.c",
                                "@line": "137",
                                "#text": "Return the best available visual type for the default GDK screen."
                            },
                            "doc-deprecated": {
                                "@xml:space": "preserve",
                                "#text": "Visual selection should be done using\n    gdk_screen_get_system_visual() and gdk_screen_get_rgba_visual()"
                            },
                            "source-position": {
                                "@filename": "gdk/gdkvisual.h",
                                "@line": "88"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "gdk/gdkvisual.c",
                                    "@line": "142",
                                    "#text": "best visual type"
                                },
                                "type": {
                                    "@name": "VisualType",
                                    "@c:type": "GdkVisualType"
                                }
                            }
                        },
                        {
                            "@name": "get_best_with_both",
                            "@c:identifier": "gdk_visual_get_best_with_both",
                            "@deprecated": "1",
                            "@deprecated-version": "3.22",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkvisual.c",
                                "@line": "219",
                                "#text": "Combines gdk_visual_get_best_with_depth() and\ngdk_visual_get_best_with_type()."
                            },
                            "doc-deprecated": {
                                "@xml:space": "preserve",
                                "#text": "Visual selection should be done using\n    gdk_screen_get_system_visual() and gdk_screen_get_rgba_visual()"
                            },
                            "source-position": {
                                "@filename": "gdk/gdkvisual.h",
                                "@line": "98"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "@nullable": "1",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "gdk/gdkvisual.c",
                                    "@line": "227",
                                    "#text": "best visual with both @depth\n    and @visual_type, or %NULL if none"
                                },
                                "type": {
                                    "@name": "Visual",
                                    "@c:type": "GdkVisual*"
                                }
                            },
                            "parameters": {
                                "parameter": [
                                    {
                                        "@name": "depth",
                                        "@transfer-ownership": "none",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "gdk/gdkvisual.c",
                                            "@line": "221",
                                            "#text": "a bit depth"
                                        },
                                        "type": {
                                            "@name": "gint",
                                            "@c:type": "gint"
                                        }
                                    },
                                    {
                                        "@name": "visual_type",
                                        "@transfer-ownership": "none",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "gdk/gdkvisual.c",
                                            "@line": "222",
                                            "#text": "a visual type"
                                        },
                                        "type": {
                                            "@name": "VisualType",
                                            "@c:type": "GdkVisualType"
                                        }
                                    }
                                ]
                            }
                        },
                        {
                            "@name": "get_best_with_depth",
                            "@c:identifier": "gdk_visual_get_best_with_depth",
                            "@deprecated": "1",
                            "@deprecated-version": "3.22",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkvisual.c",
                                "@line": "174",
                                "#text": "Get the best visual with depth @depth for the default GDK screen.\nColor visuals and visuals with mutable colormaps are preferred\nover grayscale or fixed-colormap visuals. The return value should\nnot be freed. %NULL may be returned if no visual supports @depth."
                            },
                            "doc-deprecated": {
                                "@xml:space": "preserve",
                                "#text": "Visual selection should be done using\n    gdk_screen_get_system_visual() and gdk_screen_get_rgba_visual()"
                            },
                            "source-position": {
                                "@filename": "gdk/gdkvisual.h",
                                "@line": "94"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "gdk/gdkvisual.c",
                                    "@line": "183",
                                    "#text": "best visual for the given depth"
                                },
                                "type": {
                                    "@name": "Visual",
                                    "@c:type": "GdkVisual*"
                                }
                            },
                            "parameters": {
                                "parameter": {
                                    "@name": "depth",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "gdk/gdkvisual.c",
                                        "@line": "176",
                                        "#text": "a bit depth"
                                    },
                                    "type": {
                                        "@name": "gint",
                                        "@c:type": "gint"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "get_best_with_type",
                            "@c:identifier": "gdk_visual_get_best_with_type",
                            "@deprecated": "1",
                            "@deprecated-version": "3.22",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkvisual.c",
                                "@line": "196",
                                "#text": "Get the best visual of the given @visual_type for the default GDK screen.\nVisuals with higher color depths are considered better. The return value\nshould not be freed. %NULL may be returned if no visual has type\n@visual_type."
                            },
                            "doc-deprecated": {
                                "@xml:space": "preserve",
                                "#text": "Visual selection should be done using\n    gdk_screen_get_system_visual() and gdk_screen_get_rgba_visual()"
                            },
                            "source-position": {
                                "@filename": "gdk/gdkvisual.h",
                                "@line": "96"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "gdk/gdkvisual.c",
                                    "@line": "205",
                                    "#text": "best visual of the given type"
                                },
                                "type": {
                                    "@name": "Visual",
                                    "@c:type": "GdkVisual*"
                                }
                            },
                            "parameters": {
                                "parameter": {
                                    "@name": "visual_type",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "gdk/gdkvisual.c",
                                        "@line": "198",
                                        "#text": "a visual type"
                                    },
                                    "type": {
                                        "@name": "VisualType",
                                        "@c:type": "GdkVisualType"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "get_system",
                            "@c:identifier": "gdk_visual_get_system",
                            "@deprecated": "1",
                            "@deprecated-version": "3.22",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkvisual.c",
                                "@line": "100",
                                "#text": "Get the system\u2019s default visual for the default GDK screen.\nThis is the visual for the root window of the display.\nThe return value should not be freed."
                            },
                            "doc-deprecated": {
                                "@xml:space": "preserve",
                                "#text": "Use gdk_screen_get_system_visual (gdk_screen_get_default ())."
                            },
                            "source-position": {
                                "@filename": "gdk/gdkvisual.h",
                                "@line": "90"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "gdk/gdkvisual.c",
                                    "@line": "107",
                                    "#text": "system visual"
                                },
                                "type": {
                                    "@name": "Visual",
                                    "@c:type": "GdkVisual*"
                                }
                            }
                        }
                    ],
                    "method": [
                        {
                            "@name": "get_bits_per_rgb",
                            "@c:identifier": "gdk_visual_get_bits_per_rgb",
                            "@version": "2.22",
                            "@deprecated": "1",
                            "@deprecated-version": "3.22.",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkvisual.c",
                                "@line": "375",
                                "#text": "Returns the number of significant bits per red, green and blue value.\n\nNot all GDK backend provide a meaningful value for this function."
                            },
                            "doc-deprecated": {
                                "@xml:space": "preserve",
                                "#text": "Use gdk_visual_get_red_pixel_details() and its variants to\n    learn about the pixel layout of TrueColor and DirectColor visuals"
                            },
                            "source-position": {
                                "@filename": "gdk/gdkvisual.h",
                                "@line": "123"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "gdk/gdkvisual.c",
                                    "@line": "383",
                                    "#text": "The number of significant bits per color value for @visual."
                                },
                                "type": {
                                    "@name": "gint",
                                    "@c:type": "gint"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "visual",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "gdk/gdkvisual.c",
                                        "@line": "377",
                                        "#text": "a #GdkVisual"
                                    },
                                    "type": {
                                        "@name": "Visual",
                                        "@c:type": "GdkVisual*"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "get_blue_pixel_details",
                            "@c:identifier": "gdk_visual_get_blue_pixel_details",
                            "@version": "2.22",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkvisual.c",
                                "@line": "487",
                                "#text": "Obtains values that are needed to calculate blue pixel values in TrueColor\nand DirectColor. The \u201cmask\u201d is the significant bits within the pixel.\nThe \u201cshift\u201d is the number of bits left we must shift a primary for it\nto be in position (according to the \"mask\"). Finally, \"precision\" refers\nto how much precision the pixel value contains for a particular primary."
                            },
                            "source-position": {
                                "@filename": "gdk/gdkvisual.h",
                                "@line": "135"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "type": {
                                    "@name": "none",
                                    "@c:type": "void"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "visual",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "gdk/gdkvisual.c",
                                        "@line": "489",
                                        "#text": "a #GdkVisual"
                                    },
                                    "type": {
                                        "@name": "Visual",
                                        "@c:type": "GdkVisual*"
                                    }
                                },
                                "parameter": [
                                    {
                                        "@name": "mask",
                                        "@direction": "out",
                                        "@caller-allocates": "0",
                                        "@transfer-ownership": "full",
                                        "@optional": "1",
                                        "@allow-none": "1",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "gdk/gdkvisual.c",
                                            "@line": "490",
                                            "#text": "A pointer to a #guint32 to be filled in, or %NULL"
                                        },
                                        "type": {
                                            "@name": "guint32",
                                            "@c:type": "guint32*"
                                        }
                                    },
                                    {
                                        "@name": "shift",
                                        "@direction": "out",
                                        "@caller-allocates": "0",
                                        "@transfer-ownership": "full",
                                        "@optional": "1",
                                        "@allow-none": "1",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "gdk/gdkvisual.c",
                                            "@line": "491",
                                            "#text": "A pointer to a #gint to be filled in, or %NULL"
                                        },
                                        "type": {
                                            "@name": "gint",
                                            "@c:type": "gint*"
                                        }
                                    },
                                    {
                                        "@name": "precision",
                                        "@direction": "out",
                                        "@caller-allocates": "0",
                                        "@transfer-ownership": "full",
                                        "@optional": "1",
                                        "@allow-none": "1",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "gdk/gdkvisual.c",
                                            "@line": "492",
                                            "#text": "A pointer to a #gint to be filled in, or %NULL"
                                        },
                                        "type": {
                                            "@name": "gint",
                                            "@c:type": "gint*"
                                        }
                                    }
                                ]
                            }
                        },
                        {
                            "@name": "get_byte_order",
                            "@c:identifier": "gdk_visual_get_byte_order",
                            "@version": "2.22",
                            "@deprecated": "1",
                            "@deprecated-version": "3.22",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkvisual.c",
                                "@line": "328",
                                "#text": "Returns the byte order of this visual.\n\nThe information returned by this function is only relevant\nwhen working with XImages, and not all backends return\nmeaningful information for this."
                            },
                            "doc-deprecated": {
                                "@xml:space": "preserve",
                                "#text": "This information is not useful"
                            },
                            "source-position": {
                                "@filename": "gdk/gdkvisual.h",
                                "@line": "119"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "gdk/gdkvisual.c",
                                    "@line": "338",
                                    "#text": "A #GdkByteOrder stating the byte order of @visual."
                                },
                                "type": {
                                    "@name": "ByteOrder",
                                    "@c:type": "GdkByteOrder"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "visual",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "gdk/gdkvisual.c",
                                        "@line": "330",
                                        "#text": "A #GdkVisual."
                                    },
                                    "type": {
                                        "@name": "Visual",
                                        "@c:type": "GdkVisual*"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "get_colormap_size",
                            "@c:identifier": "gdk_visual_get_colormap_size",
                            "@version": "2.22",
                            "@deprecated": "1",
                            "@deprecated-version": "3.22",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkvisual.c",
                                "@line": "352",
                                "#text": "Returns the size of a colormap for this visual.\n\nYou have to use platform-specific APIs to manipulate colormaps."
                            },
                            "doc-deprecated": {
                                "@xml:space": "preserve",
                                "#text": "This information is not useful, since GDK does not\n    provide APIs to operate on colormaps."
                            },
                            "source-position": {
                                "@filename": "gdk/gdkvisual.h",
                                "@line": "121"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "gdk/gdkvisual.c",
                                    "@line": "360",
                                    "#text": "The size of a colormap that is suitable for @visual."
                                },
                                "type": {
                                    "@name": "gint",
                                    "@c:type": "gint"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "visual",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "gdk/gdkvisual.c",
                                        "@line": "354",
                                        "#text": "A #GdkVisual."
                                    },
                                    "type": {
                                        "@name": "Visual",
                                        "@c:type": "GdkVisual*"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "get_depth",
                            "@c:identifier": "gdk_visual_get_depth",
                            "@version": "2.22",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkvisual.c",
                                "@line": "310",
                                "#text": "Returns the bit depth of this visual."
                            },
                            "source-position": {
                                "@filename": "gdk/gdkvisual.h",
                                "@line": "117"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "gdk/gdkvisual.c",
                                    "@line": "316",
                                    "#text": "The bit depth of this visual."
                                },
                                "type": {
                                    "@name": "gint",
                                    "@c:type": "gint"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "visual",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "gdk/gdkvisual.c",
                                        "@line": "312",
                                        "#text": "A #GdkVisual."
                                    },
                                    "type": {
                                        "@name": "Visual",
                                        "@c:type": "GdkVisual*"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "get_green_pixel_details",
                            "@c:identifier": "gdk_visual_get_green_pixel_details",
                            "@version": "2.22",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkvisual.c",
                                "@line": "461",
                                "#text": "Obtains values that are needed to calculate green pixel values in TrueColor\nand DirectColor. The \u201cmask\u201d is the significant bits within the pixel.\nThe \u201cshift\u201d is the number of bits left we must shift a primary for it\nto be in position (according to the \"mask\"). Finally, \"precision\" refers\nto how much precision the pixel value contains for a particular primary."
                            },
                            "source-position": {
                                "@filename": "gdk/gdkvisual.h",
                                "@line": "130"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "type": {
                                    "@name": "none",
                                    "@c:type": "void"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "visual",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "gdk/gdkvisual.c",
                                        "@line": "463",
                                        "#text": "a #GdkVisual"
                                    },
                                    "type": {
                                        "@name": "Visual",
                                        "@c:type": "GdkVisual*"
                                    }
                                },
                                "parameter": [
                                    {
                                        "@name": "mask",
                                        "@direction": "out",
                                        "@caller-allocates": "0",
                                        "@transfer-ownership": "full",
                                        "@optional": "1",
                                        "@allow-none": "1",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "gdk/gdkvisual.c",
                                            "@line": "464",
                                            "#text": "A pointer to a #guint32 to be filled in, or %NULL"
                                        },
                                        "type": {
                                            "@name": "guint32",
                                            "@c:type": "guint32*"
                                        }
                                    },
                                    {
                                        "@name": "shift",
                                        "@direction": "out",
                                        "@caller-allocates": "0",
                                        "@transfer-ownership": "full",
                                        "@optional": "1",
                                        "@allow-none": "1",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "gdk/gdkvisual.c",
                                            "@line": "465",
                                            "#text": "A pointer to a #gint to be filled in, or %NULL"
                                        },
                                        "type": {
                                            "@name": "gint",
                                            "@c:type": "gint*"
                                        }
                                    },
                                    {
                                        "@name": "precision",
                                        "@direction": "out",
                                        "@caller-allocates": "0",
                                        "@transfer-ownership": "full",
                                        "@optional": "1",
                                        "@allow-none": "1",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "gdk/gdkvisual.c",
                                            "@line": "466",
                                            "#text": "A pointer to a #gint to be filled in, or %NULL"
                                        },
                                        "type": {
                                            "@name": "gint",
                                            "@c:type": "gint*"
                                        }
                                    }
                                ]
                            }
                        },
                        {
                            "@name": "get_red_pixel_details",
                            "@c:identifier": "gdk_visual_get_red_pixel_details",
                            "@version": "2.22",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkvisual.c",
                                "@line": "435",
                                "#text": "Obtains values that are needed to calculate red pixel values in TrueColor\nand DirectColor. The \u201cmask\u201d is the significant bits within the pixel.\nThe \u201cshift\u201d is the number of bits left we must shift a primary for it\nto be in position (according to the \"mask\"). Finally, \"precision\" refers\nto how much precision the pixel value contains for a particular primary."
                            },
                            "source-position": {
                                "@filename": "gdk/gdkvisual.h",
                                "@line": "125"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "type": {
                                    "@name": "none",
                                    "@c:type": "void"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "visual",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "gdk/gdkvisual.c",
                                        "@line": "437",
                                        "#text": "A #GdkVisual"
                                    },
                                    "type": {
                                        "@name": "Visual",
                                        "@c:type": "GdkVisual*"
                                    }
                                },
                                "parameter": [
                                    {
                                        "@name": "mask",
                                        "@direction": "out",
                                        "@caller-allocates": "0",
                                        "@transfer-ownership": "full",
                                        "@optional": "1",
                                        "@allow-none": "1",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "gdk/gdkvisual.c",
                                            "@line": "438",
                                            "#text": "A pointer to a #guint32 to be filled in, or %NULL"
                                        },
                                        "type": {
                                            "@name": "guint32",
                                            "@c:type": "guint32*"
                                        }
                                    },
                                    {
                                        "@name": "shift",
                                        "@direction": "out",
                                        "@caller-allocates": "0",
                                        "@transfer-ownership": "full",
                                        "@optional": "1",
                                        "@allow-none": "1",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "gdk/gdkvisual.c",
                                            "@line": "439",
                                            "#text": "A pointer to a #gint to be filled in, or %NULL"
                                        },
                                        "type": {
                                            "@name": "gint",
                                            "@c:type": "gint*"
                                        }
                                    },
                                    {
                                        "@name": "precision",
                                        "@direction": "out",
                                        "@caller-allocates": "0",
                                        "@transfer-ownership": "full",
                                        "@optional": "1",
                                        "@allow-none": "1",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "gdk/gdkvisual.c",
                                            "@line": "440",
                                            "#text": "A pointer to a #gint to be filled in, or %NULL"
                                        },
                                        "type": {
                                            "@name": "gint",
                                            "@c:type": "gint*"
                                        }
                                    }
                                ]
                            }
                        },
                        {
                            "@name": "get_screen",
                            "@c:identifier": "gdk_visual_get_screen",
                            "@version": "2.2",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkvisual.c",
                                "@line": "513",
                                "#text": "Gets the screen to which this visual belongs"
                            },
                            "source-position": {
                                "@filename": "gdk/gdkvisual.h",
                                "@line": "112"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "gdk/gdkvisual.c",
                                    "@line": "519",
                                    "#text": "the screen to which this visual belongs."
                                },
                                "type": {
                                    "@name": "Screen",
                                    "@c:type": "GdkScreen*"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "visual",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "gdk/gdkvisual.c",
                                        "@line": "515",
                                        "#text": "a #GdkVisual"
                                    },
                                    "type": {
                                        "@name": "Visual",
                                        "@c:type": "GdkVisual*"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "get_visual_type",
                            "@c:identifier": "gdk_visual_get_visual_type",
                            "@version": "2.22",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkvisual.c",
                                "@line": "292",
                                "#text": "Returns the type of visual this is (PseudoColor, TrueColor, etc)."
                            },
                            "source-position": {
                                "@filename": "gdk/gdkvisual.h",
                                "@line": "115"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "gdk/gdkvisual.c",
                                    "@line": "298",
                                    "#text": "A #GdkVisualType stating the type of @visual."
                                },
                                "type": {
                                    "@name": "VisualType",
                                    "@c:type": "GdkVisualType"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "visual",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "gdk/gdkvisual.c",
                                        "@line": "294",
                                        "#text": "A #GdkVisual."
                                    },
                                    "type": {
                                        "@name": "Visual",
                                        "@c:type": "GdkVisual*"
                                    }
                                }
                            }
                        }
                    ]
                },
                {
                    "@name": "Window",
                    "@c:symbol-prefix": "window",
                    "@c:type": "GdkWindow",
                    "@parent": "GObject.Object",
                    "@abstract": "1",
                    "@glib:type-name": "GdkWindow",
                    "@glib:get-type": "gdk_window_get_type",
                    "@glib:type-struct": "WindowClass",
                    "source-position": {
                        "@filename": "gdk/gdkwindow.h",
                        "@line": "503"
                    },
                    "constructor": {
                        "@name": "new",
                        "@c:identifier": "gdk_window_new",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "gdk/gdkwindow.c",
                            "@line": "1339",
                            "#text": "Creates a new #GdkWindow using the attributes from\n@attributes. See #GdkWindowAttr and #GdkWindowAttributesType for\nmore details.  Note: to use this on displays other than the default\ndisplay, @parent must be specified."
                        },
                        "source-position": {
                            "@filename": "gdk/gdkwindow.h",
                            "@line": "510"
                        },
                        "return-value": {
                            "@transfer-ownership": "full",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkwindow.c",
                                "@line": "1352",
                                "#text": "the new #GdkWindow"
                            },
                            "type": {
                                "@name": "Window",
                                "@c:type": "GdkWindow*"
                            }
                        },
                        "parameters": {
                            "parameter": [
                                {
                                    "@name": "parent",
                                    "@transfer-ownership": "none",
                                    "@nullable": "1",
                                    "@allow-none": "1",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "gdk/gdkwindow.c",
                                        "@line": "1341",
                                        "#text": "a #GdkWindow, or %NULL to create the window as a child of\n  the default root window for the default display."
                                    },
                                    "type": {
                                        "@name": "Window",
                                        "@c:type": "GdkWindow*"
                                    }
                                },
                                {
                                    "@name": "attributes",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "gdk/gdkwindow.c",
                                        "@line": "1343",
                                        "#text": "attributes of the new window"
                                    },
                                    "type": {
                                        "@name": "WindowAttr",
                                        "@c:type": "GdkWindowAttr*"
                                    }
                                },
                                {
                                    "@name": "attributes_mask",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "gdk/gdkwindow.c",
                                        "@line": "1344",
                                        "#text": "mask indicating which\n  fields in @attributes are valid"
                                    },
                                    "type": {
                                        "@name": "WindowAttributesType",
                                        "@c:type": "gint"
                                    }
                                }
                            ]
                        }
                    },
                    "function": [
                        {
                            "@name": "at_pointer",
                            "@c:identifier": "gdk_window_at_pointer",
                            "@deprecated": "1",
                            "@deprecated-version": "3.0",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkdeprecated.c",
                                "@line": "83",
                                "#text": "Obtains the window underneath the mouse pointer, returning the\nlocation of that window in @win_x, @win_y. Returns %NULL if the\nwindow under the mouse pointer is not known to GDK (if the window\nbelongs to another application and a #GdkWindow hasn\u2019t been created\nfor it with gdk_window_foreign_new())\n\nNOTE: For multihead-aware widgets or applications use\ngdk_display_get_window_at_pointer() instead."
                            },
                            "doc-deprecated": {
                                "@xml:space": "preserve",
                                "#text": "Use gdk_device_get_window_at_position() instead."
                            },
                            "source-position": {
                                "@filename": "gdk/gdkwindow.h",
                                "@line": "528"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "gdk/gdkdeprecated.c",
                                    "@line": "97",
                                    "#text": "window under the mouse pointer"
                                },
                                "type": {
                                    "@name": "Window",
                                    "@c:type": "GdkWindow*"
                                }
                            },
                            "parameters": {
                                "parameter": [
                                    {
                                        "@name": "win_x",
                                        "@direction": "out",
                                        "@caller-allocates": "0",
                                        "@transfer-ownership": "full",
                                        "@optional": "1",
                                        "@allow-none": "1",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "gdk/gdkdeprecated.c",
                                            "@line": "85",
                                            "#text": "return location for origin of the window under the pointer"
                                        },
                                        "type": {
                                            "@name": "gint",
                                            "@c:type": "gint*"
                                        }
                                    },
                                    {
                                        "@name": "win_y",
                                        "@direction": "out",
                                        "@caller-allocates": "0",
                                        "@transfer-ownership": "full",
                                        "@optional": "1",
                                        "@allow-none": "1",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "gdk/gdkdeprecated.c",
                                            "@line": "86",
                                            "#text": "return location for origin of the window under the pointer"
                                        },
                                        "type": {
                                            "@name": "gint",
                                            "@c:type": "gint*"
                                        }
                                    }
                                ]
                            }
                        },
                        {
                            "@name": "constrain_size",
                            "@c:identifier": "gdk_window_constrain_size",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkwindow.c",
                                "@line": "4847",
                                "#text": "Constrains a desired width and height according to a\nset of geometry hints (such as minimum and maximum size)."
                            },
                            "source-position": {
                                "@filename": "gdk/gdkwindow.h",
                                "@line": "1077"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "type": {
                                    "@name": "none",
                                    "@c:type": "void"
                                }
                            },
                            "parameters": {
                                "parameter": [
                                    {
                                        "@name": "geometry",
                                        "@transfer-ownership": "none",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "gdk/gdkwindow.c",
                                            "@line": "4849",
                                            "#text": "a #GdkGeometry structure"
                                        },
                                        "type": {
                                            "@name": "Geometry",
                                            "@c:type": "GdkGeometry*"
                                        }
                                    },
                                    {
                                        "@name": "flags",
                                        "@transfer-ownership": "none",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "gdk/gdkwindow.c",
                                            "@line": "4850",
                                            "#text": "a mask indicating what portions of @geometry are set"
                                        },
                                        "type": {
                                            "@name": "WindowHints",
                                            "@c:type": "GdkWindowHints"
                                        }
                                    },
                                    {
                                        "@name": "width",
                                        "@transfer-ownership": "none",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "gdk/gdkwindow.c",
                                            "@line": "4851",
                                            "#text": "desired width of window"
                                        },
                                        "type": {
                                            "@name": "gint",
                                            "@c:type": "gint"
                                        }
                                    },
                                    {
                                        "@name": "height",
                                        "@transfer-ownership": "none",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "gdk/gdkwindow.c",
                                            "@line": "4852",
                                            "#text": "desired height of the window"
                                        },
                                        "type": {
                                            "@name": "gint",
                                            "@c:type": "gint"
                                        }
                                    },
                                    {
                                        "@name": "new_width",
                                        "@direction": "out",
                                        "@caller-allocates": "0",
                                        "@transfer-ownership": "full",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "gdk/gdkwindow.c",
                                            "@line": "4853",
                                            "#text": "location to store resulting width"
                                        },
                                        "type": {
                                            "@name": "gint",
                                            "@c:type": "gint*"
                                        }
                                    },
                                    {
                                        "@name": "new_height",
                                        "@direction": "out",
                                        "@caller-allocates": "0",
                                        "@transfer-ownership": "full",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "gdk/gdkwindow.c",
                                            "@line": "4854",
                                            "#text": "location to store resulting height"
                                        },
                                        "type": {
                                            "@name": "gint",
                                            "@c:type": "gint*"
                                        }
                                    }
                                ]
                            }
                        },
                        {
                            "@name": "process_all_updates",
                            "@c:identifier": "gdk_window_process_all_updates",
                            "@deprecated": "1",
                            "@deprecated-version": "3.22",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkwindow.c",
                                "@line": "4082",
                                "#text": "Calls gdk_window_process_updates() for all windows (see #GdkWindow)\nin the application."
                            },
                            "source-position": {
                                "@filename": "gdk/gdkwindow.h",
                                "@line": "1067"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "type": {
                                    "@name": "none",
                                    "@c:type": "void"
                                }
                            }
                        },
                        {
                            "@name": "set_debug_updates",
                            "@c:identifier": "gdk_window_set_debug_updates",
                            "@deprecated": "1",
                            "@deprecated-version": "3.22",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkwindow.c",
                                "@line": "4815",
                                "#text": "With update debugging enabled, calls to\ngdk_window_invalidate_region() clear the invalidated region of the\nscreen to a noticeable color, and GDK pauses for a short time\nbefore sending exposes to windows during\ngdk_window_process_updates().  The net effect is that you can see\nthe invalid region for each window and watch redraws as they\noccur. This allows you to diagnose inefficiencies in your application.\n\nIn essence, because the GDK rendering model prevents all flicker,\nif you are redrawing the same region 400 times you may never\nnotice, aside from noticing a speed problem. Enabling update\ndebugging causes GTK to flicker slowly and noticeably, so you can\nsee exactly what\u2019s being redrawn when, in what order.\n\nThe --gtk-debug=updates command line option passed to GTK+ programs\nenables this debug option at application startup time. That's\nusually more useful than calling gdk_window_set_debug_updates()\nyourself, though you might want to use this function to enable\nupdates sometime after application startup time."
                            },
                            "source-position": {
                                "@filename": "gdk/gdkwindow.h",
                                "@line": "1074"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "type": {
                                    "@name": "none",
                                    "@c:type": "void"
                                }
                            },
                            "parameters": {
                                "parameter": {
                                    "@name": "setting",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "gdk/gdkwindow.c",
                                        "@line": "4817",
                                        "#text": "%TRUE to turn on update debugging"
                                    },
                                    "type": {
                                        "@name": "gboolean",
                                        "@c:type": "gboolean"
                                    }
                                }
                            }
                        }
                    ],
                    "virtual-method": [
                        {
                            "@name": "create_surface",
                            "source-position": {
                                "@filename": "gdk/gdkwindow.h",
                                "@line": "490"
                            },
                            "return-value": {
                                "@transfer-ownership": "full",
                                "type": {
                                    "@name": "cairo.Surface",
                                    "@c:type": "cairo_surface_t*"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "window",
                                    "@transfer-ownership": "none",
                                    "type": {
                                        "@name": "Window",
                                        "@c:type": "GdkWindow*"
                                    }
                                },
                                "parameter": [
                                    {
                                        "@name": "width",
                                        "@transfer-ownership": "none",
                                        "type": {
                                            "@name": "gint",
                                            "@c:type": "gint"
                                        }
                                    },
                                    {
                                        "@name": "height",
                                        "@transfer-ownership": "none",
                                        "type": {
                                            "@name": "gint",
                                            "@c:type": "gint"
                                        }
                                    }
                                ]
                            }
                        },
                        {
                            "@name": "from_embedder",
                            "source-position": {
                                "@filename": "gdk/gdkwindow.h",
                                "@line": "485"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "type": {
                                    "@name": "none",
                                    "@c:type": "void"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "window",
                                    "@transfer-ownership": "none",
                                    "type": {
                                        "@name": "Window",
                                        "@c:type": "GdkWindow*"
                                    }
                                },
                                "parameter": [
                                    {
                                        "@name": "embedder_x",
                                        "@transfer-ownership": "none",
                                        "type": {
                                            "@name": "gdouble",
                                            "@c:type": "gdouble"
                                        }
                                    },
                                    {
                                        "@name": "embedder_y",
                                        "@transfer-ownership": "none",
                                        "type": {
                                            "@name": "gdouble",
                                            "@c:type": "gdouble"
                                        }
                                    },
                                    {
                                        "@name": "offscreen_x",
                                        "@transfer-ownership": "none",
                                        "type": {
                                            "@name": "gdouble",
                                            "@c:type": "gdouble*"
                                        }
                                    },
                                    {
                                        "@name": "offscreen_y",
                                        "@transfer-ownership": "none",
                                        "type": {
                                            "@name": "gdouble",
                                            "@c:type": "gdouble*"
                                        }
                                    }
                                ]
                            }
                        },
                        {
                            "@name": "pick_embedded_child",
                            "@introspectable": "0",
                            "source-position": {
                                "@filename": "gdk/gdkwindow.h",
                                "@line": "475"
                            },
                            "return-value": {
                                "type": {
                                    "@name": "Window",
                                    "@c:type": "GdkWindow*"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "window",
                                    "@transfer-ownership": "none",
                                    "type": {
                                        "@name": "Window",
                                        "@c:type": "GdkWindow*"
                                    }
                                },
                                "parameter": [
                                    {
                                        "@name": "x",
                                        "@transfer-ownership": "none",
                                        "type": {
                                            "@name": "gdouble",
                                            "@c:type": "gdouble"
                                        }
                                    },
                                    {
                                        "@name": "y",
                                        "@transfer-ownership": "none",
                                        "type": {
                                            "@name": "gdouble",
                                            "@c:type": "gdouble"
                                        }
                                    }
                                ]
                            }
                        },
                        {
                            "@name": "to_embedder",
                            "source-position": {
                                "@filename": "gdk/gdkwindow.h",
                                "@line": "480"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "type": {
                                    "@name": "none",
                                    "@c:type": "void"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "window",
                                    "@transfer-ownership": "none",
                                    "type": {
                                        "@name": "Window",
                                        "@c:type": "GdkWindow*"
                                    }
                                },
                                "parameter": [
                                    {
                                        "@name": "offscreen_x",
                                        "@transfer-ownership": "none",
                                        "type": {
                                            "@name": "gdouble",
                                            "@c:type": "gdouble"
                                        }
                                    },
                                    {
                                        "@name": "offscreen_y",
                                        "@transfer-ownership": "none",
                                        "type": {
                                            "@name": "gdouble",
                                            "@c:type": "gdouble"
                                        }
                                    },
                                    {
                                        "@name": "embedder_x",
                                        "@transfer-ownership": "none",
                                        "type": {
                                            "@name": "gdouble",
                                            "@c:type": "gdouble*"
                                        }
                                    },
                                    {
                                        "@name": "embedder_y",
                                        "@transfer-ownership": "none",
                                        "type": {
                                            "@name": "gdouble",
                                            "@c:type": "gdouble*"
                                        }
                                    }
                                ]
                            }
                        }
                    ],
                    "method": [
                        {
                            "@name": "add_filter",
                            "@c:identifier": "gdk_window_add_filter",
                            "@introspectable": "0",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkwindow.c",
                                "@line": "2622",
                                "#text": "Adds an event filter to @window, allowing you to intercept events\nbefore they reach GDK. This is a low-level operation and makes it\neasy to break GDK and/or GTK+, so you have to know what you're\ndoing. Pass %NULL for @window to get all events for all windows,\ninstead of events for a specific window.\n\nIf you are interested in X GenericEvents, bear in mind that\nXGetEventData() has been already called on the event, and\nXFreeEventData() must not be called within @function."
                            },
                            "source-position": {
                                "@filename": "gdk/gdkwindow.h",
                                "@line": "595"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "type": {
                                    "@name": "none",
                                    "@c:type": "void"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "window",
                                    "@transfer-ownership": "none",
                                    "@nullable": "1",
                                    "@allow-none": "1",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "gdk/gdkwindow.c",
                                        "@line": "2624",
                                        "#text": "a #GdkWindow"
                                    },
                                    "type": {
                                        "@name": "Window",
                                        "@c:type": "GdkWindow*"
                                    }
                                },
                                "parameter": [
                                    {
                                        "@name": "function",
                                        "@transfer-ownership": "none",
                                        "@closure": "1",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "gdk/gdkwindow.c",
                                            "@line": "2625",
                                            "#text": "filter callback"
                                        },
                                        "type": {
                                            "@name": "FilterFunc",
                                            "@c:type": "GdkFilterFunc"
                                        }
                                    },
                                    {
                                        "@name": "data",
                                        "@transfer-ownership": "none",
                                        "@nullable": "1",
                                        "@allow-none": "1",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "gdk/gdkwindow.c",
                                            "@line": "2626",
                                            "#text": "data to pass to filter callback"
                                        },
                                        "type": {
                                            "@name": "gpointer",
                                            "@c:type": "gpointer"
                                        }
                                    }
                                ]
                            }
                        },
                        {
                            "@name": "beep",
                            "@c:identifier": "gdk_window_beep",
                            "@version": "2.12",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkwindow.c",
                                "@line": "7900",
                                "#text": "Emits a short beep associated to @window in the appropriate\ndisplay, if supported. Otherwise, emits a short beep on\nthe display just as gdk_display_beep()."
                            },
                            "source-position": {
                                "@filename": "gdk/gdkwindow.h",
                                "@line": "952"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "type": {
                                    "@name": "none",
                                    "@c:type": "void"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "window",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "gdk/gdkwindow.c",
                                        "@line": "7902",
                                        "#text": "a toplevel #GdkWindow"
                                    },
                                    "type": {
                                        "@name": "Window",
                                        "@c:type": "GdkWindow*"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "begin_draw_frame",
                            "@c:identifier": "gdk_window_begin_draw_frame",
                            "@version": "3.22",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkwindow.c",
                                "@line": "3200",
                                "#text": "Indicates that you are beginning the process of redrawing @region\non @window, and provides you with a #GdkDrawingContext.\n\nIf @window is a top level #GdkWindow, backed by a native window\nimplementation, a backing store (offscreen buffer) large enough to\ncontain @region will be created. The backing store will be initialized\nwith the background color or background surface for @window. Then, all\ndrawing operations performed on @window will be diverted to the\nbacking store. When you call gdk_window_end_frame(), the contents of\nthe backing store will be copied to @window, making it visible\non screen. Only the part of @window contained in @region will be\nmodified; that is, drawing operations are clipped to @region.\n\nThe net result of all this is to remove flicker, because the user\nsees the finished product appear all at once when you call\ngdk_window_end_draw_frame(). If you draw to @window directly without\ncalling gdk_window_begin_draw_frame(), the user may see flicker\nas individual drawing operations are performed in sequence.\n\nWhen using GTK+, the widget system automatically places calls to\ngdk_window_begin_draw_frame() and gdk_window_end_draw_frame() around\nemissions of the `GtkWidget::draw` signal. That is, if you\u2019re\ndrawing the contents of the widget yourself, you can assume that the\nwidget has a cleared background, is already set as the clip region,\nand already has a backing store. Therefore in most cases, application\ncode in GTK does not need to call gdk_window_begin_draw_frame()\nexplicitly."
                            },
                            "source-position": {
                                "@filename": "gdk/gdkwindow.h",
                                "@line": "762"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "gdk/gdkwindow.c",
                                    "@line": "3233",
                                    "#text": "a #GdkDrawingContext context that should be\n  used to draw the contents of the window; the returned context is owned\n  by GDK."
                                },
                                "type": {
                                    "@name": "DrawingContext",
                                    "@c:type": "GdkDrawingContext*"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "window",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "gdk/gdkwindow.c",
                                        "@line": "3202",
                                        "#text": "a #GdkWindow"
                                    },
                                    "type": {
                                        "@name": "Window",
                                        "@c:type": "GdkWindow*"
                                    }
                                },
                                "parameter": {
                                    "@name": "region",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "gdk/gdkwindow.c",
                                        "@line": "3203",
                                        "#text": "a Cairo region"
                                    },
                                    "type": {
                                        "@name": "cairo.Region",
                                        "@c:type": "const cairo_region_t*"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "begin_move_drag",
                            "@c:identifier": "gdk_window_begin_move_drag",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkwindow.c",
                                "@line": "11251",
                                "#text": "Begins a window move operation (for a toplevel window).\n\nThis function assumes that the drag is controlled by the\nclient pointer device, use gdk_window_begin_move_drag_for_device()\nto begin a drag with a different device."
                            },
                            "source-position": {
                                "@filename": "gdk/gdkwindow.h",
                                "@line": "1011"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "type": {
                                    "@name": "none",
                                    "@c:type": "void"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "window",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "gdk/gdkwindow.c",
                                        "@line": "11253",
                                        "#text": "a toplevel #GdkWindow"
                                    },
                                    "type": {
                                        "@name": "Window",
                                        "@c:type": "GdkWindow*"
                                    }
                                },
                                "parameter": [
                                    {
                                        "@name": "button",
                                        "@transfer-ownership": "none",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "gdk/gdkwindow.c",
                                            "@line": "11254",
                                            "#text": "the button being used to drag, or 0 for a keyboard-initiated drag"
                                        },
                                        "type": {
                                            "@name": "gint",
                                            "@c:type": "gint"
                                        }
                                    },
                                    {
                                        "@name": "root_x",
                                        "@transfer-ownership": "none",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "gdk/gdkwindow.c",
                                            "@line": "11255",
                                            "#text": "root window X coordinate of mouse click that began the drag"
                                        },
                                        "type": {
                                            "@name": "gint",
                                            "@c:type": "gint"
                                        }
                                    },
                                    {
                                        "@name": "root_y",
                                        "@transfer-ownership": "none",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "gdk/gdkwindow.c",
                                            "@line": "11256",
                                            "#text": "root window Y coordinate of mouse click that began the drag"
                                        },
                                        "type": {
                                            "@name": "gint",
                                            "@c:type": "gint"
                                        }
                                    },
                                    {
                                        "@name": "timestamp",
                                        "@transfer-ownership": "none",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "gdk/gdkwindow.c",
                                            "@line": "11257",
                                            "#text": "timestamp of mouse click that began the drag"
                                        },
                                        "type": {
                                            "@name": "guint32",
                                            "@c:type": "guint32"
                                        }
                                    }
                                ]
                            }
                        },
                        {
                            "@name": "begin_move_drag_for_device",
                            "@c:identifier": "gdk_window_begin_move_drag_for_device",
                            "@version": "3.4",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkwindow.c",
                                "@line": "11222",
                                "#text": "Begins a window move operation (for a toplevel window).\nYou might use this function to implement a \u201cwindow move grip,\u201d for\nexample. The function works best with window managers that support the\n[Extended Window Manager Hints](http://www.freedesktop.org/Standards/wm-spec)\nbut has a fallback implementation for other window managers."
                            },
                            "source-position": {
                                "@filename": "gdk/gdkwindow.h",
                                "@line": "1017"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "type": {
                                    "@name": "none",
                                    "@c:type": "void"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "window",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "gdk/gdkwindow.c",
                                        "@line": "11224",
                                        "#text": "a toplevel #GdkWindow"
                                    },
                                    "type": {
                                        "@name": "Window",
                                        "@c:type": "GdkWindow*"
                                    }
                                },
                                "parameter": [
                                    {
                                        "@name": "device",
                                        "@transfer-ownership": "none",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "gdk/gdkwindow.c",
                                            "@line": "11225",
                                            "#text": "the device used for the operation"
                                        },
                                        "type": {
                                            "@name": "Device",
                                            "@c:type": "GdkDevice*"
                                        }
                                    },
                                    {
                                        "@name": "button",
                                        "@transfer-ownership": "none",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "gdk/gdkwindow.c",
                                            "@line": "11226",
                                            "#text": "the button being used to drag, or 0 for a keyboard-initiated drag"
                                        },
                                        "type": {
                                            "@name": "gint",
                                            "@c:type": "gint"
                                        }
                                    },
                                    {
                                        "@name": "root_x",
                                        "@transfer-ownership": "none",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "gdk/gdkwindow.c",
                                            "@line": "11227",
                                            "#text": "root window X coordinate of mouse click that began the drag"
                                        },
                                        "type": {
                                            "@name": "gint",
                                            "@c:type": "gint"
                                        }
                                    },
                                    {
                                        "@name": "root_y",
                                        "@transfer-ownership": "none",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "gdk/gdkwindow.c",
                                            "@line": "11228",
                                            "#text": "root window Y coordinate of mouse click that began the drag"
                                        },
                                        "type": {
                                            "@name": "gint",
                                            "@c:type": "gint"
                                        }
                                    },
                                    {
                                        "@name": "timestamp",
                                        "@transfer-ownership": "none",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "gdk/gdkwindow.c",
                                            "@line": "11229",
                                            "#text": "timestamp of mouse click that began the drag"
                                        },
                                        "type": {
                                            "@name": "guint32",
                                            "@c:type": "guint32"
                                        }
                                    }
                                ]
                            }
                        },
                        {
                            "@name": "begin_paint_rect",
                            "@c:identifier": "gdk_window_begin_paint_rect",
                            "@deprecated": "1",
                            "@deprecated-version": "3.22",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkwindow.c",
                                "@line": "3121",
                                "#text": "A convenience wrapper around gdk_window_begin_paint_region() which\ncreates a rectangular region for you. See\ngdk_window_begin_paint_region() for details."
                            },
                            "doc-deprecated": {
                                "@xml:space": "preserve",
                                "#text": "Use gdk_window_begin_draw_frame() instead"
                            },
                            "source-position": {
                                "@filename": "gdk/gdkwindow.h",
                                "@line": "750"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "type": {
                                    "@name": "none",
                                    "@c:type": "void"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "window",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "gdk/gdkwindow.c",
                                        "@line": "3123",
                                        "#text": "a #GdkWindow"
                                    },
                                    "type": {
                                        "@name": "Window",
                                        "@c:type": "GdkWindow*"
                                    }
                                },
                                "parameter": {
                                    "@name": "rectangle",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "gdk/gdkwindow.c",
                                        "@line": "3124",
                                        "#text": "rectangle you intend to draw to"
                                    },
                                    "type": {
                                        "@name": "Rectangle",
                                        "@c:type": "const GdkRectangle*"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "begin_paint_region",
                            "@c:identifier": "gdk_window_begin_paint_region",
                            "@deprecated": "1",
                            "@deprecated-version": "3.22",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkwindow.c",
                                "@line": "3145",
                                "#text": "Indicates that you are beginning the process of redrawing @region.\nA backing store (offscreen buffer) large enough to contain @region\nwill be created. The backing store will be initialized with the\nbackground color or background surface for @window. Then, all\ndrawing operations performed on @window will be diverted to the\nbacking store.  When you call gdk_window_end_paint(), the backing\nstore will be copied to @window, making it visible onscreen. Only\nthe part of @window contained in @region will be modified; that is,\ndrawing operations are clipped to @region.\n\nThe net result of all this is to remove flicker, because the user\nsees the finished product appear all at once when you call\ngdk_window_end_paint(). If you draw to @window directly without\ncalling gdk_window_begin_paint_region(), the user may see flicker\nas individual drawing operations are performed in sequence.  The\nclipping and background-initializing features of\ngdk_window_begin_paint_region() are conveniences for the\nprogrammer, so you can avoid doing that work yourself.\n\nWhen using GTK+, the widget system automatically places calls to\ngdk_window_begin_paint_region() and gdk_window_end_paint() around\nemissions of the expose_event signal. That is, if you\u2019re writing an\nexpose event handler, you can assume that the exposed area in\n#GdkEventExpose has already been cleared to the window background,\nis already set as the clip region, and already has a backing store.\nTherefore in most cases, application code need not call\ngdk_window_begin_paint_region(). (You can disable the automatic\ncalls around expose events on a widget-by-widget basis by calling\ngtk_widget_set_double_buffered().)\n\nIf you call this function multiple times before calling the\nmatching gdk_window_end_paint(), the backing stores are pushed onto\na stack. gdk_window_end_paint() copies the topmost backing store\nonscreen, subtracts the topmost region from all other regions in\nthe stack, and pops the stack. All drawing operations affect only\nthe topmost backing store in the stack. One matching call to\ngdk_window_end_paint() is required for each call to\ngdk_window_begin_paint_region()."
                            },
                            "doc-deprecated": {
                                "@xml:space": "preserve",
                                "#text": "Use gdk_window_begin_draw_frame() instead"
                            },
                            "source-position": {
                                "@filename": "gdk/gdkwindow.h",
                                "@line": "756"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "type": {
                                    "@name": "none",
                                    "@c:type": "void"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "window",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "gdk/gdkwindow.c",
                                        "@line": "3147",
                                        "#text": "a #GdkWindow"
                                    },
                                    "type": {
                                        "@name": "Window",
                                        "@c:type": "GdkWindow*"
                                    }
                                },
                                "parameter": {
                                    "@name": "region",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "gdk/gdkwindow.c",
                                        "@line": "3148",
                                        "#text": "region you intend to draw to"
                                    },
                                    "type": {
                                        "@name": "cairo.Region",
                                        "@c:type": "const cairo_region_t*"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "begin_resize_drag",
                            "@c:identifier": "gdk_window_begin_resize_drag",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkwindow.c",
                                "@line": "11190",
                                "#text": "Begins a window resize operation (for a toplevel window).\n\nThis function assumes that the drag is controlled by the\nclient pointer device, use gdk_window_begin_resize_drag_for_device()\nto begin a drag with a different device."
                            },
                            "source-position": {
                                "@filename": "gdk/gdkwindow.h",
                                "@line": "996"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "type": {
                                    "@name": "none",
                                    "@c:type": "void"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "window",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "gdk/gdkwindow.c",
                                        "@line": "11192",
                                        "#text": "a toplevel #GdkWindow"
                                    },
                                    "type": {
                                        "@name": "Window",
                                        "@c:type": "GdkWindow*"
                                    }
                                },
                                "parameter": [
                                    {
                                        "@name": "edge",
                                        "@transfer-ownership": "none",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "gdk/gdkwindow.c",
                                            "@line": "11193",
                                            "#text": "the edge or corner from which the drag is started"
                                        },
                                        "type": {
                                            "@name": "WindowEdge",
                                            "@c:type": "GdkWindowEdge"
                                        }
                                    },
                                    {
                                        "@name": "button",
                                        "@transfer-ownership": "none",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "gdk/gdkwindow.c",
                                            "@line": "11194",
                                            "#text": "the button being used to drag, or 0 for a keyboard-initiated drag"
                                        },
                                        "type": {
                                            "@name": "gint",
                                            "@c:type": "gint"
                                        }
                                    },
                                    {
                                        "@name": "root_x",
                                        "@transfer-ownership": "none",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "gdk/gdkwindow.c",
                                            "@line": "11195",
                                            "#text": "root window X coordinate of mouse click that began the drag"
                                        },
                                        "type": {
                                            "@name": "gint",
                                            "@c:type": "gint"
                                        }
                                    },
                                    {
                                        "@name": "root_y",
                                        "@transfer-ownership": "none",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "gdk/gdkwindow.c",
                                            "@line": "11196",
                                            "#text": "root window Y coordinate of mouse click that began the drag"
                                        },
                                        "type": {
                                            "@name": "gint",
                                            "@c:type": "gint"
                                        }
                                    },
                                    {
                                        "@name": "timestamp",
                                        "@transfer-ownership": "none",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "gdk/gdkwindow.c",
                                            "@line": "11197",
                                            "#text": "timestamp of mouse click that began the drag (use gdk_event_get_time())"
                                        },
                                        "type": {
                                            "@name": "guint32",
                                            "@c:type": "guint32"
                                        }
                                    }
                                ]
                            }
                        },
                        {
                            "@name": "begin_resize_drag_for_device",
                            "@c:identifier": "gdk_window_begin_resize_drag_for_device",
                            "@version": "3.4",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkwindow.c",
                                "@line": "11159",
                                "#text": "Begins a window resize operation (for a toplevel window).\nYou might use this function to implement a \u201cwindow resize grip,\u201d for\nexample; in fact #GtkStatusbar uses it. The function works best\nwith window managers that support the\n[Extended Window Manager Hints](http://www.freedesktop.org/Standards/wm-spec)\nbut has a fallback implementation for other window managers."
                            },
                            "source-position": {
                                "@filename": "gdk/gdkwindow.h",
                                "@line": "1003"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "type": {
                                    "@name": "none",
                                    "@c:type": "void"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "window",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "gdk/gdkwindow.c",
                                        "@line": "11161",
                                        "#text": "a toplevel #GdkWindow"
                                    },
                                    "type": {
                                        "@name": "Window",
                                        "@c:type": "GdkWindow*"
                                    }
                                },
                                "parameter": [
                                    {
                                        "@name": "edge",
                                        "@transfer-ownership": "none",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "gdk/gdkwindow.c",
                                            "@line": "11162",
                                            "#text": "the edge or corner from which the drag is started"
                                        },
                                        "type": {
                                            "@name": "WindowEdge",
                                            "@c:type": "GdkWindowEdge"
                                        }
                                    },
                                    {
                                        "@name": "device",
                                        "@transfer-ownership": "none",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "gdk/gdkwindow.c",
                                            "@line": "11163",
                                            "#text": "the device used for the operation"
                                        },
                                        "type": {
                                            "@name": "Device",
                                            "@c:type": "GdkDevice*"
                                        }
                                    },
                                    {
                                        "@name": "button",
                                        "@transfer-ownership": "none",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "gdk/gdkwindow.c",
                                            "@line": "11164",
                                            "#text": "the button being used to drag, or 0 for a keyboard-initiated drag"
                                        },
                                        "type": {
                                            "@name": "gint",
                                            "@c:type": "gint"
                                        }
                                    },
                                    {
                                        "@name": "root_x",
                                        "@transfer-ownership": "none",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "gdk/gdkwindow.c",
                                            "@line": "11165",
                                            "#text": "root window X coordinate of mouse click that began the drag"
                                        },
                                        "type": {
                                            "@name": "gint",
                                            "@c:type": "gint"
                                        }
                                    },
                                    {
                                        "@name": "root_y",
                                        "@transfer-ownership": "none",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "gdk/gdkwindow.c",
                                            "@line": "11166",
                                            "#text": "root window Y coordinate of mouse click that began the drag"
                                        },
                                        "type": {
                                            "@name": "gint",
                                            "@c:type": "gint"
                                        }
                                    },
                                    {
                                        "@name": "timestamp",
                                        "@transfer-ownership": "none",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "gdk/gdkwindow.c",
                                            "@line": "11167",
                                            "#text": "timestamp of mouse click that began the drag (use gdk_event_get_time())"
                                        },
                                        "type": {
                                            "@name": "guint32",
                                            "@c:type": "guint32"
                                        }
                                    }
                                ]
                            }
                        },
                        {
                            "@name": "configure_finished",
                            "@c:identifier": "gdk_window_configure_finished",
                            "@version": "2.6",
                            "@deprecated": "1",
                            "@deprecated-version": "3.8",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkwindow.c",
                                "@line": "11294",
                                "#text": "Does nothing, present only for compatiblity."
                            },
                            "doc-deprecated": {
                                "@xml:space": "preserve",
                                "#text": "this function is no longer needed"
                            },
                            "source-position": {
                                "@filename": "gdk/gdkwindow.h",
                                "@line": "1087"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "type": {
                                    "@name": "none",
                                    "@c:type": "void"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "window",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "gdk/gdkwindow.c",
                                        "@line": "11296",
                                        "#text": "a toplevel #GdkWindow"
                                    },
                                    "type": {
                                        "@name": "Window",
                                        "@c:type": "GdkWindow*"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "coords_from_parent",
                            "@c:identifier": "gdk_window_coords_from_parent",
                            "@version": "2.22",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkwindow.c",
                                "@line": "6946",
                                "#text": "Transforms window coordinates from a parent window to a child\nwindow, where the parent window is the normal parent as returned by\ngdk_window_get_parent() for normal windows, and the window's\nembedder as returned by gdk_offscreen_window_get_embedder() for\noffscreen windows.\n\nFor normal windows, calling this function is equivalent to subtracting\nthe return values of gdk_window_get_position() from the parent coordinates.\nFor offscreen windows however (which can be arbitrarily transformed),\nthis function calls the GdkWindow::from-embedder: signal to translate\nthe coordinates.\n\nYou should always use this function when writing generic code that\nwalks down a window hierarchy.\n\nSee also: gdk_window_coords_to_parent()"
                            },
                            "source-position": {
                                "@filename": "gdk/gdkwindow.h",
                                "@line": "841"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "type": {
                                    "@name": "none",
                                    "@c:type": "void"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "window",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "gdk/gdkwindow.c",
                                        "@line": "6948",
                                        "#text": "a child window"
                                    },
                                    "type": {
                                        "@name": "Window",
                                        "@c:type": "GdkWindow*"
                                    }
                                },
                                "parameter": [
                                    {
                                        "@name": "parent_x",
                                        "@transfer-ownership": "none",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "gdk/gdkwindow.c",
                                            "@line": "6949",
                                            "#text": "X coordinate in parent\u2019s coordinate system"
                                        },
                                        "type": {
                                            "@name": "gdouble",
                                            "@c:type": "gdouble"
                                        }
                                    },
                                    {
                                        "@name": "parent_y",
                                        "@transfer-ownership": "none",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "gdk/gdkwindow.c",
                                            "@line": "6950",
                                            "#text": "Y coordinate in parent\u2019s coordinate system"
                                        },
                                        "type": {
                                            "@name": "gdouble",
                                            "@c:type": "gdouble"
                                        }
                                    },
                                    {
                                        "@name": "x",
                                        "@direction": "out",
                                        "@caller-allocates": "0",
                                        "@transfer-ownership": "full",
                                        "@optional": "1",
                                        "@allow-none": "1",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "gdk/gdkwindow.c",
                                            "@line": "6951",
                                            "#text": "return location for X coordinate in child\u2019s coordinate system"
                                        },
                                        "type": {
                                            "@name": "gdouble",
                                            "@c:type": "gdouble*"
                                        }
                                    },
                                    {
                                        "@name": "y",
                                        "@direction": "out",
                                        "@caller-allocates": "0",
                                        "@transfer-ownership": "full",
                                        "@optional": "1",
                                        "@allow-none": "1",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "gdk/gdkwindow.c",
                                            "@line": "6952",
                                            "#text": "return location for Y coordinate in child\u2019s coordinate system"
                                        },
                                        "type": {
                                            "@name": "gdouble",
                                            "@c:type": "gdouble*"
                                        }
                                    }
                                ]
                            }
                        },
                        {
                            "@name": "coords_to_parent",
                            "@c:identifier": "gdk_window_coords_to_parent",
                            "@version": "2.22",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkwindow.c",
                                "@line": "6886",
                                "#text": "Transforms window coordinates from a child window to its parent\nwindow, where the parent window is the normal parent as returned by\ngdk_window_get_parent() for normal windows, and the window's\nembedder as returned by gdk_offscreen_window_get_embedder() for\noffscreen windows.\n\nFor normal windows, calling this function is equivalent to adding\nthe return values of gdk_window_get_position() to the child coordinates.\nFor offscreen windows however (which can be arbitrarily transformed),\nthis function calls the GdkWindow::to-embedder: signal to translate\nthe coordinates.\n\nYou should always use this function when writing generic code that\nwalks up a window hierarchy.\n\nSee also: gdk_window_coords_from_parent()"
                            },
                            "source-position": {
                                "@filename": "gdk/gdkwindow.h",
                                "@line": "835"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "type": {
                                    "@name": "none",
                                    "@c:type": "void"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "window",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "gdk/gdkwindow.c",
                                        "@line": "6888",
                                        "#text": "a child window"
                                    },
                                    "type": {
                                        "@name": "Window",
                                        "@c:type": "GdkWindow*"
                                    }
                                },
                                "parameter": [
                                    {
                                        "@name": "x",
                                        "@transfer-ownership": "none",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "gdk/gdkwindow.c",
                                            "@line": "6889",
                                            "#text": "X coordinate in child\u2019s coordinate system"
                                        },
                                        "type": {
                                            "@name": "gdouble",
                                            "@c:type": "gdouble"
                                        }
                                    },
                                    {
                                        "@name": "y",
                                        "@transfer-ownership": "none",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "gdk/gdkwindow.c",
                                            "@line": "6890",
                                            "#text": "Y coordinate in child\u2019s coordinate system"
                                        },
                                        "type": {
                                            "@name": "gdouble",
                                            "@c:type": "gdouble"
                                        }
                                    },
                                    {
                                        "@name": "parent_x",
                                        "@direction": "out",
                                        "@caller-allocates": "0",
                                        "@transfer-ownership": "full",
                                        "@optional": "1",
                                        "@allow-none": "1",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "gdk/gdkwindow.c",
                                            "@line": "6891",
                                            "#text": "return location for X coordinate\nin parent\u2019s coordinate system, or %NULL"
                                        },
                                        "type": {
                                            "@name": "gdouble",
                                            "@c:type": "gdouble*"
                                        }
                                    },
                                    {
                                        "@name": "parent_y",
                                        "@direction": "out",
                                        "@caller-allocates": "0",
                                        "@transfer-ownership": "full",
                                        "@optional": "1",
                                        "@allow-none": "1",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "gdk/gdkwindow.c",
                                            "@line": "6893",
                                            "#text": "return location for Y coordinate\nin parent\u2019s coordinate system, or %NULL"
                                        },
                                        "type": {
                                            "@name": "gdouble",
                                            "@c:type": "gdouble*"
                                        }
                                    }
                                ]
                            }
                        },
                        {
                            "@name": "create_gl_context",
                            "@c:identifier": "gdk_window_create_gl_context",
                            "@version": "3.16",
                            "@throws": "1",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkwindow.c",
                                "@line": "2891",
                                "#text": "Creates a new #GdkGLContext matching the\nframebuffer format to the visual of the #GdkWindow. The context\nis disconnected from any particular window or surface.\n\nIf the creation of the #GdkGLContext failed, @error will be set.\n\nBefore using the returned #GdkGLContext, you will need to\ncall gdk_gl_context_make_current() or gdk_gl_context_realize()."
                            },
                            "source-position": {
                                "@filename": "gdk/gdkwindow.h",
                                "@line": "1136"
                            },
                            "return-value": {
                                "@transfer-ownership": "full",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "gdk/gdkwindow.c",
                                    "@line": "2905",
                                    "#text": "the newly created #GdkGLContext, or\n%NULL on error"
                                },
                                "type": {
                                    "@name": "GLContext",
                                    "@c:type": "GdkGLContext*"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "window",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "gdk/gdkwindow.c",
                                        "@line": "2893",
                                        "#text": "a #GdkWindow"
                                    },
                                    "type": {
                                        "@name": "Window",
                                        "@c:type": "GdkWindow*"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "create_similar_image_surface",
                            "@c:identifier": "gdk_window_create_similar_image_surface",
                            "@version": "3.10",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkwindow.c",
                                "@line": "10199",
                                "#text": "Create a new image surface that is efficient to draw on the\ngiven @window.\n\nInitially the surface contents are all 0 (transparent if contents\nhave transparency, black otherwise.)\n\nThe @width and @height of the new surface are not affected by\nthe scaling factor of the @window, or by the @scale argument; they\nare the size of the surface in device pixels. If you wish to create\nan image surface capable of holding the contents of @window you can\nuse:\n\n|[<!-- language=\"C\" -->\n  int scale = gdk_window_get_scale_factor (window);\n  int width = gdk_window_get_width (window) * scale;\n  int height = gdk_window_get_height (window) * scale;\n\n  // format is set elsewhere\n  cairo_surface_t *surface =\n    gdk_window_create_similar_image_surface (window,\n                                             format,\n                                             width, height,\n                                             scale);\n]|\n\nNote that unlike cairo_surface_create_similar_image(), the new\nsurface's device scale is set to @scale, or to the scale factor of\n@window if @scale is 0."
                            },
                            "source-position": {
                                "@filename": "gdk/gdkwindow.h",
                                "@line": "945"
                            },
                            "return-value": {
                                "@transfer-ownership": "full",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "gdk/gdkwindow.c",
                                    "@line": "10237",
                                    "#text": "a pointer to the newly allocated surface. The caller\nowns the surface and should call cairo_surface_destroy() when done\nwith it.\n\nThis function always returns a valid pointer, but it will return a\npointer to a \u201cnil\u201d surface if @other is already in an error state\nor any other error occurs."
                                },
                                "type": {
                                    "@name": "cairo.Surface",
                                    "@c:type": "cairo_surface_t*"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "window",
                                    "@transfer-ownership": "none",
                                    "@nullable": "1",
                                    "@allow-none": "1",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "gdk/gdkwindow.c",
                                        "@line": "10201",
                                        "#text": "window to make new surface similar to, or\n  %NULL if none"
                                    },
                                    "type": {
                                        "@name": "Window",
                                        "@c:type": "GdkWindow*"
                                    }
                                },
                                "parameter": [
                                    {
                                        "@name": "format",
                                        "@transfer-ownership": "none",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "gdk/gdkwindow.c",
                                            "@line": "10203",
                                            "#text": "the format for the new surface"
                                        },
                                        "type": {
                                            "@name": "cairo.Format",
                                            "@c:type": "cairo_format_t"
                                        }
                                    },
                                    {
                                        "@name": "width",
                                        "@transfer-ownership": "none",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "gdk/gdkwindow.c",
                                            "@line": "10204",
                                            "#text": "width of the new surface"
                                        },
                                        "type": {
                                            "@name": "gint",
                                            "@c:type": "int"
                                        }
                                    },
                                    {
                                        "@name": "height",
                                        "@transfer-ownership": "none",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "gdk/gdkwindow.c",
                                            "@line": "10205",
                                            "#text": "height of the new surface"
                                        },
                                        "type": {
                                            "@name": "gint",
                                            "@c:type": "int"
                                        }
                                    },
                                    {
                                        "@name": "scale",
                                        "@transfer-ownership": "none",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "gdk/gdkwindow.c",
                                            "@line": "10206",
                                            "#text": "the scale of the new surface, or 0 to use same as @window"
                                        },
                                        "type": {
                                            "@name": "gint",
                                            "@c:type": "int"
                                        }
                                    }
                                ]
                            }
                        },
                        {
                            "@name": "create_similar_surface",
                            "@c:identifier": "gdk_window_create_similar_surface",
                            "@version": "2.22",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkwindow.c",
                                "@line": "10123",
                                "#text": "Create a new surface that is as compatible as possible with the\ngiven @window. For example the new surface will have the same\nfallback resolution and font options as @window. Generally, the new\nsurface will also use the same backend as @window, unless that is\nnot possible for some reason. The type of the returned surface may\nbe examined with cairo_surface_get_type().\n\nInitially the surface contents are all 0 (transparent if contents\nhave transparency, black otherwise.)"
                            },
                            "source-position": {
                                "@filename": "gdk/gdkwindow.h",
                                "@line": "939"
                            },
                            "return-value": {
                                "@transfer-ownership": "full",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "gdk/gdkwindow.c",
                                    "@line": "10140",
                                    "#text": "a pointer to the newly allocated surface. The caller\nowns the surface and should call cairo_surface_destroy() when done\nwith it.\n\nThis function always returns a valid pointer, but it will return a\npointer to a \u201cnil\u201d surface if @other is already in an error state\nor any other error occurs."
                                },
                                "type": {
                                    "@name": "cairo.Surface",
                                    "@c:type": "cairo_surface_t*"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "window",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "gdk/gdkwindow.c",
                                        "@line": "10125",
                                        "#text": "window to make new surface similar to"
                                    },
                                    "type": {
                                        "@name": "Window",
                                        "@c:type": "GdkWindow*"
                                    }
                                },
                                "parameter": [
                                    {
                                        "@name": "content",
                                        "@transfer-ownership": "none",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "gdk/gdkwindow.c",
                                            "@line": "10126",
                                            "#text": "the content for the new surface"
                                        },
                                        "type": {
                                            "@name": "cairo.Content",
                                            "@c:type": "cairo_content_t"
                                        }
                                    },
                                    {
                                        "@name": "width",
                                        "@transfer-ownership": "none",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "gdk/gdkwindow.c",
                                            "@line": "10127",
                                            "#text": "width of the new surface"
                                        },
                                        "type": {
                                            "@name": "gint",
                                            "@c:type": "int"
                                        }
                                    },
                                    {
                                        "@name": "height",
                                        "@transfer-ownership": "none",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "gdk/gdkwindow.c",
                                            "@line": "10128",
                                            "#text": "height of the new surface"
                                        },
                                        "type": {
                                            "@name": "gint",
                                            "@c:type": "int"
                                        }
                                    }
                                ]
                            }
                        },
                        {
                            "@name": "deiconify",
                            "@c:identifier": "gdk_window_deiconify",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkwindow.c",
                                "@line": "10767",
                                "#text": "Attempt to deiconify (unminimize) @window. On X11 the window manager may\nchoose to ignore the request to deiconify. When using GTK+,\nuse gtk_window_deiconify() instead of the #GdkWindow variant. Or better yet,\nyou probably want to use gtk_window_present_with_time(), which raises the window, focuses it,\nunminimizes it, and puts it on the current desktop."
                            },
                            "source-position": {
                                "@filename": "gdk/gdkwindow.h",
                                "@line": "956"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "type": {
                                    "@name": "none",
                                    "@c:type": "void"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "window",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "gdk/gdkwindow.c",
                                        "@line": "10769",
                                        "#text": "a toplevel #GdkWindow"
                                    },
                                    "type": {
                                        "@name": "Window",
                                        "@c:type": "GdkWindow*"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "destroy",
                            "@c:identifier": "gdk_window_destroy",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkwindow.c",
                                "@line": "2201",
                                "#text": "Destroys the window system resources associated with @window and decrements @window's\nreference count. The window system resources for all children of @window are also\ndestroyed, but the children\u2019s reference counts are not decremented.\n\nNote that a window will not be destroyed automatically when its reference count\nreaches zero. You must call this function yourself before that happens."
                            },
                            "source-position": {
                                "@filename": "gdk/gdkwindow.h",
                                "@line": "514"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "type": {
                                    "@name": "none",
                                    "@c:type": "void"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "window",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "gdk/gdkwindow.c",
                                        "@line": "2203",
                                        "#text": "a #GdkWindow"
                                    },
                                    "type": {
                                        "@name": "Window",
                                        "@c:type": "GdkWindow*"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "destroy_notify",
                            "@c:identifier": "gdk_window_destroy_notify",
                            "source-position": {
                                "@filename": "gdk/gdkprivate.h",
                                "@line": "35"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "type": {
                                    "@name": "none",
                                    "@c:type": "void"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "window",
                                    "@transfer-ownership": "none",
                                    "type": {
                                        "@name": "Window",
                                        "@c:type": "GdkWindow*"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "enable_synchronized_configure",
                            "@c:identifier": "gdk_window_enable_synchronized_configure",
                            "@version": "2.6",
                            "@deprecated": "1",
                            "@deprecated-version": "3.8",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkwindow.c",
                                "@line": "11280",
                                "#text": "Does nothing, present only for compatiblity."
                            },
                            "doc-deprecated": {
                                "@xml:space": "preserve",
                                "#text": "this function is no longer needed"
                            },
                            "source-position": {
                                "@filename": "gdk/gdkwindow.h",
                                "@line": "1085"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "type": {
                                    "@name": "none",
                                    "@c:type": "void"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "window",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "gdk/gdkwindow.c",
                                        "@line": "11282",
                                        "#text": "a toplevel #GdkWindow"
                                    },
                                    "type": {
                                        "@name": "Window",
                                        "@c:type": "GdkWindow*"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "end_draw_frame",
                            "@c:identifier": "gdk_window_end_draw_frame",
                            "@version": "3.22",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkwindow.c",
                                "@line": "3278",
                                "#text": "Indicates that the drawing of the contents of @window started with\ngdk_window_begin_frame() has been completed.\n\nThis function will take care of destroying the #GdkDrawingContext.\n\nIt is an error to call this function without a matching\ngdk_window_begin_frame() first."
                            },
                            "source-position": {
                                "@filename": "gdk/gdkwindow.h",
                                "@line": "765"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "type": {
                                    "@name": "none",
                                    "@c:type": "void"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "window",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "gdk/gdkwindow.c",
                                        "@line": "3280",
                                        "#text": "a #GdkWindow"
                                    },
                                    "type": {
                                        "@name": "Window",
                                        "@c:type": "GdkWindow*"
                                    }
                                },
                                "parameter": {
                                    "@name": "context",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "gdk/gdkwindow.c",
                                        "@line": "3281",
                                        "#text": "the #GdkDrawingContext created by gdk_window_begin_draw_frame()"
                                    },
                                    "type": {
                                        "@name": "DrawingContext",
                                        "@c:type": "GdkDrawingContext*"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "end_paint",
                            "@c:identifier": "gdk_window_end_paint",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkwindow.c",
                                "@line": "3438",
                                "#text": "Indicates that the backing store created by the most recent call\nto gdk_window_begin_paint_region() should be copied onscreen and\ndeleted, leaving the next-most-recent backing store or no backing\nstore at all as the active paint region. See\ngdk_window_begin_paint_region() for full details.\n\nIt is an error to call this function without a matching\ngdk_window_begin_paint_region() first."
                            },
                            "source-position": {
                                "@filename": "gdk/gdkwindow.h",
                                "@line": "759"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "type": {
                                    "@name": "none",
                                    "@c:type": "void"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "window",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "gdk/gdkwindow.c",
                                        "@line": "3440",
                                        "#text": "a #GdkWindow"
                                    },
                                    "type": {
                                        "@name": "Window",
                                        "@c:type": "GdkWindow*"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "ensure_native",
                            "@c:identifier": "gdk_window_ensure_native",
                            "@version": "2.18",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkwindow.c",
                                "@line": "1819",
                                "#text": "Tries to ensure that there is a window-system native window for this\nGdkWindow. This may fail in some situations, returning %FALSE.\n\nOffscreen window and children of them can never have native windows.\n\nSome backends may not support native child windows."
                            },
                            "source-position": {
                                "@filename": "gdk/gdkwindow.h",
                                "@line": "612"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "gdk/gdkwindow.c",
                                    "@line": "1830",
                                    "#text": "%TRUE if the window has a native window, %FALSE otherwise"
                                },
                                "type": {
                                    "@name": "gboolean",
                                    "@c:type": "gboolean"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "window",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "gdk/gdkwindow.c",
                                        "@line": "1821",
                                        "#text": "a #GdkWindow"
                                    },
                                    "type": {
                                        "@name": "Window",
                                        "@c:type": "GdkWindow*"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "flush",
                            "@c:identifier": "gdk_window_flush",
                            "@version": "2.18",
                            "@deprecated": "1",
                            "@deprecated-version": "3.14",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkwindow.c",
                                "@line": "3459",
                                "#text": "This function does nothing."
                            },
                            "source-position": {
                                "@filename": "gdk/gdkwindow.h",
                                "@line": "769"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "type": {
                                    "@name": "none",
                                    "@c:type": "void"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "window",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "gdk/gdkwindow.c",
                                        "@line": "3461",
                                        "#text": "a #GdkWindow"
                                    },
                                    "type": {
                                        "@name": "Window",
                                        "@c:type": "GdkWindow*"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "focus",
                            "@c:identifier": "gdk_window_focus",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkwindow.c",
                                "@line": "10292",
                                "#text": "Sets keyboard focus to @window. In most cases, gtk_window_present_with_time()\nshould be used on a #GtkWindow, rather than calling this function."
                            },
                            "source-position": {
                                "@filename": "gdk/gdkwindow.h",
                                "@line": "576"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "type": {
                                    "@name": "none",
                                    "@c:type": "void"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "window",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "gdk/gdkwindow.c",
                                        "@line": "10294",
                                        "#text": "a #GdkWindow"
                                    },
                                    "type": {
                                        "@name": "Window",
                                        "@c:type": "GdkWindow*"
                                    }
                                },
                                "parameter": {
                                    "@name": "timestamp",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "gdk/gdkwindow.c",
                                        "@line": "10295",
                                        "#text": "timestamp of the event triggering the window focus"
                                    },
                                    "type": {
                                        "@name": "guint32",
                                        "@c:type": "guint32"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "freeze_toplevel_updates_libgtk_only",
                            "@c:identifier": "gdk_window_freeze_toplevel_updates_libgtk_only",
                            "@deprecated": "1",
                            "@deprecated-version": "3.16",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkwindow.c",
                                "@line": "4751",
                                "#text": "Temporarily freezes a window and all its descendants such that it won't\nreceive expose events.  The window will begin receiving expose events\nagain when gdk_window_thaw_toplevel_updates_libgtk_only() is called. If\ngdk_window_freeze_toplevel_updates_libgtk_only()\nhas been called more than once,\ngdk_window_thaw_toplevel_updates_libgtk_only() must be called\nan equal number of times to begin processing exposes.\n\nThis function is not part of the GDK public API and is only\nfor use by GTK+."
                            },
                            "doc-deprecated": {
                                "@xml:space": "preserve",
                                "#text": "This symbol was never meant to be used outside of GTK+"
                            },
                            "source-position": {
                                "@filename": "gdk/gdkwindow.h",
                                "@line": "1062"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "type": {
                                    "@name": "none",
                                    "@c:type": "void"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "window",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "gdk/gdkwindow.c",
                                        "@line": "4753",
                                        "#text": "a #GdkWindow"
                                    },
                                    "type": {
                                        "@name": "Window",
                                        "@c:type": "GdkWindow*"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "freeze_updates",
                            "@c:identifier": "gdk_window_freeze_updates",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkwindow.c",
                                "@line": "4709",
                                "#text": "Temporarily freezes a window such that it won\u2019t receive expose\nevents.  The window will begin receiving expose events again when\ngdk_window_thaw_updates() is called. If gdk_window_freeze_updates()\nhas been called more than once, gdk_window_thaw_updates() must be called\nan equal number of times to begin processing exposes."
                            },
                            "source-position": {
                                "@filename": "gdk/gdkwindow.h",
                                "@line": "1057"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "type": {
                                    "@name": "none",
                                    "@c:type": "void"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "window",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "gdk/gdkwindow.c",
                                        "@line": "4711",
                                        "#text": "a #GdkWindow"
                                    },
                                    "type": {
                                        "@name": "Window",
                                        "@c:type": "GdkWindow*"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "fullscreen",
                            "@c:identifier": "gdk_window_fullscreen",
                            "@version": "2.2",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkwindow.c",
                                "@line": "10865",
                                "#text": "Moves the window into fullscreen mode. This means the\nwindow covers the entire screen and is above any panels\nor task bars.\n\nIf the window was already fullscreen, then this function does nothing.\n\nOn X11, asks the window manager to put @window in a fullscreen\nstate, if the window manager supports this operation. Not all\nwindow managers support this, and some deliberately ignore it or\ndon\u2019t have a concept of \u201cfullscreen\u201d; so you can\u2019t rely on the\nfullscreenification actually happening. But it will happen with\nmost standard window managers, and GDK makes a best effort to get\nit to happen."
                            },
                            "source-position": {
                                "@filename": "gdk/gdkwindow.h",
                                "@line": "966"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "type": {
                                    "@name": "none",
                                    "@c:type": "void"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "window",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "gdk/gdkwindow.c",
                                        "@line": "10867",
                                        "#text": "a toplevel #GdkWindow"
                                    },
                                    "type": {
                                        "@name": "Window",
                                        "@c:type": "GdkWindow*"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "fullscreen_on_monitor",
                            "@c:identifier": "gdk_window_fullscreen_on_monitor",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkwindow.c",
                                "@line": "10891",
                                "#text": "Moves the window into fullscreen mode on the given monitor. This means\nthe window covers the entire screen and is above any panels or task bars.\n\nIf the window was already fullscreen, then this function does nothing."
                            },
                            "doc-version": {
                                "@xml:space": "preserve",
                                "#text": "UNRELEASED"
                            },
                            "source-position": {
                                "@filename": "gdk/gdkwindow.h",
                                "@line": "968"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "type": {
                                    "@name": "none",
                                    "@c:type": "void"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "window",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "gdk/gdkwindow.c",
                                        "@line": "10893",
                                        "#text": "a toplevel #GdkWindow"
                                    },
                                    "type": {
                                        "@name": "Window",
                                        "@c:type": "GdkWindow*"
                                    }
                                },
                                "parameter": {
                                    "@name": "monitor",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "gdk/gdkwindow.c",
                                        "@line": "10894",
                                        "#text": "Which monitor to display fullscreen on."
                                    },
                                    "type": {
                                        "@name": "gint",
                                        "@c:type": "gint"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "geometry_changed",
                            "@c:identifier": "gdk_window_geometry_changed",
                            "@version": "2.18",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkwindow.c",
                                "@line": "8819",
                                "#text": "This function informs GDK that the geometry of an embedded\noffscreen window has changed. This is necessary for GDK to keep\ntrack of which offscreen window the pointer is in."
                            },
                            "source-position": {
                                "@filename": "gdk/gdkwindow.h",
                                "@line": "1102"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "type": {
                                    "@name": "none",
                                    "@c:type": "void"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "window",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "gdk/gdkwindow.c",
                                        "@line": "8821",
                                        "#text": "an embedded offscreen #GdkWindow"
                                    },
                                    "type": {
                                        "@name": "Window",
                                        "@c:type": "GdkWindow*"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "get_accept_focus",
                            "@c:identifier": "gdk_window_get_accept_focus",
                            "@version": "2.22",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkwindow.c",
                                "@line": "7480",
                                "#text": "Determines whether or not the desktop environment shuld be hinted that\nthe window does not want to receive input focus."
                            },
                            "source-position": {
                                "@filename": "gdk/gdkwindow.h",
                                "@line": "585"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "gdk/gdkwindow.c",
                                    "@line": "7487",
                                    "#text": "whether or not the window should receive input focus."
                                },
                                "type": {
                                    "@name": "gboolean",
                                    "@c:type": "gboolean"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "window",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "gdk/gdkwindow.c",
                                        "@line": "7482",
                                        "#text": "a toplevel #GdkWindow."
                                    },
                                    "type": {
                                        "@name": "Window",
                                        "@c:type": "GdkWindow*"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "get_background_pattern",
                            "@c:identifier": "gdk_window_get_background_pattern",
                            "@version": "2.22",
                            "@deprecated": "1",
                            "@deprecated-version": "3.22",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkwindow.c",
                                "@line": "6500",
                                "#text": "Gets the pattern used to clear the background on @window."
                            },
                            "doc-deprecated": {
                                "@xml:space": "preserve",
                                "#text": "Don't use this function"
                            },
                            "source-position": {
                                "@filename": "gdk/gdkwindow.h",
                                "@line": "793"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "@nullable": "1",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "gdk/gdkwindow.c",
                                    "@line": "6506",
                                    "#text": "The pattern to use for the\nbackground or %NULL if there is no background."
                                },
                                "type": {
                                    "@name": "cairo.Pattern",
                                    "@c:type": "cairo_pattern_t*"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "window",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "gdk/gdkwindow.c",
                                        "@line": "6502",
                                        "#text": "a window"
                                    },
                                    "type": {
                                        "@name": "Window",
                                        "@c:type": "GdkWindow*"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "get_children",
                            "@c:identifier": "gdk_window_get_children",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkwindow.c",
                                "@line": "2530",
                                "#text": "Gets the list of children of @window known to GDK.\nThis function only returns children created via GDK,\nso for example it\u2019s useless when used with the root window;\nit only returns windows an application created itself.\n\nThe returned list must be freed, but the elements in the\nlist need not be."
                            },
                            "source-position": {
                                "@filename": "gdk/gdkwindow.h",
                                "@line": "888"
                            },
                            "return-value": {
                                "@transfer-ownership": "container",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "gdk/gdkwindow.c",
                                    "@line": "2542",
                                    "#text": "list of child windows inside @window"
                                },
                                "type": {
                                    "@name": "GLib.List",
                                    "@c:type": "GList*",
                                    "type": {
                                        "@name": "Window"
                                    }
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "window",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "gdk/gdkwindow.c",
                                        "@line": "2532",
                                        "#text": "a #GdkWindow"
                                    },
                                    "type": {
                                        "@name": "Window",
                                        "@c:type": "GdkWindow*"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "get_children_with_user_data",
                            "@c:identifier": "gdk_window_get_children_with_user_data",
                            "@version": "3.10",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkwindow.c",
                                "@line": "2578",
                                "#text": "Gets the list of children of @window known to GDK with a\nparticular @user_data set on it.\n\nThe returned list must be freed, but the elements in the\nlist need not be.\n\nThe list is returned in (relative) stacking order, i.e. the\nlowest window is first."
                            },
                            "source-position": {
                                "@filename": "gdk/gdkwindow.h",
                                "@line": "892"
                            },
                            "return-value": {
                                "@transfer-ownership": "container",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "gdk/gdkwindow.c",
                                    "@line": "2592",
                                    "#text": "list of child windows inside @window"
                                },
                                "type": {
                                    "@name": "GLib.List",
                                    "@c:type": "GList*",
                                    "type": {
                                        "@name": "Window"
                                    }
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "window",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "gdk/gdkwindow.c",
                                        "@line": "2580",
                                        "#text": "a #GdkWindow"
                                    },
                                    "type": {
                                        "@name": "Window",
                                        "@c:type": "GdkWindow*"
                                    }
                                },
                                "parameter": {
                                    "@name": "user_data",
                                    "@transfer-ownership": "none",
                                    "@nullable": "1",
                                    "@allow-none": "1",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "gdk/gdkwindow.c",
                                        "@line": "2581",
                                        "#text": "user data to look for"
                                    },
                                    "type": {
                                        "@name": "gpointer",
                                        "@c:type": "gpointer"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "get_clip_region",
                            "@c:identifier": "gdk_window_get_clip_region",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkwindow.c",
                                "@line": "3474",
                                "#text": "Computes the region of a window that potentially can be written\nto by drawing primitives. This region may not take into account\nother factors such as if the window is obscured by other windows,\nbut no area outside of this region will be affected by drawing\nprimitives."
                            },
                            "source-position": {
                                "@filename": "gdk/gdkwindow.h",
                                "@line": "744"
                            },
                            "return-value": {
                                "@transfer-ownership": "full",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "gdk/gdkwindow.c",
                                    "@line": "3484",
                                    "#text": "a #cairo_region_t. This must be freed with cairo_region_destroy()\n         when you are done."
                                },
                                "type": {
                                    "@name": "cairo.Region",
                                    "@c:type": "cairo_region_t*"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "window",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "gdk/gdkwindow.c",
                                        "@line": "3476",
                                        "#text": "a #GdkWindow"
                                    },
                                    "type": {
                                        "@name": "Window",
                                        "@c:type": "GdkWindow*"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "get_composited",
                            "@c:identifier": "gdk_window_get_composited",
                            "@version": "2.22",
                            "@deprecated": "1",
                            "@deprecated-version": "3.16",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkwindow.c",
                                "@line": "7365",
                                "#text": "Determines whether @window is composited.\n\nSee gdk_window_set_composited()."
                            },
                            "doc-deprecated": {
                                "@xml:space": "preserve",
                                "#text": "Compositing is an outdated technology that\n  only ever worked on X11."
                            },
                            "source-position": {
                                "@filename": "gdk/gdkwindow.h",
                                "@line": "635"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "gdk/gdkwindow.c",
                                    "@line": "7373",
                                    "#text": "%TRUE if the window is composited."
                                },
                                "type": {
                                    "@name": "gboolean",
                                    "@c:type": "gboolean"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "window",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "gdk/gdkwindow.c",
                                        "@line": "7367",
                                        "#text": "a #GdkWindow"
                                    },
                                    "type": {
                                        "@name": "Window",
                                        "@c:type": "GdkWindow*"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "get_cursor",
                            "@c:identifier": "gdk_window_get_cursor",
                            "@glib:get-property": "cursor",
                            "@version": "2.18",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkwindow.c",
                                "@line": "6548",
                                "#text": "Retrieves a #GdkCursor pointer for the cursor currently set on the\nspecified #GdkWindow, or %NULL.  If the return value is %NULL then\nthere is no custom cursor set on the specified window, and it is\nusing the cursor for its parent window."
                            },
                            "source-position": {
                                "@filename": "gdk/gdkwindow.h",
                                "@line": "799"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "@nullable": "1",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "gdk/gdkwindow.c",
                                    "@line": "6557",
                                    "#text": "a #GdkCursor, or %NULL. The\n  returned object is owned by the #GdkWindow and should not be\n  unreferenced directly. Use gdk_window_set_cursor() to unset the\n  cursor of the window"
                                },
                                "type": {
                                    "@name": "Cursor",
                                    "@c:type": "GdkCursor*"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "window",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "gdk/gdkwindow.c",
                                        "@line": "6550",
                                        "#text": "a #GdkWindow"
                                    },
                                    "type": {
                                        "@name": "Window",
                                        "@c:type": "GdkWindow*"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "get_decorations",
                            "@c:identifier": "gdk_window_get_decorations",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkwindow.c",
                                "@line": "11115",
                                "#text": "Returns the decorations set on the GdkWindow with\ngdk_window_set_decorations()."
                            },
                            "source-position": {
                                "@filename": "gdk/gdkwindow.h",
                                "@line": "931"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "gdk/gdkwindow.c",
                                    "@line": "11123",
                                    "#text": "%TRUE if the window has decorations set, %FALSE otherwise."
                                },
                                "type": {
                                    "@name": "gboolean",
                                    "@c:type": "gboolean"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "window",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "gdk/gdkwindow.c",
                                        "@line": "11117",
                                        "#text": "The toplevel #GdkWindow to get the decorations from"
                                    },
                                    "type": {
                                        "@name": "Window",
                                        "@c:type": "GdkWindow*"
                                    }
                                },
                                "parameter": {
                                    "@name": "decorations",
                                    "@direction": "out",
                                    "@caller-allocates": "0",
                                    "@transfer-ownership": "full",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "gdk/gdkwindow.c",
                                        "@line": "11118",
                                        "#text": "The window decorations will be written here"
                                    },
                                    "type": {
                                        "@name": "WMDecoration",
                                        "@c:type": "GdkWMDecoration*"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "get_device_cursor",
                            "@c:identifier": "gdk_window_get_device_cursor",
                            "@version": "3.0",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkwindow.c",
                                "@line": "6634",
                                "#text": "Retrieves a #GdkCursor pointer for the @device currently set on the\nspecified #GdkWindow, or %NULL.  If the return value is %NULL then\nthere is no custom cursor set on the specified window, and it is\nusing the cursor for its parent window."
                            },
                            "source-position": {
                                "@filename": "gdk/gdkwindow.h",
                                "@line": "805"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "@nullable": "1",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "gdk/gdkwindow.c",
                                    "@line": "6644",
                                    "#text": "a #GdkCursor, or %NULL. The\n  returned object is owned by the #GdkWindow and should not be\n  unreferenced directly. Use gdk_window_set_cursor() to unset the\n  cursor of the window"
                                },
                                "type": {
                                    "@name": "Cursor",
                                    "@c:type": "GdkCursor*"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "window",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "gdk/gdkwindow.c",
                                        "@line": "6636",
                                        "#text": "a #GdkWindow."
                                    },
                                    "type": {
                                        "@name": "Window",
                                        "@c:type": "GdkWindow*"
                                    }
                                },
                                "parameter": {
                                    "@name": "device",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "gdk/gdkwindow.c",
                                        "@line": "6637",
                                        "#text": "a master, pointer #GdkDevice."
                                    },
                                    "type": {
                                        "@name": "Device",
                                        "@c:type": "GdkDevice*"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "get_device_events",
                            "@c:identifier": "gdk_window_get_device_events",
                            "@version": "3.0",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkwindow.c",
                                "@line": "5943",
                                "#text": "Returns the event mask for @window corresponding to an specific device."
                            },
                            "source-position": {
                                "@filename": "gdk/gdkwindow.h",
                                "@line": "905"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "gdk/gdkwindow.c",
                                    "@line": "5950",
                                    "#text": "device event mask for @window"
                                },
                                "type": {
                                    "@name": "EventMask",
                                    "@c:type": "GdkEventMask"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "window",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "gdk/gdkwindow.c",
                                        "@line": "5945",
                                        "#text": "a #GdkWindow."
                                    },
                                    "type": {
                                        "@name": "Window",
                                        "@c:type": "GdkWindow*"
                                    }
                                },
                                "parameter": {
                                    "@name": "device",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "gdk/gdkwindow.c",
                                        "@line": "5946",
                                        "#text": "a #GdkDevice."
                                    },
                                    "type": {
                                        "@name": "Device",
                                        "@c:type": "GdkDevice*"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "get_device_position",
                            "@c:identifier": "gdk_window_get_device_position",
                            "@version": "3.0",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkwindow.c",
                                "@line": "5070",
                                "#text": "Obtains the current device position and modifier state.\nThe position is given in coordinates relative to the upper left\ncorner of @window.\n\nUse gdk_window_get_device_position_double() if you need subpixel precision."
                            },
                            "source-position": {
                                "@filename": "gdk/gdkwindow.h",
                                "@line": "866"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "@nullable": "1",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "gdk/gdkwindow.c",
                                    "@line": "5084",
                                    "#text": "The window underneath @device\n(as with gdk_device_get_window_at_position()), or %NULL if the\nwindow is not known to GDK."
                                },
                                "type": {
                                    "@name": "Window",
                                    "@c:type": "GdkWindow*"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "window",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "gdk/gdkwindow.c",
                                        "@line": "5072",
                                        "#text": "a #GdkWindow."
                                    },
                                    "type": {
                                        "@name": "Window",
                                        "@c:type": "GdkWindow*"
                                    }
                                },
                                "parameter": [
                                    {
                                        "@name": "device",
                                        "@transfer-ownership": "none",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "gdk/gdkwindow.c",
                                            "@line": "5073",
                                            "#text": "pointer #GdkDevice to query to."
                                        },
                                        "type": {
                                            "@name": "Device",
                                            "@c:type": "GdkDevice*"
                                        }
                                    },
                                    {
                                        "@name": "x",
                                        "@direction": "out",
                                        "@caller-allocates": "0",
                                        "@transfer-ownership": "full",
                                        "@optional": "1",
                                        "@allow-none": "1",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "gdk/gdkwindow.c",
                                            "@line": "5074",
                                            "#text": "return location for the X coordinate of @device, or %NULL."
                                        },
                                        "type": {
                                            "@name": "gint",
                                            "@c:type": "gint*"
                                        }
                                    },
                                    {
                                        "@name": "y",
                                        "@direction": "out",
                                        "@caller-allocates": "0",
                                        "@transfer-ownership": "full",
                                        "@optional": "1",
                                        "@allow-none": "1",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "gdk/gdkwindow.c",
                                            "@line": "5075",
                                            "#text": "return location for the Y coordinate of @device, or %NULL."
                                        },
                                        "type": {
                                            "@name": "gint",
                                            "@c:type": "gint*"
                                        }
                                    },
                                    {
                                        "@name": "mask",
                                        "@direction": "out",
                                        "@caller-allocates": "0",
                                        "@transfer-ownership": "full",
                                        "@optional": "1",
                                        "@allow-none": "1",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "gdk/gdkwindow.c",
                                            "@line": "5076",
                                            "#text": "return location for the modifier mask, or %NULL."
                                        },
                                        "type": {
                                            "@name": "ModifierType",
                                            "@c:type": "GdkModifierType*"
                                        }
                                    }
                                ]
                            }
                        },
                        {
                            "@name": "get_device_position_double",
                            "@c:identifier": "gdk_window_get_device_position_double",
                            "@version": "3.10",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkwindow.c",
                                "@line": "5013",
                                "#text": "Obtains the current device position in doubles and modifier state.\nThe position is given in coordinates relative to the upper left\ncorner of @window."
                            },
                            "source-position": {
                                "@filename": "gdk/gdkwindow.h",
                                "@line": "872"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "@nullable": "1",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "gdk/gdkwindow.c",
                                    "@line": "5025",
                                    "#text": "The window underneath @device\n(as with gdk_device_get_window_at_position()), or %NULL if the\nwindow is not known to GDK."
                                },
                                "type": {
                                    "@name": "Window",
                                    "@c:type": "GdkWindow*"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "window",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "gdk/gdkwindow.c",
                                        "@line": "5015",
                                        "#text": "a #GdkWindow."
                                    },
                                    "type": {
                                        "@name": "Window",
                                        "@c:type": "GdkWindow*"
                                    }
                                },
                                "parameter": [
                                    {
                                        "@name": "device",
                                        "@transfer-ownership": "none",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "gdk/gdkwindow.c",
                                            "@line": "5016",
                                            "#text": "pointer #GdkDevice to query to."
                                        },
                                        "type": {
                                            "@name": "Device",
                                            "@c:type": "GdkDevice*"
                                        }
                                    },
                                    {
                                        "@name": "x",
                                        "@direction": "out",
                                        "@caller-allocates": "0",
                                        "@transfer-ownership": "full",
                                        "@optional": "1",
                                        "@allow-none": "1",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "gdk/gdkwindow.c",
                                            "@line": "5017",
                                            "#text": "return location for the X coordinate of @device, or %NULL."
                                        },
                                        "type": {
                                            "@name": "gdouble",
                                            "@c:type": "gdouble*"
                                        }
                                    },
                                    {
                                        "@name": "y",
                                        "@direction": "out",
                                        "@caller-allocates": "0",
                                        "@transfer-ownership": "full",
                                        "@optional": "1",
                                        "@allow-none": "1",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "gdk/gdkwindow.c",
                                            "@line": "5018",
                                            "#text": "return location for the Y coordinate of @device, or %NULL."
                                        },
                                        "type": {
                                            "@name": "gdouble",
                                            "@c:type": "gdouble*"
                                        }
                                    },
                                    {
                                        "@name": "mask",
                                        "@direction": "out",
                                        "@caller-allocates": "0",
                                        "@transfer-ownership": "full",
                                        "@optional": "1",
                                        "@allow-none": "1",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "gdk/gdkwindow.c",
                                            "@line": "5019",
                                            "#text": "return location for the modifier mask, or %NULL."
                                        },
                                        "type": {
                                            "@name": "ModifierType",
                                            "@c:type": "GdkModifierType*"
                                        }
                                    }
                                ]
                            }
                        },
                        {
                            "@name": "get_display",
                            "@c:identifier": "gdk_window_get_display",
                            "@version": "2.24",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkwindow.c",
                                "@line": "2311",
                                "#text": "Gets the #GdkDisplay associated with a #GdkWindow."
                            },
                            "source-position": {
                                "@filename": "gdk/gdkwindow.h",
                                "@line": "525"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "gdk/gdkwindow.c",
                                    "@line": "2317",
                                    "#text": "the #GdkDisplay associated with @window"
                                },
                                "type": {
                                    "@name": "Display",
                                    "@c:type": "GdkDisplay*"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "window",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "gdk/gdkwindow.c",
                                        "@line": "2313",
                                        "#text": "a #GdkWindow"
                                    },
                                    "type": {
                                        "@name": "Window",
                                        "@c:type": "GdkWindow*"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "get_drag_protocol",
                            "@c:identifier": "gdk_window_get_drag_protocol",
                            "@version": "3.0",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkwindow.c",
                                "@line": "11378",
                                "#text": "Finds out the DND protocol supported by a window."
                            },
                            "source-position": {
                                "@filename": "gdk/gdkwindow.h",
                                "@line": "992"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "gdk/gdkwindow.c",
                                    "@line": "11387",
                                    "#text": "the supported DND protocol."
                                },
                                "type": {
                                    "@name": "DragProtocol",
                                    "@c:type": "GdkDragProtocol"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "window",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "gdk/gdkwindow.c",
                                        "@line": "11380",
                                        "#text": "the destination window"
                                    },
                                    "type": {
                                        "@name": "Window",
                                        "@c:type": "GdkWindow*"
                                    }
                                },
                                "parameter": {
                                    "@name": "target",
                                    "@direction": "out",
                                    "@caller-allocates": "0",
                                    "@transfer-ownership": "full",
                                    "@optional": "1",
                                    "@allow-none": "1",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "gdk/gdkwindow.c",
                                        "@line": "11381",
                                        "#text": "location of the window\n   where the drop should happen. This may be @window or a proxy window,\n   or %NULL if @window does not support Drag and Drop."
                                    },
                                    "type": {
                                        "@name": "Window",
                                        "@c:type": "GdkWindow**"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "get_effective_parent",
                            "@c:identifier": "gdk_window_get_effective_parent",
                            "@version": "2.22",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkwindow.c",
                                "@line": "2441",
                                "#text": "Obtains the parent of @window, as known to GDK. Works like\ngdk_window_get_parent() for normal windows, but returns the\nwindow\u2019s embedder for offscreen windows.\n\nSee also: gdk_offscreen_window_get_embedder()"
                            },
                            "source-position": {
                                "@filename": "gdk/gdkwindow.h",
                                "@line": "883"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "gdk/gdkwindow.c",
                                    "@line": "2451",
                                    "#text": "effective parent of @window"
                                },
                                "type": {
                                    "@name": "Window",
                                    "@c:type": "GdkWindow*"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "window",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "gdk/gdkwindow.c",
                                        "@line": "2443",
                                        "#text": "a #GdkWindow"
                                    },
                                    "type": {
                                        "@name": "Window",
                                        "@c:type": "GdkWindow*"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "get_effective_toplevel",
                            "@c:identifier": "gdk_window_get_effective_toplevel",
                            "@version": "2.22",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkwindow.c",
                                "@line": "2501",
                                "#text": "Gets the toplevel window that\u2019s an ancestor of @window.\n\nWorks like gdk_window_get_toplevel(), but treats an offscreen window's\nembedder as its parent, using gdk_window_get_effective_parent().\n\nSee also: gdk_offscreen_window_get_embedder()"
                            },
                            "source-position": {
                                "@filename": "gdk/gdkwindow.h",
                                "@line": "885"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "gdk/gdkwindow.c",
                                    "@line": "2512",
                                    "#text": "the effective toplevel window containing @window"
                                },
                                "type": {
                                    "@name": "Window",
                                    "@c:type": "GdkWindow*"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "window",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "gdk/gdkwindow.c",
                                        "@line": "2503",
                                        "#text": "a #GdkWindow"
                                    },
                                    "type": {
                                        "@name": "Window",
                                        "@c:type": "GdkWindow*"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "get_event_compression",
                            "@c:identifier": "gdk_window_get_event_compression",
                            "@version": "3.12",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkwindow.c",
                                "@line": "10684",
                                "#text": "Get the current event compression setting for this window."
                            },
                            "source-position": {
                                "@filename": "gdk/gdkwindow.h",
                                "@line": "1123"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "gdk/gdkwindow.c",
                                    "@line": "10690",
                                    "#text": "%TRUE if motion events will be compressed"
                                },
                                "type": {
                                    "@name": "gboolean",
                                    "@c:type": "gboolean"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "window",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "gdk/gdkwindow.c",
                                        "@line": "10686",
                                        "#text": "a #GdkWindow"
                                    },
                                    "type": {
                                        "@name": "Window",
                                        "@c:type": "GdkWindow*"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "get_events",
                            "@c:identifier": "gdk_window_get_events",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkwindow.c",
                                "@line": "5854",
                                "#text": "Gets the event mask for @window for all master input devices. See\ngdk_window_set_events()."
                            },
                            "source-position": {
                                "@filename": "gdk/gdkwindow.h",
                                "@line": "896"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "gdk/gdkwindow.c",
                                    "@line": "5861",
                                    "#text": "event mask for @window"
                                },
                                "type": {
                                    "@name": "EventMask",
                                    "@c:type": "GdkEventMask"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "window",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "gdk/gdkwindow.c",
                                        "@line": "5856",
                                        "#text": "a #GdkWindow"
                                    },
                                    "type": {
                                        "@name": "Window",
                                        "@c:type": "GdkWindow*"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "get_focus_on_map",
                            "@c:identifier": "gdk_window_get_focus_on_map",
                            "@version": "2.22",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkwindow.c",
                                "@line": "7499",
                                "#text": "Determines whether or not the desktop environment should be hinted that the\nwindow does not want to receive input focus when it is mapped."
                            },
                            "source-position": {
                                "@filename": "gdk/gdkwindow.h",
                                "@line": "590"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "gdk/gdkwindow.c",
                                    "@line": "7506",
                                    "#text": "whether or not the window wants to receive input focus when\nit is mapped."
                                },
                                "type": {
                                    "@name": "gboolean",
                                    "@c:type": "gboolean"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "window",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "gdk/gdkwindow.c",
                                        "@line": "7501",
                                        "#text": "a toplevel #GdkWindow."
                                    },
                                    "type": {
                                        "@name": "Window",
                                        "@c:type": "GdkWindow*"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "get_frame_clock",
                            "@c:identifier": "gdk_window_get_frame_clock",
                            "@version": "3.8",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkwindow.c",
                                "@line": "11787",
                                "#text": "Gets the frame clock for the window. The frame clock for a window\nnever changes unless the window is reparented to a new toplevel\nwindow."
                            },
                            "source-position": {
                                "@filename": "gdk/gdkwindow.h",
                                "@line": "1113"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "gdk/gdkwindow.c",
                                    "@line": "11796",
                                    "#text": "the frame clock"
                                },
                                "type": {
                                    "@name": "FrameClock",
                                    "@c:type": "GdkFrameClock*"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "window",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "gdk/gdkwindow.c",
                                        "@line": "11789",
                                        "#text": "window to get frame clock for"
                                    },
                                    "type": {
                                        "@name": "Window",
                                        "@c:type": "GdkWindow*"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "get_frame_extents",
                            "@c:identifier": "gdk_window_get_frame_extents",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkwindow.c",
                                "@line": "10576",
                                "#text": "Obtains the bounding box of the window, including window manager\ntitlebar/borders if any. The frame position is given in root window\ncoordinates. To get the position of the window itself (rather than\nthe frame) in root window coordinates, use gdk_window_get_origin()."
                            },
                            "source-position": {
                                "@filename": "gdk/gdkwindow.h",
                                "@line": "852"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "type": {
                                    "@name": "none",
                                    "@c:type": "void"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "window",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "gdk/gdkwindow.c",
                                        "@line": "10578",
                                        "#text": "a toplevel #GdkWindow"
                                    },
                                    "type": {
                                        "@name": "Window",
                                        "@c:type": "GdkWindow*"
                                    }
                                },
                                "parameter": {
                                    "@name": "rect",
                                    "@direction": "out",
                                    "@caller-allocates": "1",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "gdk/gdkwindow.c",
                                        "@line": "10579",
                                        "#text": "rectangle to fill with bounding box of the window frame"
                                    },
                                    "type": {
                                        "@name": "Rectangle",
                                        "@c:type": "GdkRectangle*"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "get_fullscreen_mode",
                            "@c:identifier": "gdk_window_get_fullscreen_mode",
                            "@version": "3.8",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkwindow.c",
                                "@line": "10960",
                                "#text": "Obtains the #GdkFullscreenMode of the @window."
                            },
                            "source-position": {
                                "@filename": "gdk/gdkwindow.h",
                                "@line": "975"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "gdk/gdkwindow.c",
                                    "@line": "10966",
                                    "#text": "The #GdkFullscreenMode applied to the window when fullscreen."
                                },
                                "type": {
                                    "@name": "FullscreenMode",
                                    "@c:type": "GdkFullscreenMode"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "window",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "gdk/gdkwindow.c",
                                        "@line": "10962",
                                        "#text": "a toplevel #GdkWindow"
                                    },
                                    "type": {
                                        "@name": "Window",
                                        "@c:type": "GdkWindow*"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "get_geometry",
                            "@c:identifier": "gdk_window_get_geometry",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkwindow.c",
                                "@line": "6696",
                                "#text": "Any of the return location arguments to this function may be %NULL,\nif you aren\u2019t interested in getting the value of that field.\n\nThe X and Y coordinates returned are relative to the parent window\nof @window, which for toplevels usually means relative to the\nwindow decorations (titlebar, etc.) rather than relative to the\nroot window (screen-size background window).\n\nOn the X11 platform, the geometry is obtained from the X server,\nso reflects the latest position of @window; this may be out-of-sync\nwith the position of @window delivered in the most-recently-processed\n#GdkEventConfigure. gdk_window_get_position() in contrast gets the\nposition from the most recent configure event.\n\nNote: If @window is not a toplevel, it is much better\nto call gdk_window_get_position(), gdk_window_get_width() and\ngdk_window_get_height() instead, because it avoids the roundtrip to\nthe X server and because these functions support the full 32-bit\ncoordinate space, whereas gdk_window_get_geometry() is restricted to\nthe 16-bit coordinates of X11."
                            },
                            "source-position": {
                                "@filename": "gdk/gdkwindow.h",
                                "@line": "811"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "type": {
                                    "@name": "none",
                                    "@c:type": "void"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "window",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "gdk/gdkwindow.c",
                                        "@line": "6698",
                                        "#text": "a #GdkWindow"
                                    },
                                    "type": {
                                        "@name": "Window",
                                        "@c:type": "GdkWindow*"
                                    }
                                },
                                "parameter": [
                                    {
                                        "@name": "x",
                                        "@direction": "out",
                                        "@caller-allocates": "0",
                                        "@transfer-ownership": "full",
                                        "@optional": "1",
                                        "@allow-none": "1",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "gdk/gdkwindow.c",
                                            "@line": "6699",
                                            "#text": "return location for X coordinate of window (relative to its parent)"
                                        },
                                        "type": {
                                            "@name": "gint",
                                            "@c:type": "gint*"
                                        }
                                    },
                                    {
                                        "@name": "y",
                                        "@direction": "out",
                                        "@caller-allocates": "0",
                                        "@transfer-ownership": "full",
                                        "@optional": "1",
                                        "@allow-none": "1",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "gdk/gdkwindow.c",
                                            "@line": "6700",
                                            "#text": "return location for Y coordinate of window (relative to its parent)"
                                        },
                                        "type": {
                                            "@name": "gint",
                                            "@c:type": "gint*"
                                        }
                                    },
                                    {
                                        "@name": "width",
                                        "@direction": "out",
                                        "@caller-allocates": "0",
                                        "@transfer-ownership": "full",
                                        "@optional": "1",
                                        "@allow-none": "1",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "gdk/gdkwindow.c",
                                            "@line": "6701",
                                            "#text": "return location for width of window"
                                        },
                                        "type": {
                                            "@name": "gint",
                                            "@c:type": "gint*"
                                        }
                                    },
                                    {
                                        "@name": "height",
                                        "@direction": "out",
                                        "@caller-allocates": "0",
                                        "@transfer-ownership": "full",
                                        "@optional": "1",
                                        "@allow-none": "1",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "gdk/gdkwindow.c",
                                            "@line": "6702",
                                            "#text": "return location for height of window"
                                        },
                                        "type": {
                                            "@name": "gint",
                                            "@c:type": "gint*"
                                        }
                                    }
                                ]
                            }
                        },
                        {
                            "@name": "get_group",
                            "@c:identifier": "gdk_window_get_group",
                            "@version": "2.4",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkwindow.c",
                                "@line": "11048",
                                "#text": "Returns the group leader window for @window. See gdk_window_set_group()."
                            },
                            "source-position": {
                                "@filename": "gdk/gdkwindow.h",
                                "@line": "926"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "gdk/gdkwindow.c",
                                    "@line": "11054",
                                    "#text": "the group leader window for @window"
                                },
                                "type": {
                                    "@name": "Window",
                                    "@c:type": "GdkWindow*"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "window",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "gdk/gdkwindow.c",
                                        "@line": "11050",
                                        "#text": "a toplevel #GdkWindow"
                                    },
                                    "type": {
                                        "@name": "Window",
                                        "@c:type": "GdkWindow*"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "get_height",
                            "@c:identifier": "gdk_window_get_height",
                            "@version": "2.24",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkwindow.c",
                                "@line": "6794",
                                "#text": "Returns the height of the given @window.\n\nOn the X11 platform the returned size is the size reported in the\nmost-recently-processed configure event, rather than the current\nsize on the X server."
                            },
                            "source-position": {
                                "@filename": "gdk/gdkwindow.h",
                                "@line": "819"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "gdk/gdkwindow.c",
                                    "@line": "6804",
                                    "#text": "The height of @window"
                                },
                                "type": {
                                    "@name": "gint",
                                    "@c:type": "int"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "window",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "gdk/gdkwindow.c",
                                        "@line": "6796",
                                        "#text": "a #GdkWindow"
                                    },
                                    "type": {
                                        "@name": "Window",
                                        "@c:type": "GdkWindow*"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "get_modal_hint",
                            "@c:identifier": "gdk_window_get_modal_hint",
                            "@version": "2.22",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkwindow.c",
                                "@line": "7461",
                                "#text": "Determines whether or not the window manager is hinted that @window\nhas modal behaviour."
                            },
                            "source-position": {
                                "@filename": "gdk/gdkwindow.h",
                                "@line": "723"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "gdk/gdkwindow.c",
                                    "@line": "7468",
                                    "#text": "whether or not the window has the modal hint set."
                                },
                                "type": {
                                    "@name": "gboolean",
                                    "@c:type": "gboolean"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "window",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "gdk/gdkwindow.c",
                                        "@line": "7463",
                                        "#text": "A toplevel #GdkWindow."
                                    },
                                    "type": {
                                        "@name": "Window",
                                        "@c:type": "GdkWindow*"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "get_origin",
                            "@c:identifier": "gdk_window_get_origin",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkwindow.c",
                                "@line": "6816",
                                "#text": "Obtains the position of a window in root window coordinates.\n(Compare with gdk_window_get_position() and\ngdk_window_get_geometry() which return the position of a window\nrelative to its parent window.)"
                            },
                            "source-position": {
                                "@filename": "gdk/gdkwindow.h",
                                "@line": "825"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "gdk/gdkwindow.c",
                                    "@line": "6827",
                                    "#text": "not meaningful, ignore"
                                },
                                "type": {
                                    "@name": "gint",
                                    "@c:type": "gint"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "window",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "gdk/gdkwindow.c",
                                        "@line": "6818",
                                        "#text": "a #GdkWindow"
                                    },
                                    "type": {
                                        "@name": "Window",
                                        "@c:type": "GdkWindow*"
                                    }
                                },
                                "parameter": [
                                    {
                                        "@name": "x",
                                        "@direction": "out",
                                        "@caller-allocates": "0",
                                        "@transfer-ownership": "full",
                                        "@optional": "1",
                                        "@allow-none": "1",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "gdk/gdkwindow.c",
                                            "@line": "6819",
                                            "#text": "return location for X coordinate"
                                        },
                                        "type": {
                                            "@name": "gint",
                                            "@c:type": "gint*"
                                        }
                                    },
                                    {
                                        "@name": "y",
                                        "@direction": "out",
                                        "@caller-allocates": "0",
                                        "@transfer-ownership": "full",
                                        "@optional": "1",
                                        "@allow-none": "1",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "gdk/gdkwindow.c",
                                            "@line": "6820",
                                            "#text": "return location for Y coordinate"
                                        },
                                        "type": {
                                            "@name": "gint",
                                            "@c:type": "gint*"
                                        }
                                    }
                                ]
                            }
                        },
                        {
                            "@name": "get_parent",
                            "@c:identifier": "gdk_window_get_parent",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkwindow.c",
                                "@line": "2415",
                                "#text": "Obtains the parent of @window, as known to GDK. Does not query the\nX server; thus this returns the parent as passed to gdk_window_new(),\nnot the actual parent. This should never matter unless you\u2019re using\nXlib calls mixed with GDK calls on the X11 platform. It may also\nmatter for toplevel windows, because the window manager may choose\nto reparent them.\n\nNote that you should use gdk_window_get_effective_parent() when\nwriting generic code that walks up a window hierarchy, because\ngdk_window_get_parent() will most likely not do what you expect if\nthere are offscreen windows in the hierarchy."
                            },
                            "source-position": {
                                "@filename": "gdk/gdkwindow.h",
                                "@line": "878"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "gdk/gdkwindow.c",
                                    "@line": "2431",
                                    "#text": "parent of @window"
                                },
                                "type": {
                                    "@name": "Window",
                                    "@c:type": "GdkWindow*"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "window",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "gdk/gdkwindow.c",
                                        "@line": "2417",
                                        "#text": "a #GdkWindow"
                                    },
                                    "type": {
                                        "@name": "Window",
                                        "@c:type": "GdkWindow*"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "get_pass_through",
                            "@c:identifier": "gdk_window_get_pass_through",
                            "@version": "3.18",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkwindow.c",
                                "@line": "7298",
                                "#text": "Returns whether input to the window is passed through to the window\nbelow.\n\nSee gdk_window_set_pass_through() for details"
                            },
                            "source-position": {
                                "@filename": "gdk/gdkwindow.h",
                                "@line": "665"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "type": {
                                    "@name": "gboolean",
                                    "@c:type": "gboolean"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "window",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "gdk/gdkwindow.c",
                                        "@line": "7300",
                                        "#text": "a #GdkWindow"
                                    },
                                    "type": {
                                        "@name": "Window",
                                        "@c:type": "GdkWindow*"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "get_pointer",
                            "@c:identifier": "gdk_window_get_pointer",
                            "@deprecated": "1",
                            "@deprecated-version": "3.0",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkwindow.c",
                                "@line": "4976",
                                "#text": "Obtains the current pointer position and modifier state.\nThe position is given in coordinates relative to the upper left\ncorner of @window."
                            },
                            "doc-deprecated": {
                                "@xml:space": "preserve",
                                "#text": "Use gdk_window_get_device_position() instead."
                            },
                            "source-position": {
                                "@filename": "gdk/gdkwindow.h",
                                "@line": "860"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "@nullable": "1",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "gdk/gdkwindow.c",
                                    "@line": "4990",
                                    "#text": "the window containing the\npointer (as with gdk_window_at_pointer()), or %NULL if the window\ncontaining the pointer isn\u2019t known to GDK"
                                },
                                "type": {
                                    "@name": "Window",
                                    "@c:type": "GdkWindow*"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "window",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "gdk/gdkwindow.c",
                                        "@line": "4978",
                                        "#text": "a #GdkWindow"
                                    },
                                    "type": {
                                        "@name": "Window",
                                        "@c:type": "GdkWindow*"
                                    }
                                },
                                "parameter": [
                                    {
                                        "@name": "x",
                                        "@direction": "out",
                                        "@caller-allocates": "0",
                                        "@transfer-ownership": "full",
                                        "@optional": "1",
                                        "@allow-none": "1",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "gdk/gdkwindow.c",
                                            "@line": "4979",
                                            "#text": "return location for X coordinate of pointer or %NULL to not\n     return the X coordinate"
                                        },
                                        "type": {
                                            "@name": "gint",
                                            "@c:type": "gint*"
                                        }
                                    },
                                    {
                                        "@name": "y",
                                        "@direction": "out",
                                        "@caller-allocates": "0",
                                        "@transfer-ownership": "full",
                                        "@optional": "1",
                                        "@allow-none": "1",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "gdk/gdkwindow.c",
                                            "@line": "4981",
                                            "#text": "return location for Y coordinate of pointer or %NULL to not\n     return the Y coordinate"
                                        },
                                        "type": {
                                            "@name": "gint",
                                            "@c:type": "gint*"
                                        }
                                    },
                                    {
                                        "@name": "mask",
                                        "@direction": "out",
                                        "@caller-allocates": "0",
                                        "@transfer-ownership": "full",
                                        "@optional": "1",
                                        "@allow-none": "1",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "gdk/gdkwindow.c",
                                            "@line": "4983",
                                            "#text": "return location for modifier mask or %NULL to not return the\n     modifier mask"
                                        },
                                        "type": {
                                            "@name": "ModifierType",
                                            "@c:type": "GdkModifierType*"
                                        }
                                    }
                                ]
                            }
                        },
                        {
                            "@name": "get_position",
                            "@c:identifier": "gdk_window_get_position",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkwindow.c",
                                "@line": "2387",
                                "#text": "Obtains the position of the window as reported in the\nmost-recently-processed #GdkEventConfigure. Contrast with\ngdk_window_get_geometry() which queries the X server for the\ncurrent window position, regardless of which events have been\nreceived or processed.\n\nThe position coordinates are relative to the window\u2019s parent window."
                            },
                            "source-position": {
                                "@filename": "gdk/gdkwindow.h",
                                "@line": "821"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "type": {
                                    "@name": "none",
                                    "@c:type": "void"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "window",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "gdk/gdkwindow.c",
                                        "@line": "2389",
                                        "#text": "a #GdkWindow"
                                    },
                                    "type": {
                                        "@name": "Window",
                                        "@c:type": "GdkWindow*"
                                    }
                                },
                                "parameter": [
                                    {
                                        "@name": "x",
                                        "@direction": "out",
                                        "@caller-allocates": "0",
                                        "@transfer-ownership": "full",
                                        "@optional": "1",
                                        "@allow-none": "1",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "gdk/gdkwindow.c",
                                            "@line": "2390",
                                            "#text": "X coordinate of window"
                                        },
                                        "type": {
                                            "@name": "gint",
                                            "@c:type": "gint*"
                                        }
                                    },
                                    {
                                        "@name": "y",
                                        "@direction": "out",
                                        "@caller-allocates": "0",
                                        "@transfer-ownership": "full",
                                        "@optional": "1",
                                        "@allow-none": "1",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "gdk/gdkwindow.c",
                                            "@line": "2391",
                                            "#text": "Y coordinate of window"
                                        },
                                        "type": {
                                            "@name": "gint",
                                            "@c:type": "gint*"
                                        }
                                    }
                                ]
                            }
                        },
                        {
                            "@name": "get_root_coords",
                            "@c:identifier": "gdk_window_get_root_coords",
                            "@version": "2.18",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkwindow.c",
                                "@line": "6846",
                                "#text": "Obtains the position of a window position in root\nwindow coordinates. This is similar to\ngdk_window_get_origin() but allows you to pass\nin any position in the window, not just the origin."
                            },
                            "source-position": {
                                "@filename": "gdk/gdkwindow.h",
                                "@line": "829"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "type": {
                                    "@name": "none",
                                    "@c:type": "void"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "window",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "gdk/gdkwindow.c",
                                        "@line": "6848",
                                        "#text": "a #GdkWindow"
                                    },
                                    "type": {
                                        "@name": "Window",
                                        "@c:type": "GdkWindow*"
                                    }
                                },
                                "parameter": [
                                    {
                                        "@name": "x",
                                        "@transfer-ownership": "none",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "gdk/gdkwindow.c",
                                            "@line": "6849",
                                            "#text": "X coordinate in window"
                                        },
                                        "type": {
                                            "@name": "gint",
                                            "@c:type": "gint"
                                        }
                                    },
                                    {
                                        "@name": "y",
                                        "@transfer-ownership": "none",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "gdk/gdkwindow.c",
                                            "@line": "6850",
                                            "#text": "Y coordinate in window"
                                        },
                                        "type": {
                                            "@name": "gint",
                                            "@c:type": "gint"
                                        }
                                    },
                                    {
                                        "@name": "root_x",
                                        "@direction": "out",
                                        "@caller-allocates": "0",
                                        "@transfer-ownership": "full",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "gdk/gdkwindow.c",
                                            "@line": "6851",
                                            "#text": "return location for X coordinate"
                                        },
                                        "type": {
                                            "@name": "gint",
                                            "@c:type": "gint*"
                                        }
                                    },
                                    {
                                        "@name": "root_y",
                                        "@direction": "out",
                                        "@caller-allocates": "0",
                                        "@transfer-ownership": "full",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "gdk/gdkwindow.c",
                                            "@line": "6852",
                                            "#text": "return location for Y coordinate"
                                        },
                                        "type": {
                                            "@name": "gint",
                                            "@c:type": "gint*"
                                        }
                                    }
                                ]
                            }
                        },
                        {
                            "@name": "get_root_origin",
                            "@c:identifier": "gdk_window_get_root_origin",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkwindow.c",
                                "@line": "10550",
                                "#text": "Obtains the top-left corner of the window manager frame in root\nwindow coordinates."
                            },
                            "source-position": {
                                "@filename": "gdk/gdkwindow.h",
                                "@line": "848"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "type": {
                                    "@name": "none",
                                    "@c:type": "void"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "window",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "gdk/gdkwindow.c",
                                        "@line": "10552",
                                        "#text": "a toplevel #GdkWindow"
                                    },
                                    "type": {
                                        "@name": "Window",
                                        "@c:type": "GdkWindow*"
                                    }
                                },
                                "parameter": [
                                    {
                                        "@name": "x",
                                        "@direction": "out",
                                        "@caller-allocates": "0",
                                        "@transfer-ownership": "full",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "gdk/gdkwindow.c",
                                            "@line": "10553",
                                            "#text": "return location for X position of window frame"
                                        },
                                        "type": {
                                            "@name": "gint",
                                            "@c:type": "gint*"
                                        }
                                    },
                                    {
                                        "@name": "y",
                                        "@direction": "out",
                                        "@caller-allocates": "0",
                                        "@transfer-ownership": "full",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "gdk/gdkwindow.c",
                                            "@line": "10554",
                                            "#text": "return location for Y position of window frame"
                                        },
                                        "type": {
                                            "@name": "gint",
                                            "@c:type": "gint*"
                                        }
                                    }
                                ]
                            }
                        },
                        {
                            "@name": "get_scale_factor",
                            "@c:identifier": "gdk_window_get_scale_factor",
                            "@version": "3.10",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkwindow.c",
                                "@line": "11810",
                                "#text": "Returns the internal scale factor that maps from window coordiantes\nto the actual device pixels. On traditional systems this is 1, but\non very high density outputs this can be a higher value (often 2).\n\nA higher value means that drawing is automatically scaled up to\na higher resolution, so any code doing drawing will automatically look\nnicer. However, if you are supplying pixel-based data the scale\nvalue can be used to determine whether to use a pixel resource\nwith higher resolution data.\n\nThe scale of a window may change during runtime, if this happens\na configure event will be sent to the toplevel window."
                            },
                            "source-position": {
                                "@filename": "gdk/gdkwindow.h",
                                "@line": "856"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "gdk/gdkwindow.c",
                                    "@line": "11828",
                                    "#text": "the scale factor"
                                },
                                "type": {
                                    "@name": "gint",
                                    "@c:type": "gint"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "window",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "gdk/gdkwindow.c",
                                        "@line": "11812",
                                        "#text": "window to get scale factor for"
                                    },
                                    "type": {
                                        "@name": "Window",
                                        "@c:type": "GdkWindow*"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "get_screen",
                            "@c:identifier": "gdk_window_get_screen",
                            "@version": "2.24",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkwindow.c",
                                "@line": "2293",
                                "#text": "Gets the #GdkScreen associated with a #GdkWindow."
                            },
                            "source-position": {
                                "@filename": "gdk/gdkwindow.h",
                                "@line": "523"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "gdk/gdkwindow.c",
                                    "@line": "2299",
                                    "#text": "the #GdkScreen associated with @window"
                                },
                                "type": {
                                    "@name": "Screen",
                                    "@c:type": "GdkScreen*"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "window",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "gdk/gdkwindow.c",
                                        "@line": "2295",
                                        "#text": "a #GdkWindow"
                                    },
                                    "type": {
                                        "@name": "Window",
                                        "@c:type": "GdkWindow*"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "get_source_events",
                            "@c:identifier": "gdk_window_get_source_events",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkwindow.c",
                                "@line": "8956",
                                "#text": "Returns the event mask for @window corresponding to the device class specified\nby @source."
                            },
                            "source-position": {
                                "@filename": "gdk/gdkwindow.h",
                                "@line": "913"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "gdk/gdkwindow.c",
                                    "@line": "8964",
                                    "#text": "source event mask for @window"
                                },
                                "type": {
                                    "@name": "EventMask",
                                    "@c:type": "GdkEventMask"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "window",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "gdk/gdkwindow.c",
                                        "@line": "8958",
                                        "#text": "a #GdkWindow"
                                    },
                                    "type": {
                                        "@name": "Window",
                                        "@c:type": "GdkWindow*"
                                    }
                                },
                                "parameter": {
                                    "@name": "source",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "gdk/gdkwindow.c",
                                        "@line": "8959",
                                        "#text": "a #GdkInputSource to define the source class."
                                    },
                                    "type": {
                                        "@name": "InputSource",
                                        "@c:type": "GdkInputSource"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "get_state",
                            "@c:identifier": "gdk_window_get_state",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkwindow.c",
                                "@line": "2803",
                                "#text": "Gets the bitwise OR of the currently active window state flags,\nfrom the #GdkWindowState enumeration."
                            },
                            "source-position": {
                                "@filename": "gdk/gdkwindow.h",
                                "@line": "683"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "gdk/gdkwindow.c",
                                    "@line": "2810",
                                    "#text": "window state bitfield"
                                },
                                "type": {
                                    "@name": "WindowState",
                                    "@c:type": "GdkWindowState"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "window",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "gdk/gdkwindow.c",
                                        "@line": "2805",
                                        "#text": "a #GdkWindow"
                                    },
                                    "type": {
                                        "@name": "Window",
                                        "@c:type": "GdkWindow*"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "get_support_multidevice",
                            "@c:identifier": "gdk_window_get_support_multidevice",
                            "@version": "3.0",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkwindow.c",
                                "@line": "7963",
                                "#text": "Returns %TRUE if the window is aware of the existence of multiple\ndevices."
                            },
                            "source-position": {
                                "@filename": "gdk/gdkwindow.h",
                                "@line": "1109"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "gdk/gdkwindow.c",
                                    "@line": "7970",
                                    "#text": "%TRUE if the window handles multidevice features."
                                },
                                "type": {
                                    "@name": "gboolean",
                                    "@c:type": "gboolean"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "window",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "gdk/gdkwindow.c",
                                        "@line": "7965",
                                        "#text": "a #GdkWindow."
                                    },
                                    "type": {
                                        "@name": "Window",
                                        "@c:type": "GdkWindow*"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "get_toplevel",
                            "@c:identifier": "gdk_window_get_toplevel",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkwindow.c",
                                "@line": "2468",
                                "#text": "Gets the toplevel window that\u2019s an ancestor of @window.\n\nAny window type but %GDK_WINDOW_CHILD is considered a\ntoplevel window, as is a %GDK_WINDOW_CHILD window that\nhas a root window as parent.\n\nNote that you should use gdk_window_get_effective_toplevel() when\nyou want to get to a window\u2019s toplevel as seen on screen, because\ngdk_window_get_toplevel() will most likely not do what you expect\nif there are offscreen windows in the hierarchy."
                            },
                            "source-position": {
                                "@filename": "gdk/gdkwindow.h",
                                "@line": "880"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "gdk/gdkwindow.c",
                                    "@line": "2483",
                                    "#text": "the toplevel window containing @window"
                                },
                                "type": {
                                    "@name": "Window",
                                    "@c:type": "GdkWindow*"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "window",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "gdk/gdkwindow.c",
                                        "@line": "2470",
                                        "#text": "a #GdkWindow"
                                    },
                                    "type": {
                                        "@name": "Window",
                                        "@c:type": "GdkWindow*"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "get_type_hint",
                            "@c:identifier": "gdk_window_get_type_hint",
                            "@version": "2.10",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkwindow.c",
                                "@line": "10327",
                                "#text": "This function returns the type hint set for a window."
                            },
                            "source-position": {
                                "@filename": "gdk/gdkwindow.h",
                                "@line": "720"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "gdk/gdkwindow.c",
                                    "@line": "10333",
                                    "#text": "The type hint set for @window"
                                },
                                "type": {
                                    "@name": "WindowTypeHint",
                                    "@c:type": "GdkWindowTypeHint"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "window",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "gdk/gdkwindow.c",
                                        "@line": "10329",
                                        "#text": "A toplevel #GdkWindow"
                                    },
                                    "type": {
                                        "@name": "Window",
                                        "@c:type": "GdkWindow*"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "get_update_area",
                            "@c:identifier": "gdk_window_get_update_area",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkwindow.c",
                                "@line": "4620",
                                "#text": "Transfers ownership of the update area from @window to the caller\nof the function. That is, after calling this function, @window will\nno longer have an invalid/dirty region; the update area is removed\nfrom @window and handed to you. If a window has no update area,\ngdk_window_get_update_area() returns %NULL. You are responsible for\ncalling cairo_region_destroy() on the returned region if it\u2019s non-%NULL."
                            },
                            "source-position": {
                                "@filename": "gdk/gdkwindow.h",
                                "@line": "1054"
                            },
                            "return-value": {
                                "@transfer-ownership": "full",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "gdk/gdkwindow.c",
                                    "@line": "4631",
                                    "#text": "the update area for @window"
                                },
                                "type": {
                                    "@name": "cairo.Region",
                                    "@c:type": "cairo_region_t*"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "window",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "gdk/gdkwindow.c",
                                        "@line": "4622",
                                        "#text": "a #GdkWindow"
                                    },
                                    "type": {
                                        "@name": "Window",
                                        "@c:type": "GdkWindow*"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "get_user_data",
                            "@c:identifier": "gdk_window_get_user_data",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkwindow.c",
                                "@line": "2243",
                                "#text": "Retrieves the user data for @window, which is normally the widget\nthat @window belongs to. See gdk_window_set_user_data()."
                            },
                            "source-position": {
                                "@filename": "gdk/gdkwindow.h",
                                "@line": "808"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "type": {
                                    "@name": "none",
                                    "@c:type": "void"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "window",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "gdk/gdkwindow.c",
                                        "@line": "2245",
                                        "#text": "a #GdkWindow"
                                    },
                                    "type": {
                                        "@name": "Window",
                                        "@c:type": "GdkWindow*"
                                    }
                                },
                                "parameter": {
                                    "@name": "data",
                                    "@direction": "out",
                                    "@caller-allocates": "0",
                                    "@transfer-ownership": "full",
                                    "@nullable": "1",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "gdk/gdkwindow.c",
                                        "@line": "2246",
                                        "#text": "return location for user data"
                                    },
                                    "type": {
                                        "@name": "gpointer",
                                        "@c:type": "gpointer*"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "get_visible_region",
                            "@c:identifier": "gdk_window_get_visible_region",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkwindow.c",
                                "@line": "3502",
                                "#text": "Computes the region of the @window that is potentially visible.\nThis does not necessarily take into account if the window is\nobscured by other windows, but no area outside of this region\nis visible."
                            },
                            "source-position": {
                                "@filename": "gdk/gdkwindow.h",
                                "@line": "746"
                            },
                            "return-value": {
                                "@transfer-ownership": "full",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "gdk/gdkwindow.c",
                                    "@line": "3511",
                                    "#text": "a #cairo_region_t. This must be freed with cairo_region_destroy()\n         when you are done."
                                },
                                "type": {
                                    "@name": "cairo.Region",
                                    "@c:type": "cairo_region_t*"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "window",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "gdk/gdkwindow.c",
                                        "@line": "3504",
                                        "#text": "a #GdkWindow"
                                    },
                                    "type": {
                                        "@name": "Window",
                                        "@c:type": "GdkWindow*"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "get_visual",
                            "@c:identifier": "gdk_window_get_visual",
                            "@version": "2.24",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkwindow.c",
                                "@line": "2275",
                                "#text": "Gets the #GdkVisual describing the pixel format of @window."
                            },
                            "source-position": {
                                "@filename": "gdk/gdkwindow.h",
                                "@line": "521"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "gdk/gdkwindow.c",
                                    "@line": "2281",
                                    "#text": "a #GdkVisual"
                                },
                                "type": {
                                    "@name": "Visual",
                                    "@c:type": "GdkVisual*"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "window",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "gdk/gdkwindow.c",
                                        "@line": "2277",
                                        "#text": "a #GdkWindow"
                                    },
                                    "type": {
                                        "@name": "Window",
                                        "@c:type": "GdkWindow*"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "get_width",
                            "@c:identifier": "gdk_window_get_width",
                            "@version": "2.24",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkwindow.c",
                                "@line": "6772",
                                "#text": "Returns the width of the given @window.\n\nOn the X11 platform the returned size is the size reported in the\nmost-recently-processed configure event, rather than the current\nsize on the X server."
                            },
                            "source-position": {
                                "@filename": "gdk/gdkwindow.h",
                                "@line": "817"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "gdk/gdkwindow.c",
                                    "@line": "6782",
                                    "#text": "The width of @window"
                                },
                                "type": {
                                    "@name": "gint",
                                    "@c:type": "int"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "window",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "gdk/gdkwindow.c",
                                        "@line": "6774",
                                        "#text": "a #GdkWindow"
                                    },
                                    "type": {
                                        "@name": "Window",
                                        "@c:type": "GdkWindow*"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "get_window_type",
                            "@c:identifier": "gdk_window_get_window_type",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkwindow.c",
                                "@line": "2259",
                                "#text": "Gets the type of the window. See #GdkWindowType."
                            },
                            "source-position": {
                                "@filename": "gdk/gdkwindow.h",
                                "@line": "516"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "gdk/gdkwindow.c",
                                    "@line": "2265",
                                    "#text": "type of window"
                                },
                                "type": {
                                    "@name": "WindowType",
                                    "@c:type": "GdkWindowType"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "window",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "gdk/gdkwindow.c",
                                        "@line": "2261",
                                        "#text": "a #GdkWindow"
                                    },
                                    "type": {
                                        "@name": "Window",
                                        "@c:type": "GdkWindow*"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "has_native",
                            "@c:identifier": "gdk_window_has_native",
                            "@version": "2.22",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkwindow.c",
                                "@line": "2368",
                                "#text": "Checks whether the window has a native window or not. Note that\nyou can use gdk_window_ensure_native() if a native window is needed."
                            },
                            "source-position": {
                                "@filename": "gdk/gdkwindow.h",
                                "@line": "715"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "gdk/gdkwindow.c",
                                    "@line": "2375",
                                    "#text": "%TRUE if the @window has a native window, %FALSE otherwise."
                                },
                                "type": {
                                    "@name": "gboolean",
                                    "@c:type": "gboolean"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "window",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "gdk/gdkwindow.c",
                                        "@line": "2370",
                                        "#text": "a #GdkWindow"
                                    },
                                    "type": {
                                        "@name": "Window",
                                        "@c:type": "GdkWindow*"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "hide",
                            "@c:identifier": "gdk_window_hide",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkwindow.c",
                                "@line": "5662",
                                "#text": "For toplevel windows, withdraws them, so they will no longer be\nknown to the window manager; for all windows, unmaps them, so\nthey won\u2019t be displayed. Normally done automatically as\npart of gtk_widget_hide()."
                            },
                            "source-position": {
                                "@filename": "gdk/gdkwindow.h",
                                "@line": "534"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "type": {
                                    "@name": "none",
                                    "@c:type": "void"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "window",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "gdk/gdkwindow.c",
                                        "@line": "5664",
                                        "#text": "a #GdkWindow"
                                    },
                                    "type": {
                                        "@name": "Window",
                                        "@c:type": "GdkWindow*"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "iconify",
                            "@c:identifier": "gdk_window_iconify",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkwindow.c",
                                "@line": "10750",
                                "#text": "Asks to iconify (minimize) @window. The window manager may choose\nto ignore the request, but normally will honor it. Using\ngtk_window_iconify() is preferred, if you have a #GtkWindow widget.\n\nThis function only makes sense when @window is a toplevel window."
                            },
                            "source-position": {
                                "@filename": "gdk/gdkwindow.h",
                                "@line": "954"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "type": {
                                    "@name": "none",
                                    "@c:type": "void"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "window",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "gdk/gdkwindow.c",
                                        "@line": "10752",
                                        "#text": "a toplevel #GdkWindow"
                                    },
                                    "type": {
                                        "@name": "Window",
                                        "@c:type": "GdkWindow*"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "input_shape_combine_region",
                            "@c:identifier": "gdk_window_input_shape_combine_region",
                            "@version": "2.10",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkwindow.c",
                                "@line": "7155",
                                "#text": "Like gdk_window_shape_combine_region(), but the shape applies\nonly to event handling. Mouse events which happen while\nthe pointer position corresponds to an unset bit in the\nmask will be passed on the window below @window.\n\nAn input shape is typically used with RGBA windows.\nThe alpha channel of the window defines which pixels are\ninvisible and allows for nicely antialiased borders,\nand the input shape controls where the window is\n\u201cclickable\u201d.\n\nOn the X11 platform, this requires version 1.1 of the\nshape extension.\n\nOn the Win32 platform, this functionality is not present and the\nfunction does nothing."
                            },
                            "source-position": {
                                "@filename": "gdk/gdkwindow.h",
                                "@line": "651"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "type": {
                                    "@name": "none",
                                    "@c:type": "void"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "window",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "gdk/gdkwindow.c",
                                        "@line": "7157",
                                        "#text": "a #GdkWindow"
                                    },
                                    "type": {
                                        "@name": "Window",
                                        "@c:type": "GdkWindow*"
                                    }
                                },
                                "parameter": [
                                    {
                                        "@name": "shape_region",
                                        "@transfer-ownership": "none",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "gdk/gdkwindow.c",
                                            "@line": "7158",
                                            "#text": "region of window to be non-transparent"
                                        },
                                        "type": {
                                            "@name": "cairo.Region",
                                            "@c:type": "const cairo_region_t*"
                                        }
                                    },
                                    {
                                        "@name": "offset_x",
                                        "@transfer-ownership": "none",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "gdk/gdkwindow.c",
                                            "@line": "7159",
                                            "#text": "X position of @shape_region in @window coordinates"
                                        },
                                        "type": {
                                            "@name": "gint",
                                            "@c:type": "gint"
                                        }
                                    },
                                    {
                                        "@name": "offset_y",
                                        "@transfer-ownership": "none",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "gdk/gdkwindow.c",
                                            "@line": "7160",
                                            "#text": "Y position of @shape_region in @window coordinates"
                                        },
                                        "type": {
                                            "@name": "gint",
                                            "@c:type": "gint"
                                        }
                                    }
                                ]
                            }
                        },
                        {
                            "@name": "invalidate_maybe_recurse",
                            "@c:identifier": "gdk_window_invalidate_maybe_recurse",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkwindow.c",
                                "@line": "4500",
                                "#text": "Adds @region to the update area for @window. The update area is the\nregion that needs to be redrawn, or \u201cdirty region.\u201d The call\ngdk_window_process_updates() sends one or more expose events to the\nwindow, which together cover the entire update area. An\napplication would normally redraw the contents of @window in\nresponse to those expose events.\n\nGDK will call gdk_window_process_all_updates() on your behalf\nwhenever your program returns to the main loop and becomes idle, so\nnormally there\u2019s no need to do that manually, you just need to\ninvalidate regions that you know should be redrawn.\n\nThe @child_func parameter controls whether the region of\neach child window that intersects @region will also be invalidated.\nOnly children for which @child_func returns #TRUE will have the area\ninvalidated."
                            },
                            "source-position": {
                                "@filename": "gdk/gdkwindow.h",
                                "@line": "1049"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "type": {
                                    "@name": "none",
                                    "@c:type": "void"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "window",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "gdk/gdkwindow.c",
                                        "@line": "4502",
                                        "#text": "a #GdkWindow"
                                    },
                                    "type": {
                                        "@name": "Window",
                                        "@c:type": "GdkWindow*"
                                    }
                                },
                                "parameter": [
                                    {
                                        "@name": "region",
                                        "@transfer-ownership": "none",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "gdk/gdkwindow.c",
                                            "@line": "4503",
                                            "#text": "a #cairo_region_t"
                                        },
                                        "type": {
                                            "@name": "cairo.Region",
                                            "@c:type": "const cairo_region_t*"
                                        }
                                    },
                                    {
                                        "@name": "child_func",
                                        "@transfer-ownership": "none",
                                        "@nullable": "1",
                                        "@allow-none": "1",
                                        "@scope": "call",
                                        "@closure": "2",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "gdk/gdkwindow.c",
                                            "@line": "4504",
                                            "#text": "function to use to decide if to\n    recurse to a child, %NULL means never recurse."
                                        },
                                        "type": {
                                            "@name": "WindowChildFunc",
                                            "@c:type": "GdkWindowChildFunc"
                                        }
                                    },
                                    {
                                        "@name": "user_data",
                                        "@transfer-ownership": "none",
                                        "@nullable": "1",
                                        "@allow-none": "1",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "gdk/gdkwindow.c",
                                            "@line": "4506",
                                            "#text": "data passed to @child_func"
                                        },
                                        "type": {
                                            "@name": "gpointer",
                                            "@c:type": "gpointer"
                                        }
                                    }
                                ]
                            }
                        },
                        {
                            "@name": "invalidate_rect",
                            "@c:identifier": "gdk_window_invalidate_rect",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkwindow.c",
                                "@line": "4281",
                                "#text": "A convenience wrapper around gdk_window_invalidate_region() which\ninvalidates a rectangular region. See\ngdk_window_invalidate_region() for details."
                            },
                            "source-position": {
                                "@filename": "gdk/gdkwindow.h",
                                "@line": "1026"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "type": {
                                    "@name": "none",
                                    "@c:type": "void"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "window",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "gdk/gdkwindow.c",
                                        "@line": "4283",
                                        "#text": "a #GdkWindow"
                                    },
                                    "type": {
                                        "@name": "Window",
                                        "@c:type": "GdkWindow*"
                                    }
                                },
                                "parameter": [
                                    {
                                        "@name": "rect",
                                        "@transfer-ownership": "none",
                                        "@nullable": "1",
                                        "@allow-none": "1",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "gdk/gdkwindow.c",
                                            "@line": "4284",
                                            "#text": "rectangle to invalidate or %NULL to invalidate the whole\n     window"
                                        },
                                        "type": {
                                            "@name": "Rectangle",
                                            "@c:type": "const GdkRectangle*"
                                        }
                                    },
                                    {
                                        "@name": "invalidate_children",
                                        "@transfer-ownership": "none",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "gdk/gdkwindow.c",
                                            "@line": "4286",
                                            "#text": "whether to also invalidate child windows"
                                        },
                                        "type": {
                                            "@name": "gboolean",
                                            "@c:type": "gboolean"
                                        }
                                    }
                                ]
                            }
                        },
                        {
                            "@name": "invalidate_region",
                            "@c:identifier": "gdk_window_invalidate_region",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkwindow.c",
                                "@line": "4553",
                                "#text": "Adds @region to the update area for @window. The update area is the\nregion that needs to be redrawn, or \u201cdirty region.\u201d The call\ngdk_window_process_updates() sends one or more expose events to the\nwindow, which together cover the entire update area. An\napplication would normally redraw the contents of @window in\nresponse to those expose events.\n\nGDK will call gdk_window_process_all_updates() on your behalf\nwhenever your program returns to the main loop and becomes idle, so\nnormally there\u2019s no need to do that manually, you just need to\ninvalidate regions that you know should be redrawn.\n\nThe @invalidate_children parameter controls whether the region of\neach child window that intersects @region will also be invalidated.\nIf %FALSE, then the update area for child windows will remain\nunaffected. See gdk_window_invalidate_maybe_recurse if you need\nfine grained control over which children are invalidated."
                            },
                            "source-position": {
                                "@filename": "gdk/gdkwindow.h",
                                "@line": "1030"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "type": {
                                    "@name": "none",
                                    "@c:type": "void"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "window",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "gdk/gdkwindow.c",
                                        "@line": "4555",
                                        "#text": "a #GdkWindow"
                                    },
                                    "type": {
                                        "@name": "Window",
                                        "@c:type": "GdkWindow*"
                                    }
                                },
                                "parameter": [
                                    {
                                        "@name": "region",
                                        "@transfer-ownership": "none",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "gdk/gdkwindow.c",
                                            "@line": "4556",
                                            "#text": "a #cairo_region_t"
                                        },
                                        "type": {
                                            "@name": "cairo.Region",
                                            "@c:type": "const cairo_region_t*"
                                        }
                                    },
                                    {
                                        "@name": "invalidate_children",
                                        "@transfer-ownership": "none",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "gdk/gdkwindow.c",
                                            "@line": "4557",
                                            "#text": "%TRUE to also invalidate child windows"
                                        },
                                        "type": {
                                            "@name": "gboolean",
                                            "@c:type": "gboolean"
                                        }
                                    }
                                ]
                            }
                        },
                        {
                            "@name": "is_destroyed",
                            "@c:identifier": "gdk_window_is_destroyed",
                            "@version": "2.18",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkwindow.c",
                                "@line": "2328",
                                "#text": "Check to see if a window is destroyed.."
                            },
                            "source-position": {
                                "@filename": "gdk/gdkwindow.h",
                                "@line": "518"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "gdk/gdkwindow.c",
                                    "@line": "2334",
                                    "#text": "%TRUE if the window is destroyed"
                                },
                                "type": {
                                    "@name": "gboolean",
                                    "@c:type": "gboolean"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "window",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "gdk/gdkwindow.c",
                                        "@line": "2330",
                                        "#text": "a #GdkWindow"
                                    },
                                    "type": {
                                        "@name": "Window",
                                        "@c:type": "GdkWindow*"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "is_input_only",
                            "@c:identifier": "gdk_window_is_input_only",
                            "@version": "2.22",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkwindow.c",
                                "@line": "7519",
                                "#text": "Determines whether or not the window is an input only window."
                            },
                            "source-position": {
                                "@filename": "gdk/gdkwindow.h",
                                "@line": "678"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "gdk/gdkwindow.c",
                                    "@line": "7525",
                                    "#text": "%TRUE if @window is input only"
                                },
                                "type": {
                                    "@name": "gboolean",
                                    "@c:type": "gboolean"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "window",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "gdk/gdkwindow.c",
                                        "@line": "7521",
                                        "#text": "a toplevel #GdkWindow"
                                    },
                                    "type": {
                                        "@name": "Window",
                                        "@c:type": "GdkWindow*"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "is_shaped",
                            "@c:identifier": "gdk_window_is_shaped",
                            "@version": "2.22",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkwindow.c",
                                "@line": "7537",
                                "#text": "Determines whether or not the window is shaped."
                            },
                            "source-position": {
                                "@filename": "gdk/gdkwindow.h",
                                "@line": "680"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "gdk/gdkwindow.c",
                                    "@line": "7543",
                                    "#text": "%TRUE if @window is shaped"
                                },
                                "type": {
                                    "@name": "gboolean",
                                    "@c:type": "gboolean"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "window",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "gdk/gdkwindow.c",
                                        "@line": "7539",
                                        "#text": "a toplevel #GdkWindow"
                                    },
                                    "type": {
                                        "@name": "Window",
                                        "@c:type": "GdkWindow*"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "is_viewable",
                            "@c:identifier": "gdk_window_is_viewable",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkwindow.c",
                                "@line": "2781",
                                "#text": "Check if the window and all ancestors of the window are\nmapped. (This is not necessarily \"viewable\" in the X sense, since\nwe only check as far as we have GDK window parents, not to the root\nwindow.)"
                            },
                            "source-position": {
                                "@filename": "gdk/gdkwindow.h",
                                "@line": "676"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "gdk/gdkwindow.c",
                                    "@line": "2790",
                                    "#text": "%TRUE if the window is viewable"
                                },
                                "type": {
                                    "@name": "gboolean",
                                    "@c:type": "gboolean"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "window",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "gdk/gdkwindow.c",
                                        "@line": "2783",
                                        "#text": "a #GdkWindow"
                                    },
                                    "type": {
                                        "@name": "Window",
                                        "@c:type": "GdkWindow*"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "is_visible",
                            "@c:identifier": "gdk_window_is_visible",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkwindow.c",
                                "@line": "2764",
                                "#text": "Checks whether the window has been mapped (with gdk_window_show() or\ngdk_window_show_unraised())."
                            },
                            "source-position": {
                                "@filename": "gdk/gdkwindow.h",
                                "@line": "674"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "gdk/gdkwindow.c",
                                    "@line": "2771",
                                    "#text": "%TRUE if the window is mapped"
                                },
                                "type": {
                                    "@name": "gboolean",
                                    "@c:type": "gboolean"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "window",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "gdk/gdkwindow.c",
                                        "@line": "2766",
                                        "#text": "a #GdkWindow"
                                    },
                                    "type": {
                                        "@name": "Window",
                                        "@c:type": "GdkWindow*"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "lower",
                            "@c:identifier": "gdk_window_lower",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkwindow.c",
                                "@line": "5499",
                                "#text": "Lowers @window to the bottom of the Z-order (stacking order), so that\nother windows with the same parent window appear above @window.\nThis is true whether or not the other windows are visible.\n\nIf @window is a toplevel, the window manager may choose to deny the\nrequest to move the window in the Z-order, gdk_window_lower() only\nrequests the restack, does not guarantee it.\n\nNote that gdk_window_show() raises the window again, so don\u2019t call this\nfunction before gdk_window_show(). (Try gdk_window_show_unraised().)"
                            },
                            "source-position": {
                                "@filename": "gdk/gdkwindow.h",
                                "@line": "570"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "type": {
                                    "@name": "none",
                                    "@c:type": "void"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "window",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "gdk/gdkwindow.c",
                                        "@line": "5501",
                                        "#text": "a #GdkWindow"
                                    },
                                    "type": {
                                        "@name": "Window",
                                        "@c:type": "GdkWindow*"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "mark_paint_from_clip",
                            "@c:identifier": "gdk_window_mark_paint_from_clip",
                            "@version": "3.16",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkwindow.c",
                                "@line": "3368",
                                "#text": "If you call this during a paint (e.g. between gdk_window_begin_paint_region()\nand gdk_window_end_paint() then GDK will mark the current clip region of the\nwindow as being drawn. This is required when mixing GL rendering via\ngdk_cairo_draw_from_gl() and cairo rendering, as otherwise GDK has no way\nof knowing when something paints over the GL-drawn regions.\n\nThis is typically called automatically by GTK+ and you don't need\nto care about this."
                            },
                            "source-position": {
                                "@filename": "gdk/gdkwindow.h",
                                "@line": "753"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "type": {
                                    "@name": "none",
                                    "@c:type": "void"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "window",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "gdk/gdkwindow.c",
                                        "@line": "3370",
                                        "#text": "a #GdkWindow"
                                    },
                                    "type": {
                                        "@name": "Window",
                                        "@c:type": "GdkWindow*"
                                    }
                                },
                                "parameter": {
                                    "@name": "cr",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "gdk/gdkwindow.c",
                                        "@line": "3371",
                                        "#text": "a #cairo_t"
                                    },
                                    "type": {
                                        "@name": "cairo.Context",
                                        "@c:type": "cairo_t*"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "maximize",
                            "@c:identifier": "gdk_window_maximize",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkwindow.c",
                                "@line": "10819",
                                "#text": "Maximizes the window. If the window was already maximized, then\nthis function does nothing.\n\nOn X11, asks the window manager to maximize @window, if the window\nmanager supports this operation. Not all window managers support\nthis, and some deliberately ignore it or don\u2019t have a concept of\n\u201cmaximized\u201d; so you can\u2019t rely on the maximization actually\nhappening. But it will happen with most standard window managers,\nand GDK makes a best effort to get it to happen.\n\nOn Windows, reliably maximizes the window."
                            },
                            "source-position": {
                                "@filename": "gdk/gdkwindow.h",
                                "@line": "962"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "type": {
                                    "@name": "none",
                                    "@c:type": "void"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "window",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "gdk/gdkwindow.c",
                                        "@line": "10821",
                                        "#text": "a toplevel #GdkWindow"
                                    },
                                    "type": {
                                        "@name": "Window",
                                        "@c:type": "GdkWindow*"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "merge_child_input_shapes",
                            "@c:identifier": "gdk_window_merge_child_input_shapes",
                            "@version": "2.10",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkwindow.c",
                                "@line": "7317",
                                "#text": "Merges the input shape masks for any child windows into the\ninput shape mask for @window. i.e. the union of all input masks\nfor @window and its children will become the new input mask\nfor @window. See gdk_window_input_shape_combine_region().\n\nThis function is distinct from gdk_window_set_child_input_shapes()\nbecause it includes @window\u2019s input shape mask in the set of\nshapes to be merged."
                            },
                            "source-position": {
                                "@filename": "gdk/gdkwindow.h",
                                "@line": "658"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "type": {
                                    "@name": "none",
                                    "@c:type": "void"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "window",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "gdk/gdkwindow.c",
                                        "@line": "7319",
                                        "#text": "a #GdkWindow"
                                    },
                                    "type": {
                                        "@name": "Window",
                                        "@c:type": "GdkWindow*"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "merge_child_shapes",
                            "@c:identifier": "gdk_window_merge_child_shapes",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkwindow.c",
                                "@line": "7134",
                                "#text": "Merges the shape masks for any child windows into the\nshape mask for @window. i.e. the union of all masks\nfor @window and its children will become the new mask\nfor @window. See gdk_window_shape_combine_region().\n\nThis function is distinct from gdk_window_set_child_shapes()\nbecause it includes @window\u2019s shape mask in the set of shapes to\nbe merged."
                            },
                            "source-position": {
                                "@filename": "gdk/gdkwindow.h",
                                "@line": "648"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "type": {
                                    "@name": "none",
                                    "@c:type": "void"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "window",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "gdk/gdkwindow.c",
                                        "@line": "7136",
                                        "#text": "a #GdkWindow"
                                    },
                                    "type": {
                                        "@name": "Window",
                                        "@c:type": "GdkWindow*"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "move",
                            "@c:identifier": "gdk_window_move",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkwindow.c",
                                "@line": "6161",
                                "#text": "Repositions a window relative to its parent window.\nFor toplevel windows, window managers may ignore or modify the move;\nyou should probably use gtk_window_move() on a #GtkWindow widget\nanyway, instead of using GDK functions. For child windows,\nthe move will reliably succeed.\n\nIf you\u2019re also planning to resize the window, use gdk_window_move_resize()\nto both move and resize simultaneously, for a nicer visual effect."
                            },
                            "source-position": {
                                "@filename": "gdk/gdkwindow.h",
                                "@line": "540"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "type": {
                                    "@name": "none",
                                    "@c:type": "void"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "window",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "gdk/gdkwindow.c",
                                        "@line": "6163",
                                        "#text": "a #GdkWindow"
                                    },
                                    "type": {
                                        "@name": "Window",
                                        "@c:type": "GdkWindow*"
                                    }
                                },
                                "parameter": [
                                    {
                                        "@name": "x",
                                        "@transfer-ownership": "none",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "gdk/gdkwindow.c",
                                            "@line": "6164",
                                            "#text": "X coordinate relative to window\u2019s parent"
                                        },
                                        "type": {
                                            "@name": "gint",
                                            "@c:type": "gint"
                                        }
                                    },
                                    {
                                        "@name": "y",
                                        "@transfer-ownership": "none",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "gdk/gdkwindow.c",
                                            "@line": "6165",
                                            "#text": "Y coordinate relative to window\u2019s parent"
                                        },
                                        "type": {
                                            "@name": "gint",
                                            "@c:type": "gint"
                                        }
                                    }
                                ]
                            }
                        },
                        {
                            "@name": "move_region",
                            "@c:identifier": "gdk_window_move_region",
                            "@version": "2.8",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkwindow.c",
                                "@line": "6341",
                                "#text": "Move the part of @window indicated by @region by @dy pixels in the Y\ndirection and @dx pixels in the X direction. The portions of @region\nthat not covered by the new position of @region are invalidated.\n\nChild windows are not moved."
                            },
                            "source-position": {
                                "@filename": "gdk/gdkwindow.h",
                                "@line": "607"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "type": {
                                    "@name": "none",
                                    "@c:type": "void"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "window",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "gdk/gdkwindow.c",
                                        "@line": "6343",
                                        "#text": "a #GdkWindow"
                                    },
                                    "type": {
                                        "@name": "Window",
                                        "@c:type": "GdkWindow*"
                                    }
                                },
                                "parameter": [
                                    {
                                        "@name": "region",
                                        "@transfer-ownership": "none",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "gdk/gdkwindow.c",
                                            "@line": "6344",
                                            "#text": "The #cairo_region_t to move"
                                        },
                                        "type": {
                                            "@name": "cairo.Region",
                                            "@c:type": "const cairo_region_t*"
                                        }
                                    },
                                    {
                                        "@name": "dx",
                                        "@transfer-ownership": "none",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "gdk/gdkwindow.c",
                                            "@line": "6345",
                                            "#text": "Amount to move in the X direction"
                                        },
                                        "type": {
                                            "@name": "gint",
                                            "@c:type": "gint"
                                        }
                                    },
                                    {
                                        "@name": "dy",
                                        "@transfer-ownership": "none",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "gdk/gdkwindow.c",
                                            "@line": "6346",
                                            "#text": "Amount to move in the Y direction"
                                        },
                                        "type": {
                                            "@name": "gint",
                                            "@c:type": "gint"
                                        }
                                    }
                                ]
                            }
                        },
                        {
                            "@name": "move_resize",
                            "@c:identifier": "gdk_window_move_resize",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkwindow.c",
                                "@line": "6208",
                                "#text": "Equivalent to calling gdk_window_move() and gdk_window_resize(),\nexcept that both operations are performed at once, avoiding strange\nvisual effects. (i.e. the user may be able to see the window first\nmove, then resize, if you don\u2019t use gdk_window_move_resize().)"
                            },
                            "source-position": {
                                "@filename": "gdk/gdkwindow.h",
                                "@line": "548"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "type": {
                                    "@name": "none",
                                    "@c:type": "void"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "window",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "gdk/gdkwindow.c",
                                        "@line": "6210",
                                        "#text": "a #GdkWindow"
                                    },
                                    "type": {
                                        "@name": "Window",
                                        "@c:type": "GdkWindow*"
                                    }
                                },
                                "parameter": [
                                    {
                                        "@name": "x",
                                        "@transfer-ownership": "none",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "gdk/gdkwindow.c",
                                            "@line": "6211",
                                            "#text": "new X position relative to window\u2019s parent"
                                        },
                                        "type": {
                                            "@name": "gint",
                                            "@c:type": "gint"
                                        }
                                    },
                                    {
                                        "@name": "y",
                                        "@transfer-ownership": "none",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "gdk/gdkwindow.c",
                                            "@line": "6212",
                                            "#text": "new Y position relative to window\u2019s parent"
                                        },
                                        "type": {
                                            "@name": "gint",
                                            "@c:type": "gint"
                                        }
                                    },
                                    {
                                        "@name": "width",
                                        "@transfer-ownership": "none",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "gdk/gdkwindow.c",
                                            "@line": "6213",
                                            "#text": "new width"
                                        },
                                        "type": {
                                            "@name": "gint",
                                            "@c:type": "gint"
                                        }
                                    },
                                    {
                                        "@name": "height",
                                        "@transfer-ownership": "none",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "gdk/gdkwindow.c",
                                            "@line": "6214",
                                            "#text": "new height"
                                        },
                                        "type": {
                                            "@name": "gint",
                                            "@c:type": "gint"
                                        }
                                    }
                                ]
                            }
                        },
                        {
                            "@name": "move_to_rect",
                            "@c:identifier": "gdk_window_move_to_rect",
                            "@version": "3.24",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkwindow.c",
                                "@line": "6231",
                                "#text": "Moves @window to @rect, aligning their anchor points.\n\n@rect is relative to the top-left corner of the window that @window is\ntransient for. @rect_anchor and @window_anchor determine anchor points on\n@rect and @window to pin together. @rect's anchor point can optionally be\noffset by @rect_anchor_dx and @rect_anchor_dy, which is equivalent to\noffsetting the position of @window.\n\n@anchor_hints determines how @window will be moved if the anchor points cause\nit to move off-screen. For example, %GDK_ANCHOR_FLIP_X will replace\n%GDK_GRAVITY_NORTH_WEST with %GDK_GRAVITY_NORTH_EAST and vice versa if\n@window extends beyond the left or right edges of the monitor.\n\nConnect to the #GdkWindow::moved-to-rect signal to find out how it was\nactually positioned."
                            },
                            "source-position": {
                                "@filename": "gdk/gdkwindow.h",
                                "@line": "555"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "type": {
                                    "@name": "none",
                                    "@c:type": "void"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "window",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "gdk/gdkwindow.c",
                                        "@line": "6233",
                                        "#text": "the #GdkWindow to move"
                                    },
                                    "type": {
                                        "@name": "Window",
                                        "@c:type": "GdkWindow*"
                                    }
                                },
                                "parameter": [
                                    {
                                        "@name": "rect",
                                        "@transfer-ownership": "none",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "gdk/gdkwindow.c",
                                            "@line": "6234",
                                            "#text": "the destination #GdkRectangle to align @window with"
                                        },
                                        "type": {
                                            "@name": "Rectangle",
                                            "@c:type": "const GdkRectangle*"
                                        }
                                    },
                                    {
                                        "@name": "rect_anchor",
                                        "@transfer-ownership": "none",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "gdk/gdkwindow.c",
                                            "@line": "6235",
                                            "#text": "the point on @rect to align with @window's anchor point"
                                        },
                                        "type": {
                                            "@name": "Gravity",
                                            "@c:type": "GdkGravity"
                                        }
                                    },
                                    {
                                        "@name": "window_anchor",
                                        "@transfer-ownership": "none",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "gdk/gdkwindow.c",
                                            "@line": "6236",
                                            "#text": "the point on @window to align with @rect's anchor point"
                                        },
                                        "type": {
                                            "@name": "Gravity",
                                            "@c:type": "GdkGravity"
                                        }
                                    },
                                    {
                                        "@name": "anchor_hints",
                                        "@transfer-ownership": "none",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "gdk/gdkwindow.c",
                                            "@line": "6237",
                                            "#text": "positioning hints to use when limited on space"
                                        },
                                        "type": {
                                            "@name": "AnchorHints",
                                            "@c:type": "GdkAnchorHints"
                                        }
                                    },
                                    {
                                        "@name": "rect_anchor_dx",
                                        "@transfer-ownership": "none",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "gdk/gdkwindow.c",
                                            "@line": "6238",
                                            "#text": "horizontal offset to shift @window, i.e. @rect's anchor\n                 point"
                                        },
                                        "type": {
                                            "@name": "gint",
                                            "@c:type": "gint"
                                        }
                                    },
                                    {
                                        "@name": "rect_anchor_dy",
                                        "@transfer-ownership": "none",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "gdk/gdkwindow.c",
                                            "@line": "6240",
                                            "#text": "vertical offset to shift @window, i.e. @rect's anchor point"
                                        },
                                        "type": {
                                            "@name": "gint",
                                            "@c:type": "gint"
                                        }
                                    }
                                ]
                            }
                        },
                        {
                            "@name": "peek_children",
                            "@c:identifier": "gdk_window_peek_children",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkwindow.c",
                                "@line": "2556",
                                "#text": "Like gdk_window_get_children(), but does not copy the list of\nchildren, so the list does not need to be freed."
                            },
                            "source-position": {
                                "@filename": "gdk/gdkwindow.h",
                                "@line": "890"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "gdk/gdkwindow.c",
                                    "@line": "2563",
                                    "#text": "a reference to the list of child windows in @window"
                                },
                                "type": {
                                    "@name": "GLib.List",
                                    "@c:type": "GList*",
                                    "type": {
                                        "@name": "Window"
                                    }
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "window",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "gdk/gdkwindow.c",
                                        "@line": "2558",
                                        "#text": "a #GdkWindow"
                                    },
                                    "type": {
                                        "@name": "Window",
                                        "@c:type": "GdkWindow*"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "process_updates",
                            "@c:identifier": "gdk_window_process_updates",
                            "@deprecated": "1",
                            "@deprecated-version": "3.22",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkwindow.c",
                                "@line": "4223",
                                "#text": "Sends one or more expose events to @window. The areas in each\nexpose event will cover the entire update area for the window (see\ngdk_window_invalidate_region() for details). Normally GDK calls\ngdk_window_process_all_updates() on your behalf, so there\u2019s no\nneed to call this function unless you want to force expose events\nto be delivered immediately and synchronously (vs. the usual\ncase, where GDK delivers them in an idle handler). Occasionally\nthis is useful to produce nicer scrolling behavior, for example."
                            },
                            "source-position": {
                                "@filename": "gdk/gdkwindow.h",
                                "@line": "1069"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "type": {
                                    "@name": "none",
                                    "@c:type": "void"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "window",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "gdk/gdkwindow.c",
                                        "@line": "4225",
                                        "#text": "a #GdkWindow"
                                    },
                                    "type": {
                                        "@name": "Window",
                                        "@c:type": "GdkWindow*"
                                    }
                                },
                                "parameter": {
                                    "@name": "update_children",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "gdk/gdkwindow.c",
                                        "@line": "4226",
                                        "#text": "whether to also process updates for child windows"
                                    },
                                    "type": {
                                        "@name": "gboolean",
                                        "@c:type": "gboolean"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "raise",
                            "@c:identifier": "gdk_window_raise",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkwindow.c",
                                "@line": "5380",
                                "#text": "Raises @window to the top of the Z-order (stacking order), so that\nother windows with the same parent window appear below @window.\nThis is true whether or not the windows are visible.\n\nIf @window is a toplevel, the window manager may choose to deny the\nrequest to move the window in the Z-order, gdk_window_raise() only\nrequests the restack, does not guarantee it."
                            },
                            "source-position": {
                                "@filename": "gdk/gdkwindow.h",
                                "@line": "568"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "type": {
                                    "@name": "none",
                                    "@c:type": "void"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "window",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "gdk/gdkwindow.c",
                                        "@line": "5382",
                                        "#text": "a #GdkWindow"
                                    },
                                    "type": {
                                        "@name": "Window",
                                        "@c:type": "GdkWindow*"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "register_dnd",
                            "@c:identifier": "gdk_window_register_dnd",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkwindow.c",
                                "@line": "11366",
                                "#text": "Registers a window as a potential drop destination."
                            },
                            "source-position": {
                                "@filename": "gdk/gdkwindow.h",
                                "@line": "988"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "type": {
                                    "@name": "none",
                                    "@c:type": "void"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "window",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "gdk/gdkwindow.c",
                                        "@line": "11368",
                                        "#text": "a #GdkWindow."
                                    },
                                    "type": {
                                        "@name": "Window",
                                        "@c:type": "GdkWindow*"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "remove_filter",
                            "@c:identifier": "gdk_window_remove_filter",
                            "@introspectable": "0",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkwindow.c",
                                "@line": "2685",
                                "#text": "Remove a filter previously added with gdk_window_add_filter()."
                            },
                            "source-position": {
                                "@filename": "gdk/gdkwindow.h",
                                "@line": "599"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "type": {
                                    "@name": "none",
                                    "@c:type": "void"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "window",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "gdk/gdkwindow.c",
                                        "@line": "2687",
                                        "#text": "a #GdkWindow"
                                    },
                                    "type": {
                                        "@name": "Window",
                                        "@c:type": "GdkWindow*"
                                    }
                                },
                                "parameter": [
                                    {
                                        "@name": "function",
                                        "@transfer-ownership": "none",
                                        "@closure": "1",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "gdk/gdkwindow.c",
                                            "@line": "2688",
                                            "#text": "previously-added filter function"
                                        },
                                        "type": {
                                            "@name": "FilterFunc",
                                            "@c:type": "GdkFilterFunc"
                                        }
                                    },
                                    {
                                        "@name": "data",
                                        "@transfer-ownership": "none",
                                        "@nullable": "1",
                                        "@allow-none": "1",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "gdk/gdkwindow.c",
                                            "@line": "2689",
                                            "#text": "user data for previously-added filter function"
                                        },
                                        "type": {
                                            "@name": "gpointer",
                                            "@c:type": "gpointer"
                                        }
                                    }
                                ]
                            }
                        },
                        {
                            "@name": "reparent",
                            "@c:identifier": "gdk_window_reparent",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkwindow.c",
                                "@line": "1637",
                                "#text": "Reparents @window into the given @new_parent. The window being\nreparented will be unmapped as a side effect."
                            },
                            "source-position": {
                                "@filename": "gdk/gdkwindow.h",
                                "@line": "563"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "type": {
                                    "@name": "none",
                                    "@c:type": "void"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "window",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "gdk/gdkwindow.c",
                                        "@line": "1639",
                                        "#text": "a #GdkWindow"
                                    },
                                    "type": {
                                        "@name": "Window",
                                        "@c:type": "GdkWindow*"
                                    }
                                },
                                "parameter": [
                                    {
                                        "@name": "new_parent",
                                        "@transfer-ownership": "none",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "gdk/gdkwindow.c",
                                            "@line": "1640",
                                            "#text": "new parent to move @window into"
                                        },
                                        "type": {
                                            "@name": "Window",
                                            "@c:type": "GdkWindow*"
                                        }
                                    },
                                    {
                                        "@name": "x",
                                        "@transfer-ownership": "none",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "gdk/gdkwindow.c",
                                            "@line": "1641",
                                            "#text": "X location inside the new parent"
                                        },
                                        "type": {
                                            "@name": "gint",
                                            "@c:type": "gint"
                                        }
                                    },
                                    {
                                        "@name": "y",
                                        "@transfer-ownership": "none",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "gdk/gdkwindow.c",
                                            "@line": "1642",
                                            "#text": "Y location inside the new parent"
                                        },
                                        "type": {
                                            "@name": "gint",
                                            "@c:type": "gint"
                                        }
                                    }
                                ]
                            }
                        },
                        {
                            "@name": "resize",
                            "@c:identifier": "gdk_window_resize",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkwindow.c",
                                "@line": "6184",
                                "#text": "Resizes @window; for toplevel windows, asks the window manager to resize\nthe window. The window manager may not allow the resize. When using GTK+,\nuse gtk_window_resize() instead of this low-level GDK function.\n\nWindows may not be resized below 1x1.\n\nIf you\u2019re also planning to move the window, use gdk_window_move_resize()\nto both move and resize simultaneously, for a nicer visual effect."
                            },
                            "source-position": {
                                "@filename": "gdk/gdkwindow.h",
                                "@line": "544"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "type": {
                                    "@name": "none",
                                    "@c:type": "void"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "window",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "gdk/gdkwindow.c",
                                        "@line": "6186",
                                        "#text": "a #GdkWindow"
                                    },
                                    "type": {
                                        "@name": "Window",
                                        "@c:type": "GdkWindow*"
                                    }
                                },
                                "parameter": [
                                    {
                                        "@name": "width",
                                        "@transfer-ownership": "none",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "gdk/gdkwindow.c",
                                            "@line": "6187",
                                            "#text": "new width of the window"
                                        },
                                        "type": {
                                            "@name": "gint",
                                            "@c:type": "gint"
                                        }
                                    },
                                    {
                                        "@name": "height",
                                        "@transfer-ownership": "none",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "gdk/gdkwindow.c",
                                            "@line": "6188",
                                            "#text": "new height of the window"
                                        },
                                        "type": {
                                            "@name": "gint",
                                            "@c:type": "gint"
                                        }
                                    }
                                ]
                            }
                        },
                        {
                            "@name": "restack",
                            "@c:identifier": "gdk_window_restack",
                            "@version": "2.18",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkwindow.c",
                                "@line": "5529",
                                "#text": "Changes the position of  @window in the Z-order (stacking order), so that\nit is above @sibling (if @above is %TRUE) or below @sibling (if @above is\n%FALSE).\n\nIf @sibling is %NULL, then this either raises (if @above is %TRUE) or\nlowers the window.\n\nIf @window is a toplevel, the window manager may choose to deny the\nrequest to move the window in the Z-order, gdk_window_restack() only\nrequests the restack, does not guarantee it."
                            },
                            "source-position": {
                                "@filename": "gdk/gdkwindow.h",
                                "@line": "572"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "type": {
                                    "@name": "none",
                                    "@c:type": "void"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "window",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "gdk/gdkwindow.c",
                                        "@line": "5531",
                                        "#text": "a #GdkWindow"
                                    },
                                    "type": {
                                        "@name": "Window",
                                        "@c:type": "GdkWindow*"
                                    }
                                },
                                "parameter": [
                                    {
                                        "@name": "sibling",
                                        "@transfer-ownership": "none",
                                        "@nullable": "1",
                                        "@allow-none": "1",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "gdk/gdkwindow.c",
                                            "@line": "5532",
                                            "#text": "a #GdkWindow that is a sibling of @window, or %NULL"
                                        },
                                        "type": {
                                            "@name": "Window",
                                            "@c:type": "GdkWindow*"
                                        }
                                    },
                                    {
                                        "@name": "above",
                                        "@transfer-ownership": "none",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "gdk/gdkwindow.c",
                                            "@line": "5533",
                                            "#text": "a boolean"
                                        },
                                        "type": {
                                            "@name": "gboolean",
                                            "@c:type": "gboolean"
                                        }
                                    }
                                ]
                            }
                        },
                        {
                            "@name": "scroll",
                            "@c:identifier": "gdk_window_scroll",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkwindow.c",
                                "@line": "6285",
                                "#text": "Scroll the contents of @window, both pixels and children, by the\ngiven amount. @window itself does not move. Portions of the window\nthat the scroll operation brings in from offscreen areas are\ninvalidated. The invalidated region may be bigger than what would\nstrictly be necessary.\n\nFor X11, a minimum area will be invalidated if the window has no\nsubwindows, or if the edges of the window\u2019s parent do not extend\nbeyond the edges of the window. In other cases, a multi-step process\nis used to scroll the window which may produce temporary visual\nartifacts and unnecessary invalidations."
                            },
                            "source-position": {
                                "@filename": "gdk/gdkwindow.h",
                                "@line": "603"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "type": {
                                    "@name": "none",
                                    "@c:type": "void"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "window",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "gdk/gdkwindow.c",
                                        "@line": "6287",
                                        "#text": "a #GdkWindow"
                                    },
                                    "type": {
                                        "@name": "Window",
                                        "@c:type": "GdkWindow*"
                                    }
                                },
                                "parameter": [
                                    {
                                        "@name": "dx",
                                        "@transfer-ownership": "none",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "gdk/gdkwindow.c",
                                            "@line": "6288",
                                            "#text": "Amount to scroll in the X direction"
                                        },
                                        "type": {
                                            "@name": "gint",
                                            "@c:type": "gint"
                                        }
                                    },
                                    {
                                        "@name": "dy",
                                        "@transfer-ownership": "none",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "gdk/gdkwindow.c",
                                            "@line": "6289",
                                            "#text": "Amount to scroll in the Y direction"
                                        },
                                        "type": {
                                            "@name": "gint",
                                            "@c:type": "gint"
                                        }
                                    }
                                ]
                            }
                        },
                        {
                            "@name": "set_accept_focus",
                            "@c:identifier": "gdk_window_set_accept_focus",
                            "@version": "2.4",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkwindow.c",
                                "@line": "10616",
                                "#text": "Setting @accept_focus to %FALSE hints the desktop environment that the\nwindow doesn\u2019t want to receive input focus.\n\nOn X, it is the responsibility of the window manager to interpret this\nhint. ICCCM-compliant window manager usually respect it."
                            },
                            "source-position": {
                                "@filename": "gdk/gdkwindow.h",
                                "@line": "587"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "type": {
                                    "@name": "none",
                                    "@c:type": "void"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "window",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "gdk/gdkwindow.c",
                                        "@line": "10618",
                                        "#text": "a toplevel #GdkWindow"
                                    },
                                    "type": {
                                        "@name": "Window",
                                        "@c:type": "GdkWindow*"
                                    }
                                },
                                "parameter": {
                                    "@name": "accept_focus",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "gdk/gdkwindow.c",
                                        "@line": "10619",
                                        "#text": "%TRUE if the window should receive input focus"
                                    },
                                    "type": {
                                        "@name": "gboolean",
                                        "@c:type": "gboolean"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "set_background",
                            "@c:identifier": "gdk_window_set_background",
                            "@deprecated": "1",
                            "@deprecated-version": "3.4",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkwindow.c",
                                "@line": "6381",
                                "#text": "Sets the background color of @window.\n\nHowever, when using GTK+, influence the background of a widget\nusing a style class or CSS \u2014 if you\u2019re an application \u2014 or with\ngtk_style_context_set_background() \u2014 if you're implementing a\ncustom widget."
                            },
                            "doc-deprecated": {
                                "@xml:space": "preserve",
                                "#text": "Don't use this function"
                            },
                            "source-position": {
                                "@filename": "gdk/gdkwindow.h",
                                "@line": "784"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "type": {
                                    "@name": "none",
                                    "@c:type": "void"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "window",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "gdk/gdkwindow.c",
                                        "@line": "6383",
                                        "#text": "a #GdkWindow"
                                    },
                                    "type": {
                                        "@name": "Window",
                                        "@c:type": "GdkWindow*"
                                    }
                                },
                                "parameter": {
                                    "@name": "color",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "gdk/gdkwindow.c",
                                        "@line": "6384",
                                        "#text": "a #GdkColor"
                                    },
                                    "type": {
                                        "@name": "Color",
                                        "@c:type": "const GdkColor*"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "set_background_pattern",
                            "@c:identifier": "gdk_window_set_background_pattern",
                            "@deprecated": "1",
                            "@deprecated-version": "3.22",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkwindow.c",
                                "@line": "6460",
                                "#text": "Sets the background of @window.\n\nA background of %NULL means that the window won't have any background. On the\nX11 backend it's also possible to inherit the background from the parent\nwindow using gdk_x11_get_parent_relative_pattern().\n\nThe windowing system will normally fill a window with its background\nwhen the window is obscured then exposed."
                            },
                            "doc-deprecated": {
                                "@xml:space": "preserve",
                                "#text": "Don't use this function"
                            },
                            "source-position": {
                                "@filename": "gdk/gdkwindow.h",
                                "@line": "790"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "type": {
                                    "@name": "none",
                                    "@c:type": "void"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "window",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "gdk/gdkwindow.c",
                                        "@line": "6462",
                                        "#text": "a #GdkWindow"
                                    },
                                    "type": {
                                        "@name": "Window",
                                        "@c:type": "GdkWindow*"
                                    }
                                },
                                "parameter": {
                                    "@name": "pattern",
                                    "@transfer-ownership": "none",
                                    "@nullable": "1",
                                    "@allow-none": "1",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "gdk/gdkwindow.c",
                                        "@line": "6463",
                                        "#text": "a pattern to use, or %NULL"
                                    },
                                    "type": {
                                        "@name": "cairo.Pattern",
                                        "@c:type": "cairo_pattern_t*"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "set_background_rgba",
                            "@c:identifier": "gdk_window_set_background_rgba",
                            "@deprecated": "1",
                            "@deprecated-version": "3.22",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkwindow.c",
                                "@line": "6414",
                                "#text": "Sets the background color of @window.\n\nSee also gdk_window_set_background_pattern()."
                            },
                            "doc-deprecated": {
                                "@xml:space": "preserve",
                                "#text": "Don't use this function"
                            },
                            "source-position": {
                                "@filename": "gdk/gdkwindow.h",
                                "@line": "787"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "type": {
                                    "@name": "none",
                                    "@c:type": "void"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "window",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "gdk/gdkwindow.c",
                                        "@line": "6416",
                                        "#text": "a #GdkWindow"
                                    },
                                    "type": {
                                        "@name": "Window",
                                        "@c:type": "GdkWindow*"
                                    }
                                },
                                "parameter": {
                                    "@name": "rgba",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "gdk/gdkwindow.c",
                                        "@line": "6417",
                                        "#text": "a #GdkRGBA color"
                                    },
                                    "type": {
                                        "@name": "RGBA",
                                        "@c:type": "const GdkRGBA*"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "set_child_input_shapes",
                            "@c:identifier": "gdk_window_set_child_input_shapes",
                            "@version": "2.10",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkwindow.c",
                                "@line": "7241",
                                "#text": "Sets the input shape mask of @window to the union of input shape masks\nfor all children of @window, ignoring the input shape mask of @window\nitself. Contrast with gdk_window_merge_child_input_shapes() which includes\nthe input shape mask of @window in the masks to be merged."
                            },
                            "source-position": {
                                "@filename": "gdk/gdkwindow.h",
                                "@line": "656"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "type": {
                                    "@name": "none",
                                    "@c:type": "void"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "window",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "gdk/gdkwindow.c",
                                        "@line": "7243",
                                        "#text": "a #GdkWindow"
                                    },
                                    "type": {
                                        "@name": "Window",
                                        "@c:type": "GdkWindow*"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "set_child_shapes",
                            "@c:identifier": "gdk_window_set_child_shapes",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkwindow.c",
                                "@line": "7117",
                                "#text": "Sets the shape mask of @window to the union of shape masks\nfor all children of @window, ignoring the shape mask of @window\nitself. Contrast with gdk_window_merge_child_shapes() which includes\nthe shape mask of @window in the masks to be merged."
                            },
                            "source-position": {
                                "@filename": "gdk/gdkwindow.h",
                                "@line": "632"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "type": {
                                    "@name": "none",
                                    "@c:type": "void"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "window",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "gdk/gdkwindow.c",
                                        "@line": "7119",
                                        "#text": "a #GdkWindow"
                                    },
                                    "type": {
                                        "@name": "Window",
                                        "@c:type": "GdkWindow*"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "set_composited",
                            "@c:identifier": "gdk_window_set_composited",
                            "@version": "2.12",
                            "@deprecated": "1",
                            "@deprecated-version": "3.16",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkwindow.c",
                                "@line": "7388",
                                "#text": "Sets a #GdkWindow as composited, or unsets it. Composited\nwindows do not automatically have their contents drawn to\nthe screen. Drawing is redirected to an offscreen buffer\nand an expose event is emitted on the parent of the composited\nwindow. It is the responsibility of the parent\u2019s expose handler\nto manually merge the off-screen content onto the screen in\nwhatever way it sees fit.\n\nIt only makes sense for child windows to be composited; see\ngdk_window_set_opacity() if you need translucent toplevel\nwindows.\n\nAn additional effect of this call is that the area of this\nwindow is no longer clipped from regions marked for\ninvalidation on its parent. Draws done on the parent\nwindow are also no longer clipped by the child.\n\nThis call is only supported on some systems (currently,\nonly X11 with new enough Xcomposite and Xdamage extensions).\nYou must call gdk_display_supports_composite() to check if\nsetting a window as composited is supported before\nattempting to do so."
                            },
                            "doc-deprecated": {
                                "@xml:space": "preserve",
                                "#text": "Compositing is an outdated technology that\n  only ever worked on X11."
                            },
                            "source-position": {
                                "@filename": "gdk/gdkwindow.h",
                                "@line": "637"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "type": {
                                    "@name": "none",
                                    "@c:type": "void"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "window",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "gdk/gdkwindow.c",
                                        "@line": "7390",
                                        "#text": "a #GdkWindow"
                                    },
                                    "type": {
                                        "@name": "Window",
                                        "@c:type": "GdkWindow*"
                                    }
                                },
                                "parameter": {
                                    "@name": "composited",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "gdk/gdkwindow.c",
                                        "@line": "7391",
                                        "#text": "%TRUE to set the window as composited"
                                    },
                                    "type": {
                                        "@name": "gboolean",
                                        "@c:type": "gboolean"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "set_cursor",
                            "@c:identifier": "gdk_window_set_cursor",
                            "@glib:set-property": "cursor",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkwindow.c",
                                "@line": "6572",
                                "#text": "Sets the default mouse pointer for a #GdkWindow.\n\nNote that @cursor must be for the same display as @window.\n\nUse gdk_cursor_new_for_display() or gdk_cursor_new_from_pixbuf() to\ncreate the cursor. To make the cursor invisible, use %GDK_BLANK_CURSOR.\nPassing %NULL for the @cursor argument to gdk_window_set_cursor() means\nthat @window will use the cursor of its parent window. Most windows\nshould use this default."
                            },
                            "source-position": {
                                "@filename": "gdk/gdkwindow.h",
                                "@line": "796"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "type": {
                                    "@name": "none",
                                    "@c:type": "void"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "window",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "gdk/gdkwindow.c",
                                        "@line": "6574",
                                        "#text": "a #GdkWindow"
                                    },
                                    "type": {
                                        "@name": "Window",
                                        "@c:type": "GdkWindow*"
                                    }
                                },
                                "parameter": {
                                    "@name": "cursor",
                                    "@transfer-ownership": "none",
                                    "@nullable": "1",
                                    "@allow-none": "1",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "gdk/gdkwindow.c",
                                        "@line": "6575",
                                        "#text": "a cursor"
                                    },
                                    "type": {
                                        "@name": "Cursor",
                                        "@c:type": "GdkCursor*"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "set_decorations",
                            "@c:identifier": "gdk_window_set_decorations",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkwindow.c",
                                "@line": "11087",
                                "#text": "\u201cDecorations\u201d are the features the window manager adds to a toplevel #GdkWindow.\nThis function sets the traditional Motif window manager hints that tell the\nwindow manager which decorations you would like your window to have.\nUsually you should use gtk_window_set_decorated() on a #GtkWindow instead of\nusing the GDK function directly.\n\nThe @decorations argument is the logical OR of the fields in\nthe #GdkWMDecoration enumeration. If #GDK_DECOR_ALL is included in the\nmask, the other bits indicate which decorations should be turned off.\nIf #GDK_DECOR_ALL is not included, then the other bits indicate\nwhich decorations should be turned on.\n\nMost window managers honor a decorations hint of 0 to disable all decorations,\nbut very few honor all possible combinations of bits."
                            },
                            "source-position": {
                                "@filename": "gdk/gdkwindow.h",
                                "@line": "928"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "type": {
                                    "@name": "none",
                                    "@c:type": "void"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "window",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "gdk/gdkwindow.c",
                                        "@line": "11089",
                                        "#text": "a toplevel #GdkWindow"
                                    },
                                    "type": {
                                        "@name": "Window",
                                        "@c:type": "GdkWindow*"
                                    }
                                },
                                "parameter": {
                                    "@name": "decorations",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "gdk/gdkwindow.c",
                                        "@line": "11090",
                                        "#text": "decoration hint mask"
                                    },
                                    "type": {
                                        "@name": "WMDecoration",
                                        "@c:type": "GdkWMDecoration"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "set_device_cursor",
                            "@c:identifier": "gdk_window_set_device_cursor",
                            "@version": "3.0",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkwindow.c",
                                "@line": "6663",
                                "#text": "Sets a specific #GdkCursor for a given device when it gets inside @window.\nUse gdk_cursor_new_for_display() or gdk_cursor_new_from_pixbuf() to create\nthe cursor. To make the cursor invisible, use %GDK_BLANK_CURSOR. Passing\n%NULL for the @cursor argument to gdk_window_set_cursor() means that\n@window will use the cursor of its parent window. Most windows should\nuse this default."
                            },
                            "source-position": {
                                "@filename": "gdk/gdkwindow.h",
                                "@line": "801"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "type": {
                                    "@name": "none",
                                    "@c:type": "void"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "window",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "gdk/gdkwindow.c",
                                        "@line": "6665",
                                        "#text": "a #GdkWindow"
                                    },
                                    "type": {
                                        "@name": "Window",
                                        "@c:type": "GdkWindow*"
                                    }
                                },
                                "parameter": [
                                    {
                                        "@name": "device",
                                        "@transfer-ownership": "none",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "gdk/gdkwindow.c",
                                            "@line": "6666",
                                            "#text": "a master, pointer #GdkDevice"
                                        },
                                        "type": {
                                            "@name": "Device",
                                            "@c:type": "GdkDevice*"
                                        }
                                    },
                                    {
                                        "@name": "cursor",
                                        "@transfer-ownership": "none",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "gdk/gdkwindow.c",
                                            "@line": "6667",
                                            "#text": "a #GdkCursor"
                                        },
                                        "type": {
                                            "@name": "Cursor",
                                            "@c:type": "GdkCursor*"
                                        }
                                    }
                                ]
                            }
                        },
                        {
                            "@name": "set_device_events",
                            "@c:identifier": "gdk_window_set_device_events",
                            "@version": "3.0",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkwindow.c",
                                "@line": "5874",
                                "#text": "Sets the event mask for a given device (Normally a floating device, not\nattached to any visible pointer) to @window. For example, an event mask\nincluding #GDK_BUTTON_PRESS_MASK means the window should report button\npress events. The event mask is the bitwise OR of values from the\n#GdkEventMask enumeration.\n\nSee the [input handling overview][event-masks] for details."
                            },
                            "source-position": {
                                "@filename": "gdk/gdkwindow.h",
                                "@line": "901"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "type": {
                                    "@name": "none",
                                    "@c:type": "void"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "window",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "gdk/gdkwindow.c",
                                        "@line": "5876",
                                        "#text": "a #GdkWindow"
                                    },
                                    "type": {
                                        "@name": "Window",
                                        "@c:type": "GdkWindow*"
                                    }
                                },
                                "parameter": [
                                    {
                                        "@name": "device",
                                        "@transfer-ownership": "none",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "gdk/gdkwindow.c",
                                            "@line": "5877",
                                            "#text": "#GdkDevice to enable events for."
                                        },
                                        "type": {
                                            "@name": "Device",
                                            "@c:type": "GdkDevice*"
                                        }
                                    },
                                    {
                                        "@name": "event_mask",
                                        "@transfer-ownership": "none",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "gdk/gdkwindow.c",
                                            "@line": "5878",
                                            "#text": "event mask for @window"
                                        },
                                        "type": {
                                            "@name": "EventMask",
                                            "@c:type": "GdkEventMask"
                                        }
                                    }
                                ]
                            }
                        },
                        {
                            "@name": "set_event_compression",
                            "@c:identifier": "gdk_window_set_event_compression",
                            "@version": "3.12",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkwindow.c",
                                "@line": "10659",
                                "#text": "Determines whether or not extra unprocessed motion events in\nthe event queue can be discarded. If %TRUE only the most recent\nevent will be delivered.\n\nSome types of applications, e.g. paint programs, need to see all\nmotion events and will benefit from turning off event compression.\n\nBy default, event compression is enabled."
                            },
                            "source-position": {
                                "@filename": "gdk/gdkwindow.h",
                                "@line": "1120"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "type": {
                                    "@name": "none",
                                    "@c:type": "void"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "window",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "gdk/gdkwindow.c",
                                        "@line": "10661",
                                        "#text": "a #GdkWindow"
                                    },
                                    "type": {
                                        "@name": "Window",
                                        "@c:type": "GdkWindow*"
                                    }
                                },
                                "parameter": {
                                    "@name": "event_compression",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "gdk/gdkwindow.c",
                                        "@line": "10662",
                                        "#text": "%TRUE if motion events should be compressed"
                                    },
                                    "type": {
                                        "@name": "gboolean",
                                        "@c:type": "gboolean"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "set_events",
                            "@c:identifier": "gdk_window_set_events",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkwindow.c",
                                "@line": "5804",
                                "#text": "The event mask for a window determines which events will be reported\nfor that window from all master input devices. For example, an event mask\nincluding #GDK_BUTTON_PRESS_MASK means the window should report button\npress events. The event mask is the bitwise OR of values from the\n#GdkEventMask enumeration.\n\nSee the [input handling overview][event-masks] for details."
                            },
                            "source-position": {
                                "@filename": "gdk/gdkwindow.h",
                                "@line": "898"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "type": {
                                    "@name": "none",
                                    "@c:type": "void"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "window",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "gdk/gdkwindow.c",
                                        "@line": "5806",
                                        "#text": "a #GdkWindow"
                                    },
                                    "type": {
                                        "@name": "Window",
                                        "@c:type": "GdkWindow*"
                                    }
                                },
                                "parameter": {
                                    "@name": "event_mask",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "gdk/gdkwindow.c",
                                        "@line": "5807",
                                        "#text": "event mask for @window"
                                    },
                                    "type": {
                                        "@name": "EventMask",
                                        "@c:type": "GdkEventMask"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "set_focus_on_map",
                            "@c:identifier": "gdk_window_set_focus_on_map",
                            "@version": "2.6",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkwindow.c",
                                "@line": "10636",
                                "#text": "Setting @focus_on_map to %FALSE hints the desktop environment that the\nwindow doesn\u2019t want to receive input focus when it is mapped.\nfocus_on_map should be turned off for windows that aren\u2019t triggered\ninteractively (such as popups from network activity).\n\nOn X, it is the responsibility of the window manager to interpret\nthis hint. Window managers following the freedesktop.org window\nmanager extension specification should respect it."
                            },
                            "source-position": {
                                "@filename": "gdk/gdkwindow.h",
                                "@line": "592"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "type": {
                                    "@name": "none",
                                    "@c:type": "void"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "window",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "gdk/gdkwindow.c",
                                        "@line": "10638",
                                        "#text": "a toplevel #GdkWindow"
                                    },
                                    "type": {
                                        "@name": "Window",
                                        "@c:type": "GdkWindow*"
                                    }
                                },
                                "parameter": {
                                    "@name": "focus_on_map",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "gdk/gdkwindow.c",
                                        "@line": "10639",
                                        "#text": "%TRUE if the window should receive input focus when mapped"
                                    },
                                    "type": {
                                        "@name": "gboolean",
                                        "@c:type": "gboolean"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "set_fullscreen_mode",
                            "@c:identifier": "gdk_window_set_fullscreen_mode",
                            "@version": "3.8",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkwindow.c",
                                "@line": "10917",
                                "#text": "Specifies whether the @window should span over all monitors (in a multi-head\nsetup) or only the current monitor when in fullscreen mode.\n\nThe @mode argument is from the #GdkFullscreenMode enumeration.\nIf #GDK_FULLSCREEN_ON_ALL_MONITORS is specified, the fullscreen @window will\nspan over all monitors from the #GdkScreen.\n\nOn X11, searches through the list of monitors from the #GdkScreen the ones\nwhich delimit the 4 edges of the entire #GdkScreen and will ask the window\nmanager to span the @window over these monitors.\n\nIf the XINERAMA extension is not available or not usable, this function\nhas no effect.\n\nNot all window managers support this, so you can\u2019t rely on the fullscreen\nwindow to span over the multiple monitors when #GDK_FULLSCREEN_ON_ALL_MONITORS\nis specified."
                            },
                            "source-position": {
                                "@filename": "gdk/gdkwindow.h",
                                "@line": "971"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "type": {
                                    "@name": "none",
                                    "@c:type": "void"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "window",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "gdk/gdkwindow.c",
                                        "@line": "10919",
                                        "#text": "a toplevel #GdkWindow"
                                    },
                                    "type": {
                                        "@name": "Window",
                                        "@c:type": "GdkWindow*"
                                    }
                                },
                                "parameter": {
                                    "@name": "mode",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "gdk/gdkwindow.c",
                                        "@line": "10920",
                                        "#text": "fullscreen mode"
                                    },
                                    "type": {
                                        "@name": "FullscreenMode",
                                        "@c:type": "GdkFullscreenMode"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "set_functions",
                            "@c:identifier": "gdk_window_set_functions",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkwindow.c",
                                "@line": "11132",
                                "#text": "Sets hints about the window management functions to make available\nvia buttons on the window frame.\n\nOn the X backend, this function sets the traditional Motif window\nmanager hint for this purpose. However, few window managers do\nanything reliable or interesting with this hint. Many ignore it\nentirely.\n\nThe @functions argument is the logical OR of values from the\n#GdkWMFunction enumeration. If the bitmask includes #GDK_FUNC_ALL,\nthen the other bits indicate which functions to disable; if\nit doesn\u2019t include #GDK_FUNC_ALL, it indicates which functions to\nenable."
                            },
                            "source-position": {
                                "@filename": "gdk/gdkwindow.h",
                                "@line": "934"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "type": {
                                    "@name": "none",
                                    "@c:type": "void"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "window",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "gdk/gdkwindow.c",
                                        "@line": "11134",
                                        "#text": "a toplevel #GdkWindow"
                                    },
                                    "type": {
                                        "@name": "Window",
                                        "@c:type": "GdkWindow*"
                                    }
                                },
                                "parameter": {
                                    "@name": "functions",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "gdk/gdkwindow.c",
                                        "@line": "11135",
                                        "#text": "bitmask of operations to allow on @window"
                                    },
                                    "type": {
                                        "@name": "WMFunction",
                                        "@c:type": "GdkWMFunction"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "set_geometry_hints",
                            "@c:identifier": "gdk_window_set_geometry_hints",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkwindow.c",
                                "@line": "10424",
                                "#text": "Sets the geometry hints for @window. Hints flagged in @geom_mask\nare set, hints not flagged in @geom_mask are unset.\nTo unset all hints, use a @geom_mask of 0 and a @geometry of %NULL.\n\nThis function provides hints to the windowing system about\nacceptable sizes for a toplevel window. The purpose of\nthis is to constrain user resizing, but the windowing system\nwill typically  (but is not required to) also constrain the\ncurrent size of the window to the provided values and\nconstrain programatic resizing via gdk_window_resize() or\ngdk_window_move_resize().\n\nNote that on X11, this effect has no effect on windows\nof type %GDK_WINDOW_TEMP or windows where override redirect\nhas been turned on via gdk_window_set_override_redirect()\nsince these windows are not resizable by the user.\n\nSince you can\u2019t count on the windowing system doing the\nconstraints for programmatic resizes, you should generally\ncall gdk_window_constrain_size() yourself to determine\nappropriate sizes."
                            },
                            "source-position": {
                                "@filename": "gdk/gdkwindow.h",
                                "@line": "739"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "type": {
                                    "@name": "none",
                                    "@c:type": "void"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "window",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "gdk/gdkwindow.c",
                                        "@line": "10426",
                                        "#text": "a toplevel #GdkWindow"
                                    },
                                    "type": {
                                        "@name": "Window",
                                        "@c:type": "GdkWindow*"
                                    }
                                },
                                "parameter": [
                                    {
                                        "@name": "geometry",
                                        "@transfer-ownership": "none",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "gdk/gdkwindow.c",
                                            "@line": "10427",
                                            "#text": "geometry hints"
                                        },
                                        "type": {
                                            "@name": "Geometry",
                                            "@c:type": "const GdkGeometry*"
                                        }
                                    },
                                    {
                                        "@name": "geom_mask",
                                        "@transfer-ownership": "none",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "gdk/gdkwindow.c",
                                            "@line": "10428",
                                            "#text": "bitmask indicating fields of @geometry to pay attention to"
                                        },
                                        "type": {
                                            "@name": "WindowHints",
                                            "@c:type": "GdkWindowHints"
                                        }
                                    }
                                ]
                            }
                        },
                        {
                            "@name": "set_group",
                            "@c:identifier": "gdk_window_set_group",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkwindow.c",
                                "@line": "11064",
                                "#text": "Sets the group leader window for @window. By default,\nGDK sets the group leader for all toplevel windows\nto a global window implicitly created by GDK. With this function\nyou can override this default.\n\nThe group leader window allows the window manager to distinguish\nall windows that belong to a single application. It may for example\nallow users to minimize/unminimize all windows belonging to an\napplication at once. You should only set a non-default group window\nif your application pretends to be multiple applications."
                            },
                            "source-position": {
                                "@filename": "gdk/gdkwindow.h",
                                "@line": "923"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "type": {
                                    "@name": "none",
                                    "@c:type": "void"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "window",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "gdk/gdkwindow.c",
                                        "@line": "11066",
                                        "#text": "a toplevel #GdkWindow"
                                    },
                                    "type": {
                                        "@name": "Window",
                                        "@c:type": "GdkWindow*"
                                    }
                                },
                                "parameter": {
                                    "@name": "leader",
                                    "@transfer-ownership": "none",
                                    "@nullable": "1",
                                    "@allow-none": "1",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "gdk/gdkwindow.c",
                                        "@line": "11067",
                                        "#text": "group leader window, or %NULL to restore the default group leader window"
                                    },
                                    "type": {
                                        "@name": "Window",
                                        "@c:type": "GdkWindow*"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "set_icon_list",
                            "@c:identifier": "gdk_window_set_icon_list",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkwindow.c",
                                "@line": "10702",
                                "#text": "Sets a list of icons for the window. One of these will be used\nto represent the window when it has been iconified. The icon is\nusually shown in an icon box or some sort of task bar. Which icon\nsize is shown depends on the window manager. The window manager\ncan scale the icon  but setting several size icons can give better\nimage quality since the window manager may only need to scale the\nicon by a small amount or not at all.\n\nNote that some platforms don't support window icons."
                            },
                            "source-position": {
                                "@filename": "gdk/gdkwindow.h",
                                "@line": "917"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "type": {
                                    "@name": "none",
                                    "@c:type": "void"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "window",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "gdk/gdkwindow.c",
                                        "@line": "10704",
                                        "#text": "The #GdkWindow toplevel window to set the icon of."
                                    },
                                    "type": {
                                        "@name": "Window",
                                        "@c:type": "GdkWindow*"
                                    }
                                },
                                "parameter": {
                                    "@name": "pixbufs",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "gdk/gdkwindow.c",
                                        "@line": "10705",
                                        "#text": "A list of pixbufs, of different sizes."
                                    },
                                    "type": {
                                        "@name": "GLib.List",
                                        "@c:type": "GList*",
                                        "type": {
                                            "@name": "GdkPixbuf.Pixbuf"
                                        }
                                    }
                                }
                            }
                        },
                        {
                            "@name": "set_icon_name",
                            "@c:identifier": "gdk_window_set_icon_name",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkwindow.c",
                                "@line": "10725",
                                "#text": "Windows may have a name used while minimized, distinct from the\nname they display in their titlebar. Most of the time this is a bad\nidea from a user interface standpoint. But you can set such a name\nwith this function, if you like.\n\nAfter calling this with a non-%NULL @name, calls to gdk_window_set_title()\nwill not update the icon title.\n\nUsing %NULL for @name unsets the icon title; further calls to\ngdk_window_set_title() will again update the icon title as well.\n\nNote that some platforms don't support window icons."
                            },
                            "source-position": {
                                "@filename": "gdk/gdkwindow.h",
                                "@line": "920"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "type": {
                                    "@name": "none",
                                    "@c:type": "void"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "window",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "gdk/gdkwindow.c",
                                        "@line": "10727",
                                        "#text": "a toplevel #GdkWindow"
                                    },
                                    "type": {
                                        "@name": "Window",
                                        "@c:type": "GdkWindow*"
                                    }
                                },
                                "parameter": {
                                    "@name": "name",
                                    "@transfer-ownership": "none",
                                    "@nullable": "1",
                                    "@allow-none": "1",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "gdk/gdkwindow.c",
                                        "@line": "10728",
                                        "#text": "name of window while iconified (minimized)"
                                    },
                                    "type": {
                                        "@name": "utf8",
                                        "@c:type": "const gchar*"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "set_invalidate_handler",
                            "@c:identifier": "gdk_window_set_invalidate_handler",
                            "@version": "3.10",
                            "@introspectable": "0",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkwindow.c",
                                "@line": "4300",
                                "#text": "Registers an invalidate handler for a specific window. This\nwill get called whenever a region in the window or its children\nis invalidated.\n\nThis can be used to record the invalidated region, which is\nuseful if you are keeping an offscreen copy of some region\nand want to keep it up to date. You can also modify the\ninvalidated region in case you\u2019re doing some effect where\ne.g. a child widget appears in multiple places."
                            },
                            "source-position": {
                                "@filename": "gdk/gdkwindow.h",
                                "@line": "711"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "type": {
                                    "@name": "none",
                                    "@c:type": "void"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "window",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "gdk/gdkwindow.c",
                                        "@line": "4302",
                                        "#text": "a #GdkWindow"
                                    },
                                    "type": {
                                        "@name": "Window",
                                        "@c:type": "GdkWindow*"
                                    }
                                },
                                "parameter": {
                                    "@name": "handler",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "gdk/gdkwindow.c",
                                        "@line": "4303",
                                        "#text": "a #GdkWindowInvalidateHandlerFunc callback function"
                                    },
                                    "type": {
                                        "@name": "WindowInvalidateHandlerFunc",
                                        "@c:type": "GdkWindowInvalidateHandlerFunc"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "set_keep_above",
                            "@c:identifier": "gdk_window_set_keep_above",
                            "@version": "2.4",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkwindow.c",
                                "@line": "11001",
                                "#text": "Set if @window must be kept above other windows. If the\nwindow was already above, then this function does nothing.\n\nOn X11, asks the window manager to keep @window above, if the window\nmanager supports this operation. Not all window managers support\nthis, and some deliberately ignore it or don\u2019t have a concept of\n\u201ckeep above\u201d; so you can\u2019t rely on the window being kept above.\nBut it will happen with most standard window managers,\nand GDK makes a best effort to get it to happen."
                            },
                            "source-position": {
                                "@filename": "gdk/gdkwindow.h",
                                "@line": "979"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "type": {
                                    "@name": "none",
                                    "@c:type": "void"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "window",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "gdk/gdkwindow.c",
                                        "@line": "11003",
                                        "#text": "a toplevel #GdkWindow"
                                    },
                                    "type": {
                                        "@name": "Window",
                                        "@c:type": "GdkWindow*"
                                    }
                                },
                                "parameter": {
                                    "@name": "setting",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "gdk/gdkwindow.c",
                                        "@line": "11004",
                                        "#text": "whether to keep @window above other windows"
                                    },
                                    "type": {
                                        "@name": "gboolean",
                                        "@c:type": "gboolean"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "set_keep_below",
                            "@c:identifier": "gdk_window_set_keep_below",
                            "@version": "2.4",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkwindow.c",
                                "@line": "11025",
                                "#text": "Set if @window must be kept below other windows. If the\nwindow was already below, then this function does nothing.\n\nOn X11, asks the window manager to keep @window below, if the window\nmanager supports this operation. Not all window managers support\nthis, and some deliberately ignore it or don\u2019t have a concept of\n\u201ckeep below\u201d; so you can\u2019t rely on the window being kept below.\nBut it will happen with most standard window managers,\nand GDK makes a best effort to get it to happen."
                            },
                            "source-position": {
                                "@filename": "gdk/gdkwindow.h",
                                "@line": "982"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "type": {
                                    "@name": "none",
                                    "@c:type": "void"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "window",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "gdk/gdkwindow.c",
                                        "@line": "11027",
                                        "#text": "a toplevel #GdkWindow"
                                    },
                                    "type": {
                                        "@name": "Window",
                                        "@c:type": "GdkWindow*"
                                    }
                                },
                                "parameter": {
                                    "@name": "setting",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "gdk/gdkwindow.c",
                                        "@line": "11028",
                                        "#text": "whether to keep @window below other windows"
                                    },
                                    "type": {
                                        "@name": "gboolean",
                                        "@c:type": "gboolean"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "set_modal_hint",
                            "@c:identifier": "gdk_window_set_modal_hint",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkwindow.c",
                                "@line": "10343",
                                "#text": "The application can use this hint to tell the window manager\nthat a certain window has modal behaviour. The window manager\ncan use this information to handle modal windows in a special\nway.\n\nYou should only use this on windows for which you have\npreviously called gdk_window_set_transient_for()"
                            },
                            "source-position": {
                                "@filename": "gdk/gdkwindow.h",
                                "@line": "725"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "type": {
                                    "@name": "none",
                                    "@c:type": "void"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "window",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "gdk/gdkwindow.c",
                                        "@line": "10345",
                                        "#text": "A toplevel #GdkWindow"
                                    },
                                    "type": {
                                        "@name": "Window",
                                        "@c:type": "GdkWindow*"
                                    }
                                },
                                "parameter": {
                                    "@name": "modal",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "gdk/gdkwindow.c",
                                        "@line": "10346",
                                        "#text": "%TRUE if the window is modal, %FALSE otherwise."
                                    },
                                    "type": {
                                        "@name": "gboolean",
                                        "@c:type": "gboolean"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "set_opacity",
                            "@c:identifier": "gdk_window_set_opacity",
                            "@version": "2.12",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkwindow.c",
                                "@line": "11308",
                                "#text": "Set @window to render as partially transparent,\nwith opacity 0 being fully transparent and 1 fully opaque. (Values\nof the opacity parameter are clamped to the [0,1] range.)\n\nFor toplevel windows this depends on support from the windowing system\nthat may not always be there. For instance, On X11, this works only on\nX screens with a compositing manager running. On Wayland, there is no\nper-window opacity value that the compositor would apply. Instead, use\n`gdk_window_set_opaque_region (window, NULL)` to tell the compositor\nthat the entire window is (potentially) non-opaque, and draw your content\nwith alpha, or use gtk_widget_set_opacity() to set an overall opacity\nfor your widgets.\n\nFor child windows this function only works for non-native windows.\n\nFor setting up per-pixel alpha topelevels, see gdk_screen_get_rgba_visual(),\nand for non-toplevels, see gdk_window_set_composited().\n\nSupport for non-toplevel windows was added in 3.8."
                            },
                            "source-position": {
                                "@filename": "gdk/gdkwindow.h",
                                "@line": "985"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "type": {
                                    "@name": "none",
                                    "@c:type": "void"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "window",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "gdk/gdkwindow.c",
                                        "@line": "11310",
                                        "#text": "a top-level or non-native #GdkWindow"
                                    },
                                    "type": {
                                        "@name": "Window",
                                        "@c:type": "GdkWindow*"
                                    }
                                },
                                "parameter": {
                                    "@name": "opacity",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "gdk/gdkwindow.c",
                                        "@line": "11311",
                                        "#text": "opacity"
                                    },
                                    "type": {
                                        "@name": "gdouble",
                                        "@c:type": "gdouble"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "set_opaque_region",
                            "@c:identifier": "gdk_window_set_opaque_region",
                            "@version": "3.10",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkwindow.c",
                                "@line": "11882",
                                "#text": "For optimisation purposes, compositing window managers may\nlike to not draw obscured regions of windows, or turn off blending\nduring for these regions. With RGB windows with no transparency,\nthis is just the shape of the window, but with ARGB32 windows, the\ncompositor does not know what regions of the window are transparent\nor not.\n\nThis function only works for toplevel windows.\n\nGTK+ will update this property automatically if\nthe @window background is opaque, as we know where the opaque regions\nare. If your window background is not opaque, please update this\nproperty in your #GtkWidget::style-updated handler."
                            },
                            "source-position": {
                                "@filename": "gdk/gdkwindow.h",
                                "@line": "1116"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "type": {
                                    "@name": "none",
                                    "@c:type": "void"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "window",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "gdk/gdkwindow.c",
                                        "@line": "11884",
                                        "#text": "a top-level or non-native #GdkWindow"
                                    },
                                    "type": {
                                        "@name": "Window",
                                        "@c:type": "GdkWindow*"
                                    }
                                },
                                "parameter": {
                                    "@name": "region",
                                    "@transfer-ownership": "none",
                                    "@nullable": "1",
                                    "@allow-none": "1",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "gdk/gdkwindow.c",
                                        "@line": "11885",
                                        "#text": "a region, or %NULL"
                                    },
                                    "type": {
                                        "@name": "cairo.Region",
                                        "@c:type": "cairo_region_t*"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "set_override_redirect",
                            "@c:identifier": "gdk_window_set_override_redirect",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkwindow.c",
                                "@line": "10594",
                                "#text": "An override redirect window is not under the control of the window manager.\nThis means it won\u2019t have a titlebar, won\u2019t be minimizable, etc. - it will\nbe entirely under the control of the application. The window manager\ncan\u2019t see the override redirect window at all.\n\nOverride redirect should only be used for short-lived temporary\nwindows, such as popup menus. #GtkMenu uses an override redirect\nwindow in its implementation, for example."
                            },
                            "source-position": {
                                "@filename": "gdk/gdkwindow.h",
                                "@line": "582"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "type": {
                                    "@name": "none",
                                    "@c:type": "void"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "window",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "gdk/gdkwindow.c",
                                        "@line": "10596",
                                        "#text": "a toplevel #GdkWindow"
                                    },
                                    "type": {
                                        "@name": "Window",
                                        "@c:type": "GdkWindow*"
                                    }
                                },
                                "parameter": {
                                    "@name": "override_redirect",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "gdk/gdkwindow.c",
                                        "@line": "10597",
                                        "#text": "%TRUE if window should be override redirect"
                                    },
                                    "type": {
                                        "@name": "gboolean",
                                        "@c:type": "gboolean"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "set_pass_through",
                            "@c:identifier": "gdk_window_set_pass_through",
                            "@version": "3.18",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkwindow.c",
                                "@line": "7260",
                                "#text": "Sets whether input to the window is passed through to the window\nbelow.\n\nThe default value of this is %FALSE, which means that pointer\nevents that happen inside the window are send first to the window,\nbut if the event is not selected by the event mask then the event\nis sent to the parent window, and so on up the hierarchy.\n\nIf @pass_through is %TRUE then such pointer events happen as if the\nwindow wasn't there at all, and thus will be sent first to any\nwindows below @window. This is useful if the window is used in a\ntransparent fashion. In the terminology of the web this would be called\n\"pointer-events: none\".\n\nNote that a window with @pass_through %TRUE can still have a subwindow\nwithout pass through, so you can get events on a subset of a window. And in\nthat cases you would get the in-between related events such as the pointer\nenter/leave events on its way to the destination window."
                            },
                            "source-position": {
                                "@filename": "gdk/gdkwindow.h",
                                "@line": "662"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "type": {
                                    "@name": "none",
                                    "@c:type": "void"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "window",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "gdk/gdkwindow.c",
                                        "@line": "7262",
                                        "#text": "a #GdkWindow"
                                    },
                                    "type": {
                                        "@name": "Window",
                                        "@c:type": "GdkWindow*"
                                    }
                                },
                                "parameter": {
                                    "@name": "pass_through",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "gdk/gdkwindow.c",
                                        "@line": "7263",
                                        "#text": "a boolean"
                                    },
                                    "type": {
                                        "@name": "gboolean",
                                        "@c:type": "gboolean"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "set_role",
                            "@c:identifier": "gdk_window_set_role",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkwindow.c",
                                "@line": "10481",
                                "#text": "When using GTK+, typically you should use gtk_window_set_role() instead\nof this low-level function.\n\nThe window manager and session manager use a window\u2019s role to\ndistinguish it from other kinds of window in the same application.\nWhen an application is restarted after being saved in a previous\nsession, all windows with the same title and role are treated as\ninterchangeable.  So if you have two windows with the same title\nthat should be distinguished for session management purposes, you\nshould set the role on those windows. It doesn\u2019t matter what string\nyou use for the role, as long as you have a different role for each\nnon-interchangeable kind of window."
                            },
                            "source-position": {
                                "@filename": "gdk/gdkwindow.h",
                                "@line": "775"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "type": {
                                    "@name": "none",
                                    "@c:type": "void"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "window",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "gdk/gdkwindow.c",
                                        "@line": "10483",
                                        "#text": "a toplevel #GdkWindow"
                                    },
                                    "type": {
                                        "@name": "Window",
                                        "@c:type": "GdkWindow*"
                                    }
                                },
                                "parameter": {
                                    "@name": "role",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "gdk/gdkwindow.c",
                                        "@line": "10484",
                                        "#text": "a string indicating its role"
                                    },
                                    "type": {
                                        "@name": "utf8",
                                        "@c:type": "const gchar*"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "set_shadow_width",
                            "@c:identifier": "gdk_window_set_shadow_width",
                            "@version": "3.12",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkwindow.c",
                                "@line": "11926",
                                "#text": "Newer GTK+ windows using client-side decorations use extra geometry\naround their frames for effects like shadows and invisible borders.\nWindow managers that want to maximize windows or snap to edges need\nto know where the extents of the actual frame lie, so that users\ndon\u2019t feel like windows are snapping against random invisible edges.\n\nNote that this property is automatically updated by GTK+, so this\nfunction should only be used by applications which do not use GTK+\nto create toplevel windows."
                            },
                            "source-position": {
                                "@filename": "gdk/gdkwindow.h",
                                "@line": "1126"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "type": {
                                    "@name": "none",
                                    "@c:type": "void"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "window",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "gdk/gdkwindow.c",
                                        "@line": "11928",
                                        "#text": "a #GdkWindow"
                                    },
                                    "type": {
                                        "@name": "Window",
                                        "@c:type": "GdkWindow*"
                                    }
                                },
                                "parameter": [
                                    {
                                        "@name": "left",
                                        "@transfer-ownership": "none",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "gdk/gdkwindow.c",
                                            "@line": "11929",
                                            "#text": "The left extent"
                                        },
                                        "type": {
                                            "@name": "gint",
                                            "@c:type": "gint"
                                        }
                                    },
                                    {
                                        "@name": "right",
                                        "@transfer-ownership": "none",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "gdk/gdkwindow.c",
                                            "@line": "11930",
                                            "#text": "The right extent"
                                        },
                                        "type": {
                                            "@name": "gint",
                                            "@c:type": "gint"
                                        }
                                    },
                                    {
                                        "@name": "top",
                                        "@transfer-ownership": "none",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "gdk/gdkwindow.c",
                                            "@line": "11931",
                                            "#text": "The top extent"
                                        },
                                        "type": {
                                            "@name": "gint",
                                            "@c:type": "gint"
                                        }
                                    },
                                    {
                                        "@name": "bottom",
                                        "@transfer-ownership": "none",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "gdk/gdkwindow.c",
                                            "@line": "11932",
                                            "#text": "The bottom extent"
                                        },
                                        "type": {
                                            "@name": "gint",
                                            "@c:type": "gint"
                                        }
                                    }
                                ]
                            }
                        },
                        {
                            "@name": "set_skip_pager_hint",
                            "@c:identifier": "gdk_window_set_skip_pager_hint",
                            "@version": "2.2",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkwindow.c",
                                "@line": "10384",
                                "#text": "Toggles whether a window should appear in a pager (workspace\nswitcher, or other desktop utility program that displays a small\nthumbnail representation of the windows on the desktop). If a\nwindow\u2019s semantic type as specified with gdk_window_set_type_hint()\nalready fully describes the window, this function should\nnot be called in addition, instead you should\nallow the window to be treated according to standard policy for\nits semantic type."
                            },
                            "source-position": {
                                "@filename": "gdk/gdkwindow.h",
                                "@line": "732"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "type": {
                                    "@name": "none",
                                    "@c:type": "void"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "window",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "gdk/gdkwindow.c",
                                        "@line": "10386",
                                        "#text": "a toplevel #GdkWindow"
                                    },
                                    "type": {
                                        "@name": "Window",
                                        "@c:type": "GdkWindow*"
                                    }
                                },
                                "parameter": {
                                    "@name": "skips_pager",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "gdk/gdkwindow.c",
                                        "@line": "10387",
                                        "#text": "%TRUE to skip the pager"
                                    },
                                    "type": {
                                        "@name": "gboolean",
                                        "@c:type": "gboolean"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "set_skip_taskbar_hint",
                            "@c:identifier": "gdk_window_set_skip_taskbar_hint",
                            "@version": "2.2",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkwindow.c",
                                "@line": "10363",
                                "#text": "Toggles whether a window should appear in a task list or window\nlist. If a window\u2019s semantic type as specified with\ngdk_window_set_type_hint() already fully describes the window, this\nfunction should not be called in addition,\ninstead you should allow the window to be treated according to\nstandard policy for its semantic type."
                            },
                            "source-position": {
                                "@filename": "gdk/gdkwindow.h",
                                "@line": "729"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "type": {
                                    "@name": "none",
                                    "@c:type": "void"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "window",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "gdk/gdkwindow.c",
                                        "@line": "10365",
                                        "#text": "a toplevel #GdkWindow"
                                    },
                                    "type": {
                                        "@name": "Window",
                                        "@c:type": "GdkWindow*"
                                    }
                                },
                                "parameter": {
                                    "@name": "skips_taskbar",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "gdk/gdkwindow.c",
                                        "@line": "10366",
                                        "#text": "%TRUE to skip the taskbar"
                                    },
                                    "type": {
                                        "@name": "gboolean",
                                        "@c:type": "gboolean"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "set_source_events",
                            "@c:identifier": "gdk_window_set_source_events",
                            "@version": "3.0",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkwindow.c",
                                "@line": "8885",
                                "#text": "Sets the event mask for any floating device (i.e. not attached to any\nvisible pointer) that has the source defined as @source. This event\nmask will be applied both to currently existing, newly added devices\nafter this call, and devices being attached/detached."
                            },
                            "source-position": {
                                "@filename": "gdk/gdkwindow.h",
                                "@line": "909"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "type": {
                                    "@name": "none",
                                    "@c:type": "void"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "window",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "gdk/gdkwindow.c",
                                        "@line": "8887",
                                        "#text": "a #GdkWindow"
                                    },
                                    "type": {
                                        "@name": "Window",
                                        "@c:type": "GdkWindow*"
                                    }
                                },
                                "parameter": [
                                    {
                                        "@name": "source",
                                        "@transfer-ownership": "none",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "gdk/gdkwindow.c",
                                            "@line": "8888",
                                            "#text": "a #GdkInputSource to define the source class."
                                        },
                                        "type": {
                                            "@name": "InputSource",
                                            "@c:type": "GdkInputSource"
                                        }
                                    },
                                    {
                                        "@name": "event_mask",
                                        "@transfer-ownership": "none",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "gdk/gdkwindow.c",
                                            "@line": "8889",
                                            "#text": "event mask for @window"
                                        },
                                        "type": {
                                            "@name": "EventMask",
                                            "@c:type": "GdkEventMask"
                                        }
                                    }
                                ]
                            }
                        },
                        {
                            "@name": "set_startup_id",
                            "@c:identifier": "gdk_window_set_startup_id",
                            "@version": "2.12",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkwindow.c",
                                "@line": "10507",
                                "#text": "When using GTK+, typically you should use gtk_window_set_startup_id()\ninstead of this low-level function."
                            },
                            "source-position": {
                                "@filename": "gdk/gdkwindow.h",
                                "@line": "778"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "type": {
                                    "@name": "none",
                                    "@c:type": "void"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "window",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "gdk/gdkwindow.c",
                                        "@line": "10509",
                                        "#text": "a toplevel #GdkWindow"
                                    },
                                    "type": {
                                        "@name": "Window",
                                        "@c:type": "GdkWindow*"
                                    }
                                },
                                "parameter": {
                                    "@name": "startup_id",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "gdk/gdkwindow.c",
                                        "@line": "10510",
                                        "#text": "a string with startup-notification identifier"
                                    },
                                    "type": {
                                        "@name": "utf8",
                                        "@c:type": "const gchar*"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "set_static_gravities",
                            "@c:identifier": "gdk_window_set_static_gravities",
                            "@deprecated": "1",
                            "@deprecated-version": "3.16",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkwindow.c",
                                "@line": "7341",
                                "#text": "Used to set the bit gravity of the given window to static, and flag\nit so all children get static subwindow gravity. This is used if you\nare implementing scary features that involve deep knowledge of the\nwindowing system. Don\u2019t worry about it."
                            },
                            "doc-deprecated": {
                                "@xml:space": "preserve",
                                "#text": "static gravities haven't worked on anything but X11\n  for a long time."
                            },
                            "source-position": {
                                "@filename": "gdk/gdkwindow.h",
                                "@line": "689"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "gdk/gdkwindow.c",
                                    "@line": "7351",
                                    "#text": "%FALSE"
                                },
                                "type": {
                                    "@name": "gboolean",
                                    "@c:type": "gboolean"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "window",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "gdk/gdkwindow.c",
                                        "@line": "7343",
                                        "#text": "a #GdkWindow"
                                    },
                                    "type": {
                                        "@name": "Window",
                                        "@c:type": "GdkWindow*"
                                    }
                                },
                                "parameter": {
                                    "@name": "use_static",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "gdk/gdkwindow.c",
                                        "@line": "7344",
                                        "#text": "%TRUE to turn on static gravity"
                                    },
                                    "type": {
                                        "@name": "gboolean",
                                        "@c:type": "gboolean"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "set_support_multidevice",
                            "@c:identifier": "gdk_window_set_support_multidevice",
                            "@version": "3.0",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkwindow.c",
                                "@line": "7934",
                                "#text": "This function will enable multidevice features in @window.\n\nMultidevice aware windows will need to handle properly multiple,\nper device enter/leave events, device grabs and grab ownerships."
                            },
                            "source-position": {
                                "@filename": "gdk/gdkwindow.h",
                                "@line": "1106"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "type": {
                                    "@name": "none",
                                    "@c:type": "void"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "window",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "gdk/gdkwindow.c",
                                        "@line": "7936",
                                        "#text": "a #GdkWindow."
                                    },
                                    "type": {
                                        "@name": "Window",
                                        "@c:type": "GdkWindow*"
                                    }
                                },
                                "parameter": {
                                    "@name": "support_multidevice",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "gdk/gdkwindow.c",
                                        "@line": "7937",
                                        "#text": "%TRUE to enable multidevice support in @window."
                                    },
                                    "type": {
                                        "@name": "gboolean",
                                        "@c:type": "gboolean"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "set_title",
                            "@c:identifier": "gdk_window_set_title",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkwindow.c",
                                "@line": "10463",
                                "#text": "Sets the title of a toplevel window, to be displayed in the titlebar.\nIf you haven\u2019t explicitly set the icon name for the window\n(using gdk_window_set_icon_name()), the icon name will be set to\n@title as well. @title must be in UTF-8 encoding (as with all\nuser-readable strings in GDK/GTK+). @title may not be %NULL."
                            },
                            "source-position": {
                                "@filename": "gdk/gdkwindow.h",
                                "@line": "772"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "type": {
                                    "@name": "none",
                                    "@c:type": "void"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "window",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "gdk/gdkwindow.c",
                                        "@line": "10465",
                                        "#text": "a toplevel #GdkWindow"
                                    },
                                    "type": {
                                        "@name": "Window",
                                        "@c:type": "GdkWindow*"
                                    }
                                },
                                "parameter": {
                                    "@name": "title",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "gdk/gdkwindow.c",
                                        "@line": "10466",
                                        "#text": "title of @window"
                                    },
                                    "type": {
                                        "@name": "utf8",
                                        "@c:type": "const gchar*"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "set_transient_for",
                            "@c:identifier": "gdk_window_set_transient_for",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkwindow.c",
                                "@line": "10528",
                                "#text": "Indicates to the window manager that @window is a transient dialog\nassociated with the application window @parent. This allows the\nwindow manager to do things like center @window on @parent and\nkeep @window above @parent.\n\nSee gtk_window_set_transient_for() if you\u2019re using #GtkWindow or\n#GtkDialog."
                            },
                            "source-position": {
                                "@filename": "gdk/gdkwindow.h",
                                "@line": "781"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "type": {
                                    "@name": "none",
                                    "@c:type": "void"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "window",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "gdk/gdkwindow.c",
                                        "@line": "10530",
                                        "#text": "a toplevel #GdkWindow"
                                    },
                                    "type": {
                                        "@name": "Window",
                                        "@c:type": "GdkWindow*"
                                    }
                                },
                                "parameter": {
                                    "@name": "parent",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "gdk/gdkwindow.c",
                                        "@line": "10531",
                                        "#text": "another toplevel #GdkWindow"
                                    },
                                    "type": {
                                        "@name": "Window",
                                        "@c:type": "GdkWindow*"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "set_type_hint",
                            "@c:identifier": "gdk_window_set_type_hint",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkwindow.c",
                                "@line": "10308",
                                "#text": "The application can use this call to provide a hint to the window\nmanager about the functionality of a window. The window manager\ncan use this information when determining the decoration and behaviour\nof the window.\n\nThe hint must be set before the window is mapped."
                            },
                            "source-position": {
                                "@filename": "gdk/gdkwindow.h",
                                "@line": "717"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "type": {
                                    "@name": "none",
                                    "@c:type": "void"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "window",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "gdk/gdkwindow.c",
                                        "@line": "10310",
                                        "#text": "A toplevel #GdkWindow"
                                    },
                                    "type": {
                                        "@name": "Window",
                                        "@c:type": "GdkWindow*"
                                    }
                                },
                                "parameter": {
                                    "@name": "hint",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "gdk/gdkwindow.c",
                                        "@line": "10311",
                                        "#text": "A hint of the function this window will have"
                                    },
                                    "type": {
                                        "@name": "WindowTypeHint",
                                        "@c:type": "GdkWindowTypeHint"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "set_urgency_hint",
                            "@c:identifier": "gdk_window_set_urgency_hint",
                            "@version": "2.8",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkwindow.c",
                                "@line": "10407",
                                "#text": "Toggles whether a window needs the user's\nurgent attention."
                            },
                            "source-position": {
                                "@filename": "gdk/gdkwindow.h",
                                "@line": "735"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "type": {
                                    "@name": "none",
                                    "@c:type": "void"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "window",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "gdk/gdkwindow.c",
                                        "@line": "10409",
                                        "#text": "a toplevel #GdkWindow"
                                    },
                                    "type": {
                                        "@name": "Window",
                                        "@c:type": "GdkWindow*"
                                    }
                                },
                                "parameter": {
                                    "@name": "urgent",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "gdk/gdkwindow.c",
                                        "@line": "10410",
                                        "#text": "%TRUE if the window is urgent"
                                    },
                                    "type": {
                                        "@name": "gboolean",
                                        "@c:type": "gboolean"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "set_user_data",
                            "@c:identifier": "gdk_window_set_user_data",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkwindow.c",
                                "@line": "2220",
                                "#text": "For most purposes this function is deprecated in favor of\ng_object_set_data(). However, for historical reasons GTK+ stores\nthe #GtkWidget that owns a #GdkWindow as user data on the\n#GdkWindow. So, custom widget implementations should use\nthis function for that. If GTK+ receives an event for a #GdkWindow,\nand the user data for the window is non-%NULL, GTK+ will assume the\nuser data is a #GtkWidget, and forward the event to that widget."
                            },
                            "source-position": {
                                "@filename": "gdk/gdkwindow.h",
                                "@line": "579"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "type": {
                                    "@name": "none",
                                    "@c:type": "void"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "window",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "gdk/gdkwindow.c",
                                        "@line": "2222",
                                        "#text": "a #GdkWindow"
                                    },
                                    "type": {
                                        "@name": "Window",
                                        "@c:type": "GdkWindow*"
                                    }
                                },
                                "parameter": {
                                    "@name": "user_data",
                                    "@transfer-ownership": "none",
                                    "@nullable": "1",
                                    "@allow-none": "1",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "gdk/gdkwindow.c",
                                        "@line": "2223",
                                        "#text": "user data"
                                    },
                                    "type": {
                                        "@name": "GObject.Object",
                                        "@c:type": "gpointer"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "shape_combine_region",
                            "@c:identifier": "gdk_window_shape_combine_region",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkwindow.c",
                                "@line": "7004",
                                "#text": "Makes pixels in @window outside @shape_region be transparent,\nso that the window may be nonrectangular.\n\nIf @shape_region is %NULL, the shape will be unset, so the whole\nwindow will be opaque again. @offset_x and @offset_y are ignored\nif @shape_region is %NULL.\n\nOn the X11 platform, this uses an X server extension which is\nwidely available on most common platforms, but not available on\nvery old X servers, and occasionally the implementation will be\nbuggy. On servers without the shape extension, this function\nwill do nothing.\n\nThis function works on both toplevel and child windows."
                            },
                            "source-position": {
                                "@filename": "gdk/gdkwindow.h",
                                "@line": "619"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "type": {
                                    "@name": "none",
                                    "@c:type": "void"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "window",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "gdk/gdkwindow.c",
                                        "@line": "7006",
                                        "#text": "a #GdkWindow"
                                    },
                                    "type": {
                                        "@name": "Window",
                                        "@c:type": "GdkWindow*"
                                    }
                                },
                                "parameter": [
                                    {
                                        "@name": "shape_region",
                                        "@transfer-ownership": "none",
                                        "@nullable": "1",
                                        "@allow-none": "1",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "gdk/gdkwindow.c",
                                            "@line": "7007",
                                            "#text": "region of window to be non-transparent"
                                        },
                                        "type": {
                                            "@name": "cairo.Region",
                                            "@c:type": "const cairo_region_t*"
                                        }
                                    },
                                    {
                                        "@name": "offset_x",
                                        "@transfer-ownership": "none",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "gdk/gdkwindow.c",
                                            "@line": "7008",
                                            "#text": "X position of @shape_region in @window coordinates"
                                        },
                                        "type": {
                                            "@name": "gint",
                                            "@c:type": "gint"
                                        }
                                    },
                                    {
                                        "@name": "offset_y",
                                        "@transfer-ownership": "none",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "gdk/gdkwindow.c",
                                            "@line": "7009",
                                            "#text": "Y position of @shape_region in @window coordinates"
                                        },
                                        "type": {
                                            "@name": "gint",
                                            "@c:type": "gint"
                                        }
                                    }
                                ]
                            }
                        },
                        {
                            "@name": "show",
                            "@c:identifier": "gdk_window_show",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkwindow.c",
                                "@line": "5642",
                                "#text": "Like gdk_window_show_unraised(), but also raises the window to the\ntop of the window stack (moves the window to the front of the\nZ-order).\n\nThis function maps a window so it\u2019s visible onscreen. Its opposite\nis gdk_window_hide().\n\nWhen implementing a #GtkWidget, you should call this function on the widget's\n#GdkWindow as part of the \u201cmap\u201d method."
                            },
                            "source-position": {
                                "@filename": "gdk/gdkwindow.h",
                                "@line": "532"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "type": {
                                    "@name": "none",
                                    "@c:type": "void"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "window",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "gdk/gdkwindow.c",
                                        "@line": "5644",
                                        "#text": "a #GdkWindow"
                                    },
                                    "type": {
                                        "@name": "Window",
                                        "@c:type": "GdkWindow*"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "show_unraised",
                            "@c:identifier": "gdk_window_show_unraised",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkwindow.c",
                                "@line": "5362",
                                "#text": "Shows a #GdkWindow onscreen, but does not modify its stacking\norder. In contrast, gdk_window_show() will raise the window\nto the top of the window stack.\n\nOn the X11 platform, in Xlib terms, this function calls\nXMapWindow() (it also updates some internal GDK state, which means\nthat you can\u2019t really use XMapWindow() directly on a GDK window)."
                            },
                            "source-position": {
                                "@filename": "gdk/gdkwindow.h",
                                "@line": "538"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "type": {
                                    "@name": "none",
                                    "@c:type": "void"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "window",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "gdk/gdkwindow.c",
                                        "@line": "5364",
                                        "#text": "a #GdkWindow"
                                    },
                                    "type": {
                                        "@name": "Window",
                                        "@c:type": "GdkWindow*"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "show_window_menu",
                            "@c:identifier": "gdk_window_show_window_menu",
                            "@version": "3.14",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkwindow.c",
                                "@line": "11970",
                                "#text": "Asks the windowing system to show the window menu. The window menu\nis the menu shown when right-clicking the titlebar on traditional\nwindows managed by the window manager. This is useful for windows\nusing client-side decorations, activating it with a right-click\non the window decorations."
                            },
                            "source-position": {
                                "@filename": "gdk/gdkwindow.h",
                                "@line": "1132"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "gdk/gdkwindow.c",
                                    "@line": "11981",
                                    "#text": "%TRUE if the window menu was shown and %FALSE otherwise."
                                },
                                "type": {
                                    "@name": "gboolean",
                                    "@c:type": "gboolean"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "window",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "gdk/gdkwindow.c",
                                        "@line": "11972",
                                        "#text": "a #GdkWindow"
                                    },
                                    "type": {
                                        "@name": "Window",
                                        "@c:type": "GdkWindow*"
                                    }
                                },
                                "parameter": {
                                    "@name": "event",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "gdk/gdkwindow.c",
                                        "@line": "11973",
                                        "#text": "a #GdkEvent to show the menu for"
                                    },
                                    "type": {
                                        "@name": "Event",
                                        "@c:type": "GdkEvent*"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "stick",
                            "@c:identifier": "gdk_window_stick",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkwindow.c",
                                "@line": "10784",
                                "#text": "\u201cPins\u201d a window such that it\u2019s on all workspaces and does not scroll\nwith viewports, for window managers that have scrollable viewports.\n(When using #GtkWindow, gtk_window_stick() may be more useful.)\n\nOn the X11 platform, this function depends on window manager\nsupport, so may have no effect with many window managers. However,\nGDK will do the best it can to convince the window manager to stick\nthe window. For window managers that don\u2019t support this operation,\nthere\u2019s nothing you can do to force it to happen."
                            },
                            "source-position": {
                                "@filename": "gdk/gdkwindow.h",
                                "@line": "958"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "type": {
                                    "@name": "none",
                                    "@c:type": "void"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "window",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "gdk/gdkwindow.c",
                                        "@line": "10786",
                                        "#text": "a toplevel #GdkWindow"
                                    },
                                    "type": {
                                        "@name": "Window",
                                        "@c:type": "GdkWindow*"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "thaw_toplevel_updates_libgtk_only",
                            "@c:identifier": "gdk_window_thaw_toplevel_updates_libgtk_only",
                            "@deprecated": "1",
                            "@deprecated-version": "3.16",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkwindow.c",
                                "@line": "4784",
                                "#text": "Thaws a window frozen with\ngdk_window_freeze_toplevel_updates_libgtk_only().\n\nThis function is not part of the GDK public API and is only\nfor use by GTK+."
                            },
                            "doc-deprecated": {
                                "@xml:space": "preserve",
                                "#text": "This symbol was never meant to be used outside of GTK+"
                            },
                            "source-position": {
                                "@filename": "gdk/gdkwindow.h",
                                "@line": "1064"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "type": {
                                    "@name": "none",
                                    "@c:type": "void"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "window",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "gdk/gdkwindow.c",
                                        "@line": "4786",
                                        "#text": "a #GdkWindow"
                                    },
                                    "type": {
                                        "@name": "Window",
                                        "@c:type": "GdkWindow*"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "thaw_updates",
                            "@c:identifier": "gdk_window_thaw_updates",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkwindow.c",
                                "@line": "4730",
                                "#text": "Thaws a window frozen with gdk_window_freeze_updates()."
                            },
                            "source-position": {
                                "@filename": "gdk/gdkwindow.h",
                                "@line": "1059"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "type": {
                                    "@name": "none",
                                    "@c:type": "void"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "window",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "gdk/gdkwindow.c",
                                        "@line": "4732",
                                        "#text": "a #GdkWindow"
                                    },
                                    "type": {
                                        "@name": "Window",
                                        "@c:type": "GdkWindow*"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "unfullscreen",
                            "@c:identifier": "gdk_window_unfullscreen",
                            "@version": "2.2",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkwindow.c",
                                "@line": "10978",
                                "#text": "Moves the window out of fullscreen mode. If the window was not\nfullscreen, does nothing.\n\nOn X11, asks the window manager to move @window out of the fullscreen\nstate, if the window manager supports this operation. Not all\nwindow managers support this, and some deliberately ignore it or\ndon\u2019t have a concept of \u201cfullscreen\u201d; so you can\u2019t rely on the\nunfullscreenification actually happening. But it will happen with\nmost standard window managers, and GDK makes a best effort to get\nit to happen."
                            },
                            "source-position": {
                                "@filename": "gdk/gdkwindow.h",
                                "@line": "977"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "type": {
                                    "@name": "none",
                                    "@c:type": "void"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "window",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "gdk/gdkwindow.c",
                                        "@line": "10980",
                                        "#text": "a toplevel #GdkWindow"
                                    },
                                    "type": {
                                        "@name": "Window",
                                        "@c:type": "GdkWindow*"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "unmaximize",
                            "@c:identifier": "gdk_window_unmaximize",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkwindow.c",
                                "@line": "10842",
                                "#text": "Unmaximizes the window. If the window wasn\u2019t maximized, then this\nfunction does nothing.\n\nOn X11, asks the window manager to unmaximize @window, if the\nwindow manager supports this operation. Not all window managers\nsupport this, and some deliberately ignore it or don\u2019t have a\nconcept of \u201cmaximized\u201d; so you can\u2019t rely on the unmaximization\nactually happening. But it will happen with most standard window\nmanagers, and GDK makes a best effort to get it to happen.\n\nOn Windows, reliably unmaximizes the window."
                            },
                            "source-position": {
                                "@filename": "gdk/gdkwindow.h",
                                "@line": "964"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "type": {
                                    "@name": "none",
                                    "@c:type": "void"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "window",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "gdk/gdkwindow.c",
                                        "@line": "10844",
                                        "#text": "a toplevel #GdkWindow"
                                    },
                                    "type": {
                                        "@name": "Window",
                                        "@c:type": "GdkWindow*"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "unstick",
                            "@c:identifier": "gdk_window_unstick",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkwindow.c",
                                "@line": "10805",
                                "#text": "Reverse operation for gdk_window_stick(); see gdk_window_stick(),\nand gtk_window_unstick()."
                            },
                            "source-position": {
                                "@filename": "gdk/gdkwindow.h",
                                "@line": "960"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "type": {
                                    "@name": "none",
                                    "@c:type": "void"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "window",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "gdk/gdkwindow.c",
                                        "@line": "10807",
                                        "#text": "a toplevel #GdkWindow"
                                    },
                                    "type": {
                                        "@name": "Window",
                                        "@c:type": "GdkWindow*"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "withdraw",
                            "@c:identifier": "gdk_window_withdraw",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkwindow.c",
                                "@line": "5757",
                                "#text": "Withdraws a window (unmaps it and asks the window manager to forget about it).\nThis function is not really useful as gdk_window_hide() automatically\nwithdraws toplevel windows before hiding them."
                            },
                            "source-position": {
                                "@filename": "gdk/gdkwindow.h",
                                "@line": "536"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "type": {
                                    "@name": "none",
                                    "@c:type": "void"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "window",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "gdk/gdkwindow.c",
                                        "@line": "5759",
                                        "#text": "a toplevel #GdkWindow"
                                    },
                                    "type": {
                                        "@name": "Window",
                                        "@c:type": "GdkWindow*"
                                    }
                                }
                            }
                        }
                    ],
                    "property": {
                        "@name": "cursor",
                        "@version": "2.18",
                        "@writable": "1",
                        "@transfer-ownership": "none",
                        "@setter": "set_cursor",
                        "@getter": "get_cursor",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "gdk/gdkwindow.c",
                            "@line": "344",
                            "#text": "The mouse pointer for a #GdkWindow. See gdk_window_set_cursor() and\ngdk_window_get_cursor() for details."
                        },
                        "type": {
                            "@name": "Cursor"
                        }
                    },
                    "glib:signal": [
                        {
                            "@name": "create-surface",
                            "@when": "last",
                            "@version": "3.0",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkwindow.c",
                                "@line": "457",
                                "#text": "The ::create-surface signal is emitted when an offscreen window\nneeds its surface (re)created, which happens either when the\nwindow is first drawn to, or when the window is being\nresized. The first signal handler that returns a non-%NULL\nsurface will stop any further signal emission, and its surface\nwill be used.\n\nNote that it is not possible to access the window's previous\nsurface from within any callback of this signal. Calling\ngdk_offscreen_window_get_surface() will lead to a crash."
                            },
                            "return-value": {
                                "@transfer-ownership": "full",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "gdk/gdkwindow.c",
                                    "@line": "474",
                                    "#text": "the newly created #cairo_surface_t for the offscreen window"
                                },
                                "type": {
                                    "@name": "cairo.Surface"
                                }
                            },
                            "parameters": {
                                "parameter": [
                                    {
                                        "@name": "width",
                                        "@transfer-ownership": "none",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "gdk/gdkwindow.c",
                                            "@line": "460",
                                            "#text": "the width of the offscreen surface to create"
                                        },
                                        "type": {
                                            "@name": "gint",
                                            "@c:type": "gint"
                                        }
                                    },
                                    {
                                        "@name": "height",
                                        "@transfer-ownership": "none",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "gdk/gdkwindow.c",
                                            "@line": "461",
                                            "#text": "the height of the offscreen surface to create"
                                        },
                                        "type": {
                                            "@name": "gint",
                                            "@c:type": "gint"
                                        }
                                    }
                                ]
                            }
                        },
                        {
                            "@name": "from-embedder",
                            "@when": "last",
                            "@version": "2.18",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkwindow.c",
                                "@line": "423",
                                "#text": "The ::from-embedder signal is emitted to translate coordinates\nin the embedder of an offscreen window to the offscreen window.\n\nSee also #GdkWindow::to-embedder."
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "type": {
                                    "@name": "none",
                                    "@c:type": "void"
                                }
                            },
                            "parameters": {
                                "parameter": [
                                    {
                                        "@name": "embedder_x",
                                        "@transfer-ownership": "none",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "gdk/gdkwindow.c",
                                            "@line": "426",
                                            "#text": "x coordinate in the embedder window"
                                        },
                                        "type": {
                                            "@name": "gdouble",
                                            "@c:type": "gdouble"
                                        }
                                    },
                                    {
                                        "@name": "embedder_y",
                                        "@transfer-ownership": "none",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "gdk/gdkwindow.c",
                                            "@line": "427",
                                            "#text": "y coordinate in the embedder window"
                                        },
                                        "type": {
                                            "@name": "gdouble",
                                            "@c:type": "gdouble"
                                        }
                                    },
                                    {
                                        "@name": "offscreen_x",
                                        "@direction": "out",
                                        "@caller-allocates": "0",
                                        "@transfer-ownership": "full",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "gdk/gdkwindow.c",
                                            "@line": "428",
                                            "#text": "return location for the x\n    coordinate in the offscreen window"
                                        },
                                        "type": {
                                            "@name": "gdouble",
                                            "@c:type": "gpointer"
                                        }
                                    },
                                    {
                                        "@name": "offscreen_y",
                                        "@direction": "out",
                                        "@caller-allocates": "0",
                                        "@transfer-ownership": "full",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "gdk/gdkwindow.c",
                                            "@line": "430",
                                            "#text": "return location for the y\n    coordinate in the offscreen window"
                                        },
                                        "type": {
                                            "@name": "gdouble",
                                            "@c:type": "gpointer"
                                        }
                                    }
                                ]
                            }
                        },
                        {
                            "@name": "moved-to-rect",
                            "@when": "first",
                            "@version": "3.22",
                            "@stability": "Private",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkwindow.c",
                                "@line": "493",
                                "#text": "Emitted when the position of @window is finalized after being moved to a\ndestination rectangle.\n\n@window might be flipped over the destination rectangle in order to keep\nit on-screen, in which case @flipped_x and @flipped_y will be set to %TRUE\naccordingly.\n\n@flipped_rect is the ideal position of @window after any possible\nflipping, but before any possible sliding. @final_rect is @flipped_rect,\nbut possibly translated in the case that flipping is still ineffective in\nkeeping @window on-screen."
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "type": {
                                    "@name": "none",
                                    "@c:type": "void"
                                }
                            },
                            "parameters": {
                                "parameter": [
                                    {
                                        "@name": "flipped_rect",
                                        "@transfer-ownership": "none",
                                        "@nullable": "1",
                                        "@allow-none": "1",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "gdk/gdkwindow.c",
                                            "@line": "496",
                                            "#text": "the position of @window after any possible\n               flipping or %NULL if the backend can't obtain it"
                                        },
                                        "type": {
                                            "@name": "gpointer",
                                            "@c:type": "gpointer"
                                        }
                                    },
                                    {
                                        "@name": "final_rect",
                                        "@transfer-ownership": "none",
                                        "@nullable": "1",
                                        "@allow-none": "1",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "gdk/gdkwindow.c",
                                            "@line": "498",
                                            "#text": "the final position of @window or %NULL if the\n             backend can't obtain it"
                                        },
                                        "type": {
                                            "@name": "gpointer",
                                            "@c:type": "gpointer"
                                        }
                                    },
                                    {
                                        "@name": "flipped_x",
                                        "@transfer-ownership": "none",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "gdk/gdkwindow.c",
                                            "@line": "500",
                                            "#text": "%TRUE if the anchors were flipped horizontally"
                                        },
                                        "type": {
                                            "@name": "gboolean",
                                            "@c:type": "gboolean"
                                        }
                                    },
                                    {
                                        "@name": "flipped_y",
                                        "@transfer-ownership": "none",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "gdk/gdkwindow.c",
                                            "@line": "501",
                                            "#text": "%TRUE if the anchors were flipped vertically"
                                        },
                                        "type": {
                                            "@name": "gboolean",
                                            "@c:type": "gboolean"
                                        }
                                    }
                                ]
                            }
                        },
                        {
                            "@name": "pick-embedded-child",
                            "@when": "last",
                            "@version": "2.18",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkwindow.c",
                                "@line": "360",
                                "#text": "The ::pick-embedded-child signal is emitted to find an embedded\nchild at the given position."
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "@nullable": "1",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "gdk/gdkwindow.c",
                                    "@line": "369",
                                    "#text": "the #GdkWindow of the\n    embedded child at @x, @y, or %NULL"
                                },
                                "type": {
                                    "@name": "Window"
                                }
                            },
                            "parameters": {
                                "parameter": [
                                    {
                                        "@name": "x",
                                        "@transfer-ownership": "none",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "gdk/gdkwindow.c",
                                            "@line": "363",
                                            "#text": "x coordinate in the window"
                                        },
                                        "type": {
                                            "@name": "gdouble",
                                            "@c:type": "gdouble"
                                        }
                                    },
                                    {
                                        "@name": "y",
                                        "@transfer-ownership": "none",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "gdk/gdkwindow.c",
                                            "@line": "364",
                                            "#text": "y coordinate in the window"
                                        },
                                        "type": {
                                            "@name": "gdouble",
                                            "@c:type": "gdouble"
                                        }
                                    }
                                ]
                            }
                        },
                        {
                            "@name": "to-embedder",
                            "@when": "last",
                            "@version": "2.18",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkwindow.c",
                                "@line": "389",
                                "#text": "The ::to-embedder signal is emitted to translate coordinates\nin an offscreen window to its embedder.\n\nSee also #GdkWindow::from-embedder."
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "type": {
                                    "@name": "none",
                                    "@c:type": "void"
                                }
                            },
                            "parameters": {
                                "parameter": [
                                    {
                                        "@name": "offscreen_x",
                                        "@transfer-ownership": "none",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "gdk/gdkwindow.c",
                                            "@line": "392",
                                            "#text": "x coordinate in the offscreen window"
                                        },
                                        "type": {
                                            "@name": "gdouble",
                                            "@c:type": "gdouble"
                                        }
                                    },
                                    {
                                        "@name": "offscreen_y",
                                        "@transfer-ownership": "none",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "gdk/gdkwindow.c",
                                            "@line": "393",
                                            "#text": "y coordinate in the offscreen window"
                                        },
                                        "type": {
                                            "@name": "gdouble",
                                            "@c:type": "gdouble"
                                        }
                                    },
                                    {
                                        "@name": "embedder_x",
                                        "@direction": "out",
                                        "@caller-allocates": "0",
                                        "@transfer-ownership": "full",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "gdk/gdkwindow.c",
                                            "@line": "394",
                                            "#text": "return location for the x\n    coordinate in the embedder window"
                                        },
                                        "type": {
                                            "@name": "gdouble",
                                            "@c:type": "gpointer"
                                        }
                                    },
                                    {
                                        "@name": "embedder_y",
                                        "@direction": "out",
                                        "@caller-allocates": "0",
                                        "@transfer-ownership": "full",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "gdk/gdkwindow.c",
                                            "@line": "396",
                                            "#text": "return location for the y\n    coordinate in the embedder window"
                                        },
                                        "type": {
                                            "@name": "gdouble",
                                            "@c:type": "gpointer"
                                        }
                                    }
                                ]
                            }
                        }
                    ]
                }
            ],
            "record": [
                {
                    "@name": "Atom",
                    "@c:type": "GdkAtom",
                    "@disguised": "1",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "gdk/gdktypes.h",
                        "@line": "96",
                        "#text": "An opaque type representing a string as an index into a table\nof strings on the X server."
                    },
                    "source-position": {
                        "@filename": "gdk/gdktypes.h",
                        "@line": "102"
                    },
                    "method": {
                        "@name": "name",
                        "@c:identifier": "gdk_atom_name",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "gdk/gdkproperty.c",
                            "@line": "230",
                            "#text": "Determines the string corresponding to an atom."
                        },
                        "source-position": {
                            "@filename": "gdk/gdkproperty.h",
                            "@line": "61"
                        },
                        "return-value": {
                            "@transfer-ownership": "full",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkproperty.c",
                                "@line": "236",
                                "#text": "a newly-allocated string containing the string\n  corresponding to @atom. When you are done with the\n  return value, you should free it using g_free()."
                            },
                            "type": {
                                "@name": "utf8",
                                "@c:type": "gchar*"
                            }
                        },
                        "parameters": {
                            "instance-parameter": {
                                "@name": "atom",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "gdk/gdkproperty.c",
                                    "@line": "232",
                                    "#text": "a #GdkAtom."
                                },
                                "type": {
                                    "@name": "Atom",
                                    "@c:type": "GdkAtom"
                                }
                            }
                        }
                    },
                    "function": [
                        {
                            "@name": "intern",
                            "@c:identifier": "gdk_atom_intern",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkproperty.c",
                                "@line": "182",
                                "#text": "Finds or creates an atom corresponding to a given string."
                            },
                            "source-position": {
                                "@filename": "gdk/gdkproperty.h",
                                "@line": "56"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "gdk/gdkproperty.c",
                                    "@line": "192",
                                    "#text": "the atom corresponding to @atom_name."
                                },
                                "type": {
                                    "@name": "Atom",
                                    "@c:type": "GdkAtom"
                                }
                            },
                            "parameters": {
                                "parameter": [
                                    {
                                        "@name": "atom_name",
                                        "@transfer-ownership": "none",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "gdk/gdkproperty.c",
                                            "@line": "184",
                                            "#text": "a string."
                                        },
                                        "type": {
                                            "@name": "utf8",
                                            "@c:type": "const gchar*"
                                        }
                                    },
                                    {
                                        "@name": "only_if_exists",
                                        "@transfer-ownership": "none",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "gdk/gdkproperty.c",
                                            "@line": "185",
                                            "#text": "if %TRUE, GDK is allowed to not create a new atom, but\n  just return %GDK_NONE if the requested atom doesn\u2019t already\n  exists. Currently, the flag is ignored, since checking the\n  existance of an atom is as expensive as creating it."
                                        },
                                        "type": {
                                            "@name": "gboolean",
                                            "@c:type": "gboolean"
                                        }
                                    }
                                ]
                            }
                        },
                        {
                            "@name": "intern_static_string",
                            "@c:identifier": "gdk_atom_intern_static_string",
                            "@version": "2.10",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkproperty.c",
                                "@line": "203",
                                "#text": "Finds or creates an atom corresponding to a given string.\n\nNote that this function is identical to gdk_atom_intern() except\nthat if a new #GdkAtom is created the string itself is used rather\nthan a copy. This saves memory, but can only be used if the string\nwill always exist. It can be used with statically\nallocated strings in the main program, but not with statically\nallocated memory in dynamically loaded modules, if you expect to\never unload the module again (e.g. do not use this function in\nGTK+ theme engines)."
                            },
                            "source-position": {
                                "@filename": "gdk/gdkproperty.h",
                                "@line": "59"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "gdk/gdkproperty.c",
                                    "@line": "218",
                                    "#text": "the atom corresponding to @atom_name"
                                },
                                "type": {
                                    "@name": "Atom",
                                    "@c:type": "GdkAtom"
                                }
                            },
                            "parameters": {
                                "parameter": {
                                    "@name": "atom_name",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "gdk/gdkproperty.c",
                                        "@line": "205",
                                        "#text": "a static string"
                                    },
                                    "type": {
                                        "@name": "utf8",
                                        "@c:type": "const gchar*"
                                    }
                                }
                            }
                        }
                    ]
                },
                {
                    "@name": "Color",
                    "@c:type": "GdkColor",
                    "@deprecated": "1",
                    "@deprecated-version": "3.14",
                    "@glib:type-name": "GdkColor",
                    "@glib:get-type": "gdk_color_get_type",
                    "@c:symbol-prefix": "color",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "gdk/deprecated/gdkcolor.h",
                        "@line": "39",
                        "#text": "A #GdkColor is used to describe a color,\nsimilar to the XColor struct used in the X11 drawing API."
                    },
                    "doc-deprecated": {
                        "@xml:space": "preserve",
                        "#text": "Use #GdkRGBA"
                    },
                    "source-position": {
                        "@filename": "gdk/deprecated/gdkcolor.h",
                        "@line": "60"
                    },
                    "field": [
                        {
                            "@name": "pixel",
                            "@writable": "1",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/deprecated/gdkcolor.h",
                                "@line": "41",
                                "#text": "For allocated colors, the pixel value used to\n    draw this color on the screen. Not used anymore."
                            },
                            "type": {
                                "@name": "guint32",
                                "@c:type": "guint32"
                            }
                        },
                        {
                            "@name": "red",
                            "@writable": "1",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/deprecated/gdkcolor.h",
                                "@line": "43",
                                "#text": "The red component of the color. This is\n    a value between 0 and 65535, with 65535 indicating\n    full intensity"
                            },
                            "type": {
                                "@name": "guint16",
                                "@c:type": "guint16"
                            }
                        },
                        {
                            "@name": "green",
                            "@writable": "1",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/deprecated/gdkcolor.h",
                                "@line": "46",
                                "#text": "The green component of the color"
                            },
                            "type": {
                                "@name": "guint16",
                                "@c:type": "guint16"
                            }
                        },
                        {
                            "@name": "blue",
                            "@writable": "1",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/deprecated/gdkcolor.h",
                                "@line": "47",
                                "#text": "The blue component of the color"
                            },
                            "type": {
                                "@name": "guint16",
                                "@c:type": "guint16"
                            }
                        }
                    ],
                    "method": [
                        {
                            "@name": "copy",
                            "@c:identifier": "gdk_color_copy",
                            "@deprecated": "1",
                            "@deprecated-version": "3.14",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/deprecated/gdkcolor.c",
                                "@line": "49",
                                "#text": "Makes a copy of a #GdkColor.\n\nThe result must be freed using gdk_color_free()."
                            },
                            "doc-deprecated": {
                                "@xml:space": "preserve",
                                "#text": "Use #GdkRGBA"
                            },
                            "source-position": {
                                "@filename": "gdk/deprecated/gdkcolor.h",
                                "@line": "68"
                            },
                            "return-value": {
                                "@transfer-ownership": "full",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "gdk/deprecated/gdkcolor.c",
                                    "@line": "57",
                                    "#text": "a copy of @color"
                                },
                                "type": {
                                    "@name": "Color",
                                    "@c:type": "GdkColor*"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "color",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "gdk/deprecated/gdkcolor.c",
                                        "@line": "51",
                                        "#text": "a #GdkColor"
                                    },
                                    "type": {
                                        "@name": "Color",
                                        "@c:type": "const GdkColor*"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "equal",
                            "@c:identifier": "gdk_color_equal",
                            "@deprecated": "1",
                            "@deprecated-version": "3.14",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/deprecated/gdkcolor.c",
                                "@line": "109",
                                "#text": "Compares two colors."
                            },
                            "doc-deprecated": {
                                "@xml:space": "preserve",
                                "#text": "Use #GdkRGBA"
                            },
                            "source-position": {
                                "@filename": "gdk/deprecated/gdkcolor.h",
                                "@line": "75"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "gdk/deprecated/gdkcolor.c",
                                    "@line": "116",
                                    "#text": "%TRUE if the two colors compare equal"
                                },
                                "type": {
                                    "@name": "gboolean",
                                    "@c:type": "gboolean"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "colora",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "gdk/deprecated/gdkcolor.c",
                                        "@line": "111",
                                        "#text": "a #GdkColor"
                                    },
                                    "type": {
                                        "@name": "Color",
                                        "@c:type": "const GdkColor*"
                                    }
                                },
                                "parameter": {
                                    "@name": "colorb",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "gdk/deprecated/gdkcolor.c",
                                        "@line": "112",
                                        "#text": "another #GdkColor"
                                    },
                                    "type": {
                                        "@name": "Color",
                                        "@c:type": "const GdkColor*"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "free",
                            "@c:identifier": "gdk_color_free",
                            "@deprecated": "1",
                            "@deprecated-version": "3.14",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/deprecated/gdkcolor.c",
                                "@line": "73",
                                "#text": "Frees a #GdkColor created with gdk_color_copy()."
                            },
                            "doc-deprecated": {
                                "@xml:space": "preserve",
                                "#text": "Use #GdkRGBA"
                            },
                            "source-position": {
                                "@filename": "gdk/deprecated/gdkcolor.h",
                                "@line": "70"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "type": {
                                    "@name": "none",
                                    "@c:type": "void"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "color",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "gdk/deprecated/gdkcolor.c",
                                        "@line": "75",
                                        "#text": "a #GdkColor"
                                    },
                                    "type": {
                                        "@name": "Color",
                                        "@c:type": "GdkColor*"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "hash",
                            "@c:identifier": "gdk_color_hash",
                            "@deprecated": "1",
                            "@deprecated-version": "3.14",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/deprecated/gdkcolor.c",
                                "@line": "89",
                                "#text": "A hash function suitable for using for a hash\ntable that stores #GdkColors."
                            },
                            "doc-deprecated": {
                                "@xml:space": "preserve",
                                "#text": "Use #GdkRGBA"
                            },
                            "source-position": {
                                "@filename": "gdk/deprecated/gdkcolor.h",
                                "@line": "73"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "gdk/deprecated/gdkcolor.c",
                                    "@line": "96",
                                    "#text": "The hash function applied to @color"
                                },
                                "type": {
                                    "@name": "guint",
                                    "@c:type": "guint"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "color",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "gdk/deprecated/gdkcolor.c",
                                        "@line": "91",
                                        "#text": "a #GdkColor"
                                    },
                                    "type": {
                                        "@name": "Color",
                                        "@c:type": "const GdkColor*"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "to_string",
                            "@c:identifier": "gdk_color_to_string",
                            "@version": "2.12",
                            "@deprecated": "1",
                            "@deprecated-version": "3.14",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/deprecated/gdkcolor.c",
                                "@line": "174",
                                "#text": "Returns a textual specification of @color in the hexadecimal\nform \u201c\\#rrrrggggbbbb\u201d where \u201cr\u201d, \u201cg\u201d and \u201cb\u201d are hex digits\nrepresenting the red, green and blue components respectively.\n\nThe returned string can be parsed by gdk_color_parse()."
                            },
                            "doc-deprecated": {
                                "@xml:space": "preserve",
                                "#text": "Use #GdkRGBA"
                            },
                            "source-position": {
                                "@filename": "gdk/deprecated/gdkcolor.h",
                                "@line": "82"
                            },
                            "return-value": {
                                "@transfer-ownership": "full",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "gdk/deprecated/gdkcolor.c",
                                    "@line": "184",
                                    "#text": "a newly-allocated text string"
                                },
                                "type": {
                                    "@name": "utf8",
                                    "@c:type": "gchar*"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "color",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "gdk/deprecated/gdkcolor.c",
                                        "@line": "176",
                                        "#text": "a #GdkColor"
                                    },
                                    "type": {
                                        "@name": "Color",
                                        "@c:type": "const GdkColor*"
                                    }
                                }
                            }
                        }
                    ],
                    "function": {
                        "@name": "parse",
                        "@c:identifier": "gdk_color_parse",
                        "@deprecated": "1",
                        "@deprecated-version": "3.14",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "gdk/deprecated/gdkcolor.c",
                            "@line": "136",
                            "#text": "Parses a textual specification of a color and fill in the\n@red, @green, and @blue fields of a #GdkColor.\n\nThe string can either one of a large set of standard names\n(taken from the X11 `rgb.txt` file), or it can be a hexadecimal\nvalue in the form \u201c\\#rgb\u201d \u201c\\#rrggbb\u201d, \u201c\\#rrrgggbbb\u201d or\n\u201c\\#rrrrggggbbbb\u201d where \u201cr\u201d, \u201cg\u201d and \u201cb\u201d are hex digits of\nthe red, green, and blue components of the color, respectively.\n(White in the four forms is \u201c\\#fff\u201d, \u201c\\#ffffff\u201d, \u201c\\#fffffffff\u201d\nand \u201c\\#ffffffffffff\u201d)."
                        },
                        "doc-deprecated": {
                            "@xml:space": "preserve",
                            "#text": "Use #GdkRGBA"
                        },
                        "source-position": {
                            "@filename": "gdk/deprecated/gdkcolor.h",
                            "@line": "79"
                        },
                        "return-value": {
                            "@transfer-ownership": "none",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/deprecated/gdkcolor.c",
                                "@line": "152",
                                "#text": "%TRUE if the parsing succeeded"
                            },
                            "type": {
                                "@name": "gboolean",
                                "@c:type": "gboolean"
                            }
                        },
                        "parameters": {
                            "parameter": [
                                {
                                    "@name": "spec",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "gdk/deprecated/gdkcolor.c",
                                        "@line": "138",
                                        "#text": "the string specifying the color"
                                    },
                                    "type": {
                                        "@name": "utf8",
                                        "@c:type": "const gchar*"
                                    }
                                },
                                {
                                    "@name": "color",
                                    "@direction": "out",
                                    "@caller-allocates": "1",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "gdk/deprecated/gdkcolor.c",
                                        "@line": "139",
                                        "#text": "the #GdkColor to fill in"
                                    },
                                    "type": {
                                        "@name": "Color",
                                        "@c:type": "GdkColor*"
                                    }
                                }
                            ]
                        }
                    }
                },
                {
                    "@name": "DevicePadInterface",
                    "@c:type": "GdkDevicePadInterface",
                    "@disguised": "1",
                    "@glib:is-gtype-struct-for": "DevicePad",
                    "source-position": {
                        "@filename": "gdk/gdkdevicepad.h",
                        "@line": "37"
                    }
                },
                {
                    "@name": "DrawingContextClass",
                    "@c:type": "GdkDrawingContextClass",
                    "@disguised": "1",
                    "@glib:is-gtype-struct-for": "DrawingContext",
                    "source-position": {
                        "@filename": "gdk/gdkdrawingcontext.h",
                        "@line": "35"
                    }
                },
                {
                    "@name": "EventAny",
                    "@c:type": "GdkEventAny",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "gdk/gdkevents.h",
                        "@line": "588",
                        "#text": "Contains the fields which are common to all event structs.\nAny event pointer can safely be cast to a pointer to a #GdkEventAny to\naccess these fields."
                    },
                    "source-position": {
                        "@filename": "gdk/gdkevents.h",
                        "@line": "603"
                    },
                    "field": [
                        {
                            "@name": "type",
                            "@writable": "1",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkevents.h",
                                "@line": "590",
                                "#text": "the type of the event."
                            },
                            "type": {
                                "@name": "EventType",
                                "@c:type": "GdkEventType"
                            }
                        },
                        {
                            "@name": "window",
                            "@writable": "1",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkevents.h",
                                "@line": "591",
                                "#text": "the window which received the event."
                            },
                            "type": {
                                "@name": "Window",
                                "@c:type": "GdkWindow*"
                            }
                        },
                        {
                            "@name": "send_event",
                            "@writable": "1",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkevents.h",
                                "@line": "592",
                                "#text": "%TRUE if the event was sent explicitly."
                            },
                            "type": {
                                "@name": "gint8",
                                "@c:type": "gint8"
                            }
                        }
                    ]
                },
                {
                    "@name": "EventButton",
                    "@c:type": "GdkEventButton",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "gdk/gdkevents.h",
                        "@line": "692",
                        "#text": "Used for button press and button release events. The\n@type field will be one of %GDK_BUTTON_PRESS,\n%GDK_2BUTTON_PRESS, %GDK_3BUTTON_PRESS or %GDK_BUTTON_RELEASE,\n\nDouble and triple-clicks result in a sequence of events being received.\nFor double-clicks the order of events will be:\n\n- %GDK_BUTTON_PRESS\n- %GDK_BUTTON_RELEASE\n- %GDK_BUTTON_PRESS\n- %GDK_2BUTTON_PRESS\n- %GDK_BUTTON_RELEASE\n\nNote that the first click is received just like a normal\nbutton press, while the second click results in a %GDK_2BUTTON_PRESS\nbeing received just after the %GDK_BUTTON_PRESS.\n\nTriple-clicks are very similar to double-clicks, except that\n%GDK_3BUTTON_PRESS is inserted after the third click. The order of the\nevents is:\n\n- %GDK_BUTTON_PRESS\n- %GDK_BUTTON_RELEASE\n- %GDK_BUTTON_PRESS\n- %GDK_2BUTTON_PRESS\n- %GDK_BUTTON_RELEASE\n- %GDK_BUTTON_PRESS\n- %GDK_3BUTTON_PRESS\n- %GDK_BUTTON_RELEASE\n\nFor a double click to occur, the second button press must occur within\n1/4 of a second of the first. For a triple click to occur, the third\nbutton press must also occur within 1/2 second of the first button press."
                    },
                    "source-position": {
                        "@filename": "gdk/gdkevents.h",
                        "@line": "764"
                    },
                    "field": [
                        {
                            "@name": "type",
                            "@writable": "1",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkevents.h",
                                "@line": "694",
                                "#text": "the type of the event (%GDK_BUTTON_PRESS, %GDK_2BUTTON_PRESS,\n  %GDK_3BUTTON_PRESS or %GDK_BUTTON_RELEASE)."
                            },
                            "type": {
                                "@name": "EventType",
                                "@c:type": "GdkEventType"
                            }
                        },
                        {
                            "@name": "window",
                            "@writable": "1",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkevents.h",
                                "@line": "696",
                                "#text": "the window which received the event."
                            },
                            "type": {
                                "@name": "Window",
                                "@c:type": "GdkWindow*"
                            }
                        },
                        {
                            "@name": "send_event",
                            "@writable": "1",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkevents.h",
                                "@line": "697",
                                "#text": "%TRUE if the event was sent explicitly."
                            },
                            "type": {
                                "@name": "gint8",
                                "@c:type": "gint8"
                            }
                        },
                        {
                            "@name": "time",
                            "@writable": "1",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkevents.h",
                                "@line": "698",
                                "#text": "the time of the event in milliseconds."
                            },
                            "type": {
                                "@name": "guint32",
                                "@c:type": "guint32"
                            }
                        },
                        {
                            "@name": "x",
                            "@writable": "1",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkevents.h",
                                "@line": "699",
                                "#text": "the x coordinate of the pointer relative to the window."
                            },
                            "type": {
                                "@name": "gdouble",
                                "@c:type": "gdouble"
                            }
                        },
                        {
                            "@name": "y",
                            "@writable": "1",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkevents.h",
                                "@line": "700",
                                "#text": "the y coordinate of the pointer relative to the window."
                            },
                            "type": {
                                "@name": "gdouble",
                                "@c:type": "gdouble"
                            }
                        },
                        {
                            "@name": "axes",
                            "@writable": "1",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkevents.h",
                                "@line": "701",
                                "#text": "@x, @y translated to the axes of @device, or %NULL if @device is\n  the mouse."
                            },
                            "type": {
                                "@name": "gdouble",
                                "@c:type": "gdouble*"
                            }
                        },
                        {
                            "@name": "state",
                            "@writable": "1",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkevents.h",
                                "@line": "703",
                                "#text": "a bit-mask representing the state of\n  the modifier keys (e.g. Control, Shift and Alt) and the pointer\n  buttons. See #GdkModifierType."
                            },
                            "type": {
                                "@name": "ModifierType"
                            }
                        },
                        {
                            "@name": "button",
                            "@writable": "1",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkevents.h",
                                "@line": "706",
                                "#text": "the button which was pressed or released, numbered from 1 to 5.\n  Normally button 1 is the left mouse button, 2 is the middle button,\n  and 3 is the right button. On 2-button mice, the middle button can\n  often be simulated by pressing both mouse buttons together."
                            },
                            "type": {
                                "@name": "guint",
                                "@c:type": "guint"
                            }
                        },
                        {
                            "@name": "device",
                            "@writable": "1",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkevents.h",
                                "@line": "710",
                                "#text": "the master device that the event originated from. Use\ngdk_event_get_source_device() to get the slave device."
                            },
                            "type": {
                                "@name": "Device",
                                "@c:type": "GdkDevice*"
                            }
                        },
                        {
                            "@name": "x_root",
                            "@writable": "1",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkevents.h",
                                "@line": "712",
                                "#text": "the x coordinate of the pointer relative to the root of the\n  screen."
                            },
                            "type": {
                                "@name": "gdouble",
                                "@c:type": "gdouble"
                            }
                        },
                        {
                            "@name": "y_root",
                            "@writable": "1",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkevents.h",
                                "@line": "714",
                                "#text": "the y coordinate of the pointer relative to the root of the\n  screen."
                            },
                            "type": {
                                "@name": "gdouble",
                                "@c:type": "gdouble"
                            }
                        }
                    ]
                },
                {
                    "@name": "EventConfigure",
                    "@c:type": "GdkEventConfigure",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "gdk/gdkevents.h",
                        "@line": "973",
                        "#text": "Generated when a window size or position has changed."
                    },
                    "source-position": {
                        "@filename": "gdk/gdkevents.h",
                        "@line": "993"
                    },
                    "field": [
                        {
                            "@name": "type",
                            "@writable": "1",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkevents.h",
                                "@line": "975",
                                "#text": "the type of the event (%GDK_CONFIGURE)."
                            },
                            "type": {
                                "@name": "EventType",
                                "@c:type": "GdkEventType"
                            }
                        },
                        {
                            "@name": "window",
                            "@writable": "1",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkevents.h",
                                "@line": "976",
                                "#text": "the window which received the event."
                            },
                            "type": {
                                "@name": "Window",
                                "@c:type": "GdkWindow*"
                            }
                        },
                        {
                            "@name": "send_event",
                            "@writable": "1",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkevents.h",
                                "@line": "977",
                                "#text": "%TRUE if the event was sent explicitly."
                            },
                            "type": {
                                "@name": "gint8",
                                "@c:type": "gint8"
                            }
                        },
                        {
                            "@name": "x",
                            "@writable": "1",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkevents.h",
                                "@line": "978",
                                "#text": "the new x coordinate of the window, relative to its parent."
                            },
                            "type": {
                                "@name": "gint",
                                "@c:type": "gint"
                            }
                        },
                        {
                            "@name": "y",
                            "@writable": "1",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkevents.h",
                                "@line": "979",
                                "#text": "the new y coordinate of the window, relative to its parent."
                            },
                            "type": {
                                "@name": "gint",
                                "@c:type": "gint"
                            }
                        },
                        {
                            "@name": "width",
                            "@writable": "1",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkevents.h",
                                "@line": "980",
                                "#text": "the new width of the window."
                            },
                            "type": {
                                "@name": "gint",
                                "@c:type": "gint"
                            }
                        },
                        {
                            "@name": "height",
                            "@writable": "1",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkevents.h",
                                "@line": "981",
                                "#text": "the new height of the window."
                            },
                            "type": {
                                "@name": "gint",
                                "@c:type": "gint"
                            }
                        }
                    ]
                },
                {
                    "@name": "EventCrossing",
                    "@c:type": "GdkEventCrossing",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "gdk/gdkevents.h",
                        "@line": "912",
                        "#text": "Generated when the pointer enters or leaves a window."
                    },
                    "source-position": {
                        "@filename": "gdk/gdkevents.h",
                        "@line": "953"
                    },
                    "field": [
                        {
                            "@name": "type",
                            "@writable": "1",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkevents.h",
                                "@line": "914",
                                "#text": "the type of the event (%GDK_ENTER_NOTIFY or %GDK_LEAVE_NOTIFY)."
                            },
                            "type": {
                                "@name": "EventType",
                                "@c:type": "GdkEventType"
                            }
                        },
                        {
                            "@name": "window",
                            "@writable": "1",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkevents.h",
                                "@line": "915",
                                "#text": "the window which received the event."
                            },
                            "type": {
                                "@name": "Window",
                                "@c:type": "GdkWindow*"
                            }
                        },
                        {
                            "@name": "send_event",
                            "@writable": "1",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkevents.h",
                                "@line": "916",
                                "#text": "%TRUE if the event was sent explicitly."
                            },
                            "type": {
                                "@name": "gint8",
                                "@c:type": "gint8"
                            }
                        },
                        {
                            "@name": "subwindow",
                            "@writable": "1",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkevents.h",
                                "@line": "917",
                                "#text": "the window that was entered or left."
                            },
                            "type": {
                                "@name": "Window",
                                "@c:type": "GdkWindow*"
                            }
                        },
                        {
                            "@name": "time",
                            "@writable": "1",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkevents.h",
                                "@line": "918",
                                "#text": "the time of the event in milliseconds."
                            },
                            "type": {
                                "@name": "guint32",
                                "@c:type": "guint32"
                            }
                        },
                        {
                            "@name": "x",
                            "@writable": "1",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkevents.h",
                                "@line": "919",
                                "#text": "the x coordinate of the pointer relative to the window."
                            },
                            "type": {
                                "@name": "gdouble",
                                "@c:type": "gdouble"
                            }
                        },
                        {
                            "@name": "y",
                            "@writable": "1",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkevents.h",
                                "@line": "920",
                                "#text": "the y coordinate of the pointer relative to the window."
                            },
                            "type": {
                                "@name": "gdouble",
                                "@c:type": "gdouble"
                            }
                        },
                        {
                            "@name": "x_root",
                            "@writable": "1",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkevents.h",
                                "@line": "921",
                                "#text": "the x coordinate of the pointer relative to the root of the screen."
                            },
                            "type": {
                                "@name": "gdouble",
                                "@c:type": "gdouble"
                            }
                        },
                        {
                            "@name": "y_root",
                            "@writable": "1",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkevents.h",
                                "@line": "922",
                                "#text": "the y coordinate of the pointer relative to the root of the screen."
                            },
                            "type": {
                                "@name": "gdouble",
                                "@c:type": "gdouble"
                            }
                        },
                        {
                            "@name": "mode",
                            "@writable": "1",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkevents.h",
                                "@line": "923",
                                "#text": "the crossing mode (%GDK_CROSSING_NORMAL, %GDK_CROSSING_GRAB,\n %GDK_CROSSING_UNGRAB, %GDK_CROSSING_GTK_GRAB, %GDK_CROSSING_GTK_UNGRAB or\n %GDK_CROSSING_STATE_CHANGED).  %GDK_CROSSING_GTK_GRAB, %GDK_CROSSING_GTK_UNGRAB,\n and %GDK_CROSSING_STATE_CHANGED were added in 2.14 and are always synthesized,\n never native."
                            },
                            "type": {
                                "@name": "CrossingMode",
                                "@c:type": "GdkCrossingMode"
                            }
                        },
                        {
                            "@name": "detail",
                            "@writable": "1",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkevents.h",
                                "@line": "928",
                                "#text": "the kind of crossing that happened (%GDK_NOTIFY_INFERIOR,\n %GDK_NOTIFY_ANCESTOR, %GDK_NOTIFY_VIRTUAL, %GDK_NOTIFY_NONLINEAR or\n %GDK_NOTIFY_NONLINEAR_VIRTUAL)."
                            },
                            "type": {
                                "@name": "NotifyType",
                                "@c:type": "GdkNotifyType"
                            }
                        },
                        {
                            "@name": "focus",
                            "@writable": "1",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkevents.h",
                                "@line": "931",
                                "#text": "%TRUE if @window is the focus window or an inferior."
                            },
                            "type": {
                                "@name": "gboolean",
                                "@c:type": "gboolean"
                            }
                        },
                        {
                            "@name": "state",
                            "@writable": "1",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkevents.h",
                                "@line": "932",
                                "#text": "a bit-mask representing the state of\n  the modifier keys (e.g. Control, Shift and Alt) and the pointer\n  buttons. See #GdkModifierType."
                            },
                            "type": {
                                "@name": "ModifierType"
                            }
                        }
                    ]
                },
                {
                    "@name": "EventDND",
                    "@c:type": "GdkEventDND",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "gdk/gdkevents.h",
                        "@line": "1172",
                        "#text": "Generated during DND operations."
                    },
                    "source-position": {
                        "@filename": "gdk/gdkevents.h",
                        "@line": "1196"
                    },
                    "field": [
                        {
                            "@name": "type",
                            "@writable": "1",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkevents.h",
                                "@line": "1174",
                                "#text": "the type of the event (%GDK_DRAG_ENTER, %GDK_DRAG_LEAVE,\n  %GDK_DRAG_MOTION, %GDK_DRAG_STATUS, %GDK_DROP_START or\n  %GDK_DROP_FINISHED)."
                            },
                            "type": {
                                "@name": "EventType",
                                "@c:type": "GdkEventType"
                            }
                        },
                        {
                            "@name": "window",
                            "@writable": "1",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkevents.h",
                                "@line": "1177",
                                "#text": "the window which received the event."
                            },
                            "type": {
                                "@name": "Window",
                                "@c:type": "GdkWindow*"
                            }
                        },
                        {
                            "@name": "send_event",
                            "@writable": "1",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkevents.h",
                                "@line": "1178",
                                "#text": "%TRUE if the event was sent explicitly."
                            },
                            "type": {
                                "@name": "gint8",
                                "@c:type": "gint8"
                            }
                        },
                        {
                            "@name": "context",
                            "@writable": "1",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkevents.h",
                                "@line": "1179",
                                "#text": "the #GdkDragContext for the current DND operation."
                            },
                            "type": {
                                "@name": "DragContext",
                                "@c:type": "GdkDragContext*"
                            }
                        },
                        {
                            "@name": "time",
                            "@writable": "1",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkevents.h",
                                "@line": "1180",
                                "#text": "the time of the event in milliseconds."
                            },
                            "type": {
                                "@name": "guint32",
                                "@c:type": "guint32"
                            }
                        },
                        {
                            "@name": "x_root",
                            "@writable": "1",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkevents.h",
                                "@line": "1181",
                                "#text": "the x coordinate of the pointer relative to the root of the\n  screen, only set for %GDK_DRAG_MOTION and %GDK_DROP_START."
                            },
                            "type": {
                                "@name": "gshort",
                                "@c:type": "gshort"
                            }
                        },
                        {
                            "@name": "y_root",
                            "@writable": "1",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkevents.h",
                                "@line": "1183",
                                "#text": "the y coordinate of the pointer relative to the root of the\n  screen, only set for %GDK_DRAG_MOTION and %GDK_DROP_START."
                            },
                            "type": {
                                "@name": "gshort",
                                "@c:type": "gshort"
                            }
                        }
                    ]
                },
                {
                    "@name": "EventExpose",
                    "@c:type": "GdkEventExpose",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "gdk/gdkevents.h",
                        "@line": "605",
                        "#text": "Generated when all or part of a window becomes visible and needs to be\nredrawn."
                    },
                    "source-position": {
                        "@filename": "gdk/gdkevents.h",
                        "@line": "628"
                    },
                    "field": [
                        {
                            "@name": "type",
                            "@writable": "1",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkevents.h",
                                "@line": "607",
                                "#text": "the type of the event (%GDK_EXPOSE or %GDK_DAMAGE)."
                            },
                            "type": {
                                "@name": "EventType",
                                "@c:type": "GdkEventType"
                            }
                        },
                        {
                            "@name": "window",
                            "@writable": "1",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkevents.h",
                                "@line": "608",
                                "#text": "the window which received the event."
                            },
                            "type": {
                                "@name": "Window",
                                "@c:type": "GdkWindow*"
                            }
                        },
                        {
                            "@name": "send_event",
                            "@writable": "1",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkevents.h",
                                "@line": "609",
                                "#text": "%TRUE if the event was sent explicitly."
                            },
                            "type": {
                                "@name": "gint8",
                                "@c:type": "gint8"
                            }
                        },
                        {
                            "@name": "area",
                            "@writable": "1",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkevents.h",
                                "@line": "610",
                                "#text": "bounding box of @region."
                            },
                            "type": {
                                "@name": "Rectangle",
                                "@c:type": "GdkRectangle"
                            }
                        },
                        {
                            "@name": "region",
                            "@writable": "1",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkevents.h",
                                "@line": "611",
                                "#text": "the region that needs to be redrawn."
                            },
                            "type": {
                                "@name": "cairo.Region",
                                "@c:type": "cairo_region_t*"
                            }
                        },
                        {
                            "@name": "count",
                            "@writable": "1",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkevents.h",
                                "@line": "612",
                                "#text": "the number of contiguous %GDK_EXPOSE events following this one.\n  The only use for this is \u201cexposure compression\u201d, i.e. handling all\n  contiguous %GDK_EXPOSE events in one go, though GDK performs some\n  exposure compression so this is not normally needed."
                            },
                            "type": {
                                "@name": "gint",
                                "@c:type": "gint"
                            }
                        }
                    ]
                },
                {
                    "@name": "EventFocus",
                    "@c:type": "GdkEventFocus",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "gdk/gdkevents.h",
                        "@line": "955",
                        "#text": "Describes a change of keyboard focus."
                    },
                    "source-position": {
                        "@filename": "gdk/gdkevents.h",
                        "@line": "971"
                    },
                    "field": [
                        {
                            "@name": "type",
                            "@writable": "1",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkevents.h",
                                "@line": "957",
                                "#text": "the type of the event (%GDK_FOCUS_CHANGE)."
                            },
                            "type": {
                                "@name": "EventType",
                                "@c:type": "GdkEventType"
                            }
                        },
                        {
                            "@name": "window",
                            "@writable": "1",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkevents.h",
                                "@line": "958",
                                "#text": "the window which received the event."
                            },
                            "type": {
                                "@name": "Window",
                                "@c:type": "GdkWindow*"
                            }
                        },
                        {
                            "@name": "send_event",
                            "@writable": "1",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkevents.h",
                                "@line": "959",
                                "#text": "%TRUE if the event was sent explicitly."
                            },
                            "type": {
                                "@name": "gint8",
                                "@c:type": "gint8"
                            }
                        },
                        {
                            "@name": "in",
                            "@writable": "1",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkevents.h",
                                "@line": "960",
                                "#text": "%TRUE if the window has gained the keyboard focus, %FALSE if\n  it has lost the focus."
                            },
                            "type": {
                                "@name": "gint16",
                                "@c:type": "gint16"
                            }
                        }
                    ]
                },
                {
                    "@name": "EventGrabBroken",
                    "@c:type": "GdkEventGrabBroken",
                    "@version": "2.8",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "gdk/gdkevents.h",
                        "@line": "1142",
                        "#text": "Generated when a pointer or keyboard grab is broken. On X11, this happens\nwhen the grab window becomes unviewable (i.e. it or one of its ancestors\nis unmapped), or if the same application grabs the pointer or keyboard\nagain. Note that implicit grabs (which are initiated by button presses)\ncan also cause #GdkEventGrabBroken events."
                    },
                    "source-position": {
                        "@filename": "gdk/gdkevents.h",
                        "@line": "1170"
                    },
                    "field": [
                        {
                            "@name": "type",
                            "@writable": "1",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkevents.h",
                                "@line": "1144",
                                "#text": "the type of the event (%GDK_GRAB_BROKEN)"
                            },
                            "type": {
                                "@name": "EventType",
                                "@c:type": "GdkEventType"
                            }
                        },
                        {
                            "@name": "window",
                            "@writable": "1",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkevents.h",
                                "@line": "1145",
                                "#text": "the window which received the event, i.e. the window\n  that previously owned the grab"
                            },
                            "type": {
                                "@name": "Window",
                                "@c:type": "GdkWindow*"
                            }
                        },
                        {
                            "@name": "send_event",
                            "@writable": "1",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkevents.h",
                                "@line": "1147",
                                "#text": "%TRUE if the event was sent explicitly."
                            },
                            "type": {
                                "@name": "gint8",
                                "@c:type": "gint8"
                            }
                        },
                        {
                            "@name": "keyboard",
                            "@writable": "1",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkevents.h",
                                "@line": "1148",
                                "#text": "%TRUE if a keyboard grab was broken, %FALSE if a pointer\n  grab was broken"
                            },
                            "type": {
                                "@name": "gboolean",
                                "@c:type": "gboolean"
                            }
                        },
                        {
                            "@name": "implicit",
                            "@writable": "1",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkevents.h",
                                "@line": "1150",
                                "#text": "%TRUE if the broken grab was implicit"
                            },
                            "type": {
                                "@name": "gboolean",
                                "@c:type": "gboolean"
                            }
                        },
                        {
                            "@name": "grab_window",
                            "@writable": "1",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkevents.h",
                                "@line": "1151",
                                "#text": "If this event is caused by another grab in the same\n  application, @grab_window contains the new grab window. Otherwise\n  @grab_window is %NULL."
                            },
                            "type": {
                                "@name": "Window",
                                "@c:type": "GdkWindow*"
                            }
                        }
                    ]
                },
                {
                    "@name": "EventKey",
                    "@c:type": "GdkEventKey",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "gdk/gdkevents.h",
                        "@line": "866",
                        "#text": "Describes a key press or key release event."
                    },
                    "source-position": {
                        "@filename": "gdk/gdkevents.h",
                        "@line": "910"
                    },
                    "field": [
                        {
                            "@name": "type",
                            "@writable": "1",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkevents.h",
                                "@line": "868",
                                "#text": "the type of the event (%GDK_KEY_PRESS or %GDK_KEY_RELEASE)."
                            },
                            "type": {
                                "@name": "EventType",
                                "@c:type": "GdkEventType"
                            }
                        },
                        {
                            "@name": "window",
                            "@writable": "1",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkevents.h",
                                "@line": "869",
                                "#text": "the window which received the event."
                            },
                            "type": {
                                "@name": "Window",
                                "@c:type": "GdkWindow*"
                            }
                        },
                        {
                            "@name": "send_event",
                            "@writable": "1",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkevents.h",
                                "@line": "870",
                                "#text": "%TRUE if the event was sent explicitly."
                            },
                            "type": {
                                "@name": "gint8",
                                "@c:type": "gint8"
                            }
                        },
                        {
                            "@name": "time",
                            "@writable": "1",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkevents.h",
                                "@line": "871",
                                "#text": "the time of the event in milliseconds."
                            },
                            "type": {
                                "@name": "guint32",
                                "@c:type": "guint32"
                            }
                        },
                        {
                            "@name": "state",
                            "@writable": "1",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkevents.h",
                                "@line": "872",
                                "#text": "a bit-mask representing the state of\n  the modifier keys (e.g. Control, Shift and Alt) and the pointer\n  buttons. See #GdkModifierType."
                            },
                            "type": {
                                "@name": "ModifierType"
                            }
                        },
                        {
                            "@name": "keyval",
                            "@writable": "1",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkevents.h",
                                "@line": "875",
                                "#text": "the key that was pressed or released. See the\n  `gdk/gdkkeysyms.h` header file for a\n  complete list of GDK key codes."
                            },
                            "type": {
                                "@name": "guint",
                                "@c:type": "guint"
                            }
                        },
                        {
                            "@name": "length",
                            "@writable": "1",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkevents.h",
                                "@line": "878",
                                "#text": "the length of @string."
                            },
                            "type": {
                                "@name": "gint",
                                "@c:type": "gint"
                            }
                        },
                        {
                            "@name": "string",
                            "@writable": "1",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkevents.h",
                                "@line": "879",
                                "#text": "a string containing an approximation of the text that\n  would result from this keypress. The only correct way to handle text\n  input of text is using input methods (see #GtkIMContext), so this\n  field is deprecated and should never be used.\n  (gdk_unicode_to_keyval() provides a non-deprecated way of getting\n  an approximate translation for a key.) The string is encoded in the\n  encoding of the current locale (Note: this for backwards compatibility:\n  strings in GTK+ and GDK are typically in UTF-8.) and NUL-terminated.\n  In some cases, the translation of the key code will be a single\n  NUL byte, in which case looking at @length is necessary to distinguish\n  it from the an empty translation."
                            },
                            "type": {
                                "@name": "utf8",
                                "@c:type": "gchar*"
                            }
                        },
                        {
                            "@name": "hardware_keycode",
                            "@writable": "1",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkevents.h",
                                "@line": "890",
                                "#text": "the raw code of the key that was pressed or released."
                            },
                            "type": {
                                "@name": "guint16",
                                "@c:type": "guint16"
                            }
                        },
                        {
                            "@name": "group",
                            "@writable": "1",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkevents.h",
                                "@line": "891",
                                "#text": "the keyboard group."
                            },
                            "type": {
                                "@name": "guint8",
                                "@c:type": "guint8"
                            }
                        },
                        {
                            "@name": "is_modifier",
                            "@writable": "1",
                            "@bits": "1",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkevents.h",
                                "@line": "892",
                                "#text": "a flag that indicates if @hardware_keycode is mapped to a\n  modifier. Since 2.10"
                            },
                            "type": {
                                "@name": "guint",
                                "@c:type": "guint"
                            }
                        }
                    ]
                },
                {
                    "@name": "EventMotion",
                    "@c:type": "GdkEventMotion",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "gdk/gdkevents.h",
                        "@line": "653",
                        "#text": "Generated when the pointer moves."
                    },
                    "source-position": {
                        "@filename": "gdk/gdkevents.h",
                        "@line": "690"
                    },
                    "field": [
                        {
                            "@name": "type",
                            "@writable": "1",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkevents.h",
                                "@line": "655",
                                "#text": "the type of the event."
                            },
                            "type": {
                                "@name": "EventType",
                                "@c:type": "GdkEventType"
                            }
                        },
                        {
                            "@name": "window",
                            "@writable": "1",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkevents.h",
                                "@line": "656",
                                "#text": "the window which received the event."
                            },
                            "type": {
                                "@name": "Window",
                                "@c:type": "GdkWindow*"
                            }
                        },
                        {
                            "@name": "send_event",
                            "@writable": "1",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkevents.h",
                                "@line": "657",
                                "#text": "%TRUE if the event was sent explicitly."
                            },
                            "type": {
                                "@name": "gint8",
                                "@c:type": "gint8"
                            }
                        },
                        {
                            "@name": "time",
                            "@writable": "1",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkevents.h",
                                "@line": "658",
                                "#text": "the time of the event in milliseconds."
                            },
                            "type": {
                                "@name": "guint32",
                                "@c:type": "guint32"
                            }
                        },
                        {
                            "@name": "x",
                            "@writable": "1",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkevents.h",
                                "@line": "659",
                                "#text": "the x coordinate of the pointer relative to the window."
                            },
                            "type": {
                                "@name": "gdouble",
                                "@c:type": "gdouble"
                            }
                        },
                        {
                            "@name": "y",
                            "@writable": "1",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkevents.h",
                                "@line": "660",
                                "#text": "the y coordinate of the pointer relative to the window."
                            },
                            "type": {
                                "@name": "gdouble",
                                "@c:type": "gdouble"
                            }
                        },
                        {
                            "@name": "axes",
                            "@writable": "1",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkevents.h",
                                "@line": "661",
                                "#text": "@x, @y translated to the axes of @device, or %NULL if @device is\n  the mouse."
                            },
                            "type": {
                                "@name": "gdouble",
                                "@c:type": "gdouble*"
                            }
                        },
                        {
                            "@name": "state",
                            "@writable": "1",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkevents.h",
                                "@line": "663",
                                "#text": "a bit-mask representing the state of\n  the modifier keys (e.g. Control, Shift and Alt) and the pointer\n  buttons. See #GdkModifierType."
                            },
                            "type": {
                                "@name": "ModifierType"
                            }
                        },
                        {
                            "@name": "is_hint",
                            "@writable": "1",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkevents.h",
                                "@line": "666",
                                "#text": "set to 1 if this event is just a hint, see the\n  %GDK_POINTER_MOTION_HINT_MASK value of #GdkEventMask."
                            },
                            "type": {
                                "@name": "gint16",
                                "@c:type": "gint16"
                            }
                        },
                        {
                            "@name": "device",
                            "@writable": "1",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkevents.h",
                                "@line": "668",
                                "#text": "the master device that the event originated from. Use\ngdk_event_get_source_device() to get the slave device."
                            },
                            "type": {
                                "@name": "Device",
                                "@c:type": "GdkDevice*"
                            }
                        },
                        {
                            "@name": "x_root",
                            "@writable": "1",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkevents.h",
                                "@line": "670",
                                "#text": "the x coordinate of the pointer relative to the root of the\n  screen."
                            },
                            "type": {
                                "@name": "gdouble",
                                "@c:type": "gdouble"
                            }
                        },
                        {
                            "@name": "y_root",
                            "@writable": "1",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkevents.h",
                                "@line": "672",
                                "#text": "the y coordinate of the pointer relative to the root of the\n  screen."
                            },
                            "type": {
                                "@name": "gdouble",
                                "@c:type": "gdouble"
                            }
                        }
                    ]
                },
                {
                    "@name": "EventOwnerChange",
                    "@c:type": "GdkEventOwnerChange",
                    "@version": "2.6",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "gdk/gdkevents.h",
                        "@line": "1044",
                        "#text": "Generated when the owner of a selection changes. On X11, this\ninformation is only available if the X server supports the XFIXES\nextension."
                    },
                    "source-position": {
                        "@filename": "gdk/gdkevents.h",
                        "@line": "1072"
                    },
                    "field": [
                        {
                            "@name": "type",
                            "@writable": "1",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkevents.h",
                                "@line": "1046",
                                "#text": "the type of the event (%GDK_OWNER_CHANGE)."
                            },
                            "type": {
                                "@name": "EventType",
                                "@c:type": "GdkEventType"
                            }
                        },
                        {
                            "@name": "window",
                            "@writable": "1",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkevents.h",
                                "@line": "1047",
                                "#text": "the window which received the event"
                            },
                            "type": {
                                "@name": "Window",
                                "@c:type": "GdkWindow*"
                            }
                        },
                        {
                            "@name": "send_event",
                            "@writable": "1",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkevents.h",
                                "@line": "1048",
                                "#text": "%TRUE if the event was sent explicitly."
                            },
                            "type": {
                                "@name": "gint8",
                                "@c:type": "gint8"
                            }
                        },
                        {
                            "@name": "owner",
                            "@writable": "1",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkevents.h",
                                "@line": "1049",
                                "#text": "the new owner of the selection, or %NULL if there is none"
                            },
                            "type": {
                                "@name": "Window",
                                "@c:type": "GdkWindow*"
                            }
                        },
                        {
                            "@name": "reason",
                            "@writable": "1",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkevents.h",
                                "@line": "1050",
                                "#text": "the reason for the ownership change as a #GdkOwnerChange value"
                            },
                            "type": {
                                "@name": "OwnerChange",
                                "@c:type": "GdkOwnerChange"
                            }
                        },
                        {
                            "@name": "selection",
                            "@writable": "1",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkevents.h",
                                "@line": "1051",
                                "#text": "the atom identifying the selection"
                            },
                            "type": {
                                "@name": "Atom",
                                "@c:type": "GdkAtom"
                            }
                        },
                        {
                            "@name": "time",
                            "@writable": "1",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkevents.h",
                                "@line": "1052",
                                "#text": "the timestamp of the event"
                            },
                            "type": {
                                "@name": "guint32",
                                "@c:type": "guint32"
                            }
                        },
                        {
                            "@name": "selection_time",
                            "@writable": "1",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkevents.h",
                                "@line": "1053",
                                "#text": "the time at which the selection ownership was taken\n  over"
                            },
                            "type": {
                                "@name": "guint32",
                                "@c:type": "guint32"
                            }
                        }
                    ]
                },
                {
                    "@name": "EventPadAxis",
                    "@c:type": "GdkEventPadAxis",
                    "@version": "3.22",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "gdk/gdkevents.h",
                        "@line": "1304",
                        "#text": "Generated during %GDK_SOURCE_TABLET_PAD interaction with tactile sensors."
                    },
                    "source-position": {
                        "@filename": "gdk/gdkevents.h",
                        "@line": "1331"
                    },
                    "field": [
                        {
                            "@name": "type",
                            "@writable": "1",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkevents.h",
                                "@line": "1306",
                                "#text": "the type of the event (%GDK_PAD_RING or %GDK_PAD_STRIP)."
                            },
                            "type": {
                                "@name": "EventType",
                                "@c:type": "GdkEventType"
                            }
                        },
                        {
                            "@name": "window",
                            "@writable": "1",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkevents.h",
                                "@line": "1307",
                                "#text": "the window which received the event."
                            },
                            "type": {
                                "@name": "Window",
                                "@c:type": "GdkWindow*"
                            }
                        },
                        {
                            "@name": "send_event",
                            "@writable": "1",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkevents.h",
                                "@line": "1308",
                                "#text": "%TRUE if the event was sent explicitly."
                            },
                            "type": {
                                "@name": "gint8",
                                "@c:type": "gint8"
                            }
                        },
                        {
                            "@name": "time",
                            "@writable": "1",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkevents.h",
                                "@line": "1309",
                                "#text": "the time of the event in milliseconds."
                            },
                            "type": {
                                "@name": "guint32",
                                "@c:type": "guint32"
                            }
                        },
                        {
                            "@name": "group",
                            "@writable": "1",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkevents.h",
                                "@line": "1310",
                                "#text": "the pad group the ring/strip belongs to. A %GDK_SOURCE_TABLET_PAD\n  device may have one or more groups containing a set of buttons/rings/strips\n  each."
                            },
                            "type": {
                                "@name": "guint",
                                "@c:type": "guint"
                            }
                        },
                        {
                            "@name": "index",
                            "@writable": "1",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkevents.h",
                                "@line": "1313",
                                "#text": "number of strip/ring that was interacted. This number is 0-indexed."
                            },
                            "type": {
                                "@name": "guint",
                                "@c:type": "guint"
                            }
                        },
                        {
                            "@name": "mode",
                            "@writable": "1",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkevents.h",
                                "@line": "1314",
                                "#text": "The current mode of @group. Different groups in a %GDK_SOURCE_TABLET_PAD\n  device may have different current modes."
                            },
                            "type": {
                                "@name": "guint",
                                "@c:type": "guint"
                            }
                        },
                        {
                            "@name": "value",
                            "@writable": "1",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkevents.h",
                                "@line": "1316",
                                "#text": "The current value for the given axis."
                            },
                            "type": {
                                "@name": "gdouble",
                                "@c:type": "gdouble"
                            }
                        }
                    ]
                },
                {
                    "@name": "EventPadButton",
                    "@c:type": "GdkEventPadButton",
                    "@version": "3.22",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "gdk/gdkevents.h",
                        "@line": "1278",
                        "#text": "Generated during %GDK_SOURCE_TABLET_PAD button presses and releases."
                    },
                    "source-position": {
                        "@filename": "gdk/gdkevents.h",
                        "@line": "1302"
                    },
                    "field": [
                        {
                            "@name": "type",
                            "@writable": "1",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkevents.h",
                                "@line": "1280",
                                "#text": "the type of the event (%GDK_PAD_BUTTON_PRESS or %GDK_PAD_BUTTON_RELEASE)."
                            },
                            "type": {
                                "@name": "EventType",
                                "@c:type": "GdkEventType"
                            }
                        },
                        {
                            "@name": "window",
                            "@writable": "1",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkevents.h",
                                "@line": "1281",
                                "#text": "the window which received the event."
                            },
                            "type": {
                                "@name": "Window",
                                "@c:type": "GdkWindow*"
                            }
                        },
                        {
                            "@name": "send_event",
                            "@writable": "1",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkevents.h",
                                "@line": "1282",
                                "#text": "%TRUE if the event was sent explicitly."
                            },
                            "type": {
                                "@name": "gint8",
                                "@c:type": "gint8"
                            }
                        },
                        {
                            "@name": "time",
                            "@writable": "1",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkevents.h",
                                "@line": "1283",
                                "#text": "the time of the event in milliseconds."
                            },
                            "type": {
                                "@name": "guint32",
                                "@c:type": "guint32"
                            }
                        },
                        {
                            "@name": "group",
                            "@writable": "1",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkevents.h",
                                "@line": "1284",
                                "#text": "the pad group the button belongs to. A %GDK_SOURCE_TABLET_PAD device\n  may have one or more groups containing a set of buttons/rings/strips each."
                            },
                            "type": {
                                "@name": "guint",
                                "@c:type": "guint"
                            }
                        },
                        {
                            "@name": "button",
                            "@writable": "1",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkevents.h",
                                "@line": "1286",
                                "#text": "The pad button that was pressed."
                            },
                            "type": {
                                "@name": "guint",
                                "@c:type": "guint"
                            }
                        },
                        {
                            "@name": "mode",
                            "@writable": "1",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkevents.h",
                                "@line": "1287",
                                "#text": "The current mode of @group. Different groups in a %GDK_SOURCE_TABLET_PAD\n  device may have different current modes."
                            },
                            "type": {
                                "@name": "guint",
                                "@c:type": "guint"
                            }
                        }
                    ]
                },
                {
                    "@name": "EventPadGroupMode",
                    "@c:type": "GdkEventPadGroupMode",
                    "@version": "3.22",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "gdk/gdkevents.h",
                        "@line": "1333",
                        "#text": "Generated during %GDK_SOURCE_TABLET_PAD mode switches in a group."
                    },
                    "source-position": {
                        "@filename": "gdk/gdkevents.h",
                        "@line": "1356"
                    },
                    "field": [
                        {
                            "@name": "type",
                            "@writable": "1",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkevents.h",
                                "@line": "1335",
                                "#text": "the type of the event (%GDK_PAD_GROUP_MODE)."
                            },
                            "type": {
                                "@name": "EventType",
                                "@c:type": "GdkEventType"
                            }
                        },
                        {
                            "@name": "window",
                            "@writable": "1",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkevents.h",
                                "@line": "1336",
                                "#text": "the window which received the event."
                            },
                            "type": {
                                "@name": "Window",
                                "@c:type": "GdkWindow*"
                            }
                        },
                        {
                            "@name": "send_event",
                            "@writable": "1",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkevents.h",
                                "@line": "1337",
                                "#text": "%TRUE if the event was sent explicitly."
                            },
                            "type": {
                                "@name": "gint8",
                                "@c:type": "gint8"
                            }
                        },
                        {
                            "@name": "time",
                            "@writable": "1",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkevents.h",
                                "@line": "1338",
                                "#text": "the time of the event in milliseconds."
                            },
                            "type": {
                                "@name": "guint32",
                                "@c:type": "guint32"
                            }
                        },
                        {
                            "@name": "group",
                            "@writable": "1",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkevents.h",
                                "@line": "1339",
                                "#text": "the pad group that is switching mode. A %GDK_SOURCE_TABLET_PAD\n  device may have one or more groups containing a set of buttons/rings/strips\n  each."
                            },
                            "type": {
                                "@name": "guint",
                                "@c:type": "guint"
                            }
                        },
                        {
                            "@name": "mode",
                            "@writable": "1",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkevents.h",
                                "@line": "1342",
                                "#text": "The new mode of @group. Different groups in a %GDK_SOURCE_TABLET_PAD\n  device may have different current modes."
                            },
                            "type": {
                                "@name": "guint",
                                "@c:type": "guint"
                            }
                        }
                    ]
                },
                {
                    "@name": "EventProperty",
                    "@c:type": "GdkEventProperty",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "gdk/gdkevents.h",
                        "@line": "995",
                        "#text": "Describes a property change on a window."
                    },
                    "source-position": {
                        "@filename": "gdk/gdkevents.h",
                        "@line": "1015"
                    },
                    "field": [
                        {
                            "@name": "type",
                            "@writable": "1",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkevents.h",
                                "@line": "997",
                                "#text": "the type of the event (%GDK_PROPERTY_NOTIFY)."
                            },
                            "type": {
                                "@name": "EventType",
                                "@c:type": "GdkEventType"
                            }
                        },
                        {
                            "@name": "window",
                            "@writable": "1",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkevents.h",
                                "@line": "998",
                                "#text": "the window which received the event."
                            },
                            "type": {
                                "@name": "Window",
                                "@c:type": "GdkWindow*"
                            }
                        },
                        {
                            "@name": "send_event",
                            "@writable": "1",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkevents.h",
                                "@line": "999",
                                "#text": "%TRUE if the event was sent explicitly."
                            },
                            "type": {
                                "@name": "gint8",
                                "@c:type": "gint8"
                            }
                        },
                        {
                            "@name": "atom",
                            "@writable": "1",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkevents.h",
                                "@line": "1000",
                                "#text": "the property that was changed."
                            },
                            "type": {
                                "@name": "Atom",
                                "@c:type": "GdkAtom"
                            }
                        },
                        {
                            "@name": "time",
                            "@writable": "1",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkevents.h",
                                "@line": "1001",
                                "#text": "the time of the event in milliseconds."
                            },
                            "type": {
                                "@name": "guint32",
                                "@c:type": "guint32"
                            }
                        },
                        {
                            "@name": "state",
                            "@writable": "1",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkevents.h",
                                "@line": "1002",
                                "#text": "whether the property was changed\n  (%GDK_PROPERTY_NEW_VALUE) or deleted (%GDK_PROPERTY_DELETE)."
                            },
                            "type": {
                                "@name": "PropertyState"
                            }
                        }
                    ]
                },
                {
                    "@name": "EventProximity",
                    "@c:type": "GdkEventProximity",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "gdk/gdkevents.h",
                        "@line": "1074",
                        "#text": "Proximity events are generated when using GDK\u2019s wrapper for the\nXInput extension. The XInput extension is an add-on for standard X\nthat allows you to use nonstandard devices such as graphics tablets.\nA proximity event indicates that the stylus has moved in or out of\ncontact with the tablet, or perhaps that the user\u2019s finger has moved\nin or out of contact with a touch screen.\n\nThis event type will be used pretty rarely. It only is important for\nXInput aware programs that are drawing their own cursor."
                    },
                    "source-position": {
                        "@filename": "gdk/gdkevents.h",
                        "@line": "1100"
                    },
                    "field": [
                        {
                            "@name": "type",
                            "@writable": "1",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkevents.h",
                                "@line": "1076",
                                "#text": "the type of the event (%GDK_PROXIMITY_IN or %GDK_PROXIMITY_OUT)."
                            },
                            "type": {
                                "@name": "EventType",
                                "@c:type": "GdkEventType"
                            }
                        },
                        {
                            "@name": "window",
                            "@writable": "1",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkevents.h",
                                "@line": "1077",
                                "#text": "the window which received the event."
                            },
                            "type": {
                                "@name": "Window",
                                "@c:type": "GdkWindow*"
                            }
                        },
                        {
                            "@name": "send_event",
                            "@writable": "1",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkevents.h",
                                "@line": "1078",
                                "#text": "%TRUE if the event was sent explicitly."
                            },
                            "type": {
                                "@name": "gint8",
                                "@c:type": "gint8"
                            }
                        },
                        {
                            "@name": "time",
                            "@writable": "1",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkevents.h",
                                "@line": "1079",
                                "#text": "the time of the event in milliseconds."
                            },
                            "type": {
                                "@name": "guint32",
                                "@c:type": "guint32"
                            }
                        },
                        {
                            "@name": "device",
                            "@writable": "1",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkevents.h",
                                "@line": "1080",
                                "#text": "the master device that the event originated from. Use\ngdk_event_get_source_device() to get the slave device."
                            },
                            "type": {
                                "@name": "Device",
                                "@c:type": "GdkDevice*"
                            }
                        }
                    ]
                },
                {
                    "@name": "EventScroll",
                    "@c:type": "GdkEventScroll",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "gdk/gdkevents.h",
                        "@line": "817",
                        "#text": "Generated from button presses for the buttons 4 to 7. Wheel mice are\nusually configured to generate button press events for buttons 4 and 5\nwhen the wheel is turned.\n\nSome GDK backends can also generate \u201csmooth\u201d scroll events, which\ncan be recognized by the %GDK_SCROLL_SMOOTH scroll direction. For\nthese, the scroll deltas can be obtained with\ngdk_event_get_scroll_deltas()."
                    },
                    "source-position": {
                        "@filename": "gdk/gdkevents.h",
                        "@line": "864"
                    },
                    "field": [
                        {
                            "@name": "type",
                            "@writable": "1",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkevents.h",
                                "@line": "819",
                                "#text": "the type of the event (%GDK_SCROLL)."
                            },
                            "type": {
                                "@name": "EventType",
                                "@c:type": "GdkEventType"
                            }
                        },
                        {
                            "@name": "window",
                            "@writable": "1",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkevents.h",
                                "@line": "820",
                                "#text": "the window which received the event."
                            },
                            "type": {
                                "@name": "Window",
                                "@c:type": "GdkWindow*"
                            }
                        },
                        {
                            "@name": "send_event",
                            "@writable": "1",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkevents.h",
                                "@line": "821",
                                "#text": "%TRUE if the event was sent explicitly."
                            },
                            "type": {
                                "@name": "gint8",
                                "@c:type": "gint8"
                            }
                        },
                        {
                            "@name": "time",
                            "@writable": "1",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkevents.h",
                                "@line": "822",
                                "#text": "the time of the event in milliseconds."
                            },
                            "type": {
                                "@name": "guint32",
                                "@c:type": "guint32"
                            }
                        },
                        {
                            "@name": "x",
                            "@writable": "1",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkevents.h",
                                "@line": "823",
                                "#text": "the x coordinate of the pointer relative to the window."
                            },
                            "type": {
                                "@name": "gdouble",
                                "@c:type": "gdouble"
                            }
                        },
                        {
                            "@name": "y",
                            "@writable": "1",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkevents.h",
                                "@line": "824",
                                "#text": "the y coordinate of the pointer relative to the window."
                            },
                            "type": {
                                "@name": "gdouble",
                                "@c:type": "gdouble"
                            }
                        },
                        {
                            "@name": "state",
                            "@writable": "1",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkevents.h",
                                "@line": "825",
                                "#text": "a bit-mask representing the state of\n  the modifier keys (e.g. Control, Shift and Alt) and the pointer\n  buttons. See #GdkModifierType."
                            },
                            "type": {
                                "@name": "ModifierType"
                            }
                        },
                        {
                            "@name": "direction",
                            "@writable": "1",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkevents.h",
                                "@line": "828",
                                "#text": "the direction to scroll to (one of %GDK_SCROLL_UP,\n  %GDK_SCROLL_DOWN, %GDK_SCROLL_LEFT, %GDK_SCROLL_RIGHT or\n  %GDK_SCROLL_SMOOTH)."
                            },
                            "type": {
                                "@name": "ScrollDirection",
                                "@c:type": "GdkScrollDirection"
                            }
                        },
                        {
                            "@name": "device",
                            "@writable": "1",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkevents.h",
                                "@line": "831",
                                "#text": "the master device that the event originated from. Use\ngdk_event_get_source_device() to get the slave device."
                            },
                            "type": {
                                "@name": "Device",
                                "@c:type": "GdkDevice*"
                            }
                        },
                        {
                            "@name": "x_root",
                            "@writable": "1",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkevents.h",
                                "@line": "833",
                                "#text": "the x coordinate of the pointer relative to the root of the\n  screen."
                            },
                            "type": {
                                "@name": "gdouble",
                                "@c:type": "gdouble"
                            }
                        },
                        {
                            "@name": "y_root",
                            "@writable": "1",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkevents.h",
                                "@line": "835",
                                "#text": "the y coordinate of the pointer relative to the root of the\n  screen."
                            },
                            "type": {
                                "@name": "gdouble",
                                "@c:type": "gdouble"
                            }
                        },
                        {
                            "@name": "delta_x",
                            "@writable": "1",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkevents.h",
                                "@line": "837",
                                "#text": "the x coordinate of the scroll delta"
                            },
                            "type": {
                                "@name": "gdouble",
                                "@c:type": "gdouble"
                            }
                        },
                        {
                            "@name": "delta_y",
                            "@writable": "1",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkevents.h",
                                "@line": "838",
                                "#text": "the y coordinate of the scroll delta"
                            },
                            "type": {
                                "@name": "gdouble",
                                "@c:type": "gdouble"
                            }
                        },
                        {
                            "@name": "is_stop",
                            "@writable": "1",
                            "@bits": "1",
                            "type": {
                                "@name": "guint",
                                "@c:type": "guint"
                            }
                        }
                    ]
                },
                {
                    "@name": "EventSelection",
                    "@c:type": "GdkEventSelection",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "gdk/gdkevents.h",
                        "@line": "1017",
                        "#text": "Generated when a selection is requested or ownership of a selection\nis taken over by another client application."
                    },
                    "source-position": {
                        "@filename": "gdk/gdkevents.h",
                        "@line": "1042"
                    },
                    "field": [
                        {
                            "@name": "type",
                            "@writable": "1",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkevents.h",
                                "@line": "1019",
                                "#text": "the type of the event (%GDK_SELECTION_CLEAR,\n  %GDK_SELECTION_NOTIFY or %GDK_SELECTION_REQUEST)."
                            },
                            "type": {
                                "@name": "EventType",
                                "@c:type": "GdkEventType"
                            }
                        },
                        {
                            "@name": "window",
                            "@writable": "1",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkevents.h",
                                "@line": "1021",
                                "#text": "the window which received the event."
                            },
                            "type": {
                                "@name": "Window",
                                "@c:type": "GdkWindow*"
                            }
                        },
                        {
                            "@name": "send_event",
                            "@writable": "1",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkevents.h",
                                "@line": "1022",
                                "#text": "%TRUE if the event was sent explicitly."
                            },
                            "type": {
                                "@name": "gint8",
                                "@c:type": "gint8"
                            }
                        },
                        {
                            "@name": "selection",
                            "@writable": "1",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkevents.h",
                                "@line": "1023",
                                "#text": "the selection."
                            },
                            "type": {
                                "@name": "Atom",
                                "@c:type": "GdkAtom"
                            }
                        },
                        {
                            "@name": "target",
                            "@writable": "1",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkevents.h",
                                "@line": "1024",
                                "#text": "the target to which the selection should be converted."
                            },
                            "type": {
                                "@name": "Atom",
                                "@c:type": "GdkAtom"
                            }
                        },
                        {
                            "@name": "property",
                            "@writable": "1",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkevents.h",
                                "@line": "1025",
                                "#text": "the property in which to place the result of the conversion."
                            },
                            "type": {
                                "@name": "Atom",
                                "@c:type": "GdkAtom"
                            }
                        },
                        {
                            "@name": "time",
                            "@writable": "1",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkevents.h",
                                "@line": "1026",
                                "#text": "the time of the event in milliseconds."
                            },
                            "type": {
                                "@name": "guint32",
                                "@c:type": "guint32"
                            }
                        },
                        {
                            "@name": "requestor",
                            "@writable": "1",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkevents.h",
                                "@line": "1027",
                                "#text": "the window on which to place @property or %NULL if none."
                            },
                            "type": {
                                "@name": "Window",
                                "@c:type": "GdkWindow*"
                            }
                        }
                    ]
                },
                {
                    "@name": "EventSequence",
                    "@c:type": "GdkEventSequence",
                    "@glib:type-name": "GdkEventSequence",
                    "@glib:get-type": "gdk_event_sequence_get_type",
                    "@c:symbol-prefix": "event_sequence",
                    "source-position": {
                        "@filename": "gdk/gdkevents.h",
                        "@line": "149"
                    }
                },
                {
                    "@name": "EventSetting",
                    "@c:type": "GdkEventSetting",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "gdk/gdkevents.h",
                        "@line": "1102",
                        "#text": "Generated when a setting is modified."
                    },
                    "source-position": {
                        "@filename": "gdk/gdkevents.h",
                        "@line": "1120"
                    },
                    "field": [
                        {
                            "@name": "type",
                            "@writable": "1",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkevents.h",
                                "@line": "1104",
                                "#text": "the type of the event (%GDK_SETTING)."
                            },
                            "type": {
                                "@name": "EventType",
                                "@c:type": "GdkEventType"
                            }
                        },
                        {
                            "@name": "window",
                            "@writable": "1",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkevents.h",
                                "@line": "1105",
                                "#text": "the window which received the event."
                            },
                            "type": {
                                "@name": "Window",
                                "@c:type": "GdkWindow*"
                            }
                        },
                        {
                            "@name": "send_event",
                            "@writable": "1",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkevents.h",
                                "@line": "1106",
                                "#text": "%TRUE if the event was sent explicitly."
                            },
                            "type": {
                                "@name": "gint8",
                                "@c:type": "gint8"
                            }
                        },
                        {
                            "@name": "action",
                            "@writable": "1",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkevents.h",
                                "@line": "1107",
                                "#text": "what happened to the setting (%GDK_SETTING_ACTION_NEW,\n  %GDK_SETTING_ACTION_CHANGED or %GDK_SETTING_ACTION_DELETED)."
                            },
                            "type": {
                                "@name": "SettingAction",
                                "@c:type": "GdkSettingAction"
                            }
                        },
                        {
                            "@name": "name",
                            "@writable": "1",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkevents.h",
                                "@line": "1109",
                                "#text": "the name of the setting."
                            },
                            "type": {
                                "@name": "utf8",
                                "@c:type": "char*"
                            }
                        }
                    ]
                },
                {
                    "@name": "EventTouch",
                    "@c:type": "GdkEventTouch",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "gdk/gdkevents.h",
                        "@line": "766",
                        "#text": "Used for touch events.\n@type field will be one of %GDK_TOUCH_BEGIN, %GDK_TOUCH_UPDATE,\n%GDK_TOUCH_END or %GDK_TOUCH_CANCEL.\n\nTouch events are grouped into sequences by means of the @sequence\nfield, which can also be obtained with gdk_event_get_event_sequence().\nEach sequence begins with a %GDK_TOUCH_BEGIN event, followed by\nany number of %GDK_TOUCH_UPDATE events, and ends with a %GDK_TOUCH_END\n(or %GDK_TOUCH_CANCEL) event. With multitouch devices, there may be\nseveral active sequences at the same time."
                    },
                    "source-position": {
                        "@filename": "gdk/gdkevents.h",
                        "@line": "815"
                    },
                    "field": [
                        {
                            "@name": "type",
                            "@writable": "1",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkevents.h",
                                "@line": "768",
                                "#text": "the type of the event (%GDK_TOUCH_BEGIN, %GDK_TOUCH_UPDATE,\n  %GDK_TOUCH_END, %GDK_TOUCH_CANCEL)"
                            },
                            "type": {
                                "@name": "EventType",
                                "@c:type": "GdkEventType"
                            }
                        },
                        {
                            "@name": "window",
                            "@writable": "1",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkevents.h",
                                "@line": "770",
                                "#text": "the window which received the event"
                            },
                            "type": {
                                "@name": "Window",
                                "@c:type": "GdkWindow*"
                            }
                        },
                        {
                            "@name": "send_event",
                            "@writable": "1",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkevents.h",
                                "@line": "771",
                                "#text": "%TRUE if the event was sent explicitly."
                            },
                            "type": {
                                "@name": "gint8",
                                "@c:type": "gint8"
                            }
                        },
                        {
                            "@name": "time",
                            "@writable": "1",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkevents.h",
                                "@line": "772",
                                "#text": "the time of the event in milliseconds."
                            },
                            "type": {
                                "@name": "guint32",
                                "@c:type": "guint32"
                            }
                        },
                        {
                            "@name": "x",
                            "@writable": "1",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkevents.h",
                                "@line": "773",
                                "#text": "the x coordinate of the pointer relative to the window"
                            },
                            "type": {
                                "@name": "gdouble",
                                "@c:type": "gdouble"
                            }
                        },
                        {
                            "@name": "y",
                            "@writable": "1",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkevents.h",
                                "@line": "774",
                                "#text": "the y coordinate of the pointer relative to the window"
                            },
                            "type": {
                                "@name": "gdouble",
                                "@c:type": "gdouble"
                            }
                        },
                        {
                            "@name": "axes",
                            "@writable": "1",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkevents.h",
                                "@line": "775",
                                "#text": "@x, @y translated to the axes of @device, or %NULL if @device is\n  the mouse"
                            },
                            "type": {
                                "@name": "gdouble",
                                "@c:type": "gdouble*"
                            }
                        },
                        {
                            "@name": "state",
                            "@writable": "1",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkevents.h",
                                "@line": "777",
                                "#text": "a bit-mask representing the state of\n  the modifier keys (e.g. Control, Shift and Alt) and the pointer\n  buttons. See #GdkModifierType"
                            },
                            "type": {
                                "@name": "ModifierType"
                            }
                        },
                        {
                            "@name": "sequence",
                            "@writable": "1",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkevents.h",
                                "@line": "780",
                                "#text": "the event sequence that the event belongs to"
                            },
                            "type": {
                                "@name": "EventSequence",
                                "@c:type": "GdkEventSequence*"
                            }
                        },
                        {
                            "@name": "emulating_pointer",
                            "@writable": "1",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkevents.h",
                                "@line": "781",
                                "#text": "whether the event should be used for emulating\n  pointer event"
                            },
                            "type": {
                                "@name": "gboolean",
                                "@c:type": "gboolean"
                            }
                        },
                        {
                            "@name": "device",
                            "@writable": "1",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkevents.h",
                                "@line": "783",
                                "#text": "the master device that the event originated from. Use\ngdk_event_get_source_device() to get the slave device."
                            },
                            "type": {
                                "@name": "Device",
                                "@c:type": "GdkDevice*"
                            }
                        },
                        {
                            "@name": "x_root",
                            "@writable": "1",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkevents.h",
                                "@line": "785",
                                "#text": "the x coordinate of the pointer relative to the root of the\n  screen"
                            },
                            "type": {
                                "@name": "gdouble",
                                "@c:type": "gdouble"
                            }
                        },
                        {
                            "@name": "y_root",
                            "@writable": "1",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkevents.h",
                                "@line": "787",
                                "#text": "the y coordinate of the pointer relative to the root of the\n  screen"
                            },
                            "type": {
                                "@name": "gdouble",
                                "@c:type": "gdouble"
                            }
                        }
                    ]
                },
                {
                    "@name": "EventTouchpadPinch",
                    "@c:type": "GdkEventTouchpadPinch",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "gdk/gdkevents.h",
                        "@line": "1235",
                        "#text": "Generated during touchpad swipe gestures."
                    },
                    "source-position": {
                        "@filename": "gdk/gdkevents.h",
                        "@line": "1276"
                    },
                    "field": [
                        {
                            "@name": "type",
                            "@writable": "1",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkevents.h",
                                "@line": "1237",
                                "#text": "the type of the event (%GDK_TOUCHPAD_PINCH)"
                            },
                            "type": {
                                "@name": "EventType",
                                "@c:type": "GdkEventType"
                            }
                        },
                        {
                            "@name": "window",
                            "@writable": "1",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkevents.h",
                                "@line": "1238",
                                "#text": "the window which received the event"
                            },
                            "type": {
                                "@name": "Window",
                                "@c:type": "GdkWindow*"
                            }
                        },
                        {
                            "@name": "send_event",
                            "@writable": "1",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkevents.h",
                                "@line": "1239",
                                "#text": "%TRUE if the event was sent explicitly"
                            },
                            "type": {
                                "@name": "gint8",
                                "@c:type": "gint8"
                            }
                        },
                        {
                            "@name": "phase",
                            "@writable": "1",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkevents.h",
                                "@line": "1240",
                                "#text": "the current phase of the gesture"
                            },
                            "type": {
                                "@name": "gint8",
                                "@c:type": "gint8"
                            }
                        },
                        {
                            "@name": "n_fingers",
                            "@writable": "1",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkevents.h",
                                "@line": "1241",
                                "#text": "The number of fingers triggering the pinch"
                            },
                            "type": {
                                "@name": "gint8",
                                "@c:type": "gint8"
                            }
                        },
                        {
                            "@name": "time",
                            "@writable": "1",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkevents.h",
                                "@line": "1242",
                                "#text": "the time of the event in milliseconds"
                            },
                            "type": {
                                "@name": "guint32",
                                "@c:type": "guint32"
                            }
                        },
                        {
                            "@name": "x",
                            "@writable": "1",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkevents.h",
                                "@line": "1243",
                                "#text": "The X coordinate of the pointer"
                            },
                            "type": {
                                "@name": "gdouble",
                                "@c:type": "gdouble"
                            }
                        },
                        {
                            "@name": "y",
                            "@writable": "1",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkevents.h",
                                "@line": "1244",
                                "#text": "The Y coordinate of the pointer"
                            },
                            "type": {
                                "@name": "gdouble",
                                "@c:type": "gdouble"
                            }
                        },
                        {
                            "@name": "dx",
                            "@writable": "1",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkevents.h",
                                "@line": "1245",
                                "#text": "Movement delta in the X axis of the swipe focal point"
                            },
                            "type": {
                                "@name": "gdouble",
                                "@c:type": "gdouble"
                            }
                        },
                        {
                            "@name": "dy",
                            "@writable": "1",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkevents.h",
                                "@line": "1246",
                                "#text": "Movement delta in the Y axis of the swipe focal point"
                            },
                            "type": {
                                "@name": "gdouble",
                                "@c:type": "gdouble"
                            }
                        },
                        {
                            "@name": "angle_delta",
                            "@writable": "1",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkevents.h",
                                "@line": "1247",
                                "#text": "The angle change in radians, negative angles\n  denote counter-clockwise movements"
                            },
                            "type": {
                                "@name": "gdouble",
                                "@c:type": "gdouble"
                            }
                        },
                        {
                            "@name": "scale",
                            "@writable": "1",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkevents.h",
                                "@line": "1249",
                                "#text": "The current scale, relative to that at the time of\n  the corresponding %GDK_TOUCHPAD_GESTURE_PHASE_BEGIN event"
                            },
                            "type": {
                                "@name": "gdouble",
                                "@c:type": "gdouble"
                            }
                        },
                        {
                            "@name": "x_root",
                            "@writable": "1",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkevents.h",
                                "@line": "1251",
                                "#text": "The X coordinate of the pointer, relative to the\n  root of the screen."
                            },
                            "type": {
                                "@name": "gdouble",
                                "@c:type": "gdouble"
                            }
                        },
                        {
                            "@name": "y_root",
                            "@writable": "1",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkevents.h",
                                "@line": "1253",
                                "#text": "The Y coordinate of the pointer, relative to the\n  root of the screen."
                            },
                            "type": {
                                "@name": "gdouble",
                                "@c:type": "gdouble"
                            }
                        },
                        {
                            "@name": "state",
                            "@writable": "1",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkevents.h",
                                "@line": "1255",
                                "#text": "a bit-mask representing the state of\n  the modifier keys (e.g. Control, Shift and Alt) and the pointer\n  buttons. See #GdkModifierType."
                            },
                            "type": {
                                "@name": "ModifierType"
                            }
                        }
                    ]
                },
                {
                    "@name": "EventTouchpadSwipe",
                    "@c:type": "GdkEventTouchpadSwipe",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "gdk/gdkevents.h",
                        "@line": "1198",
                        "#text": "Generated during touchpad swipe gestures."
                    },
                    "source-position": {
                        "@filename": "gdk/gdkevents.h",
                        "@line": "1233"
                    },
                    "field": [
                        {
                            "@name": "type",
                            "@writable": "1",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkevents.h",
                                "@line": "1200",
                                "#text": "the type of the event (%GDK_TOUCHPAD_SWIPE)"
                            },
                            "type": {
                                "@name": "EventType",
                                "@c:type": "GdkEventType"
                            }
                        },
                        {
                            "@name": "window",
                            "@writable": "1",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkevents.h",
                                "@line": "1201",
                                "#text": "the window which received the event"
                            },
                            "type": {
                                "@name": "Window",
                                "@c:type": "GdkWindow*"
                            }
                        },
                        {
                            "@name": "send_event",
                            "@writable": "1",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkevents.h",
                                "@line": "1202",
                                "#text": "%TRUE if the event was sent explicitly"
                            },
                            "type": {
                                "@name": "gint8",
                                "@c:type": "gint8"
                            }
                        },
                        {
                            "@name": "phase",
                            "@writable": "1",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkevents.h",
                                "@line": "1203",
                                "#text": "the current phase of the gesture"
                            },
                            "type": {
                                "@name": "gint8",
                                "@c:type": "gint8"
                            }
                        },
                        {
                            "@name": "n_fingers",
                            "@writable": "1",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkevents.h",
                                "@line": "1204",
                                "#text": "The number of fingers triggering the swipe"
                            },
                            "type": {
                                "@name": "gint8",
                                "@c:type": "gint8"
                            }
                        },
                        {
                            "@name": "time",
                            "@writable": "1",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkevents.h",
                                "@line": "1205",
                                "#text": "the time of the event in milliseconds"
                            },
                            "type": {
                                "@name": "guint32",
                                "@c:type": "guint32"
                            }
                        },
                        {
                            "@name": "x",
                            "@writable": "1",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkevents.h",
                                "@line": "1206",
                                "#text": "The X coordinate of the pointer"
                            },
                            "type": {
                                "@name": "gdouble",
                                "@c:type": "gdouble"
                            }
                        },
                        {
                            "@name": "y",
                            "@writable": "1",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkevents.h",
                                "@line": "1207",
                                "#text": "The Y coordinate of the pointer"
                            },
                            "type": {
                                "@name": "gdouble",
                                "@c:type": "gdouble"
                            }
                        },
                        {
                            "@name": "dx",
                            "@writable": "1",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkevents.h",
                                "@line": "1208",
                                "#text": "Movement delta in the X axis of the swipe focal point"
                            },
                            "type": {
                                "@name": "gdouble",
                                "@c:type": "gdouble"
                            }
                        },
                        {
                            "@name": "dy",
                            "@writable": "1",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkevents.h",
                                "@line": "1209",
                                "#text": "Movement delta in the Y axis of the swipe focal point"
                            },
                            "type": {
                                "@name": "gdouble",
                                "@c:type": "gdouble"
                            }
                        },
                        {
                            "@name": "x_root",
                            "@writable": "1",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkevents.h",
                                "@line": "1210",
                                "#text": "The X coordinate of the pointer, relative to the\n  root of the screen."
                            },
                            "type": {
                                "@name": "gdouble",
                                "@c:type": "gdouble"
                            }
                        },
                        {
                            "@name": "y_root",
                            "@writable": "1",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkevents.h",
                                "@line": "1212",
                                "#text": "The Y coordinate of the pointer, relative to the\n  root of the screen."
                            },
                            "type": {
                                "@name": "gdouble",
                                "@c:type": "gdouble"
                            }
                        },
                        {
                            "@name": "state",
                            "@writable": "1",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkevents.h",
                                "@line": "1214",
                                "#text": "a bit-mask representing the state of\n  the modifier keys (e.g. Control, Shift and Alt) and the pointer\n  buttons. See #GdkModifierType."
                            },
                            "type": {
                                "@name": "ModifierType"
                            }
                        }
                    ]
                },
                {
                    "@name": "EventVisibility",
                    "@c:type": "GdkEventVisibility",
                    "@deprecated": "1",
                    "@deprecated-version": "3.12",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "gdk/gdkevents.h",
                        "@line": "630",
                        "#text": "Generated when the window visibility status has changed."
                    },
                    "doc-deprecated": {
                        "@xml:space": "preserve",
                        "#text": "Modern composited windowing systems with pervasive\n    transparency make it impossible to track the visibility of a window\n    reliably, so this event can not be guaranteed to provide useful\n    information."
                    },
                    "source-position": {
                        "@filename": "gdk/gdkevents.h",
                        "@line": "651"
                    },
                    "field": [
                        {
                            "@name": "type",
                            "@writable": "1",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkevents.h",
                                "@line": "632",
                                "#text": "the type of the event (%GDK_VISIBILITY_NOTIFY)."
                            },
                            "type": {
                                "@name": "EventType",
                                "@c:type": "GdkEventType"
                            }
                        },
                        {
                            "@name": "window",
                            "@writable": "1",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkevents.h",
                                "@line": "633",
                                "#text": "the window which received the event."
                            },
                            "type": {
                                "@name": "Window",
                                "@c:type": "GdkWindow*"
                            }
                        },
                        {
                            "@name": "send_event",
                            "@writable": "1",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkevents.h",
                                "@line": "634",
                                "#text": "%TRUE if the event was sent explicitly."
                            },
                            "type": {
                                "@name": "gint8",
                                "@c:type": "gint8"
                            }
                        },
                        {
                            "@name": "state",
                            "@writable": "1",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkevents.h",
                                "@line": "635",
                                "#text": "the new visibility state (%GDK_VISIBILITY_FULLY_OBSCURED,\n  %GDK_VISIBILITY_PARTIAL or %GDK_VISIBILITY_UNOBSCURED)."
                            },
                            "type": {
                                "@name": "VisibilityState",
                                "@c:type": "GdkVisibilityState"
                            }
                        }
                    ]
                },
                {
                    "@name": "EventWindowState",
                    "@c:type": "GdkEventWindowState",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "gdk/gdkevents.h",
                        "@line": "1122",
                        "#text": "Generated when the state of a toplevel window changes."
                    },
                    "source-position": {
                        "@filename": "gdk/gdkevents.h",
                        "@line": "1140"
                    },
                    "field": [
                        {
                            "@name": "type",
                            "@writable": "1",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkevents.h",
                                "@line": "1124",
                                "#text": "the type of the event (%GDK_WINDOW_STATE)."
                            },
                            "type": {
                                "@name": "EventType",
                                "@c:type": "GdkEventType"
                            }
                        },
                        {
                            "@name": "window",
                            "@writable": "1",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkevents.h",
                                "@line": "1125",
                                "#text": "the window which received the event."
                            },
                            "type": {
                                "@name": "Window",
                                "@c:type": "GdkWindow*"
                            }
                        },
                        {
                            "@name": "send_event",
                            "@writable": "1",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkevents.h",
                                "@line": "1126",
                                "#text": "%TRUE if the event was sent explicitly."
                            },
                            "type": {
                                "@name": "gint8",
                                "@c:type": "gint8"
                            }
                        },
                        {
                            "@name": "changed_mask",
                            "@writable": "1",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkevents.h",
                                "@line": "1127",
                                "#text": "mask specifying what flags have changed."
                            },
                            "type": {
                                "@name": "WindowState",
                                "@c:type": "GdkWindowState"
                            }
                        },
                        {
                            "@name": "new_window_state",
                            "@writable": "1",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkevents.h",
                                "@line": "1128",
                                "#text": "the new window state, a combination of\n  #GdkWindowState bits."
                            },
                            "type": {
                                "@name": "WindowState",
                                "@c:type": "GdkWindowState"
                            }
                        }
                    ]
                },
                {
                    "@name": "FrameClockClass",
                    "@c:type": "GdkFrameClockClass",
                    "@disguised": "1",
                    "@glib:is-gtype-struct-for": "FrameClock",
                    "source-position": {
                        "@filename": "gdk/gdkframeclock.h",
                        "@line": "45"
                    }
                },
                {
                    "@name": "FrameClockPrivate",
                    "@c:type": "GdkFrameClockPrivate",
                    "@disguised": "1",
                    "source-position": {
                        "@filename": "gdk/gdkframeclock.h",
                        "@line": "44"
                    }
                },
                {
                    "@name": "FrameTimings",
                    "@c:type": "GdkFrameTimings",
                    "@glib:type-name": "GdkFrameTimings",
                    "@glib:get-type": "gdk_frame_timings_get_type",
                    "@c:symbol-prefix": "frame_timings",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "gdk/gdkframetimings.c",
                        "@line": "24",
                        "#text": "A #GdkFrameTimings object holds timing information for a single frame\nof the application\u2019s displays. To retrieve #GdkFrameTimings objects,\nuse gdk_frame_clock_get_timings() or gdk_frame_clock_get_current_timings().\nThe information in #GdkFrameTimings is useful for precise synchronization\nof video with the event or audio streams, and for measuring\nquality metrics for the application\u2019s display, such as latency and jitter."
                    },
                    "source-position": {
                        "@filename": "gdk/gdkframetimings.h",
                        "@line": "30"
                    },
                    "method": [
                        {
                            "@name": "get_complete",
                            "@c:identifier": "gdk_frame_timings_get_complete",
                            "@version": "3.8",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkframetimings.c",
                                "@line": "125",
                                "#text": "The timing information in a #GdkFrameTimings is filled in\nincrementally as the frame as drawn and passed off to the\nwindow system for processing and display to the user. The\naccessor functions for #GdkFrameTimings can return 0 to\nindicate an unavailable value for two reasons: either because\nthe information is not yet available, or because it isn't\navailable at all. Once gdk_frame_timings_get_complete() returns\n%TRUE for a frame, you can be certain that no further values\nwill become available and be stored in the #GdkFrameTimings."
                            },
                            "source-position": {
                                "@filename": "gdk/gdkframetimings.h",
                                "@line": "43"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "gdk/gdkframetimings.c",
                                    "@line": "139",
                                    "#text": "%TRUE if all information that will be available\n for the frame has been filled in."
                                },
                                "type": {
                                    "@name": "gboolean",
                                    "@c:type": "gboolean"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "timings",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "gdk/gdkframetimings.c",
                                        "@line": "127",
                                        "#text": "a #GdkFrameTimings"
                                    },
                                    "type": {
                                        "@name": "FrameTimings",
                                        "@c:type": "GdkFrameTimings*"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "get_frame_counter",
                            "@c:identifier": "gdk_frame_timings_get_frame_counter",
                            "@version": "3.8",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkframetimings.c",
                                "@line": "109",
                                "#text": "Gets the frame counter value of the #GdkFrameClock when this\nthis frame was drawn."
                            },
                            "source-position": {
                                "@filename": "gdk/gdkframetimings.h",
                                "@line": "41"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "gdk/gdkframetimings.c",
                                    "@line": "116",
                                    "#text": "the frame counter value for this frame"
                                },
                                "type": {
                                    "@name": "gint64",
                                    "@c:type": "gint64"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "timings",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "gdk/gdkframetimings.c",
                                        "@line": "111",
                                        "#text": "a #GdkFrameTimings"
                                    },
                                    "type": {
                                        "@name": "FrameTimings",
                                        "@c:type": "GdkFrameTimings*"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "get_frame_time",
                            "@c:identifier": "gdk_frame_timings_get_frame_time",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkframetimings.c",
                                "@line": "151",
                                "#text": "Returns the frame time for the frame. This is the time value\nthat is typically used to time animations for the frame. See\ngdk_frame_clock_get_frame_time()."
                            },
                            "source-position": {
                                "@filename": "gdk/gdkframetimings.h",
                                "@line": "45"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "gdk/gdkframetimings.c",
                                    "@line": "159",
                                    "#text": "the frame time for the frame, in the timescale\n of g_get_monotonic_time()"
                                },
                                "type": {
                                    "@name": "gint64",
                                    "@c:type": "gint64"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "timings",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "gdk/gdkframetimings.c",
                                        "@line": "153",
                                        "#text": "A #GdkFrameTimings"
                                    },
                                    "type": {
                                        "@name": "FrameTimings",
                                        "@c:type": "GdkFrameTimings*"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "get_predicted_presentation_time",
                            "@c:identifier": "gdk_frame_timings_get_predicted_presentation_time",
                            "@version": "3.8",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkframetimings.c",
                                "@line": "190",
                                "#text": "Gets the predicted time at which this frame will be displayed. Although\nno predicted time may be available, if one is available, it will\nbe available while the frame is being generated, in contrast to\ngdk_frame_timings_get_presentation_time(), which is only available\nafter the frame has been presented. In general, if you are simply\nanimating, you should use gdk_frame_clock_get_frame_time() rather\nthan this function, but this function is useful for applications\nthat want exact control over latency. For example, a movie player\nmay want this information for Audio/Video synchronization."
                            },
                            "source-position": {
                                "@filename": "gdk/gdkframetimings.h",
                                "@line": "52"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "gdk/gdkframetimings.c",
                                    "@line": "204",
                                    "#text": "The predicted time at which the frame will be presented,\n in the timescale of g_get_monotonic_time(), or 0 if no predicted\n presentation time is available."
                                },
                                "type": {
                                    "@name": "gint64",
                                    "@c:type": "gint64"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "timings",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "gdk/gdkframetimings.c",
                                        "@line": "192",
                                        "#text": "a #GdkFrameTimings"
                                    },
                                    "type": {
                                        "@name": "FrameTimings",
                                        "@c:type": "GdkFrameTimings*"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "get_presentation_time",
                            "@c:identifier": "gdk_frame_timings_get_presentation_time",
                            "@version": "3.8",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkframetimings.c",
                                "@line": "170",
                                "#text": "Reurns the presentation time. This is the time at which the frame\nbecame visible to the user."
                            },
                            "source-position": {
                                "@filename": "gdk/gdkframetimings.h",
                                "@line": "47"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "gdk/gdkframetimings.c",
                                    "@line": "177",
                                    "#text": "the time the frame was displayed to the user, in the\n timescale of g_get_monotonic_time(), or 0 if no presentation\n time is available. See gdk_frame_timings_get_complete()"
                                },
                                "type": {
                                    "@name": "gint64",
                                    "@c:type": "gint64"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "timings",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "gdk/gdkframetimings.c",
                                        "@line": "172",
                                        "#text": "a #GdkFrameTimings"
                                    },
                                    "type": {
                                        "@name": "FrameTimings",
                                        "@c:type": "GdkFrameTimings*"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "get_refresh_interval",
                            "@c:identifier": "gdk_frame_timings_get_refresh_interval",
                            "@version": "3.8",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkframetimings.c",
                                "@line": "217",
                                "#text": "Gets the natural interval between presentation times for\nthe display that this frame was displayed on. Frame presentation\nusually happens during the \u201cvertical blanking interval\u201d."
                            },
                            "source-position": {
                                "@filename": "gdk/gdkframetimings.h",
                                "@line": "49"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "gdk/gdkframetimings.c",
                                    "@line": "225",
                                    "#text": "the refresh interval of the display, in microseconds,\n or 0 if the refresh interval is not available.\n See gdk_frame_timings_get_complete()."
                                },
                                "type": {
                                    "@name": "gint64",
                                    "@c:type": "gint64"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "timings",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "gdk/gdkframetimings.c",
                                        "@line": "219",
                                        "#text": "a #GdkFrameTimings"
                                    },
                                    "type": {
                                        "@name": "FrameTimings",
                                        "@c:type": "GdkFrameTimings*"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "ref",
                            "@c:identifier": "gdk_frame_timings_ref",
                            "@version": "3.8",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkframetimings.c",
                                "@line": "68",
                                "#text": "Increases the reference count of @timings."
                            },
                            "source-position": {
                                "@filename": "gdk/gdkframetimings.h",
                                "@line": "36"
                            },
                            "return-value": {
                                "@transfer-ownership": "full",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "gdk/gdkframetimings.c",
                                    "@line": "74",
                                    "#text": "@timings"
                                },
                                "type": {
                                    "@name": "FrameTimings",
                                    "@c:type": "GdkFrameTimings*"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "timings",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "gdk/gdkframetimings.c",
                                        "@line": "70",
                                        "#text": "a #GdkFrameTimings"
                                    },
                                    "type": {
                                        "@name": "FrameTimings",
                                        "@c:type": "GdkFrameTimings*"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "unref",
                            "@c:identifier": "gdk_frame_timings_unref",
                            "@version": "3.8",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkframetimings.c",
                                "@line": "87",
                                "#text": "Decreases the reference count of @timings. If @timings\nis no longer referenced, it will be freed."
                            },
                            "source-position": {
                                "@filename": "gdk/gdkframetimings.h",
                                "@line": "38"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "type": {
                                    "@name": "none",
                                    "@c:type": "void"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "timings",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "gdk/gdkframetimings.c",
                                        "@line": "89",
                                        "#text": "a #GdkFrameTimings"
                                    },
                                    "type": {
                                        "@name": "FrameTimings",
                                        "@c:type": "GdkFrameTimings*"
                                    }
                                }
                            }
                        }
                    ]
                },
                {
                    "@name": "Geometry",
                    "@c:type": "GdkGeometry",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "gdk/gdkwindow.h",
                        "@line": "370",
                        "#text": "The #GdkGeometry struct gives the window manager information about\na window\u2019s geometry constraints. Normally you would set these on\nthe GTK+ level using gtk_window_set_geometry_hints(). #GtkWindow\nthen sets the hints on the #GdkWindow it creates.\n\ngdk_window_set_geometry_hints() expects the hints to be fully valid already\nand simply passes them to the window manager; in contrast,\ngtk_window_set_geometry_hints() performs some interpretation. For example,\n#GtkWindow will apply the hints to the geometry widget instead of the\ntoplevel window, if you set a geometry widget. Also, the\n@min_width/@min_height/@max_width/@max_height fields may be set to -1, and\n#GtkWindow will substitute the size request of the window or geometry widget.\nIf the minimum size hint is not provided, #GtkWindow will use its requisition\nas the minimum size. If the minimum size is provided and a geometry widget is\nset, #GtkWindow will take the minimum size as the minimum size of the\ngeometry widget rather than the entire window. The base size is treated\nsimilarly.\n\nThe canonical use-case for gtk_window_set_geometry_hints() is to get a\nterminal widget to resize properly. Here, the terminal text area should be\nthe geometry widget; #GtkWindow will then automatically set the base size to\nthe size of other widgets in the terminal window, such as the menubar and\nscrollbar. Then, the @width_inc and @height_inc fields should be set to the\nsize of one character in the terminal. Finally, the base size should be set\nto the size of one character. The net effect is that the minimum size of the\nterminal will have a 1x1 character terminal area, and only terminal sizes on\nthe \u201ccharacter grid\u201d will be allowed.\n\nHere\u2019s an example of how the terminal example would be implemented, assuming\na terminal area widget called \u201cterminal\u201d and a toplevel window \u201ctoplevel\u201d:\n\n|[<!-- language=\"C\" -->\n\tGdkGeometry hints;\n\n\thints.base_width = terminal->char_width;\n        hints.base_height = terminal->char_height;\n        hints.min_width = terminal->char_width;\n        hints.min_height = terminal->char_height;\n        hints.width_inc = terminal->char_width;\n        hints.height_inc = terminal->char_height;\n\n gtk_window_set_geometry_hints (GTK_WINDOW (toplevel),\n                                GTK_WIDGET (terminal),\n                                &hints,\n                                GDK_HINT_RESIZE_INC |\n                                GDK_HINT_MIN_SIZE |\n                                GDK_HINT_BASE_SIZE);\n]|\n\nThe other useful fields are the @min_aspect and @max_aspect fields; these\ncontain a width/height ratio as a floating point number. If a geometry widget\nis set, the aspect applies to the geometry widget rather than the entire\nwindow. The most common use of these hints is probably to set @min_aspect and\n@max_aspect to the same value, thus forcing the window to keep a constant\naspect ratio."
                    },
                    "source-position": {
                        "@filename": "gdk/gdkwindow.h",
                        "@line": "459"
                    },
                    "field": [
                        {
                            "@name": "min_width",
                            "@writable": "1",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkwindow.h",
                                "@line": "372",
                                "#text": "minimum width of window (or -1 to use requisition, with\n #GtkWindow only)"
                            },
                            "type": {
                                "@name": "gint",
                                "@c:type": "gint"
                            }
                        },
                        {
                            "@name": "min_height",
                            "@writable": "1",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkwindow.h",
                                "@line": "374",
                                "#text": "minimum height of window (or -1 to use requisition, with\n #GtkWindow only)"
                            },
                            "type": {
                                "@name": "gint",
                                "@c:type": "gint"
                            }
                        },
                        {
                            "@name": "max_width",
                            "@writable": "1",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkwindow.h",
                                "@line": "376",
                                "#text": "maximum width of window (or -1 to use requisition, with\n #GtkWindow only)"
                            },
                            "type": {
                                "@name": "gint",
                                "@c:type": "gint"
                            }
                        },
                        {
                            "@name": "max_height",
                            "@writable": "1",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkwindow.h",
                                "@line": "378",
                                "#text": "maximum height of window (or -1 to use requisition, with\n #GtkWindow only)"
                            },
                            "type": {
                                "@name": "gint",
                                "@c:type": "gint"
                            }
                        },
                        {
                            "@name": "base_width",
                            "@writable": "1",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkwindow.h",
                                "@line": "380",
                                "#text": "allowed window widths are @base_width + @width_inc * N where N\n is any integer (-1 allowed with #GtkWindow)"
                            },
                            "type": {
                                "@name": "gint",
                                "@c:type": "gint"
                            }
                        },
                        {
                            "@name": "base_height",
                            "@writable": "1",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkwindow.h",
                                "@line": "382",
                                "#text": "allowed window widths are @base_height + @height_inc * N where\n N is any integer (-1 allowed with #GtkWindow)"
                            },
                            "type": {
                                "@name": "gint",
                                "@c:type": "gint"
                            }
                        },
                        {
                            "@name": "width_inc",
                            "@writable": "1",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkwindow.h",
                                "@line": "384",
                                "#text": "width resize increment"
                            },
                            "type": {
                                "@name": "gint",
                                "@c:type": "gint"
                            }
                        },
                        {
                            "@name": "height_inc",
                            "@writable": "1",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkwindow.h",
                                "@line": "385",
                                "#text": "height resize increment"
                            },
                            "type": {
                                "@name": "gint",
                                "@c:type": "gint"
                            }
                        },
                        {
                            "@name": "min_aspect",
                            "@writable": "1",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkwindow.h",
                                "@line": "386",
                                "#text": "minimum width/height ratio"
                            },
                            "type": {
                                "@name": "gdouble",
                                "@c:type": "gdouble"
                            }
                        },
                        {
                            "@name": "max_aspect",
                            "@writable": "1",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkwindow.h",
                                "@line": "387",
                                "#text": "maximum width/height ratio"
                            },
                            "type": {
                                "@name": "gdouble",
                                "@c:type": "gdouble"
                            }
                        },
                        {
                            "@name": "win_gravity",
                            "@writable": "1",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkwindow.h",
                                "@line": "388",
                                "#text": "window gravity, see gtk_window_set_gravity()"
                            },
                            "type": {
                                "@name": "Gravity",
                                "@c:type": "GdkGravity"
                            }
                        }
                    ]
                },
                {
                    "@name": "KeymapKey",
                    "@c:type": "GdkKeymapKey",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "gdk/gdkkeys.h",
                        "@line": "40",
                        "#text": "A #GdkKeymapKey is a hardware key that can be mapped to a keyval."
                    },
                    "source-position": {
                        "@filename": "gdk/gdkkeys.h",
                        "@line": "62"
                    },
                    "field": [
                        {
                            "@name": "keycode",
                            "@writable": "1",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkkeys.h",
                                "@line": "42",
                                "#text": "the hardware keycode. This is an identifying number for a\n  physical key."
                            },
                            "type": {
                                "@name": "guint",
                                "@c:type": "guint"
                            }
                        },
                        {
                            "@name": "group",
                            "@writable": "1",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkkeys.h",
                                "@line": "44",
                                "#text": "indicates movement in a horizontal direction. Usually groups are used\n  for two different languages. In group 0, a key might have two English\n  characters, and in group 1 it might have two Hebrew characters. The Hebrew\n  characters will be printed on the key next to the English characters."
                            },
                            "type": {
                                "@name": "gint",
                                "@c:type": "gint"
                            }
                        },
                        {
                            "@name": "level",
                            "@writable": "1",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkkeys.h",
                                "@line": "48",
                                "#text": "indicates which symbol on the key will be used, in a vertical direction.\n  So on a standard US keyboard, the key with the number \u201c1\u201d on it also has the\n  exclamation point (\"!\") character on it. The level indicates whether to use\n  the \u201c1\u201d or the \u201c!\u201d symbol. The letter keys are considered to have a lowercase\n  letter at level 0, and an uppercase letter at level 1, though only the\n  uppercase letter is printed."
                            },
                            "type": {
                                "@name": "gint",
                                "@c:type": "gint"
                            }
                        }
                    ]
                },
                {
                    "@name": "MonitorClass",
                    "@c:type": "GdkMonitorClass",
                    "@disguised": "1",
                    "@glib:is-gtype-struct-for": "Monitor",
                    "source-position": {
                        "@filename": "gdk/gdkmonitor.h",
                        "@line": "40"
                    }
                },
                {
                    "@name": "Point",
                    "@c:type": "GdkPoint",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "gdk/gdktypes.h",
                        "@line": "457",
                        "#text": "Defines the x and y coordinates of a point."
                    },
                    "source-position": {
                        "@filename": "gdk/gdktypes.h",
                        "@line": "468"
                    },
                    "field": [
                        {
                            "@name": "x",
                            "@writable": "1",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdktypes.h",
                                "@line": "459",
                                "#text": "the x coordinate of the point."
                            },
                            "type": {
                                "@name": "gint",
                                "@c:type": "gint"
                            }
                        },
                        {
                            "@name": "y",
                            "@writable": "1",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdktypes.h",
                                "@line": "460",
                                "#text": "the y coordinate of the point."
                            },
                            "type": {
                                "@name": "gint",
                                "@c:type": "gint"
                            }
                        }
                    ]
                },
                {
                    "@name": "RGBA",
                    "@c:type": "GdkRGBA",
                    "@glib:type-name": "GdkRGBA",
                    "@glib:get-type": "gdk_rgba_get_type",
                    "@c:symbol-prefix": "rgba",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "gdk/gdkrgba.c",
                        "@line": "49",
                        "#text": "A #GdkRGBA is used to represent a (possibly translucent)\ncolor, in a way that is compatible with cairo\u2019s notion of color."
                    },
                    "source-position": {
                        "@filename": "gdk/gdkrgba.h",
                        "@line": "43"
                    },
                    "field": [
                        {
                            "@name": "red",
                            "@writable": "1",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkrgba.c",
                                "@line": "51",
                                "#text": "The intensity of the red channel from 0.0 to 1.0 inclusive"
                            },
                            "type": {
                                "@name": "gdouble",
                                "@c:type": "gdouble"
                            }
                        },
                        {
                            "@name": "green",
                            "@writable": "1",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkrgba.c",
                                "@line": "52",
                                "#text": "The intensity of the green channel from 0.0 to 1.0 inclusive"
                            },
                            "type": {
                                "@name": "gdouble",
                                "@c:type": "gdouble"
                            }
                        },
                        {
                            "@name": "blue",
                            "@writable": "1",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkrgba.c",
                                "@line": "53",
                                "#text": "The intensity of the blue channel from 0.0 to 1.0 inclusive"
                            },
                            "type": {
                                "@name": "gdouble",
                                "@c:type": "gdouble"
                            }
                        },
                        {
                            "@name": "alpha",
                            "@writable": "1",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkrgba.c",
                                "@line": "54",
                                "#text": "The opacity of the color from 0.0 for completely translucent to\n  1.0 for opaque"
                            },
                            "type": {
                                "@name": "gdouble",
                                "@c:type": "gdouble"
                            }
                        }
                    ],
                    "method": [
                        {
                            "@name": "copy",
                            "@c:identifier": "gdk_rgba_copy",
                            "@version": "3.0",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkrgba.c",
                                "@line": "61",
                                "#text": "Makes a copy of a #GdkRGBA.\n\nThe result must be freed through gdk_rgba_free()."
                            },
                            "source-position": {
                                "@filename": "gdk/gdkrgba.h",
                                "@line": "51"
                            },
                            "return-value": {
                                "@transfer-ownership": "full",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "gdk/gdkrgba.c",
                                    "@line": "69",
                                    "#text": "A newly allocated #GdkRGBA, with the same contents as @rgba"
                                },
                                "type": {
                                    "@name": "RGBA",
                                    "@c:type": "GdkRGBA*"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "rgba",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "gdk/gdkrgba.c",
                                        "@line": "63",
                                        "#text": "a #GdkRGBA"
                                    },
                                    "type": {
                                        "@name": "RGBA",
                                        "@c:type": "const GdkRGBA*"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "equal",
                            "@c:identifier": "gdk_rgba_equal",
                            "@version": "3.0",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkrgba.c",
                                "@line": "302",
                                "#text": "Compares two RGBA colors."
                            },
                            "source-position": {
                                "@filename": "gdk/gdkrgba.h",
                                "@line": "58"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "gdk/gdkrgba.c",
                                    "@line": "309",
                                    "#text": "%TRUE if the two colors compare equal"
                                },
                                "type": {
                                    "@name": "gboolean",
                                    "@c:type": "gboolean"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "p1",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "gdk/gdkrgba.c",
                                        "@line": "304",
                                        "#text": "a #GdkRGBA pointer"
                                    },
                                    "type": {
                                        "@name": "RGBA",
                                        "@c:type": "gconstpointer"
                                    }
                                },
                                "parameter": {
                                    "@name": "p2",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "gdk/gdkrgba.c",
                                        "@line": "305",
                                        "#text": "another #GdkRGBA pointer"
                                    },
                                    "type": {
                                        "@name": "RGBA",
                                        "@c:type": "gconstpointer"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "free",
                            "@c:identifier": "gdk_rgba_free",
                            "@version": "3.0",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkrgba.c",
                                "@line": "79",
                                "#text": "Frees a #GdkRGBA created with gdk_rgba_copy()"
                            },
                            "source-position": {
                                "@filename": "gdk/gdkrgba.h",
                                "@line": "53"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "type": {
                                    "@name": "none",
                                    "@c:type": "void"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "rgba",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "gdk/gdkrgba.c",
                                        "@line": "81",
                                        "#text": "a #GdkRGBA"
                                    },
                                    "type": {
                                        "@name": "RGBA",
                                        "@c:type": "GdkRGBA*"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "hash",
                            "@c:identifier": "gdk_rgba_hash",
                            "@version": "3.0",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkrgba.c",
                                "@line": "280",
                                "#text": "A hash function suitable for using for a hash\ntable that stores #GdkRGBAs."
                            },
                            "source-position": {
                                "@filename": "gdk/gdkrgba.h",
                                "@line": "56"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "gdk/gdkrgba.c",
                                    "@line": "287",
                                    "#text": "The hash value for @p"
                                },
                                "type": {
                                    "@name": "guint",
                                    "@c:type": "guint"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "p",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "gdk/gdkrgba.c",
                                        "@line": "282",
                                        "#text": "a #GdkRGBA pointer"
                                    },
                                    "type": {
                                        "@name": "RGBA",
                                        "@c:type": "gconstpointer"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "parse",
                            "@c:identifier": "gdk_rgba_parse",
                            "@version": "3.0",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkrgba.c",
                                "@line": "135",
                                "#text": "Parses a textual representation of a color, filling in\nthe @red, @green, @blue and @alpha fields of the @rgba #GdkRGBA.\n\nThe string can be either one of:\n- A standard name (Taken from the X11 rgb.txt file).\n- A hexadecimal value in the form \u201c\\#rgb\u201d, \u201c\\#rrggbb\u201d,\n  \u201c\\#rrrgggbbb\u201d or \u201d\\#rrrrggggbbbb\u201d\n- A RGB color in the form \u201crgb(r,g,b)\u201d (In this case the color will\n  have full opacity)\n- A RGBA color in the form \u201crgba(r,g,b,a)\u201d\n\nWhere \u201cr\u201d, \u201cg\u201d, \u201cb\u201d and \u201ca\u201d are respectively the red, green, blue and\nalpha color values. In the last two cases, \u201cr\u201d, \u201cg\u201d, and \u201cb\u201d are either integers\nin the range 0 to 255 or percentage values in the range 0% to 100%, and\na is a floating point value in the range 0 to 1."
                            },
                            "source-position": {
                                "@filename": "gdk/gdkrgba.h",
                                "@line": "62"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "gdk/gdkrgba.c",
                                    "@line": "156",
                                    "#text": "%TRUE if the parsing succeeded"
                                },
                                "type": {
                                    "@name": "gboolean",
                                    "@c:type": "gboolean"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "rgba",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "gdk/gdkrgba.c",
                                        "@line": "137",
                                        "#text": "the #GdkRGBA to fill in"
                                    },
                                    "type": {
                                        "@name": "RGBA",
                                        "@c:type": "GdkRGBA*"
                                    }
                                },
                                "parameter": {
                                    "@name": "spec",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "gdk/gdkrgba.c",
                                        "@line": "138",
                                        "#text": "the string specifying the color"
                                    },
                                    "type": {
                                        "@name": "utf8",
                                        "@c:type": "const gchar*"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "to_string",
                            "@c:identifier": "gdk_rgba_to_string",
                            "@version": "3.0",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkrgba.c",
                                "@line": "331",
                                "#text": "Returns a textual specification of @rgba in the form\n`rgb(r,g,b)` or\n`rgba(r g,b,a)`,\nwhere \u201cr\u201d, \u201cg\u201d, \u201cb\u201d and \u201ca\u201d represent the red, green,\nblue and alpha values respectively. \u201cr\u201d, \u201cg\u201d, and \u201cb\u201d are\nrepresented as integers in the range 0 to 255, and \u201ca\u201d\nis represented as a floating point value in the range 0 to 1.\n\nThese string forms are string forms that are supported by\nthe CSS3 colors module, and can be parsed by gdk_rgba_parse().\n\nNote that this string representation may lose some\nprecision, since \u201cr\u201d, \u201cg\u201d and \u201cb\u201d are represented as 8-bit\nintegers. If this is a concern, you should use a\ndifferent representation."
                            },
                            "source-position": {
                                "@filename": "gdk/gdkrgba.h",
                                "@line": "65"
                            },
                            "return-value": {
                                "@transfer-ownership": "full",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "gdk/gdkrgba.c",
                                    "@line": "351",
                                    "#text": "A newly allocated text string"
                                },
                                "type": {
                                    "@name": "utf8",
                                    "@c:type": "gchar*"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "rgba",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "gdk/gdkrgba.c",
                                        "@line": "333",
                                        "#text": "a #GdkRGBA"
                                    },
                                    "type": {
                                        "@name": "RGBA",
                                        "@c:type": "const GdkRGBA*"
                                    }
                                }
                            }
                        }
                    ]
                },
                {
                    "@name": "Rectangle",
                    "@c:type": "GdkRectangle",
                    "@glib:type-name": "GdkRectangle",
                    "@glib:get-type": "gdk_rectangle_get_type",
                    "@c:symbol-prefix": "rectangle",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "gdk/gdktypes.h",
                        "@line": "72",
                        "#text": "Defines the position and size of a rectangle. It is identical to\n#cairo_rectangle_int_t."
                    },
                    "source-position": {
                        "@filename": "gdk/gdktypes.h",
                        "@line": "90"
                    },
                    "field": [
                        {
                            "@name": "x",
                            "@writable": "1",
                            "type": {
                                "@name": "gint",
                                "@c:type": "int"
                            }
                        },
                        {
                            "@name": "y",
                            "@writable": "1",
                            "type": {
                                "@name": "gint",
                                "@c:type": "int"
                            }
                        },
                        {
                            "@name": "width",
                            "@writable": "1",
                            "type": {
                                "@name": "gint",
                                "@c:type": "int"
                            }
                        },
                        {
                            "@name": "height",
                            "@writable": "1",
                            "type": {
                                "@name": "gint",
                                "@c:type": "int"
                            }
                        }
                    ],
                    "method": [
                        {
                            "@name": "equal",
                            "@c:identifier": "gdk_rectangle_equal",
                            "@version": "3.20",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkrectangle.c",
                                "@line": "139",
                                "#text": "Checks if the two given rectangles are equal."
                            },
                            "source-position": {
                                "@filename": "gdk/gdkrectangle.h",
                                "@line": "49"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "gdk/gdkrectangle.c",
                                    "@line": "146",
                                    "#text": "%TRUE if the rectangles are equal."
                                },
                                "type": {
                                    "@name": "gboolean",
                                    "@c:type": "gboolean"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "rect1",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "gdk/gdkrectangle.c",
                                        "@line": "141",
                                        "#text": "a #GdkRectangle"
                                    },
                                    "type": {
                                        "@name": "Rectangle",
                                        "@c:type": "const GdkRectangle*"
                                    }
                                },
                                "parameter": {
                                    "@name": "rect2",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "gdk/gdkrectangle.c",
                                        "@line": "142",
                                        "#text": "a #GdkRectangle"
                                    },
                                    "type": {
                                        "@name": "Rectangle",
                                        "@c:type": "const GdkRectangle*"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "intersect",
                            "@c:identifier": "gdk_rectangle_intersect",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkrectangle.c",
                                "@line": "84",
                                "#text": "Calculates the intersection of two rectangles. It is allowed for\n@dest to be the same as either @src1 or @src2. If the rectangles\ndo not intersect, @dest\u2019s width and height is set to 0 and its x\nand y values are undefined. If you are only interested in whether\nthe rectangles intersect, but not in the intersecting area itself,\npass %NULL for @dest."
                            },
                            "source-position": {
                                "@filename": "gdk/gdkrectangle.h",
                                "@line": "40"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "gdk/gdkrectangle.c",
                                    "@line": "98",
                                    "#text": "%TRUE if the rectangles intersect."
                                },
                                "type": {
                                    "@name": "gboolean",
                                    "@c:type": "gboolean"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "src1",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "gdk/gdkrectangle.c",
                                        "@line": "86",
                                        "#text": "a #GdkRectangle"
                                    },
                                    "type": {
                                        "@name": "Rectangle",
                                        "@c:type": "const GdkRectangle*"
                                    }
                                },
                                "parameter": [
                                    {
                                        "@name": "src2",
                                        "@transfer-ownership": "none",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "gdk/gdkrectangle.c",
                                            "@line": "87",
                                            "#text": "a #GdkRectangle"
                                        },
                                        "type": {
                                            "@name": "Rectangle",
                                            "@c:type": "const GdkRectangle*"
                                        }
                                    },
                                    {
                                        "@name": "dest",
                                        "@direction": "out",
                                        "@caller-allocates": "1",
                                        "@transfer-ownership": "none",
                                        "@optional": "1",
                                        "@allow-none": "1",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "gdk/gdkrectangle.c",
                                            "@line": "88",
                                            "#text": "return location for the\nintersection of @src1 and @src2, or %NULL"
                                        },
                                        "type": {
                                            "@name": "Rectangle",
                                            "@c:type": "GdkRectangle*"
                                        }
                                    }
                                ]
                            }
                        },
                        {
                            "@name": "union",
                            "@c:identifier": "gdk_rectangle_union",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkrectangle.c",
                                "@line": "51",
                                "#text": "Calculates the union of two rectangles.\nThe union of rectangles @src1 and @src2 is the smallest rectangle which\nincludes both @src1 and @src2 within it.\nIt is allowed for @dest to be the same as either @src1 or @src2.\n\nNote that this function does not ignore 'empty' rectangles (ie. with\nzero width or height)."
                            },
                            "source-position": {
                                "@filename": "gdk/gdkrectangle.h",
                                "@line": "44"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "type": {
                                    "@name": "none",
                                    "@c:type": "void"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "src1",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "gdk/gdkrectangle.c",
                                        "@line": "53",
                                        "#text": "a #GdkRectangle"
                                    },
                                    "type": {
                                        "@name": "Rectangle",
                                        "@c:type": "const GdkRectangle*"
                                    }
                                },
                                "parameter": [
                                    {
                                        "@name": "src2",
                                        "@transfer-ownership": "none",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "gdk/gdkrectangle.c",
                                            "@line": "54",
                                            "#text": "a #GdkRectangle"
                                        },
                                        "type": {
                                            "@name": "Rectangle",
                                            "@c:type": "const GdkRectangle*"
                                        }
                                    },
                                    {
                                        "@name": "dest",
                                        "@direction": "out",
                                        "@caller-allocates": "1",
                                        "@transfer-ownership": "none",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "gdk/gdkrectangle.c",
                                            "@line": "55",
                                            "#text": "return location for the union of @src1 and @src2"
                                        },
                                        "type": {
                                            "@name": "Rectangle",
                                            "@c:type": "GdkRectangle*"
                                        }
                                    }
                                ]
                            }
                        }
                    ]
                },
                {
                    "@name": "TimeCoord",
                    "@c:type": "GdkTimeCoord",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "gdk/gdkdevice.h",
                        "@line": "112",
                        "#text": "A #GdkTimeCoord stores a single event in a motion history."
                    },
                    "source-position": {
                        "@filename": "gdk/gdkdevice.h",
                        "@line": "123"
                    },
                    "field": [
                        {
                            "@name": "time",
                            "@writable": "1",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkdevice.h",
                                "@line": "114",
                                "#text": "The timestamp for this event."
                            },
                            "type": {
                                "@name": "guint32",
                                "@c:type": "guint32"
                            }
                        },
                        {
                            "@name": "axes",
                            "@writable": "1",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkdevice.h",
                                "@line": "115",
                                "#text": "the values of the device\u2019s axes."
                            },
                            "array": {
                                "@zero-terminated": "0",
                                "@fixed-size": "128",
                                "type": {
                                    "@name": "gdouble",
                                    "@c:type": "gdouble"
                                }
                            }
                        }
                    ]
                },
                {
                    "@name": "WindowAttr",
                    "@c:type": "GdkWindowAttr",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "gdk/gdkwindow.h",
                        "@line": "333",
                        "#text": "Attributes to use for a newly-created window."
                    },
                    "source-position": {
                        "@filename": "gdk/gdkwindow.h",
                        "@line": "368"
                    },
                    "field": [
                        {
                            "@name": "title",
                            "@writable": "1",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkwindow.h",
                                "@line": "335",
                                "#text": "title of the window (for toplevel windows)"
                            },
                            "type": {
                                "@name": "utf8",
                                "@c:type": "gchar*"
                            }
                        },
                        {
                            "@name": "event_mask",
                            "@writable": "1",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkwindow.h",
                                "@line": "336",
                                "#text": "event mask (see gdk_window_set_events())"
                            },
                            "type": {
                                "@name": "gint",
                                "@c:type": "gint"
                            }
                        },
                        {
                            "@name": "x",
                            "@writable": "1",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkwindow.h",
                                "@line": "337",
                                "#text": "X coordinate relative to parent window (see gdk_window_move())"
                            },
                            "type": {
                                "@name": "gint",
                                "@c:type": "gint"
                            }
                        },
                        {
                            "@name": "y",
                            "@writable": "1",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkwindow.h",
                                "@line": "338",
                                "#text": "Y coordinate relative to parent window (see gdk_window_move())"
                            },
                            "type": {
                                "@name": "gint",
                                "@c:type": "gint"
                            }
                        },
                        {
                            "@name": "width",
                            "@writable": "1",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkwindow.h",
                                "@line": "339",
                                "#text": "width of window"
                            },
                            "type": {
                                "@name": "gint",
                                "@c:type": "gint"
                            }
                        },
                        {
                            "@name": "height",
                            "@writable": "1",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkwindow.h",
                                "@line": "340",
                                "#text": "height of window"
                            },
                            "type": {
                                "@name": "gint",
                                "@c:type": "gint"
                            }
                        },
                        {
                            "@name": "wclass",
                            "@writable": "1",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkwindow.h",
                                "@line": "341",
                                "#text": "#GDK_INPUT_OUTPUT (normal window) or #GDK_INPUT_ONLY (invisible\n window that receives events)"
                            },
                            "type": {
                                "@name": "WindowWindowClass",
                                "@c:type": "GdkWindowWindowClass"
                            }
                        },
                        {
                            "@name": "visual",
                            "@writable": "1",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkwindow.h",
                                "@line": "343",
                                "#text": "#GdkVisual for window"
                            },
                            "type": {
                                "@name": "Visual",
                                "@c:type": "GdkVisual*"
                            }
                        },
                        {
                            "@name": "window_type",
                            "@writable": "1",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkwindow.h",
                                "@line": "344",
                                "#text": "type of window"
                            },
                            "type": {
                                "@name": "WindowType",
                                "@c:type": "GdkWindowType"
                            }
                        },
                        {
                            "@name": "cursor",
                            "@writable": "1",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkwindow.h",
                                "@line": "345",
                                "#text": "cursor for the window (see gdk_window_set_cursor())"
                            },
                            "type": {
                                "@name": "Cursor",
                                "@c:type": "GdkCursor*"
                            }
                        },
                        {
                            "@name": "wmclass_name",
                            "@writable": "1",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkwindow.h",
                                "@line": "346",
                                "#text": "don\u2019t use (see gtk_window_set_wmclass())"
                            },
                            "type": {
                                "@name": "utf8",
                                "@c:type": "gchar*"
                            }
                        },
                        {
                            "@name": "wmclass_class",
                            "@writable": "1",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkwindow.h",
                                "@line": "347",
                                "#text": "don\u2019t use (see gtk_window_set_wmclass())"
                            },
                            "type": {
                                "@name": "utf8",
                                "@c:type": "gchar*"
                            }
                        },
                        {
                            "@name": "override_redirect",
                            "@writable": "1",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkwindow.h",
                                "@line": "348",
                                "#text": "%TRUE to bypass the window manager"
                            },
                            "type": {
                                "@name": "gboolean",
                                "@c:type": "gboolean"
                            }
                        },
                        {
                            "@name": "type_hint",
                            "@writable": "1",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkwindow.h",
                                "@line": "349",
                                "#text": "a hint of the function of the window"
                            },
                            "type": {
                                "@name": "WindowTypeHint",
                                "@c:type": "GdkWindowTypeHint"
                            }
                        }
                    ]
                },
                {
                    "@name": "WindowClass",
                    "@c:type": "GdkWindowClass",
                    "@glib:is-gtype-struct-for": "Window",
                    "source-position": {
                        "@filename": "gdk/gdkwindow.h",
                        "@line": "503"
                    },
                    "field": [
                        {
                            "@name": "parent_class",
                            "type": {
                                "@name": "GObject.ObjectClass",
                                "@c:type": "GObjectClass"
                            }
                        },
                        {
                            "@name": "pick_embedded_child",
                            "@introspectable": "0",
                            "callback": {
                                "@name": "pick_embedded_child",
                                "@introspectable": "0",
                                "source-position": {
                                    "@filename": "gdk/gdkwindow.h",
                                    "@line": "475"
                                },
                                "return-value": {
                                    "type": {
                                        "@name": "Window",
                                        "@c:type": "GdkWindow*"
                                    }
                                },
                                "parameters": {
                                    "parameter": [
                                        {
                                            "@name": "window",
                                            "@transfer-ownership": "none",
                                            "type": {
                                                "@name": "Window",
                                                "@c:type": "GdkWindow*"
                                            }
                                        },
                                        {
                                            "@name": "x",
                                            "@transfer-ownership": "none",
                                            "type": {
                                                "@name": "gdouble",
                                                "@c:type": "gdouble"
                                            }
                                        },
                                        {
                                            "@name": "y",
                                            "@transfer-ownership": "none",
                                            "type": {
                                                "@name": "gdouble",
                                                "@c:type": "gdouble"
                                            }
                                        }
                                    ]
                                }
                            }
                        },
                        {
                            "@name": "to_embedder",
                            "callback": {
                                "@name": "to_embedder",
                                "source-position": {
                                    "@filename": "gdk/gdkwindow.h",
                                    "@line": "480"
                                },
                                "return-value": {
                                    "@transfer-ownership": "none",
                                    "type": {
                                        "@name": "none",
                                        "@c:type": "void"
                                    }
                                },
                                "parameters": {
                                    "parameter": [
                                        {
                                            "@name": "window",
                                            "@transfer-ownership": "none",
                                            "type": {
                                                "@name": "Window",
                                                "@c:type": "GdkWindow*"
                                            }
                                        },
                                        {
                                            "@name": "offscreen_x",
                                            "@transfer-ownership": "none",
                                            "type": {
                                                "@name": "gdouble",
                                                "@c:type": "gdouble"
                                            }
                                        },
                                        {
                                            "@name": "offscreen_y",
                                            "@transfer-ownership": "none",
                                            "type": {
                                                "@name": "gdouble",
                                                "@c:type": "gdouble"
                                            }
                                        },
                                        {
                                            "@name": "embedder_x",
                                            "@transfer-ownership": "none",
                                            "type": {
                                                "@name": "gdouble",
                                                "@c:type": "gdouble*"
                                            }
                                        },
                                        {
                                            "@name": "embedder_y",
                                            "@transfer-ownership": "none",
                                            "type": {
                                                "@name": "gdouble",
                                                "@c:type": "gdouble*"
                                            }
                                        }
                                    ]
                                }
                            }
                        },
                        {
                            "@name": "from_embedder",
                            "callback": {
                                "@name": "from_embedder",
                                "source-position": {
                                    "@filename": "gdk/gdkwindow.h",
                                    "@line": "485"
                                },
                                "return-value": {
                                    "@transfer-ownership": "none",
                                    "type": {
                                        "@name": "none",
                                        "@c:type": "void"
                                    }
                                },
                                "parameters": {
                                    "parameter": [
                                        {
                                            "@name": "window",
                                            "@transfer-ownership": "none",
                                            "type": {
                                                "@name": "Window",
                                                "@c:type": "GdkWindow*"
                                            }
                                        },
                                        {
                                            "@name": "embedder_x",
                                            "@transfer-ownership": "none",
                                            "type": {
                                                "@name": "gdouble",
                                                "@c:type": "gdouble"
                                            }
                                        },
                                        {
                                            "@name": "embedder_y",
                                            "@transfer-ownership": "none",
                                            "type": {
                                                "@name": "gdouble",
                                                "@c:type": "gdouble"
                                            }
                                        },
                                        {
                                            "@name": "offscreen_x",
                                            "@transfer-ownership": "none",
                                            "type": {
                                                "@name": "gdouble",
                                                "@c:type": "gdouble*"
                                            }
                                        },
                                        {
                                            "@name": "offscreen_y",
                                            "@transfer-ownership": "none",
                                            "type": {
                                                "@name": "gdouble",
                                                "@c:type": "gdouble*"
                                            }
                                        }
                                    ]
                                }
                            }
                        },
                        {
                            "@name": "create_surface",
                            "callback": {
                                "@name": "create_surface",
                                "source-position": {
                                    "@filename": "gdk/gdkwindow.h",
                                    "@line": "490"
                                },
                                "return-value": {
                                    "@transfer-ownership": "full",
                                    "type": {
                                        "@name": "cairo.Surface",
                                        "@c:type": "cairo_surface_t*"
                                    }
                                },
                                "parameters": {
                                    "parameter": [
                                        {
                                            "@name": "window",
                                            "@transfer-ownership": "none",
                                            "type": {
                                                "@name": "Window",
                                                "@c:type": "GdkWindow*"
                                            }
                                        },
                                        {
                                            "@name": "width",
                                            "@transfer-ownership": "none",
                                            "type": {
                                                "@name": "gint",
                                                "@c:type": "gint"
                                            }
                                        },
                                        {
                                            "@name": "height",
                                            "@transfer-ownership": "none",
                                            "type": {
                                                "@name": "gint",
                                                "@c:type": "gint"
                                            }
                                        }
                                    ]
                                }
                            }
                        },
                        {
                            "@name": "_gdk_reserved1",
                            "@introspectable": "0",
                            "callback": {
                                "@name": "_gdk_reserved1",
                                "source-position": {
                                    "@filename": "gdk/gdkwindow.h",
                                    "@line": "495"
                                },
                                "return-value": {
                                    "@transfer-ownership": "none",
                                    "type": {
                                        "@name": "none",
                                        "@c:type": "void"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "_gdk_reserved2",
                            "@introspectable": "0",
                            "callback": {
                                "@name": "_gdk_reserved2",
                                "source-position": {
                                    "@filename": "gdk/gdkwindow.h",
                                    "@line": "496"
                                },
                                "return-value": {
                                    "@transfer-ownership": "none",
                                    "type": {
                                        "@name": "none",
                                        "@c:type": "void"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "_gdk_reserved3",
                            "@introspectable": "0",
                            "callback": {
                                "@name": "_gdk_reserved3",
                                "source-position": {
                                    "@filename": "gdk/gdkwindow.h",
                                    "@line": "497"
                                },
                                "return-value": {
                                    "@transfer-ownership": "none",
                                    "type": {
                                        "@name": "none",
                                        "@c:type": "void"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "_gdk_reserved4",
                            "@introspectable": "0",
                            "callback": {
                                "@name": "_gdk_reserved4",
                                "source-position": {
                                    "@filename": "gdk/gdkwindow.h",
                                    "@line": "498"
                                },
                                "return-value": {
                                    "@transfer-ownership": "none",
                                    "type": {
                                        "@name": "none",
                                        "@c:type": "void"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "_gdk_reserved5",
                            "@introspectable": "0",
                            "callback": {
                                "@name": "_gdk_reserved5",
                                "source-position": {
                                    "@filename": "gdk/gdkwindow.h",
                                    "@line": "499"
                                },
                                "return-value": {
                                    "@transfer-ownership": "none",
                                    "type": {
                                        "@name": "none",
                                        "@c:type": "void"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "_gdk_reserved6",
                            "@introspectable": "0",
                            "callback": {
                                "@name": "_gdk_reserved6",
                                "source-position": {
                                    "@filename": "gdk/gdkwindow.h",
                                    "@line": "500"
                                },
                                "return-value": {
                                    "@transfer-ownership": "none",
                                    "type": {
                                        "@name": "none",
                                        "@c:type": "void"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "_gdk_reserved7",
                            "@introspectable": "0",
                            "callback": {
                                "@name": "_gdk_reserved7",
                                "source-position": {
                                    "@filename": "gdk/gdkwindow.h",
                                    "@line": "501"
                                },
                                "return-value": {
                                    "@transfer-ownership": "none",
                                    "type": {
                                        "@name": "none",
                                        "@c:type": "void"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "_gdk_reserved8",
                            "@introspectable": "0",
                            "callback": {
                                "@name": "_gdk_reserved8",
                                "source-position": {
                                    "@filename": "gdk/gdkwindow.h",
                                    "@line": "502"
                                },
                                "return-value": {
                                    "@transfer-ownership": "none",
                                    "type": {
                                        "@name": "none",
                                        "@c:type": "void"
                                    }
                                }
                            }
                        }
                    ]
                },
                {
                    "@name": "WindowRedirect",
                    "@c:type": "GdkWindowRedirect",
                    "@disguised": "1",
                    "source-position": {
                        "@filename": "gdk/gdkwindow.h",
                        "@line": "42"
                    }
                }
            ],
            "enumeration": [
                {
                    "@name": "AxisUse",
                    "@glib:type-name": "GdkAxisUse",
                    "@glib:get-type": "gdk_axis_use_get_type",
                    "@c:type": "GdkAxisUse",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "gdk/gdktypes.h",
                        "@line": "534",
                        "#text": "An enumeration describing the way in which a device\naxis (valuator) maps onto the predefined valuator\ntypes that GTK+ understands.\n\nNote that the X and Y axes are not really needed; pointer devices\nreport their location via the x/y members of events regardless. Whether\nX and Y are present as axes depends on the GDK backend."
                    },
                    "member": [
                        {
                            "@name": "ignore",
                            "@value": "0",
                            "@c:identifier": "GDK_AXIS_IGNORE",
                            "@glib:nick": "ignore",
                            "@glib:name": "GDK_AXIS_IGNORE",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdktypes.h",
                                "@line": "536",
                                "#text": "the axis is ignored."
                            }
                        },
                        {
                            "@name": "x",
                            "@value": "1",
                            "@c:identifier": "GDK_AXIS_X",
                            "@glib:nick": "x",
                            "@glib:name": "GDK_AXIS_X",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdktypes.h",
                                "@line": "537",
                                "#text": "the axis is used as the x axis."
                            }
                        },
                        {
                            "@name": "y",
                            "@value": "2",
                            "@c:identifier": "GDK_AXIS_Y",
                            "@glib:nick": "y",
                            "@glib:name": "GDK_AXIS_Y",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdktypes.h",
                                "@line": "538",
                                "#text": "the axis is used as the y axis."
                            }
                        },
                        {
                            "@name": "pressure",
                            "@value": "3",
                            "@c:identifier": "GDK_AXIS_PRESSURE",
                            "@glib:nick": "pressure",
                            "@glib:name": "GDK_AXIS_PRESSURE",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdktypes.h",
                                "@line": "539",
                                "#text": "the axis is used for pressure information."
                            }
                        },
                        {
                            "@name": "xtilt",
                            "@value": "4",
                            "@c:identifier": "GDK_AXIS_XTILT",
                            "@glib:nick": "xtilt",
                            "@glib:name": "GDK_AXIS_XTILT",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdktypes.h",
                                "@line": "540",
                                "#text": "the axis is used for x tilt information."
                            }
                        },
                        {
                            "@name": "ytilt",
                            "@value": "5",
                            "@c:identifier": "GDK_AXIS_YTILT",
                            "@glib:nick": "ytilt",
                            "@glib:name": "GDK_AXIS_YTILT",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdktypes.h",
                                "@line": "541",
                                "#text": "the axis is used for y tilt information."
                            }
                        },
                        {
                            "@name": "wheel",
                            "@value": "6",
                            "@c:identifier": "GDK_AXIS_WHEEL",
                            "@glib:nick": "wheel",
                            "@glib:name": "GDK_AXIS_WHEEL",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdktypes.h",
                                "@line": "542",
                                "#text": "the axis is used for wheel information."
                            }
                        },
                        {
                            "@name": "distance",
                            "@value": "7",
                            "@c:identifier": "GDK_AXIS_DISTANCE",
                            "@glib:nick": "distance",
                            "@glib:name": "GDK_AXIS_DISTANCE",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdktypes.h",
                                "@line": "543",
                                "#text": "the axis is used for pen/tablet distance information. (Since: 3.22)"
                            }
                        },
                        {
                            "@name": "rotation",
                            "@value": "8",
                            "@c:identifier": "GDK_AXIS_ROTATION",
                            "@glib:nick": "rotation",
                            "@glib:name": "GDK_AXIS_ROTATION",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdktypes.h",
                                "@line": "544",
                                "#text": "the axis is used for pen rotation information. (Since: 3.22)"
                            }
                        },
                        {
                            "@name": "slider",
                            "@value": "9",
                            "@c:identifier": "GDK_AXIS_SLIDER",
                            "@glib:nick": "slider",
                            "@glib:name": "GDK_AXIS_SLIDER",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdktypes.h",
                                "@line": "545",
                                "#text": "the axis is used for pen slider information. (Since: 3.22)"
                            }
                        },
                        {
                            "@name": "last",
                            "@value": "10",
                            "@c:identifier": "GDK_AXIS_LAST",
                            "@glib:nick": "last",
                            "@glib:name": "GDK_AXIS_LAST",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdktypes.h",
                                "@line": "546",
                                "#text": "a constant equal to the numerically highest axis value."
                            }
                        }
                    ]
                },
                {
                    "@name": "ByteOrder",
                    "@glib:type-name": "GdkByteOrder",
                    "@glib:get-type": "gdk_byte_order_get_type",
                    "@c:type": "GdkByteOrder",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "gdk/gdktypes.h",
                        "@line": "150",
                        "#text": "A set of values describing the possible byte-orders\nfor storing pixel values in memory."
                    },
                    "member": [
                        {
                            "@name": "lsb_first",
                            "@value": "0",
                            "@c:identifier": "GDK_LSB_FIRST",
                            "@glib:nick": "lsb-first",
                            "@glib:name": "GDK_LSB_FIRST",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdktypes.h",
                                "@line": "152",
                                "#text": "The values are stored with the least-significant byte\n  first. For instance, the 32-bit value 0xffeecc would be stored\n  in memory as 0xcc, 0xee, 0xff, 0x00."
                            }
                        },
                        {
                            "@name": "msb_first",
                            "@value": "1",
                            "@c:identifier": "GDK_MSB_FIRST",
                            "@glib:nick": "msb-first",
                            "@glib:name": "GDK_MSB_FIRST",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdktypes.h",
                                "@line": "155",
                                "#text": "The values are stored with the most-significant byte\n  first. For instance, the 32-bit value 0xffeecc would be stored\n  in memory as 0x00, 0xff, 0xee, 0xcc."
                            }
                        }
                    ]
                },
                {
                    "@name": "CrossingMode",
                    "@glib:type-name": "GdkCrossingMode",
                    "@glib:get-type": "gdk_crossing_mode_get_type",
                    "@c:type": "GdkCrossingMode",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "gdk/gdkevents.h",
                        "@line": "467",
                        "#text": "Specifies the crossing mode for #GdkEventCrossing."
                    },
                    "member": [
                        {
                            "@name": "normal",
                            "@value": "0",
                            "@c:identifier": "GDK_CROSSING_NORMAL",
                            "@glib:nick": "normal",
                            "@glib:name": "GDK_CROSSING_NORMAL",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkevents.h",
                                "@line": "469",
                                "#text": "crossing because of pointer motion."
                            }
                        },
                        {
                            "@name": "grab",
                            "@value": "1",
                            "@c:identifier": "GDK_CROSSING_GRAB",
                            "@glib:nick": "grab",
                            "@glib:name": "GDK_CROSSING_GRAB",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkevents.h",
                                "@line": "470",
                                "#text": "crossing because a grab is activated."
                            }
                        },
                        {
                            "@name": "ungrab",
                            "@value": "2",
                            "@c:identifier": "GDK_CROSSING_UNGRAB",
                            "@glib:nick": "ungrab",
                            "@glib:name": "GDK_CROSSING_UNGRAB",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkevents.h",
                                "@line": "471",
                                "#text": "crossing because a grab is deactivated."
                            }
                        },
                        {
                            "@name": "gtk_grab",
                            "@value": "3",
                            "@c:identifier": "GDK_CROSSING_GTK_GRAB",
                            "@glib:nick": "gtk-grab",
                            "@glib:name": "GDK_CROSSING_GTK_GRAB",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkevents.h",
                                "@line": "472",
                                "#text": "crossing because a GTK+ grab is activated."
                            }
                        },
                        {
                            "@name": "gtk_ungrab",
                            "@value": "4",
                            "@c:identifier": "GDK_CROSSING_GTK_UNGRAB",
                            "@glib:nick": "gtk-ungrab",
                            "@glib:name": "GDK_CROSSING_GTK_UNGRAB",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkevents.h",
                                "@line": "473",
                                "#text": "crossing because a GTK+ grab is deactivated."
                            }
                        },
                        {
                            "@name": "state_changed",
                            "@value": "5",
                            "@c:identifier": "GDK_CROSSING_STATE_CHANGED",
                            "@glib:nick": "state-changed",
                            "@glib:name": "GDK_CROSSING_STATE_CHANGED",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkevents.h",
                                "@line": "474",
                                "#text": "crossing because a GTK+ widget changed\n  state (e.g. sensitivity)."
                            }
                        },
                        {
                            "@name": "touch_begin",
                            "@value": "6",
                            "@c:identifier": "GDK_CROSSING_TOUCH_BEGIN",
                            "@glib:nick": "touch-begin",
                            "@glib:name": "GDK_CROSSING_TOUCH_BEGIN",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkevents.h",
                                "@line": "476",
                                "#text": "crossing because a touch sequence has begun,\n  this event is synthetic as the pointer might have not left the window."
                            }
                        },
                        {
                            "@name": "touch_end",
                            "@value": "7",
                            "@c:identifier": "GDK_CROSSING_TOUCH_END",
                            "@glib:nick": "touch-end",
                            "@glib:name": "GDK_CROSSING_TOUCH_END",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkevents.h",
                                "@line": "478",
                                "#text": "crossing because a touch sequence has ended,\n  this event is synthetic as the pointer might have not left the window."
                            }
                        },
                        {
                            "@name": "device_switch",
                            "@value": "8",
                            "@c:identifier": "GDK_CROSSING_DEVICE_SWITCH",
                            "@glib:nick": "device-switch",
                            "@glib:name": "GDK_CROSSING_DEVICE_SWITCH",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkevents.h",
                                "@line": "480",
                                "#text": "crossing because of a device switch (i.e.\n  a mouse taking control of the pointer after a touch device), this event\n  is synthetic as the pointer didn\u2019t leave the window."
                            }
                        }
                    ]
                },
                {
                    "@name": "CursorType",
                    "@glib:type-name": "GdkCursorType",
                    "@glib:get-type": "gdk_cursor_type_get_type",
                    "@c:type": "GdkCursorType",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "gdk/gdkcursor.h",
                        "@line": "43",
                        "#text": "Predefined cursors.\n\nNote that these IDs are directly taken from the X cursor font, and many\nof these cursors are either not useful, or are not available on other platforms.\n\nThe recommended way to create cursors is to use gdk_cursor_new_from_name()."
                    },
                    "member": [
                        {
                            "@name": "x_cursor",
                            "@value": "0",
                            "@c:identifier": "GDK_X_CURSOR",
                            "@glib:nick": "x-cursor",
                            "@glib:name": "GDK_X_CURSOR",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkcursor.h",
                                "@line": "45",
                                "#text": "![](X_cursor.png)"
                            }
                        },
                        {
                            "@name": "arrow",
                            "@value": "2",
                            "@c:identifier": "GDK_ARROW",
                            "@glib:nick": "arrow",
                            "@glib:name": "GDK_ARROW",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkcursor.h",
                                "@line": "46",
                                "#text": "![](arrow.png)"
                            }
                        },
                        {
                            "@name": "based_arrow_down",
                            "@value": "4",
                            "@c:identifier": "GDK_BASED_ARROW_DOWN",
                            "@glib:nick": "based-arrow-down",
                            "@glib:name": "GDK_BASED_ARROW_DOWN",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkcursor.h",
                                "@line": "47",
                                "#text": "![](based_arrow_down.png)"
                            }
                        },
                        {
                            "@name": "based_arrow_up",
                            "@value": "6",
                            "@c:identifier": "GDK_BASED_ARROW_UP",
                            "@glib:nick": "based-arrow-up",
                            "@glib:name": "GDK_BASED_ARROW_UP",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkcursor.h",
                                "@line": "48",
                                "#text": "![](based_arrow_up.png)"
                            }
                        },
                        {
                            "@name": "boat",
                            "@value": "8",
                            "@c:identifier": "GDK_BOAT",
                            "@glib:nick": "boat",
                            "@glib:name": "GDK_BOAT",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkcursor.h",
                                "@line": "49",
                                "#text": "![](boat.png)"
                            }
                        },
                        {
                            "@name": "bogosity",
                            "@value": "10",
                            "@c:identifier": "GDK_BOGOSITY",
                            "@glib:nick": "bogosity",
                            "@glib:name": "GDK_BOGOSITY",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkcursor.h",
                                "@line": "50",
                                "#text": "![](bogosity.png)"
                            }
                        },
                        {
                            "@name": "bottom_left_corner",
                            "@value": "12",
                            "@c:identifier": "GDK_BOTTOM_LEFT_CORNER",
                            "@glib:nick": "bottom-left-corner",
                            "@glib:name": "GDK_BOTTOM_LEFT_CORNER",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkcursor.h",
                                "@line": "51",
                                "#text": "![](bottom_left_corner.png)"
                            }
                        },
                        {
                            "@name": "bottom_right_corner",
                            "@value": "14",
                            "@c:identifier": "GDK_BOTTOM_RIGHT_CORNER",
                            "@glib:nick": "bottom-right-corner",
                            "@glib:name": "GDK_BOTTOM_RIGHT_CORNER",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkcursor.h",
                                "@line": "52",
                                "#text": "![](bottom_right_corner.png)"
                            }
                        },
                        {
                            "@name": "bottom_side",
                            "@value": "16",
                            "@c:identifier": "GDK_BOTTOM_SIDE",
                            "@glib:nick": "bottom-side",
                            "@glib:name": "GDK_BOTTOM_SIDE",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkcursor.h",
                                "@line": "53",
                                "#text": "![](bottom_side.png)"
                            }
                        },
                        {
                            "@name": "bottom_tee",
                            "@value": "18",
                            "@c:identifier": "GDK_BOTTOM_TEE",
                            "@glib:nick": "bottom-tee",
                            "@glib:name": "GDK_BOTTOM_TEE",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkcursor.h",
                                "@line": "54",
                                "#text": "![](bottom_tee.png)"
                            }
                        },
                        {
                            "@name": "box_spiral",
                            "@value": "20",
                            "@c:identifier": "GDK_BOX_SPIRAL",
                            "@glib:nick": "box-spiral",
                            "@glib:name": "GDK_BOX_SPIRAL",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkcursor.h",
                                "@line": "55",
                                "#text": "![](box_spiral.png)"
                            }
                        },
                        {
                            "@name": "center_ptr",
                            "@value": "22",
                            "@c:identifier": "GDK_CENTER_PTR",
                            "@glib:nick": "center-ptr",
                            "@glib:name": "GDK_CENTER_PTR",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkcursor.h",
                                "@line": "56",
                                "#text": "![](center_ptr.png)"
                            }
                        },
                        {
                            "@name": "circle",
                            "@value": "24",
                            "@c:identifier": "GDK_CIRCLE",
                            "@glib:nick": "circle",
                            "@glib:name": "GDK_CIRCLE",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkcursor.h",
                                "@line": "57",
                                "#text": "![](circle.png)"
                            }
                        },
                        {
                            "@name": "clock",
                            "@value": "26",
                            "@c:identifier": "GDK_CLOCK",
                            "@glib:nick": "clock",
                            "@glib:name": "GDK_CLOCK",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkcursor.h",
                                "@line": "58",
                                "#text": "![](clock.png)"
                            }
                        },
                        {
                            "@name": "coffee_mug",
                            "@value": "28",
                            "@c:identifier": "GDK_COFFEE_MUG",
                            "@glib:nick": "coffee-mug",
                            "@glib:name": "GDK_COFFEE_MUG",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkcursor.h",
                                "@line": "59",
                                "#text": "![](coffee_mug.png)"
                            }
                        },
                        {
                            "@name": "cross",
                            "@value": "30",
                            "@c:identifier": "GDK_CROSS",
                            "@glib:nick": "cross",
                            "@glib:name": "GDK_CROSS",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkcursor.h",
                                "@line": "60",
                                "#text": "![](cross.png)"
                            }
                        },
                        {
                            "@name": "cross_reverse",
                            "@value": "32",
                            "@c:identifier": "GDK_CROSS_REVERSE",
                            "@glib:nick": "cross-reverse",
                            "@glib:name": "GDK_CROSS_REVERSE",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkcursor.h",
                                "@line": "61",
                                "#text": "![](cross_reverse.png)"
                            }
                        },
                        {
                            "@name": "crosshair",
                            "@value": "34",
                            "@c:identifier": "GDK_CROSSHAIR",
                            "@glib:nick": "crosshair",
                            "@glib:name": "GDK_CROSSHAIR",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkcursor.h",
                                "@line": "62",
                                "#text": "![](crosshair.png)"
                            }
                        },
                        {
                            "@name": "diamond_cross",
                            "@value": "36",
                            "@c:identifier": "GDK_DIAMOND_CROSS",
                            "@glib:nick": "diamond-cross",
                            "@glib:name": "GDK_DIAMOND_CROSS",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkcursor.h",
                                "@line": "63",
                                "#text": "![](diamond_cross.png)"
                            }
                        },
                        {
                            "@name": "dot",
                            "@value": "38",
                            "@c:identifier": "GDK_DOT",
                            "@glib:nick": "dot",
                            "@glib:name": "GDK_DOT",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkcursor.h",
                                "@line": "64",
                                "#text": "![](dot.png)"
                            }
                        },
                        {
                            "@name": "dotbox",
                            "@value": "40",
                            "@c:identifier": "GDK_DOTBOX",
                            "@glib:nick": "dotbox",
                            "@glib:name": "GDK_DOTBOX",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkcursor.h",
                                "@line": "65",
                                "#text": "![](dotbox.png)"
                            }
                        },
                        {
                            "@name": "double_arrow",
                            "@value": "42",
                            "@c:identifier": "GDK_DOUBLE_ARROW",
                            "@glib:nick": "double-arrow",
                            "@glib:name": "GDK_DOUBLE_ARROW",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkcursor.h",
                                "@line": "66",
                                "#text": "![](double_arrow.png)"
                            }
                        },
                        {
                            "@name": "draft_large",
                            "@value": "44",
                            "@c:identifier": "GDK_DRAFT_LARGE",
                            "@glib:nick": "draft-large",
                            "@glib:name": "GDK_DRAFT_LARGE",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkcursor.h",
                                "@line": "67",
                                "#text": "![](draft_large.png)"
                            }
                        },
                        {
                            "@name": "draft_small",
                            "@value": "46",
                            "@c:identifier": "GDK_DRAFT_SMALL",
                            "@glib:nick": "draft-small",
                            "@glib:name": "GDK_DRAFT_SMALL",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkcursor.h",
                                "@line": "68",
                                "#text": "![](draft_small.png)"
                            }
                        },
                        {
                            "@name": "draped_box",
                            "@value": "48",
                            "@c:identifier": "GDK_DRAPED_BOX",
                            "@glib:nick": "draped-box",
                            "@glib:name": "GDK_DRAPED_BOX",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkcursor.h",
                                "@line": "69",
                                "#text": "![](draped_box.png)"
                            }
                        },
                        {
                            "@name": "exchange",
                            "@value": "50",
                            "@c:identifier": "GDK_EXCHANGE",
                            "@glib:nick": "exchange",
                            "@glib:name": "GDK_EXCHANGE",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkcursor.h",
                                "@line": "70",
                                "#text": "![](exchange.png)"
                            }
                        },
                        {
                            "@name": "fleur",
                            "@value": "52",
                            "@c:identifier": "GDK_FLEUR",
                            "@glib:nick": "fleur",
                            "@glib:name": "GDK_FLEUR",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkcursor.h",
                                "@line": "71",
                                "#text": "![](fleur.png)"
                            }
                        },
                        {
                            "@name": "gobbler",
                            "@value": "54",
                            "@c:identifier": "GDK_GOBBLER",
                            "@glib:nick": "gobbler",
                            "@glib:name": "GDK_GOBBLER",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkcursor.h",
                                "@line": "72",
                                "#text": "![](gobbler.png)"
                            }
                        },
                        {
                            "@name": "gumby",
                            "@value": "56",
                            "@c:identifier": "GDK_GUMBY",
                            "@glib:nick": "gumby",
                            "@glib:name": "GDK_GUMBY",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkcursor.h",
                                "@line": "73",
                                "#text": "![](gumby.png)"
                            }
                        },
                        {
                            "@name": "hand1",
                            "@value": "58",
                            "@c:identifier": "GDK_HAND1",
                            "@glib:nick": "hand1",
                            "@glib:name": "GDK_HAND1",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkcursor.h",
                                "@line": "74",
                                "#text": "![](hand1.png)"
                            }
                        },
                        {
                            "@name": "hand2",
                            "@value": "60",
                            "@c:identifier": "GDK_HAND2",
                            "@glib:nick": "hand2",
                            "@glib:name": "GDK_HAND2",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkcursor.h",
                                "@line": "75",
                                "#text": "![](hand2.png)"
                            }
                        },
                        {
                            "@name": "heart",
                            "@value": "62",
                            "@c:identifier": "GDK_HEART",
                            "@glib:nick": "heart",
                            "@glib:name": "GDK_HEART",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkcursor.h",
                                "@line": "76",
                                "#text": "![](heart.png)"
                            }
                        },
                        {
                            "@name": "icon",
                            "@value": "64",
                            "@c:identifier": "GDK_ICON",
                            "@glib:nick": "icon",
                            "@glib:name": "GDK_ICON",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkcursor.h",
                                "@line": "77",
                                "#text": "![](icon.png)"
                            }
                        },
                        {
                            "@name": "iron_cross",
                            "@value": "66",
                            "@c:identifier": "GDK_IRON_CROSS",
                            "@glib:nick": "iron-cross",
                            "@glib:name": "GDK_IRON_CROSS",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkcursor.h",
                                "@line": "78",
                                "#text": "![](iron_cross.png)"
                            }
                        },
                        {
                            "@name": "left_ptr",
                            "@value": "68",
                            "@c:identifier": "GDK_LEFT_PTR",
                            "@glib:nick": "left-ptr",
                            "@glib:name": "GDK_LEFT_PTR",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkcursor.h",
                                "@line": "79",
                                "#text": "![](left_ptr.png)"
                            }
                        },
                        {
                            "@name": "left_side",
                            "@value": "70",
                            "@c:identifier": "GDK_LEFT_SIDE",
                            "@glib:nick": "left-side",
                            "@glib:name": "GDK_LEFT_SIDE",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkcursor.h",
                                "@line": "80",
                                "#text": "![](left_side.png)"
                            }
                        },
                        {
                            "@name": "left_tee",
                            "@value": "72",
                            "@c:identifier": "GDK_LEFT_TEE",
                            "@glib:nick": "left-tee",
                            "@glib:name": "GDK_LEFT_TEE",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkcursor.h",
                                "@line": "81",
                                "#text": "![](left_tee.png)"
                            }
                        },
                        {
                            "@name": "leftbutton",
                            "@value": "74",
                            "@c:identifier": "GDK_LEFTBUTTON",
                            "@glib:nick": "leftbutton",
                            "@glib:name": "GDK_LEFTBUTTON",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkcursor.h",
                                "@line": "82",
                                "#text": "![](leftbutton.png)"
                            }
                        },
                        {
                            "@name": "ll_angle",
                            "@value": "76",
                            "@c:identifier": "GDK_LL_ANGLE",
                            "@glib:nick": "ll-angle",
                            "@glib:name": "GDK_LL_ANGLE",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkcursor.h",
                                "@line": "83",
                                "#text": "![](ll_angle.png)"
                            }
                        },
                        {
                            "@name": "lr_angle",
                            "@value": "78",
                            "@c:identifier": "GDK_LR_ANGLE",
                            "@glib:nick": "lr-angle",
                            "@glib:name": "GDK_LR_ANGLE",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkcursor.h",
                                "@line": "84",
                                "#text": "![](lr_angle.png)"
                            }
                        },
                        {
                            "@name": "man",
                            "@value": "80",
                            "@c:identifier": "GDK_MAN",
                            "@glib:nick": "man",
                            "@glib:name": "GDK_MAN",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkcursor.h",
                                "@line": "85",
                                "#text": "![](man.png)"
                            }
                        },
                        {
                            "@name": "middlebutton",
                            "@value": "82",
                            "@c:identifier": "GDK_MIDDLEBUTTON",
                            "@glib:nick": "middlebutton",
                            "@glib:name": "GDK_MIDDLEBUTTON",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkcursor.h",
                                "@line": "86",
                                "#text": "![](middlebutton.png)"
                            }
                        },
                        {
                            "@name": "mouse",
                            "@value": "84",
                            "@c:identifier": "GDK_MOUSE",
                            "@glib:nick": "mouse",
                            "@glib:name": "GDK_MOUSE",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkcursor.h",
                                "@line": "87",
                                "#text": "![](mouse.png)"
                            }
                        },
                        {
                            "@name": "pencil",
                            "@value": "86",
                            "@c:identifier": "GDK_PENCIL",
                            "@glib:nick": "pencil",
                            "@glib:name": "GDK_PENCIL",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkcursor.h",
                                "@line": "88",
                                "#text": "![](pencil.png)"
                            }
                        },
                        {
                            "@name": "pirate",
                            "@value": "88",
                            "@c:identifier": "GDK_PIRATE",
                            "@glib:nick": "pirate",
                            "@glib:name": "GDK_PIRATE",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkcursor.h",
                                "@line": "89",
                                "#text": "![](pirate.png)"
                            }
                        },
                        {
                            "@name": "plus",
                            "@value": "90",
                            "@c:identifier": "GDK_PLUS",
                            "@glib:nick": "plus",
                            "@glib:name": "GDK_PLUS",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkcursor.h",
                                "@line": "90",
                                "#text": "![](plus.png)"
                            }
                        },
                        {
                            "@name": "question_arrow",
                            "@value": "92",
                            "@c:identifier": "GDK_QUESTION_ARROW",
                            "@glib:nick": "question-arrow",
                            "@glib:name": "GDK_QUESTION_ARROW",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkcursor.h",
                                "@line": "91",
                                "#text": "![](question_arrow.png)"
                            }
                        },
                        {
                            "@name": "right_ptr",
                            "@value": "94",
                            "@c:identifier": "GDK_RIGHT_PTR",
                            "@glib:nick": "right-ptr",
                            "@glib:name": "GDK_RIGHT_PTR",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkcursor.h",
                                "@line": "92",
                                "#text": "![](right_ptr.png)"
                            }
                        },
                        {
                            "@name": "right_side",
                            "@value": "96",
                            "@c:identifier": "GDK_RIGHT_SIDE",
                            "@glib:nick": "right-side",
                            "@glib:name": "GDK_RIGHT_SIDE",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkcursor.h",
                                "@line": "93",
                                "#text": "![](right_side.png)"
                            }
                        },
                        {
                            "@name": "right_tee",
                            "@value": "98",
                            "@c:identifier": "GDK_RIGHT_TEE",
                            "@glib:nick": "right-tee",
                            "@glib:name": "GDK_RIGHT_TEE",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkcursor.h",
                                "@line": "94",
                                "#text": "![](right_tee.png)"
                            }
                        },
                        {
                            "@name": "rightbutton",
                            "@value": "100",
                            "@c:identifier": "GDK_RIGHTBUTTON",
                            "@glib:nick": "rightbutton",
                            "@glib:name": "GDK_RIGHTBUTTON",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkcursor.h",
                                "@line": "95",
                                "#text": "![](rightbutton.png)"
                            }
                        },
                        {
                            "@name": "rtl_logo",
                            "@value": "102",
                            "@c:identifier": "GDK_RTL_LOGO",
                            "@glib:nick": "rtl-logo",
                            "@glib:name": "GDK_RTL_LOGO",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkcursor.h",
                                "@line": "96",
                                "#text": "![](rtl_logo.png)"
                            }
                        },
                        {
                            "@name": "sailboat",
                            "@value": "104",
                            "@c:identifier": "GDK_SAILBOAT",
                            "@glib:nick": "sailboat",
                            "@glib:name": "GDK_SAILBOAT",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkcursor.h",
                                "@line": "97",
                                "#text": "![](sailboat.png)"
                            }
                        },
                        {
                            "@name": "sb_down_arrow",
                            "@value": "106",
                            "@c:identifier": "GDK_SB_DOWN_ARROW",
                            "@glib:nick": "sb-down-arrow",
                            "@glib:name": "GDK_SB_DOWN_ARROW",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkcursor.h",
                                "@line": "98",
                                "#text": "![](sb_down_arrow.png)"
                            }
                        },
                        {
                            "@name": "sb_h_double_arrow",
                            "@value": "108",
                            "@c:identifier": "GDK_SB_H_DOUBLE_ARROW",
                            "@glib:nick": "sb-h-double-arrow",
                            "@glib:name": "GDK_SB_H_DOUBLE_ARROW",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkcursor.h",
                                "@line": "99",
                                "#text": "![](sb_h_double_arrow.png)"
                            }
                        },
                        {
                            "@name": "sb_left_arrow",
                            "@value": "110",
                            "@c:identifier": "GDK_SB_LEFT_ARROW",
                            "@glib:nick": "sb-left-arrow",
                            "@glib:name": "GDK_SB_LEFT_ARROW",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkcursor.h",
                                "@line": "100",
                                "#text": "![](sb_left_arrow.png)"
                            }
                        },
                        {
                            "@name": "sb_right_arrow",
                            "@value": "112",
                            "@c:identifier": "GDK_SB_RIGHT_ARROW",
                            "@glib:nick": "sb-right-arrow",
                            "@glib:name": "GDK_SB_RIGHT_ARROW",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkcursor.h",
                                "@line": "101",
                                "#text": "![](sb_right_arrow.png)"
                            }
                        },
                        {
                            "@name": "sb_up_arrow",
                            "@value": "114",
                            "@c:identifier": "GDK_SB_UP_ARROW",
                            "@glib:nick": "sb-up-arrow",
                            "@glib:name": "GDK_SB_UP_ARROW",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkcursor.h",
                                "@line": "102",
                                "#text": "![](sb_up_arrow.png)"
                            }
                        },
                        {
                            "@name": "sb_v_double_arrow",
                            "@value": "116",
                            "@c:identifier": "GDK_SB_V_DOUBLE_ARROW",
                            "@glib:nick": "sb-v-double-arrow",
                            "@glib:name": "GDK_SB_V_DOUBLE_ARROW",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkcursor.h",
                                "@line": "103",
                                "#text": "![](sb_v_double_arrow.png)"
                            }
                        },
                        {
                            "@name": "shuttle",
                            "@value": "118",
                            "@c:identifier": "GDK_SHUTTLE",
                            "@glib:nick": "shuttle",
                            "@glib:name": "GDK_SHUTTLE",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkcursor.h",
                                "@line": "104",
                                "#text": "![](shuttle.png)"
                            }
                        },
                        {
                            "@name": "sizing",
                            "@value": "120",
                            "@c:identifier": "GDK_SIZING",
                            "@glib:nick": "sizing",
                            "@glib:name": "GDK_SIZING",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkcursor.h",
                                "@line": "105",
                                "#text": "![](sizing.png)"
                            }
                        },
                        {
                            "@name": "spider",
                            "@value": "122",
                            "@c:identifier": "GDK_SPIDER",
                            "@glib:nick": "spider",
                            "@glib:name": "GDK_SPIDER",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkcursor.h",
                                "@line": "106",
                                "#text": "![](spider.png)"
                            }
                        },
                        {
                            "@name": "spraycan",
                            "@value": "124",
                            "@c:identifier": "GDK_SPRAYCAN",
                            "@glib:nick": "spraycan",
                            "@glib:name": "GDK_SPRAYCAN",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkcursor.h",
                                "@line": "107",
                                "#text": "![](spraycan.png)"
                            }
                        },
                        {
                            "@name": "star",
                            "@value": "126",
                            "@c:identifier": "GDK_STAR",
                            "@glib:nick": "star",
                            "@glib:name": "GDK_STAR",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkcursor.h",
                                "@line": "108",
                                "#text": "![](star.png)"
                            }
                        },
                        {
                            "@name": "target",
                            "@value": "128",
                            "@c:identifier": "GDK_TARGET",
                            "@glib:nick": "target",
                            "@glib:name": "GDK_TARGET",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkcursor.h",
                                "@line": "109",
                                "#text": "![](target.png)"
                            }
                        },
                        {
                            "@name": "tcross",
                            "@value": "130",
                            "@c:identifier": "GDK_TCROSS",
                            "@glib:nick": "tcross",
                            "@glib:name": "GDK_TCROSS",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkcursor.h",
                                "@line": "110",
                                "#text": "![](tcross.png)"
                            }
                        },
                        {
                            "@name": "top_left_arrow",
                            "@value": "132",
                            "@c:identifier": "GDK_TOP_LEFT_ARROW",
                            "@glib:nick": "top-left-arrow",
                            "@glib:name": "GDK_TOP_LEFT_ARROW",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkcursor.h",
                                "@line": "111",
                                "#text": "![](top_left_arrow.png)"
                            }
                        },
                        {
                            "@name": "top_left_corner",
                            "@value": "134",
                            "@c:identifier": "GDK_TOP_LEFT_CORNER",
                            "@glib:nick": "top-left-corner",
                            "@glib:name": "GDK_TOP_LEFT_CORNER",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkcursor.h",
                                "@line": "112",
                                "#text": "![](top_left_corner.png)"
                            }
                        },
                        {
                            "@name": "top_right_corner",
                            "@value": "136",
                            "@c:identifier": "GDK_TOP_RIGHT_CORNER",
                            "@glib:nick": "top-right-corner",
                            "@glib:name": "GDK_TOP_RIGHT_CORNER",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkcursor.h",
                                "@line": "113",
                                "#text": "![](top_right_corner.png)"
                            }
                        },
                        {
                            "@name": "top_side",
                            "@value": "138",
                            "@c:identifier": "GDK_TOP_SIDE",
                            "@glib:nick": "top-side",
                            "@glib:name": "GDK_TOP_SIDE",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkcursor.h",
                                "@line": "114",
                                "#text": "![](top_side.png)"
                            }
                        },
                        {
                            "@name": "top_tee",
                            "@value": "140",
                            "@c:identifier": "GDK_TOP_TEE",
                            "@glib:nick": "top-tee",
                            "@glib:name": "GDK_TOP_TEE",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkcursor.h",
                                "@line": "115",
                                "#text": "![](top_tee.png)"
                            }
                        },
                        {
                            "@name": "trek",
                            "@value": "142",
                            "@c:identifier": "GDK_TREK",
                            "@glib:nick": "trek",
                            "@glib:name": "GDK_TREK",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkcursor.h",
                                "@line": "116",
                                "#text": "![](trek.png)"
                            }
                        },
                        {
                            "@name": "ul_angle",
                            "@value": "144",
                            "@c:identifier": "GDK_UL_ANGLE",
                            "@glib:nick": "ul-angle",
                            "@glib:name": "GDK_UL_ANGLE",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkcursor.h",
                                "@line": "117",
                                "#text": "![](ul_angle.png)"
                            }
                        },
                        {
                            "@name": "umbrella",
                            "@value": "146",
                            "@c:identifier": "GDK_UMBRELLA",
                            "@glib:nick": "umbrella",
                            "@glib:name": "GDK_UMBRELLA",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkcursor.h",
                                "@line": "118",
                                "#text": "![](umbrella.png)"
                            }
                        },
                        {
                            "@name": "ur_angle",
                            "@value": "148",
                            "@c:identifier": "GDK_UR_ANGLE",
                            "@glib:nick": "ur-angle",
                            "@glib:name": "GDK_UR_ANGLE",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkcursor.h",
                                "@line": "119",
                                "#text": "![](ur_angle.png)"
                            }
                        },
                        {
                            "@name": "watch",
                            "@value": "150",
                            "@c:identifier": "GDK_WATCH",
                            "@glib:nick": "watch",
                            "@glib:name": "GDK_WATCH",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkcursor.h",
                                "@line": "120",
                                "#text": "![](watch.png)"
                            }
                        },
                        {
                            "@name": "xterm",
                            "@value": "152",
                            "@c:identifier": "GDK_XTERM",
                            "@glib:nick": "xterm",
                            "@glib:name": "GDK_XTERM",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkcursor.h",
                                "@line": "121",
                                "#text": "![](xterm.png)"
                            }
                        },
                        {
                            "@name": "last_cursor",
                            "@value": "153",
                            "@c:identifier": "GDK_LAST_CURSOR",
                            "@glib:nick": "last-cursor",
                            "@glib:name": "GDK_LAST_CURSOR",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkcursor.h",
                                "@line": "122",
                                "#text": "last cursor type"
                            }
                        },
                        {
                            "@name": "blank_cursor",
                            "@value": "-2",
                            "@c:identifier": "GDK_BLANK_CURSOR",
                            "@glib:nick": "blank-cursor",
                            "@glib:name": "GDK_BLANK_CURSOR",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkcursor.h",
                                "@line": "123",
                                "#text": "Blank cursor. Since 2.16"
                            }
                        },
                        {
                            "@name": "cursor_is_pixmap",
                            "@value": "-1",
                            "@c:identifier": "GDK_CURSOR_IS_PIXMAP",
                            "@glib:nick": "cursor-is-pixmap",
                            "@glib:name": "GDK_CURSOR_IS_PIXMAP",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkcursor.h",
                                "@line": "124",
                                "#text": "type of cursors constructed with\n  gdk_cursor_new_from_pixbuf()"
                            }
                        }
                    ]
                },
                {
                    "@name": "DevicePadFeature",
                    "@glib:type-name": "GdkDevicePadFeature",
                    "@glib:get-type": "gdk_device_pad_feature_get_type",
                    "@c:type": "GdkDevicePadFeature",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "gdk/gdkdevicepad.h",
                        "@line": "39",
                        "#text": "A pad feature."
                    },
                    "member": [
                        {
                            "@name": "button",
                            "@value": "0",
                            "@c:identifier": "GDK_DEVICE_PAD_FEATURE_BUTTON",
                            "@glib:nick": "button",
                            "@glib:name": "GDK_DEVICE_PAD_FEATURE_BUTTON",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkdevicepad.h",
                                "@line": "41",
                                "#text": "a button"
                            }
                        },
                        {
                            "@name": "ring",
                            "@value": "1",
                            "@c:identifier": "GDK_DEVICE_PAD_FEATURE_RING",
                            "@glib:nick": "ring",
                            "@glib:name": "GDK_DEVICE_PAD_FEATURE_RING",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkdevicepad.h",
                                "@line": "42",
                                "#text": "a ring-shaped interactive area"
                            }
                        },
                        {
                            "@name": "strip",
                            "@value": "2",
                            "@c:identifier": "GDK_DEVICE_PAD_FEATURE_STRIP",
                            "@glib:nick": "strip",
                            "@glib:name": "GDK_DEVICE_PAD_FEATURE_STRIP",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkdevicepad.h",
                                "@line": "43",
                                "#text": "a straight interactive area"
                            }
                        }
                    ]
                },
                {
                    "@name": "DeviceToolType",
                    "@version": "3.22",
                    "@glib:type-name": "GdkDeviceToolType",
                    "@glib:get-type": "gdk_device_tool_type_get_type",
                    "@c:type": "GdkDeviceToolType",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "gdk/gdkdevicetool.h",
                        "@line": "37",
                        "#text": "Indicates the specific type of tool being used being a tablet. Such as an\nairbrush, pencil, etc."
                    },
                    "member": [
                        {
                            "@name": "unknown",
                            "@value": "0",
                            "@c:identifier": "GDK_DEVICE_TOOL_TYPE_UNKNOWN",
                            "@glib:nick": "unknown",
                            "@glib:name": "GDK_DEVICE_TOOL_TYPE_UNKNOWN",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkdevicetool.h",
                                "@line": "39",
                                "#text": "Tool is of an unknown type."
                            }
                        },
                        {
                            "@name": "pen",
                            "@value": "1",
                            "@c:identifier": "GDK_DEVICE_TOOL_TYPE_PEN",
                            "@glib:nick": "pen",
                            "@glib:name": "GDK_DEVICE_TOOL_TYPE_PEN",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkdevicetool.h",
                                "@line": "40",
                                "#text": "Tool is a standard tablet stylus."
                            }
                        },
                        {
                            "@name": "eraser",
                            "@value": "2",
                            "@c:identifier": "GDK_DEVICE_TOOL_TYPE_ERASER",
                            "@glib:nick": "eraser",
                            "@glib:name": "GDK_DEVICE_TOOL_TYPE_ERASER",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkdevicetool.h",
                                "@line": "41",
                                "#text": "Tool is standard tablet eraser."
                            }
                        },
                        {
                            "@name": "brush",
                            "@value": "3",
                            "@c:identifier": "GDK_DEVICE_TOOL_TYPE_BRUSH",
                            "@glib:nick": "brush",
                            "@glib:name": "GDK_DEVICE_TOOL_TYPE_BRUSH",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkdevicetool.h",
                                "@line": "42",
                                "#text": "Tool is a brush stylus."
                            }
                        },
                        {
                            "@name": "pencil",
                            "@value": "4",
                            "@c:identifier": "GDK_DEVICE_TOOL_TYPE_PENCIL",
                            "@glib:nick": "pencil",
                            "@glib:name": "GDK_DEVICE_TOOL_TYPE_PENCIL",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkdevicetool.h",
                                "@line": "43",
                                "#text": "Tool is a pencil stylus."
                            }
                        },
                        {
                            "@name": "airbrush",
                            "@value": "5",
                            "@c:identifier": "GDK_DEVICE_TOOL_TYPE_AIRBRUSH",
                            "@glib:nick": "airbrush",
                            "@glib:name": "GDK_DEVICE_TOOL_TYPE_AIRBRUSH",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkdevicetool.h",
                                "@line": "44",
                                "#text": "Tool is an airbrush stylus."
                            }
                        },
                        {
                            "@name": "mouse",
                            "@value": "6",
                            "@c:identifier": "GDK_DEVICE_TOOL_TYPE_MOUSE",
                            "@glib:nick": "mouse",
                            "@glib:name": "GDK_DEVICE_TOOL_TYPE_MOUSE",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkdevicetool.h",
                                "@line": "45",
                                "#text": "Tool is a mouse."
                            }
                        },
                        {
                            "@name": "lens",
                            "@value": "7",
                            "@c:identifier": "GDK_DEVICE_TOOL_TYPE_LENS",
                            "@glib:nick": "lens",
                            "@glib:name": "GDK_DEVICE_TOOL_TYPE_LENS",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkdevicetool.h",
                                "@line": "46",
                                "#text": "Tool is a lens cursor."
                            }
                        }
                    ]
                },
                {
                    "@name": "DeviceType",
                    "@glib:type-name": "GdkDeviceType",
                    "@glib:get-type": "gdk_device_type_get_type",
                    "@c:type": "GdkDeviceType",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "gdk/gdkdevice.h",
                        "@line": "90",
                        "#text": "Indicates the device type. See [above][GdkDeviceManager.description]\nfor more information about the meaning of these device types."
                    },
                    "member": [
                        {
                            "@name": "master",
                            "@value": "0",
                            "@c:identifier": "GDK_DEVICE_TYPE_MASTER",
                            "@glib:nick": "master",
                            "@glib:name": "GDK_DEVICE_TYPE_MASTER",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkdevice.h",
                                "@line": "92",
                                "#text": "Device is a master (or virtual) device. There will\n                         be an associated focus indicator on the screen."
                            }
                        },
                        {
                            "@name": "slave",
                            "@value": "1",
                            "@c:identifier": "GDK_DEVICE_TYPE_SLAVE",
                            "@glib:nick": "slave",
                            "@glib:name": "GDK_DEVICE_TYPE_SLAVE",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkdevice.h",
                                "@line": "94",
                                "#text": "Device is a slave (or physical) device."
                            }
                        },
                        {
                            "@name": "floating",
                            "@value": "2",
                            "@c:identifier": "GDK_DEVICE_TYPE_FLOATING",
                            "@glib:nick": "floating",
                            "@glib:name": "GDK_DEVICE_TYPE_FLOATING",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkdevice.h",
                                "@line": "95",
                                "#text": "Device is a physical device, currently not attached to\n                           any virtual device."
                            }
                        }
                    ]
                },
                {
                    "@name": "DragCancelReason",
                    "@version": "3.20",
                    "@glib:type-name": "GdkDragCancelReason",
                    "@glib:get-type": "gdk_drag_cancel_reason_get_type",
                    "@c:type": "GdkDragCancelReason",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "gdk/gdkdnd.h",
                        "@line": "67",
                        "#text": "Used in #GdkDragContext to the reason of a cancelled DND operation."
                    },
                    "member": [
                        {
                            "@name": "no_target",
                            "@value": "0",
                            "@c:identifier": "GDK_DRAG_CANCEL_NO_TARGET",
                            "@glib:nick": "no-target",
                            "@glib:name": "GDK_DRAG_CANCEL_NO_TARGET",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkdnd.h",
                                "@line": "69",
                                "#text": "There is no suitable drop target."
                            }
                        },
                        {
                            "@name": "user_cancelled",
                            "@value": "1",
                            "@c:identifier": "GDK_DRAG_CANCEL_USER_CANCELLED",
                            "@glib:nick": "user-cancelled",
                            "@glib:name": "GDK_DRAG_CANCEL_USER_CANCELLED",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkdnd.h",
                                "@line": "70",
                                "#text": "Drag cancelled by the user"
                            }
                        },
                        {
                            "@name": "error",
                            "@value": "2",
                            "@c:identifier": "GDK_DRAG_CANCEL_ERROR",
                            "@glib:nick": "error",
                            "@glib:name": "GDK_DRAG_CANCEL_ERROR",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkdnd.h",
                                "@line": "71",
                                "#text": "Unspecified error."
                            }
                        }
                    ]
                },
                {
                    "@name": "DragProtocol",
                    "@glib:type-name": "GdkDragProtocol",
                    "@glib:get-type": "gdk_drag_protocol_get_type",
                    "@c:type": "GdkDragProtocol",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "gdk/gdkdnd.h",
                        "@line": "83",
                        "#text": "Used in #GdkDragContext to indicate the protocol according to\nwhich DND is done."
                    },
                    "member": [
                        {
                            "@name": "none",
                            "@value": "0",
                            "@c:identifier": "GDK_DRAG_PROTO_NONE",
                            "@glib:nick": "none",
                            "@glib:name": "GDK_DRAG_PROTO_NONE",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkdnd.h",
                                "@line": "85",
                                "#text": "no protocol."
                            }
                        },
                        {
                            "@name": "motif",
                            "@value": "1",
                            "@c:identifier": "GDK_DRAG_PROTO_MOTIF",
                            "@glib:nick": "motif",
                            "@glib:name": "GDK_DRAG_PROTO_MOTIF",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkdnd.h",
                                "@line": "86",
                                "#text": "The Motif DND protocol. No longer supported"
                            }
                        },
                        {
                            "@name": "xdnd",
                            "@value": "2",
                            "@c:identifier": "GDK_DRAG_PROTO_XDND",
                            "@glib:nick": "xdnd",
                            "@glib:name": "GDK_DRAG_PROTO_XDND",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkdnd.h",
                                "@line": "87",
                                "#text": "The Xdnd protocol."
                            }
                        },
                        {
                            "@name": "rootwin",
                            "@value": "3",
                            "@c:identifier": "GDK_DRAG_PROTO_ROOTWIN",
                            "@glib:nick": "rootwin",
                            "@glib:name": "GDK_DRAG_PROTO_ROOTWIN",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkdnd.h",
                                "@line": "88",
                                "#text": "An extension to the Xdnd protocol for\n unclaimed root window drops."
                            }
                        },
                        {
                            "@name": "win32_dropfiles",
                            "@value": "4",
                            "@c:identifier": "GDK_DRAG_PROTO_WIN32_DROPFILES",
                            "@glib:nick": "win32-dropfiles",
                            "@glib:name": "GDK_DRAG_PROTO_WIN32_DROPFILES",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkdnd.h",
                                "@line": "90",
                                "#text": "The simple WM_DROPFILES protocol."
                            }
                        },
                        {
                            "@name": "ole2",
                            "@value": "5",
                            "@c:identifier": "GDK_DRAG_PROTO_OLE2",
                            "@glib:nick": "ole2",
                            "@glib:name": "GDK_DRAG_PROTO_OLE2",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkdnd.h",
                                "@line": "91",
                                "#text": "The complex OLE2 DND protocol (not implemented)."
                            }
                        },
                        {
                            "@name": "local",
                            "@value": "6",
                            "@c:identifier": "GDK_DRAG_PROTO_LOCAL",
                            "@glib:nick": "local",
                            "@glib:name": "GDK_DRAG_PROTO_LOCAL",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkdnd.h",
                                "@line": "92",
                                "#text": "Intra-application DND."
                            }
                        },
                        {
                            "@name": "wayland",
                            "@value": "7",
                            "@c:identifier": "GDK_DRAG_PROTO_WAYLAND",
                            "@glib:nick": "wayland",
                            "@glib:name": "GDK_DRAG_PROTO_WAYLAND",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkdnd.h",
                                "@line": "93",
                                "#text": "Wayland DND protocol."
                            }
                        }
                    ]
                },
                {
                    "@name": "EventType",
                    "@glib:type-name": "GdkEventType",
                    "@glib:get-type": "gdk_event_type_get_type",
                    "@c:type": "GdkEventType",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "gdk/gdkevents.h",
                        "@line": "216",
                        "#text": "Specifies the type of the event.\n\nDo not confuse these events with the signals that GTK+ widgets emit.\nAlthough many of these events result in corresponding signals being emitted,\nthe events are often transformed or filtered along the way.\n\nIn some language bindings, the values %GDK_2BUTTON_PRESS and\n%GDK_3BUTTON_PRESS would translate into something syntactically\ninvalid (eg `Gdk.EventType.2ButtonPress`, where a\nsymbol is not allowed to start with a number). In that case, the\naliases %GDK_DOUBLE_BUTTON_PRESS and %GDK_TRIPLE_BUTTON_PRESS can\nbe used instead."
                    },
                    "member": [
                        {
                            "@name": "nothing",
                            "@value": "-1",
                            "@c:identifier": "GDK_NOTHING",
                            "@glib:nick": "nothing",
                            "@glib:name": "GDK_NOTHING",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkevents.h",
                                "@line": "218",
                                "#text": "a special code to indicate a null event."
                            }
                        },
                        {
                            "@name": "delete",
                            "@value": "0",
                            "@c:identifier": "GDK_DELETE",
                            "@glib:nick": "delete",
                            "@glib:name": "GDK_DELETE",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkevents.h",
                                "@line": "219",
                                "#text": "the window manager has requested that the toplevel window be\n  hidden or destroyed, usually when the user clicks on a special icon in the\n  title bar."
                            }
                        },
                        {
                            "@name": "destroy",
                            "@value": "1",
                            "@c:identifier": "GDK_DESTROY",
                            "@glib:nick": "destroy",
                            "@glib:name": "GDK_DESTROY",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkevents.h",
                                "@line": "222",
                                "#text": "the window has been destroyed."
                            }
                        },
                        {
                            "@name": "expose",
                            "@value": "2",
                            "@c:identifier": "GDK_EXPOSE",
                            "@glib:nick": "expose",
                            "@glib:name": "GDK_EXPOSE",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkevents.h",
                                "@line": "223",
                                "#text": "all or part of the window has become visible and needs to be\n  redrawn."
                            }
                        },
                        {
                            "@name": "motion_notify",
                            "@value": "3",
                            "@c:identifier": "GDK_MOTION_NOTIFY",
                            "@glib:nick": "motion-notify",
                            "@glib:name": "GDK_MOTION_NOTIFY",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkevents.h",
                                "@line": "225",
                                "#text": "the pointer (usually a mouse) has moved."
                            }
                        },
                        {
                            "@name": "button_press",
                            "@value": "4",
                            "@c:identifier": "GDK_BUTTON_PRESS",
                            "@glib:nick": "button-press",
                            "@glib:name": "GDK_BUTTON_PRESS",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkevents.h",
                                "@line": "226",
                                "#text": "a mouse button has been pressed."
                            }
                        },
                        {
                            "@name": "2button_press",
                            "@value": "5",
                            "@c:identifier": "GDK_2BUTTON_PRESS",
                            "@glib:nick": "2button-press",
                            "@glib:name": "GDK_2BUTTON_PRESS",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkevents.h",
                                "@line": "227",
                                "#text": "a mouse button has been double-clicked (clicked twice\n  within a short period of time). Note that each click also generates a\n  %GDK_BUTTON_PRESS event."
                            }
                        },
                        {
                            "@name": "double_button_press",
                            "@value": "5",
                            "@c:identifier": "GDK_DOUBLE_BUTTON_PRESS",
                            "@glib:nick": "double-button-press",
                            "@glib:name": "GDK_DOUBLE_BUTTON_PRESS",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkevents.h",
                                "@line": "230",
                                "#text": "alias for %GDK_2BUTTON_PRESS, added in 3.6."
                            }
                        },
                        {
                            "@name": "3button_press",
                            "@value": "6",
                            "@c:identifier": "GDK_3BUTTON_PRESS",
                            "@glib:nick": "3button-press",
                            "@glib:name": "GDK_3BUTTON_PRESS",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkevents.h",
                                "@line": "231",
                                "#text": "a mouse button has been clicked 3 times in a short period\n  of time. Note that each click also generates a %GDK_BUTTON_PRESS event."
                            }
                        },
                        {
                            "@name": "triple_button_press",
                            "@value": "6",
                            "@c:identifier": "GDK_TRIPLE_BUTTON_PRESS",
                            "@glib:nick": "triple-button-press",
                            "@glib:name": "GDK_TRIPLE_BUTTON_PRESS",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkevents.h",
                                "@line": "233",
                                "#text": "alias for %GDK_3BUTTON_PRESS, added in 3.6."
                            }
                        },
                        {
                            "@name": "button_release",
                            "@value": "7",
                            "@c:identifier": "GDK_BUTTON_RELEASE",
                            "@glib:nick": "button-release",
                            "@glib:name": "GDK_BUTTON_RELEASE",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkevents.h",
                                "@line": "234",
                                "#text": "a mouse button has been released."
                            }
                        },
                        {
                            "@name": "key_press",
                            "@value": "8",
                            "@c:identifier": "GDK_KEY_PRESS",
                            "@glib:nick": "key-press",
                            "@glib:name": "GDK_KEY_PRESS",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkevents.h",
                                "@line": "235",
                                "#text": "a key has been pressed."
                            }
                        },
                        {
                            "@name": "key_release",
                            "@value": "9",
                            "@c:identifier": "GDK_KEY_RELEASE",
                            "@glib:nick": "key-release",
                            "@glib:name": "GDK_KEY_RELEASE",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkevents.h",
                                "@line": "236",
                                "#text": "a key has been released."
                            }
                        },
                        {
                            "@name": "enter_notify",
                            "@value": "10",
                            "@c:identifier": "GDK_ENTER_NOTIFY",
                            "@glib:nick": "enter-notify",
                            "@glib:name": "GDK_ENTER_NOTIFY",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkevents.h",
                                "@line": "237",
                                "#text": "the pointer has entered the window."
                            }
                        },
                        {
                            "@name": "leave_notify",
                            "@value": "11",
                            "@c:identifier": "GDK_LEAVE_NOTIFY",
                            "@glib:nick": "leave-notify",
                            "@glib:name": "GDK_LEAVE_NOTIFY",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkevents.h",
                                "@line": "238",
                                "#text": "the pointer has left the window."
                            }
                        },
                        {
                            "@name": "focus_change",
                            "@value": "12",
                            "@c:identifier": "GDK_FOCUS_CHANGE",
                            "@glib:nick": "focus-change",
                            "@glib:name": "GDK_FOCUS_CHANGE",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkevents.h",
                                "@line": "239",
                                "#text": "the keyboard focus has entered or left the window."
                            }
                        },
                        {
                            "@name": "configure",
                            "@value": "13",
                            "@c:identifier": "GDK_CONFIGURE",
                            "@glib:nick": "configure",
                            "@glib:name": "GDK_CONFIGURE",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkevents.h",
                                "@line": "240",
                                "#text": "the size, position or stacking order of the window has changed.\n  Note that GTK+ discards these events for %GDK_WINDOW_CHILD windows."
                            }
                        },
                        {
                            "@name": "map",
                            "@value": "14",
                            "@c:identifier": "GDK_MAP",
                            "@glib:nick": "map",
                            "@glib:name": "GDK_MAP",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkevents.h",
                                "@line": "242",
                                "#text": "the window has been mapped."
                            }
                        },
                        {
                            "@name": "unmap",
                            "@value": "15",
                            "@c:identifier": "GDK_UNMAP",
                            "@glib:nick": "unmap",
                            "@glib:name": "GDK_UNMAP",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkevents.h",
                                "@line": "243",
                                "#text": "the window has been unmapped."
                            }
                        },
                        {
                            "@name": "property_notify",
                            "@value": "16",
                            "@c:identifier": "GDK_PROPERTY_NOTIFY",
                            "@glib:nick": "property-notify",
                            "@glib:name": "GDK_PROPERTY_NOTIFY",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkevents.h",
                                "@line": "244",
                                "#text": "a property on the window has been changed or deleted."
                            }
                        },
                        {
                            "@name": "selection_clear",
                            "@value": "17",
                            "@c:identifier": "GDK_SELECTION_CLEAR",
                            "@glib:nick": "selection-clear",
                            "@glib:name": "GDK_SELECTION_CLEAR",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkevents.h",
                                "@line": "245",
                                "#text": "the application has lost ownership of a selection."
                            }
                        },
                        {
                            "@name": "selection_request",
                            "@value": "18",
                            "@c:identifier": "GDK_SELECTION_REQUEST",
                            "@glib:nick": "selection-request",
                            "@glib:name": "GDK_SELECTION_REQUEST",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkevents.h",
                                "@line": "246",
                                "#text": "another application has requested a selection."
                            }
                        },
                        {
                            "@name": "selection_notify",
                            "@value": "19",
                            "@c:identifier": "GDK_SELECTION_NOTIFY",
                            "@glib:nick": "selection-notify",
                            "@glib:name": "GDK_SELECTION_NOTIFY",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkevents.h",
                                "@line": "247",
                                "#text": "a selection has been received."
                            }
                        },
                        {
                            "@name": "proximity_in",
                            "@value": "20",
                            "@c:identifier": "GDK_PROXIMITY_IN",
                            "@glib:nick": "proximity-in",
                            "@glib:name": "GDK_PROXIMITY_IN",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkevents.h",
                                "@line": "248",
                                "#text": "an input device has moved into contact with a sensing\n  surface (e.g. a touchscreen or graphics tablet)."
                            }
                        },
                        {
                            "@name": "proximity_out",
                            "@value": "21",
                            "@c:identifier": "GDK_PROXIMITY_OUT",
                            "@glib:nick": "proximity-out",
                            "@glib:name": "GDK_PROXIMITY_OUT",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkevents.h",
                                "@line": "250",
                                "#text": "an input device has moved out of contact with a sensing\n  surface."
                            }
                        },
                        {
                            "@name": "drag_enter",
                            "@value": "22",
                            "@c:identifier": "GDK_DRAG_ENTER",
                            "@glib:nick": "drag-enter",
                            "@glib:name": "GDK_DRAG_ENTER",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkevents.h",
                                "@line": "252",
                                "#text": "the mouse has entered the window while a drag is in progress."
                            }
                        },
                        {
                            "@name": "drag_leave",
                            "@value": "23",
                            "@c:identifier": "GDK_DRAG_LEAVE",
                            "@glib:nick": "drag-leave",
                            "@glib:name": "GDK_DRAG_LEAVE",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkevents.h",
                                "@line": "253",
                                "#text": "the mouse has left the window while a drag is in progress."
                            }
                        },
                        {
                            "@name": "drag_motion",
                            "@value": "24",
                            "@c:identifier": "GDK_DRAG_MOTION",
                            "@glib:nick": "drag-motion",
                            "@glib:name": "GDK_DRAG_MOTION",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkevents.h",
                                "@line": "254",
                                "#text": "the mouse has moved in the window while a drag is in\n  progress."
                            }
                        },
                        {
                            "@name": "drag_status",
                            "@value": "25",
                            "@c:identifier": "GDK_DRAG_STATUS",
                            "@glib:nick": "drag-status",
                            "@glib:name": "GDK_DRAG_STATUS",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkevents.h",
                                "@line": "256",
                                "#text": "the status of the drag operation initiated by the window\n  has changed."
                            }
                        },
                        {
                            "@name": "drop_start",
                            "@value": "26",
                            "@c:identifier": "GDK_DROP_START",
                            "@glib:nick": "drop-start",
                            "@glib:name": "GDK_DROP_START",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkevents.h",
                                "@line": "258",
                                "#text": "a drop operation onto the window has started."
                            }
                        },
                        {
                            "@name": "drop_finished",
                            "@value": "27",
                            "@c:identifier": "GDK_DROP_FINISHED",
                            "@glib:nick": "drop-finished",
                            "@glib:name": "GDK_DROP_FINISHED",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkevents.h",
                                "@line": "259",
                                "#text": "the drop operation initiated by the window has completed."
                            }
                        },
                        {
                            "@name": "client_event",
                            "@value": "28",
                            "@c:identifier": "GDK_CLIENT_EVENT",
                            "@glib:nick": "client-event",
                            "@glib:name": "GDK_CLIENT_EVENT",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkevents.h",
                                "@line": "260",
                                "#text": "a message has been received from another application."
                            }
                        },
                        {
                            "@name": "visibility_notify",
                            "@value": "29",
                            "@c:identifier": "GDK_VISIBILITY_NOTIFY",
                            "@glib:nick": "visibility-notify",
                            "@glib:name": "GDK_VISIBILITY_NOTIFY",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkevents.h",
                                "@line": "261",
                                "#text": "the window visibility status has changed."
                            }
                        },
                        {
                            "@name": "scroll",
                            "@value": "31",
                            "@c:identifier": "GDK_SCROLL",
                            "@glib:nick": "scroll",
                            "@glib:name": "GDK_SCROLL",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkevents.h",
                                "@line": "262",
                                "#text": "the scroll wheel was turned"
                            }
                        },
                        {
                            "@name": "window_state",
                            "@value": "32",
                            "@c:identifier": "GDK_WINDOW_STATE",
                            "@glib:nick": "window-state",
                            "@glib:name": "GDK_WINDOW_STATE",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkevents.h",
                                "@line": "263",
                                "#text": "the state of a window has changed. See #GdkWindowState\n  for the possible window states"
                            }
                        },
                        {
                            "@name": "setting",
                            "@value": "33",
                            "@c:identifier": "GDK_SETTING",
                            "@glib:nick": "setting",
                            "@glib:name": "GDK_SETTING",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkevents.h",
                                "@line": "265",
                                "#text": "a setting has been modified."
                            }
                        },
                        {
                            "@name": "owner_change",
                            "@value": "34",
                            "@c:identifier": "GDK_OWNER_CHANGE",
                            "@glib:nick": "owner-change",
                            "@glib:name": "GDK_OWNER_CHANGE",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkevents.h",
                                "@line": "266",
                                "#text": "the owner of a selection has changed. This event type\n  was added in 2.6"
                            }
                        },
                        {
                            "@name": "grab_broken",
                            "@value": "35",
                            "@c:identifier": "GDK_GRAB_BROKEN",
                            "@glib:nick": "grab-broken",
                            "@glib:name": "GDK_GRAB_BROKEN",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkevents.h",
                                "@line": "268",
                                "#text": "a pointer or keyboard grab was broken. This event type\n  was added in 2.8."
                            }
                        },
                        {
                            "@name": "damage",
                            "@value": "36",
                            "@c:identifier": "GDK_DAMAGE",
                            "@glib:nick": "damage",
                            "@glib:name": "GDK_DAMAGE",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkevents.h",
                                "@line": "270",
                                "#text": "the content of the window has been changed. This event type\n  was added in 2.14."
                            }
                        },
                        {
                            "@name": "touch_begin",
                            "@value": "37",
                            "@c:identifier": "GDK_TOUCH_BEGIN",
                            "@glib:nick": "touch-begin",
                            "@glib:name": "GDK_TOUCH_BEGIN",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkevents.h",
                                "@line": "272",
                                "#text": "A new touch event sequence has just started. This event\n  type was added in 3.4."
                            }
                        },
                        {
                            "@name": "touch_update",
                            "@value": "38",
                            "@c:identifier": "GDK_TOUCH_UPDATE",
                            "@glib:nick": "touch-update",
                            "@glib:name": "GDK_TOUCH_UPDATE",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkevents.h",
                                "@line": "274",
                                "#text": "A touch event sequence has been updated. This event type\n  was added in 3.4."
                            }
                        },
                        {
                            "@name": "touch_end",
                            "@value": "39",
                            "@c:identifier": "GDK_TOUCH_END",
                            "@glib:nick": "touch-end",
                            "@glib:name": "GDK_TOUCH_END",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkevents.h",
                                "@line": "276",
                                "#text": "A touch event sequence has finished. This event type\n  was added in 3.4."
                            }
                        },
                        {
                            "@name": "touch_cancel",
                            "@value": "40",
                            "@c:identifier": "GDK_TOUCH_CANCEL",
                            "@glib:nick": "touch-cancel",
                            "@glib:name": "GDK_TOUCH_CANCEL",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkevents.h",
                                "@line": "278",
                                "#text": "A touch event sequence has been canceled. This event type\n  was added in 3.4."
                            }
                        },
                        {
                            "@name": "touchpad_swipe",
                            "@value": "41",
                            "@c:identifier": "GDK_TOUCHPAD_SWIPE",
                            "@glib:nick": "touchpad-swipe",
                            "@glib:name": "GDK_TOUCHPAD_SWIPE",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkevents.h",
                                "@line": "280",
                                "#text": "A touchpad swipe gesture event, the current state\n  is determined by its phase field. This event type was added in 3.18."
                            }
                        },
                        {
                            "@name": "touchpad_pinch",
                            "@value": "42",
                            "@c:identifier": "GDK_TOUCHPAD_PINCH",
                            "@glib:nick": "touchpad-pinch",
                            "@glib:name": "GDK_TOUCHPAD_PINCH",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkevents.h",
                                "@line": "282",
                                "#text": "A touchpad pinch gesture event, the current state\n  is determined by its phase field. This event type was added in 3.18."
                            }
                        },
                        {
                            "@name": "pad_button_press",
                            "@value": "43",
                            "@c:identifier": "GDK_PAD_BUTTON_PRESS",
                            "@glib:nick": "pad-button-press",
                            "@glib:name": "GDK_PAD_BUTTON_PRESS",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkevents.h",
                                "@line": "284",
                                "#text": "A tablet pad button press event. This event type\n  was added in 3.22."
                            }
                        },
                        {
                            "@name": "pad_button_release",
                            "@value": "44",
                            "@c:identifier": "GDK_PAD_BUTTON_RELEASE",
                            "@glib:nick": "pad-button-release",
                            "@glib:name": "GDK_PAD_BUTTON_RELEASE",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkevents.h",
                                "@line": "286",
                                "#text": "A tablet pad button release event. This event type\n  was added in 3.22."
                            }
                        },
                        {
                            "@name": "pad_ring",
                            "@value": "45",
                            "@c:identifier": "GDK_PAD_RING",
                            "@glib:nick": "pad-ring",
                            "@glib:name": "GDK_PAD_RING",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkevents.h",
                                "@line": "288",
                                "#text": "A tablet pad axis event from a \"ring\". This event type was\n  added in 3.22."
                            }
                        },
                        {
                            "@name": "pad_strip",
                            "@value": "46",
                            "@c:identifier": "GDK_PAD_STRIP",
                            "@glib:nick": "pad-strip",
                            "@glib:name": "GDK_PAD_STRIP",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkevents.h",
                                "@line": "290",
                                "#text": "A tablet pad axis event from a \"strip\". This event type was\n  added in 3.22."
                            }
                        },
                        {
                            "@name": "pad_group_mode",
                            "@value": "47",
                            "@c:identifier": "GDK_PAD_GROUP_MODE",
                            "@glib:nick": "pad-group-mode",
                            "@glib:name": "GDK_PAD_GROUP_MODE",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkevents.h",
                                "@line": "292",
                                "#text": "A tablet pad group mode change. This event type was\n  added in 3.22."
                            }
                        },
                        {
                            "@name": "event_last",
                            "@value": "48",
                            "@c:identifier": "GDK_EVENT_LAST",
                            "@glib:nick": "event-last",
                            "@glib:name": "GDK_EVENT_LAST",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkevents.h",
                                "@line": "294",
                                "#text": "marks the end of the GdkEventType enumeration. Added in 2.18"
                            }
                        }
                    ]
                },
                {
                    "@name": "FilterReturn",
                    "@glib:type-name": "GdkFilterReturn",
                    "@glib:get-type": "gdk_filter_return_get_type",
                    "@c:type": "GdkFilterReturn",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "gdk/gdkevents.h",
                        "@line": "177",
                        "#text": "Specifies the result of applying a #GdkFilterFunc to a native event."
                    },
                    "member": [
                        {
                            "@name": "continue",
                            "@value": "0",
                            "@c:identifier": "GDK_FILTER_CONTINUE",
                            "@glib:nick": "continue",
                            "@glib:name": "GDK_FILTER_CONTINUE",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkevents.h",
                                "@line": "179",
                                "#text": "event not handled, continue processing."
                            }
                        },
                        {
                            "@name": "translate",
                            "@value": "1",
                            "@c:identifier": "GDK_FILTER_TRANSLATE",
                            "@glib:nick": "translate",
                            "@glib:name": "GDK_FILTER_TRANSLATE",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkevents.h",
                                "@line": "180",
                                "#text": "native event translated into a GDK event and stored\n in the `event` structure that was passed in."
                            }
                        },
                        {
                            "@name": "remove",
                            "@value": "2",
                            "@c:identifier": "GDK_FILTER_REMOVE",
                            "@glib:nick": "remove",
                            "@glib:name": "GDK_FILTER_REMOVE",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkevents.h",
                                "@line": "182",
                                "#text": "event handled, terminate processing."
                            }
                        }
                    ]
                },
                {
                    "@name": "FullscreenMode",
                    "@version": "3.8",
                    "@glib:type-name": "GdkFullscreenMode",
                    "@glib:get-type": "gdk_fullscreen_mode_get_type",
                    "@c:type": "GdkFullscreenMode",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "gdk/gdkwindow.h",
                        "@line": "317",
                        "#text": "Indicates which monitor (in a multi-head setup) a window should span over\nwhen in fullscreen mode."
                    },
                    "member": [
                        {
                            "@name": "current_monitor",
                            "@value": "0",
                            "@c:identifier": "GDK_FULLSCREEN_ON_CURRENT_MONITOR",
                            "@glib:nick": "current-monitor",
                            "@glib:name": "GDK_FULLSCREEN_ON_CURRENT_MONITOR",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkwindow.h",
                                "@line": "319",
                                "#text": "Fullscreen on current monitor only."
                            }
                        },
                        {
                            "@name": "all_monitors",
                            "@value": "1",
                            "@c:identifier": "GDK_FULLSCREEN_ON_ALL_MONITORS",
                            "@glib:nick": "all-monitors",
                            "@glib:name": "GDK_FULLSCREEN_ON_ALL_MONITORS",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkwindow.h",
                                "@line": "320",
                                "#text": "Span across all monitors when fullscreen."
                            }
                        }
                    ]
                },
                {
                    "@name": "GLError",
                    "@version": "3.16",
                    "@glib:type-name": "GdkGLError",
                    "@glib:get-type": "gdk_gl_error_get_type",
                    "@c:type": "GdkGLError",
                    "@glib:error-domain": "gdk-gl-error-quark",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "gdk/gdktypes.h",
                        "@line": "470",
                        "#text": "Error enumeration for #GdkGLContext."
                    },
                    "member": [
                        {
                            "@name": "not_available",
                            "@value": "0",
                            "@c:identifier": "GDK_GL_ERROR_NOT_AVAILABLE",
                            "@glib:nick": "not-available",
                            "@glib:name": "GDK_GL_ERROR_NOT_AVAILABLE",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdktypes.h",
                                "@line": "472",
                                "#text": "OpenGL support is not available"
                            }
                        },
                        {
                            "@name": "unsupported_format",
                            "@value": "1",
                            "@c:identifier": "GDK_GL_ERROR_UNSUPPORTED_FORMAT",
                            "@glib:nick": "unsupported-format",
                            "@glib:name": "GDK_GL_ERROR_UNSUPPORTED_FORMAT",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdktypes.h",
                                "@line": "473",
                                "#text": "The requested visual format is not supported"
                            }
                        },
                        {
                            "@name": "unsupported_profile",
                            "@value": "2",
                            "@c:identifier": "GDK_GL_ERROR_UNSUPPORTED_PROFILE",
                            "@glib:nick": "unsupported-profile",
                            "@glib:name": "GDK_GL_ERROR_UNSUPPORTED_PROFILE",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdktypes.h",
                                "@line": "474",
                                "#text": "The requested profile is not supported"
                            }
                        }
                    ],
                    "function": {
                        "@name": "quark",
                        "@c:identifier": "gdk_gl_error_quark",
                        "return-value": {
                            "@transfer-ownership": "none",
                            "type": {
                                "@name": "GLib.Quark",
                                "@c:type": "GQuark"
                            }
                        }
                    }
                },
                {
                    "@name": "GrabOwnership",
                    "@glib:type-name": "GdkGrabOwnership",
                    "@glib:get-type": "gdk_grab_ownership_get_type",
                    "@c:type": "GdkGrabOwnership",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "gdk/gdktypes.h",
                        "@line": "355",
                        "#text": "Defines how device grabs interact with other devices."
                    },
                    "member": [
                        {
                            "@name": "none",
                            "@value": "0",
                            "@c:identifier": "GDK_OWNERSHIP_NONE",
                            "@glib:nick": "none",
                            "@glib:name": "GDK_OWNERSHIP_NONE",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdktypes.h",
                                "@line": "357",
                                "#text": "All other devices\u2019 events are allowed."
                            }
                        },
                        {
                            "@name": "window",
                            "@value": "1",
                            "@c:identifier": "GDK_OWNERSHIP_WINDOW",
                            "@glib:nick": "window",
                            "@glib:name": "GDK_OWNERSHIP_WINDOW",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdktypes.h",
                                "@line": "358",
                                "#text": "Other devices\u2019 events are blocked for the grab window."
                            }
                        },
                        {
                            "@name": "application",
                            "@value": "2",
                            "@c:identifier": "GDK_OWNERSHIP_APPLICATION",
                            "@glib:nick": "application",
                            "@glib:name": "GDK_OWNERSHIP_APPLICATION",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdktypes.h",
                                "@line": "359",
                                "#text": "Other devices\u2019 events are blocked for the whole application."
                            }
                        }
                    ]
                },
                {
                    "@name": "GrabStatus",
                    "@glib:type-name": "GdkGrabStatus",
                    "@glib:get-type": "gdk_grab_status_get_type",
                    "@c:type": "GdkGrabStatus",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "gdk/gdktypes.h",
                        "@line": "331",
                        "#text": "Returned by gdk_device_grab(), gdk_pointer_grab() and gdk_keyboard_grab() to\nindicate success or the reason for the failure of the grab attempt."
                    },
                    "member": [
                        {
                            "@name": "success",
                            "@value": "0",
                            "@c:identifier": "GDK_GRAB_SUCCESS",
                            "@glib:nick": "success",
                            "@glib:name": "GDK_GRAB_SUCCESS",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdktypes.h",
                                "@line": "333",
                                "#text": "the resource was successfully grabbed."
                            }
                        },
                        {
                            "@name": "already_grabbed",
                            "@value": "1",
                            "@c:identifier": "GDK_GRAB_ALREADY_GRABBED",
                            "@glib:nick": "already-grabbed",
                            "@glib:name": "GDK_GRAB_ALREADY_GRABBED",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdktypes.h",
                                "@line": "334",
                                "#text": "the resource is actively grabbed by another client."
                            }
                        },
                        {
                            "@name": "invalid_time",
                            "@value": "2",
                            "@c:identifier": "GDK_GRAB_INVALID_TIME",
                            "@glib:nick": "invalid-time",
                            "@glib:name": "GDK_GRAB_INVALID_TIME",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdktypes.h",
                                "@line": "335",
                                "#text": "the resource was grabbed more recently than the\n specified time."
                            }
                        },
                        {
                            "@name": "not_viewable",
                            "@value": "3",
                            "@c:identifier": "GDK_GRAB_NOT_VIEWABLE",
                            "@glib:nick": "not-viewable",
                            "@glib:name": "GDK_GRAB_NOT_VIEWABLE",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdktypes.h",
                                "@line": "337",
                                "#text": "the grab window or the @confine_to window are not\n viewable."
                            }
                        },
                        {
                            "@name": "frozen",
                            "@value": "4",
                            "@c:identifier": "GDK_GRAB_FROZEN",
                            "@glib:nick": "frozen",
                            "@glib:name": "GDK_GRAB_FROZEN",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdktypes.h",
                                "@line": "339",
                                "#text": "the resource is frozen by an active grab of another client."
                            }
                        },
                        {
                            "@name": "failed",
                            "@value": "5",
                            "@c:identifier": "GDK_GRAB_FAILED",
                            "@glib:nick": "failed",
                            "@glib:name": "GDK_GRAB_FAILED",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdktypes.h",
                                "@line": "340",
                                "#text": "the grab failed for some other reason. Since 3.16"
                            }
                        }
                    ]
                },
                {
                    "@name": "Gravity",
                    "@glib:type-name": "GdkGravity",
                    "@glib:get-type": "gdk_gravity_get_type",
                    "@c:type": "GdkGravity",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "gdk/gdkwindow.h",
                        "@line": "214",
                        "#text": "Defines the reference point of a window and the meaning of coordinates\npassed to gtk_window_move(). See gtk_window_move() and the \"implementation\nnotes\" section of the\n[Extended Window Manager Hints](http://www.freedesktop.org/Standards/wm-spec)\nspecification for more details."
                    },
                    "member": [
                        {
                            "@name": "north_west",
                            "@value": "1",
                            "@c:identifier": "GDK_GRAVITY_NORTH_WEST",
                            "@glib:nick": "north-west",
                            "@glib:name": "GDK_GRAVITY_NORTH_WEST",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkwindow.h",
                                "@line": "216",
                                "#text": "the reference point is at the top left corner."
                            }
                        },
                        {
                            "@name": "north",
                            "@value": "2",
                            "@c:identifier": "GDK_GRAVITY_NORTH",
                            "@glib:nick": "north",
                            "@glib:name": "GDK_GRAVITY_NORTH",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkwindow.h",
                                "@line": "217",
                                "#text": "the reference point is in the middle of the top edge."
                            }
                        },
                        {
                            "@name": "north_east",
                            "@value": "3",
                            "@c:identifier": "GDK_GRAVITY_NORTH_EAST",
                            "@glib:nick": "north-east",
                            "@glib:name": "GDK_GRAVITY_NORTH_EAST",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkwindow.h",
                                "@line": "218",
                                "#text": "the reference point is at the top right corner."
                            }
                        },
                        {
                            "@name": "west",
                            "@value": "4",
                            "@c:identifier": "GDK_GRAVITY_WEST",
                            "@glib:nick": "west",
                            "@glib:name": "GDK_GRAVITY_WEST",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkwindow.h",
                                "@line": "219",
                                "#text": "the reference point is at the middle of the left edge."
                            }
                        },
                        {
                            "@name": "center",
                            "@value": "5",
                            "@c:identifier": "GDK_GRAVITY_CENTER",
                            "@glib:nick": "center",
                            "@glib:name": "GDK_GRAVITY_CENTER",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkwindow.h",
                                "@line": "220",
                                "#text": "the reference point is at the center of the window."
                            }
                        },
                        {
                            "@name": "east",
                            "@value": "6",
                            "@c:identifier": "GDK_GRAVITY_EAST",
                            "@glib:nick": "east",
                            "@glib:name": "GDK_GRAVITY_EAST",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkwindow.h",
                                "@line": "221",
                                "#text": "the reference point is at the middle of the right edge."
                            }
                        },
                        {
                            "@name": "south_west",
                            "@value": "7",
                            "@c:identifier": "GDK_GRAVITY_SOUTH_WEST",
                            "@glib:nick": "south-west",
                            "@glib:name": "GDK_GRAVITY_SOUTH_WEST",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkwindow.h",
                                "@line": "222",
                                "#text": "the reference point is at the lower left corner."
                            }
                        },
                        {
                            "@name": "south",
                            "@value": "8",
                            "@c:identifier": "GDK_GRAVITY_SOUTH",
                            "@glib:nick": "south",
                            "@glib:name": "GDK_GRAVITY_SOUTH",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkwindow.h",
                                "@line": "223",
                                "#text": "the reference point is at the middle of the lower edge."
                            }
                        },
                        {
                            "@name": "south_east",
                            "@value": "9",
                            "@c:identifier": "GDK_GRAVITY_SOUTH_EAST",
                            "@glib:nick": "south-east",
                            "@glib:name": "GDK_GRAVITY_SOUTH_EAST",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkwindow.h",
                                "@line": "224",
                                "#text": "the reference point is at the lower right corner."
                            }
                        },
                        {
                            "@name": "static",
                            "@value": "10",
                            "@c:identifier": "GDK_GRAVITY_STATIC",
                            "@glib:nick": "static",
                            "@glib:name": "GDK_GRAVITY_STATIC",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkwindow.h",
                                "@line": "225",
                                "#text": "the reference point is at the top left corner of the\n window itself, ignoring window manager decorations."
                            }
                        }
                    ]
                },
                {
                    "@name": "InputMode",
                    "@glib:type-name": "GdkInputMode",
                    "@glib:get-type": "gdk_input_mode_get_type",
                    "@c:type": "GdkInputMode",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "gdk/gdkdevice.h",
                        "@line": "71",
                        "#text": "An enumeration that describes the mode of an input device."
                    },
                    "member": [
                        {
                            "@name": "disabled",
                            "@value": "0",
                            "@c:identifier": "GDK_MODE_DISABLED",
                            "@glib:nick": "disabled",
                            "@glib:name": "GDK_MODE_DISABLED",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkdevice.h",
                                "@line": "73",
                                "#text": "the device is disabled and will not report any events."
                            }
                        },
                        {
                            "@name": "screen",
                            "@value": "1",
                            "@c:identifier": "GDK_MODE_SCREEN",
                            "@glib:nick": "screen",
                            "@glib:name": "GDK_MODE_SCREEN",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkdevice.h",
                                "@line": "74",
                                "#text": "the device is enabled. The device\u2019s coordinate space\n                  maps to the entire screen."
                            }
                        },
                        {
                            "@name": "window",
                            "@value": "2",
                            "@c:identifier": "GDK_MODE_WINDOW",
                            "@glib:nick": "window",
                            "@glib:name": "GDK_MODE_WINDOW",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkdevice.h",
                                "@line": "76",
                                "#text": "the device is enabled. The device\u2019s coordinate space\n                  is mapped to a single window. The manner in which this window\n                  is chosen is undefined, but it will typically be the same\n                  way in which the focus window for key events is determined."
                            }
                        }
                    ]
                },
                {
                    "@name": "InputSource",
                    "@glib:type-name": "GdkInputSource",
                    "@glib:get-type": "gdk_input_source_get_type",
                    "@c:type": "GdkInputSource",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "gdk/gdkdevice.h",
                        "@line": "37",
                        "#text": "An enumeration describing the type of an input device in general terms."
                    },
                    "member": [
                        {
                            "@name": "mouse",
                            "@value": "0",
                            "@c:identifier": "GDK_SOURCE_MOUSE",
                            "@glib:nick": "mouse",
                            "@glib:name": "GDK_SOURCE_MOUSE",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkdevice.h",
                                "@line": "39",
                                "#text": "the device is a mouse. (This will be reported for the core\n                   pointer, even if it is something else, such as a trackball.)"
                            }
                        },
                        {
                            "@name": "pen",
                            "@value": "1",
                            "@c:identifier": "GDK_SOURCE_PEN",
                            "@glib:nick": "pen",
                            "@glib:name": "GDK_SOURCE_PEN",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkdevice.h",
                                "@line": "41",
                                "#text": "the device is a stylus of a graphics tablet or similar device."
                            }
                        },
                        {
                            "@name": "eraser",
                            "@value": "2",
                            "@c:identifier": "GDK_SOURCE_ERASER",
                            "@glib:nick": "eraser",
                            "@glib:name": "GDK_SOURCE_ERASER",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkdevice.h",
                                "@line": "42",
                                "#text": "the device is an eraser. Typically, this would be the other end\n                    of a stylus on a graphics tablet."
                            }
                        },
                        {
                            "@name": "cursor",
                            "@value": "3",
                            "@c:identifier": "GDK_SOURCE_CURSOR",
                            "@glib:nick": "cursor",
                            "@glib:name": "GDK_SOURCE_CURSOR",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkdevice.h",
                                "@line": "44",
                                "#text": "the device is a graphics tablet \u201cpuck\u201d or similar device."
                            }
                        },
                        {
                            "@name": "keyboard",
                            "@value": "4",
                            "@c:identifier": "GDK_SOURCE_KEYBOARD",
                            "@glib:nick": "keyboard",
                            "@glib:name": "GDK_SOURCE_KEYBOARD",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkdevice.h",
                                "@line": "45",
                                "#text": "the device is a keyboard."
                            }
                        },
                        {
                            "@name": "touchscreen",
                            "@value": "5",
                            "@c:identifier": "GDK_SOURCE_TOUCHSCREEN",
                            "@glib:nick": "touchscreen",
                            "@glib:name": "GDK_SOURCE_TOUCHSCREEN",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkdevice.h",
                                "@line": "46",
                                "#text": "the device is a direct-input touch device, such\n    as a touchscreen or tablet. This device type has been added in 3.4."
                            }
                        },
                        {
                            "@name": "touchpad",
                            "@value": "6",
                            "@c:identifier": "GDK_SOURCE_TOUCHPAD",
                            "@glib:nick": "touchpad",
                            "@glib:name": "GDK_SOURCE_TOUCHPAD",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkdevice.h",
                                "@line": "48",
                                "#text": "the device is an indirect touch device, such\n    as a touchpad. This device type has been added in 3.4."
                            }
                        },
                        {
                            "@name": "trackpoint",
                            "@value": "7",
                            "@c:identifier": "GDK_SOURCE_TRACKPOINT",
                            "@glib:nick": "trackpoint",
                            "@glib:name": "GDK_SOURCE_TRACKPOINT",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkdevice.h",
                                "@line": "50",
                                "#text": "the device is a trackpoint. This device type has been\n    added in 3.22"
                            }
                        },
                        {
                            "@name": "tablet_pad",
                            "@value": "8",
                            "@c:identifier": "GDK_SOURCE_TABLET_PAD",
                            "@glib:nick": "tablet-pad",
                            "@glib:name": "GDK_SOURCE_TABLET_PAD",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkdevice.h",
                                "@line": "52",
                                "#text": "the device is a \"pad\", a collection of buttons,\n    rings and strips found in drawing tablets. This device type has been\n    added in 3.22."
                            }
                        }
                    ]
                },
                {
                    "@name": "ModifierIntent",
                    "@version": "3.4",
                    "@glib:type-name": "GdkModifierIntent",
                    "@glib:get-type": "gdk_modifier_intent_get_type",
                    "@c:type": "GdkModifierIntent",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "gdk/gdktypes.h",
                        "@line": "279",
                        "#text": "This enum is used with gdk_keymap_get_modifier_mask()\nin order to determine what modifiers the\ncurrently used windowing system backend uses for particular\npurposes. For example, on X11/Windows, the Control key is used for\ninvoking menu shortcuts (accelerators), whereas on Apple computers\nit\u2019s the Command key (which correspond to %GDK_CONTROL_MASK and\n%GDK_MOD2_MASK, respectively)."
                    },
                    "member": [
                        {
                            "@name": "primary_accelerator",
                            "@value": "0",
                            "@c:identifier": "GDK_MODIFIER_INTENT_PRIMARY_ACCELERATOR",
                            "@glib:nick": "primary-accelerator",
                            "@glib:name": "GDK_MODIFIER_INTENT_PRIMARY_ACCELERATOR",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdktypes.h",
                                "@line": "281",
                                "#text": "the primary modifier used to invoke\n menu accelerators."
                            }
                        },
                        {
                            "@name": "context_menu",
                            "@value": "1",
                            "@c:identifier": "GDK_MODIFIER_INTENT_CONTEXT_MENU",
                            "@glib:nick": "context-menu",
                            "@glib:name": "GDK_MODIFIER_INTENT_CONTEXT_MENU",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdktypes.h",
                                "@line": "283",
                                "#text": "the modifier used to invoke context menus.\n Note that mouse button 3 always triggers context menus. When this modifier\n is not 0, it additionally triggers context menus when used with mouse button 1."
                            }
                        },
                        {
                            "@name": "extend_selection",
                            "@value": "2",
                            "@c:identifier": "GDK_MODIFIER_INTENT_EXTEND_SELECTION",
                            "@glib:nick": "extend-selection",
                            "@glib:name": "GDK_MODIFIER_INTENT_EXTEND_SELECTION",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdktypes.h",
                                "@line": "286",
                                "#text": "the modifier used to extend selections\n using `modifier`-click or `modifier`-cursor-key"
                            }
                        },
                        {
                            "@name": "modify_selection",
                            "@value": "3",
                            "@c:identifier": "GDK_MODIFIER_INTENT_MODIFY_SELECTION",
                            "@glib:nick": "modify-selection",
                            "@glib:name": "GDK_MODIFIER_INTENT_MODIFY_SELECTION",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdktypes.h",
                                "@line": "288",
                                "#text": "the modifier used to modify selections,\n which in most cases means toggling the clicked item into or out of the selection."
                            }
                        },
                        {
                            "@name": "no_text_input",
                            "@value": "4",
                            "@c:identifier": "GDK_MODIFIER_INTENT_NO_TEXT_INPUT",
                            "@glib:nick": "no-text-input",
                            "@glib:name": "GDK_MODIFIER_INTENT_NO_TEXT_INPUT",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdktypes.h",
                                "@line": "290",
                                "#text": "when any of these modifiers is pressed, the\n key event cannot produce a symbol directly. This is meant to be used for\n input methods, and for use cases like typeahead search."
                            }
                        },
                        {
                            "@name": "shift_group",
                            "@value": "5",
                            "@c:identifier": "GDK_MODIFIER_INTENT_SHIFT_GROUP",
                            "@glib:nick": "shift-group",
                            "@glib:name": "GDK_MODIFIER_INTENT_SHIFT_GROUP",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdktypes.h",
                                "@line": "293",
                                "#text": "the modifier that switches between keyboard\n groups (AltGr on X11/Windows and Option/Alt on OS X)."
                            }
                        },
                        {
                            "@name": "default_mod_mask",
                            "@value": "6",
                            "@c:identifier": "GDK_MODIFIER_INTENT_DEFAULT_MOD_MASK",
                            "@glib:nick": "default-mod-mask",
                            "@glib:name": "GDK_MODIFIER_INTENT_DEFAULT_MOD_MASK",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdktypes.h",
                                "@line": "295",
                                "#text": "The set of modifier masks accepted\nas modifiers in accelerators. Needed because Command is mapped to MOD2 on\nOSX, which is widely used, but on X11 MOD2 is NumLock and using that for a\nmod key is problematic at best.\nRef: https://bugzilla.gnome.org/show_bug.cgi?id=736125."
                            }
                        }
                    ]
                },
                {
                    "@name": "NotifyType",
                    "@glib:type-name": "GdkNotifyType",
                    "@glib:get-type": "gdk_notify_type_get_type",
                    "@c:type": "GdkNotifyType",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "gdk/gdkevents.h",
                        "@line": "436",
                        "#text": "Specifies the kind of crossing for #GdkEventCrossing.\n\nSee the X11 protocol specification of LeaveNotify for\nfull details of crossing event generation."
                    },
                    "member": [
                        {
                            "@name": "ancestor",
                            "@value": "0",
                            "@c:identifier": "GDK_NOTIFY_ANCESTOR",
                            "@glib:nick": "ancestor",
                            "@glib:name": "GDK_NOTIFY_ANCESTOR",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkevents.h",
                                "@line": "438",
                                "#text": "the window is entered from an ancestor or\n  left towards an ancestor."
                            }
                        },
                        {
                            "@name": "virtual",
                            "@value": "1",
                            "@c:identifier": "GDK_NOTIFY_VIRTUAL",
                            "@glib:nick": "virtual",
                            "@glib:name": "GDK_NOTIFY_VIRTUAL",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkevents.h",
                                "@line": "440",
                                "#text": "the pointer moves between an ancestor and an\n  inferior of the window."
                            }
                        },
                        {
                            "@name": "inferior",
                            "@value": "2",
                            "@c:identifier": "GDK_NOTIFY_INFERIOR",
                            "@glib:nick": "inferior",
                            "@glib:name": "GDK_NOTIFY_INFERIOR",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkevents.h",
                                "@line": "442",
                                "#text": "the window is entered from an inferior or\n  left towards an inferior."
                            }
                        },
                        {
                            "@name": "nonlinear",
                            "@value": "3",
                            "@c:identifier": "GDK_NOTIFY_NONLINEAR",
                            "@glib:nick": "nonlinear",
                            "@glib:name": "GDK_NOTIFY_NONLINEAR",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkevents.h",
                                "@line": "444",
                                "#text": "the window is entered from or left towards\n  a window which is neither an ancestor nor an inferior."
                            }
                        },
                        {
                            "@name": "nonlinear_virtual",
                            "@value": "4",
                            "@c:identifier": "GDK_NOTIFY_NONLINEAR_VIRTUAL",
                            "@glib:nick": "nonlinear-virtual",
                            "@glib:name": "GDK_NOTIFY_NONLINEAR_VIRTUAL",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkevents.h",
                                "@line": "446",
                                "#text": "the pointer moves between two windows\n  which are not ancestors of each other and the window is part of\n  the ancestor chain between one of these windows and their least\n  common ancestor."
                            }
                        },
                        {
                            "@name": "unknown",
                            "@value": "5",
                            "@c:identifier": "GDK_NOTIFY_UNKNOWN",
                            "@glib:nick": "unknown",
                            "@glib:name": "GDK_NOTIFY_UNKNOWN",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkevents.h",
                                "@line": "450",
                                "#text": "an unknown type of enter/leave event occurred."
                            }
                        }
                    ]
                },
                {
                    "@name": "OwnerChange",
                    "@glib:type-name": "GdkOwnerChange",
                    "@glib:get-type": "gdk_owner_change_get_type",
                    "@c:type": "GdkOwnerChange",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "gdk/gdkevents.h",
                        "@line": "573",
                        "#text": "Specifies why a selection ownership was changed."
                    },
                    "member": [
                        {
                            "@name": "new_owner",
                            "@value": "0",
                            "@c:identifier": "GDK_OWNER_CHANGE_NEW_OWNER",
                            "@glib:nick": "new-owner",
                            "@glib:name": "GDK_OWNER_CHANGE_NEW_OWNER",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkevents.h",
                                "@line": "575",
                                "#text": "some other app claimed the ownership"
                            }
                        },
                        {
                            "@name": "destroy",
                            "@value": "1",
                            "@c:identifier": "GDK_OWNER_CHANGE_DESTROY",
                            "@glib:nick": "destroy",
                            "@glib:name": "GDK_OWNER_CHANGE_DESTROY",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkevents.h",
                                "@line": "576",
                                "#text": "the window was destroyed"
                            }
                        },
                        {
                            "@name": "close",
                            "@value": "2",
                            "@c:identifier": "GDK_OWNER_CHANGE_CLOSE",
                            "@glib:nick": "close",
                            "@glib:name": "GDK_OWNER_CHANGE_CLOSE",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkevents.h",
                                "@line": "577",
                                "#text": "the client was closed"
                            }
                        }
                    ]
                },
                {
                    "@name": "PropMode",
                    "@glib:type-name": "GdkPropMode",
                    "@glib:get-type": "gdk_prop_mode_get_type",
                    "@c:type": "GdkPropMode",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "gdk/gdkproperty.h",
                        "@line": "38",
                        "#text": "Describes how existing data is combined with new data when\nusing gdk_property_change()."
                    },
                    "member": [
                        {
                            "@name": "replace",
                            "@value": "0",
                            "@c:identifier": "GDK_PROP_MODE_REPLACE",
                            "@glib:nick": "replace",
                            "@glib:name": "GDK_PROP_MODE_REPLACE",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkproperty.h",
                                "@line": "40",
                                "#text": "the new data replaces the existing data."
                            }
                        },
                        {
                            "@name": "prepend",
                            "@value": "1",
                            "@c:identifier": "GDK_PROP_MODE_PREPEND",
                            "@glib:nick": "prepend",
                            "@glib:name": "GDK_PROP_MODE_PREPEND",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkproperty.h",
                                "@line": "41",
                                "#text": "the new data is prepended to the existing data."
                            }
                        },
                        {
                            "@name": "append",
                            "@value": "2",
                            "@c:identifier": "GDK_PROP_MODE_APPEND",
                            "@glib:nick": "append",
                            "@glib:name": "GDK_PROP_MODE_APPEND",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkproperty.h",
                                "@line": "42",
                                "#text": "the new data is appended to the existing data."
                            }
                        }
                    ]
                },
                {
                    "@name": "PropertyState",
                    "@glib:type-name": "GdkPropertyState",
                    "@glib:get-type": "gdk_property_state_get_type",
                    "@c:type": "GdkPropertyState",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "gdk/gdkevents.h",
                        "@line": "499",
                        "#text": "Specifies the type of a property change for a #GdkEventProperty."
                    },
                    "member": [
                        {
                            "@name": "new_value",
                            "@value": "0",
                            "@c:identifier": "GDK_PROPERTY_NEW_VALUE",
                            "@glib:nick": "new-value",
                            "@glib:name": "GDK_PROPERTY_NEW_VALUE",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkevents.h",
                                "@line": "501",
                                "#text": "the property value was changed."
                            }
                        },
                        {
                            "@name": "delete",
                            "@value": "1",
                            "@c:identifier": "GDK_PROPERTY_DELETE",
                            "@glib:nick": "delete",
                            "@glib:name": "GDK_PROPERTY_DELETE",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkevents.h",
                                "@line": "502",
                                "#text": "the property was deleted."
                            }
                        }
                    ]
                },
                {
                    "@name": "ScrollDirection",
                    "@glib:type-name": "GdkScrollDirection",
                    "@glib:get-type": "gdk_scroll_direction_get_type",
                    "@c:type": "GdkScrollDirection",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "gdk/gdkevents.h",
                        "@line": "416",
                        "#text": "Specifies the direction for #GdkEventScroll."
                    },
                    "member": [
                        {
                            "@name": "up",
                            "@value": "0",
                            "@c:identifier": "GDK_SCROLL_UP",
                            "@glib:nick": "up",
                            "@glib:name": "GDK_SCROLL_UP",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkevents.h",
                                "@line": "418",
                                "#text": "the window is scrolled up."
                            }
                        },
                        {
                            "@name": "down",
                            "@value": "1",
                            "@c:identifier": "GDK_SCROLL_DOWN",
                            "@glib:nick": "down",
                            "@glib:name": "GDK_SCROLL_DOWN",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkevents.h",
                                "@line": "419",
                                "#text": "the window is scrolled down."
                            }
                        },
                        {
                            "@name": "left",
                            "@value": "2",
                            "@c:identifier": "GDK_SCROLL_LEFT",
                            "@glib:nick": "left",
                            "@glib:name": "GDK_SCROLL_LEFT",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkevents.h",
                                "@line": "420",
                                "#text": "the window is scrolled to the left."
                            }
                        },
                        {
                            "@name": "right",
                            "@value": "3",
                            "@c:identifier": "GDK_SCROLL_RIGHT",
                            "@glib:nick": "right",
                            "@glib:name": "GDK_SCROLL_RIGHT",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkevents.h",
                                "@line": "421",
                                "#text": "the window is scrolled to the right."
                            }
                        },
                        {
                            "@name": "smooth",
                            "@value": "4",
                            "@c:identifier": "GDK_SCROLL_SMOOTH",
                            "@glib:nick": "smooth",
                            "@glib:name": "GDK_SCROLL_SMOOTH",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkevents.h",
                                "@line": "422",
                                "#text": "the scrolling is determined by the delta values\n  in #GdkEventScroll. See gdk_event_get_scroll_deltas(). Since: 3.4"
                            }
                        }
                    ]
                },
                {
                    "@name": "SettingAction",
                    "@glib:type-name": "GdkSettingAction",
                    "@glib:get-type": "gdk_setting_action_get_type",
                    "@c:type": "GdkSettingAction",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "gdk/gdkevents.h",
                        "@line": "557",
                        "#text": "Specifies the kind of modification applied to a setting in a\n#GdkEventSetting."
                    },
                    "member": [
                        {
                            "@name": "new",
                            "@value": "0",
                            "@c:identifier": "GDK_SETTING_ACTION_NEW",
                            "@glib:nick": "new",
                            "@glib:name": "GDK_SETTING_ACTION_NEW",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkevents.h",
                                "@line": "559",
                                "#text": "a setting was added."
                            }
                        },
                        {
                            "@name": "changed",
                            "@value": "1",
                            "@c:identifier": "GDK_SETTING_ACTION_CHANGED",
                            "@glib:nick": "changed",
                            "@glib:name": "GDK_SETTING_ACTION_CHANGED",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkevents.h",
                                "@line": "560",
                                "#text": "a setting was changed."
                            }
                        },
                        {
                            "@name": "deleted",
                            "@value": "2",
                            "@c:identifier": "GDK_SETTING_ACTION_DELETED",
                            "@glib:nick": "deleted",
                            "@glib:name": "GDK_SETTING_ACTION_DELETED",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkevents.h",
                                "@line": "561",
                                "#text": "a setting was deleted."
                            }
                        }
                    ]
                },
                {
                    "@name": "Status",
                    "@glib:type-name": "GdkStatus",
                    "@glib:get-type": "gdk_status_get_type",
                    "@c:type": "GdkStatus",
                    "member": [
                        {
                            "@name": "ok",
                            "@value": "0",
                            "@c:identifier": "GDK_OK",
                            "@glib:nick": "ok",
                            "@glib:name": "GDK_OK"
                        },
                        {
                            "@name": "error",
                            "@value": "-1",
                            "@c:identifier": "GDK_ERROR",
                            "@glib:nick": "error",
                            "@glib:name": "GDK_ERROR"
                        },
                        {
                            "@name": "error_param",
                            "@value": "-2",
                            "@c:identifier": "GDK_ERROR_PARAM",
                            "@glib:nick": "error-param",
                            "@glib:name": "GDK_ERROR_PARAM"
                        },
                        {
                            "@name": "error_file",
                            "@value": "-3",
                            "@c:identifier": "GDK_ERROR_FILE",
                            "@glib:nick": "error-file",
                            "@glib:name": "GDK_ERROR_FILE"
                        },
                        {
                            "@name": "error_mem",
                            "@value": "-4",
                            "@c:identifier": "GDK_ERROR_MEM",
                            "@glib:nick": "error-mem",
                            "@glib:name": "GDK_ERROR_MEM"
                        }
                    ]
                },
                {
                    "@name": "SubpixelLayout",
                    "@version": "3.22",
                    "@glib:type-name": "GdkSubpixelLayout",
                    "@glib:get-type": "gdk_subpixel_layout_get_type",
                    "@c:type": "GdkSubpixelLayout",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "gdk/gdkmonitor.h",
                        "@line": "42",
                        "#text": "This enumeration describes how the red, green and blue components\nof physical pixels on an output device are laid out."
                    },
                    "member": [
                        {
                            "@name": "unknown",
                            "@value": "0",
                            "@c:identifier": "GDK_SUBPIXEL_LAYOUT_UNKNOWN",
                            "@glib:nick": "unknown",
                            "@glib:name": "GDK_SUBPIXEL_LAYOUT_UNKNOWN",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkmonitor.h",
                                "@line": "44",
                                "#text": "The layout is not known"
                            }
                        },
                        {
                            "@name": "none",
                            "@value": "1",
                            "@c:identifier": "GDK_SUBPIXEL_LAYOUT_NONE",
                            "@glib:nick": "none",
                            "@glib:name": "GDK_SUBPIXEL_LAYOUT_NONE",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkmonitor.h",
                                "@line": "45",
                                "#text": "Not organized in this way"
                            }
                        },
                        {
                            "@name": "horizontal_rgb",
                            "@value": "2",
                            "@c:identifier": "GDK_SUBPIXEL_LAYOUT_HORIZONTAL_RGB",
                            "@glib:nick": "horizontal-rgb",
                            "@glib:name": "GDK_SUBPIXEL_LAYOUT_HORIZONTAL_RGB",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkmonitor.h",
                                "@line": "46",
                                "#text": "The layout is horizontal, the order is RGB"
                            }
                        },
                        {
                            "@name": "horizontal_bgr",
                            "@value": "3",
                            "@c:identifier": "GDK_SUBPIXEL_LAYOUT_HORIZONTAL_BGR",
                            "@glib:nick": "horizontal-bgr",
                            "@glib:name": "GDK_SUBPIXEL_LAYOUT_HORIZONTAL_BGR",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkmonitor.h",
                                "@line": "47",
                                "#text": "The layout is horizontal, the order is BGR"
                            }
                        },
                        {
                            "@name": "vertical_rgb",
                            "@value": "4",
                            "@c:identifier": "GDK_SUBPIXEL_LAYOUT_VERTICAL_RGB",
                            "@glib:nick": "vertical-rgb",
                            "@glib:name": "GDK_SUBPIXEL_LAYOUT_VERTICAL_RGB",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkmonitor.h",
                                "@line": "48",
                                "#text": "The layout is vertical, the order is RGB"
                            }
                        },
                        {
                            "@name": "vertical_bgr",
                            "@value": "5",
                            "@c:identifier": "GDK_SUBPIXEL_LAYOUT_VERTICAL_BGR",
                            "@glib:nick": "vertical-bgr",
                            "@glib:name": "GDK_SUBPIXEL_LAYOUT_VERTICAL_BGR",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkmonitor.h",
                                "@line": "49",
                                "#text": "The layout is vertical, the order is BGR"
                            }
                        }
                    ]
                },
                {
                    "@name": "TouchpadGesturePhase",
                    "@glib:type-name": "GdkTouchpadGesturePhase",
                    "@glib:get-type": "gdk_touchpad_gesture_phase_get_type",
                    "@c:type": "GdkTouchpadGesturePhase",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "gdk/gdkevents.h",
                        "@line": "379",
                        "#text": "Specifies the current state of a touchpad gesture. All gestures are\nguaranteed to begin with an event with phase %GDK_TOUCHPAD_GESTURE_PHASE_BEGIN,\nfollowed by 0 or several events with phase %GDK_TOUCHPAD_GESTURE_PHASE_UPDATE.\n\nA finished gesture may have 2 possible outcomes, an event with phase\n%GDK_TOUCHPAD_GESTURE_PHASE_END will be emitted when the gesture is\nconsidered successful, this should be used as the hint to perform any\npermanent changes.\n\nCancelled gestures may be so for a variety of reasons, due to hardware\nor the compositor, or due to the gesture recognition layers hinting the\ngesture did not finish resolutely (eg. a 3rd finger being added during\na pinch gesture). In these cases, the last event will report the phase\n%GDK_TOUCHPAD_GESTURE_PHASE_CANCEL, this should be used as a hint\nto undo any visible/permanent changes that were done throughout the\nprogress of the gesture.\n\nSee also #GdkEventTouchpadSwipe and #GdkEventTouchpadPinch."
                    },
                    "member": [
                        {
                            "@name": "begin",
                            "@value": "0",
                            "@c:identifier": "GDK_TOUCHPAD_GESTURE_PHASE_BEGIN",
                            "@glib:nick": "begin",
                            "@glib:name": "GDK_TOUCHPAD_GESTURE_PHASE_BEGIN",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkevents.h",
                                "@line": "381",
                                "#text": "The gesture has begun."
                            }
                        },
                        {
                            "@name": "update",
                            "@value": "1",
                            "@c:identifier": "GDK_TOUCHPAD_GESTURE_PHASE_UPDATE",
                            "@glib:nick": "update",
                            "@glib:name": "GDK_TOUCHPAD_GESTURE_PHASE_UPDATE",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkevents.h",
                                "@line": "382",
                                "#text": "The gesture has been updated."
                            }
                        },
                        {
                            "@name": "end",
                            "@value": "2",
                            "@c:identifier": "GDK_TOUCHPAD_GESTURE_PHASE_END",
                            "@glib:nick": "end",
                            "@glib:name": "GDK_TOUCHPAD_GESTURE_PHASE_END",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkevents.h",
                                "@line": "383",
                                "#text": "The gesture was finished, changes\n  should be permanently applied."
                            }
                        },
                        {
                            "@name": "cancel",
                            "@value": "3",
                            "@c:identifier": "GDK_TOUCHPAD_GESTURE_PHASE_CANCEL",
                            "@glib:nick": "cancel",
                            "@glib:name": "GDK_TOUCHPAD_GESTURE_PHASE_CANCEL",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkevents.h",
                                "@line": "385",
                                "#text": "The gesture was cancelled, all\n  changes should be undone."
                            }
                        }
                    ]
                },
                {
                    "@name": "VisibilityState",
                    "@glib:type-name": "GdkVisibilityState",
                    "@glib:get-type": "gdk_visibility_state_get_type",
                    "@c:type": "GdkVisibilityState",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "gdk/gdkevents.h",
                        "@line": "364",
                        "#text": "Specifies the visiblity status of a window for a #GdkEventVisibility."
                    },
                    "member": [
                        {
                            "@name": "unobscured",
                            "@value": "0",
                            "@c:identifier": "GDK_VISIBILITY_UNOBSCURED",
                            "@glib:nick": "unobscured",
                            "@glib:name": "GDK_VISIBILITY_UNOBSCURED",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkevents.h",
                                "@line": "366",
                                "#text": "the window is completely visible."
                            }
                        },
                        {
                            "@name": "partial",
                            "@value": "1",
                            "@c:identifier": "GDK_VISIBILITY_PARTIAL",
                            "@glib:nick": "partial",
                            "@glib:name": "GDK_VISIBILITY_PARTIAL",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkevents.h",
                                "@line": "367",
                                "#text": "the window is partially visible."
                            }
                        },
                        {
                            "@name": "fully_obscured",
                            "@value": "2",
                            "@c:identifier": "GDK_VISIBILITY_FULLY_OBSCURED",
                            "@glib:nick": "fully-obscured",
                            "@glib:name": "GDK_VISIBILITY_FULLY_OBSCURED",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkevents.h",
                                "@line": "368",
                                "#text": "the window is not visible at all."
                            }
                        }
                    ]
                },
                {
                    "@name": "VisualType",
                    "@glib:type-name": "GdkVisualType",
                    "@glib:get-type": "gdk_visual_type_get_type",
                    "@c:type": "GdkVisualType",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "gdk/gdkvisual.h",
                        "@line": "41",
                        "#text": "A set of values that describe the manner in which the pixel values\nfor a visual are converted into RGB values for display."
                    },
                    "member": [
                        {
                            "@name": "static_gray",
                            "@value": "0",
                            "@c:identifier": "GDK_VISUAL_STATIC_GRAY",
                            "@glib:nick": "static-gray",
                            "@glib:name": "GDK_VISUAL_STATIC_GRAY",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkvisual.h",
                                "@line": "43",
                                "#text": "Each pixel value indexes a grayscale value\n    directly."
                            }
                        },
                        {
                            "@name": "grayscale",
                            "@value": "1",
                            "@c:identifier": "GDK_VISUAL_GRAYSCALE",
                            "@glib:nick": "grayscale",
                            "@glib:name": "GDK_VISUAL_GRAYSCALE",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkvisual.h",
                                "@line": "45",
                                "#text": "Each pixel is an index into a color map that\n    maps pixel values into grayscale values. The color map can be\n    changed by an application."
                            }
                        },
                        {
                            "@name": "static_color",
                            "@value": "2",
                            "@c:identifier": "GDK_VISUAL_STATIC_COLOR",
                            "@glib:nick": "static-color",
                            "@glib:name": "GDK_VISUAL_STATIC_COLOR",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkvisual.h",
                                "@line": "48",
                                "#text": "Each pixel value is an index into a predefined,\n    unmodifiable color map that maps pixel values into RGB values."
                            }
                        },
                        {
                            "@name": "pseudo_color",
                            "@value": "3",
                            "@c:identifier": "GDK_VISUAL_PSEUDO_COLOR",
                            "@glib:nick": "pseudo-color",
                            "@glib:name": "GDK_VISUAL_PSEUDO_COLOR",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkvisual.h",
                                "@line": "50",
                                "#text": "Each pixel is an index into a color map that\n    maps pixel values into rgb values. The color map can be changed by\n    an application."
                            }
                        },
                        {
                            "@name": "true_color",
                            "@value": "4",
                            "@c:identifier": "GDK_VISUAL_TRUE_COLOR",
                            "@glib:nick": "true-color",
                            "@glib:name": "GDK_VISUAL_TRUE_COLOR",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkvisual.h",
                                "@line": "53",
                                "#text": "Each pixel value directly contains red, green,\n    and blue components. Use gdk_visual_get_red_pixel_details(), etc,\n    to obtain information about how the components are assembled into\n    a pixel value."
                            }
                        },
                        {
                            "@name": "direct_color",
                            "@value": "5",
                            "@c:identifier": "GDK_VISUAL_DIRECT_COLOR",
                            "@glib:nick": "direct-color",
                            "@glib:name": "GDK_VISUAL_DIRECT_COLOR",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkvisual.h",
                                "@line": "57",
                                "#text": "Each pixel value contains red, green, and blue\n    components as for %GDK_VISUAL_TRUE_COLOR, but the components are\n    mapped via a color table into the final output table instead of\n    being converted directly."
                            }
                        }
                    ]
                },
                {
                    "@name": "WindowEdge",
                    "@glib:type-name": "GdkWindowEdge",
                    "@glib:get-type": "gdk_window_edge_get_type",
                    "@c:type": "GdkWindowEdge",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "gdk/gdkwindow.h",
                        "@line": "292",
                        "#text": "Determines a window edge or corner."
                    },
                    "member": [
                        {
                            "@name": "north_west",
                            "@value": "0",
                            "@c:identifier": "GDK_WINDOW_EDGE_NORTH_WEST",
                            "@glib:nick": "north-west",
                            "@glib:name": "GDK_WINDOW_EDGE_NORTH_WEST",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkwindow.h",
                                "@line": "294",
                                "#text": "the top left corner."
                            }
                        },
                        {
                            "@name": "north",
                            "@value": "1",
                            "@c:identifier": "GDK_WINDOW_EDGE_NORTH",
                            "@glib:nick": "north",
                            "@glib:name": "GDK_WINDOW_EDGE_NORTH",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkwindow.h",
                                "@line": "295",
                                "#text": "the top edge."
                            }
                        },
                        {
                            "@name": "north_east",
                            "@value": "2",
                            "@c:identifier": "GDK_WINDOW_EDGE_NORTH_EAST",
                            "@glib:nick": "north-east",
                            "@glib:name": "GDK_WINDOW_EDGE_NORTH_EAST",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkwindow.h",
                                "@line": "296",
                                "#text": "the top right corner."
                            }
                        },
                        {
                            "@name": "west",
                            "@value": "3",
                            "@c:identifier": "GDK_WINDOW_EDGE_WEST",
                            "@glib:nick": "west",
                            "@glib:name": "GDK_WINDOW_EDGE_WEST",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkwindow.h",
                                "@line": "297",
                                "#text": "the left edge."
                            }
                        },
                        {
                            "@name": "east",
                            "@value": "4",
                            "@c:identifier": "GDK_WINDOW_EDGE_EAST",
                            "@glib:nick": "east",
                            "@glib:name": "GDK_WINDOW_EDGE_EAST",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkwindow.h",
                                "@line": "298",
                                "#text": "the right edge."
                            }
                        },
                        {
                            "@name": "south_west",
                            "@value": "5",
                            "@c:identifier": "GDK_WINDOW_EDGE_SOUTH_WEST",
                            "@glib:nick": "south-west",
                            "@glib:name": "GDK_WINDOW_EDGE_SOUTH_WEST",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkwindow.h",
                                "@line": "299",
                                "#text": "the lower left corner."
                            }
                        },
                        {
                            "@name": "south",
                            "@value": "6",
                            "@c:identifier": "GDK_WINDOW_EDGE_SOUTH",
                            "@glib:nick": "south",
                            "@glib:name": "GDK_WINDOW_EDGE_SOUTH",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkwindow.h",
                                "@line": "300",
                                "#text": "the lower edge."
                            }
                        },
                        {
                            "@name": "south_east",
                            "@value": "7",
                            "@c:identifier": "GDK_WINDOW_EDGE_SOUTH_EAST",
                            "@glib:nick": "south-east",
                            "@glib:name": "GDK_WINDOW_EDGE_SOUTH_EAST",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkwindow.h",
                                "@line": "301",
                                "#text": "the lower right corner."
                            }
                        }
                    ]
                },
                {
                    "@name": "WindowType",
                    "@glib:type-name": "GdkWindowType",
                    "@glib:get-type": "gdk_window_type_get_type",
                    "@c:type": "GdkWindowType",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "gdk/gdkwindow.h",
                        "@line": "61",
                        "#text": "Describes the kind of window."
                    },
                    "member": [
                        {
                            "@name": "root",
                            "@value": "0",
                            "@c:identifier": "GDK_WINDOW_ROOT",
                            "@glib:nick": "root",
                            "@glib:name": "GDK_WINDOW_ROOT",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkwindow.h",
                                "@line": "63",
                                "#text": "root window; this window has no parent, covers the entire\n screen, and is created by the window system"
                            }
                        },
                        {
                            "@name": "toplevel",
                            "@value": "1",
                            "@c:identifier": "GDK_WINDOW_TOPLEVEL",
                            "@glib:nick": "toplevel",
                            "@glib:name": "GDK_WINDOW_TOPLEVEL",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkwindow.h",
                                "@line": "65",
                                "#text": "toplevel window (used to implement #GtkWindow)"
                            }
                        },
                        {
                            "@name": "child",
                            "@value": "2",
                            "@c:identifier": "GDK_WINDOW_CHILD",
                            "@glib:nick": "child",
                            "@glib:name": "GDK_WINDOW_CHILD",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkwindow.h",
                                "@line": "66",
                                "#text": "child window (used to implement e.g. #GtkEntry)"
                            }
                        },
                        {
                            "@name": "temp",
                            "@value": "3",
                            "@c:identifier": "GDK_WINDOW_TEMP",
                            "@glib:nick": "temp",
                            "@glib:name": "GDK_WINDOW_TEMP",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkwindow.h",
                                "@line": "67",
                                "#text": "override redirect temporary window (used to implement\n #GtkMenu)"
                            }
                        },
                        {
                            "@name": "foreign",
                            "@value": "4",
                            "@c:identifier": "GDK_WINDOW_FOREIGN",
                            "@glib:nick": "foreign",
                            "@glib:name": "GDK_WINDOW_FOREIGN",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkwindow.h",
                                "@line": "69",
                                "#text": "foreign window (see gdk_window_foreign_new())"
                            }
                        },
                        {
                            "@name": "offscreen",
                            "@value": "5",
                            "@c:identifier": "GDK_WINDOW_OFFSCREEN",
                            "@glib:nick": "offscreen",
                            "@glib:name": "GDK_WINDOW_OFFSCREEN",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkwindow.h",
                                "@line": "70",
                                "#text": "offscreen window (see\n [Offscreen Windows][OFFSCREEN-WINDOWS]). Since 2.18"
                            }
                        },
                        {
                            "@name": "subsurface",
                            "@value": "6",
                            "@c:identifier": "GDK_WINDOW_SUBSURFACE",
                            "@glib:nick": "subsurface",
                            "@glib:name": "GDK_WINDOW_SUBSURFACE",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkwindow.h",
                                "@line": "72",
                                "#text": "subsurface-based window; This window is visually\n tied to a toplevel, and is moved/stacked with it. Currently this window\n type is only implemented in Wayland. Since 3.14"
                            }
                        }
                    ]
                },
                {
                    "@name": "WindowTypeHint",
                    "@glib:type-name": "GdkWindowTypeHint",
                    "@glib:get-type": "gdk_window_type_hint_get_type",
                    "@c:type": "GdkWindowTypeHint",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "gdk/gdktypes.h",
                        "@line": "486",
                        "#text": "These are hints for the window manager that indicate what type of function\nthe window has. The window manager can use this when determining decoration\nand behaviour of the window. The hint must be set before mapping the window.\n\nSee the [Extended Window Manager Hints](http://www.freedesktop.org/Standards/wm-spec)\nspecification for more details about window types."
                    },
                    "member": [
                        {
                            "@name": "normal",
                            "@value": "0",
                            "@c:identifier": "GDK_WINDOW_TYPE_HINT_NORMAL",
                            "@glib:nick": "normal",
                            "@glib:name": "GDK_WINDOW_TYPE_HINT_NORMAL",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdktypes.h",
                                "@line": "488",
                                "#text": "Normal toplevel window."
                            }
                        },
                        {
                            "@name": "dialog",
                            "@value": "1",
                            "@c:identifier": "GDK_WINDOW_TYPE_HINT_DIALOG",
                            "@glib:nick": "dialog",
                            "@glib:name": "GDK_WINDOW_TYPE_HINT_DIALOG",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdktypes.h",
                                "@line": "489",
                                "#text": "Dialog window."
                            }
                        },
                        {
                            "@name": "menu",
                            "@value": "2",
                            "@c:identifier": "GDK_WINDOW_TYPE_HINT_MENU",
                            "@glib:nick": "menu",
                            "@glib:name": "GDK_WINDOW_TYPE_HINT_MENU",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdktypes.h",
                                "@line": "490",
                                "#text": "Window used to implement a menu; GTK+ uses\n this hint only for torn-off menus, see #GtkTearoffMenuItem."
                            }
                        },
                        {
                            "@name": "toolbar",
                            "@value": "3",
                            "@c:identifier": "GDK_WINDOW_TYPE_HINT_TOOLBAR",
                            "@glib:nick": "toolbar",
                            "@glib:name": "GDK_WINDOW_TYPE_HINT_TOOLBAR",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdktypes.h",
                                "@line": "492",
                                "#text": "Window used to implement toolbars."
                            }
                        },
                        {
                            "@name": "splashscreen",
                            "@value": "4",
                            "@c:identifier": "GDK_WINDOW_TYPE_HINT_SPLASHSCREEN",
                            "@glib:nick": "splashscreen",
                            "@glib:name": "GDK_WINDOW_TYPE_HINT_SPLASHSCREEN",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdktypes.h",
                                "@line": "493",
                                "#text": "Window used to display a splash\n screen during application startup."
                            }
                        },
                        {
                            "@name": "utility",
                            "@value": "5",
                            "@c:identifier": "GDK_WINDOW_TYPE_HINT_UTILITY",
                            "@glib:nick": "utility",
                            "@glib:name": "GDK_WINDOW_TYPE_HINT_UTILITY",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdktypes.h",
                                "@line": "495",
                                "#text": "Utility windows which are not detached\n toolbars or dialogs."
                            }
                        },
                        {
                            "@name": "dock",
                            "@value": "6",
                            "@c:identifier": "GDK_WINDOW_TYPE_HINT_DOCK",
                            "@glib:nick": "dock",
                            "@glib:name": "GDK_WINDOW_TYPE_HINT_DOCK",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdktypes.h",
                                "@line": "497",
                                "#text": "Used for creating dock or panel windows."
                            }
                        },
                        {
                            "@name": "desktop",
                            "@value": "7",
                            "@c:identifier": "GDK_WINDOW_TYPE_HINT_DESKTOP",
                            "@glib:nick": "desktop",
                            "@glib:name": "GDK_WINDOW_TYPE_HINT_DESKTOP",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdktypes.h",
                                "@line": "498",
                                "#text": "Used for creating the desktop background\n window."
                            }
                        },
                        {
                            "@name": "dropdown_menu",
                            "@value": "8",
                            "@c:identifier": "GDK_WINDOW_TYPE_HINT_DROPDOWN_MENU",
                            "@glib:nick": "dropdown-menu",
                            "@glib:name": "GDK_WINDOW_TYPE_HINT_DROPDOWN_MENU",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdktypes.h",
                                "@line": "500",
                                "#text": "A menu that belongs to a menubar."
                            }
                        },
                        {
                            "@name": "popup_menu",
                            "@value": "9",
                            "@c:identifier": "GDK_WINDOW_TYPE_HINT_POPUP_MENU",
                            "@glib:nick": "popup-menu",
                            "@glib:name": "GDK_WINDOW_TYPE_HINT_POPUP_MENU",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdktypes.h",
                                "@line": "501",
                                "#text": "A menu that does not belong to a menubar,\n e.g. a context menu."
                            }
                        },
                        {
                            "@name": "tooltip",
                            "@value": "10",
                            "@c:identifier": "GDK_WINDOW_TYPE_HINT_TOOLTIP",
                            "@glib:nick": "tooltip",
                            "@glib:name": "GDK_WINDOW_TYPE_HINT_TOOLTIP",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdktypes.h",
                                "@line": "503",
                                "#text": "A tooltip."
                            }
                        },
                        {
                            "@name": "notification",
                            "@value": "11",
                            "@c:identifier": "GDK_WINDOW_TYPE_HINT_NOTIFICATION",
                            "@glib:nick": "notification",
                            "@glib:name": "GDK_WINDOW_TYPE_HINT_NOTIFICATION",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdktypes.h",
                                "@line": "504",
                                "#text": "A notification - typically a \u201cbubble\u201d\n that belongs to a status icon."
                            }
                        },
                        {
                            "@name": "combo",
                            "@value": "12",
                            "@c:identifier": "GDK_WINDOW_TYPE_HINT_COMBO",
                            "@glib:nick": "combo",
                            "@glib:name": "GDK_WINDOW_TYPE_HINT_COMBO",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdktypes.h",
                                "@line": "506",
                                "#text": "A popup from a combo box."
                            }
                        },
                        {
                            "@name": "dnd",
                            "@value": "13",
                            "@c:identifier": "GDK_WINDOW_TYPE_HINT_DND",
                            "@glib:nick": "dnd",
                            "@glib:name": "GDK_WINDOW_TYPE_HINT_DND",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdktypes.h",
                                "@line": "507",
                                "#text": "A window that is used to implement a DND cursor."
                            }
                        }
                    ]
                },
                {
                    "@name": "WindowWindowClass",
                    "@glib:type-name": "GdkWindowWindowClass",
                    "@glib:get-type": "gdk_window_window_class_get_type",
                    "@c:type": "GdkWindowWindowClass",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "gdk/gdkwindow.h",
                        "@line": "44",
                        "#text": "@GDK_INPUT_OUTPUT windows are the standard kind of window you might expect.\nSuch windows receive events and are also displayed on screen.\n@GDK_INPUT_ONLY windows are invisible; they are usually placed above other\nwindows in order to trap or filter the events. You can\u2019t draw on\n@GDK_INPUT_ONLY windows."
                    },
                    "member": [
                        {
                            "@name": "input_output",
                            "@value": "0",
                            "@c:identifier": "GDK_INPUT_OUTPUT",
                            "@glib:nick": "input-output",
                            "@glib:name": "GDK_INPUT_OUTPUT",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkwindow.h",
                                "@line": "46",
                                "#text": "window for graphics and events"
                            }
                        },
                        {
                            "@name": "input_only",
                            "@value": "1",
                            "@c:identifier": "GDK_INPUT_ONLY",
                            "@glib:nick": "input-only",
                            "@glib:name": "GDK_INPUT_ONLY",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkwindow.h",
                                "@line": "47",
                                "#text": "window for events only"
                            }
                        }
                    ]
                }
            ],
            "constant": [
                {
                    "@name": "BUTTON_MIDDLE",
                    "@value": "2",
                    "@c:type": "GDK_BUTTON_MIDDLE",
                    "@version": "3.4",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "gdk/gdkevents.h",
                        "@line": "103",
                        "#text": "The middle button."
                    },
                    "source-position": {
                        "@filename": "gdk/gdkevents.h",
                        "@line": "110"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "BUTTON_PRIMARY",
                    "@value": "1",
                    "@c:type": "GDK_BUTTON_PRIMARY",
                    "@version": "3.4",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "gdk/gdkevents.h",
                        "@line": "93",
                        "#text": "The primary button. This is typically the left mouse button, or the\nright button in a left-handed setup."
                    },
                    "source-position": {
                        "@filename": "gdk/gdkevents.h",
                        "@line": "101"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "BUTTON_SECONDARY",
                    "@value": "3",
                    "@c:type": "GDK_BUTTON_SECONDARY",
                    "@version": "3.4",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "gdk/gdkevents.h",
                        "@line": "112",
                        "#text": "The secondary button. This is typically the right mouse button, or the\nleft button in a left-handed setup."
                    },
                    "source-position": {
                        "@filename": "gdk/gdkevents.h",
                        "@line": "120"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "CURRENT_TIME",
                    "@value": "0",
                    "@c:type": "GDK_CURRENT_TIME",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "gdk/gdktypes.h",
                        "@line": "48",
                        "#text": "Represents the current time, and can be used anywhere a time is expected."
                    },
                    "source-position": {
                        "@filename": "gdk/gdktypes.h",
                        "@line": "53"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "EVENT_PROPAGATE",
                    "@value": "false",
                    "@c:type": "GDK_EVENT_PROPAGATE",
                    "@version": "3.4",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "gdk/gdkevents.h",
                        "@line": "73",
                        "#text": "Use this macro as the return value for continuing the propagation of\nan event handler."
                    },
                    "source-position": {
                        "@filename": "gdk/gdkevents.h",
                        "@line": "81"
                    },
                    "type": {
                        "@name": "gboolean",
                        "@c:type": "gboolean"
                    }
                },
                {
                    "@name": "EVENT_STOP",
                    "@value": "true",
                    "@c:type": "GDK_EVENT_STOP",
                    "@version": "3.4",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "gdk/gdkevents.h",
                        "@line": "83",
                        "#text": "Use this macro as the return value for stopping the propagation of\nan event handler."
                    },
                    "source-position": {
                        "@filename": "gdk/gdkevents.h",
                        "@line": "91"
                    },
                    "type": {
                        "@name": "gboolean",
                        "@c:type": "gboolean"
                    }
                },
                {
                    "@name": "KEY_0",
                    "@value": "48",
                    "@c:type": "GDK_KEY_0",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "402"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_1",
                    "@value": "49",
                    "@c:type": "GDK_KEY_1",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "403"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_2",
                    "@value": "50",
                    "@c:type": "GDK_KEY_2",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "404"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_3",
                    "@value": "51",
                    "@c:type": "GDK_KEY_3",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "405"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_3270_AltCursor",
                    "@value": "64784",
                    "@c:type": "GDK_KEY_3270_AltCursor",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "370"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_3270_Attn",
                    "@value": "64782",
                    "@c:type": "GDK_KEY_3270_Attn",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "368"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_3270_BackTab",
                    "@value": "64773",
                    "@c:type": "GDK_KEY_3270_BackTab",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "359"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_3270_ChangeScreen",
                    "@value": "64793",
                    "@c:type": "GDK_KEY_3270_ChangeScreen",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "379"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_3270_Copy",
                    "@value": "64789",
                    "@c:type": "GDK_KEY_3270_Copy",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "375"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_3270_CursorBlink",
                    "@value": "64783",
                    "@c:type": "GDK_KEY_3270_CursorBlink",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "369"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_3270_CursorSelect",
                    "@value": "64796",
                    "@c:type": "GDK_KEY_3270_CursorSelect",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "382"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_3270_DeleteWord",
                    "@value": "64794",
                    "@c:type": "GDK_KEY_3270_DeleteWord",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "380"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_3270_Duplicate",
                    "@value": "64769",
                    "@c:type": "GDK_KEY_3270_Duplicate",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "355"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_3270_Enter",
                    "@value": "64798",
                    "@c:type": "GDK_KEY_3270_Enter",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "384"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_3270_EraseEOF",
                    "@value": "64774",
                    "@c:type": "GDK_KEY_3270_EraseEOF",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "360"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_3270_EraseInput",
                    "@value": "64775",
                    "@c:type": "GDK_KEY_3270_EraseInput",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "361"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_3270_ExSelect",
                    "@value": "64795",
                    "@c:type": "GDK_KEY_3270_ExSelect",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "381"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_3270_FieldMark",
                    "@value": "64770",
                    "@c:type": "GDK_KEY_3270_FieldMark",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "356"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_3270_Ident",
                    "@value": "64787",
                    "@c:type": "GDK_KEY_3270_Ident",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "373"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_3270_Jump",
                    "@value": "64786",
                    "@c:type": "GDK_KEY_3270_Jump",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "372"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_3270_KeyClick",
                    "@value": "64785",
                    "@c:type": "GDK_KEY_3270_KeyClick",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "371"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_3270_Left2",
                    "@value": "64772",
                    "@c:type": "GDK_KEY_3270_Left2",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "358"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_3270_PA1",
                    "@value": "64778",
                    "@c:type": "GDK_KEY_3270_PA1",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "364"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_3270_PA2",
                    "@value": "64779",
                    "@c:type": "GDK_KEY_3270_PA2",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "365"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_3270_PA3",
                    "@value": "64780",
                    "@c:type": "GDK_KEY_3270_PA3",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "366"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_3270_Play",
                    "@value": "64790",
                    "@c:type": "GDK_KEY_3270_Play",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "376"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_3270_PrintScreen",
                    "@value": "64797",
                    "@c:type": "GDK_KEY_3270_PrintScreen",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "383"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_3270_Quit",
                    "@value": "64777",
                    "@c:type": "GDK_KEY_3270_Quit",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "363"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_3270_Record",
                    "@value": "64792",
                    "@c:type": "GDK_KEY_3270_Record",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "378"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_3270_Reset",
                    "@value": "64776",
                    "@c:type": "GDK_KEY_3270_Reset",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "362"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_3270_Right2",
                    "@value": "64771",
                    "@c:type": "GDK_KEY_3270_Right2",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "357"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_3270_Rule",
                    "@value": "64788",
                    "@c:type": "GDK_KEY_3270_Rule",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "374"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_3270_Setup",
                    "@value": "64791",
                    "@c:type": "GDK_KEY_3270_Setup",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "377"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_3270_Test",
                    "@value": "64781",
                    "@c:type": "GDK_KEY_3270_Test",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "367"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_4",
                    "@value": "52",
                    "@c:type": "GDK_KEY_4",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "406"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_5",
                    "@value": "53",
                    "@c:type": "GDK_KEY_5",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "407"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_6",
                    "@value": "54",
                    "@c:type": "GDK_KEY_6",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "408"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_7",
                    "@value": "55",
                    "@c:type": "GDK_KEY_7",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "409"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_8",
                    "@value": "56",
                    "@c:type": "GDK_KEY_8",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "410"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_9",
                    "@value": "57",
                    "@c:type": "GDK_KEY_9",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "411"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_A",
                    "@value": "65",
                    "@c:type": "GDK_KEY_A",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "419"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_AE",
                    "@value": "198",
                    "@c:type": "GDK_KEY_AE",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "520"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Aacute",
                    "@value": "193",
                    "@c:type": "GDK_KEY_Aacute",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "515"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Abelowdot",
                    "@value": "16785056",
                    "@c:type": "GDK_KEY_Abelowdot",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1655"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Abreve",
                    "@value": "451",
                    "@c:type": "GDK_KEY_Abreve",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "607"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Abreveacute",
                    "@value": "16785070",
                    "@c:type": "GDK_KEY_Abreveacute",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1669"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Abrevebelowdot",
                    "@value": "16785078",
                    "@c:type": "GDK_KEY_Abrevebelowdot",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1677"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Abrevegrave",
                    "@value": "16785072",
                    "@c:type": "GDK_KEY_Abrevegrave",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1671"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Abrevehook",
                    "@value": "16785074",
                    "@c:type": "GDK_KEY_Abrevehook",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1673"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Abrevetilde",
                    "@value": "16785076",
                    "@c:type": "GDK_KEY_Abrevetilde",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1675"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_AccessX_Enable",
                    "@value": "65136",
                    "@c:type": "GDK_KEY_AccessX_Enable",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "308"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_AccessX_Feedback_Enable",
                    "@value": "65137",
                    "@c:type": "GDK_KEY_AccessX_Feedback_Enable",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "309"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Acircumflex",
                    "@value": "194",
                    "@c:type": "GDK_KEY_Acircumflex",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "516"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Acircumflexacute",
                    "@value": "16785060",
                    "@c:type": "GDK_KEY_Acircumflexacute",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1659"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Acircumflexbelowdot",
                    "@value": "16785068",
                    "@c:type": "GDK_KEY_Acircumflexbelowdot",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1667"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Acircumflexgrave",
                    "@value": "16785062",
                    "@c:type": "GDK_KEY_Acircumflexgrave",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1661"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Acircumflexhook",
                    "@value": "16785064",
                    "@c:type": "GDK_KEY_Acircumflexhook",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1663"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Acircumflextilde",
                    "@value": "16785066",
                    "@c:type": "GDK_KEY_Acircumflextilde",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1665"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_AddFavorite",
                    "@value": "269025081",
                    "@c:type": "GDK_KEY_AddFavorite",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "2185"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Adiaeresis",
                    "@value": "196",
                    "@c:type": "GDK_KEY_Adiaeresis",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "518"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Agrave",
                    "@value": "192",
                    "@c:type": "GDK_KEY_Agrave",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "514"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Ahook",
                    "@value": "16785058",
                    "@c:type": "GDK_KEY_Ahook",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1657"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Alt_L",
                    "@value": "65513",
                    "@c:type": "GDK_KEY_Alt_L",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "205"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Alt_R",
                    "@value": "65514",
                    "@c:type": "GDK_KEY_Alt_R",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "206"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Amacron",
                    "@value": "960",
                    "@c:type": "GDK_KEY_Amacron",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "677"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Aogonek",
                    "@value": "417",
                    "@c:type": "GDK_KEY_Aogonek",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "582"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_ApplicationLeft",
                    "@value": "269025104",
                    "@c:type": "GDK_KEY_ApplicationLeft",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "2208"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_ApplicationRight",
                    "@value": "269025105",
                    "@c:type": "GDK_KEY_ApplicationRight",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "2209"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Arabic_0",
                    "@value": "16778848",
                    "@c:type": "GDK_KEY_Arabic_0",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "815"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Arabic_1",
                    "@value": "16778849",
                    "@c:type": "GDK_KEY_Arabic_1",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "816"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Arabic_2",
                    "@value": "16778850",
                    "@c:type": "GDK_KEY_Arabic_2",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "817"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Arabic_3",
                    "@value": "16778851",
                    "@c:type": "GDK_KEY_Arabic_3",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "818"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Arabic_4",
                    "@value": "16778852",
                    "@c:type": "GDK_KEY_Arabic_4",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "819"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Arabic_5",
                    "@value": "16778853",
                    "@c:type": "GDK_KEY_Arabic_5",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "820"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Arabic_6",
                    "@value": "16778854",
                    "@c:type": "GDK_KEY_Arabic_6",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "821"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Arabic_7",
                    "@value": "16778855",
                    "@c:type": "GDK_KEY_Arabic_7",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "822"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Arabic_8",
                    "@value": "16778856",
                    "@c:type": "GDK_KEY_Arabic_8",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "823"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Arabic_9",
                    "@value": "16778857",
                    "@c:type": "GDK_KEY_Arabic_9",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "824"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Arabic_ain",
                    "@value": "1497",
                    "@c:type": "GDK_KEY_Arabic_ain",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "851"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Arabic_alef",
                    "@value": "1479",
                    "@c:type": "GDK_KEY_Arabic_alef",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "833"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Arabic_alefmaksura",
                    "@value": "1513",
                    "@c:type": "GDK_KEY_Arabic_alefmaksura",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "863"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Arabic_beh",
                    "@value": "1480",
                    "@c:type": "GDK_KEY_Arabic_beh",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "834"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Arabic_comma",
                    "@value": "1452",
                    "@c:type": "GDK_KEY_Arabic_comma",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "813"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Arabic_dad",
                    "@value": "1494",
                    "@c:type": "GDK_KEY_Arabic_dad",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "848"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Arabic_dal",
                    "@value": "1487",
                    "@c:type": "GDK_KEY_Arabic_dal",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "841"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Arabic_damma",
                    "@value": "1519",
                    "@c:type": "GDK_KEY_Arabic_damma",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "869"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Arabic_dammatan",
                    "@value": "1516",
                    "@c:type": "GDK_KEY_Arabic_dammatan",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "866"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Arabic_ddal",
                    "@value": "16778888",
                    "@c:type": "GDK_KEY_Arabic_ddal",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "811"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Arabic_farsi_yeh",
                    "@value": "16778956",
                    "@c:type": "GDK_KEY_Arabic_farsi_yeh",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "883"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Arabic_fatha",
                    "@value": "1518",
                    "@c:type": "GDK_KEY_Arabic_fatha",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "868"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Arabic_fathatan",
                    "@value": "1515",
                    "@c:type": "GDK_KEY_Arabic_fathatan",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "865"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Arabic_feh",
                    "@value": "1505",
                    "@c:type": "GDK_KEY_Arabic_feh",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "854"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Arabic_fullstop",
                    "@value": "16778964",
                    "@c:type": "GDK_KEY_Arabic_fullstop",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "814"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Arabic_gaf",
                    "@value": "16778927",
                    "@c:type": "GDK_KEY_Arabic_gaf",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "879"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Arabic_ghain",
                    "@value": "1498",
                    "@c:type": "GDK_KEY_Arabic_ghain",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "852"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Arabic_ha",
                    "@value": "1511",
                    "@c:type": "GDK_KEY_Arabic_ha",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "860"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Arabic_hah",
                    "@value": "1485",
                    "@c:type": "GDK_KEY_Arabic_hah",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "839"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Arabic_hamza",
                    "@value": "1473",
                    "@c:type": "GDK_KEY_Arabic_hamza",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "827"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Arabic_hamza_above",
                    "@value": "16778836",
                    "@c:type": "GDK_KEY_Arabic_hamza_above",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "874"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Arabic_hamza_below",
                    "@value": "16778837",
                    "@c:type": "GDK_KEY_Arabic_hamza_below",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "875"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Arabic_hamzaonalef",
                    "@value": "1475",
                    "@c:type": "GDK_KEY_Arabic_hamzaonalef",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "829"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Arabic_hamzaonwaw",
                    "@value": "1476",
                    "@c:type": "GDK_KEY_Arabic_hamzaonwaw",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "830"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Arabic_hamzaonyeh",
                    "@value": "1478",
                    "@c:type": "GDK_KEY_Arabic_hamzaonyeh",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "832"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Arabic_hamzaunderalef",
                    "@value": "1477",
                    "@c:type": "GDK_KEY_Arabic_hamzaunderalef",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "831"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Arabic_heh",
                    "@value": "1511",
                    "@c:type": "GDK_KEY_Arabic_heh",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "861"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Arabic_heh_doachashmee",
                    "@value": "16778942",
                    "@c:type": "GDK_KEY_Arabic_heh_doachashmee",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "881"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Arabic_heh_goal",
                    "@value": "16778945",
                    "@c:type": "GDK_KEY_Arabic_heh_goal",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "885"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Arabic_jeem",
                    "@value": "1484",
                    "@c:type": "GDK_KEY_Arabic_jeem",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "838"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Arabic_jeh",
                    "@value": "16778904",
                    "@c:type": "GDK_KEY_Arabic_jeh",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "876"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Arabic_kaf",
                    "@value": "1507",
                    "@c:type": "GDK_KEY_Arabic_kaf",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "856"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Arabic_kasra",
                    "@value": "1520",
                    "@c:type": "GDK_KEY_Arabic_kasra",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "870"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Arabic_kasratan",
                    "@value": "1517",
                    "@c:type": "GDK_KEY_Arabic_kasratan",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "867"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Arabic_keheh",
                    "@value": "16778921",
                    "@c:type": "GDK_KEY_Arabic_keheh",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "878"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Arabic_khah",
                    "@value": "1486",
                    "@c:type": "GDK_KEY_Arabic_khah",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "840"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Arabic_lam",
                    "@value": "1508",
                    "@c:type": "GDK_KEY_Arabic_lam",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "857"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Arabic_madda_above",
                    "@value": "16778835",
                    "@c:type": "GDK_KEY_Arabic_madda_above",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "873"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Arabic_maddaonalef",
                    "@value": "1474",
                    "@c:type": "GDK_KEY_Arabic_maddaonalef",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "828"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Arabic_meem",
                    "@value": "1509",
                    "@c:type": "GDK_KEY_Arabic_meem",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "858"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Arabic_noon",
                    "@value": "1510",
                    "@c:type": "GDK_KEY_Arabic_noon",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "859"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Arabic_noon_ghunna",
                    "@value": "16778938",
                    "@c:type": "GDK_KEY_Arabic_noon_ghunna",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "880"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Arabic_peh",
                    "@value": "16778878",
                    "@c:type": "GDK_KEY_Arabic_peh",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "809"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Arabic_percent",
                    "@value": "16778858",
                    "@c:type": "GDK_KEY_Arabic_percent",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "806"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Arabic_qaf",
                    "@value": "1506",
                    "@c:type": "GDK_KEY_Arabic_qaf",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "855"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Arabic_question_mark",
                    "@value": "1471",
                    "@c:type": "GDK_KEY_Arabic_question_mark",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "826"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Arabic_ra",
                    "@value": "1489",
                    "@c:type": "GDK_KEY_Arabic_ra",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "843"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Arabic_rreh",
                    "@value": "16778897",
                    "@c:type": "GDK_KEY_Arabic_rreh",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "812"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Arabic_sad",
                    "@value": "1493",
                    "@c:type": "GDK_KEY_Arabic_sad",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "847"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Arabic_seen",
                    "@value": "1491",
                    "@c:type": "GDK_KEY_Arabic_seen",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "845"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Arabic_semicolon",
                    "@value": "1467",
                    "@c:type": "GDK_KEY_Arabic_semicolon",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "825"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Arabic_shadda",
                    "@value": "1521",
                    "@c:type": "GDK_KEY_Arabic_shadda",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "871"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Arabic_sheen",
                    "@value": "1492",
                    "@c:type": "GDK_KEY_Arabic_sheen",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "846"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Arabic_sukun",
                    "@value": "1522",
                    "@c:type": "GDK_KEY_Arabic_sukun",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "872"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Arabic_superscript_alef",
                    "@value": "16778864",
                    "@c:type": "GDK_KEY_Arabic_superscript_alef",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "807"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Arabic_switch",
                    "@value": "65406",
                    "@c:type": "GDK_KEY_Arabic_switch",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "886"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Arabic_tah",
                    "@value": "1495",
                    "@c:type": "GDK_KEY_Arabic_tah",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "849"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Arabic_tatweel",
                    "@value": "1504",
                    "@c:type": "GDK_KEY_Arabic_tatweel",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "853"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Arabic_tcheh",
                    "@value": "16778886",
                    "@c:type": "GDK_KEY_Arabic_tcheh",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "810"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Arabic_teh",
                    "@value": "1482",
                    "@c:type": "GDK_KEY_Arabic_teh",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "836"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Arabic_tehmarbuta",
                    "@value": "1481",
                    "@c:type": "GDK_KEY_Arabic_tehmarbuta",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "835"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Arabic_thal",
                    "@value": "1488",
                    "@c:type": "GDK_KEY_Arabic_thal",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "842"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Arabic_theh",
                    "@value": "1483",
                    "@c:type": "GDK_KEY_Arabic_theh",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "837"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Arabic_tteh",
                    "@value": "16778873",
                    "@c:type": "GDK_KEY_Arabic_tteh",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "808"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Arabic_veh",
                    "@value": "16778916",
                    "@c:type": "GDK_KEY_Arabic_veh",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "877"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Arabic_waw",
                    "@value": "1512",
                    "@c:type": "GDK_KEY_Arabic_waw",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "862"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Arabic_yeh",
                    "@value": "1514",
                    "@c:type": "GDK_KEY_Arabic_yeh",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "864"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Arabic_yeh_baree",
                    "@value": "16778962",
                    "@c:type": "GDK_KEY_Arabic_yeh_baree",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "884"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Arabic_zah",
                    "@value": "1496",
                    "@c:type": "GDK_KEY_Arabic_zah",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "850"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Arabic_zain",
                    "@value": "1490",
                    "@c:type": "GDK_KEY_Arabic_zain",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "844"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Aring",
                    "@value": "197",
                    "@c:type": "GDK_KEY_Aring",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "519"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Armenian_AT",
                    "@value": "16778552",
                    "@c:type": "GDK_KEY_Armenian_AT",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1535"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Armenian_AYB",
                    "@value": "16778545",
                    "@c:type": "GDK_KEY_Armenian_AYB",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1521"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Armenian_BEN",
                    "@value": "16778546",
                    "@c:type": "GDK_KEY_Armenian_BEN",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1523"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Armenian_CHA",
                    "@value": "16778569",
                    "@c:type": "GDK_KEY_Armenian_CHA",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1569"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Armenian_DA",
                    "@value": "16778548",
                    "@c:type": "GDK_KEY_Armenian_DA",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1527"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Armenian_DZA",
                    "@value": "16778561",
                    "@c:type": "GDK_KEY_Armenian_DZA",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1553"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Armenian_E",
                    "@value": "16778551",
                    "@c:type": "GDK_KEY_Armenian_E",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1533"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Armenian_FE",
                    "@value": "16778582",
                    "@c:type": "GDK_KEY_Armenian_FE",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1595"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Armenian_GHAT",
                    "@value": "16778562",
                    "@c:type": "GDK_KEY_Armenian_GHAT",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1555"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Armenian_GIM",
                    "@value": "16778547",
                    "@c:type": "GDK_KEY_Armenian_GIM",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1525"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Armenian_HI",
                    "@value": "16778565",
                    "@c:type": "GDK_KEY_Armenian_HI",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1561"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Armenian_HO",
                    "@value": "16778560",
                    "@c:type": "GDK_KEY_Armenian_HO",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1551"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Armenian_INI",
                    "@value": "16778555",
                    "@c:type": "GDK_KEY_Armenian_INI",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1541"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Armenian_JE",
                    "@value": "16778571",
                    "@c:type": "GDK_KEY_Armenian_JE",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1573"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Armenian_KE",
                    "@value": "16778580",
                    "@c:type": "GDK_KEY_Armenian_KE",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1591"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Armenian_KEN",
                    "@value": "16778559",
                    "@c:type": "GDK_KEY_Armenian_KEN",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1549"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Armenian_KHE",
                    "@value": "16778557",
                    "@c:type": "GDK_KEY_Armenian_KHE",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1545"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Armenian_LYUN",
                    "@value": "16778556",
                    "@c:type": "GDK_KEY_Armenian_LYUN",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1543"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Armenian_MEN",
                    "@value": "16778564",
                    "@c:type": "GDK_KEY_Armenian_MEN",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1559"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Armenian_NU",
                    "@value": "16778566",
                    "@c:type": "GDK_KEY_Armenian_NU",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1563"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Armenian_O",
                    "@value": "16778581",
                    "@c:type": "GDK_KEY_Armenian_O",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1593"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Armenian_PE",
                    "@value": "16778570",
                    "@c:type": "GDK_KEY_Armenian_PE",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1571"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Armenian_PYUR",
                    "@value": "16778579",
                    "@c:type": "GDK_KEY_Armenian_PYUR",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1589"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Armenian_RA",
                    "@value": "16778572",
                    "@c:type": "GDK_KEY_Armenian_RA",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1575"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Armenian_RE",
                    "@value": "16778576",
                    "@c:type": "GDK_KEY_Armenian_RE",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1583"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Armenian_SE",
                    "@value": "16778573",
                    "@c:type": "GDK_KEY_Armenian_SE",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1577"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Armenian_SHA",
                    "@value": "16778567",
                    "@c:type": "GDK_KEY_Armenian_SHA",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1565"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Armenian_TCHE",
                    "@value": "16778563",
                    "@c:type": "GDK_KEY_Armenian_TCHE",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1557"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Armenian_TO",
                    "@value": "16778553",
                    "@c:type": "GDK_KEY_Armenian_TO",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1537"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Armenian_TSA",
                    "@value": "16778558",
                    "@c:type": "GDK_KEY_Armenian_TSA",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1547"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Armenian_TSO",
                    "@value": "16778577",
                    "@c:type": "GDK_KEY_Armenian_TSO",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1585"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Armenian_TYUN",
                    "@value": "16778575",
                    "@c:type": "GDK_KEY_Armenian_TYUN",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1581"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Armenian_VEV",
                    "@value": "16778574",
                    "@c:type": "GDK_KEY_Armenian_VEV",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1579"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Armenian_VO",
                    "@value": "16778568",
                    "@c:type": "GDK_KEY_Armenian_VO",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1567"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Armenian_VYUN",
                    "@value": "16778578",
                    "@c:type": "GDK_KEY_Armenian_VYUN",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1587"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Armenian_YECH",
                    "@value": "16778549",
                    "@c:type": "GDK_KEY_Armenian_YECH",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1529"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Armenian_ZA",
                    "@value": "16778550",
                    "@c:type": "GDK_KEY_Armenian_ZA",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1531"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Armenian_ZHE",
                    "@value": "16778554",
                    "@c:type": "GDK_KEY_Armenian_ZHE",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1539"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Armenian_accent",
                    "@value": "16778587",
                    "@c:type": "GDK_KEY_Armenian_accent",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1517"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Armenian_amanak",
                    "@value": "16778588",
                    "@c:type": "GDK_KEY_Armenian_amanak",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1516"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Armenian_apostrophe",
                    "@value": "16778586",
                    "@c:type": "GDK_KEY_Armenian_apostrophe",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1597"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Armenian_at",
                    "@value": "16778600",
                    "@c:type": "GDK_KEY_Armenian_at",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1536"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Armenian_ayb",
                    "@value": "16778593",
                    "@c:type": "GDK_KEY_Armenian_ayb",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1522"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Armenian_ben",
                    "@value": "16778594",
                    "@c:type": "GDK_KEY_Armenian_ben",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1524"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Armenian_but",
                    "@value": "16778589",
                    "@c:type": "GDK_KEY_Armenian_but",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1512"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Armenian_cha",
                    "@value": "16778617",
                    "@c:type": "GDK_KEY_Armenian_cha",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1570"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Armenian_da",
                    "@value": "16778596",
                    "@c:type": "GDK_KEY_Armenian_da",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1528"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Armenian_dza",
                    "@value": "16778609",
                    "@c:type": "GDK_KEY_Armenian_dza",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1554"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Armenian_e",
                    "@value": "16778599",
                    "@c:type": "GDK_KEY_Armenian_e",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1534"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Armenian_exclam",
                    "@value": "16778588",
                    "@c:type": "GDK_KEY_Armenian_exclam",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1515"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Armenian_fe",
                    "@value": "16778630",
                    "@c:type": "GDK_KEY_Armenian_fe",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1596"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Armenian_full_stop",
                    "@value": "16778633",
                    "@c:type": "GDK_KEY_Armenian_full_stop",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1509"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Armenian_ghat",
                    "@value": "16778610",
                    "@c:type": "GDK_KEY_Armenian_ghat",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1556"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Armenian_gim",
                    "@value": "16778595",
                    "@c:type": "GDK_KEY_Armenian_gim",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1526"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Armenian_hi",
                    "@value": "16778613",
                    "@c:type": "GDK_KEY_Armenian_hi",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1562"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Armenian_ho",
                    "@value": "16778608",
                    "@c:type": "GDK_KEY_Armenian_ho",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1552"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Armenian_hyphen",
                    "@value": "16778634",
                    "@c:type": "GDK_KEY_Armenian_hyphen",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1513"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Armenian_ini",
                    "@value": "16778603",
                    "@c:type": "GDK_KEY_Armenian_ini",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1542"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Armenian_je",
                    "@value": "16778619",
                    "@c:type": "GDK_KEY_Armenian_je",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1574"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Armenian_ke",
                    "@value": "16778628",
                    "@c:type": "GDK_KEY_Armenian_ke",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1592"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Armenian_ken",
                    "@value": "16778607",
                    "@c:type": "GDK_KEY_Armenian_ken",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1550"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Armenian_khe",
                    "@value": "16778605",
                    "@c:type": "GDK_KEY_Armenian_khe",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1546"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Armenian_ligature_ew",
                    "@value": "16778631",
                    "@c:type": "GDK_KEY_Armenian_ligature_ew",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1508"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Armenian_lyun",
                    "@value": "16778604",
                    "@c:type": "GDK_KEY_Armenian_lyun",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1544"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Armenian_men",
                    "@value": "16778612",
                    "@c:type": "GDK_KEY_Armenian_men",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1560"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Armenian_nu",
                    "@value": "16778614",
                    "@c:type": "GDK_KEY_Armenian_nu",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1564"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Armenian_o",
                    "@value": "16778629",
                    "@c:type": "GDK_KEY_Armenian_o",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1594"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Armenian_paruyk",
                    "@value": "16778590",
                    "@c:type": "GDK_KEY_Armenian_paruyk",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1520"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Armenian_pe",
                    "@value": "16778618",
                    "@c:type": "GDK_KEY_Armenian_pe",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1572"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Armenian_pyur",
                    "@value": "16778627",
                    "@c:type": "GDK_KEY_Armenian_pyur",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1590"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Armenian_question",
                    "@value": "16778590",
                    "@c:type": "GDK_KEY_Armenian_question",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1519"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Armenian_ra",
                    "@value": "16778620",
                    "@c:type": "GDK_KEY_Armenian_ra",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1576"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Armenian_re",
                    "@value": "16778624",
                    "@c:type": "GDK_KEY_Armenian_re",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1584"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Armenian_se",
                    "@value": "16778621",
                    "@c:type": "GDK_KEY_Armenian_se",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1578"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Armenian_separation_mark",
                    "@value": "16778589",
                    "@c:type": "GDK_KEY_Armenian_separation_mark",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1511"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Armenian_sha",
                    "@value": "16778615",
                    "@c:type": "GDK_KEY_Armenian_sha",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1566"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Armenian_shesht",
                    "@value": "16778587",
                    "@c:type": "GDK_KEY_Armenian_shesht",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1518"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Armenian_tche",
                    "@value": "16778611",
                    "@c:type": "GDK_KEY_Armenian_tche",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1558"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Armenian_to",
                    "@value": "16778601",
                    "@c:type": "GDK_KEY_Armenian_to",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1538"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Armenian_tsa",
                    "@value": "16778606",
                    "@c:type": "GDK_KEY_Armenian_tsa",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1548"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Armenian_tso",
                    "@value": "16778625",
                    "@c:type": "GDK_KEY_Armenian_tso",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1586"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Armenian_tyun",
                    "@value": "16778623",
                    "@c:type": "GDK_KEY_Armenian_tyun",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1582"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Armenian_verjaket",
                    "@value": "16778633",
                    "@c:type": "GDK_KEY_Armenian_verjaket",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1510"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Armenian_vev",
                    "@value": "16778622",
                    "@c:type": "GDK_KEY_Armenian_vev",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1580"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Armenian_vo",
                    "@value": "16778616",
                    "@c:type": "GDK_KEY_Armenian_vo",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1568"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Armenian_vyun",
                    "@value": "16778626",
                    "@c:type": "GDK_KEY_Armenian_vyun",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1588"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Armenian_yech",
                    "@value": "16778597",
                    "@c:type": "GDK_KEY_Armenian_yech",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1530"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Armenian_yentamna",
                    "@value": "16778634",
                    "@c:type": "GDK_KEY_Armenian_yentamna",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1514"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Armenian_za",
                    "@value": "16778598",
                    "@c:type": "GDK_KEY_Armenian_za",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1532"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Armenian_zhe",
                    "@value": "16778602",
                    "@c:type": "GDK_KEY_Armenian_zhe",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1540"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Atilde",
                    "@value": "195",
                    "@c:type": "GDK_KEY_Atilde",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "517"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_AudibleBell_Enable",
                    "@value": "65146",
                    "@c:type": "GDK_KEY_AudibleBell_Enable",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "318"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_AudioCycleTrack",
                    "@value": "269025179",
                    "@c:type": "GDK_KEY_AudioCycleTrack",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "2277"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_AudioForward",
                    "@value": "269025175",
                    "@c:type": "GDK_KEY_AudioForward",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "2273"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_AudioLowerVolume",
                    "@value": "269025041",
                    "@c:type": "GDK_KEY_AudioLowerVolume",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "2145"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_AudioMedia",
                    "@value": "269025074",
                    "@c:type": "GDK_KEY_AudioMedia",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "2178"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_AudioMicMute",
                    "@value": "269025202",
                    "@c:type": "GDK_KEY_AudioMicMute",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "2294"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_AudioMute",
                    "@value": "269025042",
                    "@c:type": "GDK_KEY_AudioMute",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "2146"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_AudioNext",
                    "@value": "269025047",
                    "@c:type": "GDK_KEY_AudioNext",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "2151"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_AudioPause",
                    "@value": "269025073",
                    "@c:type": "GDK_KEY_AudioPause",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "2177"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_AudioPlay",
                    "@value": "269025044",
                    "@c:type": "GDK_KEY_AudioPlay",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "2148"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_AudioPreset",
                    "@value": "269025206",
                    "@c:type": "GDK_KEY_AudioPreset",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "2298"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_AudioPrev",
                    "@value": "269025046",
                    "@c:type": "GDK_KEY_AudioPrev",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "2150"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_AudioRaiseVolume",
                    "@value": "269025043",
                    "@c:type": "GDK_KEY_AudioRaiseVolume",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "2147"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_AudioRandomPlay",
                    "@value": "269025177",
                    "@c:type": "GDK_KEY_AudioRandomPlay",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "2275"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_AudioRecord",
                    "@value": "269025052",
                    "@c:type": "GDK_KEY_AudioRecord",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "2156"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_AudioRepeat",
                    "@value": "269025176",
                    "@c:type": "GDK_KEY_AudioRepeat",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "2274"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_AudioRewind",
                    "@value": "269025086",
                    "@c:type": "GDK_KEY_AudioRewind",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "2190"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_AudioStop",
                    "@value": "269025045",
                    "@c:type": "GDK_KEY_AudioStop",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "2149"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Away",
                    "@value": "269025165",
                    "@c:type": "GDK_KEY_Away",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "2263"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_B",
                    "@value": "66",
                    "@c:type": "GDK_KEY_B",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "420"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Babovedot",
                    "@value": "16784898",
                    "@c:type": "GDK_KEY_Babovedot",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "701"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Back",
                    "@value": "269025062",
                    "@c:type": "GDK_KEY_Back",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "2166"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_BackForward",
                    "@value": "269025087",
                    "@c:type": "GDK_KEY_BackForward",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "2191"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_BackSpace",
                    "@value": "65288",
                    "@c:type": "GDK_KEY_BackSpace",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "40"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Battery",
                    "@value": "269025171",
                    "@c:type": "GDK_KEY_Battery",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "2269"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Begin",
                    "@value": "65368",
                    "@c:type": "GDK_KEY_Begin",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "85"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Blue",
                    "@value": "269025190",
                    "@c:type": "GDK_KEY_Blue",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "2288"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Bluetooth",
                    "@value": "269025172",
                    "@c:type": "GDK_KEY_Bluetooth",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "2270"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Book",
                    "@value": "269025106",
                    "@c:type": "GDK_KEY_Book",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "2210"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_BounceKeys_Enable",
                    "@value": "65140",
                    "@c:type": "GDK_KEY_BounceKeys_Enable",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "312"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Break",
                    "@value": "65387",
                    "@c:type": "GDK_KEY_Break",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "96"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_BrightnessAdjust",
                    "@value": "269025083",
                    "@c:type": "GDK_KEY_BrightnessAdjust",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "2187"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Byelorussian_SHORTU",
                    "@value": "1726",
                    "@c:type": "GDK_KEY_Byelorussian_SHORTU",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "959"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Byelorussian_shortu",
                    "@value": "1710",
                    "@c:type": "GDK_KEY_Byelorussian_shortu",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "936"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_C",
                    "@value": "67",
                    "@c:type": "GDK_KEY_C",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "421"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_CD",
                    "@value": "269025107",
                    "@c:type": "GDK_KEY_CD",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "2211"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_CH",
                    "@value": "65186",
                    "@c:type": "GDK_KEY_CH",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "351"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_C_H",
                    "@value": "65189",
                    "@c:type": "GDK_KEY_C_H",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "354"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_C_h",
                    "@value": "65188",
                    "@c:type": "GDK_KEY_C_h",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "353"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Cabovedot",
                    "@value": "709",
                    "@c:type": "GDK_KEY_Cabovedot",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "649"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Cacute",
                    "@value": "454",
                    "@c:type": "GDK_KEY_Cacute",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "609"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Calculator",
                    "@value": "269025053",
                    "@c:type": "GDK_KEY_Calculator",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "2157"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Calendar",
                    "@value": "269025056",
                    "@c:type": "GDK_KEY_Calendar",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "2160"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Cancel",
                    "@value": "65385",
                    "@c:type": "GDK_KEY_Cancel",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "94"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Caps_Lock",
                    "@value": "65509",
                    "@c:type": "GDK_KEY_Caps_Lock",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "201"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Ccaron",
                    "@value": "456",
                    "@c:type": "GDK_KEY_Ccaron",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "610"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Ccedilla",
                    "@value": "199",
                    "@c:type": "GDK_KEY_Ccedilla",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "521"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Ccircumflex",
                    "@value": "710",
                    "@c:type": "GDK_KEY_Ccircumflex",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "650"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Ch",
                    "@value": "65185",
                    "@c:type": "GDK_KEY_Ch",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "350"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Clear",
                    "@value": "65291",
                    "@c:type": "GDK_KEY_Clear",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "43"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_ClearGrab",
                    "@value": "269024801",
                    "@c:type": "GDK_KEY_ClearGrab",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "2312"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Close",
                    "@value": "269025110",
                    "@c:type": "GDK_KEY_Close",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "2213"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Codeinput",
                    "@value": "65335",
                    "@c:type": "GDK_KEY_Codeinput",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "51"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_ColonSign",
                    "@value": "16785569",
                    "@c:type": "GDK_KEY_ColonSign",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1748"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Community",
                    "@value": "269025085",
                    "@c:type": "GDK_KEY_Community",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "2189"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_ContrastAdjust",
                    "@value": "269025058",
                    "@c:type": "GDK_KEY_ContrastAdjust",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "2162"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Control_L",
                    "@value": "65507",
                    "@c:type": "GDK_KEY_Control_L",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "199"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Control_R",
                    "@value": "65508",
                    "@c:type": "GDK_KEY_Control_R",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "200"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Copy",
                    "@value": "269025111",
                    "@c:type": "GDK_KEY_Copy",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "2214"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_CruzeiroSign",
                    "@value": "16785570",
                    "@c:type": "GDK_KEY_CruzeiroSign",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1749"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Cut",
                    "@value": "269025112",
                    "@c:type": "GDK_KEY_Cut",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "2215"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_CycleAngle",
                    "@value": "269025180",
                    "@c:type": "GDK_KEY_CycleAngle",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "2278"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Cyrillic_A",
                    "@value": "1761",
                    "@c:type": "GDK_KEY_Cyrillic_A",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "995"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Cyrillic_BE",
                    "@value": "1762",
                    "@c:type": "GDK_KEY_Cyrillic_BE",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "996"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Cyrillic_CHE",
                    "@value": "1790",
                    "@c:type": "GDK_KEY_Cyrillic_CHE",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1024"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Cyrillic_CHE_descender",
                    "@value": "16778422",
                    "@c:type": "GDK_KEY_Cyrillic_CHE_descender",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "903"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Cyrillic_CHE_vertstroke",
                    "@value": "16778424",
                    "@c:type": "GDK_KEY_Cyrillic_CHE_vertstroke",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "905"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Cyrillic_DE",
                    "@value": "1764",
                    "@c:type": "GDK_KEY_Cyrillic_DE",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "998"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Cyrillic_DZHE",
                    "@value": "1727",
                    "@c:type": "GDK_KEY_Cyrillic_DZHE",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "960"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Cyrillic_E",
                    "@value": "1788",
                    "@c:type": "GDK_KEY_Cyrillic_E",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1022"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Cyrillic_EF",
                    "@value": "1766",
                    "@c:type": "GDK_KEY_Cyrillic_EF",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1000"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Cyrillic_EL",
                    "@value": "1772",
                    "@c:type": "GDK_KEY_Cyrillic_EL",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1006"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Cyrillic_EM",
                    "@value": "1773",
                    "@c:type": "GDK_KEY_Cyrillic_EM",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1007"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Cyrillic_EN",
                    "@value": "1774",
                    "@c:type": "GDK_KEY_Cyrillic_EN",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1008"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Cyrillic_EN_descender",
                    "@value": "16778402",
                    "@c:type": "GDK_KEY_Cyrillic_EN_descender",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "895"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Cyrillic_ER",
                    "@value": "1778",
                    "@c:type": "GDK_KEY_Cyrillic_ER",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1012"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Cyrillic_ES",
                    "@value": "1779",
                    "@c:type": "GDK_KEY_Cyrillic_ES",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1013"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Cyrillic_GHE",
                    "@value": "1767",
                    "@c:type": "GDK_KEY_Cyrillic_GHE",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1001"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Cyrillic_GHE_bar",
                    "@value": "16778386",
                    "@c:type": "GDK_KEY_Cyrillic_GHE_bar",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "887"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Cyrillic_HA",
                    "@value": "1768",
                    "@c:type": "GDK_KEY_Cyrillic_HA",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1002"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Cyrillic_HARDSIGN",
                    "@value": "1791",
                    "@c:type": "GDK_KEY_Cyrillic_HARDSIGN",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1025"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Cyrillic_HA_descender",
                    "@value": "16778418",
                    "@c:type": "GDK_KEY_Cyrillic_HA_descender",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "901"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Cyrillic_I",
                    "@value": "1769",
                    "@c:type": "GDK_KEY_Cyrillic_I",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1003"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Cyrillic_IE",
                    "@value": "1765",
                    "@c:type": "GDK_KEY_Cyrillic_IE",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "999"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Cyrillic_IO",
                    "@value": "1715",
                    "@c:type": "GDK_KEY_Cyrillic_IO",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "942"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Cyrillic_I_macron",
                    "@value": "16778466",
                    "@c:type": "GDK_KEY_Cyrillic_I_macron",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "911"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Cyrillic_JE",
                    "@value": "1720",
                    "@c:type": "GDK_KEY_Cyrillic_JE",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "950"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Cyrillic_KA",
                    "@value": "1771",
                    "@c:type": "GDK_KEY_Cyrillic_KA",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1005"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Cyrillic_KA_descender",
                    "@value": "16778394",
                    "@c:type": "GDK_KEY_Cyrillic_KA_descender",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "891"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Cyrillic_KA_vertstroke",
                    "@value": "16778396",
                    "@c:type": "GDK_KEY_Cyrillic_KA_vertstroke",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "893"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Cyrillic_LJE",
                    "@value": "1721",
                    "@c:type": "GDK_KEY_Cyrillic_LJE",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "952"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Cyrillic_NJE",
                    "@value": "1722",
                    "@c:type": "GDK_KEY_Cyrillic_NJE",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "954"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Cyrillic_O",
                    "@value": "1775",
                    "@c:type": "GDK_KEY_Cyrillic_O",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1009"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Cyrillic_O_bar",
                    "@value": "16778472",
                    "@c:type": "GDK_KEY_Cyrillic_O_bar",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "913"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Cyrillic_PE",
                    "@value": "1776",
                    "@c:type": "GDK_KEY_Cyrillic_PE",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1010"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Cyrillic_SCHWA",
                    "@value": "16778456",
                    "@c:type": "GDK_KEY_Cyrillic_SCHWA",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "909"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Cyrillic_SHA",
                    "@value": "1787",
                    "@c:type": "GDK_KEY_Cyrillic_SHA",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1021"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Cyrillic_SHCHA",
                    "@value": "1789",
                    "@c:type": "GDK_KEY_Cyrillic_SHCHA",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1023"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Cyrillic_SHHA",
                    "@value": "16778426",
                    "@c:type": "GDK_KEY_Cyrillic_SHHA",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "907"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Cyrillic_SHORTI",
                    "@value": "1770",
                    "@c:type": "GDK_KEY_Cyrillic_SHORTI",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1004"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Cyrillic_SOFTSIGN",
                    "@value": "1784",
                    "@c:type": "GDK_KEY_Cyrillic_SOFTSIGN",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1018"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Cyrillic_TE",
                    "@value": "1780",
                    "@c:type": "GDK_KEY_Cyrillic_TE",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1014"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Cyrillic_TSE",
                    "@value": "1763",
                    "@c:type": "GDK_KEY_Cyrillic_TSE",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "997"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Cyrillic_U",
                    "@value": "1781",
                    "@c:type": "GDK_KEY_Cyrillic_U",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1015"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Cyrillic_U_macron",
                    "@value": "16778478",
                    "@c:type": "GDK_KEY_Cyrillic_U_macron",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "915"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Cyrillic_U_straight",
                    "@value": "16778414",
                    "@c:type": "GDK_KEY_Cyrillic_U_straight",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "897"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Cyrillic_U_straight_bar",
                    "@value": "16778416",
                    "@c:type": "GDK_KEY_Cyrillic_U_straight_bar",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "899"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Cyrillic_VE",
                    "@value": "1783",
                    "@c:type": "GDK_KEY_Cyrillic_VE",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1017"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Cyrillic_YA",
                    "@value": "1777",
                    "@c:type": "GDK_KEY_Cyrillic_YA",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1011"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Cyrillic_YERU",
                    "@value": "1785",
                    "@c:type": "GDK_KEY_Cyrillic_YERU",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1019"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Cyrillic_YU",
                    "@value": "1760",
                    "@c:type": "GDK_KEY_Cyrillic_YU",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "994"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Cyrillic_ZE",
                    "@value": "1786",
                    "@c:type": "GDK_KEY_Cyrillic_ZE",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1020"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Cyrillic_ZHE",
                    "@value": "1782",
                    "@c:type": "GDK_KEY_Cyrillic_ZHE",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1016"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Cyrillic_ZHE_descender",
                    "@value": "16778390",
                    "@c:type": "GDK_KEY_Cyrillic_ZHE_descender",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "889"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Cyrillic_a",
                    "@value": "1729",
                    "@c:type": "GDK_KEY_Cyrillic_a",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "963"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Cyrillic_be",
                    "@value": "1730",
                    "@c:type": "GDK_KEY_Cyrillic_be",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "964"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Cyrillic_che",
                    "@value": "1758",
                    "@c:type": "GDK_KEY_Cyrillic_che",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "992"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Cyrillic_che_descender",
                    "@value": "16778423",
                    "@c:type": "GDK_KEY_Cyrillic_che_descender",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "904"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Cyrillic_che_vertstroke",
                    "@value": "16778425",
                    "@c:type": "GDK_KEY_Cyrillic_che_vertstroke",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "906"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Cyrillic_de",
                    "@value": "1732",
                    "@c:type": "GDK_KEY_Cyrillic_de",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "966"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Cyrillic_dzhe",
                    "@value": "1711",
                    "@c:type": "GDK_KEY_Cyrillic_dzhe",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "937"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Cyrillic_e",
                    "@value": "1756",
                    "@c:type": "GDK_KEY_Cyrillic_e",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "990"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Cyrillic_ef",
                    "@value": "1734",
                    "@c:type": "GDK_KEY_Cyrillic_ef",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "968"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Cyrillic_el",
                    "@value": "1740",
                    "@c:type": "GDK_KEY_Cyrillic_el",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "974"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Cyrillic_em",
                    "@value": "1741",
                    "@c:type": "GDK_KEY_Cyrillic_em",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "975"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Cyrillic_en",
                    "@value": "1742",
                    "@c:type": "GDK_KEY_Cyrillic_en",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "976"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Cyrillic_en_descender",
                    "@value": "16778403",
                    "@c:type": "GDK_KEY_Cyrillic_en_descender",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "896"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Cyrillic_er",
                    "@value": "1746",
                    "@c:type": "GDK_KEY_Cyrillic_er",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "980"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Cyrillic_es",
                    "@value": "1747",
                    "@c:type": "GDK_KEY_Cyrillic_es",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "981"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Cyrillic_ghe",
                    "@value": "1735",
                    "@c:type": "GDK_KEY_Cyrillic_ghe",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "969"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Cyrillic_ghe_bar",
                    "@value": "16778387",
                    "@c:type": "GDK_KEY_Cyrillic_ghe_bar",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "888"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Cyrillic_ha",
                    "@value": "1736",
                    "@c:type": "GDK_KEY_Cyrillic_ha",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "970"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Cyrillic_ha_descender",
                    "@value": "16778419",
                    "@c:type": "GDK_KEY_Cyrillic_ha_descender",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "902"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Cyrillic_hardsign",
                    "@value": "1759",
                    "@c:type": "GDK_KEY_Cyrillic_hardsign",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "993"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Cyrillic_i",
                    "@value": "1737",
                    "@c:type": "GDK_KEY_Cyrillic_i",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "971"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Cyrillic_i_macron",
                    "@value": "16778467",
                    "@c:type": "GDK_KEY_Cyrillic_i_macron",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "912"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Cyrillic_ie",
                    "@value": "1733",
                    "@c:type": "GDK_KEY_Cyrillic_ie",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "967"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Cyrillic_io",
                    "@value": "1699",
                    "@c:type": "GDK_KEY_Cyrillic_io",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "919"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Cyrillic_je",
                    "@value": "1704",
                    "@c:type": "GDK_KEY_Cyrillic_je",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "927"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Cyrillic_ka",
                    "@value": "1739",
                    "@c:type": "GDK_KEY_Cyrillic_ka",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "973"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Cyrillic_ka_descender",
                    "@value": "16778395",
                    "@c:type": "GDK_KEY_Cyrillic_ka_descender",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "892"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Cyrillic_ka_vertstroke",
                    "@value": "16778397",
                    "@c:type": "GDK_KEY_Cyrillic_ka_vertstroke",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "894"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Cyrillic_lje",
                    "@value": "1705",
                    "@c:type": "GDK_KEY_Cyrillic_lje",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "929"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Cyrillic_nje",
                    "@value": "1706",
                    "@c:type": "GDK_KEY_Cyrillic_nje",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "931"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Cyrillic_o",
                    "@value": "1743",
                    "@c:type": "GDK_KEY_Cyrillic_o",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "977"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Cyrillic_o_bar",
                    "@value": "16778473",
                    "@c:type": "GDK_KEY_Cyrillic_o_bar",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "914"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Cyrillic_pe",
                    "@value": "1744",
                    "@c:type": "GDK_KEY_Cyrillic_pe",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "978"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Cyrillic_schwa",
                    "@value": "16778457",
                    "@c:type": "GDK_KEY_Cyrillic_schwa",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "910"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Cyrillic_sha",
                    "@value": "1755",
                    "@c:type": "GDK_KEY_Cyrillic_sha",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "989"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Cyrillic_shcha",
                    "@value": "1757",
                    "@c:type": "GDK_KEY_Cyrillic_shcha",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "991"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Cyrillic_shha",
                    "@value": "16778427",
                    "@c:type": "GDK_KEY_Cyrillic_shha",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "908"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Cyrillic_shorti",
                    "@value": "1738",
                    "@c:type": "GDK_KEY_Cyrillic_shorti",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "972"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Cyrillic_softsign",
                    "@value": "1752",
                    "@c:type": "GDK_KEY_Cyrillic_softsign",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "986"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Cyrillic_te",
                    "@value": "1748",
                    "@c:type": "GDK_KEY_Cyrillic_te",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "982"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Cyrillic_tse",
                    "@value": "1731",
                    "@c:type": "GDK_KEY_Cyrillic_tse",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "965"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Cyrillic_u",
                    "@value": "1749",
                    "@c:type": "GDK_KEY_Cyrillic_u",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "983"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Cyrillic_u_macron",
                    "@value": "16778479",
                    "@c:type": "GDK_KEY_Cyrillic_u_macron",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "916"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Cyrillic_u_straight",
                    "@value": "16778415",
                    "@c:type": "GDK_KEY_Cyrillic_u_straight",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "898"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Cyrillic_u_straight_bar",
                    "@value": "16778417",
                    "@c:type": "GDK_KEY_Cyrillic_u_straight_bar",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "900"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Cyrillic_ve",
                    "@value": "1751",
                    "@c:type": "GDK_KEY_Cyrillic_ve",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "985"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Cyrillic_ya",
                    "@value": "1745",
                    "@c:type": "GDK_KEY_Cyrillic_ya",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "979"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Cyrillic_yeru",
                    "@value": "1753",
                    "@c:type": "GDK_KEY_Cyrillic_yeru",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "987"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Cyrillic_yu",
                    "@value": "1728",
                    "@c:type": "GDK_KEY_Cyrillic_yu",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "962"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Cyrillic_ze",
                    "@value": "1754",
                    "@c:type": "GDK_KEY_Cyrillic_ze",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "988"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Cyrillic_zhe",
                    "@value": "1750",
                    "@c:type": "GDK_KEY_Cyrillic_zhe",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "984"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Cyrillic_zhe_descender",
                    "@value": "16778391",
                    "@c:type": "GDK_KEY_Cyrillic_zhe_descender",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "890"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_D",
                    "@value": "68",
                    "@c:type": "GDK_KEY_D",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "422"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_DOS",
                    "@value": "269025114",
                    "@c:type": "GDK_KEY_DOS",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "2217"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Dabovedot",
                    "@value": "16784906",
                    "@c:type": "GDK_KEY_Dabovedot",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "703"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Dcaron",
                    "@value": "463",
                    "@c:type": "GDK_KEY_Dcaron",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "613"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Delete",
                    "@value": "65535",
                    "@c:type": "GDK_KEY_Delete",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "49"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Display",
                    "@value": "269025113",
                    "@c:type": "GDK_KEY_Display",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "2216"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Documents",
                    "@value": "269025115",
                    "@c:type": "GDK_KEY_Documents",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "2218"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_DongSign",
                    "@value": "16785579",
                    "@c:type": "GDK_KEY_DongSign",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1758"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Down",
                    "@value": "65364",
                    "@c:type": "GDK_KEY_Down",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "79"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Dstroke",
                    "@value": "464",
                    "@c:type": "GDK_KEY_Dstroke",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "614"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_E",
                    "@value": "69",
                    "@c:type": "GDK_KEY_E",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "423"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_ENG",
                    "@value": "957",
                    "@c:type": "GDK_KEY_ENG",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "675"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_ETH",
                    "@value": "208",
                    "@c:type": "GDK_KEY_ETH",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "530"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_EZH",
                    "@value": "16777655",
                    "@c:type": "GDK_KEY_EZH",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1651"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Eabovedot",
                    "@value": "972",
                    "@c:type": "GDK_KEY_Eabovedot",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "679"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Eacute",
                    "@value": "201",
                    "@c:type": "GDK_KEY_Eacute",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "523"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Ebelowdot",
                    "@value": "16785080",
                    "@c:type": "GDK_KEY_Ebelowdot",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1679"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Ecaron",
                    "@value": "460",
                    "@c:type": "GDK_KEY_Ecaron",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "612"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Ecircumflex",
                    "@value": "202",
                    "@c:type": "GDK_KEY_Ecircumflex",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "524"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Ecircumflexacute",
                    "@value": "16785086",
                    "@c:type": "GDK_KEY_Ecircumflexacute",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1685"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Ecircumflexbelowdot",
                    "@value": "16785094",
                    "@c:type": "GDK_KEY_Ecircumflexbelowdot",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1693"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Ecircumflexgrave",
                    "@value": "16785088",
                    "@c:type": "GDK_KEY_Ecircumflexgrave",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1687"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Ecircumflexhook",
                    "@value": "16785090",
                    "@c:type": "GDK_KEY_Ecircumflexhook",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1689"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Ecircumflextilde",
                    "@value": "16785092",
                    "@c:type": "GDK_KEY_Ecircumflextilde",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1691"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_EcuSign",
                    "@value": "16785568",
                    "@c:type": "GDK_KEY_EcuSign",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1747"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Ediaeresis",
                    "@value": "203",
                    "@c:type": "GDK_KEY_Ediaeresis",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "525"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Egrave",
                    "@value": "200",
                    "@c:type": "GDK_KEY_Egrave",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "522"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Ehook",
                    "@value": "16785082",
                    "@c:type": "GDK_KEY_Ehook",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1681"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Eisu_Shift",
                    "@value": "65327",
                    "@c:type": "GDK_KEY_Eisu_Shift",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "70"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Eisu_toggle",
                    "@value": "65328",
                    "@c:type": "GDK_KEY_Eisu_toggle",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "71"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Eject",
                    "@value": "269025068",
                    "@c:type": "GDK_KEY_Eject",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "2172"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Emacron",
                    "@value": "938",
                    "@c:type": "GDK_KEY_Emacron",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "666"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_End",
                    "@value": "65367",
                    "@c:type": "GDK_KEY_End",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "84"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Eogonek",
                    "@value": "458",
                    "@c:type": "GDK_KEY_Eogonek",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "611"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Escape",
                    "@value": "65307",
                    "@c:type": "GDK_KEY_Escape",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "48"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Eth",
                    "@value": "208",
                    "@c:type": "GDK_KEY_Eth",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "531"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Etilde",
                    "@value": "16785084",
                    "@c:type": "GDK_KEY_Etilde",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1683"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_EuroSign",
                    "@value": "8364",
                    "@c:type": "GDK_KEY_EuroSign",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1759"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Excel",
                    "@value": "269025116",
                    "@c:type": "GDK_KEY_Excel",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "2219"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Execute",
                    "@value": "65378",
                    "@c:type": "GDK_KEY_Execute",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "88"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Explorer",
                    "@value": "269025117",
                    "@c:type": "GDK_KEY_Explorer",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "2220"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_F",
                    "@value": "70",
                    "@c:type": "GDK_KEY_F",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "424"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_F1",
                    "@value": "65470",
                    "@c:type": "GDK_KEY_F1",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "137"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_F10",
                    "@value": "65479",
                    "@c:type": "GDK_KEY_F10",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "146"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_F11",
                    "@value": "65480",
                    "@c:type": "GDK_KEY_F11",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "147"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_F12",
                    "@value": "65481",
                    "@c:type": "GDK_KEY_F12",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "149"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_F13",
                    "@value": "65482",
                    "@c:type": "GDK_KEY_F13",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "151"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_F14",
                    "@value": "65483",
                    "@c:type": "GDK_KEY_F14",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "153"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_F15",
                    "@value": "65484",
                    "@c:type": "GDK_KEY_F15",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "155"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_F16",
                    "@value": "65485",
                    "@c:type": "GDK_KEY_F16",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "157"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_F17",
                    "@value": "65486",
                    "@c:type": "GDK_KEY_F17",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "159"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_F18",
                    "@value": "65487",
                    "@c:type": "GDK_KEY_F18",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "161"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_F19",
                    "@value": "65488",
                    "@c:type": "GDK_KEY_F19",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "163"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_F2",
                    "@value": "65471",
                    "@c:type": "GDK_KEY_F2",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "138"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_F20",
                    "@value": "65489",
                    "@c:type": "GDK_KEY_F20",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "165"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_F21",
                    "@value": "65490",
                    "@c:type": "GDK_KEY_F21",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "167"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_F22",
                    "@value": "65491",
                    "@c:type": "GDK_KEY_F22",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "169"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_F23",
                    "@value": "65492",
                    "@c:type": "GDK_KEY_F23",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "171"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_F24",
                    "@value": "65493",
                    "@c:type": "GDK_KEY_F24",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "173"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_F25",
                    "@value": "65494",
                    "@c:type": "GDK_KEY_F25",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "175"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_F26",
                    "@value": "65495",
                    "@c:type": "GDK_KEY_F26",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "177"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_F27",
                    "@value": "65496",
                    "@c:type": "GDK_KEY_F27",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "179"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_F28",
                    "@value": "65497",
                    "@c:type": "GDK_KEY_F28",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "181"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_F29",
                    "@value": "65498",
                    "@c:type": "GDK_KEY_F29",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "183"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_F3",
                    "@value": "65472",
                    "@c:type": "GDK_KEY_F3",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "139"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_F30",
                    "@value": "65499",
                    "@c:type": "GDK_KEY_F30",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "185"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_F31",
                    "@value": "65500",
                    "@c:type": "GDK_KEY_F31",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "187"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_F32",
                    "@value": "65501",
                    "@c:type": "GDK_KEY_F32",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "189"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_F33",
                    "@value": "65502",
                    "@c:type": "GDK_KEY_F33",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "191"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_F34",
                    "@value": "65503",
                    "@c:type": "GDK_KEY_F34",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "193"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_F35",
                    "@value": "65504",
                    "@c:type": "GDK_KEY_F35",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "195"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_F4",
                    "@value": "65473",
                    "@c:type": "GDK_KEY_F4",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "140"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_F5",
                    "@value": "65474",
                    "@c:type": "GDK_KEY_F5",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "141"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_F6",
                    "@value": "65475",
                    "@c:type": "GDK_KEY_F6",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "142"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_F7",
                    "@value": "65476",
                    "@c:type": "GDK_KEY_F7",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "143"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_F8",
                    "@value": "65477",
                    "@c:type": "GDK_KEY_F8",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "144"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_F9",
                    "@value": "65478",
                    "@c:type": "GDK_KEY_F9",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "145"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_FFrancSign",
                    "@value": "16785571",
                    "@c:type": "GDK_KEY_FFrancSign",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1750"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Fabovedot",
                    "@value": "16784926",
                    "@c:type": "GDK_KEY_Fabovedot",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "705"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Farsi_0",
                    "@value": "16778992",
                    "@c:type": "GDK_KEY_Farsi_0",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "796"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Farsi_1",
                    "@value": "16778993",
                    "@c:type": "GDK_KEY_Farsi_1",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "797"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Farsi_2",
                    "@value": "16778994",
                    "@c:type": "GDK_KEY_Farsi_2",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "798"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Farsi_3",
                    "@value": "16778995",
                    "@c:type": "GDK_KEY_Farsi_3",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "799"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Farsi_4",
                    "@value": "16778996",
                    "@c:type": "GDK_KEY_Farsi_4",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "800"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Farsi_5",
                    "@value": "16778997",
                    "@c:type": "GDK_KEY_Farsi_5",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "801"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Farsi_6",
                    "@value": "16778998",
                    "@c:type": "GDK_KEY_Farsi_6",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "802"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Farsi_7",
                    "@value": "16778999",
                    "@c:type": "GDK_KEY_Farsi_7",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "803"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Farsi_8",
                    "@value": "16779000",
                    "@c:type": "GDK_KEY_Farsi_8",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "804"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Farsi_9",
                    "@value": "16779001",
                    "@c:type": "GDK_KEY_Farsi_9",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "805"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Farsi_yeh",
                    "@value": "16778956",
                    "@c:type": "GDK_KEY_Farsi_yeh",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "882"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Favorites",
                    "@value": "269025072",
                    "@c:type": "GDK_KEY_Favorites",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "2176"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Finance",
                    "@value": "269025084",
                    "@c:type": "GDK_KEY_Finance",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "2188"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Find",
                    "@value": "65384",
                    "@c:type": "GDK_KEY_Find",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "93"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_First_Virtual_Screen",
                    "@value": "65232",
                    "@c:type": "GDK_KEY_First_Virtual_Screen",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "303"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Forward",
                    "@value": "269025063",
                    "@c:type": "GDK_KEY_Forward",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "2167"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_FrameBack",
                    "@value": "269025181",
                    "@c:type": "GDK_KEY_FrameBack",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "2279"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_FrameForward",
                    "@value": "269025182",
                    "@c:type": "GDK_KEY_FrameForward",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "2280"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_G",
                    "@value": "71",
                    "@c:type": "GDK_KEY_G",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "425"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Gabovedot",
                    "@value": "725",
                    "@c:type": "GDK_KEY_Gabovedot",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "651"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Game",
                    "@value": "269025118",
                    "@c:type": "GDK_KEY_Game",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "2221"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Gbreve",
                    "@value": "683",
                    "@c:type": "GDK_KEY_Gbreve",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "642"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Gcaron",
                    "@value": "16777702",
                    "@c:type": "GDK_KEY_Gcaron",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1640"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Gcedilla",
                    "@value": "939",
                    "@c:type": "GDK_KEY_Gcedilla",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "667"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Gcircumflex",
                    "@value": "728",
                    "@c:type": "GDK_KEY_Gcircumflex",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "652"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Georgian_an",
                    "@value": "16781520",
                    "@c:type": "GDK_KEY_Georgian_an",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1598"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Georgian_ban",
                    "@value": "16781521",
                    "@c:type": "GDK_KEY_Georgian_ban",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1599"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Georgian_can",
                    "@value": "16781546",
                    "@c:type": "GDK_KEY_Georgian_can",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1624"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Georgian_char",
                    "@value": "16781549",
                    "@c:type": "GDK_KEY_Georgian_char",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1627"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Georgian_chin",
                    "@value": "16781545",
                    "@c:type": "GDK_KEY_Georgian_chin",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1623"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Georgian_cil",
                    "@value": "16781548",
                    "@c:type": "GDK_KEY_Georgian_cil",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1626"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Georgian_don",
                    "@value": "16781523",
                    "@c:type": "GDK_KEY_Georgian_don",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1601"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Georgian_en",
                    "@value": "16781524",
                    "@c:type": "GDK_KEY_Georgian_en",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1602"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Georgian_fi",
                    "@value": "16781558",
                    "@c:type": "GDK_KEY_Georgian_fi",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1636"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Georgian_gan",
                    "@value": "16781522",
                    "@c:type": "GDK_KEY_Georgian_gan",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1600"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Georgian_ghan",
                    "@value": "16781542",
                    "@c:type": "GDK_KEY_Georgian_ghan",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1620"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Georgian_hae",
                    "@value": "16781552",
                    "@c:type": "GDK_KEY_Georgian_hae",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1630"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Georgian_har",
                    "@value": "16781556",
                    "@c:type": "GDK_KEY_Georgian_har",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1634"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Georgian_he",
                    "@value": "16781553",
                    "@c:type": "GDK_KEY_Georgian_he",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1631"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Georgian_hie",
                    "@value": "16781554",
                    "@c:type": "GDK_KEY_Georgian_hie",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1632"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Georgian_hoe",
                    "@value": "16781557",
                    "@c:type": "GDK_KEY_Georgian_hoe",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1635"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Georgian_in",
                    "@value": "16781528",
                    "@c:type": "GDK_KEY_Georgian_in",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1606"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Georgian_jhan",
                    "@value": "16781551",
                    "@c:type": "GDK_KEY_Georgian_jhan",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1629"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Georgian_jil",
                    "@value": "16781547",
                    "@c:type": "GDK_KEY_Georgian_jil",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1625"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Georgian_kan",
                    "@value": "16781529",
                    "@c:type": "GDK_KEY_Georgian_kan",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1607"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Georgian_khar",
                    "@value": "16781541",
                    "@c:type": "GDK_KEY_Georgian_khar",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1619"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Georgian_las",
                    "@value": "16781530",
                    "@c:type": "GDK_KEY_Georgian_las",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1608"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Georgian_man",
                    "@value": "16781531",
                    "@c:type": "GDK_KEY_Georgian_man",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1609"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Georgian_nar",
                    "@value": "16781532",
                    "@c:type": "GDK_KEY_Georgian_nar",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1610"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Georgian_on",
                    "@value": "16781533",
                    "@c:type": "GDK_KEY_Georgian_on",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1611"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Georgian_par",
                    "@value": "16781534",
                    "@c:type": "GDK_KEY_Georgian_par",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1612"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Georgian_phar",
                    "@value": "16781540",
                    "@c:type": "GDK_KEY_Georgian_phar",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1618"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Georgian_qar",
                    "@value": "16781543",
                    "@c:type": "GDK_KEY_Georgian_qar",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1621"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Georgian_rae",
                    "@value": "16781536",
                    "@c:type": "GDK_KEY_Georgian_rae",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1614"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Georgian_san",
                    "@value": "16781537",
                    "@c:type": "GDK_KEY_Georgian_san",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1615"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Georgian_shin",
                    "@value": "16781544",
                    "@c:type": "GDK_KEY_Georgian_shin",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1622"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Georgian_tan",
                    "@value": "16781527",
                    "@c:type": "GDK_KEY_Georgian_tan",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1605"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Georgian_tar",
                    "@value": "16781538",
                    "@c:type": "GDK_KEY_Georgian_tar",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1616"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Georgian_un",
                    "@value": "16781539",
                    "@c:type": "GDK_KEY_Georgian_un",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1617"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Georgian_vin",
                    "@value": "16781525",
                    "@c:type": "GDK_KEY_Georgian_vin",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1603"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Georgian_we",
                    "@value": "16781555",
                    "@c:type": "GDK_KEY_Georgian_we",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1633"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Georgian_xan",
                    "@value": "16781550",
                    "@c:type": "GDK_KEY_Georgian_xan",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1628"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Georgian_zen",
                    "@value": "16781526",
                    "@c:type": "GDK_KEY_Georgian_zen",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1604"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Georgian_zhar",
                    "@value": "16781535",
                    "@c:type": "GDK_KEY_Georgian_zhar",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1613"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Go",
                    "@value": "269025119",
                    "@c:type": "GDK_KEY_Go",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "2222"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Greek_ALPHA",
                    "@value": "1985",
                    "@c:type": "GDK_KEY_Greek_ALPHA",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1049"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Greek_ALPHAaccent",
                    "@value": "1953",
                    "@c:type": "GDK_KEY_Greek_ALPHAaccent",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1026"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Greek_BETA",
                    "@value": "1986",
                    "@c:type": "GDK_KEY_Greek_BETA",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1050"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Greek_CHI",
                    "@value": "2007",
                    "@c:type": "GDK_KEY_Greek_CHI",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1071"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Greek_DELTA",
                    "@value": "1988",
                    "@c:type": "GDK_KEY_Greek_DELTA",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1052"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Greek_EPSILON",
                    "@value": "1989",
                    "@c:type": "GDK_KEY_Greek_EPSILON",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1053"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Greek_EPSILONaccent",
                    "@value": "1954",
                    "@c:type": "GDK_KEY_Greek_EPSILONaccent",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1027"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Greek_ETA",
                    "@value": "1991",
                    "@c:type": "GDK_KEY_Greek_ETA",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1055"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Greek_ETAaccent",
                    "@value": "1955",
                    "@c:type": "GDK_KEY_Greek_ETAaccent",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1028"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Greek_GAMMA",
                    "@value": "1987",
                    "@c:type": "GDK_KEY_Greek_GAMMA",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1051"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Greek_IOTA",
                    "@value": "1993",
                    "@c:type": "GDK_KEY_Greek_IOTA",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1057"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Greek_IOTAaccent",
                    "@value": "1956",
                    "@c:type": "GDK_KEY_Greek_IOTAaccent",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1029"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Greek_IOTAdiaeresis",
                    "@value": "1957",
                    "@c:type": "GDK_KEY_Greek_IOTAdiaeresis",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1031"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Greek_IOTAdieresis",
                    "@value": "1957",
                    "@c:type": "GDK_KEY_Greek_IOTAdieresis",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1030"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Greek_KAPPA",
                    "@value": "1994",
                    "@c:type": "GDK_KEY_Greek_KAPPA",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1058"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Greek_LAMBDA",
                    "@value": "1995",
                    "@c:type": "GDK_KEY_Greek_LAMBDA",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1060"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Greek_LAMDA",
                    "@value": "1995",
                    "@c:type": "GDK_KEY_Greek_LAMDA",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1059"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Greek_MU",
                    "@value": "1996",
                    "@c:type": "GDK_KEY_Greek_MU",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1061"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Greek_NU",
                    "@value": "1997",
                    "@c:type": "GDK_KEY_Greek_NU",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1062"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Greek_OMEGA",
                    "@value": "2009",
                    "@c:type": "GDK_KEY_Greek_OMEGA",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1073"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Greek_OMEGAaccent",
                    "@value": "1963",
                    "@c:type": "GDK_KEY_Greek_OMEGAaccent",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1035"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Greek_OMICRON",
                    "@value": "1999",
                    "@c:type": "GDK_KEY_Greek_OMICRON",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1064"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Greek_OMICRONaccent",
                    "@value": "1959",
                    "@c:type": "GDK_KEY_Greek_OMICRONaccent",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1032"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Greek_PHI",
                    "@value": "2006",
                    "@c:type": "GDK_KEY_Greek_PHI",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1070"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Greek_PI",
                    "@value": "2000",
                    "@c:type": "GDK_KEY_Greek_PI",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1065"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Greek_PSI",
                    "@value": "2008",
                    "@c:type": "GDK_KEY_Greek_PSI",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1072"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Greek_RHO",
                    "@value": "2001",
                    "@c:type": "GDK_KEY_Greek_RHO",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1066"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Greek_SIGMA",
                    "@value": "2002",
                    "@c:type": "GDK_KEY_Greek_SIGMA",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1067"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Greek_TAU",
                    "@value": "2004",
                    "@c:type": "GDK_KEY_Greek_TAU",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1068"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Greek_THETA",
                    "@value": "1992",
                    "@c:type": "GDK_KEY_Greek_THETA",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1056"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Greek_UPSILON",
                    "@value": "2005",
                    "@c:type": "GDK_KEY_Greek_UPSILON",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1069"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Greek_UPSILONaccent",
                    "@value": "1960",
                    "@c:type": "GDK_KEY_Greek_UPSILONaccent",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1033"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Greek_UPSILONdieresis",
                    "@value": "1961",
                    "@c:type": "GDK_KEY_Greek_UPSILONdieresis",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1034"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Greek_XI",
                    "@value": "1998",
                    "@c:type": "GDK_KEY_Greek_XI",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1063"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Greek_ZETA",
                    "@value": "1990",
                    "@c:type": "GDK_KEY_Greek_ZETA",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1054"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Greek_accentdieresis",
                    "@value": "1966",
                    "@c:type": "GDK_KEY_Greek_accentdieresis",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1036"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Greek_alpha",
                    "@value": "2017",
                    "@c:type": "GDK_KEY_Greek_alpha",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1074"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Greek_alphaaccent",
                    "@value": "1969",
                    "@c:type": "GDK_KEY_Greek_alphaaccent",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1038"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Greek_beta",
                    "@value": "2018",
                    "@c:type": "GDK_KEY_Greek_beta",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1075"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Greek_chi",
                    "@value": "2039",
                    "@c:type": "GDK_KEY_Greek_chi",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1097"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Greek_delta",
                    "@value": "2020",
                    "@c:type": "GDK_KEY_Greek_delta",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1077"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Greek_epsilon",
                    "@value": "2021",
                    "@c:type": "GDK_KEY_Greek_epsilon",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1078"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Greek_epsilonaccent",
                    "@value": "1970",
                    "@c:type": "GDK_KEY_Greek_epsilonaccent",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1039"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Greek_eta",
                    "@value": "2023",
                    "@c:type": "GDK_KEY_Greek_eta",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1080"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Greek_etaaccent",
                    "@value": "1971",
                    "@c:type": "GDK_KEY_Greek_etaaccent",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1040"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Greek_finalsmallsigma",
                    "@value": "2035",
                    "@c:type": "GDK_KEY_Greek_finalsmallsigma",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1093"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Greek_gamma",
                    "@value": "2019",
                    "@c:type": "GDK_KEY_Greek_gamma",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1076"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Greek_horizbar",
                    "@value": "1967",
                    "@c:type": "GDK_KEY_Greek_horizbar",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1037"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Greek_iota",
                    "@value": "2025",
                    "@c:type": "GDK_KEY_Greek_iota",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1082"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Greek_iotaaccent",
                    "@value": "1972",
                    "@c:type": "GDK_KEY_Greek_iotaaccent",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1041"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Greek_iotaaccentdieresis",
                    "@value": "1974",
                    "@c:type": "GDK_KEY_Greek_iotaaccentdieresis",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1043"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Greek_iotadieresis",
                    "@value": "1973",
                    "@c:type": "GDK_KEY_Greek_iotadieresis",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1042"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Greek_kappa",
                    "@value": "2026",
                    "@c:type": "GDK_KEY_Greek_kappa",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1083"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Greek_lambda",
                    "@value": "2027",
                    "@c:type": "GDK_KEY_Greek_lambda",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1085"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Greek_lamda",
                    "@value": "2027",
                    "@c:type": "GDK_KEY_Greek_lamda",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1084"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Greek_mu",
                    "@value": "2028",
                    "@c:type": "GDK_KEY_Greek_mu",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1086"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Greek_nu",
                    "@value": "2029",
                    "@c:type": "GDK_KEY_Greek_nu",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1087"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Greek_omega",
                    "@value": "2041",
                    "@c:type": "GDK_KEY_Greek_omega",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1099"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Greek_omegaaccent",
                    "@value": "1979",
                    "@c:type": "GDK_KEY_Greek_omegaaccent",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1048"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Greek_omicron",
                    "@value": "2031",
                    "@c:type": "GDK_KEY_Greek_omicron",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1089"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Greek_omicronaccent",
                    "@value": "1975",
                    "@c:type": "GDK_KEY_Greek_omicronaccent",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1044"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Greek_phi",
                    "@value": "2038",
                    "@c:type": "GDK_KEY_Greek_phi",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1096"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Greek_pi",
                    "@value": "2032",
                    "@c:type": "GDK_KEY_Greek_pi",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1090"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Greek_psi",
                    "@value": "2040",
                    "@c:type": "GDK_KEY_Greek_psi",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1098"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Greek_rho",
                    "@value": "2033",
                    "@c:type": "GDK_KEY_Greek_rho",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1091"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Greek_sigma",
                    "@value": "2034",
                    "@c:type": "GDK_KEY_Greek_sigma",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1092"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Greek_switch",
                    "@value": "65406",
                    "@c:type": "GDK_KEY_Greek_switch",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1100"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Greek_tau",
                    "@value": "2036",
                    "@c:type": "GDK_KEY_Greek_tau",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1094"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Greek_theta",
                    "@value": "2024",
                    "@c:type": "GDK_KEY_Greek_theta",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1081"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Greek_upsilon",
                    "@value": "2037",
                    "@c:type": "GDK_KEY_Greek_upsilon",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1095"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Greek_upsilonaccent",
                    "@value": "1976",
                    "@c:type": "GDK_KEY_Greek_upsilonaccent",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1045"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Greek_upsilonaccentdieresis",
                    "@value": "1978",
                    "@c:type": "GDK_KEY_Greek_upsilonaccentdieresis",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1047"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Greek_upsilondieresis",
                    "@value": "1977",
                    "@c:type": "GDK_KEY_Greek_upsilondieresis",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1046"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Greek_xi",
                    "@value": "2030",
                    "@c:type": "GDK_KEY_Greek_xi",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1088"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Greek_zeta",
                    "@value": "2022",
                    "@c:type": "GDK_KEY_Greek_zeta",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1079"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Green",
                    "@value": "269025188",
                    "@c:type": "GDK_KEY_Green",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "2286"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_H",
                    "@value": "72",
                    "@c:type": "GDK_KEY_H",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "426"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Hangul",
                    "@value": "65329",
                    "@c:type": "GDK_KEY_Hangul",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1401"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Hangul_A",
                    "@value": "3775",
                    "@c:type": "GDK_KEY_Hangul_A",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1447"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Hangul_AE",
                    "@value": "3776",
                    "@c:type": "GDK_KEY_Hangul_AE",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1448"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Hangul_AraeA",
                    "@value": "3830",
                    "@c:type": "GDK_KEY_Hangul_AraeA",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1502"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Hangul_AraeAE",
                    "@value": "3831",
                    "@c:type": "GDK_KEY_Hangul_AraeAE",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1503"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Hangul_Banja",
                    "@value": "65337",
                    "@c:type": "GDK_KEY_Hangul_Banja",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1409"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Hangul_Cieuc",
                    "@value": "3770",
                    "@c:type": "GDK_KEY_Hangul_Cieuc",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1442"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Hangul_Codeinput",
                    "@value": "65335",
                    "@c:type": "GDK_KEY_Hangul_Codeinput",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1407"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Hangul_Dikeud",
                    "@value": "3751",
                    "@c:type": "GDK_KEY_Hangul_Dikeud",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1423"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Hangul_E",
                    "@value": "3780",
                    "@c:type": "GDK_KEY_Hangul_E",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1452"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Hangul_EO",
                    "@value": "3779",
                    "@c:type": "GDK_KEY_Hangul_EO",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1451"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Hangul_EU",
                    "@value": "3793",
                    "@c:type": "GDK_KEY_Hangul_EU",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1465"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Hangul_End",
                    "@value": "65331",
                    "@c:type": "GDK_KEY_Hangul_End",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1403"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Hangul_Hanja",
                    "@value": "65332",
                    "@c:type": "GDK_KEY_Hangul_Hanja",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1404"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Hangul_Hieuh",
                    "@value": "3774",
                    "@c:type": "GDK_KEY_Hangul_Hieuh",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1446"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Hangul_I",
                    "@value": "3795",
                    "@c:type": "GDK_KEY_Hangul_I",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1467"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Hangul_Ieung",
                    "@value": "3767",
                    "@c:type": "GDK_KEY_Hangul_Ieung",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1439"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Hangul_J_Cieuc",
                    "@value": "3818",
                    "@c:type": "GDK_KEY_Hangul_J_Cieuc",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1490"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Hangul_J_Dikeud",
                    "@value": "3802",
                    "@c:type": "GDK_KEY_Hangul_J_Dikeud",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1474"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Hangul_J_Hieuh",
                    "@value": "3822",
                    "@c:type": "GDK_KEY_Hangul_J_Hieuh",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1494"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Hangul_J_Ieung",
                    "@value": "3816",
                    "@c:type": "GDK_KEY_Hangul_J_Ieung",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1488"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Hangul_J_Jieuj",
                    "@value": "3817",
                    "@c:type": "GDK_KEY_Hangul_J_Jieuj",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1489"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Hangul_J_Khieuq",
                    "@value": "3819",
                    "@c:type": "GDK_KEY_Hangul_J_Khieuq",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1491"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Hangul_J_Kiyeog",
                    "@value": "3796",
                    "@c:type": "GDK_KEY_Hangul_J_Kiyeog",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1468"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Hangul_J_KiyeogSios",
                    "@value": "3798",
                    "@c:type": "GDK_KEY_Hangul_J_KiyeogSios",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1470"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Hangul_J_KkogjiDalrinIeung",
                    "@value": "3833",
                    "@c:type": "GDK_KEY_Hangul_J_KkogjiDalrinIeung",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1505"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Hangul_J_Mieum",
                    "@value": "3811",
                    "@c:type": "GDK_KEY_Hangul_J_Mieum",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1483"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Hangul_J_Nieun",
                    "@value": "3799",
                    "@c:type": "GDK_KEY_Hangul_J_Nieun",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1471"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Hangul_J_NieunHieuh",
                    "@value": "3801",
                    "@c:type": "GDK_KEY_Hangul_J_NieunHieuh",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1473"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Hangul_J_NieunJieuj",
                    "@value": "3800",
                    "@c:type": "GDK_KEY_Hangul_J_NieunJieuj",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1472"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Hangul_J_PanSios",
                    "@value": "3832",
                    "@c:type": "GDK_KEY_Hangul_J_PanSios",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1504"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Hangul_J_Phieuf",
                    "@value": "3821",
                    "@c:type": "GDK_KEY_Hangul_J_Phieuf",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1493"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Hangul_J_Pieub",
                    "@value": "3812",
                    "@c:type": "GDK_KEY_Hangul_J_Pieub",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1484"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Hangul_J_PieubSios",
                    "@value": "3813",
                    "@c:type": "GDK_KEY_Hangul_J_PieubSios",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1485"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Hangul_J_Rieul",
                    "@value": "3803",
                    "@c:type": "GDK_KEY_Hangul_J_Rieul",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1475"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Hangul_J_RieulHieuh",
                    "@value": "3810",
                    "@c:type": "GDK_KEY_Hangul_J_RieulHieuh",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1482"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Hangul_J_RieulKiyeog",
                    "@value": "3804",
                    "@c:type": "GDK_KEY_Hangul_J_RieulKiyeog",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1476"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Hangul_J_RieulMieum",
                    "@value": "3805",
                    "@c:type": "GDK_KEY_Hangul_J_RieulMieum",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1477"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Hangul_J_RieulPhieuf",
                    "@value": "3809",
                    "@c:type": "GDK_KEY_Hangul_J_RieulPhieuf",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1481"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Hangul_J_RieulPieub",
                    "@value": "3806",
                    "@c:type": "GDK_KEY_Hangul_J_RieulPieub",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1478"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Hangul_J_RieulSios",
                    "@value": "3807",
                    "@c:type": "GDK_KEY_Hangul_J_RieulSios",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1479"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Hangul_J_RieulTieut",
                    "@value": "3808",
                    "@c:type": "GDK_KEY_Hangul_J_RieulTieut",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1480"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Hangul_J_Sios",
                    "@value": "3814",
                    "@c:type": "GDK_KEY_Hangul_J_Sios",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1486"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Hangul_J_SsangKiyeog",
                    "@value": "3797",
                    "@c:type": "GDK_KEY_Hangul_J_SsangKiyeog",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1469"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Hangul_J_SsangSios",
                    "@value": "3815",
                    "@c:type": "GDK_KEY_Hangul_J_SsangSios",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1487"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Hangul_J_Tieut",
                    "@value": "3820",
                    "@c:type": "GDK_KEY_Hangul_J_Tieut",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1492"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Hangul_J_YeorinHieuh",
                    "@value": "3834",
                    "@c:type": "GDK_KEY_Hangul_J_YeorinHieuh",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1506"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Hangul_Jamo",
                    "@value": "65333",
                    "@c:type": "GDK_KEY_Hangul_Jamo",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1405"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Hangul_Jeonja",
                    "@value": "65336",
                    "@c:type": "GDK_KEY_Hangul_Jeonja",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1408"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Hangul_Jieuj",
                    "@value": "3768",
                    "@c:type": "GDK_KEY_Hangul_Jieuj",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1440"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Hangul_Khieuq",
                    "@value": "3771",
                    "@c:type": "GDK_KEY_Hangul_Khieuq",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1443"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Hangul_Kiyeog",
                    "@value": "3745",
                    "@c:type": "GDK_KEY_Hangul_Kiyeog",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1417"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Hangul_KiyeogSios",
                    "@value": "3747",
                    "@c:type": "GDK_KEY_Hangul_KiyeogSios",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1419"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Hangul_KkogjiDalrinIeung",
                    "@value": "3827",
                    "@c:type": "GDK_KEY_Hangul_KkogjiDalrinIeung",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1499"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Hangul_Mieum",
                    "@value": "3761",
                    "@c:type": "GDK_KEY_Hangul_Mieum",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1433"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Hangul_MultipleCandidate",
                    "@value": "65341",
                    "@c:type": "GDK_KEY_Hangul_MultipleCandidate",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1413"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Hangul_Nieun",
                    "@value": "3748",
                    "@c:type": "GDK_KEY_Hangul_Nieun",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1420"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Hangul_NieunHieuh",
                    "@value": "3750",
                    "@c:type": "GDK_KEY_Hangul_NieunHieuh",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1422"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Hangul_NieunJieuj",
                    "@value": "3749",
                    "@c:type": "GDK_KEY_Hangul_NieunJieuj",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1421"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Hangul_O",
                    "@value": "3783",
                    "@c:type": "GDK_KEY_Hangul_O",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1455"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Hangul_OE",
                    "@value": "3786",
                    "@c:type": "GDK_KEY_Hangul_OE",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1458"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Hangul_PanSios",
                    "@value": "3826",
                    "@c:type": "GDK_KEY_Hangul_PanSios",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1498"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Hangul_Phieuf",
                    "@value": "3773",
                    "@c:type": "GDK_KEY_Hangul_Phieuf",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1445"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Hangul_Pieub",
                    "@value": "3762",
                    "@c:type": "GDK_KEY_Hangul_Pieub",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1434"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Hangul_PieubSios",
                    "@value": "3764",
                    "@c:type": "GDK_KEY_Hangul_PieubSios",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1436"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Hangul_PostHanja",
                    "@value": "65339",
                    "@c:type": "GDK_KEY_Hangul_PostHanja",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1411"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Hangul_PreHanja",
                    "@value": "65338",
                    "@c:type": "GDK_KEY_Hangul_PreHanja",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1410"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Hangul_PreviousCandidate",
                    "@value": "65342",
                    "@c:type": "GDK_KEY_Hangul_PreviousCandidate",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1414"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Hangul_Rieul",
                    "@value": "3753",
                    "@c:type": "GDK_KEY_Hangul_Rieul",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1425"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Hangul_RieulHieuh",
                    "@value": "3760",
                    "@c:type": "GDK_KEY_Hangul_RieulHieuh",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1432"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Hangul_RieulKiyeog",
                    "@value": "3754",
                    "@c:type": "GDK_KEY_Hangul_RieulKiyeog",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1426"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Hangul_RieulMieum",
                    "@value": "3755",
                    "@c:type": "GDK_KEY_Hangul_RieulMieum",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1427"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Hangul_RieulPhieuf",
                    "@value": "3759",
                    "@c:type": "GDK_KEY_Hangul_RieulPhieuf",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1431"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Hangul_RieulPieub",
                    "@value": "3756",
                    "@c:type": "GDK_KEY_Hangul_RieulPieub",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1428"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Hangul_RieulSios",
                    "@value": "3757",
                    "@c:type": "GDK_KEY_Hangul_RieulSios",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1429"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Hangul_RieulTieut",
                    "@value": "3758",
                    "@c:type": "GDK_KEY_Hangul_RieulTieut",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1430"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Hangul_RieulYeorinHieuh",
                    "@value": "3823",
                    "@c:type": "GDK_KEY_Hangul_RieulYeorinHieuh",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1495"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Hangul_Romaja",
                    "@value": "65334",
                    "@c:type": "GDK_KEY_Hangul_Romaja",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1406"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Hangul_SingleCandidate",
                    "@value": "65340",
                    "@c:type": "GDK_KEY_Hangul_SingleCandidate",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1412"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Hangul_Sios",
                    "@value": "3765",
                    "@c:type": "GDK_KEY_Hangul_Sios",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1437"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Hangul_Special",
                    "@value": "65343",
                    "@c:type": "GDK_KEY_Hangul_Special",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1415"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Hangul_SsangDikeud",
                    "@value": "3752",
                    "@c:type": "GDK_KEY_Hangul_SsangDikeud",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1424"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Hangul_SsangJieuj",
                    "@value": "3769",
                    "@c:type": "GDK_KEY_Hangul_SsangJieuj",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1441"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Hangul_SsangKiyeog",
                    "@value": "3746",
                    "@c:type": "GDK_KEY_Hangul_SsangKiyeog",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1418"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Hangul_SsangPieub",
                    "@value": "3763",
                    "@c:type": "GDK_KEY_Hangul_SsangPieub",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1435"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Hangul_SsangSios",
                    "@value": "3766",
                    "@c:type": "GDK_KEY_Hangul_SsangSios",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1438"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Hangul_Start",
                    "@value": "65330",
                    "@c:type": "GDK_KEY_Hangul_Start",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1402"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Hangul_SunkyeongeumMieum",
                    "@value": "3824",
                    "@c:type": "GDK_KEY_Hangul_SunkyeongeumMieum",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1496"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Hangul_SunkyeongeumPhieuf",
                    "@value": "3828",
                    "@c:type": "GDK_KEY_Hangul_SunkyeongeumPhieuf",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1500"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Hangul_SunkyeongeumPieub",
                    "@value": "3825",
                    "@c:type": "GDK_KEY_Hangul_SunkyeongeumPieub",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1497"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Hangul_Tieut",
                    "@value": "3772",
                    "@c:type": "GDK_KEY_Hangul_Tieut",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1444"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Hangul_U",
                    "@value": "3788",
                    "@c:type": "GDK_KEY_Hangul_U",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1460"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Hangul_WA",
                    "@value": "3784",
                    "@c:type": "GDK_KEY_Hangul_WA",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1456"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Hangul_WAE",
                    "@value": "3785",
                    "@c:type": "GDK_KEY_Hangul_WAE",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1457"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Hangul_WE",
                    "@value": "3790",
                    "@c:type": "GDK_KEY_Hangul_WE",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1462"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Hangul_WEO",
                    "@value": "3789",
                    "@c:type": "GDK_KEY_Hangul_WEO",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1461"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Hangul_WI",
                    "@value": "3791",
                    "@c:type": "GDK_KEY_Hangul_WI",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1463"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Hangul_YA",
                    "@value": "3777",
                    "@c:type": "GDK_KEY_Hangul_YA",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1449"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Hangul_YAE",
                    "@value": "3778",
                    "@c:type": "GDK_KEY_Hangul_YAE",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1450"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Hangul_YE",
                    "@value": "3782",
                    "@c:type": "GDK_KEY_Hangul_YE",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1454"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Hangul_YEO",
                    "@value": "3781",
                    "@c:type": "GDK_KEY_Hangul_YEO",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1453"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Hangul_YI",
                    "@value": "3794",
                    "@c:type": "GDK_KEY_Hangul_YI",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1466"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Hangul_YO",
                    "@value": "3787",
                    "@c:type": "GDK_KEY_Hangul_YO",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1459"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Hangul_YU",
                    "@value": "3792",
                    "@c:type": "GDK_KEY_Hangul_YU",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1464"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Hangul_YeorinHieuh",
                    "@value": "3829",
                    "@c:type": "GDK_KEY_Hangul_YeorinHieuh",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1501"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Hangul_switch",
                    "@value": "65406",
                    "@c:type": "GDK_KEY_Hangul_switch",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1416"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Hankaku",
                    "@value": "65321",
                    "@c:type": "GDK_KEY_Hankaku",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "64"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Hcircumflex",
                    "@value": "678",
                    "@c:type": "GDK_KEY_Hcircumflex",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "640"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Hebrew_switch",
                    "@value": "65406",
                    "@c:type": "GDK_KEY_Hebrew_switch",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1316"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Help",
                    "@value": "65386",
                    "@c:type": "GDK_KEY_Help",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "95"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Henkan",
                    "@value": "65315",
                    "@c:type": "GDK_KEY_Henkan",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "58"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Henkan_Mode",
                    "@value": "65315",
                    "@c:type": "GDK_KEY_Henkan_Mode",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "57"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Hibernate",
                    "@value": "269025192",
                    "@c:type": "GDK_KEY_Hibernate",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "2290"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Hiragana",
                    "@value": "65317",
                    "@c:type": "GDK_KEY_Hiragana",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "60"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Hiragana_Katakana",
                    "@value": "65319",
                    "@c:type": "GDK_KEY_Hiragana_Katakana",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "62"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_History",
                    "@value": "269025079",
                    "@c:type": "GDK_KEY_History",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "2183"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Home",
                    "@value": "65360",
                    "@c:type": "GDK_KEY_Home",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "75"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_HomePage",
                    "@value": "269025048",
                    "@c:type": "GDK_KEY_HomePage",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "2152"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_HotLinks",
                    "@value": "269025082",
                    "@c:type": "GDK_KEY_HotLinks",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "2186"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Hstroke",
                    "@value": "673",
                    "@c:type": "GDK_KEY_Hstroke",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "639"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Hyper_L",
                    "@value": "65517",
                    "@c:type": "GDK_KEY_Hyper_L",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "209"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Hyper_R",
                    "@value": "65518",
                    "@c:type": "GDK_KEY_Hyper_R",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "210"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_I",
                    "@value": "73",
                    "@c:type": "GDK_KEY_I",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "427"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_ISO_Center_Object",
                    "@value": "65075",
                    "@c:type": "GDK_KEY_ISO_Center_Object",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "249"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_ISO_Continuous_Underline",
                    "@value": "65072",
                    "@c:type": "GDK_KEY_ISO_Continuous_Underline",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "246"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_ISO_Discontinuous_Underline",
                    "@value": "65073",
                    "@c:type": "GDK_KEY_ISO_Discontinuous_Underline",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "247"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_ISO_Emphasize",
                    "@value": "65074",
                    "@c:type": "GDK_KEY_ISO_Emphasize",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "248"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_ISO_Enter",
                    "@value": "65076",
                    "@c:type": "GDK_KEY_ISO_Enter",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "250"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_ISO_Fast_Cursor_Down",
                    "@value": "65071",
                    "@c:type": "GDK_KEY_ISO_Fast_Cursor_Down",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "245"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_ISO_Fast_Cursor_Left",
                    "@value": "65068",
                    "@c:type": "GDK_KEY_ISO_Fast_Cursor_Left",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "242"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_ISO_Fast_Cursor_Right",
                    "@value": "65069",
                    "@c:type": "GDK_KEY_ISO_Fast_Cursor_Right",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "243"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_ISO_Fast_Cursor_Up",
                    "@value": "65070",
                    "@c:type": "GDK_KEY_ISO_Fast_Cursor_Up",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "244"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_ISO_First_Group",
                    "@value": "65036",
                    "@c:type": "GDK_KEY_ISO_First_Group",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "226"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_ISO_First_Group_Lock",
                    "@value": "65037",
                    "@c:type": "GDK_KEY_ISO_First_Group_Lock",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "227"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_ISO_Group_Latch",
                    "@value": "65030",
                    "@c:type": "GDK_KEY_ISO_Group_Latch",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "220"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_ISO_Group_Lock",
                    "@value": "65031",
                    "@c:type": "GDK_KEY_ISO_Group_Lock",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "221"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_ISO_Group_Shift",
                    "@value": "65406",
                    "@c:type": "GDK_KEY_ISO_Group_Shift",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "219"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_ISO_Last_Group",
                    "@value": "65038",
                    "@c:type": "GDK_KEY_ISO_Last_Group",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "228"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_ISO_Last_Group_Lock",
                    "@value": "65039",
                    "@c:type": "GDK_KEY_ISO_Last_Group_Lock",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "229"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_ISO_Left_Tab",
                    "@value": "65056",
                    "@c:type": "GDK_KEY_ISO_Left_Tab",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "230"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_ISO_Level2_Latch",
                    "@value": "65026",
                    "@c:type": "GDK_KEY_ISO_Level2_Latch",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "212"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_ISO_Level3_Latch",
                    "@value": "65028",
                    "@c:type": "GDK_KEY_ISO_Level3_Latch",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "214"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_ISO_Level3_Lock",
                    "@value": "65029",
                    "@c:type": "GDK_KEY_ISO_Level3_Lock",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "215"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_ISO_Level3_Shift",
                    "@value": "65027",
                    "@c:type": "GDK_KEY_ISO_Level3_Shift",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "213"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_ISO_Level5_Latch",
                    "@value": "65042",
                    "@c:type": "GDK_KEY_ISO_Level5_Latch",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "217"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_ISO_Level5_Lock",
                    "@value": "65043",
                    "@c:type": "GDK_KEY_ISO_Level5_Lock",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "218"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_ISO_Level5_Shift",
                    "@value": "65041",
                    "@c:type": "GDK_KEY_ISO_Level5_Shift",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "216"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_ISO_Lock",
                    "@value": "65025",
                    "@c:type": "GDK_KEY_ISO_Lock",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "211"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_ISO_Move_Line_Down",
                    "@value": "65058",
                    "@c:type": "GDK_KEY_ISO_Move_Line_Down",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "232"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_ISO_Move_Line_Up",
                    "@value": "65057",
                    "@c:type": "GDK_KEY_ISO_Move_Line_Up",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "231"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_ISO_Next_Group",
                    "@value": "65032",
                    "@c:type": "GDK_KEY_ISO_Next_Group",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "222"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_ISO_Next_Group_Lock",
                    "@value": "65033",
                    "@c:type": "GDK_KEY_ISO_Next_Group_Lock",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "223"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_ISO_Partial_Line_Down",
                    "@value": "65060",
                    "@c:type": "GDK_KEY_ISO_Partial_Line_Down",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "234"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_ISO_Partial_Line_Up",
                    "@value": "65059",
                    "@c:type": "GDK_KEY_ISO_Partial_Line_Up",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "233"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_ISO_Partial_Space_Left",
                    "@value": "65061",
                    "@c:type": "GDK_KEY_ISO_Partial_Space_Left",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "235"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_ISO_Partial_Space_Right",
                    "@value": "65062",
                    "@c:type": "GDK_KEY_ISO_Partial_Space_Right",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "236"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_ISO_Prev_Group",
                    "@value": "65034",
                    "@c:type": "GDK_KEY_ISO_Prev_Group",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "224"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_ISO_Prev_Group_Lock",
                    "@value": "65035",
                    "@c:type": "GDK_KEY_ISO_Prev_Group_Lock",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "225"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_ISO_Release_Both_Margins",
                    "@value": "65067",
                    "@c:type": "GDK_KEY_ISO_Release_Both_Margins",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "241"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_ISO_Release_Margin_Left",
                    "@value": "65065",
                    "@c:type": "GDK_KEY_ISO_Release_Margin_Left",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "239"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_ISO_Release_Margin_Right",
                    "@value": "65066",
                    "@c:type": "GDK_KEY_ISO_Release_Margin_Right",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "240"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_ISO_Set_Margin_Left",
                    "@value": "65063",
                    "@c:type": "GDK_KEY_ISO_Set_Margin_Left",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "237"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_ISO_Set_Margin_Right",
                    "@value": "65064",
                    "@c:type": "GDK_KEY_ISO_Set_Margin_Right",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "238"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Iabovedot",
                    "@value": "681",
                    "@c:type": "GDK_KEY_Iabovedot",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "641"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Iacute",
                    "@value": "205",
                    "@c:type": "GDK_KEY_Iacute",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "527"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Ibelowdot",
                    "@value": "16785098",
                    "@c:type": "GDK_KEY_Ibelowdot",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1697"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Ibreve",
                    "@value": "16777516",
                    "@c:type": "GDK_KEY_Ibreve",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1638"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Icircumflex",
                    "@value": "206",
                    "@c:type": "GDK_KEY_Icircumflex",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "528"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Idiaeresis",
                    "@value": "207",
                    "@c:type": "GDK_KEY_Idiaeresis",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "529"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Igrave",
                    "@value": "204",
                    "@c:type": "GDK_KEY_Igrave",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "526"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Ihook",
                    "@value": "16785096",
                    "@c:type": "GDK_KEY_Ihook",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1695"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Imacron",
                    "@value": "975",
                    "@c:type": "GDK_KEY_Imacron",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "680"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Insert",
                    "@value": "65379",
                    "@c:type": "GDK_KEY_Insert",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "89"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Iogonek",
                    "@value": "967",
                    "@c:type": "GDK_KEY_Iogonek",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "678"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Itilde",
                    "@value": "933",
                    "@c:type": "GDK_KEY_Itilde",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "664"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_J",
                    "@value": "74",
                    "@c:type": "GDK_KEY_J",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "428"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Jcircumflex",
                    "@value": "684",
                    "@c:type": "GDK_KEY_Jcircumflex",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "643"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_K",
                    "@value": "75",
                    "@c:type": "GDK_KEY_K",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "429"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_KP_0",
                    "@value": "65456",
                    "@c:type": "GDK_KEY_KP_0",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "127"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_KP_1",
                    "@value": "65457",
                    "@c:type": "GDK_KEY_KP_1",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "128"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_KP_2",
                    "@value": "65458",
                    "@c:type": "GDK_KEY_KP_2",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "129"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_KP_3",
                    "@value": "65459",
                    "@c:type": "GDK_KEY_KP_3",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "130"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_KP_4",
                    "@value": "65460",
                    "@c:type": "GDK_KEY_KP_4",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "131"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_KP_5",
                    "@value": "65461",
                    "@c:type": "GDK_KEY_KP_5",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "132"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_KP_6",
                    "@value": "65462",
                    "@c:type": "GDK_KEY_KP_6",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "133"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_KP_7",
                    "@value": "65463",
                    "@c:type": "GDK_KEY_KP_7",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "134"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_KP_8",
                    "@value": "65464",
                    "@c:type": "GDK_KEY_KP_8",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "135"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_KP_9",
                    "@value": "65465",
                    "@c:type": "GDK_KEY_KP_9",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "136"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_KP_Add",
                    "@value": "65451",
                    "@c:type": "GDK_KEY_KP_Add",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "122"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_KP_Begin",
                    "@value": "65437",
                    "@c:type": "GDK_KEY_KP_Begin",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "117"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_KP_Decimal",
                    "@value": "65454",
                    "@c:type": "GDK_KEY_KP_Decimal",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "125"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_KP_Delete",
                    "@value": "65439",
                    "@c:type": "GDK_KEY_KP_Delete",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "119"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_KP_Divide",
                    "@value": "65455",
                    "@c:type": "GDK_KEY_KP_Divide",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "126"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_KP_Down",
                    "@value": "65433",
                    "@c:type": "GDK_KEY_KP_Down",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "111"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_KP_End",
                    "@value": "65436",
                    "@c:type": "GDK_KEY_KP_End",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "116"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_KP_Enter",
                    "@value": "65421",
                    "@c:type": "GDK_KEY_KP_Enter",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "102"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_KP_Equal",
                    "@value": "65469",
                    "@c:type": "GDK_KEY_KP_Equal",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "120"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_KP_F1",
                    "@value": "65425",
                    "@c:type": "GDK_KEY_KP_F1",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "103"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_KP_F2",
                    "@value": "65426",
                    "@c:type": "GDK_KEY_KP_F2",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "104"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_KP_F3",
                    "@value": "65427",
                    "@c:type": "GDK_KEY_KP_F3",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "105"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_KP_F4",
                    "@value": "65428",
                    "@c:type": "GDK_KEY_KP_F4",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "106"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_KP_Home",
                    "@value": "65429",
                    "@c:type": "GDK_KEY_KP_Home",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "107"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_KP_Insert",
                    "@value": "65438",
                    "@c:type": "GDK_KEY_KP_Insert",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "118"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_KP_Left",
                    "@value": "65430",
                    "@c:type": "GDK_KEY_KP_Left",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "108"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_KP_Multiply",
                    "@value": "65450",
                    "@c:type": "GDK_KEY_KP_Multiply",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "121"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_KP_Next",
                    "@value": "65435",
                    "@c:type": "GDK_KEY_KP_Next",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "114"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_KP_Page_Down",
                    "@value": "65435",
                    "@c:type": "GDK_KEY_KP_Page_Down",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "115"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_KP_Page_Up",
                    "@value": "65434",
                    "@c:type": "GDK_KEY_KP_Page_Up",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "113"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_KP_Prior",
                    "@value": "65434",
                    "@c:type": "GDK_KEY_KP_Prior",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "112"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_KP_Right",
                    "@value": "65432",
                    "@c:type": "GDK_KEY_KP_Right",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "110"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_KP_Separator",
                    "@value": "65452",
                    "@c:type": "GDK_KEY_KP_Separator",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "123"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_KP_Space",
                    "@value": "65408",
                    "@c:type": "GDK_KEY_KP_Space",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "100"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_KP_Subtract",
                    "@value": "65453",
                    "@c:type": "GDK_KEY_KP_Subtract",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "124"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_KP_Tab",
                    "@value": "65417",
                    "@c:type": "GDK_KEY_KP_Tab",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "101"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_KP_Up",
                    "@value": "65431",
                    "@c:type": "GDK_KEY_KP_Up",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "109"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Kana_Lock",
                    "@value": "65325",
                    "@c:type": "GDK_KEY_Kana_Lock",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "68"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Kana_Shift",
                    "@value": "65326",
                    "@c:type": "GDK_KEY_Kana_Shift",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "69"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Kanji",
                    "@value": "65313",
                    "@c:type": "GDK_KEY_Kanji",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "55"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Kanji_Bangou",
                    "@value": "65335",
                    "@c:type": "GDK_KEY_Kanji_Bangou",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "72"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Katakana",
                    "@value": "65318",
                    "@c:type": "GDK_KEY_Katakana",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "61"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_KbdBrightnessDown",
                    "@value": "269025030",
                    "@c:type": "GDK_KEY_KbdBrightnessDown",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "2143"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_KbdBrightnessUp",
                    "@value": "269025029",
                    "@c:type": "GDK_KEY_KbdBrightnessUp",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "2142"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_KbdLightOnOff",
                    "@value": "269025028",
                    "@c:type": "GDK_KEY_KbdLightOnOff",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "2141"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Kcedilla",
                    "@value": "979",
                    "@c:type": "GDK_KEY_Kcedilla",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "683"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Keyboard",
                    "@value": "269025203",
                    "@c:type": "GDK_KEY_Keyboard",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "2295"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Korean_Won",
                    "@value": "3839",
                    "@c:type": "GDK_KEY_Korean_Won",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1507"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_L",
                    "@value": "76",
                    "@c:type": "GDK_KEY_L",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "430"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_L1",
                    "@value": "65480",
                    "@c:type": "GDK_KEY_L1",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "148"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_L10",
                    "@value": "65489",
                    "@c:type": "GDK_KEY_L10",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "166"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_L2",
                    "@value": "65481",
                    "@c:type": "GDK_KEY_L2",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "150"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_L3",
                    "@value": "65482",
                    "@c:type": "GDK_KEY_L3",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "152"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_L4",
                    "@value": "65483",
                    "@c:type": "GDK_KEY_L4",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "154"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_L5",
                    "@value": "65484",
                    "@c:type": "GDK_KEY_L5",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "156"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_L6",
                    "@value": "65485",
                    "@c:type": "GDK_KEY_L6",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "158"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_L7",
                    "@value": "65486",
                    "@c:type": "GDK_KEY_L7",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "160"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_L8",
                    "@value": "65487",
                    "@c:type": "GDK_KEY_L8",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "162"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_L9",
                    "@value": "65488",
                    "@c:type": "GDK_KEY_L9",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "164"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Lacute",
                    "@value": "453",
                    "@c:type": "GDK_KEY_Lacute",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "608"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Last_Virtual_Screen",
                    "@value": "65236",
                    "@c:type": "GDK_KEY_Last_Virtual_Screen",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "306"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Launch0",
                    "@value": "269025088",
                    "@c:type": "GDK_KEY_Launch0",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "2192"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Launch1",
                    "@value": "269025089",
                    "@c:type": "GDK_KEY_Launch1",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "2193"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Launch2",
                    "@value": "269025090",
                    "@c:type": "GDK_KEY_Launch2",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "2194"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Launch3",
                    "@value": "269025091",
                    "@c:type": "GDK_KEY_Launch3",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "2195"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Launch4",
                    "@value": "269025092",
                    "@c:type": "GDK_KEY_Launch4",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "2196"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Launch5",
                    "@value": "269025093",
                    "@c:type": "GDK_KEY_Launch5",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "2197"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Launch6",
                    "@value": "269025094",
                    "@c:type": "GDK_KEY_Launch6",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "2198"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Launch7",
                    "@value": "269025095",
                    "@c:type": "GDK_KEY_Launch7",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "2199"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Launch8",
                    "@value": "269025096",
                    "@c:type": "GDK_KEY_Launch8",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "2200"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Launch9",
                    "@value": "269025097",
                    "@c:type": "GDK_KEY_Launch9",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "2201"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_LaunchA",
                    "@value": "269025098",
                    "@c:type": "GDK_KEY_LaunchA",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "2202"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_LaunchB",
                    "@value": "269025099",
                    "@c:type": "GDK_KEY_LaunchB",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "2203"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_LaunchC",
                    "@value": "269025100",
                    "@c:type": "GDK_KEY_LaunchC",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "2204"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_LaunchD",
                    "@value": "269025101",
                    "@c:type": "GDK_KEY_LaunchD",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "2205"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_LaunchE",
                    "@value": "269025102",
                    "@c:type": "GDK_KEY_LaunchE",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "2206"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_LaunchF",
                    "@value": "269025103",
                    "@c:type": "GDK_KEY_LaunchF",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "2207"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Lbelowdot",
                    "@value": "16784950",
                    "@c:type": "GDK_KEY_Lbelowdot",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1653"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Lcaron",
                    "@value": "421",
                    "@c:type": "GDK_KEY_Lcaron",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "585"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Lcedilla",
                    "@value": "934",
                    "@c:type": "GDK_KEY_Lcedilla",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "665"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Left",
                    "@value": "65361",
                    "@c:type": "GDK_KEY_Left",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "76"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_LightBulb",
                    "@value": "269025077",
                    "@c:type": "GDK_KEY_LightBulb",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "2181"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Linefeed",
                    "@value": "65290",
                    "@c:type": "GDK_KEY_Linefeed",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "42"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_LiraSign",
                    "@value": "16785572",
                    "@c:type": "GDK_KEY_LiraSign",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1751"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_LogGrabInfo",
                    "@value": "269024805",
                    "@c:type": "GDK_KEY_LogGrabInfo",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "2316"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_LogOff",
                    "@value": "269025121",
                    "@c:type": "GDK_KEY_LogOff",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "2224"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_LogWindowTree",
                    "@value": "269024804",
                    "@c:type": "GDK_KEY_LogWindowTree",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "2315"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Lstroke",
                    "@value": "419",
                    "@c:type": "GDK_KEY_Lstroke",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "584"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_M",
                    "@value": "77",
                    "@c:type": "GDK_KEY_M",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "431"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Mabovedot",
                    "@value": "16784960",
                    "@c:type": "GDK_KEY_Mabovedot",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "707"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Macedonia_DSE",
                    "@value": "1717",
                    "@c:type": "GDK_KEY_Macedonia_DSE",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "945"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Macedonia_GJE",
                    "@value": "1714",
                    "@c:type": "GDK_KEY_Macedonia_GJE",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "941"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Macedonia_KJE",
                    "@value": "1724",
                    "@c:type": "GDK_KEY_Macedonia_KJE",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "957"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Macedonia_dse",
                    "@value": "1701",
                    "@c:type": "GDK_KEY_Macedonia_dse",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "922"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Macedonia_gje",
                    "@value": "1698",
                    "@c:type": "GDK_KEY_Macedonia_gje",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "918"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Macedonia_kje",
                    "@value": "1708",
                    "@c:type": "GDK_KEY_Macedonia_kje",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "934"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Mae_Koho",
                    "@value": "65342",
                    "@c:type": "GDK_KEY_Mae_Koho",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "74"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Mail",
                    "@value": "269025049",
                    "@c:type": "GDK_KEY_Mail",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "2153"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_MailForward",
                    "@value": "269025168",
                    "@c:type": "GDK_KEY_MailForward",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "2266"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Market",
                    "@value": "269025122",
                    "@c:type": "GDK_KEY_Market",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "2225"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Massyo",
                    "@value": "65324",
                    "@c:type": "GDK_KEY_Massyo",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "67"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Meeting",
                    "@value": "269025123",
                    "@c:type": "GDK_KEY_Meeting",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "2226"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Memo",
                    "@value": "269025054",
                    "@c:type": "GDK_KEY_Memo",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "2158"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Menu",
                    "@value": "65383",
                    "@c:type": "GDK_KEY_Menu",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "92"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_MenuKB",
                    "@value": "269025125",
                    "@c:type": "GDK_KEY_MenuKB",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "2227"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_MenuPB",
                    "@value": "269025126",
                    "@c:type": "GDK_KEY_MenuPB",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "2228"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Messenger",
                    "@value": "269025166",
                    "@c:type": "GDK_KEY_Messenger",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "2264"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Meta_L",
                    "@value": "65511",
                    "@c:type": "GDK_KEY_Meta_L",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "203"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Meta_R",
                    "@value": "65512",
                    "@c:type": "GDK_KEY_Meta_R",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "204"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_MillSign",
                    "@value": "16785573",
                    "@c:type": "GDK_KEY_MillSign",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1752"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_ModeLock",
                    "@value": "269025025",
                    "@c:type": "GDK_KEY_ModeLock",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "2138"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Mode_switch",
                    "@value": "65406",
                    "@c:type": "GDK_KEY_Mode_switch",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "97"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_MonBrightnessDown",
                    "@value": "269025027",
                    "@c:type": "GDK_KEY_MonBrightnessDown",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "2140"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_MonBrightnessUp",
                    "@value": "269025026",
                    "@c:type": "GDK_KEY_MonBrightnessUp",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "2139"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_MouseKeys_Accel_Enable",
                    "@value": "65143",
                    "@c:type": "GDK_KEY_MouseKeys_Accel_Enable",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "315"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_MouseKeys_Enable",
                    "@value": "65142",
                    "@c:type": "GDK_KEY_MouseKeys_Enable",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "314"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Muhenkan",
                    "@value": "65314",
                    "@c:type": "GDK_KEY_Muhenkan",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "56"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Multi_key",
                    "@value": "65312",
                    "@c:type": "GDK_KEY_Multi_key",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "50"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_MultipleCandidate",
                    "@value": "65341",
                    "@c:type": "GDK_KEY_MultipleCandidate",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "53"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Music",
                    "@value": "269025170",
                    "@c:type": "GDK_KEY_Music",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "2268"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_MyComputer",
                    "@value": "269025075",
                    "@c:type": "GDK_KEY_MyComputer",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "2179"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_MySites",
                    "@value": "269025127",
                    "@c:type": "GDK_KEY_MySites",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "2229"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_N",
                    "@value": "78",
                    "@c:type": "GDK_KEY_N",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "432"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Nacute",
                    "@value": "465",
                    "@c:type": "GDK_KEY_Nacute",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "615"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_NairaSign",
                    "@value": "16785574",
                    "@c:type": "GDK_KEY_NairaSign",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1753"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Ncaron",
                    "@value": "466",
                    "@c:type": "GDK_KEY_Ncaron",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "616"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Ncedilla",
                    "@value": "977",
                    "@c:type": "GDK_KEY_Ncedilla",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "681"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_New",
                    "@value": "269025128",
                    "@c:type": "GDK_KEY_New",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "2230"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_NewSheqelSign",
                    "@value": "16785578",
                    "@c:type": "GDK_KEY_NewSheqelSign",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1757"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_News",
                    "@value": "269025129",
                    "@c:type": "GDK_KEY_News",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "2231"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Next",
                    "@value": "65366",
                    "@c:type": "GDK_KEY_Next",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "82"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Next_VMode",
                    "@value": "269024802",
                    "@c:type": "GDK_KEY_Next_VMode",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "2313"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Next_Virtual_Screen",
                    "@value": "65234",
                    "@c:type": "GDK_KEY_Next_Virtual_Screen",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "305"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Ntilde",
                    "@value": "209",
                    "@c:type": "GDK_KEY_Ntilde",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "532"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Num_Lock",
                    "@value": "65407",
                    "@c:type": "GDK_KEY_Num_Lock",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "99"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_O",
                    "@value": "79",
                    "@c:type": "GDK_KEY_O",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "433"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_OE",
                    "@value": "5052",
                    "@c:type": "GDK_KEY_OE",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "723"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Oacute",
                    "@value": "211",
                    "@c:type": "GDK_KEY_Oacute",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "534"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Obarred",
                    "@value": "16777631",
                    "@c:type": "GDK_KEY_Obarred",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1642"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Obelowdot",
                    "@value": "16785100",
                    "@c:type": "GDK_KEY_Obelowdot",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1699"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Ocaron",
                    "@value": "16777681",
                    "@c:type": "GDK_KEY_Ocaron",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1641"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Ocircumflex",
                    "@value": "212",
                    "@c:type": "GDK_KEY_Ocircumflex",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "535"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Ocircumflexacute",
                    "@value": "16785104",
                    "@c:type": "GDK_KEY_Ocircumflexacute",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1703"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Ocircumflexbelowdot",
                    "@value": "16785112",
                    "@c:type": "GDK_KEY_Ocircumflexbelowdot",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1711"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Ocircumflexgrave",
                    "@value": "16785106",
                    "@c:type": "GDK_KEY_Ocircumflexgrave",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1705"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Ocircumflexhook",
                    "@value": "16785108",
                    "@c:type": "GDK_KEY_Ocircumflexhook",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1707"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Ocircumflextilde",
                    "@value": "16785110",
                    "@c:type": "GDK_KEY_Ocircumflextilde",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1709"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Odiaeresis",
                    "@value": "214",
                    "@c:type": "GDK_KEY_Odiaeresis",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "537"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Odoubleacute",
                    "@value": "469",
                    "@c:type": "GDK_KEY_Odoubleacute",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "617"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_OfficeHome",
                    "@value": "269025130",
                    "@c:type": "GDK_KEY_OfficeHome",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "2232"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Ograve",
                    "@value": "210",
                    "@c:type": "GDK_KEY_Ograve",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "533"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Ohook",
                    "@value": "16785102",
                    "@c:type": "GDK_KEY_Ohook",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1701"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Ohorn",
                    "@value": "16777632",
                    "@c:type": "GDK_KEY_Ohorn",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1743"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Ohornacute",
                    "@value": "16785114",
                    "@c:type": "GDK_KEY_Ohornacute",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1713"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Ohornbelowdot",
                    "@value": "16785122",
                    "@c:type": "GDK_KEY_Ohornbelowdot",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1721"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Ohorngrave",
                    "@value": "16785116",
                    "@c:type": "GDK_KEY_Ohorngrave",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1715"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Ohornhook",
                    "@value": "16785118",
                    "@c:type": "GDK_KEY_Ohornhook",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1717"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Ohorntilde",
                    "@value": "16785120",
                    "@c:type": "GDK_KEY_Ohorntilde",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1719"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Omacron",
                    "@value": "978",
                    "@c:type": "GDK_KEY_Omacron",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "682"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Ooblique",
                    "@value": "216",
                    "@c:type": "GDK_KEY_Ooblique",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "540"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Open",
                    "@value": "269025131",
                    "@c:type": "GDK_KEY_Open",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "2233"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_OpenURL",
                    "@value": "269025080",
                    "@c:type": "GDK_KEY_OpenURL",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "2184"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Option",
                    "@value": "269025132",
                    "@c:type": "GDK_KEY_Option",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "2234"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Oslash",
                    "@value": "216",
                    "@c:type": "GDK_KEY_Oslash",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "539"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Otilde",
                    "@value": "213",
                    "@c:type": "GDK_KEY_Otilde",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "536"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Overlay1_Enable",
                    "@value": "65144",
                    "@c:type": "GDK_KEY_Overlay1_Enable",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "316"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Overlay2_Enable",
                    "@value": "65145",
                    "@c:type": "GDK_KEY_Overlay2_Enable",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "317"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_P",
                    "@value": "80",
                    "@c:type": "GDK_KEY_P",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "434"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Pabovedot",
                    "@value": "16784982",
                    "@c:type": "GDK_KEY_Pabovedot",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "709"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Page_Down",
                    "@value": "65366",
                    "@c:type": "GDK_KEY_Page_Down",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "83"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Page_Up",
                    "@value": "65365",
                    "@c:type": "GDK_KEY_Page_Up",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "81"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Paste",
                    "@value": "269025133",
                    "@c:type": "GDK_KEY_Paste",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "2235"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Pause",
                    "@value": "65299",
                    "@c:type": "GDK_KEY_Pause",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "45"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_PesetaSign",
                    "@value": "16785575",
                    "@c:type": "GDK_KEY_PesetaSign",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1754"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Phone",
                    "@value": "269025134",
                    "@c:type": "GDK_KEY_Phone",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "2236"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Pictures",
                    "@value": "269025169",
                    "@c:type": "GDK_KEY_Pictures",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "2267"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Pointer_Accelerate",
                    "@value": "65274",
                    "@c:type": "GDK_KEY_Pointer_Accelerate",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "346"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Pointer_Button1",
                    "@value": "65257",
                    "@c:type": "GDK_KEY_Pointer_Button1",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "328"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Pointer_Button2",
                    "@value": "65258",
                    "@c:type": "GDK_KEY_Pointer_Button2",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "329"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Pointer_Button3",
                    "@value": "65259",
                    "@c:type": "GDK_KEY_Pointer_Button3",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "330"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Pointer_Button4",
                    "@value": "65260",
                    "@c:type": "GDK_KEY_Pointer_Button4",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "331"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Pointer_Button5",
                    "@value": "65261",
                    "@c:type": "GDK_KEY_Pointer_Button5",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "332"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Pointer_Button_Dflt",
                    "@value": "65256",
                    "@c:type": "GDK_KEY_Pointer_Button_Dflt",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "327"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Pointer_DblClick1",
                    "@value": "65263",
                    "@c:type": "GDK_KEY_Pointer_DblClick1",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "334"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Pointer_DblClick2",
                    "@value": "65264",
                    "@c:type": "GDK_KEY_Pointer_DblClick2",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "335"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Pointer_DblClick3",
                    "@value": "65265",
                    "@c:type": "GDK_KEY_Pointer_DblClick3",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "336"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Pointer_DblClick4",
                    "@value": "65266",
                    "@c:type": "GDK_KEY_Pointer_DblClick4",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "337"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Pointer_DblClick5",
                    "@value": "65267",
                    "@c:type": "GDK_KEY_Pointer_DblClick5",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "338"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Pointer_DblClick_Dflt",
                    "@value": "65262",
                    "@c:type": "GDK_KEY_Pointer_DblClick_Dflt",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "333"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Pointer_DfltBtnNext",
                    "@value": "65275",
                    "@c:type": "GDK_KEY_Pointer_DfltBtnNext",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "347"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Pointer_DfltBtnPrev",
                    "@value": "65276",
                    "@c:type": "GDK_KEY_Pointer_DfltBtnPrev",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "348"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Pointer_Down",
                    "@value": "65251",
                    "@c:type": "GDK_KEY_Pointer_Down",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "322"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Pointer_DownLeft",
                    "@value": "65254",
                    "@c:type": "GDK_KEY_Pointer_DownLeft",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "325"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Pointer_DownRight",
                    "@value": "65255",
                    "@c:type": "GDK_KEY_Pointer_DownRight",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "326"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Pointer_Drag1",
                    "@value": "65269",
                    "@c:type": "GDK_KEY_Pointer_Drag1",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "340"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Pointer_Drag2",
                    "@value": "65270",
                    "@c:type": "GDK_KEY_Pointer_Drag2",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "341"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Pointer_Drag3",
                    "@value": "65271",
                    "@c:type": "GDK_KEY_Pointer_Drag3",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "342"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Pointer_Drag4",
                    "@value": "65272",
                    "@c:type": "GDK_KEY_Pointer_Drag4",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "343"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Pointer_Drag5",
                    "@value": "65277",
                    "@c:type": "GDK_KEY_Pointer_Drag5",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "344"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Pointer_Drag_Dflt",
                    "@value": "65268",
                    "@c:type": "GDK_KEY_Pointer_Drag_Dflt",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "339"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Pointer_EnableKeys",
                    "@value": "65273",
                    "@c:type": "GDK_KEY_Pointer_EnableKeys",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "345"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Pointer_Left",
                    "@value": "65248",
                    "@c:type": "GDK_KEY_Pointer_Left",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "319"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Pointer_Right",
                    "@value": "65249",
                    "@c:type": "GDK_KEY_Pointer_Right",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "320"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Pointer_Up",
                    "@value": "65250",
                    "@c:type": "GDK_KEY_Pointer_Up",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "321"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Pointer_UpLeft",
                    "@value": "65252",
                    "@c:type": "GDK_KEY_Pointer_UpLeft",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "323"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Pointer_UpRight",
                    "@value": "65253",
                    "@c:type": "GDK_KEY_Pointer_UpRight",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "324"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_PowerDown",
                    "@value": "269025057",
                    "@c:type": "GDK_KEY_PowerDown",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "2161"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_PowerOff",
                    "@value": "269025066",
                    "@c:type": "GDK_KEY_PowerOff",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "2170"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Prev_VMode",
                    "@value": "269024803",
                    "@c:type": "GDK_KEY_Prev_VMode",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "2314"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Prev_Virtual_Screen",
                    "@value": "65233",
                    "@c:type": "GDK_KEY_Prev_Virtual_Screen",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "304"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_PreviousCandidate",
                    "@value": "65342",
                    "@c:type": "GDK_KEY_PreviousCandidate",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "54"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Print",
                    "@value": "65377",
                    "@c:type": "GDK_KEY_Print",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "87"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Prior",
                    "@value": "65365",
                    "@c:type": "GDK_KEY_Prior",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "80"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Q",
                    "@value": "81",
                    "@c:type": "GDK_KEY_Q",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "435"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_R",
                    "@value": "82",
                    "@c:type": "GDK_KEY_R",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "436"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_R1",
                    "@value": "65490",
                    "@c:type": "GDK_KEY_R1",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "168"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_R10",
                    "@value": "65499",
                    "@c:type": "GDK_KEY_R10",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "186"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_R11",
                    "@value": "65500",
                    "@c:type": "GDK_KEY_R11",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "188"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_R12",
                    "@value": "65501",
                    "@c:type": "GDK_KEY_R12",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "190"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_R13",
                    "@value": "65502",
                    "@c:type": "GDK_KEY_R13",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "192"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_R14",
                    "@value": "65503",
                    "@c:type": "GDK_KEY_R14",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "194"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_R15",
                    "@value": "65504",
                    "@c:type": "GDK_KEY_R15",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "196"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_R2",
                    "@value": "65491",
                    "@c:type": "GDK_KEY_R2",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "170"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_R3",
                    "@value": "65492",
                    "@c:type": "GDK_KEY_R3",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "172"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_R4",
                    "@value": "65493",
                    "@c:type": "GDK_KEY_R4",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "174"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_R5",
                    "@value": "65494",
                    "@c:type": "GDK_KEY_R5",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "176"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_R6",
                    "@value": "65495",
                    "@c:type": "GDK_KEY_R6",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "178"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_R7",
                    "@value": "65496",
                    "@c:type": "GDK_KEY_R7",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "180"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_R8",
                    "@value": "65497",
                    "@c:type": "GDK_KEY_R8",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "182"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_R9",
                    "@value": "65498",
                    "@c:type": "GDK_KEY_R9",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "184"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_RFKill",
                    "@value": "269025205",
                    "@c:type": "GDK_KEY_RFKill",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "2297"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Racute",
                    "@value": "448",
                    "@c:type": "GDK_KEY_Racute",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "606"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Rcaron",
                    "@value": "472",
                    "@c:type": "GDK_KEY_Rcaron",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "618"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Rcedilla",
                    "@value": "931",
                    "@c:type": "GDK_KEY_Rcedilla",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "663"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Red",
                    "@value": "269025187",
                    "@c:type": "GDK_KEY_Red",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "2285"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Redo",
                    "@value": "65382",
                    "@c:type": "GDK_KEY_Redo",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "91"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Refresh",
                    "@value": "269025065",
                    "@c:type": "GDK_KEY_Refresh",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "2169"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Reload",
                    "@value": "269025139",
                    "@c:type": "GDK_KEY_Reload",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "2238"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_RepeatKeys_Enable",
                    "@value": "65138",
                    "@c:type": "GDK_KEY_RepeatKeys_Enable",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "310"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Reply",
                    "@value": "269025138",
                    "@c:type": "GDK_KEY_Reply",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "2237"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Return",
                    "@value": "65293",
                    "@c:type": "GDK_KEY_Return",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "44"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Right",
                    "@value": "65363",
                    "@c:type": "GDK_KEY_Right",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "78"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_RockerDown",
                    "@value": "269025060",
                    "@c:type": "GDK_KEY_RockerDown",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "2164"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_RockerEnter",
                    "@value": "269025061",
                    "@c:type": "GDK_KEY_RockerEnter",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "2165"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_RockerUp",
                    "@value": "269025059",
                    "@c:type": "GDK_KEY_RockerUp",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "2163"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Romaji",
                    "@value": "65316",
                    "@c:type": "GDK_KEY_Romaji",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "59"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_RotateWindows",
                    "@value": "269025140",
                    "@c:type": "GDK_KEY_RotateWindows",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "2239"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_RotationKB",
                    "@value": "269025142",
                    "@c:type": "GDK_KEY_RotationKB",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "2241"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_RotationPB",
                    "@value": "269025141",
                    "@c:type": "GDK_KEY_RotationPB",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "2240"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_RupeeSign",
                    "@value": "16785576",
                    "@c:type": "GDK_KEY_RupeeSign",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1755"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_S",
                    "@value": "83",
                    "@c:type": "GDK_KEY_S",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "437"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_SCHWA",
                    "@value": "16777615",
                    "@c:type": "GDK_KEY_SCHWA",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1649"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Sabovedot",
                    "@value": "16784992",
                    "@c:type": "GDK_KEY_Sabovedot",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "711"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Sacute",
                    "@value": "422",
                    "@c:type": "GDK_KEY_Sacute",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "586"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Save",
                    "@value": "269025143",
                    "@c:type": "GDK_KEY_Save",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "2242"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Scaron",
                    "@value": "425",
                    "@c:type": "GDK_KEY_Scaron",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "587"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Scedilla",
                    "@value": "426",
                    "@c:type": "GDK_KEY_Scedilla",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "588"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Scircumflex",
                    "@value": "734",
                    "@c:type": "GDK_KEY_Scircumflex",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "654"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_ScreenSaver",
                    "@value": "269025069",
                    "@c:type": "GDK_KEY_ScreenSaver",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "2173"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_ScrollClick",
                    "@value": "269025146",
                    "@c:type": "GDK_KEY_ScrollClick",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "2245"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_ScrollDown",
                    "@value": "269025145",
                    "@c:type": "GDK_KEY_ScrollDown",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "2244"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_ScrollUp",
                    "@value": "269025144",
                    "@c:type": "GDK_KEY_ScrollUp",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "2243"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Scroll_Lock",
                    "@value": "65300",
                    "@c:type": "GDK_KEY_Scroll_Lock",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "46"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Search",
                    "@value": "269025051",
                    "@c:type": "GDK_KEY_Search",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "2155"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Select",
                    "@value": "65376",
                    "@c:type": "GDK_KEY_Select",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "86"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_SelectButton",
                    "@value": "269025184",
                    "@c:type": "GDK_KEY_SelectButton",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "2282"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Send",
                    "@value": "269025147",
                    "@c:type": "GDK_KEY_Send",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "2246"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Serbian_DJE",
                    "@value": "1713",
                    "@c:type": "GDK_KEY_Serbian_DJE",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "940"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Serbian_DZE",
                    "@value": "1727",
                    "@c:type": "GDK_KEY_Serbian_DZE",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "961"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Serbian_JE",
                    "@value": "1720",
                    "@c:type": "GDK_KEY_Serbian_JE",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "951"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Serbian_LJE",
                    "@value": "1721",
                    "@c:type": "GDK_KEY_Serbian_LJE",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "953"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Serbian_NJE",
                    "@value": "1722",
                    "@c:type": "GDK_KEY_Serbian_NJE",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "955"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Serbian_TSHE",
                    "@value": "1723",
                    "@c:type": "GDK_KEY_Serbian_TSHE",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "956"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Serbian_dje",
                    "@value": "1697",
                    "@c:type": "GDK_KEY_Serbian_dje",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "917"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Serbian_dze",
                    "@value": "1711",
                    "@c:type": "GDK_KEY_Serbian_dze",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "938"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Serbian_je",
                    "@value": "1704",
                    "@c:type": "GDK_KEY_Serbian_je",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "928"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Serbian_lje",
                    "@value": "1705",
                    "@c:type": "GDK_KEY_Serbian_lje",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "930"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Serbian_nje",
                    "@value": "1706",
                    "@c:type": "GDK_KEY_Serbian_nje",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "932"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Serbian_tshe",
                    "@value": "1707",
                    "@c:type": "GDK_KEY_Serbian_tshe",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "933"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Shift_L",
                    "@value": "65505",
                    "@c:type": "GDK_KEY_Shift_L",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "197"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Shift_Lock",
                    "@value": "65510",
                    "@c:type": "GDK_KEY_Shift_Lock",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "202"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Shift_R",
                    "@value": "65506",
                    "@c:type": "GDK_KEY_Shift_R",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "198"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Shop",
                    "@value": "269025078",
                    "@c:type": "GDK_KEY_Shop",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "2182"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_SingleCandidate",
                    "@value": "65340",
                    "@c:type": "GDK_KEY_SingleCandidate",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "52"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Sinh_a",
                    "@value": "16780677",
                    "@c:type": "GDK_KEY_Sinh_a",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "2060"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Sinh_aa",
                    "@value": "16780678",
                    "@c:type": "GDK_KEY_Sinh_aa",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "2061"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Sinh_aa2",
                    "@value": "16780751",
                    "@c:type": "GDK_KEY_Sinh_aa2",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "2120"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Sinh_ae",
                    "@value": "16780679",
                    "@c:type": "GDK_KEY_Sinh_ae",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "2062"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Sinh_ae2",
                    "@value": "16780752",
                    "@c:type": "GDK_KEY_Sinh_ae2",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "2121"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Sinh_aee",
                    "@value": "16780680",
                    "@c:type": "GDK_KEY_Sinh_aee",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "2063"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Sinh_aee2",
                    "@value": "16780753",
                    "@c:type": "GDK_KEY_Sinh_aee2",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "2122"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Sinh_ai",
                    "@value": "16780691",
                    "@c:type": "GDK_KEY_Sinh_ai",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "2074"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Sinh_ai2",
                    "@value": "16780763",
                    "@c:type": "GDK_KEY_Sinh_ai2",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "2130"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Sinh_al",
                    "@value": "16780746",
                    "@c:type": "GDK_KEY_Sinh_al",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "2119"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Sinh_au",
                    "@value": "16780694",
                    "@c:type": "GDK_KEY_Sinh_au",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "2077"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Sinh_au2",
                    "@value": "16780766",
                    "@c:type": "GDK_KEY_Sinh_au2",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "2133"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Sinh_ba",
                    "@value": "16780726",
                    "@c:type": "GDK_KEY_Sinh_ba",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "2105"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Sinh_bha",
                    "@value": "16780727",
                    "@c:type": "GDK_KEY_Sinh_bha",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "2106"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Sinh_ca",
                    "@value": "16780704",
                    "@c:type": "GDK_KEY_Sinh_ca",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "2084"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Sinh_cha",
                    "@value": "16780705",
                    "@c:type": "GDK_KEY_Sinh_cha",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "2085"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Sinh_dda",
                    "@value": "16780713",
                    "@c:type": "GDK_KEY_Sinh_dda",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "2093"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Sinh_ddha",
                    "@value": "16780714",
                    "@c:type": "GDK_KEY_Sinh_ddha",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "2094"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Sinh_dha",
                    "@value": "16780719",
                    "@c:type": "GDK_KEY_Sinh_dha",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "2099"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Sinh_dhha",
                    "@value": "16780720",
                    "@c:type": "GDK_KEY_Sinh_dhha",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "2100"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Sinh_e",
                    "@value": "16780689",
                    "@c:type": "GDK_KEY_Sinh_e",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "2072"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Sinh_e2",
                    "@value": "16780761",
                    "@c:type": "GDK_KEY_Sinh_e2",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "2128"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Sinh_ee",
                    "@value": "16780690",
                    "@c:type": "GDK_KEY_Sinh_ee",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "2073"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Sinh_ee2",
                    "@value": "16780762",
                    "@c:type": "GDK_KEY_Sinh_ee2",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "2129"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Sinh_fa",
                    "@value": "16780742",
                    "@c:type": "GDK_KEY_Sinh_fa",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "2118"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Sinh_ga",
                    "@value": "16780700",
                    "@c:type": "GDK_KEY_Sinh_ga",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "2080"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Sinh_gha",
                    "@value": "16780701",
                    "@c:type": "GDK_KEY_Sinh_gha",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "2081"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Sinh_h2",
                    "@value": "16780675",
                    "@c:type": "GDK_KEY_Sinh_h2",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "2059"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Sinh_ha",
                    "@value": "16780740",
                    "@c:type": "GDK_KEY_Sinh_ha",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "2116"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Sinh_i",
                    "@value": "16780681",
                    "@c:type": "GDK_KEY_Sinh_i",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "2064"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Sinh_i2",
                    "@value": "16780754",
                    "@c:type": "GDK_KEY_Sinh_i2",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "2123"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Sinh_ii",
                    "@value": "16780682",
                    "@c:type": "GDK_KEY_Sinh_ii",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "2065"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Sinh_ii2",
                    "@value": "16780755",
                    "@c:type": "GDK_KEY_Sinh_ii2",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "2124"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Sinh_ja",
                    "@value": "16780706",
                    "@c:type": "GDK_KEY_Sinh_ja",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "2086"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Sinh_jha",
                    "@value": "16780707",
                    "@c:type": "GDK_KEY_Sinh_jha",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "2087"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Sinh_jnya",
                    "@value": "16780709",
                    "@c:type": "GDK_KEY_Sinh_jnya",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "2089"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Sinh_ka",
                    "@value": "16780698",
                    "@c:type": "GDK_KEY_Sinh_ka",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "2078"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Sinh_kha",
                    "@value": "16780699",
                    "@c:type": "GDK_KEY_Sinh_kha",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "2079"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Sinh_kunddaliya",
                    "@value": "16780788",
                    "@c:type": "GDK_KEY_Sinh_kunddaliya",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "2137"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Sinh_la",
                    "@value": "16780733",
                    "@c:type": "GDK_KEY_Sinh_la",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "2111"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Sinh_lla",
                    "@value": "16780741",
                    "@c:type": "GDK_KEY_Sinh_lla",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "2117"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Sinh_lu",
                    "@value": "16780687",
                    "@c:type": "GDK_KEY_Sinh_lu",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "2070"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Sinh_lu2",
                    "@value": "16780767",
                    "@c:type": "GDK_KEY_Sinh_lu2",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "2134"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Sinh_luu",
                    "@value": "16780688",
                    "@c:type": "GDK_KEY_Sinh_luu",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "2071"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Sinh_luu2",
                    "@value": "16780787",
                    "@c:type": "GDK_KEY_Sinh_luu2",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "2136"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Sinh_ma",
                    "@value": "16780728",
                    "@c:type": "GDK_KEY_Sinh_ma",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "2107"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Sinh_mba",
                    "@value": "16780729",
                    "@c:type": "GDK_KEY_Sinh_mba",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "2108"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Sinh_na",
                    "@value": "16780721",
                    "@c:type": "GDK_KEY_Sinh_na",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "2101"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Sinh_ndda",
                    "@value": "16780716",
                    "@c:type": "GDK_KEY_Sinh_ndda",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "2096"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Sinh_ndha",
                    "@value": "16780723",
                    "@c:type": "GDK_KEY_Sinh_ndha",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "2102"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Sinh_ng",
                    "@value": "16780674",
                    "@c:type": "GDK_KEY_Sinh_ng",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "2058"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Sinh_ng2",
                    "@value": "16780702",
                    "@c:type": "GDK_KEY_Sinh_ng2",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "2082"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Sinh_nga",
                    "@value": "16780703",
                    "@c:type": "GDK_KEY_Sinh_nga",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "2083"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Sinh_nja",
                    "@value": "16780710",
                    "@c:type": "GDK_KEY_Sinh_nja",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "2090"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Sinh_nna",
                    "@value": "16780715",
                    "@c:type": "GDK_KEY_Sinh_nna",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "2095"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Sinh_nya",
                    "@value": "16780708",
                    "@c:type": "GDK_KEY_Sinh_nya",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "2088"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Sinh_o",
                    "@value": "16780692",
                    "@c:type": "GDK_KEY_Sinh_o",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "2075"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Sinh_o2",
                    "@value": "16780764",
                    "@c:type": "GDK_KEY_Sinh_o2",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "2131"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Sinh_oo",
                    "@value": "16780693",
                    "@c:type": "GDK_KEY_Sinh_oo",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "2076"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Sinh_oo2",
                    "@value": "16780765",
                    "@c:type": "GDK_KEY_Sinh_oo2",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "2132"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Sinh_pa",
                    "@value": "16780724",
                    "@c:type": "GDK_KEY_Sinh_pa",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "2103"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Sinh_pha",
                    "@value": "16780725",
                    "@c:type": "GDK_KEY_Sinh_pha",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "2104"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Sinh_ra",
                    "@value": "16780731",
                    "@c:type": "GDK_KEY_Sinh_ra",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "2110"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Sinh_ri",
                    "@value": "16780685",
                    "@c:type": "GDK_KEY_Sinh_ri",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "2068"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Sinh_rii",
                    "@value": "16780686",
                    "@c:type": "GDK_KEY_Sinh_rii",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "2069"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Sinh_ru2",
                    "@value": "16780760",
                    "@c:type": "GDK_KEY_Sinh_ru2",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "2127"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Sinh_ruu2",
                    "@value": "16780786",
                    "@c:type": "GDK_KEY_Sinh_ruu2",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "2135"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Sinh_sa",
                    "@value": "16780739",
                    "@c:type": "GDK_KEY_Sinh_sa",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "2115"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Sinh_sha",
                    "@value": "16780737",
                    "@c:type": "GDK_KEY_Sinh_sha",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "2113"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Sinh_ssha",
                    "@value": "16780738",
                    "@c:type": "GDK_KEY_Sinh_ssha",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "2114"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Sinh_tha",
                    "@value": "16780717",
                    "@c:type": "GDK_KEY_Sinh_tha",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "2097"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Sinh_thha",
                    "@value": "16780718",
                    "@c:type": "GDK_KEY_Sinh_thha",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "2098"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Sinh_tta",
                    "@value": "16780711",
                    "@c:type": "GDK_KEY_Sinh_tta",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "2091"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Sinh_ttha",
                    "@value": "16780712",
                    "@c:type": "GDK_KEY_Sinh_ttha",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "2092"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Sinh_u",
                    "@value": "16780683",
                    "@c:type": "GDK_KEY_Sinh_u",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "2066"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Sinh_u2",
                    "@value": "16780756",
                    "@c:type": "GDK_KEY_Sinh_u2",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "2125"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Sinh_uu",
                    "@value": "16780684",
                    "@c:type": "GDK_KEY_Sinh_uu",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "2067"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Sinh_uu2",
                    "@value": "16780758",
                    "@c:type": "GDK_KEY_Sinh_uu2",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "2126"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Sinh_va",
                    "@value": "16780736",
                    "@c:type": "GDK_KEY_Sinh_va",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "2112"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Sinh_ya",
                    "@value": "16780730",
                    "@c:type": "GDK_KEY_Sinh_ya",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "2109"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Sleep",
                    "@value": "269025071",
                    "@c:type": "GDK_KEY_Sleep",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "2175"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_SlowKeys_Enable",
                    "@value": "65139",
                    "@c:type": "GDK_KEY_SlowKeys_Enable",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "311"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Spell",
                    "@value": "269025148",
                    "@c:type": "GDK_KEY_Spell",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "2247"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_SplitScreen",
                    "@value": "269025149",
                    "@c:type": "GDK_KEY_SplitScreen",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "2248"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Standby",
                    "@value": "269025040",
                    "@c:type": "GDK_KEY_Standby",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "2144"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Start",
                    "@value": "269025050",
                    "@c:type": "GDK_KEY_Start",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "2154"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_StickyKeys_Enable",
                    "@value": "65141",
                    "@c:type": "GDK_KEY_StickyKeys_Enable",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "313"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Stop",
                    "@value": "269025064",
                    "@c:type": "GDK_KEY_Stop",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "2168"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Subtitle",
                    "@value": "269025178",
                    "@c:type": "GDK_KEY_Subtitle",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "2276"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Super_L",
                    "@value": "65515",
                    "@c:type": "GDK_KEY_Super_L",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "207"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Super_R",
                    "@value": "65516",
                    "@c:type": "GDK_KEY_Super_R",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "208"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Support",
                    "@value": "269025150",
                    "@c:type": "GDK_KEY_Support",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "2249"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Suspend",
                    "@value": "269025191",
                    "@c:type": "GDK_KEY_Suspend",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "2289"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Switch_VT_1",
                    "@value": "269024769",
                    "@c:type": "GDK_KEY_Switch_VT_1",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "2299"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Switch_VT_10",
                    "@value": "269024778",
                    "@c:type": "GDK_KEY_Switch_VT_10",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "2308"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Switch_VT_11",
                    "@value": "269024779",
                    "@c:type": "GDK_KEY_Switch_VT_11",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "2309"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Switch_VT_12",
                    "@value": "269024780",
                    "@c:type": "GDK_KEY_Switch_VT_12",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "2310"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Switch_VT_2",
                    "@value": "269024770",
                    "@c:type": "GDK_KEY_Switch_VT_2",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "2300"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Switch_VT_3",
                    "@value": "269024771",
                    "@c:type": "GDK_KEY_Switch_VT_3",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "2301"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Switch_VT_4",
                    "@value": "269024772",
                    "@c:type": "GDK_KEY_Switch_VT_4",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "2302"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Switch_VT_5",
                    "@value": "269024773",
                    "@c:type": "GDK_KEY_Switch_VT_5",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "2303"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Switch_VT_6",
                    "@value": "269024774",
                    "@c:type": "GDK_KEY_Switch_VT_6",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "2304"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Switch_VT_7",
                    "@value": "269024775",
                    "@c:type": "GDK_KEY_Switch_VT_7",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "2305"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Switch_VT_8",
                    "@value": "269024776",
                    "@c:type": "GDK_KEY_Switch_VT_8",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "2306"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Switch_VT_9",
                    "@value": "269024777",
                    "@c:type": "GDK_KEY_Switch_VT_9",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "2307"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Sys_Req",
                    "@value": "65301",
                    "@c:type": "GDK_KEY_Sys_Req",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "47"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_T",
                    "@value": "84",
                    "@c:type": "GDK_KEY_T",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "438"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_THORN",
                    "@value": "222",
                    "@c:type": "GDK_KEY_THORN",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "546"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Tab",
                    "@value": "65289",
                    "@c:type": "GDK_KEY_Tab",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "41"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Tabovedot",
                    "@value": "16785002",
                    "@c:type": "GDK_KEY_Tabovedot",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "713"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_TaskPane",
                    "@value": "269025151",
                    "@c:type": "GDK_KEY_TaskPane",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "2250"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Tcaron",
                    "@value": "427",
                    "@c:type": "GDK_KEY_Tcaron",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "589"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Tcedilla",
                    "@value": "478",
                    "@c:type": "GDK_KEY_Tcedilla",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "621"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Terminal",
                    "@value": "269025152",
                    "@c:type": "GDK_KEY_Terminal",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "2251"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Terminate_Server",
                    "@value": "65237",
                    "@c:type": "GDK_KEY_Terminate_Server",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "307"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Thai_baht",
                    "@value": "3551",
                    "@c:type": "GDK_KEY_Thai_baht",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1376"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Thai_bobaimai",
                    "@value": "3514",
                    "@c:type": "GDK_KEY_Thai_bobaimai",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1342"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Thai_chochan",
                    "@value": "3496",
                    "@c:type": "GDK_KEY_Thai_chochan",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1324"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Thai_chochang",
                    "@value": "3498",
                    "@c:type": "GDK_KEY_Thai_chochang",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1326"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Thai_choching",
                    "@value": "3497",
                    "@c:type": "GDK_KEY_Thai_choching",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1325"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Thai_chochoe",
                    "@value": "3500",
                    "@c:type": "GDK_KEY_Thai_chochoe",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1328"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Thai_dochada",
                    "@value": "3502",
                    "@c:type": "GDK_KEY_Thai_dochada",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1330"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Thai_dodek",
                    "@value": "3508",
                    "@c:type": "GDK_KEY_Thai_dodek",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1336"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Thai_fofa",
                    "@value": "3517",
                    "@c:type": "GDK_KEY_Thai_fofa",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1345"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Thai_fofan",
                    "@value": "3519",
                    "@c:type": "GDK_KEY_Thai_fofan",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1347"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Thai_hohip",
                    "@value": "3531",
                    "@c:type": "GDK_KEY_Thai_hohip",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1359"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Thai_honokhuk",
                    "@value": "3534",
                    "@c:type": "GDK_KEY_Thai_honokhuk",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1362"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Thai_khokhai",
                    "@value": "3490",
                    "@c:type": "GDK_KEY_Thai_khokhai",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1318"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Thai_khokhon",
                    "@value": "3493",
                    "@c:type": "GDK_KEY_Thai_khokhon",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1321"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Thai_khokhuat",
                    "@value": "3491",
                    "@c:type": "GDK_KEY_Thai_khokhuat",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1319"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Thai_khokhwai",
                    "@value": "3492",
                    "@c:type": "GDK_KEY_Thai_khokhwai",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1320"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Thai_khorakhang",
                    "@value": "3494",
                    "@c:type": "GDK_KEY_Thai_khorakhang",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1322"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Thai_kokai",
                    "@value": "3489",
                    "@c:type": "GDK_KEY_Thai_kokai",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1317"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Thai_lakkhangyao",
                    "@value": "3557",
                    "@c:type": "GDK_KEY_Thai_lakkhangyao",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1382"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Thai_lekchet",
                    "@value": "3575",
                    "@c:type": "GDK_KEY_Thai_lekchet",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1398"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Thai_lekha",
                    "@value": "3573",
                    "@c:type": "GDK_KEY_Thai_lekha",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1396"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Thai_lekhok",
                    "@value": "3574",
                    "@c:type": "GDK_KEY_Thai_lekhok",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1397"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Thai_lekkao",
                    "@value": "3577",
                    "@c:type": "GDK_KEY_Thai_lekkao",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1400"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Thai_leknung",
                    "@value": "3569",
                    "@c:type": "GDK_KEY_Thai_leknung",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1392"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Thai_lekpaet",
                    "@value": "3576",
                    "@c:type": "GDK_KEY_Thai_lekpaet",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1399"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Thai_leksam",
                    "@value": "3571",
                    "@c:type": "GDK_KEY_Thai_leksam",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1394"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Thai_leksi",
                    "@value": "3572",
                    "@c:type": "GDK_KEY_Thai_leksi",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1395"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Thai_leksong",
                    "@value": "3570",
                    "@c:type": "GDK_KEY_Thai_leksong",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1393"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Thai_leksun",
                    "@value": "3568",
                    "@c:type": "GDK_KEY_Thai_leksun",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1391"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Thai_lochula",
                    "@value": "3532",
                    "@c:type": "GDK_KEY_Thai_lochula",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1360"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Thai_loling",
                    "@value": "3525",
                    "@c:type": "GDK_KEY_Thai_loling",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1353"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Thai_lu",
                    "@value": "3526",
                    "@c:type": "GDK_KEY_Thai_lu",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1354"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Thai_maichattawa",
                    "@value": "3563",
                    "@c:type": "GDK_KEY_Thai_maichattawa",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1388"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Thai_maiek",
                    "@value": "3560",
                    "@c:type": "GDK_KEY_Thai_maiek",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1385"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Thai_maihanakat",
                    "@value": "3537",
                    "@c:type": "GDK_KEY_Thai_maihanakat",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1365"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Thai_maihanakat_maitho",
                    "@value": "3550",
                    "@c:type": "GDK_KEY_Thai_maihanakat_maitho",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1375"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Thai_maitaikhu",
                    "@value": "3559",
                    "@c:type": "GDK_KEY_Thai_maitaikhu",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1384"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Thai_maitho",
                    "@value": "3561",
                    "@c:type": "GDK_KEY_Thai_maitho",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1386"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Thai_maitri",
                    "@value": "3562",
                    "@c:type": "GDK_KEY_Thai_maitri",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1387"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Thai_maiyamok",
                    "@value": "3558",
                    "@c:type": "GDK_KEY_Thai_maiyamok",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1383"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Thai_moma",
                    "@value": "3521",
                    "@c:type": "GDK_KEY_Thai_moma",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1349"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Thai_ngongu",
                    "@value": "3495",
                    "@c:type": "GDK_KEY_Thai_ngongu",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1323"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Thai_nikhahit",
                    "@value": "3565",
                    "@c:type": "GDK_KEY_Thai_nikhahit",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1390"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Thai_nonen",
                    "@value": "3507",
                    "@c:type": "GDK_KEY_Thai_nonen",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1335"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Thai_nonu",
                    "@value": "3513",
                    "@c:type": "GDK_KEY_Thai_nonu",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1341"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Thai_oang",
                    "@value": "3533",
                    "@c:type": "GDK_KEY_Thai_oang",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1361"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Thai_paiyannoi",
                    "@value": "3535",
                    "@c:type": "GDK_KEY_Thai_paiyannoi",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1363"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Thai_phinthu",
                    "@value": "3546",
                    "@c:type": "GDK_KEY_Thai_phinthu",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1374"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Thai_phophan",
                    "@value": "3518",
                    "@c:type": "GDK_KEY_Thai_phophan",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1346"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Thai_phophung",
                    "@value": "3516",
                    "@c:type": "GDK_KEY_Thai_phophung",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1344"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Thai_phosamphao",
                    "@value": "3520",
                    "@c:type": "GDK_KEY_Thai_phosamphao",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1348"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Thai_popla",
                    "@value": "3515",
                    "@c:type": "GDK_KEY_Thai_popla",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1343"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Thai_rorua",
                    "@value": "3523",
                    "@c:type": "GDK_KEY_Thai_rorua",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1351"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Thai_ru",
                    "@value": "3524",
                    "@c:type": "GDK_KEY_Thai_ru",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1352"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Thai_saraa",
                    "@value": "3536",
                    "@c:type": "GDK_KEY_Thai_saraa",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1364"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Thai_saraaa",
                    "@value": "3538",
                    "@c:type": "GDK_KEY_Thai_saraaa",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1366"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Thai_saraae",
                    "@value": "3553",
                    "@c:type": "GDK_KEY_Thai_saraae",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1378"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Thai_saraaimaimalai",
                    "@value": "3556",
                    "@c:type": "GDK_KEY_Thai_saraaimaimalai",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1381"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Thai_saraaimaimuan",
                    "@value": "3555",
                    "@c:type": "GDK_KEY_Thai_saraaimaimuan",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1380"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Thai_saraam",
                    "@value": "3539",
                    "@c:type": "GDK_KEY_Thai_saraam",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1367"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Thai_sarae",
                    "@value": "3552",
                    "@c:type": "GDK_KEY_Thai_sarae",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1377"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Thai_sarai",
                    "@value": "3540",
                    "@c:type": "GDK_KEY_Thai_sarai",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1368"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Thai_saraii",
                    "@value": "3541",
                    "@c:type": "GDK_KEY_Thai_saraii",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1369"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Thai_sarao",
                    "@value": "3554",
                    "@c:type": "GDK_KEY_Thai_sarao",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1379"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Thai_sarau",
                    "@value": "3544",
                    "@c:type": "GDK_KEY_Thai_sarau",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1372"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Thai_saraue",
                    "@value": "3542",
                    "@c:type": "GDK_KEY_Thai_saraue",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1370"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Thai_sarauee",
                    "@value": "3543",
                    "@c:type": "GDK_KEY_Thai_sarauee",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1371"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Thai_sarauu",
                    "@value": "3545",
                    "@c:type": "GDK_KEY_Thai_sarauu",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1373"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Thai_sorusi",
                    "@value": "3529",
                    "@c:type": "GDK_KEY_Thai_sorusi",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1357"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Thai_sosala",
                    "@value": "3528",
                    "@c:type": "GDK_KEY_Thai_sosala",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1356"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Thai_soso",
                    "@value": "3499",
                    "@c:type": "GDK_KEY_Thai_soso",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1327"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Thai_sosua",
                    "@value": "3530",
                    "@c:type": "GDK_KEY_Thai_sosua",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1358"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Thai_thanthakhat",
                    "@value": "3564",
                    "@c:type": "GDK_KEY_Thai_thanthakhat",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1389"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Thai_thonangmontho",
                    "@value": "3505",
                    "@c:type": "GDK_KEY_Thai_thonangmontho",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1333"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Thai_thophuthao",
                    "@value": "3506",
                    "@c:type": "GDK_KEY_Thai_thophuthao",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1334"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Thai_thothahan",
                    "@value": "3511",
                    "@c:type": "GDK_KEY_Thai_thothahan",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1339"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Thai_thothan",
                    "@value": "3504",
                    "@c:type": "GDK_KEY_Thai_thothan",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1332"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Thai_thothong",
                    "@value": "3512",
                    "@c:type": "GDK_KEY_Thai_thothong",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1340"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Thai_thothung",
                    "@value": "3510",
                    "@c:type": "GDK_KEY_Thai_thothung",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1338"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Thai_topatak",
                    "@value": "3503",
                    "@c:type": "GDK_KEY_Thai_topatak",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1331"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Thai_totao",
                    "@value": "3509",
                    "@c:type": "GDK_KEY_Thai_totao",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1337"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Thai_wowaen",
                    "@value": "3527",
                    "@c:type": "GDK_KEY_Thai_wowaen",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1355"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Thai_yoyak",
                    "@value": "3522",
                    "@c:type": "GDK_KEY_Thai_yoyak",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1350"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Thai_yoying",
                    "@value": "3501",
                    "@c:type": "GDK_KEY_Thai_yoying",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1329"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Thorn",
                    "@value": "222",
                    "@c:type": "GDK_KEY_Thorn",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "547"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Time",
                    "@value": "269025183",
                    "@c:type": "GDK_KEY_Time",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "2281"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_ToDoList",
                    "@value": "269025055",
                    "@c:type": "GDK_KEY_ToDoList",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "2159"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Tools",
                    "@value": "269025153",
                    "@c:type": "GDK_KEY_Tools",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "2252"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_TopMenu",
                    "@value": "269025186",
                    "@c:type": "GDK_KEY_TopMenu",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "2284"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_TouchpadOff",
                    "@value": "269025201",
                    "@c:type": "GDK_KEY_TouchpadOff",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "2293"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_TouchpadOn",
                    "@value": "269025200",
                    "@c:type": "GDK_KEY_TouchpadOn",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "2292"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_TouchpadToggle",
                    "@value": "269025193",
                    "@c:type": "GDK_KEY_TouchpadToggle",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "2291"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Touroku",
                    "@value": "65323",
                    "@c:type": "GDK_KEY_Touroku",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "66"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Travel",
                    "@value": "269025154",
                    "@c:type": "GDK_KEY_Travel",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "2253"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Tslash",
                    "@value": "940",
                    "@c:type": "GDK_KEY_Tslash",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "668"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_U",
                    "@value": "85",
                    "@c:type": "GDK_KEY_U",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "439"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_UWB",
                    "@value": "269025174",
                    "@c:type": "GDK_KEY_UWB",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "2272"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Uacute",
                    "@value": "218",
                    "@c:type": "GDK_KEY_Uacute",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "542"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Ubelowdot",
                    "@value": "16785124",
                    "@c:type": "GDK_KEY_Ubelowdot",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1723"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Ubreve",
                    "@value": "733",
                    "@c:type": "GDK_KEY_Ubreve",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "653"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Ucircumflex",
                    "@value": "219",
                    "@c:type": "GDK_KEY_Ucircumflex",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "543"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Udiaeresis",
                    "@value": "220",
                    "@c:type": "GDK_KEY_Udiaeresis",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "544"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Udoubleacute",
                    "@value": "475",
                    "@c:type": "GDK_KEY_Udoubleacute",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "620"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Ugrave",
                    "@value": "217",
                    "@c:type": "GDK_KEY_Ugrave",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "541"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Uhook",
                    "@value": "16785126",
                    "@c:type": "GDK_KEY_Uhook",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1725"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Uhorn",
                    "@value": "16777647",
                    "@c:type": "GDK_KEY_Uhorn",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1745"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Uhornacute",
                    "@value": "16785128",
                    "@c:type": "GDK_KEY_Uhornacute",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1727"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Uhornbelowdot",
                    "@value": "16785136",
                    "@c:type": "GDK_KEY_Uhornbelowdot",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1735"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Uhorngrave",
                    "@value": "16785130",
                    "@c:type": "GDK_KEY_Uhorngrave",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1729"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Uhornhook",
                    "@value": "16785132",
                    "@c:type": "GDK_KEY_Uhornhook",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1731"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Uhorntilde",
                    "@value": "16785134",
                    "@c:type": "GDK_KEY_Uhorntilde",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1733"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Ukrainian_GHE_WITH_UPTURN",
                    "@value": "1725",
                    "@c:type": "GDK_KEY_Ukrainian_GHE_WITH_UPTURN",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "958"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Ukrainian_I",
                    "@value": "1718",
                    "@c:type": "GDK_KEY_Ukrainian_I",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "946"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Ukrainian_IE",
                    "@value": "1716",
                    "@c:type": "GDK_KEY_Ukrainian_IE",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "943"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Ukrainian_YI",
                    "@value": "1719",
                    "@c:type": "GDK_KEY_Ukrainian_YI",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "948"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Ukrainian_ghe_with_upturn",
                    "@value": "1709",
                    "@c:type": "GDK_KEY_Ukrainian_ghe_with_upturn",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "935"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Ukrainian_i",
                    "@value": "1702",
                    "@c:type": "GDK_KEY_Ukrainian_i",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "923"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Ukrainian_ie",
                    "@value": "1700",
                    "@c:type": "GDK_KEY_Ukrainian_ie",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "920"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Ukrainian_yi",
                    "@value": "1703",
                    "@c:type": "GDK_KEY_Ukrainian_yi",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "925"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Ukranian_I",
                    "@value": "1718",
                    "@c:type": "GDK_KEY_Ukranian_I",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "947"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Ukranian_JE",
                    "@value": "1716",
                    "@c:type": "GDK_KEY_Ukranian_JE",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "944"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Ukranian_YI",
                    "@value": "1719",
                    "@c:type": "GDK_KEY_Ukranian_YI",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "949"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Ukranian_i",
                    "@value": "1702",
                    "@c:type": "GDK_KEY_Ukranian_i",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "924"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Ukranian_je",
                    "@value": "1700",
                    "@c:type": "GDK_KEY_Ukranian_je",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "921"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Ukranian_yi",
                    "@value": "1703",
                    "@c:type": "GDK_KEY_Ukranian_yi",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "926"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Umacron",
                    "@value": "990",
                    "@c:type": "GDK_KEY_Umacron",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "686"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Undo",
                    "@value": "65381",
                    "@c:type": "GDK_KEY_Undo",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "90"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Ungrab",
                    "@value": "269024800",
                    "@c:type": "GDK_KEY_Ungrab",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "2311"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Uogonek",
                    "@value": "985",
                    "@c:type": "GDK_KEY_Uogonek",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "684"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Up",
                    "@value": "65362",
                    "@c:type": "GDK_KEY_Up",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "77"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Uring",
                    "@value": "473",
                    "@c:type": "GDK_KEY_Uring",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "619"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_User1KB",
                    "@value": "269025157",
                    "@c:type": "GDK_KEY_User1KB",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "2255"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_User2KB",
                    "@value": "269025158",
                    "@c:type": "GDK_KEY_User2KB",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "2256"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_UserPB",
                    "@value": "269025156",
                    "@c:type": "GDK_KEY_UserPB",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "2254"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Utilde",
                    "@value": "989",
                    "@c:type": "GDK_KEY_Utilde",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "685"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_V",
                    "@value": "86",
                    "@c:type": "GDK_KEY_V",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "440"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_VendorHome",
                    "@value": "269025076",
                    "@c:type": "GDK_KEY_VendorHome",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "2180"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Video",
                    "@value": "269025159",
                    "@c:type": "GDK_KEY_Video",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "2257"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_View",
                    "@value": "269025185",
                    "@c:type": "GDK_KEY_View",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "2283"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_VoidSymbol",
                    "@value": "16777215",
                    "@c:type": "GDK_KEY_VoidSymbol",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "39"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_W",
                    "@value": "87",
                    "@c:type": "GDK_KEY_W",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "441"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_WLAN",
                    "@value": "269025173",
                    "@c:type": "GDK_KEY_WLAN",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "2271"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_WWAN",
                    "@value": "269025204",
                    "@c:type": "GDK_KEY_WWAN",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "2296"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_WWW",
                    "@value": "269025070",
                    "@c:type": "GDK_KEY_WWW",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "2174"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Wacute",
                    "@value": "16785026",
                    "@c:type": "GDK_KEY_Wacute",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "717"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_WakeUp",
                    "@value": "269025067",
                    "@c:type": "GDK_KEY_WakeUp",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "2171"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Wcircumflex",
                    "@value": "16777588",
                    "@c:type": "GDK_KEY_Wcircumflex",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "697"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Wdiaeresis",
                    "@value": "16785028",
                    "@c:type": "GDK_KEY_Wdiaeresis",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "719"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_WebCam",
                    "@value": "269025167",
                    "@c:type": "GDK_KEY_WebCam",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "2265"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Wgrave",
                    "@value": "16785024",
                    "@c:type": "GDK_KEY_Wgrave",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "715"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_WheelButton",
                    "@value": "269025160",
                    "@c:type": "GDK_KEY_WheelButton",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "2258"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_WindowClear",
                    "@value": "269025109",
                    "@c:type": "GDK_KEY_WindowClear",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "2212"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_WonSign",
                    "@value": "16785577",
                    "@c:type": "GDK_KEY_WonSign",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1756"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Word",
                    "@value": "269025161",
                    "@c:type": "GDK_KEY_Word",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "2259"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_X",
                    "@value": "88",
                    "@c:type": "GDK_KEY_X",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "442"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Xabovedot",
                    "@value": "16785034",
                    "@c:type": "GDK_KEY_Xabovedot",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1637"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Xfer",
                    "@value": "269025162",
                    "@c:type": "GDK_KEY_Xfer",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "2260"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Y",
                    "@value": "89",
                    "@c:type": "GDK_KEY_Y",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "443"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Yacute",
                    "@value": "221",
                    "@c:type": "GDK_KEY_Yacute",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "545"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Ybelowdot",
                    "@value": "16785140",
                    "@c:type": "GDK_KEY_Ybelowdot",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1737"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Ycircumflex",
                    "@value": "16777590",
                    "@c:type": "GDK_KEY_Ycircumflex",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "699"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Ydiaeresis",
                    "@value": "5054",
                    "@c:type": "GDK_KEY_Ydiaeresis",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "725"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Yellow",
                    "@value": "269025189",
                    "@c:type": "GDK_KEY_Yellow",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "2287"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Ygrave",
                    "@value": "16785138",
                    "@c:type": "GDK_KEY_Ygrave",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "721"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Yhook",
                    "@value": "16785142",
                    "@c:type": "GDK_KEY_Yhook",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1739"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Ytilde",
                    "@value": "16785144",
                    "@c:type": "GDK_KEY_Ytilde",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1741"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Z",
                    "@value": "90",
                    "@c:type": "GDK_KEY_Z",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "444"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Zabovedot",
                    "@value": "431",
                    "@c:type": "GDK_KEY_Zabovedot",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "592"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Zacute",
                    "@value": "428",
                    "@c:type": "GDK_KEY_Zacute",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "590"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Zcaron",
                    "@value": "430",
                    "@c:type": "GDK_KEY_Zcaron",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "591"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Zen_Koho",
                    "@value": "65341",
                    "@c:type": "GDK_KEY_Zen_Koho",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "73"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Zenkaku",
                    "@value": "65320",
                    "@c:type": "GDK_KEY_Zenkaku",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "63"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Zenkaku_Hankaku",
                    "@value": "65322",
                    "@c:type": "GDK_KEY_Zenkaku_Hankaku",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "65"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_ZoomIn",
                    "@value": "269025163",
                    "@c:type": "GDK_KEY_ZoomIn",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "2261"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_ZoomOut",
                    "@value": "269025164",
                    "@c:type": "GDK_KEY_ZoomOut",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "2262"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_Zstroke",
                    "@value": "16777653",
                    "@c:type": "GDK_KEY_Zstroke",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1639"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_a",
                    "@value": "97",
                    "@c:type": "GDK_KEY_a",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "452"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_aacute",
                    "@value": "225",
                    "@c:type": "GDK_KEY_aacute",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "550"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_abelowdot",
                    "@value": "16785057",
                    "@c:type": "GDK_KEY_abelowdot",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1656"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_abovedot",
                    "@value": "511",
                    "@c:type": "GDK_KEY_abovedot",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "638"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_abreve",
                    "@value": "483",
                    "@c:type": "GDK_KEY_abreve",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "623"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_abreveacute",
                    "@value": "16785071",
                    "@c:type": "GDK_KEY_abreveacute",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1670"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_abrevebelowdot",
                    "@value": "16785079",
                    "@c:type": "GDK_KEY_abrevebelowdot",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1678"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_abrevegrave",
                    "@value": "16785073",
                    "@c:type": "GDK_KEY_abrevegrave",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1672"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_abrevehook",
                    "@value": "16785075",
                    "@c:type": "GDK_KEY_abrevehook",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1674"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_abrevetilde",
                    "@value": "16785077",
                    "@c:type": "GDK_KEY_abrevetilde",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1676"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_acircumflex",
                    "@value": "226",
                    "@c:type": "GDK_KEY_acircumflex",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "551"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_acircumflexacute",
                    "@value": "16785061",
                    "@c:type": "GDK_KEY_acircumflexacute",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1660"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_acircumflexbelowdot",
                    "@value": "16785069",
                    "@c:type": "GDK_KEY_acircumflexbelowdot",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1668"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_acircumflexgrave",
                    "@value": "16785063",
                    "@c:type": "GDK_KEY_acircumflexgrave",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1662"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_acircumflexhook",
                    "@value": "16785065",
                    "@c:type": "GDK_KEY_acircumflexhook",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1664"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_acircumflextilde",
                    "@value": "16785067",
                    "@c:type": "GDK_KEY_acircumflextilde",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1666"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_acute",
                    "@value": "180",
                    "@c:type": "GDK_KEY_acute",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "502"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_adiaeresis",
                    "@value": "228",
                    "@c:type": "GDK_KEY_adiaeresis",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "553"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_ae",
                    "@value": "230",
                    "@c:type": "GDK_KEY_ae",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "555"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_agrave",
                    "@value": "224",
                    "@c:type": "GDK_KEY_agrave",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "549"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_ahook",
                    "@value": "16785059",
                    "@c:type": "GDK_KEY_ahook",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1658"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_amacron",
                    "@value": "992",
                    "@c:type": "GDK_KEY_amacron",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "687"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_ampersand",
                    "@value": "38",
                    "@c:type": "GDK_KEY_ampersand",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "391"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_aogonek",
                    "@value": "433",
                    "@c:type": "GDK_KEY_aogonek",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "593"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_apostrophe",
                    "@value": "39",
                    "@c:type": "GDK_KEY_apostrophe",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "392"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_approxeq",
                    "@value": "16785992",
                    "@c:type": "GDK_KEY_approxeq",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1788"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_approximate",
                    "@value": "2248",
                    "@c:type": "GDK_KEY_approximate",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1132"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_aring",
                    "@value": "229",
                    "@c:type": "GDK_KEY_aring",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "554"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_asciicircum",
                    "@value": "94",
                    "@c:type": "GDK_KEY_asciicircum",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "448"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_asciitilde",
                    "@value": "126",
                    "@c:type": "GDK_KEY_asciitilde",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "481"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_asterisk",
                    "@value": "42",
                    "@c:type": "GDK_KEY_asterisk",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "396"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_at",
                    "@value": "64",
                    "@c:type": "GDK_KEY_at",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "418"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_atilde",
                    "@value": "227",
                    "@c:type": "GDK_KEY_atilde",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "552"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_b",
                    "@value": "98",
                    "@c:type": "GDK_KEY_b",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "453"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_babovedot",
                    "@value": "16784899",
                    "@c:type": "GDK_KEY_babovedot",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "702"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_backslash",
                    "@value": "92",
                    "@c:type": "GDK_KEY_backslash",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "446"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_ballotcross",
                    "@value": "2804",
                    "@c:type": "GDK_KEY_ballotcross",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1246"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_bar",
                    "@value": "124",
                    "@c:type": "GDK_KEY_bar",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "479"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_because",
                    "@value": "16785973",
                    "@c:type": "GDK_KEY_because",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1787"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_blank",
                    "@value": "2527",
                    "@c:type": "GDK_KEY_blank",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1150"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_botintegral",
                    "@value": "2213",
                    "@c:type": "GDK_KEY_botintegral",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1105"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_botleftparens",
                    "@value": "2220",
                    "@c:type": "GDK_KEY_botleftparens",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1112"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_botleftsqbracket",
                    "@value": "2216",
                    "@c:type": "GDK_KEY_botleftsqbracket",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1108"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_botleftsummation",
                    "@value": "2226",
                    "@c:type": "GDK_KEY_botleftsummation",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1118"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_botrightparens",
                    "@value": "2222",
                    "@c:type": "GDK_KEY_botrightparens",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1114"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_botrightsqbracket",
                    "@value": "2218",
                    "@c:type": "GDK_KEY_botrightsqbracket",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1110"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_botrightsummation",
                    "@value": "2230",
                    "@c:type": "GDK_KEY_botrightsummation",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1122"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_bott",
                    "@value": "2550",
                    "@c:type": "GDK_KEY_bott",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1171"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_botvertsummationconnector",
                    "@value": "2228",
                    "@c:type": "GDK_KEY_botvertsummationconnector",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1120"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_braceleft",
                    "@value": "123",
                    "@c:type": "GDK_KEY_braceleft",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "478"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_braceright",
                    "@value": "125",
                    "@c:type": "GDK_KEY_braceright",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "480"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_bracketleft",
                    "@value": "91",
                    "@c:type": "GDK_KEY_bracketleft",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "445"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_bracketright",
                    "@value": "93",
                    "@c:type": "GDK_KEY_bracketright",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "447"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_braille_blank",
                    "@value": "16787456",
                    "@c:type": "GDK_KEY_braille_blank",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1802"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_braille_dot_1",
                    "@value": "65521",
                    "@c:type": "GDK_KEY_braille_dot_1",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1792"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_braille_dot_10",
                    "@value": "65530",
                    "@c:type": "GDK_KEY_braille_dot_10",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1801"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_braille_dot_2",
                    "@value": "65522",
                    "@c:type": "GDK_KEY_braille_dot_2",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1793"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_braille_dot_3",
                    "@value": "65523",
                    "@c:type": "GDK_KEY_braille_dot_3",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1794"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_braille_dot_4",
                    "@value": "65524",
                    "@c:type": "GDK_KEY_braille_dot_4",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1795"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_braille_dot_5",
                    "@value": "65525",
                    "@c:type": "GDK_KEY_braille_dot_5",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1796"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_braille_dot_6",
                    "@value": "65526",
                    "@c:type": "GDK_KEY_braille_dot_6",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1797"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_braille_dot_7",
                    "@value": "65527",
                    "@c:type": "GDK_KEY_braille_dot_7",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1798"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_braille_dot_8",
                    "@value": "65528",
                    "@c:type": "GDK_KEY_braille_dot_8",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1799"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_braille_dot_9",
                    "@value": "65529",
                    "@c:type": "GDK_KEY_braille_dot_9",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1800"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_braille_dots_1",
                    "@value": "16787457",
                    "@c:type": "GDK_KEY_braille_dots_1",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1803"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_braille_dots_12",
                    "@value": "16787459",
                    "@c:type": "GDK_KEY_braille_dots_12",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1805"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_braille_dots_123",
                    "@value": "16787463",
                    "@c:type": "GDK_KEY_braille_dots_123",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1809"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_braille_dots_1234",
                    "@value": "16787471",
                    "@c:type": "GDK_KEY_braille_dots_1234",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1817"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_braille_dots_12345",
                    "@value": "16787487",
                    "@c:type": "GDK_KEY_braille_dots_12345",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1833"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_braille_dots_123456",
                    "@value": "16787519",
                    "@c:type": "GDK_KEY_braille_dots_123456",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1865"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_braille_dots_1234567",
                    "@value": "16787583",
                    "@c:type": "GDK_KEY_braille_dots_1234567",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1929"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_braille_dots_12345678",
                    "@value": "16787711",
                    "@c:type": "GDK_KEY_braille_dots_12345678",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "2057"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_braille_dots_1234568",
                    "@value": "16787647",
                    "@c:type": "GDK_KEY_braille_dots_1234568",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1993"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_braille_dots_123457",
                    "@value": "16787551",
                    "@c:type": "GDK_KEY_braille_dots_123457",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1897"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_braille_dots_1234578",
                    "@value": "16787679",
                    "@c:type": "GDK_KEY_braille_dots_1234578",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "2025"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_braille_dots_123458",
                    "@value": "16787615",
                    "@c:type": "GDK_KEY_braille_dots_123458",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1961"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_braille_dots_12346",
                    "@value": "16787503",
                    "@c:type": "GDK_KEY_braille_dots_12346",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1849"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_braille_dots_123467",
                    "@value": "16787567",
                    "@c:type": "GDK_KEY_braille_dots_123467",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1913"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_braille_dots_1234678",
                    "@value": "16787695",
                    "@c:type": "GDK_KEY_braille_dots_1234678",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "2041"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_braille_dots_123468",
                    "@value": "16787631",
                    "@c:type": "GDK_KEY_braille_dots_123468",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1977"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_braille_dots_12347",
                    "@value": "16787535",
                    "@c:type": "GDK_KEY_braille_dots_12347",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1881"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_braille_dots_123478",
                    "@value": "16787663",
                    "@c:type": "GDK_KEY_braille_dots_123478",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "2009"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_braille_dots_12348",
                    "@value": "16787599",
                    "@c:type": "GDK_KEY_braille_dots_12348",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1945"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_braille_dots_1235",
                    "@value": "16787479",
                    "@c:type": "GDK_KEY_braille_dots_1235",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1825"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_braille_dots_12356",
                    "@value": "16787511",
                    "@c:type": "GDK_KEY_braille_dots_12356",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1857"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_braille_dots_123567",
                    "@value": "16787575",
                    "@c:type": "GDK_KEY_braille_dots_123567",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1921"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_braille_dots_1235678",
                    "@value": "16787703",
                    "@c:type": "GDK_KEY_braille_dots_1235678",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "2049"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_braille_dots_123568",
                    "@value": "16787639",
                    "@c:type": "GDK_KEY_braille_dots_123568",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1985"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_braille_dots_12357",
                    "@value": "16787543",
                    "@c:type": "GDK_KEY_braille_dots_12357",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1889"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_braille_dots_123578",
                    "@value": "16787671",
                    "@c:type": "GDK_KEY_braille_dots_123578",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "2017"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_braille_dots_12358",
                    "@value": "16787607",
                    "@c:type": "GDK_KEY_braille_dots_12358",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1953"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_braille_dots_1236",
                    "@value": "16787495",
                    "@c:type": "GDK_KEY_braille_dots_1236",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1841"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_braille_dots_12367",
                    "@value": "16787559",
                    "@c:type": "GDK_KEY_braille_dots_12367",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1905"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_braille_dots_123678",
                    "@value": "16787687",
                    "@c:type": "GDK_KEY_braille_dots_123678",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "2033"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_braille_dots_12368",
                    "@value": "16787623",
                    "@c:type": "GDK_KEY_braille_dots_12368",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1969"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_braille_dots_1237",
                    "@value": "16787527",
                    "@c:type": "GDK_KEY_braille_dots_1237",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1873"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_braille_dots_12378",
                    "@value": "16787655",
                    "@c:type": "GDK_KEY_braille_dots_12378",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "2001"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_braille_dots_1238",
                    "@value": "16787591",
                    "@c:type": "GDK_KEY_braille_dots_1238",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1937"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_braille_dots_124",
                    "@value": "16787467",
                    "@c:type": "GDK_KEY_braille_dots_124",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1813"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_braille_dots_1245",
                    "@value": "16787483",
                    "@c:type": "GDK_KEY_braille_dots_1245",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1829"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_braille_dots_12456",
                    "@value": "16787515",
                    "@c:type": "GDK_KEY_braille_dots_12456",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1861"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_braille_dots_124567",
                    "@value": "16787579",
                    "@c:type": "GDK_KEY_braille_dots_124567",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1925"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_braille_dots_1245678",
                    "@value": "16787707",
                    "@c:type": "GDK_KEY_braille_dots_1245678",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "2053"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_braille_dots_124568",
                    "@value": "16787643",
                    "@c:type": "GDK_KEY_braille_dots_124568",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1989"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_braille_dots_12457",
                    "@value": "16787547",
                    "@c:type": "GDK_KEY_braille_dots_12457",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1893"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_braille_dots_124578",
                    "@value": "16787675",
                    "@c:type": "GDK_KEY_braille_dots_124578",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "2021"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_braille_dots_12458",
                    "@value": "16787611",
                    "@c:type": "GDK_KEY_braille_dots_12458",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1957"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_braille_dots_1246",
                    "@value": "16787499",
                    "@c:type": "GDK_KEY_braille_dots_1246",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1845"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_braille_dots_12467",
                    "@value": "16787563",
                    "@c:type": "GDK_KEY_braille_dots_12467",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1909"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_braille_dots_124678",
                    "@value": "16787691",
                    "@c:type": "GDK_KEY_braille_dots_124678",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "2037"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_braille_dots_12468",
                    "@value": "16787627",
                    "@c:type": "GDK_KEY_braille_dots_12468",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1973"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_braille_dots_1247",
                    "@value": "16787531",
                    "@c:type": "GDK_KEY_braille_dots_1247",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1877"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_braille_dots_12478",
                    "@value": "16787659",
                    "@c:type": "GDK_KEY_braille_dots_12478",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "2005"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_braille_dots_1248",
                    "@value": "16787595",
                    "@c:type": "GDK_KEY_braille_dots_1248",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1941"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_braille_dots_125",
                    "@value": "16787475",
                    "@c:type": "GDK_KEY_braille_dots_125",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1821"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_braille_dots_1256",
                    "@value": "16787507",
                    "@c:type": "GDK_KEY_braille_dots_1256",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1853"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_braille_dots_12567",
                    "@value": "16787571",
                    "@c:type": "GDK_KEY_braille_dots_12567",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1917"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_braille_dots_125678",
                    "@value": "16787699",
                    "@c:type": "GDK_KEY_braille_dots_125678",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "2045"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_braille_dots_12568",
                    "@value": "16787635",
                    "@c:type": "GDK_KEY_braille_dots_12568",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1981"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_braille_dots_1257",
                    "@value": "16787539",
                    "@c:type": "GDK_KEY_braille_dots_1257",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1885"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_braille_dots_12578",
                    "@value": "16787667",
                    "@c:type": "GDK_KEY_braille_dots_12578",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "2013"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_braille_dots_1258",
                    "@value": "16787603",
                    "@c:type": "GDK_KEY_braille_dots_1258",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1949"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_braille_dots_126",
                    "@value": "16787491",
                    "@c:type": "GDK_KEY_braille_dots_126",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1837"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_braille_dots_1267",
                    "@value": "16787555",
                    "@c:type": "GDK_KEY_braille_dots_1267",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1901"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_braille_dots_12678",
                    "@value": "16787683",
                    "@c:type": "GDK_KEY_braille_dots_12678",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "2029"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_braille_dots_1268",
                    "@value": "16787619",
                    "@c:type": "GDK_KEY_braille_dots_1268",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1965"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_braille_dots_127",
                    "@value": "16787523",
                    "@c:type": "GDK_KEY_braille_dots_127",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1869"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_braille_dots_1278",
                    "@value": "16787651",
                    "@c:type": "GDK_KEY_braille_dots_1278",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1997"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_braille_dots_128",
                    "@value": "16787587",
                    "@c:type": "GDK_KEY_braille_dots_128",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1933"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_braille_dots_13",
                    "@value": "16787461",
                    "@c:type": "GDK_KEY_braille_dots_13",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1807"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_braille_dots_134",
                    "@value": "16787469",
                    "@c:type": "GDK_KEY_braille_dots_134",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1815"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_braille_dots_1345",
                    "@value": "16787485",
                    "@c:type": "GDK_KEY_braille_dots_1345",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1831"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_braille_dots_13456",
                    "@value": "16787517",
                    "@c:type": "GDK_KEY_braille_dots_13456",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1863"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_braille_dots_134567",
                    "@value": "16787581",
                    "@c:type": "GDK_KEY_braille_dots_134567",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1927"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_braille_dots_1345678",
                    "@value": "16787709",
                    "@c:type": "GDK_KEY_braille_dots_1345678",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "2055"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_braille_dots_134568",
                    "@value": "16787645",
                    "@c:type": "GDK_KEY_braille_dots_134568",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1991"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_braille_dots_13457",
                    "@value": "16787549",
                    "@c:type": "GDK_KEY_braille_dots_13457",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1895"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_braille_dots_134578",
                    "@value": "16787677",
                    "@c:type": "GDK_KEY_braille_dots_134578",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "2023"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_braille_dots_13458",
                    "@value": "16787613",
                    "@c:type": "GDK_KEY_braille_dots_13458",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1959"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_braille_dots_1346",
                    "@value": "16787501",
                    "@c:type": "GDK_KEY_braille_dots_1346",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1847"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_braille_dots_13467",
                    "@value": "16787565",
                    "@c:type": "GDK_KEY_braille_dots_13467",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1911"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_braille_dots_134678",
                    "@value": "16787693",
                    "@c:type": "GDK_KEY_braille_dots_134678",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "2039"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_braille_dots_13468",
                    "@value": "16787629",
                    "@c:type": "GDK_KEY_braille_dots_13468",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1975"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_braille_dots_1347",
                    "@value": "16787533",
                    "@c:type": "GDK_KEY_braille_dots_1347",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1879"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_braille_dots_13478",
                    "@value": "16787661",
                    "@c:type": "GDK_KEY_braille_dots_13478",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "2007"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_braille_dots_1348",
                    "@value": "16787597",
                    "@c:type": "GDK_KEY_braille_dots_1348",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1943"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_braille_dots_135",
                    "@value": "16787477",
                    "@c:type": "GDK_KEY_braille_dots_135",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1823"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_braille_dots_1356",
                    "@value": "16787509",
                    "@c:type": "GDK_KEY_braille_dots_1356",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1855"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_braille_dots_13567",
                    "@value": "16787573",
                    "@c:type": "GDK_KEY_braille_dots_13567",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1919"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_braille_dots_135678",
                    "@value": "16787701",
                    "@c:type": "GDK_KEY_braille_dots_135678",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "2047"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_braille_dots_13568",
                    "@value": "16787637",
                    "@c:type": "GDK_KEY_braille_dots_13568",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1983"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_braille_dots_1357",
                    "@value": "16787541",
                    "@c:type": "GDK_KEY_braille_dots_1357",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1887"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_braille_dots_13578",
                    "@value": "16787669",
                    "@c:type": "GDK_KEY_braille_dots_13578",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "2015"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_braille_dots_1358",
                    "@value": "16787605",
                    "@c:type": "GDK_KEY_braille_dots_1358",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1951"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_braille_dots_136",
                    "@value": "16787493",
                    "@c:type": "GDK_KEY_braille_dots_136",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1839"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_braille_dots_1367",
                    "@value": "16787557",
                    "@c:type": "GDK_KEY_braille_dots_1367",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1903"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_braille_dots_13678",
                    "@value": "16787685",
                    "@c:type": "GDK_KEY_braille_dots_13678",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "2031"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_braille_dots_1368",
                    "@value": "16787621",
                    "@c:type": "GDK_KEY_braille_dots_1368",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1967"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_braille_dots_137",
                    "@value": "16787525",
                    "@c:type": "GDK_KEY_braille_dots_137",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1871"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_braille_dots_1378",
                    "@value": "16787653",
                    "@c:type": "GDK_KEY_braille_dots_1378",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1999"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_braille_dots_138",
                    "@value": "16787589",
                    "@c:type": "GDK_KEY_braille_dots_138",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1935"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_braille_dots_14",
                    "@value": "16787465",
                    "@c:type": "GDK_KEY_braille_dots_14",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1811"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_braille_dots_145",
                    "@value": "16787481",
                    "@c:type": "GDK_KEY_braille_dots_145",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1827"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_braille_dots_1456",
                    "@value": "16787513",
                    "@c:type": "GDK_KEY_braille_dots_1456",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1859"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_braille_dots_14567",
                    "@value": "16787577",
                    "@c:type": "GDK_KEY_braille_dots_14567",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1923"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_braille_dots_145678",
                    "@value": "16787705",
                    "@c:type": "GDK_KEY_braille_dots_145678",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "2051"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_braille_dots_14568",
                    "@value": "16787641",
                    "@c:type": "GDK_KEY_braille_dots_14568",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1987"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_braille_dots_1457",
                    "@value": "16787545",
                    "@c:type": "GDK_KEY_braille_dots_1457",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1891"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_braille_dots_14578",
                    "@value": "16787673",
                    "@c:type": "GDK_KEY_braille_dots_14578",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "2019"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_braille_dots_1458",
                    "@value": "16787609",
                    "@c:type": "GDK_KEY_braille_dots_1458",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1955"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_braille_dots_146",
                    "@value": "16787497",
                    "@c:type": "GDK_KEY_braille_dots_146",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1843"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_braille_dots_1467",
                    "@value": "16787561",
                    "@c:type": "GDK_KEY_braille_dots_1467",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1907"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_braille_dots_14678",
                    "@value": "16787689",
                    "@c:type": "GDK_KEY_braille_dots_14678",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "2035"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_braille_dots_1468",
                    "@value": "16787625",
                    "@c:type": "GDK_KEY_braille_dots_1468",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1971"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_braille_dots_147",
                    "@value": "16787529",
                    "@c:type": "GDK_KEY_braille_dots_147",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1875"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_braille_dots_1478",
                    "@value": "16787657",
                    "@c:type": "GDK_KEY_braille_dots_1478",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "2003"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_braille_dots_148",
                    "@value": "16787593",
                    "@c:type": "GDK_KEY_braille_dots_148",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1939"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_braille_dots_15",
                    "@value": "16787473",
                    "@c:type": "GDK_KEY_braille_dots_15",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1819"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_braille_dots_156",
                    "@value": "16787505",
                    "@c:type": "GDK_KEY_braille_dots_156",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1851"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_braille_dots_1567",
                    "@value": "16787569",
                    "@c:type": "GDK_KEY_braille_dots_1567",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1915"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_braille_dots_15678",
                    "@value": "16787697",
                    "@c:type": "GDK_KEY_braille_dots_15678",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "2043"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_braille_dots_1568",
                    "@value": "16787633",
                    "@c:type": "GDK_KEY_braille_dots_1568",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1979"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_braille_dots_157",
                    "@value": "16787537",
                    "@c:type": "GDK_KEY_braille_dots_157",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1883"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_braille_dots_1578",
                    "@value": "16787665",
                    "@c:type": "GDK_KEY_braille_dots_1578",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "2011"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_braille_dots_158",
                    "@value": "16787601",
                    "@c:type": "GDK_KEY_braille_dots_158",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1947"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_braille_dots_16",
                    "@value": "16787489",
                    "@c:type": "GDK_KEY_braille_dots_16",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1835"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_braille_dots_167",
                    "@value": "16787553",
                    "@c:type": "GDK_KEY_braille_dots_167",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1899"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_braille_dots_1678",
                    "@value": "16787681",
                    "@c:type": "GDK_KEY_braille_dots_1678",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "2027"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_braille_dots_168",
                    "@value": "16787617",
                    "@c:type": "GDK_KEY_braille_dots_168",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1963"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_braille_dots_17",
                    "@value": "16787521",
                    "@c:type": "GDK_KEY_braille_dots_17",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1867"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_braille_dots_178",
                    "@value": "16787649",
                    "@c:type": "GDK_KEY_braille_dots_178",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1995"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_braille_dots_18",
                    "@value": "16787585",
                    "@c:type": "GDK_KEY_braille_dots_18",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1931"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_braille_dots_2",
                    "@value": "16787458",
                    "@c:type": "GDK_KEY_braille_dots_2",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1804"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_braille_dots_23",
                    "@value": "16787462",
                    "@c:type": "GDK_KEY_braille_dots_23",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1808"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_braille_dots_234",
                    "@value": "16787470",
                    "@c:type": "GDK_KEY_braille_dots_234",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1816"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_braille_dots_2345",
                    "@value": "16787486",
                    "@c:type": "GDK_KEY_braille_dots_2345",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1832"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_braille_dots_23456",
                    "@value": "16787518",
                    "@c:type": "GDK_KEY_braille_dots_23456",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1864"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_braille_dots_234567",
                    "@value": "16787582",
                    "@c:type": "GDK_KEY_braille_dots_234567",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1928"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_braille_dots_2345678",
                    "@value": "16787710",
                    "@c:type": "GDK_KEY_braille_dots_2345678",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "2056"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_braille_dots_234568",
                    "@value": "16787646",
                    "@c:type": "GDK_KEY_braille_dots_234568",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1992"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_braille_dots_23457",
                    "@value": "16787550",
                    "@c:type": "GDK_KEY_braille_dots_23457",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1896"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_braille_dots_234578",
                    "@value": "16787678",
                    "@c:type": "GDK_KEY_braille_dots_234578",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "2024"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_braille_dots_23458",
                    "@value": "16787614",
                    "@c:type": "GDK_KEY_braille_dots_23458",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1960"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_braille_dots_2346",
                    "@value": "16787502",
                    "@c:type": "GDK_KEY_braille_dots_2346",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1848"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_braille_dots_23467",
                    "@value": "16787566",
                    "@c:type": "GDK_KEY_braille_dots_23467",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1912"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_braille_dots_234678",
                    "@value": "16787694",
                    "@c:type": "GDK_KEY_braille_dots_234678",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "2040"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_braille_dots_23468",
                    "@value": "16787630",
                    "@c:type": "GDK_KEY_braille_dots_23468",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1976"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_braille_dots_2347",
                    "@value": "16787534",
                    "@c:type": "GDK_KEY_braille_dots_2347",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1880"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_braille_dots_23478",
                    "@value": "16787662",
                    "@c:type": "GDK_KEY_braille_dots_23478",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "2008"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_braille_dots_2348",
                    "@value": "16787598",
                    "@c:type": "GDK_KEY_braille_dots_2348",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1944"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_braille_dots_235",
                    "@value": "16787478",
                    "@c:type": "GDK_KEY_braille_dots_235",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1824"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_braille_dots_2356",
                    "@value": "16787510",
                    "@c:type": "GDK_KEY_braille_dots_2356",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1856"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_braille_dots_23567",
                    "@value": "16787574",
                    "@c:type": "GDK_KEY_braille_dots_23567",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1920"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_braille_dots_235678",
                    "@value": "16787702",
                    "@c:type": "GDK_KEY_braille_dots_235678",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "2048"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_braille_dots_23568",
                    "@value": "16787638",
                    "@c:type": "GDK_KEY_braille_dots_23568",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1984"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_braille_dots_2357",
                    "@value": "16787542",
                    "@c:type": "GDK_KEY_braille_dots_2357",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1888"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_braille_dots_23578",
                    "@value": "16787670",
                    "@c:type": "GDK_KEY_braille_dots_23578",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "2016"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_braille_dots_2358",
                    "@value": "16787606",
                    "@c:type": "GDK_KEY_braille_dots_2358",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1952"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_braille_dots_236",
                    "@value": "16787494",
                    "@c:type": "GDK_KEY_braille_dots_236",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1840"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_braille_dots_2367",
                    "@value": "16787558",
                    "@c:type": "GDK_KEY_braille_dots_2367",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1904"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_braille_dots_23678",
                    "@value": "16787686",
                    "@c:type": "GDK_KEY_braille_dots_23678",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "2032"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_braille_dots_2368",
                    "@value": "16787622",
                    "@c:type": "GDK_KEY_braille_dots_2368",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1968"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_braille_dots_237",
                    "@value": "16787526",
                    "@c:type": "GDK_KEY_braille_dots_237",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1872"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_braille_dots_2378",
                    "@value": "16787654",
                    "@c:type": "GDK_KEY_braille_dots_2378",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "2000"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_braille_dots_238",
                    "@value": "16787590",
                    "@c:type": "GDK_KEY_braille_dots_238",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1936"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_braille_dots_24",
                    "@value": "16787466",
                    "@c:type": "GDK_KEY_braille_dots_24",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1812"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_braille_dots_245",
                    "@value": "16787482",
                    "@c:type": "GDK_KEY_braille_dots_245",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1828"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_braille_dots_2456",
                    "@value": "16787514",
                    "@c:type": "GDK_KEY_braille_dots_2456",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1860"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_braille_dots_24567",
                    "@value": "16787578",
                    "@c:type": "GDK_KEY_braille_dots_24567",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1924"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_braille_dots_245678",
                    "@value": "16787706",
                    "@c:type": "GDK_KEY_braille_dots_245678",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "2052"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_braille_dots_24568",
                    "@value": "16787642",
                    "@c:type": "GDK_KEY_braille_dots_24568",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1988"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_braille_dots_2457",
                    "@value": "16787546",
                    "@c:type": "GDK_KEY_braille_dots_2457",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1892"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_braille_dots_24578",
                    "@value": "16787674",
                    "@c:type": "GDK_KEY_braille_dots_24578",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "2020"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_braille_dots_2458",
                    "@value": "16787610",
                    "@c:type": "GDK_KEY_braille_dots_2458",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1956"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_braille_dots_246",
                    "@value": "16787498",
                    "@c:type": "GDK_KEY_braille_dots_246",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1844"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_braille_dots_2467",
                    "@value": "16787562",
                    "@c:type": "GDK_KEY_braille_dots_2467",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1908"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_braille_dots_24678",
                    "@value": "16787690",
                    "@c:type": "GDK_KEY_braille_dots_24678",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "2036"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_braille_dots_2468",
                    "@value": "16787626",
                    "@c:type": "GDK_KEY_braille_dots_2468",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1972"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_braille_dots_247",
                    "@value": "16787530",
                    "@c:type": "GDK_KEY_braille_dots_247",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1876"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_braille_dots_2478",
                    "@value": "16787658",
                    "@c:type": "GDK_KEY_braille_dots_2478",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "2004"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_braille_dots_248",
                    "@value": "16787594",
                    "@c:type": "GDK_KEY_braille_dots_248",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1940"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_braille_dots_25",
                    "@value": "16787474",
                    "@c:type": "GDK_KEY_braille_dots_25",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1820"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_braille_dots_256",
                    "@value": "16787506",
                    "@c:type": "GDK_KEY_braille_dots_256",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1852"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_braille_dots_2567",
                    "@value": "16787570",
                    "@c:type": "GDK_KEY_braille_dots_2567",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1916"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_braille_dots_25678",
                    "@value": "16787698",
                    "@c:type": "GDK_KEY_braille_dots_25678",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "2044"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_braille_dots_2568",
                    "@value": "16787634",
                    "@c:type": "GDK_KEY_braille_dots_2568",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1980"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_braille_dots_257",
                    "@value": "16787538",
                    "@c:type": "GDK_KEY_braille_dots_257",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1884"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_braille_dots_2578",
                    "@value": "16787666",
                    "@c:type": "GDK_KEY_braille_dots_2578",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "2012"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_braille_dots_258",
                    "@value": "16787602",
                    "@c:type": "GDK_KEY_braille_dots_258",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1948"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_braille_dots_26",
                    "@value": "16787490",
                    "@c:type": "GDK_KEY_braille_dots_26",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1836"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_braille_dots_267",
                    "@value": "16787554",
                    "@c:type": "GDK_KEY_braille_dots_267",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1900"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_braille_dots_2678",
                    "@value": "16787682",
                    "@c:type": "GDK_KEY_braille_dots_2678",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "2028"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_braille_dots_268",
                    "@value": "16787618",
                    "@c:type": "GDK_KEY_braille_dots_268",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1964"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_braille_dots_27",
                    "@value": "16787522",
                    "@c:type": "GDK_KEY_braille_dots_27",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1868"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_braille_dots_278",
                    "@value": "16787650",
                    "@c:type": "GDK_KEY_braille_dots_278",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1996"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_braille_dots_28",
                    "@value": "16787586",
                    "@c:type": "GDK_KEY_braille_dots_28",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1932"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_braille_dots_3",
                    "@value": "16787460",
                    "@c:type": "GDK_KEY_braille_dots_3",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1806"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_braille_dots_34",
                    "@value": "16787468",
                    "@c:type": "GDK_KEY_braille_dots_34",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1814"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_braille_dots_345",
                    "@value": "16787484",
                    "@c:type": "GDK_KEY_braille_dots_345",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1830"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_braille_dots_3456",
                    "@value": "16787516",
                    "@c:type": "GDK_KEY_braille_dots_3456",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1862"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_braille_dots_34567",
                    "@value": "16787580",
                    "@c:type": "GDK_KEY_braille_dots_34567",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1926"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_braille_dots_345678",
                    "@value": "16787708",
                    "@c:type": "GDK_KEY_braille_dots_345678",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "2054"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_braille_dots_34568",
                    "@value": "16787644",
                    "@c:type": "GDK_KEY_braille_dots_34568",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1990"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_braille_dots_3457",
                    "@value": "16787548",
                    "@c:type": "GDK_KEY_braille_dots_3457",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1894"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_braille_dots_34578",
                    "@value": "16787676",
                    "@c:type": "GDK_KEY_braille_dots_34578",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "2022"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_braille_dots_3458",
                    "@value": "16787612",
                    "@c:type": "GDK_KEY_braille_dots_3458",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1958"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_braille_dots_346",
                    "@value": "16787500",
                    "@c:type": "GDK_KEY_braille_dots_346",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1846"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_braille_dots_3467",
                    "@value": "16787564",
                    "@c:type": "GDK_KEY_braille_dots_3467",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1910"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_braille_dots_34678",
                    "@value": "16787692",
                    "@c:type": "GDK_KEY_braille_dots_34678",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "2038"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_braille_dots_3468",
                    "@value": "16787628",
                    "@c:type": "GDK_KEY_braille_dots_3468",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1974"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_braille_dots_347",
                    "@value": "16787532",
                    "@c:type": "GDK_KEY_braille_dots_347",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1878"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_braille_dots_3478",
                    "@value": "16787660",
                    "@c:type": "GDK_KEY_braille_dots_3478",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "2006"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_braille_dots_348",
                    "@value": "16787596",
                    "@c:type": "GDK_KEY_braille_dots_348",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1942"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_braille_dots_35",
                    "@value": "16787476",
                    "@c:type": "GDK_KEY_braille_dots_35",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1822"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_braille_dots_356",
                    "@value": "16787508",
                    "@c:type": "GDK_KEY_braille_dots_356",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1854"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_braille_dots_3567",
                    "@value": "16787572",
                    "@c:type": "GDK_KEY_braille_dots_3567",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1918"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_braille_dots_35678",
                    "@value": "16787700",
                    "@c:type": "GDK_KEY_braille_dots_35678",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "2046"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_braille_dots_3568",
                    "@value": "16787636",
                    "@c:type": "GDK_KEY_braille_dots_3568",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1982"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_braille_dots_357",
                    "@value": "16787540",
                    "@c:type": "GDK_KEY_braille_dots_357",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1886"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_braille_dots_3578",
                    "@value": "16787668",
                    "@c:type": "GDK_KEY_braille_dots_3578",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "2014"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_braille_dots_358",
                    "@value": "16787604",
                    "@c:type": "GDK_KEY_braille_dots_358",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1950"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_braille_dots_36",
                    "@value": "16787492",
                    "@c:type": "GDK_KEY_braille_dots_36",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1838"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_braille_dots_367",
                    "@value": "16787556",
                    "@c:type": "GDK_KEY_braille_dots_367",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1902"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_braille_dots_3678",
                    "@value": "16787684",
                    "@c:type": "GDK_KEY_braille_dots_3678",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "2030"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_braille_dots_368",
                    "@value": "16787620",
                    "@c:type": "GDK_KEY_braille_dots_368",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1966"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_braille_dots_37",
                    "@value": "16787524",
                    "@c:type": "GDK_KEY_braille_dots_37",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1870"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_braille_dots_378",
                    "@value": "16787652",
                    "@c:type": "GDK_KEY_braille_dots_378",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1998"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_braille_dots_38",
                    "@value": "16787588",
                    "@c:type": "GDK_KEY_braille_dots_38",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1934"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_braille_dots_4",
                    "@value": "16787464",
                    "@c:type": "GDK_KEY_braille_dots_4",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1810"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_braille_dots_45",
                    "@value": "16787480",
                    "@c:type": "GDK_KEY_braille_dots_45",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1826"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_braille_dots_456",
                    "@value": "16787512",
                    "@c:type": "GDK_KEY_braille_dots_456",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1858"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_braille_dots_4567",
                    "@value": "16787576",
                    "@c:type": "GDK_KEY_braille_dots_4567",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1922"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_braille_dots_45678",
                    "@value": "16787704",
                    "@c:type": "GDK_KEY_braille_dots_45678",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "2050"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_braille_dots_4568",
                    "@value": "16787640",
                    "@c:type": "GDK_KEY_braille_dots_4568",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1986"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_braille_dots_457",
                    "@value": "16787544",
                    "@c:type": "GDK_KEY_braille_dots_457",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1890"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_braille_dots_4578",
                    "@value": "16787672",
                    "@c:type": "GDK_KEY_braille_dots_4578",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "2018"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_braille_dots_458",
                    "@value": "16787608",
                    "@c:type": "GDK_KEY_braille_dots_458",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1954"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_braille_dots_46",
                    "@value": "16787496",
                    "@c:type": "GDK_KEY_braille_dots_46",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1842"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_braille_dots_467",
                    "@value": "16787560",
                    "@c:type": "GDK_KEY_braille_dots_467",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1906"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_braille_dots_4678",
                    "@value": "16787688",
                    "@c:type": "GDK_KEY_braille_dots_4678",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "2034"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_braille_dots_468",
                    "@value": "16787624",
                    "@c:type": "GDK_KEY_braille_dots_468",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1970"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_braille_dots_47",
                    "@value": "16787528",
                    "@c:type": "GDK_KEY_braille_dots_47",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1874"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_braille_dots_478",
                    "@value": "16787656",
                    "@c:type": "GDK_KEY_braille_dots_478",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "2002"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_braille_dots_48",
                    "@value": "16787592",
                    "@c:type": "GDK_KEY_braille_dots_48",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1938"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_braille_dots_5",
                    "@value": "16787472",
                    "@c:type": "GDK_KEY_braille_dots_5",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1818"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_braille_dots_56",
                    "@value": "16787504",
                    "@c:type": "GDK_KEY_braille_dots_56",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1850"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_braille_dots_567",
                    "@value": "16787568",
                    "@c:type": "GDK_KEY_braille_dots_567",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1914"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_braille_dots_5678",
                    "@value": "16787696",
                    "@c:type": "GDK_KEY_braille_dots_5678",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "2042"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_braille_dots_568",
                    "@value": "16787632",
                    "@c:type": "GDK_KEY_braille_dots_568",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1978"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_braille_dots_57",
                    "@value": "16787536",
                    "@c:type": "GDK_KEY_braille_dots_57",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1882"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_braille_dots_578",
                    "@value": "16787664",
                    "@c:type": "GDK_KEY_braille_dots_578",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "2010"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_braille_dots_58",
                    "@value": "16787600",
                    "@c:type": "GDK_KEY_braille_dots_58",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1946"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_braille_dots_6",
                    "@value": "16787488",
                    "@c:type": "GDK_KEY_braille_dots_6",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1834"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_braille_dots_67",
                    "@value": "16787552",
                    "@c:type": "GDK_KEY_braille_dots_67",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1898"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_braille_dots_678",
                    "@value": "16787680",
                    "@c:type": "GDK_KEY_braille_dots_678",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "2026"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_braille_dots_68",
                    "@value": "16787616",
                    "@c:type": "GDK_KEY_braille_dots_68",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1962"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_braille_dots_7",
                    "@value": "16787520",
                    "@c:type": "GDK_KEY_braille_dots_7",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1866"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_braille_dots_78",
                    "@value": "16787648",
                    "@c:type": "GDK_KEY_braille_dots_78",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1994"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_braille_dots_8",
                    "@value": "16787584",
                    "@c:type": "GDK_KEY_braille_dots_8",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1930"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_breve",
                    "@value": "418",
                    "@c:type": "GDK_KEY_breve",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "583"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_brokenbar",
                    "@value": "166",
                    "@c:type": "GDK_KEY_brokenbar",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "488"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_c",
                    "@value": "99",
                    "@c:type": "GDK_KEY_c",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "454"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_c_h",
                    "@value": "65187",
                    "@c:type": "GDK_KEY_c_h",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "352"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_cabovedot",
                    "@value": "741",
                    "@c:type": "GDK_KEY_cabovedot",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "655"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_cacute",
                    "@value": "486",
                    "@c:type": "GDK_KEY_cacute",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "625"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_careof",
                    "@value": "2744",
                    "@c:type": "GDK_KEY_careof",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1195"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_caret",
                    "@value": "2812",
                    "@c:type": "GDK_KEY_caret",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1254"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_caron",
                    "@value": "439",
                    "@c:type": "GDK_KEY_caron",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "598"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_ccaron",
                    "@value": "488",
                    "@c:type": "GDK_KEY_ccaron",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "626"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_ccedilla",
                    "@value": "231",
                    "@c:type": "GDK_KEY_ccedilla",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "556"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_ccircumflex",
                    "@value": "742",
                    "@c:type": "GDK_KEY_ccircumflex",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "656"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_cedilla",
                    "@value": "184",
                    "@c:type": "GDK_KEY_cedilla",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "506"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_cent",
                    "@value": "162",
                    "@c:type": "GDK_KEY_cent",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "484"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_ch",
                    "@value": "65184",
                    "@c:type": "GDK_KEY_ch",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "349"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_checkerboard",
                    "@value": "2529",
                    "@c:type": "GDK_KEY_checkerboard",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1152"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_checkmark",
                    "@value": "2803",
                    "@c:type": "GDK_KEY_checkmark",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1245"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_circle",
                    "@value": "3023",
                    "@c:type": "GDK_KEY_circle",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1270"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_club",
                    "@value": "2796",
                    "@c:type": "GDK_KEY_club",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1239"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_colon",
                    "@value": "58",
                    "@c:type": "GDK_KEY_colon",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "412"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_comma",
                    "@value": "44",
                    "@c:type": "GDK_KEY_comma",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "398"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_containsas",
                    "@value": "16785931",
                    "@c:type": "GDK_KEY_containsas",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1781"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_copyright",
                    "@value": "169",
                    "@c:type": "GDK_KEY_copyright",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "491"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_cr",
                    "@value": "2532",
                    "@c:type": "GDK_KEY_cr",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1155"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_crossinglines",
                    "@value": "2542",
                    "@c:type": "GDK_KEY_crossinglines",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1163"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_cuberoot",
                    "@value": "16785947",
                    "@c:type": "GDK_KEY_cuberoot",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1783"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_currency",
                    "@value": "164",
                    "@c:type": "GDK_KEY_currency",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "486"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_cursor",
                    "@value": "2815",
                    "@c:type": "GDK_KEY_cursor",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1257"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_d",
                    "@value": "100",
                    "@c:type": "GDK_KEY_d",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "455"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_dabovedot",
                    "@value": "16784907",
                    "@c:type": "GDK_KEY_dabovedot",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "704"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_dagger",
                    "@value": "2801",
                    "@c:type": "GDK_KEY_dagger",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1243"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_dcaron",
                    "@value": "495",
                    "@c:type": "GDK_KEY_dcaron",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "629"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_dead_A",
                    "@value": "65153",
                    "@c:type": "GDK_KEY_dead_A",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "291"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_dead_E",
                    "@value": "65155",
                    "@c:type": "GDK_KEY_dead_E",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "293"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_dead_I",
                    "@value": "65157",
                    "@c:type": "GDK_KEY_dead_I",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "295"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_dead_O",
                    "@value": "65159",
                    "@c:type": "GDK_KEY_dead_O",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "297"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_dead_U",
                    "@value": "65161",
                    "@c:type": "GDK_KEY_dead_U",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "299"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_dead_a",
                    "@value": "65152",
                    "@c:type": "GDK_KEY_dead_a",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "290"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_dead_abovecomma",
                    "@value": "65124",
                    "@c:type": "GDK_KEY_dead_abovecomma",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "272"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_dead_abovedot",
                    "@value": "65110",
                    "@c:type": "GDK_KEY_dead_abovedot",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "258"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_dead_abovereversedcomma",
                    "@value": "65125",
                    "@c:type": "GDK_KEY_dead_abovereversedcomma",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "274"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_dead_abovering",
                    "@value": "65112",
                    "@c:type": "GDK_KEY_dead_abovering",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "260"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_dead_aboveverticalline",
                    "@value": "65169",
                    "@c:type": "GDK_KEY_dead_aboveverticalline",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "287"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_dead_acute",
                    "@value": "65105",
                    "@c:type": "GDK_KEY_dead_acute",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "252"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_dead_belowbreve",
                    "@value": "65131",
                    "@c:type": "GDK_KEY_dead_belowbreve",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "281"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_dead_belowcircumflex",
                    "@value": "65129",
                    "@c:type": "GDK_KEY_dead_belowcircumflex",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "279"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_dead_belowcomma",
                    "@value": "65134",
                    "@c:type": "GDK_KEY_dead_belowcomma",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "284"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_dead_belowdiaeresis",
                    "@value": "65132",
                    "@c:type": "GDK_KEY_dead_belowdiaeresis",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "282"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_dead_belowdot",
                    "@value": "65120",
                    "@c:type": "GDK_KEY_dead_belowdot",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "268"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_dead_belowmacron",
                    "@value": "65128",
                    "@c:type": "GDK_KEY_dead_belowmacron",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "278"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_dead_belowring",
                    "@value": "65127",
                    "@c:type": "GDK_KEY_dead_belowring",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "277"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_dead_belowtilde",
                    "@value": "65130",
                    "@c:type": "GDK_KEY_dead_belowtilde",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "280"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_dead_belowverticalline",
                    "@value": "65170",
                    "@c:type": "GDK_KEY_dead_belowverticalline",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "288"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_dead_breve",
                    "@value": "65109",
                    "@c:type": "GDK_KEY_dead_breve",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "257"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_dead_capital_schwa",
                    "@value": "65163",
                    "@c:type": "GDK_KEY_dead_capital_schwa",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "301"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_dead_caron",
                    "@value": "65114",
                    "@c:type": "GDK_KEY_dead_caron",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "262"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_dead_cedilla",
                    "@value": "65115",
                    "@c:type": "GDK_KEY_dead_cedilla",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "263"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_dead_circumflex",
                    "@value": "65106",
                    "@c:type": "GDK_KEY_dead_circumflex",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "253"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_dead_currency",
                    "@value": "65135",
                    "@c:type": "GDK_KEY_dead_currency",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "285"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_dead_dasia",
                    "@value": "65125",
                    "@c:type": "GDK_KEY_dead_dasia",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "275"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_dead_diaeresis",
                    "@value": "65111",
                    "@c:type": "GDK_KEY_dead_diaeresis",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "259"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_dead_doubleacute",
                    "@value": "65113",
                    "@c:type": "GDK_KEY_dead_doubleacute",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "261"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_dead_doublegrave",
                    "@value": "65126",
                    "@c:type": "GDK_KEY_dead_doublegrave",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "276"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_dead_e",
                    "@value": "65154",
                    "@c:type": "GDK_KEY_dead_e",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "292"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_dead_grave",
                    "@value": "65104",
                    "@c:type": "GDK_KEY_dead_grave",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "251"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_dead_greek",
                    "@value": "65164",
                    "@c:type": "GDK_KEY_dead_greek",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "302"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_dead_hook",
                    "@value": "65121",
                    "@c:type": "GDK_KEY_dead_hook",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "269"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_dead_horn",
                    "@value": "65122",
                    "@c:type": "GDK_KEY_dead_horn",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "270"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_dead_i",
                    "@value": "65156",
                    "@c:type": "GDK_KEY_dead_i",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "294"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_dead_invertedbreve",
                    "@value": "65133",
                    "@c:type": "GDK_KEY_dead_invertedbreve",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "283"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_dead_iota",
                    "@value": "65117",
                    "@c:type": "GDK_KEY_dead_iota",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "265"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_dead_longsolidusoverlay",
                    "@value": "65171",
                    "@c:type": "GDK_KEY_dead_longsolidusoverlay",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "289"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_dead_lowline",
                    "@value": "65168",
                    "@c:type": "GDK_KEY_dead_lowline",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "286"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_dead_macron",
                    "@value": "65108",
                    "@c:type": "GDK_KEY_dead_macron",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "256"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_dead_o",
                    "@value": "65158",
                    "@c:type": "GDK_KEY_dead_o",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "296"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_dead_ogonek",
                    "@value": "65116",
                    "@c:type": "GDK_KEY_dead_ogonek",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "264"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_dead_perispomeni",
                    "@value": "65107",
                    "@c:type": "GDK_KEY_dead_perispomeni",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "255"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_dead_psili",
                    "@value": "65124",
                    "@c:type": "GDK_KEY_dead_psili",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "273"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_dead_semivoiced_sound",
                    "@value": "65119",
                    "@c:type": "GDK_KEY_dead_semivoiced_sound",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "267"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_dead_small_schwa",
                    "@value": "65162",
                    "@c:type": "GDK_KEY_dead_small_schwa",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "300"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_dead_stroke",
                    "@value": "65123",
                    "@c:type": "GDK_KEY_dead_stroke",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "271"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_dead_tilde",
                    "@value": "65107",
                    "@c:type": "GDK_KEY_dead_tilde",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "254"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_dead_u",
                    "@value": "65160",
                    "@c:type": "GDK_KEY_dead_u",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "298"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_dead_voiced_sound",
                    "@value": "65118",
                    "@c:type": "GDK_KEY_dead_voiced_sound",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "266"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_decimalpoint",
                    "@value": "2749",
                    "@c:type": "GDK_KEY_decimalpoint",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1198"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_degree",
                    "@value": "176",
                    "@c:type": "GDK_KEY_degree",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "498"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_diaeresis",
                    "@value": "168",
                    "@c:type": "GDK_KEY_diaeresis",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "490"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_diamond",
                    "@value": "2797",
                    "@c:type": "GDK_KEY_diamond",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1240"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_digitspace",
                    "@value": "2725",
                    "@c:type": "GDK_KEY_digitspace",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1178"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_dintegral",
                    "@value": "16785964",
                    "@c:type": "GDK_KEY_dintegral",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1785"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_division",
                    "@value": "247",
                    "@c:type": "GDK_KEY_division",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "572"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_dollar",
                    "@value": "36",
                    "@c:type": "GDK_KEY_dollar",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "389"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_doubbaselinedot",
                    "@value": "2735",
                    "@c:type": "GDK_KEY_doubbaselinedot",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1186"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_doubleacute",
                    "@value": "445",
                    "@c:type": "GDK_KEY_doubleacute",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "603"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_doubledagger",
                    "@value": "2802",
                    "@c:type": "GDK_KEY_doubledagger",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1244"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_doublelowquotemark",
                    "@value": "2814",
                    "@c:type": "GDK_KEY_doublelowquotemark",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1256"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_downarrow",
                    "@value": "2302",
                    "@c:type": "GDK_KEY_downarrow",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1149"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_downcaret",
                    "@value": "2984",
                    "@c:type": "GDK_KEY_downcaret",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1260"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_downshoe",
                    "@value": "3030",
                    "@c:type": "GDK_KEY_downshoe",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1272"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_downstile",
                    "@value": "3012",
                    "@c:type": "GDK_KEY_downstile",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1265"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_downtack",
                    "@value": "3010",
                    "@c:type": "GDK_KEY_downtack",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1263"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_dstroke",
                    "@value": "496",
                    "@c:type": "GDK_KEY_dstroke",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "630"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_e",
                    "@value": "101",
                    "@c:type": "GDK_KEY_e",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "456"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_eabovedot",
                    "@value": "1004",
                    "@c:type": "GDK_KEY_eabovedot",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "689"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_eacute",
                    "@value": "233",
                    "@c:type": "GDK_KEY_eacute",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "558"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_ebelowdot",
                    "@value": "16785081",
                    "@c:type": "GDK_KEY_ebelowdot",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1680"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_ecaron",
                    "@value": "492",
                    "@c:type": "GDK_KEY_ecaron",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "628"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_ecircumflex",
                    "@value": "234",
                    "@c:type": "GDK_KEY_ecircumflex",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "559"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_ecircumflexacute",
                    "@value": "16785087",
                    "@c:type": "GDK_KEY_ecircumflexacute",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1686"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_ecircumflexbelowdot",
                    "@value": "16785095",
                    "@c:type": "GDK_KEY_ecircumflexbelowdot",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1694"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_ecircumflexgrave",
                    "@value": "16785089",
                    "@c:type": "GDK_KEY_ecircumflexgrave",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1688"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_ecircumflexhook",
                    "@value": "16785091",
                    "@c:type": "GDK_KEY_ecircumflexhook",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1690"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_ecircumflextilde",
                    "@value": "16785093",
                    "@c:type": "GDK_KEY_ecircumflextilde",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1692"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_ediaeresis",
                    "@value": "235",
                    "@c:type": "GDK_KEY_ediaeresis",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "560"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_egrave",
                    "@value": "232",
                    "@c:type": "GDK_KEY_egrave",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "557"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_ehook",
                    "@value": "16785083",
                    "@c:type": "GDK_KEY_ehook",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1682"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_eightsubscript",
                    "@value": "16785544",
                    "@c:type": "GDK_KEY_eightsubscript",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1775"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_eightsuperior",
                    "@value": "16785528",
                    "@c:type": "GDK_KEY_eightsuperior",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1765"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_elementof",
                    "@value": "16785928",
                    "@c:type": "GDK_KEY_elementof",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1779"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_ellipsis",
                    "@value": "2734",
                    "@c:type": "GDK_KEY_ellipsis",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1185"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_em3space",
                    "@value": "2723",
                    "@c:type": "GDK_KEY_em3space",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1176"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_em4space",
                    "@value": "2724",
                    "@c:type": "GDK_KEY_em4space",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1177"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_emacron",
                    "@value": "954",
                    "@c:type": "GDK_KEY_emacron",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "672"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_emdash",
                    "@value": "2729",
                    "@c:type": "GDK_KEY_emdash",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1182"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_emfilledcircle",
                    "@value": "2782",
                    "@c:type": "GDK_KEY_emfilledcircle",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1225"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_emfilledrect",
                    "@value": "2783",
                    "@c:type": "GDK_KEY_emfilledrect",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1226"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_emopencircle",
                    "@value": "2766",
                    "@c:type": "GDK_KEY_emopencircle",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1210"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_emopenrectangle",
                    "@value": "2767",
                    "@c:type": "GDK_KEY_emopenrectangle",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1211"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_emptyset",
                    "@value": "16785925",
                    "@c:type": "GDK_KEY_emptyset",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1778"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_emspace",
                    "@value": "2721",
                    "@c:type": "GDK_KEY_emspace",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1174"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_endash",
                    "@value": "2730",
                    "@c:type": "GDK_KEY_endash",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1183"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_enfilledcircbullet",
                    "@value": "2790",
                    "@c:type": "GDK_KEY_enfilledcircbullet",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1233"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_enfilledsqbullet",
                    "@value": "2791",
                    "@c:type": "GDK_KEY_enfilledsqbullet",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1234"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_eng",
                    "@value": "959",
                    "@c:type": "GDK_KEY_eng",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "676"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_enopencircbullet",
                    "@value": "2784",
                    "@c:type": "GDK_KEY_enopencircbullet",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1227"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_enopensquarebullet",
                    "@value": "2785",
                    "@c:type": "GDK_KEY_enopensquarebullet",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1228"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_enspace",
                    "@value": "2722",
                    "@c:type": "GDK_KEY_enspace",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1175"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_eogonek",
                    "@value": "490",
                    "@c:type": "GDK_KEY_eogonek",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "627"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_equal",
                    "@value": "61",
                    "@c:type": "GDK_KEY_equal",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "415"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_eth",
                    "@value": "240",
                    "@c:type": "GDK_KEY_eth",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "565"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_etilde",
                    "@value": "16785085",
                    "@c:type": "GDK_KEY_etilde",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1684"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_exclam",
                    "@value": "33",
                    "@c:type": "GDK_KEY_exclam",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "386"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_exclamdown",
                    "@value": "161",
                    "@c:type": "GDK_KEY_exclamdown",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "483"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_ezh",
                    "@value": "16777874",
                    "@c:type": "GDK_KEY_ezh",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1652"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_f",
                    "@value": "102",
                    "@c:type": "GDK_KEY_f",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "457"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_fabovedot",
                    "@value": "16784927",
                    "@c:type": "GDK_KEY_fabovedot",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "706"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_femalesymbol",
                    "@value": "2808",
                    "@c:type": "GDK_KEY_femalesymbol",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1250"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_ff",
                    "@value": "2531",
                    "@c:type": "GDK_KEY_ff",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1154"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_figdash",
                    "@value": "2747",
                    "@c:type": "GDK_KEY_figdash",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1196"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_filledlefttribullet",
                    "@value": "2780",
                    "@c:type": "GDK_KEY_filledlefttribullet",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1223"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_filledrectbullet",
                    "@value": "2779",
                    "@c:type": "GDK_KEY_filledrectbullet",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1222"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_filledrighttribullet",
                    "@value": "2781",
                    "@c:type": "GDK_KEY_filledrighttribullet",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1224"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_filledtribulletdown",
                    "@value": "2793",
                    "@c:type": "GDK_KEY_filledtribulletdown",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1236"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_filledtribulletup",
                    "@value": "2792",
                    "@c:type": "GDK_KEY_filledtribulletup",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1235"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_fiveeighths",
                    "@value": "2757",
                    "@c:type": "GDK_KEY_fiveeighths",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1203"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_fivesixths",
                    "@value": "2743",
                    "@c:type": "GDK_KEY_fivesixths",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1194"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_fivesubscript",
                    "@value": "16785541",
                    "@c:type": "GDK_KEY_fivesubscript",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1772"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_fivesuperior",
                    "@value": "16785525",
                    "@c:type": "GDK_KEY_fivesuperior",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1762"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_fourfifths",
                    "@value": "2741",
                    "@c:type": "GDK_KEY_fourfifths",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1192"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_foursubscript",
                    "@value": "16785540",
                    "@c:type": "GDK_KEY_foursubscript",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1771"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_foursuperior",
                    "@value": "16785524",
                    "@c:type": "GDK_KEY_foursuperior",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1761"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_fourthroot",
                    "@value": "16785948",
                    "@c:type": "GDK_KEY_fourthroot",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1784"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_function",
                    "@value": "2294",
                    "@c:type": "GDK_KEY_function",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1145"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_g",
                    "@value": "103",
                    "@c:type": "GDK_KEY_g",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "458"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_gabovedot",
                    "@value": "757",
                    "@c:type": "GDK_KEY_gabovedot",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "657"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_gbreve",
                    "@value": "699",
                    "@c:type": "GDK_KEY_gbreve",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "647"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_gcaron",
                    "@value": "16777703",
                    "@c:type": "GDK_KEY_gcaron",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1646"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_gcedilla",
                    "@value": "955",
                    "@c:type": "GDK_KEY_gcedilla",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "673"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_gcircumflex",
                    "@value": "760",
                    "@c:type": "GDK_KEY_gcircumflex",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "658"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_grave",
                    "@value": "96",
                    "@c:type": "GDK_KEY_grave",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "450"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_greater",
                    "@value": "62",
                    "@c:type": "GDK_KEY_greater",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "416"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_greaterthanequal",
                    "@value": "2238",
                    "@c:type": "GDK_KEY_greaterthanequal",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1126"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_guillemotleft",
                    "@value": "171",
                    "@c:type": "GDK_KEY_guillemotleft",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "493"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_guillemotright",
                    "@value": "187",
                    "@c:type": "GDK_KEY_guillemotright",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "509"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_h",
                    "@value": "104",
                    "@c:type": "GDK_KEY_h",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "459"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_hairspace",
                    "@value": "2728",
                    "@c:type": "GDK_KEY_hairspace",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1181"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_hcircumflex",
                    "@value": "694",
                    "@c:type": "GDK_KEY_hcircumflex",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "645"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_heart",
                    "@value": "2798",
                    "@c:type": "GDK_KEY_heart",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1241"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_hebrew_aleph",
                    "@value": "3296",
                    "@c:type": "GDK_KEY_hebrew_aleph",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1278"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_hebrew_ayin",
                    "@value": "3314",
                    "@c:type": "GDK_KEY_hebrew_ayin",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1303"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_hebrew_bet",
                    "@value": "3297",
                    "@c:type": "GDK_KEY_hebrew_bet",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1279"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_hebrew_beth",
                    "@value": "3297",
                    "@c:type": "GDK_KEY_hebrew_beth",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1280"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_hebrew_chet",
                    "@value": "3303",
                    "@c:type": "GDK_KEY_hebrew_chet",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1289"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_hebrew_dalet",
                    "@value": "3299",
                    "@c:type": "GDK_KEY_hebrew_dalet",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1283"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_hebrew_daleth",
                    "@value": "3299",
                    "@c:type": "GDK_KEY_hebrew_daleth",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1284"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_hebrew_doublelowline",
                    "@value": "3295",
                    "@c:type": "GDK_KEY_hebrew_doublelowline",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1277"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_hebrew_finalkaph",
                    "@value": "3306",
                    "@c:type": "GDK_KEY_hebrew_finalkaph",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1294"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_hebrew_finalmem",
                    "@value": "3309",
                    "@c:type": "GDK_KEY_hebrew_finalmem",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1297"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_hebrew_finalnun",
                    "@value": "3311",
                    "@c:type": "GDK_KEY_hebrew_finalnun",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1299"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_hebrew_finalpe",
                    "@value": "3315",
                    "@c:type": "GDK_KEY_hebrew_finalpe",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1304"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_hebrew_finalzade",
                    "@value": "3317",
                    "@c:type": "GDK_KEY_hebrew_finalzade",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1306"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_hebrew_finalzadi",
                    "@value": "3317",
                    "@c:type": "GDK_KEY_hebrew_finalzadi",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1307"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_hebrew_gimel",
                    "@value": "3298",
                    "@c:type": "GDK_KEY_hebrew_gimel",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1281"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_hebrew_gimmel",
                    "@value": "3298",
                    "@c:type": "GDK_KEY_hebrew_gimmel",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1282"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_hebrew_he",
                    "@value": "3300",
                    "@c:type": "GDK_KEY_hebrew_he",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1285"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_hebrew_het",
                    "@value": "3303",
                    "@c:type": "GDK_KEY_hebrew_het",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1290"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_hebrew_kaph",
                    "@value": "3307",
                    "@c:type": "GDK_KEY_hebrew_kaph",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1295"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_hebrew_kuf",
                    "@value": "3319",
                    "@c:type": "GDK_KEY_hebrew_kuf",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1311"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_hebrew_lamed",
                    "@value": "3308",
                    "@c:type": "GDK_KEY_hebrew_lamed",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1296"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_hebrew_mem",
                    "@value": "3310",
                    "@c:type": "GDK_KEY_hebrew_mem",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1298"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_hebrew_nun",
                    "@value": "3312",
                    "@c:type": "GDK_KEY_hebrew_nun",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1300"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_hebrew_pe",
                    "@value": "3316",
                    "@c:type": "GDK_KEY_hebrew_pe",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1305"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_hebrew_qoph",
                    "@value": "3319",
                    "@c:type": "GDK_KEY_hebrew_qoph",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1310"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_hebrew_resh",
                    "@value": "3320",
                    "@c:type": "GDK_KEY_hebrew_resh",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1312"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_hebrew_samech",
                    "@value": "3313",
                    "@c:type": "GDK_KEY_hebrew_samech",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1301"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_hebrew_samekh",
                    "@value": "3313",
                    "@c:type": "GDK_KEY_hebrew_samekh",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1302"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_hebrew_shin",
                    "@value": "3321",
                    "@c:type": "GDK_KEY_hebrew_shin",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1313"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_hebrew_taf",
                    "@value": "3322",
                    "@c:type": "GDK_KEY_hebrew_taf",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1315"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_hebrew_taw",
                    "@value": "3322",
                    "@c:type": "GDK_KEY_hebrew_taw",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1314"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_hebrew_tet",
                    "@value": "3304",
                    "@c:type": "GDK_KEY_hebrew_tet",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1291"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_hebrew_teth",
                    "@value": "3304",
                    "@c:type": "GDK_KEY_hebrew_teth",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1292"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_hebrew_waw",
                    "@value": "3301",
                    "@c:type": "GDK_KEY_hebrew_waw",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1286"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_hebrew_yod",
                    "@value": "3305",
                    "@c:type": "GDK_KEY_hebrew_yod",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1293"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_hebrew_zade",
                    "@value": "3318",
                    "@c:type": "GDK_KEY_hebrew_zade",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1308"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_hebrew_zadi",
                    "@value": "3318",
                    "@c:type": "GDK_KEY_hebrew_zadi",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1309"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_hebrew_zain",
                    "@value": "3302",
                    "@c:type": "GDK_KEY_hebrew_zain",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1287"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_hebrew_zayin",
                    "@value": "3302",
                    "@c:type": "GDK_KEY_hebrew_zayin",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1288"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_hexagram",
                    "@value": "2778",
                    "@c:type": "GDK_KEY_hexagram",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1221"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_horizconnector",
                    "@value": "2211",
                    "@c:type": "GDK_KEY_horizconnector",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1103"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_horizlinescan1",
                    "@value": "2543",
                    "@c:type": "GDK_KEY_horizlinescan1",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1164"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_horizlinescan3",
                    "@value": "2544",
                    "@c:type": "GDK_KEY_horizlinescan3",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1165"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_horizlinescan5",
                    "@value": "2545",
                    "@c:type": "GDK_KEY_horizlinescan5",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1166"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_horizlinescan7",
                    "@value": "2546",
                    "@c:type": "GDK_KEY_horizlinescan7",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1167"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_horizlinescan9",
                    "@value": "2547",
                    "@c:type": "GDK_KEY_horizlinescan9",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1168"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_hstroke",
                    "@value": "689",
                    "@c:type": "GDK_KEY_hstroke",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "644"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_ht",
                    "@value": "2530",
                    "@c:type": "GDK_KEY_ht",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1153"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_hyphen",
                    "@value": "173",
                    "@c:type": "GDK_KEY_hyphen",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "495"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_i",
                    "@value": "105",
                    "@c:type": "GDK_KEY_i",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "460"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_iTouch",
                    "@value": "269025120",
                    "@c:type": "GDK_KEY_iTouch",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "2223"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_iacute",
                    "@value": "237",
                    "@c:type": "GDK_KEY_iacute",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "562"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_ibelowdot",
                    "@value": "16785099",
                    "@c:type": "GDK_KEY_ibelowdot",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1698"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_ibreve",
                    "@value": "16777517",
                    "@c:type": "GDK_KEY_ibreve",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1644"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_icircumflex",
                    "@value": "238",
                    "@c:type": "GDK_KEY_icircumflex",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "563"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_identical",
                    "@value": "2255",
                    "@c:type": "GDK_KEY_identical",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1136"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_idiaeresis",
                    "@value": "239",
                    "@c:type": "GDK_KEY_idiaeresis",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "564"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_idotless",
                    "@value": "697",
                    "@c:type": "GDK_KEY_idotless",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "646"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_ifonlyif",
                    "@value": "2253",
                    "@c:type": "GDK_KEY_ifonlyif",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1134"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_igrave",
                    "@value": "236",
                    "@c:type": "GDK_KEY_igrave",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "561"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_ihook",
                    "@value": "16785097",
                    "@c:type": "GDK_KEY_ihook",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1696"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_imacron",
                    "@value": "1007",
                    "@c:type": "GDK_KEY_imacron",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "690"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_implies",
                    "@value": "2254",
                    "@c:type": "GDK_KEY_implies",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1135"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_includedin",
                    "@value": "2266",
                    "@c:type": "GDK_KEY_includedin",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1138"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_includes",
                    "@value": "2267",
                    "@c:type": "GDK_KEY_includes",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1139"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_infinity",
                    "@value": "2242",
                    "@c:type": "GDK_KEY_infinity",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1130"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_integral",
                    "@value": "2239",
                    "@c:type": "GDK_KEY_integral",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1127"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_intersection",
                    "@value": "2268",
                    "@c:type": "GDK_KEY_intersection",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1140"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_iogonek",
                    "@value": "999",
                    "@c:type": "GDK_KEY_iogonek",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "688"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_itilde",
                    "@value": "949",
                    "@c:type": "GDK_KEY_itilde",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "670"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_j",
                    "@value": "106",
                    "@c:type": "GDK_KEY_j",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "461"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_jcircumflex",
                    "@value": "700",
                    "@c:type": "GDK_KEY_jcircumflex",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "648"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_jot",
                    "@value": "3018",
                    "@c:type": "GDK_KEY_jot",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1267"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_k",
                    "@value": "107",
                    "@c:type": "GDK_KEY_k",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "462"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_kana_A",
                    "@value": "1201",
                    "@c:type": "GDK_KEY_kana_A",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "745"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_kana_CHI",
                    "@value": "1217",
                    "@c:type": "GDK_KEY_kana_CHI",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "761"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_kana_E",
                    "@value": "1204",
                    "@c:type": "GDK_KEY_kana_E",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "748"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_kana_FU",
                    "@value": "1228",
                    "@c:type": "GDK_KEY_kana_FU",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "774"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_kana_HA",
                    "@value": "1226",
                    "@c:type": "GDK_KEY_kana_HA",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "772"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_kana_HE",
                    "@value": "1229",
                    "@c:type": "GDK_KEY_kana_HE",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "776"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_kana_HI",
                    "@value": "1227",
                    "@c:type": "GDK_KEY_kana_HI",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "773"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_kana_HO",
                    "@value": "1230",
                    "@c:type": "GDK_KEY_kana_HO",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "777"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_kana_HU",
                    "@value": "1228",
                    "@c:type": "GDK_KEY_kana_HU",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "775"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_kana_I",
                    "@value": "1202",
                    "@c:type": "GDK_KEY_kana_I",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "746"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_kana_KA",
                    "@value": "1206",
                    "@c:type": "GDK_KEY_kana_KA",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "750"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_kana_KE",
                    "@value": "1209",
                    "@c:type": "GDK_KEY_kana_KE",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "753"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_kana_KI",
                    "@value": "1207",
                    "@c:type": "GDK_KEY_kana_KI",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "751"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_kana_KO",
                    "@value": "1210",
                    "@c:type": "GDK_KEY_kana_KO",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "754"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_kana_KU",
                    "@value": "1208",
                    "@c:type": "GDK_KEY_kana_KU",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "752"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_kana_MA",
                    "@value": "1231",
                    "@c:type": "GDK_KEY_kana_MA",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "778"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_kana_ME",
                    "@value": "1234",
                    "@c:type": "GDK_KEY_kana_ME",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "781"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_kana_MI",
                    "@value": "1232",
                    "@c:type": "GDK_KEY_kana_MI",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "779"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_kana_MO",
                    "@value": "1235",
                    "@c:type": "GDK_KEY_kana_MO",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "782"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_kana_MU",
                    "@value": "1233",
                    "@c:type": "GDK_KEY_kana_MU",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "780"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_kana_N",
                    "@value": "1245",
                    "@c:type": "GDK_KEY_kana_N",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "792"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_kana_NA",
                    "@value": "1221",
                    "@c:type": "GDK_KEY_kana_NA",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "767"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_kana_NE",
                    "@value": "1224",
                    "@c:type": "GDK_KEY_kana_NE",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "770"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_kana_NI",
                    "@value": "1222",
                    "@c:type": "GDK_KEY_kana_NI",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "768"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_kana_NO",
                    "@value": "1225",
                    "@c:type": "GDK_KEY_kana_NO",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "771"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_kana_NU",
                    "@value": "1223",
                    "@c:type": "GDK_KEY_kana_NU",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "769"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_kana_O",
                    "@value": "1205",
                    "@c:type": "GDK_KEY_kana_O",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "749"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_kana_RA",
                    "@value": "1239",
                    "@c:type": "GDK_KEY_kana_RA",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "786"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_kana_RE",
                    "@value": "1242",
                    "@c:type": "GDK_KEY_kana_RE",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "789"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_kana_RI",
                    "@value": "1240",
                    "@c:type": "GDK_KEY_kana_RI",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "787"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_kana_RO",
                    "@value": "1243",
                    "@c:type": "GDK_KEY_kana_RO",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "790"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_kana_RU",
                    "@value": "1241",
                    "@c:type": "GDK_KEY_kana_RU",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "788"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_kana_SA",
                    "@value": "1211",
                    "@c:type": "GDK_KEY_kana_SA",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "755"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_kana_SE",
                    "@value": "1214",
                    "@c:type": "GDK_KEY_kana_SE",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "758"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_kana_SHI",
                    "@value": "1212",
                    "@c:type": "GDK_KEY_kana_SHI",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "756"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_kana_SO",
                    "@value": "1215",
                    "@c:type": "GDK_KEY_kana_SO",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "759"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_kana_SU",
                    "@value": "1213",
                    "@c:type": "GDK_KEY_kana_SU",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "757"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_kana_TA",
                    "@value": "1216",
                    "@c:type": "GDK_KEY_kana_TA",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "760"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_kana_TE",
                    "@value": "1219",
                    "@c:type": "GDK_KEY_kana_TE",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "765"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_kana_TI",
                    "@value": "1217",
                    "@c:type": "GDK_KEY_kana_TI",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "762"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_kana_TO",
                    "@value": "1220",
                    "@c:type": "GDK_KEY_kana_TO",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "766"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_kana_TSU",
                    "@value": "1218",
                    "@c:type": "GDK_KEY_kana_TSU",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "763"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_kana_TU",
                    "@value": "1218",
                    "@c:type": "GDK_KEY_kana_TU",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "764"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_kana_U",
                    "@value": "1203",
                    "@c:type": "GDK_KEY_kana_U",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "747"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_kana_WA",
                    "@value": "1244",
                    "@c:type": "GDK_KEY_kana_WA",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "791"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_kana_WO",
                    "@value": "1190",
                    "@c:type": "GDK_KEY_kana_WO",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "733"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_kana_YA",
                    "@value": "1236",
                    "@c:type": "GDK_KEY_kana_YA",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "783"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_kana_YO",
                    "@value": "1238",
                    "@c:type": "GDK_KEY_kana_YO",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "785"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_kana_YU",
                    "@value": "1237",
                    "@c:type": "GDK_KEY_kana_YU",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "784"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_kana_a",
                    "@value": "1191",
                    "@c:type": "GDK_KEY_kana_a",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "734"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_kana_closingbracket",
                    "@value": "1187",
                    "@c:type": "GDK_KEY_kana_closingbracket",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "729"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_kana_comma",
                    "@value": "1188",
                    "@c:type": "GDK_KEY_kana_comma",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "730"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_kana_conjunctive",
                    "@value": "1189",
                    "@c:type": "GDK_KEY_kana_conjunctive",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "731"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_kana_e",
                    "@value": "1194",
                    "@c:type": "GDK_KEY_kana_e",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "737"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_kana_fullstop",
                    "@value": "1185",
                    "@c:type": "GDK_KEY_kana_fullstop",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "727"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_kana_i",
                    "@value": "1192",
                    "@c:type": "GDK_KEY_kana_i",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "735"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_kana_middledot",
                    "@value": "1189",
                    "@c:type": "GDK_KEY_kana_middledot",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "732"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_kana_o",
                    "@value": "1195",
                    "@c:type": "GDK_KEY_kana_o",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "738"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_kana_openingbracket",
                    "@value": "1186",
                    "@c:type": "GDK_KEY_kana_openingbracket",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "728"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_kana_switch",
                    "@value": "65406",
                    "@c:type": "GDK_KEY_kana_switch",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "795"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_kana_tsu",
                    "@value": "1199",
                    "@c:type": "GDK_KEY_kana_tsu",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "742"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_kana_tu",
                    "@value": "1199",
                    "@c:type": "GDK_KEY_kana_tu",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "743"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_kana_u",
                    "@value": "1193",
                    "@c:type": "GDK_KEY_kana_u",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "736"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_kana_ya",
                    "@value": "1196",
                    "@c:type": "GDK_KEY_kana_ya",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "739"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_kana_yo",
                    "@value": "1198",
                    "@c:type": "GDK_KEY_kana_yo",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "741"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_kana_yu",
                    "@value": "1197",
                    "@c:type": "GDK_KEY_kana_yu",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "740"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_kappa",
                    "@value": "930",
                    "@c:type": "GDK_KEY_kappa",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "662"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_kcedilla",
                    "@value": "1011",
                    "@c:type": "GDK_KEY_kcedilla",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "693"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_kra",
                    "@value": "930",
                    "@c:type": "GDK_KEY_kra",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "661"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_l",
                    "@value": "108",
                    "@c:type": "GDK_KEY_l",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "463"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_lacute",
                    "@value": "485",
                    "@c:type": "GDK_KEY_lacute",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "624"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_latincross",
                    "@value": "2777",
                    "@c:type": "GDK_KEY_latincross",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1220"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_lbelowdot",
                    "@value": "16784951",
                    "@c:type": "GDK_KEY_lbelowdot",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1654"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_lcaron",
                    "@value": "437",
                    "@c:type": "GDK_KEY_lcaron",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "596"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_lcedilla",
                    "@value": "950",
                    "@c:type": "GDK_KEY_lcedilla",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "671"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_leftanglebracket",
                    "@value": "2748",
                    "@c:type": "GDK_KEY_leftanglebracket",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1197"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_leftarrow",
                    "@value": "2299",
                    "@c:type": "GDK_KEY_leftarrow",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1146"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_leftcaret",
                    "@value": "2979",
                    "@c:type": "GDK_KEY_leftcaret",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1258"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_leftdoublequotemark",
                    "@value": "2770",
                    "@c:type": "GDK_KEY_leftdoublequotemark",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1214"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_leftmiddlecurlybrace",
                    "@value": "2223",
                    "@c:type": "GDK_KEY_leftmiddlecurlybrace",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1115"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_leftopentriangle",
                    "@value": "2764",
                    "@c:type": "GDK_KEY_leftopentriangle",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1208"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_leftpointer",
                    "@value": "2794",
                    "@c:type": "GDK_KEY_leftpointer",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1237"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_leftradical",
                    "@value": "2209",
                    "@c:type": "GDK_KEY_leftradical",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1101"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_leftshoe",
                    "@value": "3034",
                    "@c:type": "GDK_KEY_leftshoe",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1274"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_leftsinglequotemark",
                    "@value": "2768",
                    "@c:type": "GDK_KEY_leftsinglequotemark",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1212"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_leftt",
                    "@value": "2548",
                    "@c:type": "GDK_KEY_leftt",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1169"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_lefttack",
                    "@value": "3036",
                    "@c:type": "GDK_KEY_lefttack",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1275"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_less",
                    "@value": "60",
                    "@c:type": "GDK_KEY_less",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "414"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_lessthanequal",
                    "@value": "2236",
                    "@c:type": "GDK_KEY_lessthanequal",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1124"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_lf",
                    "@value": "2533",
                    "@c:type": "GDK_KEY_lf",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1156"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_logicaland",
                    "@value": "2270",
                    "@c:type": "GDK_KEY_logicaland",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1142"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_logicalor",
                    "@value": "2271",
                    "@c:type": "GDK_KEY_logicalor",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1143"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_lowleftcorner",
                    "@value": "2541",
                    "@c:type": "GDK_KEY_lowleftcorner",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1162"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_lowrightcorner",
                    "@value": "2538",
                    "@c:type": "GDK_KEY_lowrightcorner",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1159"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_lstroke",
                    "@value": "435",
                    "@c:type": "GDK_KEY_lstroke",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "595"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_m",
                    "@value": "109",
                    "@c:type": "GDK_KEY_m",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "464"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_mabovedot",
                    "@value": "16784961",
                    "@c:type": "GDK_KEY_mabovedot",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "708"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_macron",
                    "@value": "175",
                    "@c:type": "GDK_KEY_macron",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "497"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_malesymbol",
                    "@value": "2807",
                    "@c:type": "GDK_KEY_malesymbol",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1249"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_maltesecross",
                    "@value": "2800",
                    "@c:type": "GDK_KEY_maltesecross",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1242"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_marker",
                    "@value": "2751",
                    "@c:type": "GDK_KEY_marker",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1200"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_masculine",
                    "@value": "186",
                    "@c:type": "GDK_KEY_masculine",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "508"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_minus",
                    "@value": "45",
                    "@c:type": "GDK_KEY_minus",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "399"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_minutes",
                    "@value": "2774",
                    "@c:type": "GDK_KEY_minutes",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1218"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_mu",
                    "@value": "181",
                    "@c:type": "GDK_KEY_mu",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "503"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_multiply",
                    "@value": "215",
                    "@c:type": "GDK_KEY_multiply",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "538"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_musicalflat",
                    "@value": "2806",
                    "@c:type": "GDK_KEY_musicalflat",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1248"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_musicalsharp",
                    "@value": "2805",
                    "@c:type": "GDK_KEY_musicalsharp",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1247"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_n",
                    "@value": "110",
                    "@c:type": "GDK_KEY_n",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "465"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_nabla",
                    "@value": "2245",
                    "@c:type": "GDK_KEY_nabla",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1131"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_nacute",
                    "@value": "497",
                    "@c:type": "GDK_KEY_nacute",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "631"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_ncaron",
                    "@value": "498",
                    "@c:type": "GDK_KEY_ncaron",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "632"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_ncedilla",
                    "@value": "1009",
                    "@c:type": "GDK_KEY_ncedilla",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "691"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_ninesubscript",
                    "@value": "16785545",
                    "@c:type": "GDK_KEY_ninesubscript",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1776"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_ninesuperior",
                    "@value": "16785529",
                    "@c:type": "GDK_KEY_ninesuperior",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1766"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_nl",
                    "@value": "2536",
                    "@c:type": "GDK_KEY_nl",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1157"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_nobreakspace",
                    "@value": "160",
                    "@c:type": "GDK_KEY_nobreakspace",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "482"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_notapproxeq",
                    "@value": "16785991",
                    "@c:type": "GDK_KEY_notapproxeq",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1789"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_notelementof",
                    "@value": "16785929",
                    "@c:type": "GDK_KEY_notelementof",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1780"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_notequal",
                    "@value": "2237",
                    "@c:type": "GDK_KEY_notequal",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1125"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_notidentical",
                    "@value": "16786018",
                    "@c:type": "GDK_KEY_notidentical",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1790"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_notsign",
                    "@value": "172",
                    "@c:type": "GDK_KEY_notsign",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "494"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_ntilde",
                    "@value": "241",
                    "@c:type": "GDK_KEY_ntilde",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "566"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_numbersign",
                    "@value": "35",
                    "@c:type": "GDK_KEY_numbersign",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "388"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_numerosign",
                    "@value": "1712",
                    "@c:type": "GDK_KEY_numerosign",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "939"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_o",
                    "@value": "111",
                    "@c:type": "GDK_KEY_o",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "466"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_oacute",
                    "@value": "243",
                    "@c:type": "GDK_KEY_oacute",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "568"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_obarred",
                    "@value": "16777845",
                    "@c:type": "GDK_KEY_obarred",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1648"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_obelowdot",
                    "@value": "16785101",
                    "@c:type": "GDK_KEY_obelowdot",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1700"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_ocaron",
                    "@value": "16777682",
                    "@c:type": "GDK_KEY_ocaron",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1647"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_ocircumflex",
                    "@value": "244",
                    "@c:type": "GDK_KEY_ocircumflex",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "569"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_ocircumflexacute",
                    "@value": "16785105",
                    "@c:type": "GDK_KEY_ocircumflexacute",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1704"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_ocircumflexbelowdot",
                    "@value": "16785113",
                    "@c:type": "GDK_KEY_ocircumflexbelowdot",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1712"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_ocircumflexgrave",
                    "@value": "16785107",
                    "@c:type": "GDK_KEY_ocircumflexgrave",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1706"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_ocircumflexhook",
                    "@value": "16785109",
                    "@c:type": "GDK_KEY_ocircumflexhook",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1708"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_ocircumflextilde",
                    "@value": "16785111",
                    "@c:type": "GDK_KEY_ocircumflextilde",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1710"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_odiaeresis",
                    "@value": "246",
                    "@c:type": "GDK_KEY_odiaeresis",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "571"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_odoubleacute",
                    "@value": "501",
                    "@c:type": "GDK_KEY_odoubleacute",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "633"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_oe",
                    "@value": "5053",
                    "@c:type": "GDK_KEY_oe",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "724"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_ogonek",
                    "@value": "434",
                    "@c:type": "GDK_KEY_ogonek",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "594"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_ograve",
                    "@value": "242",
                    "@c:type": "GDK_KEY_ograve",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "567"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_ohook",
                    "@value": "16785103",
                    "@c:type": "GDK_KEY_ohook",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1702"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_ohorn",
                    "@value": "16777633",
                    "@c:type": "GDK_KEY_ohorn",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1744"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_ohornacute",
                    "@value": "16785115",
                    "@c:type": "GDK_KEY_ohornacute",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1714"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_ohornbelowdot",
                    "@value": "16785123",
                    "@c:type": "GDK_KEY_ohornbelowdot",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1722"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_ohorngrave",
                    "@value": "16785117",
                    "@c:type": "GDK_KEY_ohorngrave",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1716"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_ohornhook",
                    "@value": "16785119",
                    "@c:type": "GDK_KEY_ohornhook",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1718"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_ohorntilde",
                    "@value": "16785121",
                    "@c:type": "GDK_KEY_ohorntilde",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1720"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_omacron",
                    "@value": "1010",
                    "@c:type": "GDK_KEY_omacron",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "692"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_oneeighth",
                    "@value": "2755",
                    "@c:type": "GDK_KEY_oneeighth",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1201"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_onefifth",
                    "@value": "2738",
                    "@c:type": "GDK_KEY_onefifth",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1189"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_onehalf",
                    "@value": "189",
                    "@c:type": "GDK_KEY_onehalf",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "511"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_onequarter",
                    "@value": "188",
                    "@c:type": "GDK_KEY_onequarter",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "510"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_onesixth",
                    "@value": "2742",
                    "@c:type": "GDK_KEY_onesixth",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1193"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_onesubscript",
                    "@value": "16785537",
                    "@c:type": "GDK_KEY_onesubscript",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1768"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_onesuperior",
                    "@value": "185",
                    "@c:type": "GDK_KEY_onesuperior",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "507"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_onethird",
                    "@value": "2736",
                    "@c:type": "GDK_KEY_onethird",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1187"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_ooblique",
                    "@value": "248",
                    "@c:type": "GDK_KEY_ooblique",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "574"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_openrectbullet",
                    "@value": "2786",
                    "@c:type": "GDK_KEY_openrectbullet",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1229"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_openstar",
                    "@value": "2789",
                    "@c:type": "GDK_KEY_openstar",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1232"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_opentribulletdown",
                    "@value": "2788",
                    "@c:type": "GDK_KEY_opentribulletdown",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1231"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_opentribulletup",
                    "@value": "2787",
                    "@c:type": "GDK_KEY_opentribulletup",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1230"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_ordfeminine",
                    "@value": "170",
                    "@c:type": "GDK_KEY_ordfeminine",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "492"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_oslash",
                    "@value": "248",
                    "@c:type": "GDK_KEY_oslash",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "573"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_otilde",
                    "@value": "245",
                    "@c:type": "GDK_KEY_otilde",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "570"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_overbar",
                    "@value": "3008",
                    "@c:type": "GDK_KEY_overbar",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1262"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_overline",
                    "@value": "1150",
                    "@c:type": "GDK_KEY_overline",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "726"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_p",
                    "@value": "112",
                    "@c:type": "GDK_KEY_p",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "467"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_pabovedot",
                    "@value": "16784983",
                    "@c:type": "GDK_KEY_pabovedot",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "710"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_paragraph",
                    "@value": "182",
                    "@c:type": "GDK_KEY_paragraph",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "504"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_parenleft",
                    "@value": "40",
                    "@c:type": "GDK_KEY_parenleft",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "394"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_parenright",
                    "@value": "41",
                    "@c:type": "GDK_KEY_parenright",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "395"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_partdifferential",
                    "@value": "16785922",
                    "@c:type": "GDK_KEY_partdifferential",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1777"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_partialderivative",
                    "@value": "2287",
                    "@c:type": "GDK_KEY_partialderivative",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1144"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_percent",
                    "@value": "37",
                    "@c:type": "GDK_KEY_percent",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "390"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_period",
                    "@value": "46",
                    "@c:type": "GDK_KEY_period",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "400"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_periodcentered",
                    "@value": "183",
                    "@c:type": "GDK_KEY_periodcentered",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "505"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_permille",
                    "@value": "2773",
                    "@c:type": "GDK_KEY_permille",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1217"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_phonographcopyright",
                    "@value": "2811",
                    "@c:type": "GDK_KEY_phonographcopyright",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1253"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_plus",
                    "@value": "43",
                    "@c:type": "GDK_KEY_plus",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "397"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_plusminus",
                    "@value": "177",
                    "@c:type": "GDK_KEY_plusminus",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "499"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_prescription",
                    "@value": "2772",
                    "@c:type": "GDK_KEY_prescription",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1216"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_prolongedsound",
                    "@value": "1200",
                    "@c:type": "GDK_KEY_prolongedsound",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "744"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_punctspace",
                    "@value": "2726",
                    "@c:type": "GDK_KEY_punctspace",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1179"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_q",
                    "@value": "113",
                    "@c:type": "GDK_KEY_q",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "468"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_quad",
                    "@value": "3020",
                    "@c:type": "GDK_KEY_quad",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1268"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_question",
                    "@value": "63",
                    "@c:type": "GDK_KEY_question",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "417"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_questiondown",
                    "@value": "191",
                    "@c:type": "GDK_KEY_questiondown",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "513"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_quotedbl",
                    "@value": "34",
                    "@c:type": "GDK_KEY_quotedbl",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "387"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_quoteleft",
                    "@value": "96",
                    "@c:type": "GDK_KEY_quoteleft",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "451"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_quoteright",
                    "@value": "39",
                    "@c:type": "GDK_KEY_quoteright",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "393"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_r",
                    "@value": "114",
                    "@c:type": "GDK_KEY_r",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "469"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_racute",
                    "@value": "480",
                    "@c:type": "GDK_KEY_racute",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "622"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_radical",
                    "@value": "2262",
                    "@c:type": "GDK_KEY_radical",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1137"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_rcaron",
                    "@value": "504",
                    "@c:type": "GDK_KEY_rcaron",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "634"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_rcedilla",
                    "@value": "947",
                    "@c:type": "GDK_KEY_rcedilla",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "669"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_registered",
                    "@value": "174",
                    "@c:type": "GDK_KEY_registered",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "496"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_rightanglebracket",
                    "@value": "2750",
                    "@c:type": "GDK_KEY_rightanglebracket",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1199"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_rightarrow",
                    "@value": "2301",
                    "@c:type": "GDK_KEY_rightarrow",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1148"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_rightcaret",
                    "@value": "2982",
                    "@c:type": "GDK_KEY_rightcaret",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1259"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_rightdoublequotemark",
                    "@value": "2771",
                    "@c:type": "GDK_KEY_rightdoublequotemark",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1215"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_rightmiddlecurlybrace",
                    "@value": "2224",
                    "@c:type": "GDK_KEY_rightmiddlecurlybrace",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1116"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_rightmiddlesummation",
                    "@value": "2231",
                    "@c:type": "GDK_KEY_rightmiddlesummation",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1123"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_rightopentriangle",
                    "@value": "2765",
                    "@c:type": "GDK_KEY_rightopentriangle",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1209"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_rightpointer",
                    "@value": "2795",
                    "@c:type": "GDK_KEY_rightpointer",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1238"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_rightshoe",
                    "@value": "3032",
                    "@c:type": "GDK_KEY_rightshoe",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1273"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_rightsinglequotemark",
                    "@value": "2769",
                    "@c:type": "GDK_KEY_rightsinglequotemark",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1213"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_rightt",
                    "@value": "2549",
                    "@c:type": "GDK_KEY_rightt",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1170"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_righttack",
                    "@value": "3068",
                    "@c:type": "GDK_KEY_righttack",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1276"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_s",
                    "@value": "115",
                    "@c:type": "GDK_KEY_s",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "470"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_sabovedot",
                    "@value": "16784993",
                    "@c:type": "GDK_KEY_sabovedot",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "712"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_sacute",
                    "@value": "438",
                    "@c:type": "GDK_KEY_sacute",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "597"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_scaron",
                    "@value": "441",
                    "@c:type": "GDK_KEY_scaron",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "599"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_scedilla",
                    "@value": "442",
                    "@c:type": "GDK_KEY_scedilla",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "600"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_schwa",
                    "@value": "16777817",
                    "@c:type": "GDK_KEY_schwa",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1650"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_scircumflex",
                    "@value": "766",
                    "@c:type": "GDK_KEY_scircumflex",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "660"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_script_switch",
                    "@value": "65406",
                    "@c:type": "GDK_KEY_script_switch",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "98"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_seconds",
                    "@value": "2775",
                    "@c:type": "GDK_KEY_seconds",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1219"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_section",
                    "@value": "167",
                    "@c:type": "GDK_KEY_section",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "489"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_semicolon",
                    "@value": "59",
                    "@c:type": "GDK_KEY_semicolon",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "413"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_semivoicedsound",
                    "@value": "1247",
                    "@c:type": "GDK_KEY_semivoicedsound",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "794"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_seveneighths",
                    "@value": "2758",
                    "@c:type": "GDK_KEY_seveneighths",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1204"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_sevensubscript",
                    "@value": "16785543",
                    "@c:type": "GDK_KEY_sevensubscript",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1774"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_sevensuperior",
                    "@value": "16785527",
                    "@c:type": "GDK_KEY_sevensuperior",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1764"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_signaturemark",
                    "@value": "2762",
                    "@c:type": "GDK_KEY_signaturemark",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1206"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_signifblank",
                    "@value": "2732",
                    "@c:type": "GDK_KEY_signifblank",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1184"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_similarequal",
                    "@value": "2249",
                    "@c:type": "GDK_KEY_similarequal",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1133"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_singlelowquotemark",
                    "@value": "2813",
                    "@c:type": "GDK_KEY_singlelowquotemark",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1255"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_sixsubscript",
                    "@value": "16785542",
                    "@c:type": "GDK_KEY_sixsubscript",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1773"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_sixsuperior",
                    "@value": "16785526",
                    "@c:type": "GDK_KEY_sixsuperior",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1763"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_slash",
                    "@value": "47",
                    "@c:type": "GDK_KEY_slash",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "401"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_soliddiamond",
                    "@value": "2528",
                    "@c:type": "GDK_KEY_soliddiamond",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1151"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_space",
                    "@value": "32",
                    "@c:type": "GDK_KEY_space",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "385"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_squareroot",
                    "@value": "16785946",
                    "@c:type": "GDK_KEY_squareroot",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1782"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_ssharp",
                    "@value": "223",
                    "@c:type": "GDK_KEY_ssharp",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "548"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_sterling",
                    "@value": "163",
                    "@c:type": "GDK_KEY_sterling",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "485"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_stricteq",
                    "@value": "16786019",
                    "@c:type": "GDK_KEY_stricteq",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1791"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_t",
                    "@value": "116",
                    "@c:type": "GDK_KEY_t",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "471"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_tabovedot",
                    "@value": "16785003",
                    "@c:type": "GDK_KEY_tabovedot",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "714"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_tcaron",
                    "@value": "443",
                    "@c:type": "GDK_KEY_tcaron",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "601"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_tcedilla",
                    "@value": "510",
                    "@c:type": "GDK_KEY_tcedilla",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "637"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_telephone",
                    "@value": "2809",
                    "@c:type": "GDK_KEY_telephone",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1251"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_telephonerecorder",
                    "@value": "2810",
                    "@c:type": "GDK_KEY_telephonerecorder",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1252"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_therefore",
                    "@value": "2240",
                    "@c:type": "GDK_KEY_therefore",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1128"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_thinspace",
                    "@value": "2727",
                    "@c:type": "GDK_KEY_thinspace",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1180"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_thorn",
                    "@value": "254",
                    "@c:type": "GDK_KEY_thorn",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "580"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_threeeighths",
                    "@value": "2756",
                    "@c:type": "GDK_KEY_threeeighths",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1202"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_threefifths",
                    "@value": "2740",
                    "@c:type": "GDK_KEY_threefifths",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1191"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_threequarters",
                    "@value": "190",
                    "@c:type": "GDK_KEY_threequarters",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "512"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_threesubscript",
                    "@value": "16785539",
                    "@c:type": "GDK_KEY_threesubscript",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1770"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_threesuperior",
                    "@value": "179",
                    "@c:type": "GDK_KEY_threesuperior",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "501"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_tintegral",
                    "@value": "16785965",
                    "@c:type": "GDK_KEY_tintegral",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1786"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_topintegral",
                    "@value": "2212",
                    "@c:type": "GDK_KEY_topintegral",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1104"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_topleftparens",
                    "@value": "2219",
                    "@c:type": "GDK_KEY_topleftparens",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1111"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_topleftradical",
                    "@value": "2210",
                    "@c:type": "GDK_KEY_topleftradical",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1102"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_topleftsqbracket",
                    "@value": "2215",
                    "@c:type": "GDK_KEY_topleftsqbracket",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1107"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_topleftsummation",
                    "@value": "2225",
                    "@c:type": "GDK_KEY_topleftsummation",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1117"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_toprightparens",
                    "@value": "2221",
                    "@c:type": "GDK_KEY_toprightparens",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1113"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_toprightsqbracket",
                    "@value": "2217",
                    "@c:type": "GDK_KEY_toprightsqbracket",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1109"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_toprightsummation",
                    "@value": "2229",
                    "@c:type": "GDK_KEY_toprightsummation",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1121"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_topt",
                    "@value": "2551",
                    "@c:type": "GDK_KEY_topt",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1172"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_topvertsummationconnector",
                    "@value": "2227",
                    "@c:type": "GDK_KEY_topvertsummationconnector",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1119"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_trademark",
                    "@value": "2761",
                    "@c:type": "GDK_KEY_trademark",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1205"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_trademarkincircle",
                    "@value": "2763",
                    "@c:type": "GDK_KEY_trademarkincircle",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1207"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_tslash",
                    "@value": "956",
                    "@c:type": "GDK_KEY_tslash",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "674"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_twofifths",
                    "@value": "2739",
                    "@c:type": "GDK_KEY_twofifths",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1190"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_twosubscript",
                    "@value": "16785538",
                    "@c:type": "GDK_KEY_twosubscript",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1769"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_twosuperior",
                    "@value": "178",
                    "@c:type": "GDK_KEY_twosuperior",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "500"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_twothirds",
                    "@value": "2737",
                    "@c:type": "GDK_KEY_twothirds",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1188"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_u",
                    "@value": "117",
                    "@c:type": "GDK_KEY_u",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "472"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_uacute",
                    "@value": "250",
                    "@c:type": "GDK_KEY_uacute",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "576"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_ubelowdot",
                    "@value": "16785125",
                    "@c:type": "GDK_KEY_ubelowdot",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1724"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_ubreve",
                    "@value": "765",
                    "@c:type": "GDK_KEY_ubreve",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "659"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_ucircumflex",
                    "@value": "251",
                    "@c:type": "GDK_KEY_ucircumflex",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "577"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_udiaeresis",
                    "@value": "252",
                    "@c:type": "GDK_KEY_udiaeresis",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "578"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_udoubleacute",
                    "@value": "507",
                    "@c:type": "GDK_KEY_udoubleacute",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "636"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_ugrave",
                    "@value": "249",
                    "@c:type": "GDK_KEY_ugrave",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "575"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_uhook",
                    "@value": "16785127",
                    "@c:type": "GDK_KEY_uhook",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1726"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_uhorn",
                    "@value": "16777648",
                    "@c:type": "GDK_KEY_uhorn",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1746"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_uhornacute",
                    "@value": "16785129",
                    "@c:type": "GDK_KEY_uhornacute",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1728"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_uhornbelowdot",
                    "@value": "16785137",
                    "@c:type": "GDK_KEY_uhornbelowdot",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1736"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_uhorngrave",
                    "@value": "16785131",
                    "@c:type": "GDK_KEY_uhorngrave",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1730"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_uhornhook",
                    "@value": "16785133",
                    "@c:type": "GDK_KEY_uhornhook",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1732"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_uhorntilde",
                    "@value": "16785135",
                    "@c:type": "GDK_KEY_uhorntilde",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1734"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_umacron",
                    "@value": "1022",
                    "@c:type": "GDK_KEY_umacron",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "696"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_underbar",
                    "@value": "3014",
                    "@c:type": "GDK_KEY_underbar",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1266"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_underscore",
                    "@value": "95",
                    "@c:type": "GDK_KEY_underscore",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "449"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_union",
                    "@value": "2269",
                    "@c:type": "GDK_KEY_union",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1141"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_uogonek",
                    "@value": "1017",
                    "@c:type": "GDK_KEY_uogonek",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "694"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_uparrow",
                    "@value": "2300",
                    "@c:type": "GDK_KEY_uparrow",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1147"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_upcaret",
                    "@value": "2985",
                    "@c:type": "GDK_KEY_upcaret",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1261"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_upleftcorner",
                    "@value": "2540",
                    "@c:type": "GDK_KEY_upleftcorner",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1161"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_uprightcorner",
                    "@value": "2539",
                    "@c:type": "GDK_KEY_uprightcorner",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1160"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_upshoe",
                    "@value": "3011",
                    "@c:type": "GDK_KEY_upshoe",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1264"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_upstile",
                    "@value": "3027",
                    "@c:type": "GDK_KEY_upstile",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1271"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_uptack",
                    "@value": "3022",
                    "@c:type": "GDK_KEY_uptack",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1269"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_uring",
                    "@value": "505",
                    "@c:type": "GDK_KEY_uring",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "635"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_utilde",
                    "@value": "1021",
                    "@c:type": "GDK_KEY_utilde",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "695"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_v",
                    "@value": "118",
                    "@c:type": "GDK_KEY_v",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "473"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_variation",
                    "@value": "2241",
                    "@c:type": "GDK_KEY_variation",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1129"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_vertbar",
                    "@value": "2552",
                    "@c:type": "GDK_KEY_vertbar",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1173"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_vertconnector",
                    "@value": "2214",
                    "@c:type": "GDK_KEY_vertconnector",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1106"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_voicedsound",
                    "@value": "1246",
                    "@c:type": "GDK_KEY_voicedsound",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "793"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_vt",
                    "@value": "2537",
                    "@c:type": "GDK_KEY_vt",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1158"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_w",
                    "@value": "119",
                    "@c:type": "GDK_KEY_w",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "474"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_wacute",
                    "@value": "16785027",
                    "@c:type": "GDK_KEY_wacute",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "718"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_wcircumflex",
                    "@value": "16777589",
                    "@c:type": "GDK_KEY_wcircumflex",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "698"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_wdiaeresis",
                    "@value": "16785029",
                    "@c:type": "GDK_KEY_wdiaeresis",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "720"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_wgrave",
                    "@value": "16785025",
                    "@c:type": "GDK_KEY_wgrave",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "716"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_x",
                    "@value": "120",
                    "@c:type": "GDK_KEY_x",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "475"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_xabovedot",
                    "@value": "16785035",
                    "@c:type": "GDK_KEY_xabovedot",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1643"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_y",
                    "@value": "121",
                    "@c:type": "GDK_KEY_y",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "476"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_yacute",
                    "@value": "253",
                    "@c:type": "GDK_KEY_yacute",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "579"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_ybelowdot",
                    "@value": "16785141",
                    "@c:type": "GDK_KEY_ybelowdot",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1738"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_ycircumflex",
                    "@value": "16777591",
                    "@c:type": "GDK_KEY_ycircumflex",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "700"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_ydiaeresis",
                    "@value": "255",
                    "@c:type": "GDK_KEY_ydiaeresis",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "581"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_yen",
                    "@value": "165",
                    "@c:type": "GDK_KEY_yen",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "487"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_ygrave",
                    "@value": "16785139",
                    "@c:type": "GDK_KEY_ygrave",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "722"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_yhook",
                    "@value": "16785143",
                    "@c:type": "GDK_KEY_yhook",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1740"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_ytilde",
                    "@value": "16785145",
                    "@c:type": "GDK_KEY_ytilde",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1742"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_z",
                    "@value": "122",
                    "@c:type": "GDK_KEY_z",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "477"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_zabovedot",
                    "@value": "447",
                    "@c:type": "GDK_KEY_zabovedot",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "605"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_zacute",
                    "@value": "444",
                    "@c:type": "GDK_KEY_zacute",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "602"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_zcaron",
                    "@value": "446",
                    "@c:type": "GDK_KEY_zcaron",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "604"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_zerosubscript",
                    "@value": "16785536",
                    "@c:type": "GDK_KEY_zerosubscript",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1767"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_zerosuperior",
                    "@value": "16785520",
                    "@c:type": "GDK_KEY_zerosuperior",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1760"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "KEY_zstroke",
                    "@value": "16777654",
                    "@c:type": "GDK_KEY_zstroke",
                    "source-position": {
                        "@filename": "gdk/gdkkeysyms.h",
                        "@line": "1645"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "MAJOR_VERSION",
                    "@value": "3",
                    "@c:type": "GDK_MAJOR_VERSION",
                    "source-position": {
                        "@filename": "gdk/gdkversionmacros.h",
                        "@line": "27"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "MAX_TIMECOORD_AXES",
                    "@value": "128",
                    "@c:type": "GDK_MAX_TIMECOORD_AXES",
                    "source-position": {
                        "@filename": "gdk/gdkdevice.h",
                        "@line": "110"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "MICRO_VERSION",
                    "@value": "36",
                    "@c:type": "GDK_MICRO_VERSION",
                    "source-position": {
                        "@filename": "gdk/gdkversionmacros.h",
                        "@line": "29"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "MINOR_VERSION",
                    "@value": "24",
                    "@c:type": "GDK_MINOR_VERSION",
                    "source-position": {
                        "@filename": "gdk/gdkversionmacros.h",
                        "@line": "28"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "PARENT_RELATIVE",
                    "@value": "1",
                    "@c:type": "GDK_PARENT_RELATIVE",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "gdk/gdktypes.h",
                        "@line": "55",
                        "#text": "A special value, indicating that the background\nfor a window should be inherited from the parent window."
                    },
                    "source-position": {
                        "@filename": "gdk/gdktypes.h",
                        "@line": "61"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "PRIORITY_REDRAW",
                    "@value": "120",
                    "@c:type": "GDK_PRIORITY_REDRAW",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "gdk/gdkevents.h",
                        "@line": "64",
                        "#text": "This is the priority that the idle handler processing window updates\nis given in the\n[GLib Main Loop][glib-The-Main-Event-Loop]."
                    },
                    "source-position": {
                        "@filename": "gdk/gdkevents.h",
                        "@line": "71"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                }
            ],
            "interface": {
                "@name": "DevicePad",
                "@c:symbol-prefix": "device_pad",
                "@c:type": "GdkDevicePad",
                "@glib:type-name": "GdkDevicePad",
                "@glib:get-type": "gdk_device_pad_get_type",
                "@glib:type-struct": "DevicePadInterface",
                "doc": {
                    "@xml:space": "preserve",
                    "@filename": "gdk/gdkdevicepad.c",
                    "@line": "20",
                    "#text": "#GdkDevicePad is an interface implemented by devices of type\n%GDK_SOURCE_TABLET_PAD, it allows querying the features provided\nby the pad device.\n\nTablet pads may contain one or more groups, each containing a subset\nof the buttons/rings/strips available. gdk_device_pad_get_n_groups()\ncan be used to obtain the number of groups, gdk_device_pad_get_n_features()\nand gdk_device_pad_get_feature_group() can be combined to find out the\nnumber of buttons/rings/strips the device has, and how are they grouped.\n\nEach of those groups have different modes, which may be used to map\neach individual pad feature to multiple actions. Only one mode is\neffective (current) for each given group, different groups may have\ndifferent current modes. The number of available modes in a group can\nbe found out through gdk_device_pad_get_group_n_modes(), and the current\nmode for a given group will be notified through the #GdkEventPadGroupMode\nevent."
                },
                "source-position": {
                    "@filename": "gdk/gdkdevicepad.h",
                    "@line": "37"
                },
                "prerequisite": {
                    "@name": "Device"
                },
                "method": [
                    {
                        "@name": "get_feature_group",
                        "@c:identifier": "gdk_device_pad_get_feature_group",
                        "@version": "3.22",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "gdk/gdkdevicepad.c",
                            "@line": "126",
                            "#text": "Returns the group the given @feature and @idx belong to,\nor -1 if feature/index do not exist in @pad."
                        },
                        "source-position": {
                            "@filename": "gdk/gdkdevicepad.h",
                            "@line": "68"
                        },
                        "return-value": {
                            "@transfer-ownership": "none",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkdevicepad.c",
                                "@line": "135",
                                "#text": "The group number of the queried pad feature."
                            },
                            "type": {
                                "@name": "gint",
                                "@c:type": "gint"
                            }
                        },
                        "parameters": {
                            "instance-parameter": {
                                "@name": "pad",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "gdk/gdkdevicepad.c",
                                    "@line": "128",
                                    "#text": "a #GdkDevicePad"
                                },
                                "type": {
                                    "@name": "DevicePad",
                                    "@c:type": "GdkDevicePad*"
                                }
                            },
                            "parameter": [
                                {
                                    "@name": "feature",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "gdk/gdkdevicepad.c",
                                        "@line": "129",
                                        "#text": "the feature type to get the group from"
                                    },
                                    "type": {
                                        "@name": "DevicePadFeature",
                                        "@c:type": "GdkDevicePadFeature"
                                    }
                                },
                                {
                                    "@name": "feature_idx",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "gdk/gdkdevicepad.c",
                                        "@line": "130",
                                        "#text": "the index of the feature to get the group from"
                                    },
                                    "type": {
                                        "@name": "gint",
                                        "@c:type": "gint"
                                    }
                                }
                            ]
                        }
                    },
                    {
                        "@name": "get_group_n_modes",
                        "@c:identifier": "gdk_device_pad_get_group_n_modes",
                        "@version": "3.22",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "gdk/gdkdevicepad.c",
                            "@line": "81",
                            "#text": "Returns the number of modes that @group may have."
                        },
                        "source-position": {
                            "@filename": "gdk/gdkdevicepad.h",
                            "@line": "60"
                        },
                        "return-value": {
                            "@transfer-ownership": "none",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkdevicepad.c",
                                "@line": "88",
                                "#text": "The number of modes available in @group."
                            },
                            "type": {
                                "@name": "gint",
                                "@c:type": "gint"
                            }
                        },
                        "parameters": {
                            "instance-parameter": {
                                "@name": "pad",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "gdk/gdkdevicepad.c",
                                    "@line": "83",
                                    "#text": "a #GdkDevicePad"
                                },
                                "type": {
                                    "@name": "DevicePad",
                                    "@c:type": "GdkDevicePad*"
                                }
                            },
                            "parameter": {
                                "@name": "group_idx",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "gdk/gdkdevicepad.c",
                                    "@line": "84",
                                    "#text": "group to get the number of available modes from"
                                },
                                "type": {
                                    "@name": "gint",
                                    "@c:type": "gint"
                                }
                            }
                        }
                    },
                    {
                        "@name": "get_n_features",
                        "@c:identifier": "gdk_device_pad_get_n_features",
                        "@version": "3.22",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "gdk/gdkdevicepad.c",
                            "@line": "104",
                            "#text": "Returns the number of features a tablet pad has."
                        },
                        "source-position": {
                            "@filename": "gdk/gdkdevicepad.h",
                            "@line": "64"
                        },
                        "return-value": {
                            "@transfer-ownership": "none",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkdevicepad.c",
                                "@line": "111",
                                "#text": "The amount of elements of type @feature that this pad has."
                            },
                            "type": {
                                "@name": "gint",
                                "@c:type": "gint"
                            }
                        },
                        "parameters": {
                            "instance-parameter": {
                                "@name": "pad",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "gdk/gdkdevicepad.c",
                                    "@line": "106",
                                    "#text": "a #GdkDevicePad"
                                },
                                "type": {
                                    "@name": "DevicePad",
                                    "@c:type": "GdkDevicePad*"
                                }
                            },
                            "parameter": {
                                "@name": "feature",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "gdk/gdkdevicepad.c",
                                    "@line": "107",
                                    "#text": "a pad feature"
                                },
                                "type": {
                                    "@name": "DevicePadFeature",
                                    "@c:type": "GdkDevicePadFeature"
                                }
                            }
                        }
                    },
                    {
                        "@name": "get_n_groups",
                        "@c:identifier": "gdk_device_pad_get_n_groups",
                        "@version": "3.22",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "gdk/gdkdevicepad.c",
                            "@line": "58",
                            "#text": "Returns the number of groups this pad device has. Pads have\nat least one group. A pad group is a subcollection of\nbuttons/strip/rings that is affected collectively by a same\ncurrent mode."
                        },
                        "source-position": {
                            "@filename": "gdk/gdkdevicepad.h",
                            "@line": "57"
                        },
                        "return-value": {
                            "@transfer-ownership": "none",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkdevicepad.c",
                                "@line": "67",
                                "#text": "The number of button/ring/strip groups in the pad."
                            },
                            "type": {
                                "@name": "gint",
                                "@c:type": "gint"
                            }
                        },
                        "parameters": {
                            "instance-parameter": {
                                "@name": "pad",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "gdk/gdkdevicepad.c",
                                    "@line": "60",
                                    "#text": "a #GdkDevicePad"
                                },
                                "type": {
                                    "@name": "DevicePad",
                                    "@c:type": "GdkDevicePad*"
                                }
                            }
                        }
                    }
                ]
            },
            "union": {
                "@name": "Event",
                "@c:type": "GdkEvent",
                "@glib:type-name": "GdkEvent",
                "@glib:get-type": "gdk_event_get_type",
                "@c:symbol-prefix": "event",
                "doc": {
                    "@xml:space": "preserve",
                    "@filename": "gdk/gdkevents.h",
                    "@line": "1358",
                    "#text": "A #GdkEvent contains a union of all of the event types,\nand allows access to the data fields in a number of ways.\n\nThe event type is always the first field in all of the event types, and\ncan always be accessed with the following code, no matter what type of\nevent it is:\n|[<!-- language=\"C\" -->\n  GdkEvent *event;\n  GdkEventType type;\n\n  type = event->type;\n]|\n\nTo access other fields of the event, the pointer to the event\ncan be cast to the appropriate event type, or the union member\nname can be used. For example if the event type is %GDK_BUTTON_PRESS\nthen the x coordinate of the button press can be accessed with:\n|[<!-- language=\"C\" -->\n  GdkEvent *event;\n  gdouble x;\n\n  x = ((GdkEventButton*)event)->x;\n]|\nor:\n|[<!-- language=\"C\" -->\n  GdkEvent *event;\n  gdouble x;\n\n  x = event->button.x;\n]|"
                },
                "source-position": {
                    "@filename": "gdk/gdkevents.h",
                    "@line": "1444"
                },
                "field": [
                    {
                        "@name": "type",
                        "@writable": "1",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "gdk/gdkevents.h",
                            "@line": "1360",
                            "#text": "the #GdkEventType"
                        },
                        "type": {
                            "@name": "EventType",
                            "@c:type": "GdkEventType"
                        }
                    },
                    {
                        "@name": "any",
                        "@writable": "1",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "gdk/gdkevents.h",
                            "@line": "1361",
                            "#text": "a #GdkEventAny"
                        },
                        "type": {
                            "@name": "EventAny",
                            "@c:type": "GdkEventAny"
                        }
                    },
                    {
                        "@name": "expose",
                        "@writable": "1",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "gdk/gdkevents.h",
                            "@line": "1362",
                            "#text": "a #GdkEventExpose"
                        },
                        "type": {
                            "@name": "EventExpose",
                            "@c:type": "GdkEventExpose"
                        }
                    },
                    {
                        "@name": "visibility",
                        "@writable": "1",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "gdk/gdkevents.h",
                            "@line": "1363",
                            "#text": "a #GdkEventVisibility"
                        },
                        "type": {
                            "@name": "EventVisibility",
                            "@c:type": "GdkEventVisibility"
                        }
                    },
                    {
                        "@name": "motion",
                        "@writable": "1",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "gdk/gdkevents.h",
                            "@line": "1364",
                            "#text": "a #GdkEventMotion"
                        },
                        "type": {
                            "@name": "EventMotion",
                            "@c:type": "GdkEventMotion"
                        }
                    },
                    {
                        "@name": "button",
                        "@writable": "1",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "gdk/gdkevents.h",
                            "@line": "1365",
                            "#text": "a #GdkEventButton"
                        },
                        "type": {
                            "@name": "EventButton",
                            "@c:type": "GdkEventButton"
                        }
                    },
                    {
                        "@name": "touch",
                        "@writable": "1",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "gdk/gdkevents.h",
                            "@line": "1366",
                            "#text": "a #GdkEventTouch"
                        },
                        "type": {
                            "@name": "EventTouch",
                            "@c:type": "GdkEventTouch"
                        }
                    },
                    {
                        "@name": "scroll",
                        "@writable": "1",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "gdk/gdkevents.h",
                            "@line": "1367",
                            "#text": "a #GdkEventScroll"
                        },
                        "type": {
                            "@name": "EventScroll",
                            "@c:type": "GdkEventScroll"
                        }
                    },
                    {
                        "@name": "key",
                        "@writable": "1",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "gdk/gdkevents.h",
                            "@line": "1368",
                            "#text": "a #GdkEventKey"
                        },
                        "type": {
                            "@name": "EventKey",
                            "@c:type": "GdkEventKey"
                        }
                    },
                    {
                        "@name": "crossing",
                        "@writable": "1",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "gdk/gdkevents.h",
                            "@line": "1369",
                            "#text": "a #GdkEventCrossing"
                        },
                        "type": {
                            "@name": "EventCrossing",
                            "@c:type": "GdkEventCrossing"
                        }
                    },
                    {
                        "@name": "focus_change",
                        "@writable": "1",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "gdk/gdkevents.h",
                            "@line": "1370",
                            "#text": "a #GdkEventFocus"
                        },
                        "type": {
                            "@name": "EventFocus",
                            "@c:type": "GdkEventFocus"
                        }
                    },
                    {
                        "@name": "configure",
                        "@writable": "1",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "gdk/gdkevents.h",
                            "@line": "1371",
                            "#text": "a #GdkEventConfigure"
                        },
                        "type": {
                            "@name": "EventConfigure",
                            "@c:type": "GdkEventConfigure"
                        }
                    },
                    {
                        "@name": "property",
                        "@writable": "1",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "gdk/gdkevents.h",
                            "@line": "1372",
                            "#text": "a #GdkEventProperty"
                        },
                        "type": {
                            "@name": "EventProperty",
                            "@c:type": "GdkEventProperty"
                        }
                    },
                    {
                        "@name": "selection",
                        "@writable": "1",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "gdk/gdkevents.h",
                            "@line": "1373",
                            "#text": "a #GdkEventSelection"
                        },
                        "type": {
                            "@name": "EventSelection",
                            "@c:type": "GdkEventSelection"
                        }
                    },
                    {
                        "@name": "owner_change",
                        "@writable": "1",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "gdk/gdkevents.h",
                            "@line": "1374",
                            "#text": "a #GdkEventOwnerChange"
                        },
                        "type": {
                            "@name": "EventOwnerChange",
                            "@c:type": "GdkEventOwnerChange"
                        }
                    },
                    {
                        "@name": "proximity",
                        "@writable": "1",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "gdk/gdkevents.h",
                            "@line": "1375",
                            "#text": "a #GdkEventProximity"
                        },
                        "type": {
                            "@name": "EventProximity",
                            "@c:type": "GdkEventProximity"
                        }
                    },
                    {
                        "@name": "dnd",
                        "@writable": "1",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "gdk/gdkevents.h",
                            "@line": "1376",
                            "#text": "a #GdkEventDND"
                        },
                        "type": {
                            "@name": "EventDND",
                            "@c:type": "GdkEventDND"
                        }
                    },
                    {
                        "@name": "window_state",
                        "@writable": "1",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "gdk/gdkevents.h",
                            "@line": "1377",
                            "#text": "a #GdkEventWindowState"
                        },
                        "type": {
                            "@name": "EventWindowState",
                            "@c:type": "GdkEventWindowState"
                        }
                    },
                    {
                        "@name": "setting",
                        "@writable": "1",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "gdk/gdkevents.h",
                            "@line": "1378",
                            "#text": "a #GdkEventSetting"
                        },
                        "type": {
                            "@name": "EventSetting",
                            "@c:type": "GdkEventSetting"
                        }
                    },
                    {
                        "@name": "grab_broken",
                        "@writable": "1",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "gdk/gdkevents.h",
                            "@line": "1379",
                            "#text": "a #GdkEventGrabBroken"
                        },
                        "type": {
                            "@name": "EventGrabBroken",
                            "@c:type": "GdkEventGrabBroken"
                        }
                    },
                    {
                        "@name": "touchpad_swipe",
                        "@writable": "1",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "gdk/gdkevents.h",
                            "@line": "1380",
                            "#text": "a #GdkEventTouchpadSwipe"
                        },
                        "type": {
                            "@name": "EventTouchpadSwipe",
                            "@c:type": "GdkEventTouchpadSwipe"
                        }
                    },
                    {
                        "@name": "touchpad_pinch",
                        "@writable": "1",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "gdk/gdkevents.h",
                            "@line": "1381",
                            "#text": "a #GdkEventTouchpadPinch"
                        },
                        "type": {
                            "@name": "EventTouchpadPinch",
                            "@c:type": "GdkEventTouchpadPinch"
                        }
                    },
                    {
                        "@name": "pad_button",
                        "@writable": "1",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "gdk/gdkevents.h",
                            "@line": "1382",
                            "#text": "a #GdkEventPadButton"
                        },
                        "type": {
                            "@name": "EventPadButton",
                            "@c:type": "GdkEventPadButton"
                        }
                    },
                    {
                        "@name": "pad_axis",
                        "@writable": "1",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "gdk/gdkevents.h",
                            "@line": "1383",
                            "#text": "a #GdkEventPadAxis"
                        },
                        "type": {
                            "@name": "EventPadAxis",
                            "@c:type": "GdkEventPadAxis"
                        }
                    },
                    {
                        "@name": "pad_group_mode",
                        "@writable": "1",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "gdk/gdkevents.h",
                            "@line": "1384",
                            "#text": "a #GdkEventPadGroupMode"
                        },
                        "type": {
                            "@name": "EventPadGroupMode",
                            "@c:type": "GdkEventPadGroupMode"
                        }
                    }
                ],
                "constructor": {
                    "@name": "new",
                    "@c:identifier": "gdk_event_new",
                    "@version": "2.2",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "gdk/gdkevents.c",
                        "@line": "490",
                        "#text": "Creates a new event of the given type. All fields are set to 0."
                    },
                    "source-position": {
                        "@filename": "gdk/gdkevents.h",
                        "@line": "1463"
                    },
                    "return-value": {
                        "@transfer-ownership": "full",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "gdk/gdkevents.c",
                            "@line": "496",
                            "#text": "a newly-allocated #GdkEvent. The returned #GdkEvent\nshould be freed with gdk_event_free()."
                        },
                        "type": {
                            "@name": "Event",
                            "@c:type": "GdkEvent*"
                        }
                    },
                    "parameters": {
                        "parameter": {
                            "@name": "type",
                            "@transfer-ownership": "none",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkevents.c",
                                "@line": "492",
                                "#text": "a #GdkEventType"
                            },
                            "type": {
                                "@name": "EventType",
                                "@c:type": "GdkEventType"
                            }
                        }
                    }
                },
                "method": [
                    {
                        "@name": "_get_angle",
                        "@c:identifier": "gdk_events_get_angle",
                        "@moved-to": "events_get_angle",
                        "@version": "3.0",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "gdk/gdkevents.c",
                            "@line": "1962",
                            "#text": "If both events contain X/Y information, this function will return %TRUE\nand return in @angle the relative angle from @event1 to @event2. The rotation\ndirection for positive angles is from the positive X axis towards the positive\nY axis."
                        },
                        "source-position": {
                            "@filename": "gdk/gdkevents.h",
                            "@line": "1532"
                        },
                        "return-value": {
                            "@transfer-ownership": "none",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkevents.c",
                                "@line": "1973",
                                "#text": "%TRUE if the angle could be calculated."
                            },
                            "type": {
                                "@name": "gboolean",
                                "@c:type": "gboolean"
                            }
                        },
                        "parameters": {
                            "instance-parameter": {
                                "@name": "event1",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "gdk/gdkevents.c",
                                    "@line": "1964",
                                    "#text": "first #GdkEvent"
                                },
                                "type": {
                                    "@name": "Event",
                                    "@c:type": "GdkEvent*"
                                }
                            },
                            "parameter": [
                                {
                                    "@name": "event2",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "gdk/gdkevents.c",
                                        "@line": "1965",
                                        "#text": "second #GdkEvent"
                                    },
                                    "type": {
                                        "@name": "Event",
                                        "@c:type": "GdkEvent*"
                                    }
                                },
                                {
                                    "@name": "angle",
                                    "@direction": "out",
                                    "@caller-allocates": "0",
                                    "@transfer-ownership": "full",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "gdk/gdkevents.c",
                                        "@line": "1966",
                                        "#text": "return location for the relative angle between both events"
                                    },
                                    "type": {
                                        "@name": "gdouble",
                                        "@c:type": "gdouble*"
                                    }
                                }
                            ]
                        }
                    },
                    {
                        "@name": "_get_center",
                        "@c:identifier": "gdk_events_get_center",
                        "@moved-to": "events_get_center",
                        "@version": "3.0",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "gdk/gdkevents.c",
                            "@line": "2006",
                            "#text": "If both events contain X/Y information, the center of both coordinates\nwill be returned in @x and @y."
                        },
                        "source-position": {
                            "@filename": "gdk/gdkevents.h",
                            "@line": "1536"
                        },
                        "return-value": {
                            "@transfer-ownership": "none",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkevents.c",
                                "@line": "2016",
                                "#text": "%TRUE if the center could be calculated."
                            },
                            "type": {
                                "@name": "gboolean",
                                "@c:type": "gboolean"
                            }
                        },
                        "parameters": {
                            "instance-parameter": {
                                "@name": "event1",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "gdk/gdkevents.c",
                                    "@line": "2008",
                                    "#text": "first #GdkEvent"
                                },
                                "type": {
                                    "@name": "Event",
                                    "@c:type": "GdkEvent*"
                                }
                            },
                            "parameter": [
                                {
                                    "@name": "event2",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "gdk/gdkevents.c",
                                        "@line": "2009",
                                        "#text": "second #GdkEvent"
                                    },
                                    "type": {
                                        "@name": "Event",
                                        "@c:type": "GdkEvent*"
                                    }
                                },
                                {
                                    "@name": "x",
                                    "@direction": "out",
                                    "@caller-allocates": "0",
                                    "@transfer-ownership": "full",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "gdk/gdkevents.c",
                                        "@line": "2010",
                                        "#text": "return location for the X coordinate of the center"
                                    },
                                    "type": {
                                        "@name": "gdouble",
                                        "@c:type": "gdouble*"
                                    }
                                },
                                {
                                    "@name": "y",
                                    "@direction": "out",
                                    "@caller-allocates": "0",
                                    "@transfer-ownership": "full",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "gdk/gdkevents.c",
                                        "@line": "2011",
                                        "#text": "return location for the Y coordinate of the center"
                                    },
                                    "type": {
                                        "@name": "gdouble",
                                        "@c:type": "gdouble*"
                                    }
                                }
                            ]
                        }
                    },
                    {
                        "@name": "_get_distance",
                        "@c:identifier": "gdk_events_get_distance",
                        "@moved-to": "events_get_distance",
                        "@version": "3.0",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "gdk/gdkevents.c",
                            "@line": "1939",
                            "#text": "If both events have X/Y information, the distance between both coordinates\n(as in a straight line going from @event1 to @event2) will be returned."
                        },
                        "source-position": {
                            "@filename": "gdk/gdkevents.h",
                            "@line": "1528"
                        },
                        "return-value": {
                            "@transfer-ownership": "none",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkevents.c",
                                "@line": "1948",
                                "#text": "%TRUE if the distance could be calculated."
                            },
                            "type": {
                                "@name": "gboolean",
                                "@c:type": "gboolean"
                            }
                        },
                        "parameters": {
                            "instance-parameter": {
                                "@name": "event1",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "gdk/gdkevents.c",
                                    "@line": "1941",
                                    "#text": "first #GdkEvent"
                                },
                                "type": {
                                    "@name": "Event",
                                    "@c:type": "GdkEvent*"
                                }
                            },
                            "parameter": [
                                {
                                    "@name": "event2",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "gdk/gdkevents.c",
                                        "@line": "1942",
                                        "#text": "second #GdkEvent"
                                    },
                                    "type": {
                                        "@name": "Event",
                                        "@c:type": "GdkEvent*"
                                    }
                                },
                                {
                                    "@name": "distance",
                                    "@direction": "out",
                                    "@caller-allocates": "0",
                                    "@transfer-ownership": "full",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "gdk/gdkevents.c",
                                        "@line": "1943",
                                        "#text": "return location for the distance"
                                    },
                                    "type": {
                                        "@name": "gdouble",
                                        "@c:type": "gdouble*"
                                    }
                                }
                            ]
                        }
                    },
                    {
                        "@name": "copy",
                        "@c:identifier": "gdk_event_copy",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "gdk/gdkevents.c",
                            "@line": "638",
                            "#text": "Copies a #GdkEvent, copying or incrementing the reference count of the\nresources associated with it (e.g. #GdkWindow\u2019s and strings)."
                        },
                        "source-position": {
                            "@filename": "gdk/gdkevents.h",
                            "@line": "1465"
                        },
                        "return-value": {
                            "@transfer-ownership": "full",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkevents.c",
                                "@line": "645",
                                "#text": "a copy of @event. The returned #GdkEvent should be freed with\ngdk_event_free()."
                            },
                            "type": {
                                "@name": "Event",
                                "@c:type": "GdkEvent*"
                            }
                        },
                        "parameters": {
                            "instance-parameter": {
                                "@name": "event",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "gdk/gdkevents.c",
                                    "@line": "640",
                                    "#text": "a #GdkEvent"
                                },
                                "type": {
                                    "@name": "Event",
                                    "@c:type": "const GdkEvent*"
                                }
                            }
                        }
                    },
                    {
                        "@name": "free",
                        "@c:identifier": "gdk_event_free",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "gdk/gdkevents.c",
                            "@line": "759",
                            "#text": "Frees a #GdkEvent, freeing or decrementing any resources associated with it.\nNote that this function should only be called with events returned from\nfunctions such as gdk_event_peek(), gdk_event_get(), gdk_event_copy()\nand gdk_event_new()."
                        },
                        "source-position": {
                            "@filename": "gdk/gdkevents.h",
                            "@line": "1467"
                        },
                        "return-value": {
                            "@transfer-ownership": "none",
                            "type": {
                                "@name": "none",
                                "@c:type": "void"
                            }
                        },
                        "parameters": {
                            "instance-parameter": {
                                "@name": "event",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "gdk/gdkevents.c",
                                    "@line": "761",
                                    "#text": "a #GdkEvent."
                                },
                                "type": {
                                    "@name": "Event",
                                    "@c:type": "GdkEvent*"
                                }
                            }
                        }
                    },
                    {
                        "@name": "get_axis",
                        "@c:identifier": "gdk_event_get_axis",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "gdk/gdkevents.c",
                            "@line": "1519",
                            "#text": "Extract the axis value for a particular axis use from\nan event structure."
                        },
                        "source-position": {
                            "@filename": "gdk/gdkevents.h",
                            "@line": "1509"
                        },
                        "return-value": {
                            "@transfer-ownership": "none",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkevents.c",
                                "@line": "1528",
                                "#text": "%TRUE if the specified axis was found, otherwise %FALSE"
                            },
                            "type": {
                                "@name": "gboolean",
                                "@c:type": "gboolean"
                            }
                        },
                        "parameters": {
                            "instance-parameter": {
                                "@name": "event",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "gdk/gdkevents.c",
                                    "@line": "1521",
                                    "#text": "a #GdkEvent"
                                },
                                "type": {
                                    "@name": "Event",
                                    "@c:type": "const GdkEvent*"
                                }
                            },
                            "parameter": [
                                {
                                    "@name": "axis_use",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "gdk/gdkevents.c",
                                        "@line": "1522",
                                        "#text": "the axis use to look for"
                                    },
                                    "type": {
                                        "@name": "AxisUse",
                                        "@c:type": "GdkAxisUse"
                                    }
                                },
                                {
                                    "@name": "value",
                                    "@direction": "out",
                                    "@caller-allocates": "0",
                                    "@transfer-ownership": "full",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "gdk/gdkevents.c",
                                        "@line": "1523",
                                        "#text": "location to store the value found"
                                    },
                                    "type": {
                                        "@name": "gdouble",
                                        "@c:type": "gdouble*"
                                    }
                                }
                            ]
                        }
                    },
                    {
                        "@name": "get_button",
                        "@c:identifier": "gdk_event_get_button",
                        "@version": "3.2",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "gdk/gdkevents.c",
                            "@line": "1215",
                            "#text": "Extract the button number from an event."
                        },
                        "source-position": {
                            "@filename": "gdk/gdkevents.h",
                            "@line": "1486"
                        },
                        "return-value": {
                            "@transfer-ownership": "none",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkevents.c",
                                "@line": "1222",
                                "#text": "%TRUE if the event delivered a button number"
                            },
                            "type": {
                                "@name": "gboolean",
                                "@c:type": "gboolean"
                            }
                        },
                        "parameters": {
                            "instance-parameter": {
                                "@name": "event",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "gdk/gdkevents.c",
                                    "@line": "1217",
                                    "#text": "a #GdkEvent"
                                },
                                "type": {
                                    "@name": "Event",
                                    "@c:type": "const GdkEvent*"
                                }
                            },
                            "parameter": {
                                "@name": "button",
                                "@direction": "out",
                                "@caller-allocates": "0",
                                "@transfer-ownership": "full",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "gdk/gdkevents.c",
                                    "@line": "1218",
                                    "#text": "location to store mouse button number"
                                },
                                "type": {
                                    "@name": "guint",
                                    "@c:type": "guint*"
                                }
                            }
                        }
                    },
                    {
                        "@name": "get_click_count",
                        "@c:identifier": "gdk_event_get_click_count",
                        "@version": "3.2",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "gdk/gdkevents.c",
                            "@line": "1258",
                            "#text": "Extracts the click count from an event."
                        },
                        "source-position": {
                            "@filename": "gdk/gdkevents.h",
                            "@line": "1489"
                        },
                        "return-value": {
                            "@transfer-ownership": "none",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkevents.c",
                                "@line": "1265",
                                "#text": "%TRUE if the event delivered a click count"
                            },
                            "type": {
                                "@name": "gboolean",
                                "@c:type": "gboolean"
                            }
                        },
                        "parameters": {
                            "instance-parameter": {
                                "@name": "event",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "gdk/gdkevents.c",
                                    "@line": "1260",
                                    "#text": "a #GdkEvent"
                                },
                                "type": {
                                    "@name": "Event",
                                    "@c:type": "const GdkEvent*"
                                }
                            },
                            "parameter": {
                                "@name": "click_count",
                                "@direction": "out",
                                "@caller-allocates": "0",
                                "@transfer-ownership": "full",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "gdk/gdkevents.c",
                                    "@line": "1261",
                                    "#text": "location to store click count"
                                },
                                "type": {
                                    "@name": "guint",
                                    "@c:type": "guint*"
                                }
                            }
                        }
                    },
                    {
                        "@name": "get_coords",
                        "@c:identifier": "gdk_event_get_coords",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "gdk/gdkevents.c",
                            "@line": "1062",
                            "#text": "Extract the event window relative x/y coordinates from an event."
                        },
                        "source-position": {
                            "@filename": "gdk/gdkevents.h",
                            "@line": "1478"
                        },
                        "return-value": {
                            "@transfer-ownership": "none",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkevents.c",
                                "@line": "1070",
                                "#text": "%TRUE if the event delivered event window coordinates"
                            },
                            "type": {
                                "@name": "gboolean",
                                "@c:type": "gboolean"
                            }
                        },
                        "parameters": {
                            "instance-parameter": {
                                "@name": "event",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "gdk/gdkevents.c",
                                    "@line": "1064",
                                    "#text": "a #GdkEvent"
                                },
                                "type": {
                                    "@name": "Event",
                                    "@c:type": "const GdkEvent*"
                                }
                            },
                            "parameter": [
                                {
                                    "@name": "x_win",
                                    "@direction": "out",
                                    "@caller-allocates": "0",
                                    "@transfer-ownership": "full",
                                    "@optional": "1",
                                    "@allow-none": "1",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "gdk/gdkevents.c",
                                        "@line": "1065",
                                        "#text": "location to put event window x coordinate"
                                    },
                                    "type": {
                                        "@name": "gdouble",
                                        "@c:type": "gdouble*"
                                    }
                                },
                                {
                                    "@name": "y_win",
                                    "@direction": "out",
                                    "@caller-allocates": "0",
                                    "@transfer-ownership": "full",
                                    "@optional": "1",
                                    "@allow-none": "1",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "gdk/gdkevents.c",
                                        "@line": "1066",
                                        "#text": "location to put event window y coordinate"
                                    },
                                    "type": {
                                        "@name": "gdouble",
                                        "@c:type": "gdouble*"
                                    }
                                }
                            ]
                        }
                    },
                    {
                        "@name": "get_device",
                        "@c:identifier": "gdk_event_get_device",
                        "@version": "3.0",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "gdk/gdkevents.c",
                            "@line": "1660",
                            "#text": "If the event contains a \u201cdevice\u201d field, this function will return\nit, else it will return %NULL."
                        },
                        "source-position": {
                            "@filename": "gdk/gdkevents.h",
                            "@line": "1516"
                        },
                        "return-value": {
                            "@transfer-ownership": "none",
                            "@nullable": "1",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkevents.c",
                                "@line": "1667",
                                "#text": "a #GdkDevice, or %NULL."
                            },
                            "type": {
                                "@name": "Device",
                                "@c:type": "GdkDevice*"
                            }
                        },
                        "parameters": {
                            "instance-parameter": {
                                "@name": "event",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "gdk/gdkevents.c",
                                    "@line": "1662",
                                    "#text": "a #GdkEvent."
                                },
                                "type": {
                                    "@name": "Event",
                                    "@c:type": "const GdkEvent*"
                                }
                            }
                        }
                    },
                    {
                        "@name": "get_device_tool",
                        "@c:identifier": "gdk_event_get_device_tool",
                        "@version": "3.22",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "gdk/gdkevents.c",
                            "@line": "2497",
                            "#text": "If the event was generated by a device that supports\ndifferent tools (eg. a tablet), this function will\nreturn a #GdkDeviceTool representing the tool that\ncaused the event. Otherwise, %NULL will be returned.\n\nNote: the #GdkDeviceTool<!-- -->s will be constant during\nthe application lifetime, if settings must be stored\npersistently across runs, see gdk_device_tool_get_serial()"
                        },
                        "source-position": {
                            "@filename": "gdk/gdkevents.h",
                            "@line": "1571"
                        },
                        "return-value": {
                            "@transfer-ownership": "none",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkevents.c",
                                "@line": "2510",
                                "#text": "The current device tool, or %NULL"
                            },
                            "type": {
                                "@name": "DeviceTool",
                                "@c:type": "GdkDeviceTool*"
                            }
                        },
                        "parameters": {
                            "instance-parameter": {
                                "@name": "event",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "gdk/gdkevents.c",
                                    "@line": "2499",
                                    "#text": "a #GdkEvent"
                                },
                                "type": {
                                    "@name": "Event",
                                    "@c:type": "const GdkEvent*"
                                }
                            }
                        }
                    },
                    {
                        "@name": "get_event_sequence",
                        "@c:identifier": "gdk_event_get_event_sequence",
                        "@version": "3.4",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "gdk/gdkevents.c",
                            "@line": "2098",
                            "#text": "If @event if of type %GDK_TOUCH_BEGIN, %GDK_TOUCH_UPDATE,\n%GDK_TOUCH_END or %GDK_TOUCH_CANCEL, returns the #GdkEventSequence\nto which the event belongs. Otherwise, return %NULL."
                        },
                        "source-position": {
                            "@filename": "gdk/gdkevents.h",
                            "@line": "1553"
                        },
                        "return-value": {
                            "@transfer-ownership": "none",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkevents.c",
                                "@line": "2106",
                                "#text": "the event sequence that the event belongs to"
                            },
                            "type": {
                                "@name": "EventSequence",
                                "@c:type": "GdkEventSequence*"
                            }
                        },
                        "parameters": {
                            "instance-parameter": {
                                "@name": "event",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "gdk/gdkevents.c",
                                    "@line": "2100",
                                    "#text": "a #GdkEvent"
                                },
                                "type": {
                                    "@name": "Event",
                                    "@c:type": "const GdkEvent*"
                                }
                            }
                        }
                    },
                    {
                        "@name": "get_event_type",
                        "@c:identifier": "gdk_event_get_event_type",
                        "@version": "3.10",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "gdk/gdkevents.c",
                            "@line": "2430",
                            "#text": "Retrieves the type of the event."
                        },
                        "source-position": {
                            "@filename": "gdk/gdkevents.h",
                            "@line": "1556"
                        },
                        "return-value": {
                            "@transfer-ownership": "none",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkevents.c",
                                "@line": "2436",
                                "#text": "a #GdkEventType"
                            },
                            "type": {
                                "@name": "EventType",
                                "@c:type": "GdkEventType"
                            }
                        },
                        "parameters": {
                            "instance-parameter": {
                                "@name": "event",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "gdk/gdkevents.c",
                                    "@line": "2432",
                                    "#text": "a #GdkEvent"
                                },
                                "type": {
                                    "@name": "Event",
                                    "@c:type": "const GdkEvent*"
                                }
                            }
                        }
                    },
                    {
                        "@name": "get_keycode",
                        "@c:identifier": "gdk_event_get_keycode",
                        "@version": "3.2",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "gdk/gdkevents.c",
                            "@line": "1336",
                            "#text": "Extracts the hardware keycode from an event.\n\nAlso see gdk_event_get_scancode()."
                        },
                        "source-position": {
                            "@filename": "gdk/gdkevents.h",
                            "@line": "1495"
                        },
                        "return-value": {
                            "@transfer-ownership": "none",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkevents.c",
                                "@line": "1345",
                                "#text": "%TRUE if the event delivered a hardware keycode"
                            },
                            "type": {
                                "@name": "gboolean",
                                "@c:type": "gboolean"
                            }
                        },
                        "parameters": {
                            "instance-parameter": {
                                "@name": "event",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "gdk/gdkevents.c",
                                    "@line": "1338",
                                    "#text": "a #GdkEvent"
                                },
                                "type": {
                                    "@name": "Event",
                                    "@c:type": "const GdkEvent*"
                                }
                            },
                            "parameter": {
                                "@name": "keycode",
                                "@direction": "out",
                                "@caller-allocates": "0",
                                "@transfer-ownership": "full",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "gdk/gdkevents.c",
                                    "@line": "1339",
                                    "#text": "location to store the keycode"
                                },
                                "type": {
                                    "@name": "guint16",
                                    "@c:type": "guint16*"
                                }
                            }
                        }
                    },
                    {
                        "@name": "get_keyval",
                        "@c:identifier": "gdk_event_get_keyval",
                        "@version": "3.2",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "gdk/gdkevents.c",
                            "@line": "1301",
                            "#text": "Extracts the keyval from an event."
                        },
                        "source-position": {
                            "@filename": "gdk/gdkevents.h",
                            "@line": "1492"
                        },
                        "return-value": {
                            "@transfer-ownership": "none",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkevents.c",
                                "@line": "1308",
                                "#text": "%TRUE if the event delivered a key symbol"
                            },
                            "type": {
                                "@name": "gboolean",
                                "@c:type": "gboolean"
                            }
                        },
                        "parameters": {
                            "instance-parameter": {
                                "@name": "event",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "gdk/gdkevents.c",
                                    "@line": "1303",
                                    "#text": "a #GdkEvent"
                                },
                                "type": {
                                    "@name": "Event",
                                    "@c:type": "const GdkEvent*"
                                }
                            },
                            "parameter": {
                                "@name": "keyval",
                                "@direction": "out",
                                "@caller-allocates": "0",
                                "@transfer-ownership": "full",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "gdk/gdkevents.c",
                                    "@line": "1304",
                                    "#text": "location to store the keyval"
                                },
                                "type": {
                                    "@name": "guint",
                                    "@c:type": "guint*"
                                }
                            }
                        }
                    },
                    {
                        "@name": "get_pointer_emulated",
                        "@c:identifier": "gdk_event_get_pointer_emulated",
                        "@version": "3.22",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "gdk/gdkevents.c",
                            "@line": "618",
                            "#text": "#event: a #GdkEvent\nReturns whether this event is an 'emulated' pointer event (typically\nfrom a touch event), as opposed to a real one."
                        },
                        "source-position": {
                            "@filename": "gdk/gdkevents.h",
                            "@line": "1581"
                        },
                        "return-value": {
                            "@transfer-ownership": "none",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkevents.c",
                                "@line": "625",
                                "#text": "%TRUE if this event is emulated"
                            },
                            "type": {
                                "@name": "gboolean",
                                "@c:type": "gboolean"
                            }
                        },
                        "parameters": {
                            "instance-parameter": {
                                "@name": "event",
                                "@transfer-ownership": "none",
                                "type": {
                                    "@name": "Event",
                                    "@c:type": "GdkEvent*"
                                }
                            }
                        }
                    },
                    {
                        "@name": "get_root_coords",
                        "@c:identifier": "gdk_event_get_root_coords",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "gdk/gdkevents.c",
                            "@line": "1136",
                            "#text": "Extract the root window relative x/y coordinates from an event."
                        },
                        "source-position": {
                            "@filename": "gdk/gdkevents.h",
                            "@line": "1482"
                        },
                        "return-value": {
                            "@transfer-ownership": "none",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkevents.c",
                                "@line": "1144",
                                "#text": "%TRUE if the event delivered root window coordinates"
                            },
                            "type": {
                                "@name": "gboolean",
                                "@c:type": "gboolean"
                            }
                        },
                        "parameters": {
                            "instance-parameter": {
                                "@name": "event",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "gdk/gdkevents.c",
                                    "@line": "1138",
                                    "#text": "a #GdkEvent"
                                },
                                "type": {
                                    "@name": "Event",
                                    "@c:type": "const GdkEvent*"
                                }
                            },
                            "parameter": [
                                {
                                    "@name": "x_root",
                                    "@direction": "out",
                                    "@caller-allocates": "0",
                                    "@transfer-ownership": "full",
                                    "@optional": "1",
                                    "@allow-none": "1",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "gdk/gdkevents.c",
                                        "@line": "1139",
                                        "#text": "location to put root window x coordinate"
                                    },
                                    "type": {
                                        "@name": "gdouble",
                                        "@c:type": "gdouble*"
                                    }
                                },
                                {
                                    "@name": "y_root",
                                    "@direction": "out",
                                    "@caller-allocates": "0",
                                    "@transfer-ownership": "full",
                                    "@optional": "1",
                                    "@allow-none": "1",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "gdk/gdkevents.c",
                                        "@line": "1140",
                                        "#text": "location to put root window y coordinate"
                                    },
                                    "type": {
                                        "@name": "gdouble",
                                        "@c:type": "gdouble*"
                                    }
                                }
                            ]
                        }
                    },
                    {
                        "@name": "get_scancode",
                        "@c:identifier": "gdk_event_get_scancode",
                        "@version": "3.22",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "gdk/gdkevents.c",
                            "@line": "2557",
                            "#text": "Gets the keyboard low-level scancode of a key event.\n\nThis is usually hardware_keycode. On Windows this is the high\nword of WM_KEY{DOWN,UP} lParam which contains the scancode and\nsome extended flags."
                        },
                        "source-position": {
                            "@filename": "gdk/gdkevents.h",
                            "@line": "1578"
                        },
                        "return-value": {
                            "@transfer-ownership": "none",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkevents.c",
                                "@line": "2567",
                                "#text": "The associated keyboard scancode or 0"
                            },
                            "type": {
                                "@name": "gint",
                                "@c:type": "int"
                            }
                        },
                        "parameters": {
                            "instance-parameter": {
                                "@name": "event",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "gdk/gdkevents.c",
                                    "@line": "2559",
                                    "#text": "a #GdkEvent"
                                },
                                "type": {
                                    "@name": "Event",
                                    "@c:type": "GdkEvent*"
                                }
                            }
                        }
                    },
                    {
                        "@name": "get_screen",
                        "@c:identifier": "gdk_event_get_screen",
                        "@version": "2.2",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "gdk/gdkevents.c",
                            "@line": "2065",
                            "#text": "Returns the screen for the event. The screen is\ntypically the screen for `event->any.window`, but\nfor events such as mouse events, it is the screen\nwhere the pointer was when the event occurs -\nthat is, the screen which has the root window\nto which `event->motion.x_root` and\n`event->motion.y_root` are relative."
                        },
                        "source-position": {
                            "@filename": "gdk/gdkevents.h",
                            "@line": "1550"
                        },
                        "return-value": {
                            "@transfer-ownership": "none",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkevents.c",
                                "@line": "2077",
                                "#text": "the screen for the event"
                            },
                            "type": {
                                "@name": "Screen",
                                "@c:type": "GdkScreen*"
                            }
                        },
                        "parameters": {
                            "instance-parameter": {
                                "@name": "event",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "gdk/gdkevents.c",
                                    "@line": "2067",
                                    "#text": "a #GdkEvent"
                                },
                                "type": {
                                    "@name": "Event",
                                    "@c:type": "const GdkEvent*"
                                }
                            }
                        }
                    },
                    {
                        "@name": "get_scroll_deltas",
                        "@c:identifier": "gdk_event_get_scroll_deltas",
                        "@version": "3.4",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "gdk/gdkevents.c",
                            "@line": "1448",
                            "#text": "Retrieves the scroll deltas from a #GdkEvent\n\nSee also: gdk_event_get_scroll_direction()"
                        },
                        "source-position": {
                            "@filename": "gdk/gdkevents.h",
                            "@line": "1501"
                        },
                        "return-value": {
                            "@transfer-ownership": "none",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkevents.c",
                                "@line": "1458",
                                "#text": "%TRUE if the event contains smooth scroll information\n  and %FALSE otherwise"
                            },
                            "type": {
                                "@name": "gboolean",
                                "@c:type": "gboolean"
                            }
                        },
                        "parameters": {
                            "instance-parameter": {
                                "@name": "event",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "gdk/gdkevents.c",
                                    "@line": "1450",
                                    "#text": "a #GdkEvent"
                                },
                                "type": {
                                    "@name": "Event",
                                    "@c:type": "const GdkEvent*"
                                }
                            },
                            "parameter": [
                                {
                                    "@name": "delta_x",
                                    "@direction": "out",
                                    "@caller-allocates": "0",
                                    "@transfer-ownership": "full",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "gdk/gdkevents.c",
                                        "@line": "1451",
                                        "#text": "return location for X delta"
                                    },
                                    "type": {
                                        "@name": "gdouble",
                                        "@c:type": "gdouble*"
                                    }
                                },
                                {
                                    "@name": "delta_y",
                                    "@direction": "out",
                                    "@caller-allocates": "0",
                                    "@transfer-ownership": "full",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "gdk/gdkevents.c",
                                        "@line": "1452",
                                        "#text": "return location for Y delta"
                                    },
                                    "type": {
                                        "@name": "gdouble",
                                        "@c:type": "gdouble*"
                                    }
                                }
                            ]
                        }
                    },
                    {
                        "@name": "get_scroll_direction",
                        "@c:identifier": "gdk_event_get_scroll_direction",
                        "@version": "3.2",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "gdk/gdkevents.c",
                            "@line": "1373",
                            "#text": "Extracts the scroll direction from an event.\n\nIf @event is not of type %GDK_SCROLL, the contents of @direction\nare undefined.\n\nIf you wish to handle both discrete and smooth scrolling, you\nshould check the return value of this function, or of\ngdk_event_get_scroll_deltas(); for instance:\n\n|[<!-- language=\"C\" -->\n  GdkScrollDirection direction;\n  double vscroll_factor = 0.0;\n  double x_scroll, y_scroll;\n\n  if (gdk_event_get_scroll_direction (event, &direction))\n    {\n      // Handle discrete scrolling with a known constant delta;\n      const double delta = 12.0;\n\n      switch (direction)\n        {\n        case GDK_SCROLL_UP:\n          vscroll_factor = -delta;\n          break;\n        case GDK_SCROLL_DOWN:\n          vscroll_factor = delta;\n          break;\n        default:\n          // no scrolling\n          break;\n        }\n    }\n  else if (gdk_event_get_scroll_deltas (event, &x_scroll, &y_scroll))\n    {\n      // Handle smooth scrolling directly\n      vscroll_factor = y_scroll;\n    }\n]|"
                        },
                        "source-position": {
                            "@filename": "gdk/gdkevents.h",
                            "@line": "1498"
                        },
                        "return-value": {
                            "@transfer-ownership": "none",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkevents.c",
                                "@line": "1417",
                                "#text": "%TRUE if the event delivered a scroll direction\n  and %FALSE otherwise"
                            },
                            "type": {
                                "@name": "gboolean",
                                "@c:type": "gboolean"
                            }
                        },
                        "parameters": {
                            "instance-parameter": {
                                "@name": "event",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "gdk/gdkevents.c",
                                    "@line": "1375",
                                    "#text": "a #GdkEvent"
                                },
                                "type": {
                                    "@name": "Event",
                                    "@c:type": "const GdkEvent*"
                                }
                            },
                            "parameter": {
                                "@name": "direction",
                                "@direction": "out",
                                "@caller-allocates": "0",
                                "@transfer-ownership": "full",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "gdk/gdkevents.c",
                                    "@line": "1376",
                                    "#text": "location to store the scroll direction"
                                },
                                "type": {
                                    "@name": "ScrollDirection",
                                    "@c:type": "GdkScrollDirection*"
                                }
                            }
                        }
                    },
                    {
                        "@name": "get_seat",
                        "@c:identifier": "gdk_event_get_seat",
                        "@version": "3.20",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "gdk/gdkevents.c",
                            "@line": "2448",
                            "#text": "Returns the #GdkSeat this event was generated for."
                        },
                        "source-position": {
                            "@filename": "gdk/gdkevents.h",
                            "@line": "1559"
                        },
                        "return-value": {
                            "@transfer-ownership": "none",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkevents.c",
                                "@line": "2454",
                                "#text": "The #GdkSeat of this event"
                            },
                            "type": {
                                "@name": "Seat",
                                "@c:type": "GdkSeat*"
                            }
                        },
                        "parameters": {
                            "instance-parameter": {
                                "@name": "event",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "gdk/gdkevents.c",
                                    "@line": "2450",
                                    "#text": "a #GdkEvent"
                                },
                                "type": {
                                    "@name": "Event",
                                    "@c:type": "const GdkEvent*"
                                }
                            }
                        }
                    },
                    {
                        "@name": "get_source_device",
                        "@c:identifier": "gdk_event_get_source_device",
                        "@version": "3.0",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "gdk/gdkevents.c",
                            "@line": "1783",
                            "#text": "This function returns the hardware (slave) #GdkDevice that has\ntriggered the event, falling back to the virtual (master) device\n(as in gdk_event_get_device()) if the event wasn\u2019t caused by\ninteraction with a hardware device. This may happen for example\nin synthesized crossing events after a #GdkWindow updates its\ngeometry or a grab is acquired/released.\n\nIf the event does not contain a device field, this function will\nreturn %NULL."
                        },
                        "source-position": {
                            "@filename": "gdk/gdkevents.h",
                            "@line": "1521"
                        },
                        "return-value": {
                            "@transfer-ownership": "none",
                            "@nullable": "1",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkevents.c",
                                "@line": "1797",
                                "#text": "a #GdkDevice, or %NULL."
                            },
                            "type": {
                                "@name": "Device",
                                "@c:type": "GdkDevice*"
                            }
                        },
                        "parameters": {
                            "instance-parameter": {
                                "@name": "event",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "gdk/gdkevents.c",
                                    "@line": "1785",
                                    "#text": "a #GdkEvent"
                                },
                                "type": {
                                    "@name": "Event",
                                    "@c:type": "const GdkEvent*"
                                }
                            }
                        }
                    },
                    {
                        "@name": "get_state",
                        "@c:identifier": "gdk_event_get_state",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "gdk/gdkevents.c",
                            "@line": "968",
                            "#text": "If the event contains a \u201cstate\u201d field, puts that field in @state. Otherwise\nstores an empty state (0). Returns %TRUE if there was a state field\nin the event. @event may be %NULL, in which case it\u2019s treated\nas if the event had no state field."
                        },
                        "source-position": {
                            "@filename": "gdk/gdkevents.h",
                            "@line": "1475"
                        },
                        "return-value": {
                            "@transfer-ownership": "none",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkevents.c",
                                "@line": "978",
                                "#text": "%TRUE if there was a state field in the event"
                            },
                            "type": {
                                "@name": "gboolean",
                                "@c:type": "gboolean"
                            }
                        },
                        "parameters": {
                            "instance-parameter": {
                                "@name": "event",
                                "@transfer-ownership": "none",
                                "@nullable": "1",
                                "@allow-none": "1",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "gdk/gdkevents.c",
                                    "@line": "970",
                                    "#text": "a #GdkEvent or %NULL"
                                },
                                "type": {
                                    "@name": "Event",
                                    "@c:type": "const GdkEvent*"
                                }
                            },
                            "parameter": {
                                "@name": "state",
                                "@direction": "out",
                                "@caller-allocates": "0",
                                "@transfer-ownership": "full",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "gdk/gdkevents.c",
                                    "@line": "971",
                                    "#text": "return location for state"
                                },
                                "type": {
                                    "@name": "ModifierType",
                                    "@c:type": "GdkModifierType*"
                                }
                            }
                        }
                    },
                    {
                        "@name": "get_time",
                        "@c:identifier": "gdk_event_get_time",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "gdk/gdkevents.c",
                            "@line": "882",
                            "#text": "Returns the time stamp from @event, if there is one; otherwise\nreturns #GDK_CURRENT_TIME. If @event is %NULL, returns #GDK_CURRENT_TIME."
                        },
                        "source-position": {
                            "@filename": "gdk/gdkevents.h",
                            "@line": "1473"
                        },
                        "return-value": {
                            "@transfer-ownership": "none",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkevents.c",
                                "@line": "889",
                                "#text": "time stamp field from @event"
                            },
                            "type": {
                                "@name": "guint32",
                                "@c:type": "guint32"
                            }
                        },
                        "parameters": {
                            "instance-parameter": {
                                "@name": "event",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "gdk/gdkevents.c",
                                    "@line": "884",
                                    "#text": "a #GdkEvent"
                                },
                                "type": {
                                    "@name": "Event",
                                    "@c:type": "const GdkEvent*"
                                }
                            }
                        }
                    },
                    {
                        "@name": "get_window",
                        "@c:identifier": "gdk_event_get_window",
                        "@version": "3.10",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "gdk/gdkevents.c",
                            "@line": "864",
                            "#text": "Extracts the #GdkWindow associated with an event."
                        },
                        "source-position": {
                            "@filename": "gdk/gdkevents.h",
                            "@line": "1470"
                        },
                        "return-value": {
                            "@transfer-ownership": "none",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkevents.c",
                                "@line": "870",
                                "#text": "The #GdkWindow associated with the event"
                            },
                            "type": {
                                "@name": "Window",
                                "@c:type": "GdkWindow*"
                            }
                        },
                        "parameters": {
                            "instance-parameter": {
                                "@name": "event",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "gdk/gdkevents.c",
                                    "@line": "866",
                                    "#text": "a #GdkEvent"
                                },
                                "type": {
                                    "@name": "Event",
                                    "@c:type": "const GdkEvent*"
                                }
                            }
                        }
                    },
                    {
                        "@name": "is_scroll_stop_event",
                        "@c:identifier": "gdk_event_is_scroll_stop_event",
                        "@version": "3.20",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "gdk/gdkevents.c",
                            "@line": "1497",
                            "#text": "Check whether a scroll event is a stop scroll event. Scroll sequences\nwith smooth scroll information may provide a stop scroll event once the\ninteraction with the device finishes, e.g. by lifting a finger. This\nstop scroll event is the signal that a widget may trigger kinetic\nscrolling based on the current velocity.\n\nStop scroll events always have a a delta of 0/0."
                        },
                        "source-position": {
                            "@filename": "gdk/gdkevents.h",
                            "@line": "1506"
                        },
                        "return-value": {
                            "@transfer-ownership": "none",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkevents.c",
                                "@line": "1509",
                                "#text": "%TRUE if the event is a scroll stop event"
                            },
                            "type": {
                                "@name": "gboolean",
                                "@c:type": "gboolean"
                            }
                        },
                        "parameters": {
                            "instance-parameter": {
                                "@name": "event",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "gdk/gdkevents.c",
                                    "@line": "1499",
                                    "#text": "a #GdkEvent"
                                },
                                "type": {
                                    "@name": "Event",
                                    "@c:type": "const GdkEvent*"
                                }
                            }
                        }
                    },
                    {
                        "@name": "put",
                        "@c:identifier": "gdk_event_put",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "gdk/gdkevents.c",
                            "@line": "468",
                            "#text": "Appends a copy of the given event onto the front of the event\nqueue for event->any.window\u2019s display, or the default event\nqueue if event->any.window is %NULL. See gdk_display_put_event()."
                        },
                        "source-position": {
                            "@filename": "gdk/gdkevents.h",
                            "@line": "1460"
                        },
                        "return-value": {
                            "@transfer-ownership": "none",
                            "type": {
                                "@name": "none",
                                "@c:type": "void"
                            }
                        },
                        "parameters": {
                            "instance-parameter": {
                                "@name": "event",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "gdk/gdkevents.c",
                                    "@line": "470",
                                    "#text": "a #GdkEvent."
                                },
                                "type": {
                                    "@name": "Event",
                                    "@c:type": "const GdkEvent*"
                                }
                            }
                        }
                    },
                    {
                        "@name": "set_device",
                        "@c:identifier": "gdk_event_set_device",
                        "@version": "3.0",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "gdk/gdkevents.c",
                            "@line": "1608",
                            "#text": "Sets the device for @event to @device. The event must\nhave been allocated by GTK+, for instance, by\ngdk_event_copy()."
                        },
                        "source-position": {
                            "@filename": "gdk/gdkevents.h",
                            "@line": "1513"
                        },
                        "return-value": {
                            "@transfer-ownership": "none",
                            "type": {
                                "@name": "none",
                                "@c:type": "void"
                            }
                        },
                        "parameters": {
                            "instance-parameter": {
                                "@name": "event",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "gdk/gdkevents.c",
                                    "@line": "1610",
                                    "#text": "a #GdkEvent"
                                },
                                "type": {
                                    "@name": "Event",
                                    "@c:type": "GdkEvent*"
                                }
                            },
                            "parameter": {
                                "@name": "device",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "gdk/gdkevents.c",
                                    "@line": "1611",
                                    "#text": "a #GdkDevice"
                                },
                                "type": {
                                    "@name": "Device",
                                    "@c:type": "GdkDevice*"
                                }
                            }
                        }
                    },
                    {
                        "@name": "set_device_tool",
                        "@c:identifier": "gdk_event_set_device_tool",
                        "@version": "3.22",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "gdk/gdkevents.c",
                            "@line": "2526",
                            "#text": "Sets the device tool for this event, should be rarely used."
                        },
                        "source-position": {
                            "@filename": "gdk/gdkevents.h",
                            "@line": "1574"
                        },
                        "return-value": {
                            "@transfer-ownership": "none",
                            "type": {
                                "@name": "none",
                                "@c:type": "void"
                            }
                        },
                        "parameters": {
                            "instance-parameter": {
                                "@name": "event",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "gdk/gdkevents.c",
                                    "@line": "2528",
                                    "#text": "a #GdkEvent"
                                },
                                "type": {
                                    "@name": "Event",
                                    "@c:type": "GdkEvent*"
                                }
                            },
                            "parameter": {
                                "@name": "tool",
                                "@transfer-ownership": "none",
                                "@nullable": "1",
                                "@allow-none": "1",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "gdk/gdkevents.c",
                                    "@line": "2529",
                                    "#text": "tool to set on the event, or %NULL"
                                },
                                "type": {
                                    "@name": "DeviceTool",
                                    "@c:type": "GdkDeviceTool*"
                                }
                            }
                        }
                    },
                    {
                        "@name": "set_screen",
                        "@c:identifier": "gdk_event_set_screen",
                        "@version": "2.2",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "gdk/gdkevents.c",
                            "@line": "2041",
                            "#text": "Sets the screen for @event to @screen. The event must\nhave been allocated by GTK+, for instance, by\ngdk_event_copy()."
                        },
                        "source-position": {
                            "@filename": "gdk/gdkevents.h",
                            "@line": "1547"
                        },
                        "return-value": {
                            "@transfer-ownership": "none",
                            "type": {
                                "@name": "none",
                                "@c:type": "void"
                            }
                        },
                        "parameters": {
                            "instance-parameter": {
                                "@name": "event",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "gdk/gdkevents.c",
                                    "@line": "2043",
                                    "#text": "a #GdkEvent"
                                },
                                "type": {
                                    "@name": "Event",
                                    "@c:type": "GdkEvent*"
                                }
                            },
                            "parameter": {
                                "@name": "screen",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "gdk/gdkevents.c",
                                    "@line": "2044",
                                    "#text": "a #GdkScreen"
                                },
                                "type": {
                                    "@name": "Screen",
                                    "@c:type": "GdkScreen*"
                                }
                            }
                        }
                    },
                    {
                        "@name": "set_source_device",
                        "@c:identifier": "gdk_event_set_source_device",
                        "@version": "3.0",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "gdk/gdkevents.c",
                            "@line": "1757",
                            "#text": "Sets the slave device for @event to @device.\n\nThe event must have been allocated by GTK+,\nfor instance by gdk_event_copy()."
                        },
                        "source-position": {
                            "@filename": "gdk/gdkevents.h",
                            "@line": "1518"
                        },
                        "return-value": {
                            "@transfer-ownership": "none",
                            "type": {
                                "@name": "none",
                                "@c:type": "void"
                            }
                        },
                        "parameters": {
                            "instance-parameter": {
                                "@name": "event",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "gdk/gdkevents.c",
                                    "@line": "1759",
                                    "#text": "a #GdkEvent"
                                },
                                "type": {
                                    "@name": "Event",
                                    "@c:type": "GdkEvent*"
                                }
                            },
                            "parameter": {
                                "@name": "device",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "gdk/gdkevents.c",
                                    "@line": "1760",
                                    "#text": "a #GdkDevice"
                                },
                                "type": {
                                    "@name": "Device",
                                    "@c:type": "GdkDevice*"
                                }
                            }
                        }
                    },
                    {
                        "@name": "triggers_context_menu",
                        "@c:identifier": "gdk_event_triggers_context_menu",
                        "@version": "3.4",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "gdk/gdkevents.c",
                            "@line": "1860",
                            "#text": "This function returns whether a #GdkEventButton should trigger a\ncontext menu, according to platform conventions. The right mouse\nbutton always triggers context menus. Additionally, if\ngdk_keymap_get_modifier_mask() returns a non-0 mask for\n%GDK_MODIFIER_INTENT_CONTEXT_MENU, then the left mouse button will\nalso trigger a context menu if this modifier is pressed.\n\nThis function should always be used instead of simply checking for\nevent->button == %GDK_BUTTON_SECONDARY."
                        },
                        "source-position": {
                            "@filename": "gdk/gdkevents.h",
                            "@line": "1525"
                        },
                        "return-value": {
                            "@transfer-ownership": "none",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkevents.c",
                                "@line": "1874",
                                "#text": "%TRUE if the event should trigger a context menu."
                            },
                            "type": {
                                "@name": "gboolean",
                                "@c:type": "gboolean"
                            }
                        },
                        "parameters": {
                            "instance-parameter": {
                                "@name": "event",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "gdk/gdkevents.c",
                                    "@line": "1862",
                                    "#text": "a #GdkEvent, currently only button events are meaningful values"
                                },
                                "type": {
                                    "@name": "Event",
                                    "@c:type": "const GdkEvent*"
                                }
                            }
                        }
                    }
                ],
                "function": [
                    {
                        "@name": "get",
                        "@c:identifier": "gdk_event_get",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "gdk/gdkevents.c",
                            "@line": "398",
                            "#text": "Checks all open displays for a #GdkEvent to process,to be processed\non, fetching events from the windowing system if necessary.\nSee gdk_display_get_event()."
                        },
                        "source-position": {
                            "@filename": "gdk/gdkevents.h",
                            "@line": "1455"
                        },
                        "return-value": {
                            "@transfer-ownership": "full",
                            "@nullable": "1",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkevents.c",
                                "@line": "405",
                                "#text": "the next #GdkEvent to be processed, or %NULL\nif no events are pending. The returned #GdkEvent should be freed\nwith gdk_event_free()."
                            },
                            "type": {
                                "@name": "Event",
                                "@c:type": "GdkEvent*"
                            }
                        }
                    },
                    {
                        "@name": "handler_set",
                        "@c:identifier": "gdk_event_handler_set",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "gdk/gdkevents.c",
                            "@line": "332",
                            "#text": "Sets the function to call to handle all events from GDK.\n\nNote that GTK+ uses this to install its own event handler, so it is\nusually not useful for GTK+ applications. (Although an application\ncan call this function then call gtk_main_do_event() to pass\nevents to GTK+.)"
                        },
                        "source-position": {
                            "@filename": "gdk/gdkevents.h",
                            "@line": "1542"
                        },
                        "return-value": {
                            "@transfer-ownership": "none",
                            "type": {
                                "@name": "none",
                                "@c:type": "void"
                            }
                        },
                        "parameters": {
                            "parameter": [
                                {
                                    "@name": "func",
                                    "@transfer-ownership": "none",
                                    "@scope": "notified",
                                    "@closure": "1",
                                    "@destroy": "2",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "gdk/gdkevents.c",
                                        "@line": "334",
                                        "#text": "the function to call to handle events from GDK."
                                    },
                                    "type": {
                                        "@name": "EventFunc",
                                        "@c:type": "GdkEventFunc"
                                    }
                                },
                                {
                                    "@name": "data",
                                    "@transfer-ownership": "none",
                                    "@nullable": "1",
                                    "@allow-none": "1",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "gdk/gdkevents.c",
                                        "@line": "335",
                                        "#text": "user data to pass to the function."
                                    },
                                    "type": {
                                        "@name": "gpointer",
                                        "@c:type": "gpointer"
                                    }
                                },
                                {
                                    "@name": "notify",
                                    "@transfer-ownership": "none",
                                    "@scope": "async",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "gdk/gdkevents.c",
                                        "@line": "336",
                                        "#text": "the function to call when the handler function is removed, i.e. when\n         gdk_event_handler_set() is called with another event handler."
                                    },
                                    "type": {
                                        "@name": "GLib.DestroyNotify",
                                        "@c:type": "GDestroyNotify"
                                    }
                                }
                            ]
                        }
                    },
                    {
                        "@name": "peek",
                        "@c:identifier": "gdk_event_peek",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "gdk/gdkevents.c",
                            "@line": "429",
                            "#text": "If there is an event waiting in the event queue of some open\ndisplay, returns a copy of it. See gdk_display_peek_event()."
                        },
                        "source-position": {
                            "@filename": "gdk/gdkevents.h",
                            "@line": "1458"
                        },
                        "return-value": {
                            "@transfer-ownership": "full",
                            "@nullable": "1",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkevents.c",
                                "@line": "435",
                                "#text": "a copy of the first #GdkEvent on some event\nqueue, or %NULL if no events are in any queues. The returned\n#GdkEvent should be freed with gdk_event_free()."
                            },
                            "type": {
                                "@name": "Event",
                                "@c:type": "GdkEvent*"
                            }
                        }
                    },
                    {
                        "@name": "request_motions",
                        "@c:identifier": "gdk_event_request_motions",
                        "@version": "2.12",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "gdk/gdkevents.c",
                            "@line": "1820",
                            "#text": "Request more motion notifies if @event is a motion notify hint event.\n\nThis function should be used instead of gdk_window_get_pointer() to\nrequest further motion notifies, because it also works for extension\nevents where motion notifies are provided for devices other than the\ncore pointer. Coordinate extraction, processing and requesting more\nmotion events from a %GDK_MOTION_NOTIFY event usually works like this:\n\n|[<!-- language=\"C\" -->\n{\n  // motion_event handler\n  x = motion_event->x;\n  y = motion_event->y;\n  // handle (x,y) motion\n  gdk_event_request_motions (motion_event); // handles is_hint events\n}\n]|"
                        },
                        "source-position": {
                            "@filename": "gdk/gdkevents.h",
                            "@line": "1523"
                        },
                        "return-value": {
                            "@transfer-ownership": "none",
                            "type": {
                                "@name": "none",
                                "@c:type": "void"
                            }
                        },
                        "parameters": {
                            "parameter": {
                                "@name": "event",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "gdk/gdkevents.c",
                                    "@line": "1822",
                                    "#text": "a valid #GdkEvent"
                                },
                                "type": {
                                    "@name": "EventMotion",
                                    "@c:type": "const GdkEventMotion*"
                                }
                            }
                        }
                    }
                ]
            },
            "callback": [
                {
                    "@name": "EventFunc",
                    "@c:type": "GdkEventFunc",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "gdk/gdkevents.h",
                        "@line": "153",
                        "#text": "Specifies the type of function passed to gdk_event_handler_set() to\nhandle all GDK events."
                    },
                    "source-position": {
                        "@filename": "gdk/gdkevents.h",
                        "@line": "162"
                    },
                    "return-value": {
                        "@transfer-ownership": "none",
                        "type": {
                            "@name": "none",
                            "@c:type": "void"
                        }
                    },
                    "parameters": {
                        "parameter": [
                            {
                                "@name": "event",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "gdk/gdkevents.h",
                                    "@line": "155",
                                    "#text": "the #GdkEvent to process."
                                },
                                "type": {
                                    "@name": "Event",
                                    "@c:type": "GdkEvent*"
                                }
                            },
                            {
                                "@name": "data",
                                "@transfer-ownership": "none",
                                "@nullable": "1",
                                "@allow-none": "1",
                                "@closure": "1",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "gdk/gdkevents.h",
                                    "@line": "156",
                                    "#text": "user data set when the event handler was installed with\n  gdk_event_handler_set()."
                                },
                                "type": {
                                    "@name": "gpointer",
                                    "@c:type": "gpointer"
                                }
                            }
                        ]
                    }
                },
                {
                    "@name": "FilterFunc",
                    "@c:type": "GdkFilterFunc",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "gdk/gdkevents.h",
                        "@line": "194",
                        "#text": "Specifies the type of function used to filter native events before they are\nconverted to GDK events.\n\nWhen a filter is called, @event is unpopulated, except for\n`event->window`. The filter may translate the native\nevent to a GDK event and store the result in @event, or handle it without\ntranslation. If the filter translates the event and processing should\ncontinue, it should return %GDK_FILTER_TRANSLATE."
                    },
                    "source-position": {
                        "@filename": "gdk/gdkevents.h",
                        "@line": "211"
                    },
                    "return-value": {
                        "@transfer-ownership": "none",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "gdk/gdkevents.h",
                            "@line": "209",
                            "#text": "a #GdkFilterReturn value."
                        },
                        "type": {
                            "@name": "FilterReturn",
                            "@c:type": "GdkFilterReturn"
                        }
                    },
                    "parameters": {
                        "parameter": [
                            {
                                "@name": "xevent",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "gdk/gdkevents.h",
                                    "@line": "196",
                                    "#text": "the native event to filter."
                                },
                                "type": {
                                    "@name": "XEvent",
                                    "@c:type": "GdkXEvent*"
                                }
                            },
                            {
                                "@name": "event",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "gdk/gdkevents.h",
                                    "@line": "197",
                                    "#text": "the GDK event to which the X event will be translated."
                                },
                                "type": {
                                    "@name": "Event",
                                    "@c:type": "GdkEvent*"
                                }
                            },
                            {
                                "@name": "data",
                                "@transfer-ownership": "none",
                                "@nullable": "1",
                                "@allow-none": "1",
                                "@closure": "2",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "gdk/gdkevents.h",
                                    "@line": "198",
                                    "#text": "user data set when the filter was installed."
                                },
                                "type": {
                                    "@name": "gpointer",
                                    "@c:type": "gpointer"
                                }
                            }
                        ]
                    }
                },
                {
                    "@name": "SeatGrabPrepareFunc",
                    "@c:type": "GdkSeatGrabPrepareFunc",
                    "@version": "3.20",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "gdk/gdkseat.h",
                        "@line": "62",
                        "#text": "Type of the callback used to set up @window so it can be\ngrabbed. A typical action would be ensuring the window is\nvisible, although there's room for other initialization\nactions."
                    },
                    "source-position": {
                        "@filename": "gdk/gdkseat.h",
                        "@line": "75"
                    },
                    "return-value": {
                        "@transfer-ownership": "none",
                        "type": {
                            "@name": "none",
                            "@c:type": "void"
                        }
                    },
                    "parameters": {
                        "parameter": [
                            {
                                "@name": "seat",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "gdk/gdkseat.h",
                                    "@line": "64",
                                    "#text": "the #GdkSeat being grabbed"
                                },
                                "type": {
                                    "@name": "Seat",
                                    "@c:type": "GdkSeat*"
                                }
                            },
                            {
                                "@name": "window",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "gdk/gdkseat.h",
                                    "@line": "65",
                                    "#text": "the #GdkWindow being grabbed"
                                },
                                "type": {
                                    "@name": "Window",
                                    "@c:type": "GdkWindow*"
                                }
                            },
                            {
                                "@name": "user_data",
                                "@transfer-ownership": "none",
                                "@nullable": "1",
                                "@allow-none": "1",
                                "@closure": "2",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "gdk/gdkseat.h",
                                    "@line": "66",
                                    "#text": "user data passed in gdk_seat_grab()"
                                },
                                "type": {
                                    "@name": "gpointer",
                                    "@c:type": "gpointer"
                                }
                            }
                        ]
                    }
                },
                {
                    "@name": "WindowChildFunc",
                    "@c:type": "GdkWindowChildFunc",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "gdk/gdkwindow.h",
                        "@line": "1034",
                        "#text": "A function of this type is passed to gdk_window_invalidate_maybe_recurse().\nIt gets called for each child of the window to determine whether to\nrecursively invalidate it or now."
                    },
                    "source-position": {
                        "@filename": "gdk/gdkwindow.h",
                        "@line": "1045"
                    },
                    "return-value": {
                        "@transfer-ownership": "none",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "gdk/gdkwindow.h",
                            "@line": "1043",
                            "#text": "%TRUE to invalidate @window recursively"
                        },
                        "type": {
                            "@name": "gboolean",
                            "@c:type": "gboolean"
                        }
                    },
                    "parameters": {
                        "parameter": [
                            {
                                "@name": "window",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "gdk/gdkwindow.h",
                                    "@line": "1036",
                                    "#text": "a #GdkWindow"
                                },
                                "type": {
                                    "@name": "Window",
                                    "@c:type": "GdkWindow*"
                                }
                            },
                            {
                                "@name": "user_data",
                                "@transfer-ownership": "none",
                                "@nullable": "1",
                                "@allow-none": "1",
                                "@closure": "1",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "gdk/gdkwindow.h",
                                    "@line": "1037",
                                    "#text": "user data"
                                },
                                "type": {
                                    "@name": "gpointer",
                                    "@c:type": "gpointer"
                                }
                            }
                        ]
                    }
                },
                {
                    "@name": "WindowInvalidateHandlerFunc",
                    "@c:type": "GdkWindowInvalidateHandlerFunc",
                    "@version": "3.10",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "gdk/gdkwindow.h",
                        "@line": "694",
                        "#text": "Whenever some area of the window is invalidated (directly in the\nwindow or in a child window) this gets called with @region in\nthe coordinate space of @window. You can use @region to just\nkeep track of the dirty region, or you can actually change\n@region in case you are doing display tricks like showing\na child in multiple places."
                    },
                    "source-position": {
                        "@filename": "gdk/gdkwindow.h",
                        "@line": "708"
                    },
                    "return-value": {
                        "@transfer-ownership": "none",
                        "type": {
                            "@name": "none",
                            "@c:type": "void"
                        }
                    },
                    "parameters": {
                        "parameter": [
                            {
                                "@name": "window",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "gdk/gdkwindow.h",
                                    "@line": "696",
                                    "#text": "a #GdkWindow"
                                },
                                "type": {
                                    "@name": "Window",
                                    "@c:type": "GdkWindow*"
                                }
                            },
                            {
                                "@name": "region",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "gdk/gdkwindow.h",
                                    "@line": "697",
                                    "#text": "a #cairo_region_t"
                                },
                                "type": {
                                    "@name": "cairo.Region",
                                    "@c:type": "cairo_region_t*"
                                }
                            }
                        ]
                    }
                }
            ],
            "function": [
                {
                    "@name": "add_option_entries_libgtk_only",
                    "@c:identifier": "gdk_add_option_entries_libgtk_only",
                    "@deprecated": "1",
                    "@deprecated-version": "3.16",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "gdk/gdk.c",
                        "@line": "255",
                        "#text": "Appends gdk option entries to the passed in option group. This is\nnot public API and must not be used by applications."
                    },
                    "doc-deprecated": {
                        "@xml:space": "preserve",
                        "#text": "This symbol was never meant to be used outside\n  of GTK+"
                    },
                    "source-position": {
                        "@filename": "gdk/gdkmain.h",
                        "@line": "53"
                    },
                    "return-value": {
                        "@transfer-ownership": "none",
                        "type": {
                            "@name": "none",
                            "@c:type": "void"
                        }
                    },
                    "parameters": {
                        "parameter": {
                            "@name": "group",
                            "@transfer-ownership": "none",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdk.c",
                                "@line": "257",
                                "#text": "An option group."
                            },
                            "type": {
                                "@name": "GLib.OptionGroup",
                                "@c:type": "GOptionGroup*"
                            }
                        }
                    }
                },
                {
                    "@name": "atom_intern",
                    "@c:identifier": "gdk_atom_intern",
                    "@moved-to": "Atom.intern",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "gdk/gdkproperty.c",
                        "@line": "182",
                        "#text": "Finds or creates an atom corresponding to a given string."
                    },
                    "source-position": {
                        "@filename": "gdk/gdkproperty.h",
                        "@line": "56"
                    },
                    "return-value": {
                        "@transfer-ownership": "none",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "gdk/gdkproperty.c",
                            "@line": "192",
                            "#text": "the atom corresponding to @atom_name."
                        },
                        "type": {
                            "@name": "Atom",
                            "@c:type": "GdkAtom"
                        }
                    },
                    "parameters": {
                        "parameter": [
                            {
                                "@name": "atom_name",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "gdk/gdkproperty.c",
                                    "@line": "184",
                                    "#text": "a string."
                                },
                                "type": {
                                    "@name": "utf8",
                                    "@c:type": "const gchar*"
                                }
                            },
                            {
                                "@name": "only_if_exists",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "gdk/gdkproperty.c",
                                    "@line": "185",
                                    "#text": "if %TRUE, GDK is allowed to not create a new atom, but\n  just return %GDK_NONE if the requested atom doesn\u2019t already\n  exists. Currently, the flag is ignored, since checking the\n  existance of an atom is as expensive as creating it."
                                },
                                "type": {
                                    "@name": "gboolean",
                                    "@c:type": "gboolean"
                                }
                            }
                        ]
                    }
                },
                {
                    "@name": "atom_intern_static_string",
                    "@c:identifier": "gdk_atom_intern_static_string",
                    "@moved-to": "Atom.intern_static_string",
                    "@version": "2.10",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "gdk/gdkproperty.c",
                        "@line": "203",
                        "#text": "Finds or creates an atom corresponding to a given string.\n\nNote that this function is identical to gdk_atom_intern() except\nthat if a new #GdkAtom is created the string itself is used rather\nthan a copy. This saves memory, but can only be used if the string\nwill always exist. It can be used with statically\nallocated strings in the main program, but not with statically\nallocated memory in dynamically loaded modules, if you expect to\never unload the module again (e.g. do not use this function in\nGTK+ theme engines)."
                    },
                    "source-position": {
                        "@filename": "gdk/gdkproperty.h",
                        "@line": "59"
                    },
                    "return-value": {
                        "@transfer-ownership": "none",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "gdk/gdkproperty.c",
                            "@line": "218",
                            "#text": "the atom corresponding to @atom_name"
                        },
                        "type": {
                            "@name": "Atom",
                            "@c:type": "GdkAtom"
                        }
                    },
                    "parameters": {
                        "parameter": {
                            "@name": "atom_name",
                            "@transfer-ownership": "none",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkproperty.c",
                                "@line": "205",
                                "#text": "a static string"
                            },
                            "type": {
                                "@name": "utf8",
                                "@c:type": "const gchar*"
                            }
                        }
                    }
                },
                {
                    "@name": "beep",
                    "@c:identifier": "gdk_beep",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "gdk/gdkdisplay.c",
                        "@line": "574",
                        "#text": "Emits a short beep on the default display."
                    },
                    "source-position": {
                        "@filename": "gdk/gdkmain.h",
                        "@line": "121"
                    },
                    "return-value": {
                        "@transfer-ownership": "none",
                        "type": {
                            "@name": "none",
                            "@c:type": "void"
                        }
                    }
                },
                {
                    "@name": "cairo_create",
                    "@c:identifier": "gdk_cairo_create",
                    "@version": "2.8",
                    "@deprecated": "1",
                    "@deprecated-version": "3.22",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "gdk/gdkwindow.c",
                        "@line": "3604",
                        "#text": "Creates a Cairo context for drawing to @window.\n\nNote that calling cairo_reset_clip() on the resulting #cairo_t will\nproduce undefined results, so avoid it at all costs.\n\nTypically, this function is used to draw on a #GdkWindow out of the paint\ncycle of the toolkit; this should be avoided, as it breaks various assumptions\nand optimizations.\n\nIf you are drawing on a native #GdkWindow in response to a %GDK_EXPOSE event\nyou should use gdk_window_begin_draw_frame() and gdk_drawing_context_get_cairo_context()\ninstead. GTK will automatically do this for you when drawing a widget."
                    },
                    "doc-deprecated": {
                        "@xml:space": "preserve",
                        "#text": "Use gdk_window_begin_draw_frame() and\n  gdk_drawing_context_get_cairo_context() instead"
                    },
                    "source-position": {
                        "@filename": "gdk/gdkcairo.h",
                        "@line": "35"
                    },
                    "return-value": {
                        "@transfer-ownership": "full",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "gdk/gdkwindow.c",
                            "@line": "3621",
                            "#text": "A newly created Cairo context. Free with\n cairo_destroy() when you are done drawing."
                        },
                        "type": {
                            "@name": "cairo.Context",
                            "@c:type": "cairo_t*"
                        }
                    },
                    "parameters": {
                        "parameter": {
                            "@name": "window",
                            "@transfer-ownership": "none",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkwindow.c",
                                "@line": "3606",
                                "#text": "a #GdkWindow"
                            },
                            "type": {
                                "@name": "Window",
                                "@c:type": "GdkWindow*"
                            }
                        }
                    }
                },
                {
                    "@name": "cairo_draw_from_gl",
                    "@c:identifier": "gdk_cairo_draw_from_gl",
                    "@version": "3.16",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "gdk/gdkgl.c",
                        "@line": "302",
                        "#text": "This is the main way to draw GL content in GTK+. It takes a render buffer ID\n(@source_type == #GL_RENDERBUFFER) or a texture id (@source_type == #GL_TEXTURE)\nand draws it onto @cr with an OVER operation, respecting the current clip.\nThe top left corner of the rectangle specified by @x, @y, @width and @height\nwill be drawn at the current (0,0) position of the cairo_t.\n\nThis will work for *all* cairo_t, as long as @window is realized, but the\nfallback implementation that reads back the pixels from the buffer may be\nused in the general case. In the case of direct drawing to a window with\nno special effects applied to @cr it will however use a more efficient\napproach.\n\nFor #GL_RENDERBUFFER the code will always fall back to software for buffers\nwith alpha components, so make sure you use #GL_TEXTURE if using alpha.\n\nCalling this may change the current GL context."
                    },
                    "source-position": {
                        "@filename": "gdk/gdkcairo.h",
                        "@line": "76"
                    },
                    "return-value": {
                        "@transfer-ownership": "none",
                        "type": {
                            "@name": "none",
                            "@c:type": "void"
                        }
                    },
                    "parameters": {
                        "parameter": [
                            {
                                "@name": "cr",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "gdk/gdkgl.c",
                                    "@line": "304",
                                    "#text": "a cairo context"
                                },
                                "type": {
                                    "@name": "cairo.Context",
                                    "@c:type": "cairo_t*"
                                }
                            },
                            {
                                "@name": "window",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "gdk/gdkgl.c",
                                    "@line": "305",
                                    "#text": "The window we're rendering for (not necessarily into)"
                                },
                                "type": {
                                    "@name": "Window",
                                    "@c:type": "GdkWindow*"
                                }
                            },
                            {
                                "@name": "source",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "gdk/gdkgl.c",
                                    "@line": "306",
                                    "#text": "The GL ID of the source buffer"
                                },
                                "type": {
                                    "@name": "gint",
                                    "@c:type": "int"
                                }
                            },
                            {
                                "@name": "source_type",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "gdk/gdkgl.c",
                                    "@line": "307",
                                    "#text": "The type of the @source"
                                },
                                "type": {
                                    "@name": "gint",
                                    "@c:type": "int"
                                }
                            },
                            {
                                "@name": "buffer_scale",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "gdk/gdkgl.c",
                                    "@line": "308",
                                    "#text": "The scale-factor that the @source buffer is allocated for"
                                },
                                "type": {
                                    "@name": "gint",
                                    "@c:type": "int"
                                }
                            },
                            {
                                "@name": "x",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "gdk/gdkgl.c",
                                    "@line": "309",
                                    "#text": "The source x position in @source to start copying from in GL coordinates"
                                },
                                "type": {
                                    "@name": "gint",
                                    "@c:type": "int"
                                }
                            },
                            {
                                "@name": "y",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "gdk/gdkgl.c",
                                    "@line": "310",
                                    "#text": "The source y position in @source to start copying from in GL coordinates"
                                },
                                "type": {
                                    "@name": "gint",
                                    "@c:type": "int"
                                }
                            },
                            {
                                "@name": "width",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "gdk/gdkgl.c",
                                    "@line": "311",
                                    "#text": "The width of the region to draw"
                                },
                                "type": {
                                    "@name": "gint",
                                    "@c:type": "int"
                                }
                            },
                            {
                                "@name": "height",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "gdk/gdkgl.c",
                                    "@line": "312",
                                    "#text": "The height of the region to draw"
                                },
                                "type": {
                                    "@name": "gint",
                                    "@c:type": "int"
                                }
                            }
                        ]
                    }
                },
                {
                    "@name": "cairo_get_clip_rectangle",
                    "@c:identifier": "gdk_cairo_get_clip_rectangle",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "gdk/gdkcairo.c",
                        "@line": "43",
                        "#text": "This is a convenience function around cairo_clip_extents().\nIt rounds the clip extents to integer coordinates and returns\na boolean indicating if a clip area exists."
                    },
                    "source-position": {
                        "@filename": "gdk/gdkcairo.h",
                        "@line": "38"
                    },
                    "return-value": {
                        "@transfer-ownership": "none",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "gdk/gdkcairo.c",
                            "@line": "52",
                            "#text": "%TRUE if a clip rectangle exists, %FALSE if all of @cr is\n    clipped and all drawing can be skipped"
                        },
                        "type": {
                            "@name": "gboolean",
                            "@c:type": "gboolean"
                        }
                    },
                    "parameters": {
                        "parameter": [
                            {
                                "@name": "cr",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "gdk/gdkcairo.c",
                                    "@line": "45",
                                    "#text": "a cairo context"
                                },
                                "type": {
                                    "@name": "cairo.Context",
                                    "@c:type": "cairo_t*"
                                }
                            },
                            {
                                "@name": "rect",
                                "@direction": "out",
                                "@caller-allocates": "1",
                                "@transfer-ownership": "none",
                                "@optional": "1",
                                "@allow-none": "1",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "gdk/gdkcairo.c",
                                    "@line": "46",
                                    "#text": "return location for the clip, or %NULL"
                                },
                                "type": {
                                    "@name": "Rectangle",
                                    "@c:type": "GdkRectangle*"
                                }
                            }
                        ]
                    }
                },
                {
                    "@name": "cairo_get_drawing_context",
                    "@c:identifier": "gdk_cairo_get_drawing_context",
                    "@version": "3.22",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "gdk/gdkdrawingcontext.c",
                        "@line": "196",
                        "#text": "Retrieves the #GdkDrawingContext that created the Cairo\ncontext @cr."
                    },
                    "source-position": {
                        "@filename": "gdk/gdkcairo.h",
                        "@line": "87"
                    },
                    "return-value": {
                        "@transfer-ownership": "none",
                        "@nullable": "1",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "gdk/gdkdrawingcontext.c",
                            "@line": "203",
                            "#text": "a #GdkDrawingContext, if any is set"
                        },
                        "type": {
                            "@name": "DrawingContext",
                            "@c:type": "GdkDrawingContext*"
                        }
                    },
                    "parameters": {
                        "parameter": {
                            "@name": "cr",
                            "@transfer-ownership": "none",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkdrawingcontext.c",
                                "@line": "198",
                                "#text": "a Cairo context"
                            },
                            "type": {
                                "@name": "cairo.Context",
                                "@c:type": "cairo_t*"
                            }
                        }
                    }
                },
                {
                    "@name": "cairo_rectangle",
                    "@c:identifier": "gdk_cairo_rectangle",
                    "@version": "2.8",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "gdk/gdkcairo.c",
                        "@line": "129",
                        "#text": "Adds the given rectangle to the current path of @cr."
                    },
                    "source-position": {
                        "@filename": "gdk/gdkcairo.h",
                        "@line": "56"
                    },
                    "return-value": {
                        "@transfer-ownership": "none",
                        "type": {
                            "@name": "none",
                            "@c:type": "void"
                        }
                    },
                    "parameters": {
                        "parameter": [
                            {
                                "@name": "cr",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "gdk/gdkcairo.c",
                                    "@line": "131",
                                    "#text": "a cairo context"
                                },
                                "type": {
                                    "@name": "cairo.Context",
                                    "@c:type": "cairo_t*"
                                }
                            },
                            {
                                "@name": "rectangle",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "gdk/gdkcairo.c",
                                    "@line": "132",
                                    "#text": "a #GdkRectangle"
                                },
                                "type": {
                                    "@name": "Rectangle",
                                    "@c:type": "const GdkRectangle*"
                                }
                            }
                        ]
                    }
                },
                {
                    "@name": "cairo_region",
                    "@c:identifier": "gdk_cairo_region",
                    "@version": "2.8",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "gdk/gdkcairo.c",
                        "@line": "150",
                        "#text": "Adds the given region to the current path of @cr."
                    },
                    "source-position": {
                        "@filename": "gdk/gdkcairo.h",
                        "@line": "59"
                    },
                    "return-value": {
                        "@transfer-ownership": "none",
                        "type": {
                            "@name": "none",
                            "@c:type": "void"
                        }
                    },
                    "parameters": {
                        "parameter": [
                            {
                                "@name": "cr",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "gdk/gdkcairo.c",
                                    "@line": "152",
                                    "#text": "a cairo context"
                                },
                                "type": {
                                    "@name": "cairo.Context",
                                    "@c:type": "cairo_t*"
                                }
                            },
                            {
                                "@name": "region",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "gdk/gdkcairo.c",
                                    "@line": "153",
                                    "#text": "a #cairo_region_t"
                                },
                                "type": {
                                    "@name": "cairo.Region",
                                    "@c:type": "const cairo_region_t*"
                                }
                            }
                        ]
                    }
                },
                {
                    "@name": "cairo_region_create_from_surface",
                    "@c:identifier": "gdk_cairo_region_create_from_surface",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "gdk/gdkcairo.c",
                        "@line": "442",
                        "#text": "Creates region that describes covers the area where the given\n@surface is more than 50% opaque.\n\nThis function takes into account device offsets that might be\nset with cairo_surface_set_device_offset()."
                    },
                    "source-position": {
                        "@filename": "gdk/gdkcairo.h",
                        "@line": "64"
                    },
                    "return-value": {
                        "@transfer-ownership": "full",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "gdk/gdkcairo.c",
                            "@line": "452",
                            "#text": "A #cairo_region_t; must be freed with cairo_region_destroy()"
                        },
                        "type": {
                            "@name": "cairo.Region",
                            "@c:type": "cairo_region_t*"
                        }
                    },
                    "parameters": {
                        "parameter": {
                            "@name": "surface",
                            "@transfer-ownership": "none",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkcairo.c",
                                "@line": "444",
                                "#text": "a cairo surface"
                            },
                            "type": {
                                "@name": "cairo.Surface",
                                "@c:type": "cairo_surface_t*"
                            }
                        }
                    }
                },
                {
                    "@name": "cairo_set_source_color",
                    "@c:identifier": "gdk_cairo_set_source_color",
                    "@version": "2.8",
                    "@deprecated": "1",
                    "@deprecated-version": "3.4",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "gdk/gdkcairo.c",
                        "@line": "82",
                        "#text": "Sets the specified #GdkColor as the source color of @cr."
                    },
                    "doc-deprecated": {
                        "@xml:space": "preserve",
                        "#text": "Use gdk_cairo_set_source_rgba() instead"
                    },
                    "source-position": {
                        "@filename": "gdk/gdkcairo.h",
                        "@line": "68"
                    },
                    "return-value": {
                        "@transfer-ownership": "none",
                        "type": {
                            "@name": "none",
                            "@c:type": "void"
                        }
                    },
                    "parameters": {
                        "parameter": [
                            {
                                "@name": "cr",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "gdk/gdkcairo.c",
                                    "@line": "84",
                                    "#text": "a cairo context"
                                },
                                "type": {
                                    "@name": "cairo.Context",
                                    "@c:type": "cairo_t*"
                                }
                            },
                            {
                                "@name": "color",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "gdk/gdkcairo.c",
                                    "@line": "85",
                                    "#text": "a #GdkColor"
                                },
                                "type": {
                                    "@name": "Color",
                                    "@c:type": "const GdkColor*"
                                }
                            }
                        ]
                    }
                },
                {
                    "@name": "cairo_set_source_pixbuf",
                    "@c:identifier": "gdk_cairo_set_source_pixbuf",
                    "@version": "2.8",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "gdk/gdkcairo.c",
                        "@line": "311",
                        "#text": "Sets the given pixbuf as the source pattern for @cr.\n\nThe pattern has an extend mode of %CAIRO_EXTEND_NONE and is aligned\nso that the origin of @pixbuf is @pixbuf_x, @pixbuf_y."
                    },
                    "source-position": {
                        "@filename": "gdk/gdkcairo.h",
                        "@line": "45"
                    },
                    "return-value": {
                        "@transfer-ownership": "none",
                        "type": {
                            "@name": "none",
                            "@c:type": "void"
                        }
                    },
                    "parameters": {
                        "parameter": [
                            {
                                "@name": "cr",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "gdk/gdkcairo.c",
                                    "@line": "313",
                                    "#text": "a cairo context"
                                },
                                "type": {
                                    "@name": "cairo.Context",
                                    "@c:type": "cairo_t*"
                                }
                            },
                            {
                                "@name": "pixbuf",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "gdk/gdkcairo.c",
                                    "@line": "314",
                                    "#text": "a #GdkPixbuf"
                                },
                                "type": {
                                    "@name": "GdkPixbuf.Pixbuf",
                                    "@c:type": "const GdkPixbuf*"
                                }
                            },
                            {
                                "@name": "pixbuf_x",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "gdk/gdkcairo.c",
                                    "@line": "315",
                                    "#text": "X coordinate of location to place upper left corner of @pixbuf"
                                },
                                "type": {
                                    "@name": "gdouble",
                                    "@c:type": "gdouble"
                                }
                            },
                            {
                                "@name": "pixbuf_y",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "gdk/gdkcairo.c",
                                    "@line": "316",
                                    "#text": "Y coordinate of location to place upper left corner of @pixbuf"
                                },
                                "type": {
                                    "@name": "gdouble",
                                    "@c:type": "gdouble"
                                }
                            }
                        ]
                    }
                },
                {
                    "@name": "cairo_set_source_rgba",
                    "@c:identifier": "gdk_cairo_set_source_rgba",
                    "@version": "3.0",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "gdk/gdkcairo.c",
                        "@line": "106",
                        "#text": "Sets the specified #GdkRGBA as the source color of @cr."
                    },
                    "source-position": {
                        "@filename": "gdk/gdkcairo.h",
                        "@line": "42"
                    },
                    "return-value": {
                        "@transfer-ownership": "none",
                        "type": {
                            "@name": "none",
                            "@c:type": "void"
                        }
                    },
                    "parameters": {
                        "parameter": [
                            {
                                "@name": "cr",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "gdk/gdkcairo.c",
                                    "@line": "108",
                                    "#text": "a cairo context"
                                },
                                "type": {
                                    "@name": "cairo.Context",
                                    "@c:type": "cairo_t*"
                                }
                            },
                            {
                                "@name": "rgba",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "gdk/gdkcairo.c",
                                    "@line": "109",
                                    "#text": "a #GdkRGBA"
                                },
                                "type": {
                                    "@name": "RGBA",
                                    "@c:type": "const GdkRGBA*"
                                }
                            }
                        ]
                    }
                },
                {
                    "@name": "cairo_set_source_window",
                    "@c:identifier": "gdk_cairo_set_source_window",
                    "@version": "2.24",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "gdk/gdkcairo.c",
                        "@line": "350",
                        "#text": "Sets the given window as the source pattern for @cr.\n\nThe pattern has an extend mode of %CAIRO_EXTEND_NONE and is aligned\nso that the origin of @window is @x, @y. The window contains all its\nsubwindows when rendering.\n\nNote that the contents of @window are undefined outside of the\nvisible part of @window, so use this function with care."
                    },
                    "source-position": {
                        "@filename": "gdk/gdkcairo.h",
                        "@line": "50"
                    },
                    "return-value": {
                        "@transfer-ownership": "none",
                        "type": {
                            "@name": "none",
                            "@c:type": "void"
                        }
                    },
                    "parameters": {
                        "parameter": [
                            {
                                "@name": "cr",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "gdk/gdkcairo.c",
                                    "@line": "352",
                                    "#text": "a cairo context"
                                },
                                "type": {
                                    "@name": "cairo.Context",
                                    "@c:type": "cairo_t*"
                                }
                            },
                            {
                                "@name": "window",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "gdk/gdkcairo.c",
                                    "@line": "353",
                                    "#text": "a #GdkWindow"
                                },
                                "type": {
                                    "@name": "Window",
                                    "@c:type": "GdkWindow*"
                                }
                            },
                            {
                                "@name": "x",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "gdk/gdkcairo.c",
                                    "@line": "354",
                                    "#text": "X coordinate of location to place upper left corner of @window"
                                },
                                "type": {
                                    "@name": "gdouble",
                                    "@c:type": "gdouble"
                                }
                            },
                            {
                                "@name": "y",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "gdk/gdkcairo.c",
                                    "@line": "355",
                                    "#text": "Y coordinate of location to place upper left corner of @window"
                                },
                                "type": {
                                    "@name": "gdouble",
                                    "@c:type": "gdouble"
                                }
                            }
                        ]
                    }
                },
                {
                    "@name": "cairo_surface_create_from_pixbuf",
                    "@c:identifier": "gdk_cairo_surface_create_from_pixbuf",
                    "@version": "3.10",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "gdk/gdkcairo.c",
                        "@line": "269",
                        "#text": "Creates an image surface with the same contents as\nthe pixbuf."
                    },
                    "source-position": {
                        "@filename": "gdk/gdkcairo.h",
                        "@line": "72"
                    },
                    "return-value": {
                        "@transfer-ownership": "full",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "gdk/gdkcairo.c",
                            "@line": "278",
                            "#text": "a new cairo surface, must be freed with cairo_surface_destroy()"
                        },
                        "type": {
                            "@name": "cairo.Surface",
                            "@c:type": "cairo_surface_t*"
                        }
                    },
                    "parameters": {
                        "parameter": [
                            {
                                "@name": "pixbuf",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "gdk/gdkcairo.c",
                                    "@line": "271",
                                    "#text": "a #GdkPixbuf"
                                },
                                "type": {
                                    "@name": "GdkPixbuf.Pixbuf",
                                    "@c:type": "const GdkPixbuf*"
                                }
                            },
                            {
                                "@name": "scale",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "gdk/gdkcairo.c",
                                    "@line": "272",
                                    "#text": "the scale of the new surface, or 0 to use same as @window"
                                },
                                "type": {
                                    "@name": "gint",
                                    "@c:type": "int"
                                }
                            },
                            {
                                "@name": "for_window",
                                "@transfer-ownership": "none",
                                "@nullable": "1",
                                "@allow-none": "1",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "gdk/gdkcairo.c",
                                    "@line": "273",
                                    "#text": "The window this will be drawn to, or %NULL"
                                },
                                "type": {
                                    "@name": "Window",
                                    "@c:type": "GdkWindow*"
                                }
                            }
                        ]
                    }
                },
                {
                    "@name": "color_parse",
                    "@c:identifier": "gdk_color_parse",
                    "@moved-to": "Color.parse",
                    "@deprecated": "1",
                    "@deprecated-version": "3.14",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "gdk/deprecated/gdkcolor.c",
                        "@line": "136",
                        "#text": "Parses a textual specification of a color and fill in the\n@red, @green, and @blue fields of a #GdkColor.\n\nThe string can either one of a large set of standard names\n(taken from the X11 `rgb.txt` file), or it can be a hexadecimal\nvalue in the form \u201c\\#rgb\u201d \u201c\\#rrggbb\u201d, \u201c\\#rrrgggbbb\u201d or\n\u201c\\#rrrrggggbbbb\u201d where \u201cr\u201d, \u201cg\u201d and \u201cb\u201d are hex digits of\nthe red, green, and blue components of the color, respectively.\n(White in the four forms is \u201c\\#fff\u201d, \u201c\\#ffffff\u201d, \u201c\\#fffffffff\u201d\nand \u201c\\#ffffffffffff\u201d)."
                    },
                    "doc-deprecated": {
                        "@xml:space": "preserve",
                        "#text": "Use #GdkRGBA"
                    },
                    "source-position": {
                        "@filename": "gdk/deprecated/gdkcolor.h",
                        "@line": "79"
                    },
                    "return-value": {
                        "@transfer-ownership": "none",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "gdk/deprecated/gdkcolor.c",
                            "@line": "152",
                            "#text": "%TRUE if the parsing succeeded"
                        },
                        "type": {
                            "@name": "gboolean",
                            "@c:type": "gboolean"
                        }
                    },
                    "parameters": {
                        "parameter": [
                            {
                                "@name": "spec",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "gdk/deprecated/gdkcolor.c",
                                    "@line": "138",
                                    "#text": "the string specifying the color"
                                },
                                "type": {
                                    "@name": "utf8",
                                    "@c:type": "const gchar*"
                                }
                            },
                            {
                                "@name": "color",
                                "@direction": "out",
                                "@caller-allocates": "1",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "gdk/deprecated/gdkcolor.c",
                                    "@line": "139",
                                    "#text": "the #GdkColor to fill in"
                                },
                                "type": {
                                    "@name": "Color",
                                    "@c:type": "GdkColor*"
                                }
                            }
                        ]
                    }
                },
                {
                    "@name": "disable_multidevice",
                    "@c:identifier": "gdk_disable_multidevice",
                    "@version": "3.0",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "gdk/gdk.c",
                        "@line": "1095",
                        "#text": "Disables multidevice support in GDK. This call must happen prior\nto gdk_display_open(), gtk_init(), gtk_init_with_args() or\ngtk_init_check() in order to take effect.\n\nMost common GTK+ applications won\u2019t ever need to call this. Only\napplications that do mixed GDK/Xlib calls could want to disable\nmultidevice support if such Xlib code deals with input devices in\nany way and doesn\u2019t observe the presence of XInput 2."
                    },
                    "source-position": {
                        "@filename": "gdk/gdkmain.h",
                        "@line": "127"
                    },
                    "return-value": {
                        "@transfer-ownership": "none",
                        "type": {
                            "@name": "none",
                            "@c:type": "void"
                        }
                    }
                },
                {
                    "@name": "drag_abort",
                    "@c:identifier": "gdk_drag_abort",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "gdk/gdkdnd.c",
                        "@line": "464",
                        "#text": "Aborts a drag without dropping.\n\nThis function is called by the drag source.\n\nThis function does not need to be called in managed drag and drop\noperations. See gdk_drag_context_manage_dnd() for more information."
                    },
                    "source-position": {
                        "@filename": "gdk/gdkdnd.h",
                        "@line": "192"
                    },
                    "return-value": {
                        "@transfer-ownership": "none",
                        "type": {
                            "@name": "none",
                            "@c:type": "void"
                        }
                    },
                    "parameters": {
                        "parameter": [
                            {
                                "@name": "context",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "gdk/gdkdnd.c",
                                    "@line": "466",
                                    "#text": "a #GdkDragContext"
                                },
                                "type": {
                                    "@name": "DragContext",
                                    "@c:type": "GdkDragContext*"
                                }
                            },
                            {
                                "@name": "time_",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "gdk/gdkdnd.c",
                                    "@line": "467",
                                    "#text": "the timestamp for this operation"
                                },
                                "type": {
                                    "@name": "guint32",
                                    "@c:type": "guint32"
                                }
                            }
                        ]
                    }
                },
                {
                    "@name": "drag_begin",
                    "@c:identifier": "gdk_drag_begin",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "gdk/gdkwindow.c",
                        "@line": "11400",
                        "#text": "Starts a drag and creates a new drag context for it.\nThis function assumes that the drag is controlled by the\nclient pointer device, use gdk_drag_begin_for_device() to\nbegin a drag with a different device.\n\nThis function is called by the drag source."
                    },
                    "source-position": {
                        "@filename": "gdk/gdkdnd.h",
                        "@line": "156"
                    },
                    "return-value": {
                        "@transfer-ownership": "full",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "gdk/gdkwindow.c",
                            "@line": "11413",
                            "#text": "a newly created #GdkDragContext"
                        },
                        "type": {
                            "@name": "DragContext",
                            "@c:type": "GdkDragContext*"
                        }
                    },
                    "parameters": {
                        "parameter": [
                            {
                                "@name": "window",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "gdk/gdkwindow.c",
                                    "@line": "11402",
                                    "#text": "the source window for this drag."
                                },
                                "type": {
                                    "@name": "Window",
                                    "@c:type": "GdkWindow*"
                                }
                            },
                            {
                                "@name": "targets",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "gdk/gdkwindow.c",
                                    "@line": "11403",
                                    "#text": "the offered targets,\n    as list of #GdkAtoms"
                                },
                                "type": {
                                    "@name": "GLib.List",
                                    "@c:type": "GList*",
                                    "type": {
                                        "@name": "Atom"
                                    }
                                }
                            }
                        ]
                    }
                },
                {
                    "@name": "drag_begin_for_device",
                    "@c:identifier": "gdk_drag_begin_for_device",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "gdk/gdkwindow.c",
                        "@line": "11428",
                        "#text": "Starts a drag and creates a new drag context for it.\n\nThis function is called by the drag source."
                    },
                    "source-position": {
                        "@filename": "gdk/gdkdnd.h",
                        "@line": "160"
                    },
                    "return-value": {
                        "@transfer-ownership": "full",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "gdk/gdkwindow.c",
                            "@line": "11439",
                            "#text": "a newly created #GdkDragContext"
                        },
                        "type": {
                            "@name": "DragContext",
                            "@c:type": "GdkDragContext*"
                        }
                    },
                    "parameters": {
                        "parameter": [
                            {
                                "@name": "window",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "gdk/gdkwindow.c",
                                    "@line": "11430",
                                    "#text": "the source window for this drag"
                                },
                                "type": {
                                    "@name": "Window",
                                    "@c:type": "GdkWindow*"
                                }
                            },
                            {
                                "@name": "device",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "gdk/gdkwindow.c",
                                    "@line": "11431",
                                    "#text": "the device that controls this drag"
                                },
                                "type": {
                                    "@name": "Device",
                                    "@c:type": "GdkDevice*"
                                }
                            },
                            {
                                "@name": "targets",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "gdk/gdkwindow.c",
                                    "@line": "11432",
                                    "#text": "the offered targets,\n    as list of #GdkAtoms"
                                },
                                "type": {
                                    "@name": "GLib.List",
                                    "@c:type": "GList*",
                                    "type": {
                                        "@name": "Atom"
                                    }
                                }
                            }
                        ]
                    }
                },
                {
                    "@name": "drag_begin_from_point",
                    "@c:identifier": "gdk_drag_begin_from_point",
                    "@version": "3.20",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "gdk/gdkwindow.c",
                        "@line": "11453",
                        "#text": "Starts a drag and creates a new drag context for it.\n\nThis function is called by the drag source."
                    },
                    "source-position": {
                        "@filename": "gdk/gdkdnd.h",
                        "@line": "164"
                    },
                    "return-value": {
                        "@transfer-ownership": "full",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "gdk/gdkwindow.c",
                            "@line": "11466",
                            "#text": "a newly created #GdkDragContext"
                        },
                        "type": {
                            "@name": "DragContext",
                            "@c:type": "GdkDragContext*"
                        }
                    },
                    "parameters": {
                        "parameter": [
                            {
                                "@name": "window",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "gdk/gdkwindow.c",
                                    "@line": "11455",
                                    "#text": "the source window for this drag"
                                },
                                "type": {
                                    "@name": "Window",
                                    "@c:type": "GdkWindow*"
                                }
                            },
                            {
                                "@name": "device",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "gdk/gdkwindow.c",
                                    "@line": "11456",
                                    "#text": "the device that controls this drag"
                                },
                                "type": {
                                    "@name": "Device",
                                    "@c:type": "GdkDevice*"
                                }
                            },
                            {
                                "@name": "targets",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "gdk/gdkwindow.c",
                                    "@line": "11457",
                                    "#text": "the offered targets,\n    as list of #GdkAtoms"
                                },
                                "type": {
                                    "@name": "GLib.List",
                                    "@c:type": "GList*",
                                    "type": {
                                        "@name": "Atom"
                                    }
                                }
                            },
                            {
                                "@name": "x_root",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "gdk/gdkwindow.c",
                                    "@line": "11459",
                                    "#text": "the x coordinate where the drag nominally started"
                                },
                                "type": {
                                    "@name": "gint",
                                    "@c:type": "gint"
                                }
                            },
                            {
                                "@name": "y_root",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "gdk/gdkwindow.c",
                                    "@line": "11460",
                                    "#text": "the y coordinate where the drag nominally started"
                                },
                                "type": {
                                    "@name": "gint",
                                    "@c:type": "gint"
                                }
                            }
                        ]
                    }
                },
                {
                    "@name": "drag_drop",
                    "@c:identifier": "gdk_drag_drop",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "gdk/gdkdnd.c",
                        "@line": "485",
                        "#text": "Drops on the current destination.\n\nThis function is called by the drag source.\n\nThis function does not need to be called in managed drag and drop\noperations. See gdk_drag_context_manage_dnd() for more information."
                    },
                    "source-position": {
                        "@filename": "gdk/gdkdnd.h",
                        "@line": "189"
                    },
                    "return-value": {
                        "@transfer-ownership": "none",
                        "type": {
                            "@name": "none",
                            "@c:type": "void"
                        }
                    },
                    "parameters": {
                        "parameter": [
                            {
                                "@name": "context",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "gdk/gdkdnd.c",
                                    "@line": "487",
                                    "#text": "a #GdkDragContext"
                                },
                                "type": {
                                    "@name": "DragContext",
                                    "@c:type": "GdkDragContext*"
                                }
                            },
                            {
                                "@name": "time_",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "gdk/gdkdnd.c",
                                    "@line": "488",
                                    "#text": "the timestamp for this operation"
                                },
                                "type": {
                                    "@name": "guint32",
                                    "@c:type": "guint32"
                                }
                            }
                        ]
                    }
                },
                {
                    "@name": "drag_drop_done",
                    "@c:identifier": "gdk_drag_drop_done",
                    "@version": "3.20",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "gdk/gdkdnd.c",
                        "@line": "633",
                        "#text": "Inform GDK if the drop ended successfully. Passing %FALSE\nfor @success may trigger a drag cancellation animation.\n\nThis function is called by the drag source, and should\nbe the last call before dropping the reference to the\n@context.\n\nThe #GdkDragContext will only take the first gdk_drag_drop_done()\ncall as effective, if this function is called multiple times,\nall subsequent calls will be ignored."
                    },
                    "source-position": {
                        "@filename": "gdk/gdkdnd.h",
                        "@line": "198"
                    },
                    "return-value": {
                        "@transfer-ownership": "none",
                        "type": {
                            "@name": "none",
                            "@c:type": "void"
                        }
                    },
                    "parameters": {
                        "parameter": [
                            {
                                "@name": "context",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "gdk/gdkdnd.c",
                                    "@line": "635",
                                    "#text": "a #GdkDragContext"
                                },
                                "type": {
                                    "@name": "DragContext",
                                    "@c:type": "GdkDragContext*"
                                }
                            },
                            {
                                "@name": "success",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "gdk/gdkdnd.c",
                                    "@line": "636",
                                    "#text": "whether the drag was ultimatively successful"
                                },
                                "type": {
                                    "@name": "gboolean",
                                    "@c:type": "gboolean"
                                }
                            }
                        ]
                    }
                },
                {
                    "@name": "drag_drop_succeeded",
                    "@c:identifier": "gdk_drag_drop_succeeded",
                    "@version": "2.6",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "gdk/gdkdnd.c",
                        "@line": "547",
                        "#text": "Returns whether the dropped data has been successfully\ntransferred. This function is intended to be used while\nhandling a %GDK_DROP_FINISHED event, its return value is\nmeaningless at other times."
                    },
                    "source-position": {
                        "@filename": "gdk/gdkdnd.h",
                        "@line": "195"
                    },
                    "return-value": {
                        "@transfer-ownership": "none",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "gdk/gdkdnd.c",
                            "@line": "556",
                            "#text": "%TRUE if the drop was successful."
                        },
                        "type": {
                            "@name": "gboolean",
                            "@c:type": "gboolean"
                        }
                    },
                    "parameters": {
                        "parameter": {
                            "@name": "context",
                            "@transfer-ownership": "none",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkdnd.c",
                                "@line": "549",
                                "#text": "a #GdkDragContext"
                            },
                            "type": {
                                "@name": "DragContext",
                                "@c:type": "GdkDragContext*"
                            }
                        }
                    }
                },
                {
                    "@name": "drag_find_window_for_screen",
                    "@c:identifier": "gdk_drag_find_window_for_screen",
                    "@version": "2.2",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "gdk/gdkdnd.c",
                        "@line": "363",
                        "#text": "Finds the destination window and DND protocol to use at the\ngiven pointer position.\n\nThis function is called by the drag source to obtain the\n@dest_window and @protocol parameters for gdk_drag_motion()."
                    },
                    "source-position": {
                        "@filename": "gdk/gdkdnd.h",
                        "@line": "171"
                    },
                    "return-value": {
                        "@transfer-ownership": "none",
                        "type": {
                            "@name": "none",
                            "@c:type": "void"
                        }
                    },
                    "parameters": {
                        "parameter": [
                            {
                                "@name": "context",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "gdk/gdkdnd.c",
                                    "@line": "365",
                                    "#text": "a #GdkDragContext"
                                },
                                "type": {
                                    "@name": "DragContext",
                                    "@c:type": "GdkDragContext*"
                                }
                            },
                            {
                                "@name": "drag_window",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "gdk/gdkdnd.c",
                                    "@line": "366",
                                    "#text": "a window which may be at the pointer position, but\n    should be ignored, since it is put up by the drag source as an icon"
                                },
                                "type": {
                                    "@name": "Window",
                                    "@c:type": "GdkWindow*"
                                }
                            },
                            {
                                "@name": "screen",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "gdk/gdkdnd.c",
                                    "@line": "368",
                                    "#text": "the screen where the destination window is sought"
                                },
                                "type": {
                                    "@name": "Screen",
                                    "@c:type": "GdkScreen*"
                                }
                            },
                            {
                                "@name": "x_root",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "gdk/gdkdnd.c",
                                    "@line": "369",
                                    "#text": "the x position of the pointer in root coordinates"
                                },
                                "type": {
                                    "@name": "gint",
                                    "@c:type": "gint"
                                }
                            },
                            {
                                "@name": "y_root",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "gdk/gdkdnd.c",
                                    "@line": "370",
                                    "#text": "the y position of the pointer in root coordinates"
                                },
                                "type": {
                                    "@name": "gint",
                                    "@c:type": "gint"
                                }
                            },
                            {
                                "@name": "dest_window",
                                "@direction": "out",
                                "@caller-allocates": "0",
                                "@transfer-ownership": "full",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "gdk/gdkdnd.c",
                                    "@line": "371",
                                    "#text": "location to store the destination window in"
                                },
                                "type": {
                                    "@name": "Window",
                                    "@c:type": "GdkWindow**"
                                }
                            },
                            {
                                "@name": "protocol",
                                "@direction": "out",
                                "@caller-allocates": "0",
                                "@transfer-ownership": "full",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "gdk/gdkdnd.c",
                                    "@line": "372",
                                    "#text": "location to store the DND protocol in"
                                },
                                "type": {
                                    "@name": "DragProtocol",
                                    "@c:type": "GdkDragProtocol*"
                                }
                            }
                        ]
                    }
                },
                {
                    "@name": "drag_get_selection",
                    "@c:identifier": "gdk_drag_get_selection",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "gdk/gdkdnd.c",
                        "@line": "568",
                        "#text": "Returns the selection atom for the current source window."
                    },
                    "source-position": {
                        "@filename": "gdk/gdkdnd.h",
                        "@line": "151"
                    },
                    "return-value": {
                        "@transfer-ownership": "none",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "gdk/gdkdnd.c",
                            "@line": "574",
                            "#text": "the selection atom, or %GDK_NONE"
                        },
                        "type": {
                            "@name": "Atom",
                            "@c:type": "GdkAtom"
                        }
                    },
                    "parameters": {
                        "parameter": {
                            "@name": "context",
                            "@transfer-ownership": "none",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkdnd.c",
                                "@line": "570",
                                "#text": "a #GdkDragContext."
                            },
                            "type": {
                                "@name": "DragContext",
                                "@c:type": "GdkDragContext*"
                            }
                        }
                    }
                },
                {
                    "@name": "drag_motion",
                    "@c:identifier": "gdk_drag_motion",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "gdk/gdkdnd.c",
                        "@line": "419",
                        "#text": "Updates the drag context when the pointer moves or the\nset of actions changes.\n\nThis function is called by the drag source.\n\nThis function does not need to be called in managed drag and drop\noperations. See gdk_drag_context_manage_dnd() for more information."
                    },
                    "source-position": {
                        "@filename": "gdk/gdkdnd.h",
                        "@line": "180"
                    },
                    "return-value": {
                        "@transfer-ownership": "none",
                        "type": {
                            "@name": "gboolean",
                            "@c:type": "gboolean"
                        }
                    },
                    "parameters": {
                        "parameter": [
                            {
                                "@name": "context",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "gdk/gdkdnd.c",
                                    "@line": "421",
                                    "#text": "a #GdkDragContext"
                                },
                                "type": {
                                    "@name": "DragContext",
                                    "@c:type": "GdkDragContext*"
                                }
                            },
                            {
                                "@name": "dest_window",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "gdk/gdkdnd.c",
                                    "@line": "422",
                                    "#text": "the new destination window, obtained by\n    gdk_drag_find_window()"
                                },
                                "type": {
                                    "@name": "Window",
                                    "@c:type": "GdkWindow*"
                                }
                            },
                            {
                                "@name": "protocol",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "gdk/gdkdnd.c",
                                    "@line": "424",
                                    "#text": "the DND protocol in use, obtained by gdk_drag_find_window()"
                                },
                                "type": {
                                    "@name": "DragProtocol",
                                    "@c:type": "GdkDragProtocol"
                                }
                            },
                            {
                                "@name": "x_root",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "gdk/gdkdnd.c",
                                    "@line": "425",
                                    "#text": "the x position of the pointer in root coordinates"
                                },
                                "type": {
                                    "@name": "gint",
                                    "@c:type": "gint"
                                }
                            },
                            {
                                "@name": "y_root",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "gdk/gdkdnd.c",
                                    "@line": "426",
                                    "#text": "the y position of the pointer in root coordinates"
                                },
                                "type": {
                                    "@name": "gint",
                                    "@c:type": "gint"
                                }
                            },
                            {
                                "@name": "suggested_action",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "gdk/gdkdnd.c",
                                    "@line": "427",
                                    "#text": "the suggested action"
                                },
                                "type": {
                                    "@name": "DragAction",
                                    "@c:type": "GdkDragAction"
                                }
                            },
                            {
                                "@name": "possible_actions",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "gdk/gdkdnd.c",
                                    "@line": "428",
                                    "#text": "the possible actions"
                                },
                                "type": {
                                    "@name": "DragAction",
                                    "@c:type": "GdkDragAction"
                                }
                            },
                            {
                                "@name": "time_",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "gdk/gdkdnd.c",
                                    "@line": "429",
                                    "#text": "the timestamp for this operation"
                                },
                                "type": {
                                    "@name": "guint32",
                                    "@c:type": "guint32"
                                }
                            }
                        ]
                    }
                },
                {
                    "@name": "drag_status",
                    "@c:identifier": "gdk_drag_status",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "gdk/gdkdnd.c",
                        "@line": "397",
                        "#text": "Selects one of the actions offered by the drag source.\n\nThis function is called by the drag destination in response to\ngdk_drag_motion() called by the drag source."
                    },
                    "source-position": {
                        "@filename": "gdk/gdkdnd.h",
                        "@line": "139"
                    },
                    "return-value": {
                        "@transfer-ownership": "none",
                        "type": {
                            "@name": "none",
                            "@c:type": "void"
                        }
                    },
                    "parameters": {
                        "parameter": [
                            {
                                "@name": "context",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "gdk/gdkdnd.c",
                                    "@line": "399",
                                    "#text": "a #GdkDragContext"
                                },
                                "type": {
                                    "@name": "DragContext",
                                    "@c:type": "GdkDragContext*"
                                }
                            },
                            {
                                "@name": "action",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "gdk/gdkdnd.c",
                                    "@line": "400",
                                    "#text": "the selected action which will be taken when a drop happens,\n   or 0 to indicate that a drop will not be accepted"
                                },
                                "type": {
                                    "@name": "DragAction",
                                    "@c:type": "GdkDragAction"
                                }
                            },
                            {
                                "@name": "time_",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "gdk/gdkdnd.c",
                                    "@line": "402",
                                    "#text": "the timestamp for this operation"
                                },
                                "type": {
                                    "@name": "guint32",
                                    "@c:type": "guint32"
                                }
                            }
                        ]
                    }
                },
                {
                    "@name": "drop_finish",
                    "@c:identifier": "gdk_drop_finish",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "gdk/gdkdnd.c",
                        "@line": "527",
                        "#text": "Ends the drag operation after a drop.\n\nThis function is called by the drag destination."
                    },
                    "source-position": {
                        "@filename": "gdk/gdkdnd.h",
                        "@line": "147"
                    },
                    "return-value": {
                        "@transfer-ownership": "none",
                        "type": {
                            "@name": "none",
                            "@c:type": "void"
                        }
                    },
                    "parameters": {
                        "parameter": [
                            {
                                "@name": "context",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "gdk/gdkdnd.c",
                                    "@line": "529",
                                    "#text": "a #GdkDragContext"
                                },
                                "type": {
                                    "@name": "DragContext",
                                    "@c:type": "GdkDragContext*"
                                }
                            },
                            {
                                "@name": "success",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "gdk/gdkdnd.c",
                                    "@line": "530",
                                    "#text": "%TRUE if the data was successfully received"
                                },
                                "type": {
                                    "@name": "gboolean",
                                    "@c:type": "gboolean"
                                }
                            },
                            {
                                "@name": "time_",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "gdk/gdkdnd.c",
                                    "@line": "531",
                                    "#text": "the timestamp for this operation"
                                },
                                "type": {
                                    "@name": "guint32",
                                    "@c:type": "guint32"
                                }
                            }
                        ]
                    }
                },
                {
                    "@name": "drop_reply",
                    "@c:identifier": "gdk_drop_reply",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "gdk/gdkdnd.c",
                        "@line": "506",
                        "#text": "Accepts or rejects a drop.\n\nThis function is called by the drag destination in response\nto a drop initiated by the drag source."
                    },
                    "source-position": {
                        "@filename": "gdk/gdkdnd.h",
                        "@line": "143"
                    },
                    "return-value": {
                        "@transfer-ownership": "none",
                        "type": {
                            "@name": "none",
                            "@c:type": "void"
                        }
                    },
                    "parameters": {
                        "parameter": [
                            {
                                "@name": "context",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "gdk/gdkdnd.c",
                                    "@line": "508",
                                    "#text": "a #GdkDragContext"
                                },
                                "type": {
                                    "@name": "DragContext",
                                    "@c:type": "GdkDragContext*"
                                }
                            },
                            {
                                "@name": "accepted",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "gdk/gdkdnd.c",
                                    "@line": "509",
                                    "#text": "%TRUE if the drop is accepted"
                                },
                                "type": {
                                    "@name": "gboolean",
                                    "@c:type": "gboolean"
                                }
                            },
                            {
                                "@name": "time_",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "gdk/gdkdnd.c",
                                    "@line": "510",
                                    "#text": "the timestamp for this operation"
                                },
                                "type": {
                                    "@name": "guint32",
                                    "@c:type": "guint32"
                                }
                            }
                        ]
                    }
                },
                {
                    "@name": "error_trap_pop",
                    "@c:identifier": "gdk_error_trap_pop",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "gdk/gdkdisplay.c",
                        "@line": "2388",
                        "#text": "Removes an error trap pushed with gdk_error_trap_push().\nMay block until an error has been definitively received\nor not received from the X server. gdk_error_trap_pop_ignored()\nis preferred if you don\u2019t need to know whether an error\noccurred, because it never has to block. If you don't\nneed the return value of gdk_error_trap_pop(), use\ngdk_error_trap_pop_ignored().\n\nPrior to GDK 3.0, this function would not automatically\nsync for you, so you had to gdk_flush() if your last\ncall to Xlib was not a blocking round trip."
                    },
                    "source-position": {
                        "@filename": "gdk/gdkmain.h",
                        "@line": "73"
                    },
                    "return-value": {
                        "@transfer-ownership": "none",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "gdk/gdkdisplay.c",
                            "@line": "2403",
                            "#text": "X error code or 0 on success"
                        },
                        "type": {
                            "@name": "gint",
                            "@c:type": "gint"
                        }
                    }
                },
                {
                    "@name": "error_trap_pop_ignored",
                    "@c:identifier": "gdk_error_trap_pop_ignored",
                    "@version": "3.0",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "gdk/gdkdisplay.c",
                        "@line": "2372",
                        "#text": "Removes an error trap pushed with gdk_error_trap_push(), but\nwithout bothering to wait and see whether an error occurred.  If an\nerror arrives later asynchronously that was triggered while the\ntrap was pushed, that error will be ignored."
                    },
                    "source-position": {
                        "@filename": "gdk/gdkmain.h",
                        "@line": "75"
                    },
                    "return-value": {
                        "@transfer-ownership": "none",
                        "type": {
                            "@name": "none",
                            "@c:type": "void"
                        }
                    }
                },
                {
                    "@name": "error_trap_push",
                    "@c:identifier": "gdk_error_trap_push",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "gdk/gdkdisplay.c",
                        "@line": "2283",
                        "#text": "This function allows X errors to be trapped instead of the normal\nbehavior of exiting the application. It should only be used if it\nis not possible to avoid the X error in any other way. Errors are\nignored on all #GdkDisplay currently known to the\n#GdkDisplayManager. If you don\u2019t care which error happens and just\nwant to ignore everything, pop with gdk_error_trap_pop_ignored().\nIf you need the error code, use gdk_error_trap_pop() which may have\nto block and wait for the error to arrive from the X server.\n\nThis API exists on all platforms but only does anything on X.\n\nYou can use gdk_x11_display_error_trap_push() to ignore errors\non only a single display.\n\n## Trapping an X error\n\n|[<!-- language=\"C\" -->\ngdk_error_trap_push ();\n\n // ... Call the X function which may cause an error here ...\n\n\nif (gdk_error_trap_pop ())\n {\n   // ... Handle the error here ...\n }\n]|"
                    },
                    "source-position": {
                        "@filename": "gdk/gdkmain.h",
                        "@line": "70"
                    },
                    "return-value": {
                        "@transfer-ownership": "none",
                        "type": {
                            "@name": "none",
                            "@c:type": "void"
                        }
                    }
                },
                {
                    "@name": "event_get",
                    "@c:identifier": "gdk_event_get",
                    "@moved-to": "Event.get",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "gdk/gdkevents.c",
                        "@line": "398",
                        "#text": "Checks all open displays for a #GdkEvent to process,to be processed\non, fetching events from the windowing system if necessary.\nSee gdk_display_get_event()."
                    },
                    "source-position": {
                        "@filename": "gdk/gdkevents.h",
                        "@line": "1455"
                    },
                    "return-value": {
                        "@transfer-ownership": "full",
                        "@nullable": "1",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "gdk/gdkevents.c",
                            "@line": "405",
                            "#text": "the next #GdkEvent to be processed, or %NULL\nif no events are pending. The returned #GdkEvent should be freed\nwith gdk_event_free()."
                        },
                        "type": {
                            "@name": "Event",
                            "@c:type": "GdkEvent*"
                        }
                    }
                },
                {
                    "@name": "event_handler_set",
                    "@c:identifier": "gdk_event_handler_set",
                    "@moved-to": "Event.handler_set",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "gdk/gdkevents.c",
                        "@line": "332",
                        "#text": "Sets the function to call to handle all events from GDK.\n\nNote that GTK+ uses this to install its own event handler, so it is\nusually not useful for GTK+ applications. (Although an application\ncan call this function then call gtk_main_do_event() to pass\nevents to GTK+.)"
                    },
                    "source-position": {
                        "@filename": "gdk/gdkevents.h",
                        "@line": "1542"
                    },
                    "return-value": {
                        "@transfer-ownership": "none",
                        "type": {
                            "@name": "none",
                            "@c:type": "void"
                        }
                    },
                    "parameters": {
                        "parameter": [
                            {
                                "@name": "func",
                                "@transfer-ownership": "none",
                                "@scope": "notified",
                                "@closure": "1",
                                "@destroy": "2",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "gdk/gdkevents.c",
                                    "@line": "334",
                                    "#text": "the function to call to handle events from GDK."
                                },
                                "type": {
                                    "@name": "EventFunc",
                                    "@c:type": "GdkEventFunc"
                                }
                            },
                            {
                                "@name": "data",
                                "@transfer-ownership": "none",
                                "@nullable": "1",
                                "@allow-none": "1",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "gdk/gdkevents.c",
                                    "@line": "335",
                                    "#text": "user data to pass to the function."
                                },
                                "type": {
                                    "@name": "gpointer",
                                    "@c:type": "gpointer"
                                }
                            },
                            {
                                "@name": "notify",
                                "@transfer-ownership": "none",
                                "@scope": "async",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "gdk/gdkevents.c",
                                    "@line": "336",
                                    "#text": "the function to call when the handler function is removed, i.e. when\n         gdk_event_handler_set() is called with another event handler."
                                },
                                "type": {
                                    "@name": "GLib.DestroyNotify",
                                    "@c:type": "GDestroyNotify"
                                }
                            }
                        ]
                    }
                },
                {
                    "@name": "event_peek",
                    "@c:identifier": "gdk_event_peek",
                    "@moved-to": "Event.peek",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "gdk/gdkevents.c",
                        "@line": "429",
                        "#text": "If there is an event waiting in the event queue of some open\ndisplay, returns a copy of it. See gdk_display_peek_event()."
                    },
                    "source-position": {
                        "@filename": "gdk/gdkevents.h",
                        "@line": "1458"
                    },
                    "return-value": {
                        "@transfer-ownership": "full",
                        "@nullable": "1",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "gdk/gdkevents.c",
                            "@line": "435",
                            "#text": "a copy of the first #GdkEvent on some event\nqueue, or %NULL if no events are in any queues. The returned\n#GdkEvent should be freed with gdk_event_free()."
                        },
                        "type": {
                            "@name": "Event",
                            "@c:type": "GdkEvent*"
                        }
                    }
                },
                {
                    "@name": "event_request_motions",
                    "@c:identifier": "gdk_event_request_motions",
                    "@moved-to": "Event.request_motions",
                    "@version": "2.12",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "gdk/gdkevents.c",
                        "@line": "1820",
                        "#text": "Request more motion notifies if @event is a motion notify hint event.\n\nThis function should be used instead of gdk_window_get_pointer() to\nrequest further motion notifies, because it also works for extension\nevents where motion notifies are provided for devices other than the\ncore pointer. Coordinate extraction, processing and requesting more\nmotion events from a %GDK_MOTION_NOTIFY event usually works like this:\n\n|[<!-- language=\"C\" -->\n{\n  // motion_event handler\n  x = motion_event->x;\n  y = motion_event->y;\n  // handle (x,y) motion\n  gdk_event_request_motions (motion_event); // handles is_hint events\n}\n]|"
                    },
                    "source-position": {
                        "@filename": "gdk/gdkevents.h",
                        "@line": "1523"
                    },
                    "return-value": {
                        "@transfer-ownership": "none",
                        "type": {
                            "@name": "none",
                            "@c:type": "void"
                        }
                    },
                    "parameters": {
                        "parameter": {
                            "@name": "event",
                            "@transfer-ownership": "none",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkevents.c",
                                "@line": "1822",
                                "#text": "a valid #GdkEvent"
                            },
                            "type": {
                                "@name": "EventMotion",
                                "@c:type": "const GdkEventMotion*"
                            }
                        }
                    }
                },
                {
                    "@name": "events_get_angle",
                    "@c:identifier": "gdk_events_get_angle",
                    "@version": "3.0",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "gdk/gdkevents.c",
                        "@line": "1962",
                        "#text": "If both events contain X/Y information, this function will return %TRUE\nand return in @angle the relative angle from @event1 to @event2. The rotation\ndirection for positive angles is from the positive X axis towards the positive\nY axis."
                    },
                    "source-position": {
                        "@filename": "gdk/gdkevents.h",
                        "@line": "1532"
                    },
                    "return-value": {
                        "@transfer-ownership": "none",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "gdk/gdkevents.c",
                            "@line": "1973",
                            "#text": "%TRUE if the angle could be calculated."
                        },
                        "type": {
                            "@name": "gboolean",
                            "@c:type": "gboolean"
                        }
                    },
                    "parameters": {
                        "parameter": [
                            {
                                "@name": "event1",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "gdk/gdkevents.c",
                                    "@line": "1964",
                                    "#text": "first #GdkEvent"
                                },
                                "type": {
                                    "@name": "Event",
                                    "@c:type": "GdkEvent*"
                                }
                            },
                            {
                                "@name": "event2",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "gdk/gdkevents.c",
                                    "@line": "1965",
                                    "#text": "second #GdkEvent"
                                },
                                "type": {
                                    "@name": "Event",
                                    "@c:type": "GdkEvent*"
                                }
                            },
                            {
                                "@name": "angle",
                                "@direction": "out",
                                "@caller-allocates": "0",
                                "@transfer-ownership": "full",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "gdk/gdkevents.c",
                                    "@line": "1966",
                                    "#text": "return location for the relative angle between both events"
                                },
                                "type": {
                                    "@name": "gdouble",
                                    "@c:type": "gdouble*"
                                }
                            }
                        ]
                    }
                },
                {
                    "@name": "events_get_center",
                    "@c:identifier": "gdk_events_get_center",
                    "@version": "3.0",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "gdk/gdkevents.c",
                        "@line": "2006",
                        "#text": "If both events contain X/Y information, the center of both coordinates\nwill be returned in @x and @y."
                    },
                    "source-position": {
                        "@filename": "gdk/gdkevents.h",
                        "@line": "1536"
                    },
                    "return-value": {
                        "@transfer-ownership": "none",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "gdk/gdkevents.c",
                            "@line": "2016",
                            "#text": "%TRUE if the center could be calculated."
                        },
                        "type": {
                            "@name": "gboolean",
                            "@c:type": "gboolean"
                        }
                    },
                    "parameters": {
                        "parameter": [
                            {
                                "@name": "event1",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "gdk/gdkevents.c",
                                    "@line": "2008",
                                    "#text": "first #GdkEvent"
                                },
                                "type": {
                                    "@name": "Event",
                                    "@c:type": "GdkEvent*"
                                }
                            },
                            {
                                "@name": "event2",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "gdk/gdkevents.c",
                                    "@line": "2009",
                                    "#text": "second #GdkEvent"
                                },
                                "type": {
                                    "@name": "Event",
                                    "@c:type": "GdkEvent*"
                                }
                            },
                            {
                                "@name": "x",
                                "@direction": "out",
                                "@caller-allocates": "0",
                                "@transfer-ownership": "full",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "gdk/gdkevents.c",
                                    "@line": "2010",
                                    "#text": "return location for the X coordinate of the center"
                                },
                                "type": {
                                    "@name": "gdouble",
                                    "@c:type": "gdouble*"
                                }
                            },
                            {
                                "@name": "y",
                                "@direction": "out",
                                "@caller-allocates": "0",
                                "@transfer-ownership": "full",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "gdk/gdkevents.c",
                                    "@line": "2011",
                                    "#text": "return location for the Y coordinate of the center"
                                },
                                "type": {
                                    "@name": "gdouble",
                                    "@c:type": "gdouble*"
                                }
                            }
                        ]
                    }
                },
                {
                    "@name": "events_get_distance",
                    "@c:identifier": "gdk_events_get_distance",
                    "@version": "3.0",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "gdk/gdkevents.c",
                        "@line": "1939",
                        "#text": "If both events have X/Y information, the distance between both coordinates\n(as in a straight line going from @event1 to @event2) will be returned."
                    },
                    "source-position": {
                        "@filename": "gdk/gdkevents.h",
                        "@line": "1528"
                    },
                    "return-value": {
                        "@transfer-ownership": "none",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "gdk/gdkevents.c",
                            "@line": "1948",
                            "#text": "%TRUE if the distance could be calculated."
                        },
                        "type": {
                            "@name": "gboolean",
                            "@c:type": "gboolean"
                        }
                    },
                    "parameters": {
                        "parameter": [
                            {
                                "@name": "event1",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "gdk/gdkevents.c",
                                    "@line": "1941",
                                    "#text": "first #GdkEvent"
                                },
                                "type": {
                                    "@name": "Event",
                                    "@c:type": "GdkEvent*"
                                }
                            },
                            {
                                "@name": "event2",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "gdk/gdkevents.c",
                                    "@line": "1942",
                                    "#text": "second #GdkEvent"
                                },
                                "type": {
                                    "@name": "Event",
                                    "@c:type": "GdkEvent*"
                                }
                            },
                            {
                                "@name": "distance",
                                "@direction": "out",
                                "@caller-allocates": "0",
                                "@transfer-ownership": "full",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "gdk/gdkevents.c",
                                    "@line": "1943",
                                    "#text": "return location for the distance"
                                },
                                "type": {
                                    "@name": "gdouble",
                                    "@c:type": "gdouble*"
                                }
                            }
                        ]
                    }
                },
                {
                    "@name": "events_pending",
                    "@c:identifier": "gdk_events_pending",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "gdk/gdkevents.c",
                        "@line": "359",
                        "#text": "Checks if any events are ready to be processed for any display."
                    },
                    "source-position": {
                        "@filename": "gdk/gdkevents.h",
                        "@line": "1453"
                    },
                    "return-value": {
                        "@transfer-ownership": "none",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "gdk/gdkevents.c",
                            "@line": "364",
                            "#text": "%TRUE if any events are pending."
                        },
                        "type": {
                            "@name": "gboolean",
                            "@c:type": "gboolean"
                        }
                    }
                },
                {
                    "@name": "flush",
                    "@c:identifier": "gdk_flush",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "gdk/gdkdisplay.c",
                        "@line": "585",
                        "#text": "Flushes the output buffers of all display connections and waits\nuntil all requests have been processed.\nThis is rarely needed by applications."
                    },
                    "source-position": {
                        "@filename": "gdk/gdkmain.h",
                        "@line": "124"
                    },
                    "return-value": {
                        "@transfer-ownership": "none",
                        "type": {
                            "@name": "none",
                            "@c:type": "void"
                        }
                    }
                },
                {
                    "@name": "get_default_root_window",
                    "@c:identifier": "gdk_get_default_root_window",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "gdk/gdkwindow.c",
                        "@line": "5109",
                        "#text": "Obtains the root window (parent all other windows are inside)\nfor the default display and screen."
                    },
                    "source-position": {
                        "@filename": "gdk/gdkwindow.h",
                        "@line": "1090"
                    },
                    "return-value": {
                        "@transfer-ownership": "none",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "gdk/gdkwindow.c",
                            "@line": "5115",
                            "#text": "the default root window"
                        },
                        "type": {
                            "@name": "Window",
                            "@c:type": "GdkWindow*"
                        }
                    }
                },
                {
                    "@name": "get_display",
                    "@c:identifier": "gdk_get_display",
                    "@deprecated": "1",
                    "@deprecated-version": "3.8",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "gdk/gdk.c",
                        "@line": "405",
                        "#text": "Gets the name of the display, which usually comes from the\n`DISPLAY` environment variable or the\n`--display` command line option."
                    },
                    "doc-deprecated": {
                        "@xml:space": "preserve",
                        "#text": "Call gdk_display_get_name (gdk_display_get_default ()))\n   instead."
                    },
                    "source-position": {
                        "@filename": "gdk/gdkmain.h",
                        "@line": "82"
                    },
                    "return-value": {
                        "@transfer-ownership": "full",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "gdk/gdk.c",
                            "@line": "412",
                            "#text": "the name of the display."
                        },
                        "type": {
                            "@name": "utf8",
                            "@c:type": "gchar*"
                        }
                    }
                },
                {
                    "@name": "get_display_arg_name",
                    "@c:identifier": "gdk_get_display_arg_name",
                    "@version": "2.2",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "gdk/gdk.c",
                        "@line": "423",
                        "#text": "Gets the display name specified in the command line arguments passed\nto gdk_init() or gdk_parse_args(), if any."
                    },
                    "source-position": {
                        "@filename": "gdk/gdkmain.h",
                        "@line": "79"
                    },
                    "return-value": {
                        "@transfer-ownership": "none",
                        "@nullable": "1",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "gdk/gdk.c",
                            "@line": "429",
                            "#text": "the display name, if specified explicitly,\n  otherwise %NULL this string is owned by GTK+ and must not be\n  modified or freed."
                        },
                        "type": {
                            "@name": "utf8",
                            "@c:type": "const gchar*"
                        }
                    }
                },
                {
                    "@name": "get_program_class",
                    "@c:identifier": "gdk_get_program_class",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "gdk/gdk.c",
                        "@line": "1057",
                        "#text": "Gets the program class. Unless the program class has explicitly\nbeen set with gdk_set_program_class() or with the `--class`\ncommandline option, the default value is the program name (determined\nwith g_get_prgname()) with the first character converted to uppercase."
                    },
                    "source-position": {
                        "@filename": "gdk/gdkmain.h",
                        "@line": "58"
                    },
                    "return-value": {
                        "@transfer-ownership": "none",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "gdk/gdk.c",
                            "@line": "1065",
                            "#text": "the program class."
                        },
                        "type": {
                            "@name": "utf8",
                            "@c:type": "const gchar*"
                        }
                    }
                },
                {
                    "@name": "get_show_events",
                    "@c:identifier": "gdk_get_show_events",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "gdk/gdkevents.c",
                        "@line": "2143",
                        "#text": "Gets whether event debugging output is enabled."
                    },
                    "source-position": {
                        "@filename": "gdk/gdkevents.h",
                        "@line": "1564"
                    },
                    "return-value": {
                        "@transfer-ownership": "none",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "gdk/gdkevents.c",
                            "@line": "2148",
                            "#text": "%TRUE if event debugging output is enabled."
                        },
                        "type": {
                            "@name": "gboolean",
                            "@c:type": "gboolean"
                        }
                    }
                },
                {
                    "@name": "gl_error_quark",
                    "@c:identifier": "gdk_gl_error_quark",
                    "@moved-to": "GLError.quark",
                    "return-value": {
                        "@transfer-ownership": "none",
                        "type": {
                            "@name": "GLib.Quark",
                            "@c:type": "GQuark"
                        }
                    }
                },
                {
                    "@name": "init",
                    "@c:identifier": "gdk_init",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "gdk/gdk.c",
                        "@line": "545",
                        "#text": "Initializes the GDK library and connects to the windowing system.\nIf initialization fails, a warning message is output and the application\nterminates with a call to `exit(1)`.\n\nAny arguments used by GDK are removed from the array and @argc and @argv\nare updated accordingly.\n\nGTK+ initializes GDK in gtk_init() and so this function is not usually\nneeded by GTK+ applications."
                    },
                    "source-position": {
                        "@filename": "gdk/gdkmain.h",
                        "@line": "47"
                    },
                    "return-value": {
                        "@transfer-ownership": "none",
                        "type": {
                            "@name": "none",
                            "@c:type": "void"
                        }
                    },
                    "parameters": {
                        "parameter": [
                            {
                                "@name": "argc",
                                "@direction": "inout",
                                "@caller-allocates": "0",
                                "@transfer-ownership": "full",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "gdk/gdk.c",
                                    "@line": "547",
                                    "#text": "the number of command line arguments."
                                },
                                "type": {
                                    "@name": "gint",
                                    "@c:type": "gint*"
                                }
                            },
                            {
                                "@name": "argv",
                                "@direction": "inout",
                                "@caller-allocates": "0",
                                "@transfer-ownership": "full",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "gdk/gdk.c",
                                    "@line": "548",
                                    "#text": "the array of command line arguments."
                                },
                                "array": {
                                    "@length": "0",
                                    "@zero-terminated": "0",
                                    "@c:type": "gchar***",
                                    "type": {
                                        "@name": "utf8",
                                        "@c:type": "gchar**"
                                    }
                                }
                            }
                        ]
                    }
                },
                {
                    "@name": "init_check",
                    "@c:identifier": "gdk_init_check",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "gdk/gdk.c",
                        "@line": "519",
                        "#text": "Initializes the GDK library and connects to the windowing system,\nreturning %TRUE on success.\n\nAny arguments used by GDK are removed from the array and @argc and @argv\nare updated accordingly.\n\nGTK+ initializes GDK in gtk_init() and so this function is not usually\nneeded by GTK+ applications."
                    },
                    "source-position": {
                        "@filename": "gdk/gdkmain.h",
                        "@line": "50"
                    },
                    "return-value": {
                        "@transfer-ownership": "none",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "gdk/gdk.c",
                            "@line": "533",
                            "#text": "%TRUE if initialization succeeded."
                        },
                        "type": {
                            "@name": "gboolean",
                            "@c:type": "gboolean"
                        }
                    },
                    "parameters": {
                        "parameter": [
                            {
                                "@name": "argc",
                                "@direction": "inout",
                                "@caller-allocates": "0",
                                "@transfer-ownership": "full",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "gdk/gdk.c",
                                    "@line": "521",
                                    "#text": "the number of command line arguments."
                                },
                                "type": {
                                    "@name": "gint",
                                    "@c:type": "gint*"
                                }
                            },
                            {
                                "@name": "argv",
                                "@direction": "inout",
                                "@caller-allocates": "0",
                                "@transfer-ownership": "full",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "gdk/gdk.c",
                                    "@line": "522",
                                    "#text": "the array of command line arguments."
                                },
                                "array": {
                                    "@length": "0",
                                    "@zero-terminated": "0",
                                    "@c:type": "gchar***",
                                    "type": {
                                        "@name": "utf8",
                                        "@c:type": "gchar**"
                                    }
                                }
                            }
                        ]
                    }
                },
                {
                    "@name": "keyboard_grab",
                    "@c:identifier": "gdk_keyboard_grab",
                    "@deprecated": "1",
                    "@deprecated-version": "3.0",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "gdk/gdkwindow.c",
                        "@line": "8727",
                        "#text": "Grabs the keyboard so that all events are passed to this\napplication until the keyboard is ungrabbed with gdk_keyboard_ungrab().\nThis overrides any previous keyboard grab by this client.\n\nIf you set up anything at the time you take the grab that needs to be cleaned\nup when the grab ends, you should handle the #GdkEventGrabBroken events that\nare emitted when the grab ends unvoluntarily."
                    },
                    "doc-deprecated": {
                        "@xml:space": "preserve",
                        "#text": "Use gdk_device_grab() instead."
                    },
                    "source-position": {
                        "@filename": "gdk/gdkmain.h",
                        "@line": "93"
                    },
                    "return-value": {
                        "@transfer-ownership": "none",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "gdk/gdkwindow.c",
                            "@line": "8747",
                            "#text": "%GDK_GRAB_SUCCESS if the grab was successful."
                        },
                        "type": {
                            "@name": "GrabStatus",
                            "@c:type": "GdkGrabStatus"
                        }
                    },
                    "parameters": {
                        "parameter": [
                            {
                                "@name": "window",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "gdk/gdkwindow.c",
                                    "@line": "8729",
                                    "#text": "the #GdkWindow which will own the grab (the grab window)."
                                },
                                "type": {
                                    "@name": "Window",
                                    "@c:type": "GdkWindow*"
                                }
                            },
                            {
                                "@name": "owner_events",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "gdk/gdkwindow.c",
                                    "@line": "8730",
                                    "#text": "if %FALSE then all keyboard events are reported with respect to\n  @window. If %TRUE then keyboard events for this application are\n  reported as normal, but keyboard events outside this application\n  are reported with respect to @window. Both key press and key\n  release events are always reported, independant of the event mask\n  set by the application."
                                },
                                "type": {
                                    "@name": "gboolean",
                                    "@c:type": "gboolean"
                                }
                            },
                            {
                                "@name": "time_",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "gdk/gdkwindow.c",
                                    "@line": "8736",
                                    "#text": "a timestamp from a #GdkEvent, or %GDK_CURRENT_TIME if no timestamp is\n  available."
                                },
                                "type": {
                                    "@name": "guint32",
                                    "@c:type": "guint32"
                                }
                            }
                        ]
                    }
                },
                {
                    "@name": "keyboard_ungrab",
                    "@c:identifier": "gdk_keyboard_ungrab",
                    "@deprecated": "1",
                    "@deprecated-version": "3.0",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "gdk/gdkdeprecated.c",
                        "@line": "66",
                        "#text": "Ungrabs the keyboard on the default display, if it is grabbed by this\napplication."
                    },
                    "doc-deprecated": {
                        "@xml:space": "preserve",
                        "#text": "Use gdk_device_ungrab(), together with gdk_device_grab()\n            instead."
                    },
                    "source-position": {
                        "@filename": "gdk/gdkmain.h",
                        "@line": "102"
                    },
                    "return-value": {
                        "@transfer-ownership": "none",
                        "type": {
                            "@name": "none",
                            "@c:type": "void"
                        }
                    },
                    "parameters": {
                        "parameter": {
                            "@name": "time_",
                            "@transfer-ownership": "none",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkdeprecated.c",
                                "@line": "68",
                                "#text": "a timestamp from a #GdkEvent, or %GDK_CURRENT_TIME if no\n       timestamp is available."
                            },
                            "type": {
                                "@name": "guint32",
                                "@c:type": "guint32"
                            }
                        }
                    }
                },
                {
                    "@name": "keyval_convert_case",
                    "@c:identifier": "gdk_keyval_convert_case",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "gdk/gdkkeys.c",
                        "@line": "736",
                        "#text": "Obtains the upper- and lower-case versions of the keyval @symbol.\nExamples of keyvals are #GDK_KEY_a, #GDK_KEY_Enter, #GDK_KEY_F1, etc."
                    },
                    "source-position": {
                        "@filename": "gdk/gdkkeys.h",
                        "@line": "143"
                    },
                    "return-value": {
                        "@transfer-ownership": "none",
                        "type": {
                            "@name": "none",
                            "@c:type": "void"
                        }
                    },
                    "parameters": {
                        "parameter": [
                            {
                                "@name": "symbol",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "gdk/gdkkeys.c",
                                    "@line": "738",
                                    "#text": "a keyval"
                                },
                                "type": {
                                    "@name": "guint",
                                    "@c:type": "guint"
                                }
                            },
                            {
                                "@name": "lower",
                                "@direction": "out",
                                "@caller-allocates": "0",
                                "@transfer-ownership": "full",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "gdk/gdkkeys.c",
                                    "@line": "739",
                                    "#text": "return location for lowercase version of @symbol"
                                },
                                "type": {
                                    "@name": "guint",
                                    "@c:type": "guint*"
                                }
                            },
                            {
                                "@name": "upper",
                                "@direction": "out",
                                "@caller-allocates": "0",
                                "@transfer-ownership": "full",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "gdk/gdkkeys.c",
                                    "@line": "740",
                                    "#text": "return location for uppercase version of @symbol"
                                },
                                "type": {
                                    "@name": "guint",
                                    "@c:type": "guint*"
                                }
                            }
                        ]
                    }
                },
                {
                    "@name": "keyval_from_name",
                    "@c:identifier": "gdk_keyval_from_name",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "gdk/gdkkeys.c",
                        "@line": "717",
                        "#text": "Converts a key name to a key value.\n\nThe names are the same as those in the\n`gdk/gdkkeysyms.h` header file\nbut without the leading \u201cGDK_KEY_\u201d."
                    },
                    "source-position": {
                        "@filename": "gdk/gdkkeys.h",
                        "@line": "141"
                    },
                    "return-value": {
                        "@transfer-ownership": "none",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "gdk/gdkkeys.c",
                            "@line": "727",
                            "#text": "the corresponding key value, or %GDK_KEY_VoidSymbol\n    if the key name is not a valid key"
                        },
                        "type": {
                            "@name": "guint",
                            "@c:type": "guint"
                        }
                    },
                    "parameters": {
                        "parameter": {
                            "@name": "keyval_name",
                            "@transfer-ownership": "none",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkkeys.c",
                                "@line": "719",
                                "#text": "a key name"
                            },
                            "type": {
                                "@name": "utf8",
                                "@c:type": "const gchar*"
                            }
                        }
                    }
                },
                {
                    "@name": "keyval_is_lower",
                    "@c:identifier": "gdk_keyval_is_lower",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "gdk/gdkkeys.c",
                        "@line": "252",
                        "#text": "Returns %TRUE if the given key value is in lower case."
                    },
                    "source-position": {
                        "@filename": "gdk/gdkkeys.h",
                        "@line": "153"
                    },
                    "return-value": {
                        "@transfer-ownership": "none",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "gdk/gdkkeys.c",
                            "@line": "258",
                            "#text": "%TRUE if @keyval is in lower case, or if @keyval is not\n  subject to case conversion."
                        },
                        "type": {
                            "@name": "gboolean",
                            "@c:type": "gboolean"
                        }
                    },
                    "parameters": {
                        "parameter": {
                            "@name": "keyval",
                            "@transfer-ownership": "none",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkkeys.c",
                                "@line": "254",
                                "#text": "a key value."
                            },
                            "type": {
                                "@name": "guint",
                                "@c:type": "guint"
                            }
                        }
                    }
                },
                {
                    "@name": "keyval_is_upper",
                    "@c:identifier": "gdk_keyval_is_upper",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "gdk/gdkkeys.c",
                        "@line": "230",
                        "#text": "Returns %TRUE if the given key value is in upper case."
                    },
                    "source-position": {
                        "@filename": "gdk/gdkkeys.h",
                        "@line": "151"
                    },
                    "return-value": {
                        "@transfer-ownership": "none",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "gdk/gdkkeys.c",
                            "@line": "236",
                            "#text": "%TRUE if @keyval is in upper case, or if @keyval is not subject to\n case conversion."
                        },
                        "type": {
                            "@name": "gboolean",
                            "@c:type": "gboolean"
                        }
                    },
                    "parameters": {
                        "parameter": {
                            "@name": "keyval",
                            "@transfer-ownership": "none",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkkeys.c",
                                "@line": "232",
                                "#text": "a key value."
                            },
                            "type": {
                                "@name": "guint",
                                "@c:type": "guint"
                            }
                        }
                    }
                },
                {
                    "@name": "keyval_name",
                    "@c:identifier": "gdk_keyval_name",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "gdk/gdkkeys.c",
                        "@line": "697",
                        "#text": "Converts a key value into a symbolic name.\n\nThe names are the same as those in the\n`gdk/gdkkeysyms.h` header file\nbut without the leading \u201cGDK_KEY_\u201d."
                    },
                    "source-position": {
                        "@filename": "gdk/gdkkeys.h",
                        "@line": "138"
                    },
                    "return-value": {
                        "@transfer-ownership": "none",
                        "@nullable": "1",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "gdk/gdkkeys.c",
                            "@line": "707",
                            "#text": "a string containing the name\n    of the key, or %NULL if @keyval is not a valid key. The string\n    should not be modified."
                        },
                        "type": {
                            "@name": "utf8",
                            "@c:type": "gchar*"
                        }
                    },
                    "parameters": {
                        "parameter": {
                            "@name": "keyval",
                            "@transfer-ownership": "none",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkkeys.c",
                                "@line": "699",
                                "#text": "a key value"
                            },
                            "type": {
                                "@name": "guint",
                                "@c:type": "guint"
                            }
                        }
                    }
                },
                {
                    "@name": "keyval_to_lower",
                    "@c:identifier": "gdk_keyval_to_lower",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "gdk/gdkkeys.c",
                        "@line": "211",
                        "#text": "Converts a key value to lower case, if applicable."
                    },
                    "source-position": {
                        "@filename": "gdk/gdkkeys.h",
                        "@line": "149"
                    },
                    "return-value": {
                        "@transfer-ownership": "none",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "gdk/gdkkeys.c",
                            "@line": "217",
                            "#text": "the lower case form of @keyval, or @keyval itself if it is already\n in lower case or it is not subject to case conversion."
                        },
                        "type": {
                            "@name": "guint",
                            "@c:type": "guint"
                        }
                    },
                    "parameters": {
                        "parameter": {
                            "@name": "keyval",
                            "@transfer-ownership": "none",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkkeys.c",
                                "@line": "213",
                                "#text": "a key value."
                            },
                            "type": {
                                "@name": "guint",
                                "@c:type": "guint"
                            }
                        }
                    }
                },
                {
                    "@name": "keyval_to_unicode",
                    "@c:identifier": "gdk_keyval_to_unicode",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "gdk/gdkkeyuni.c",
                        "@line": "872",
                        "#text": "Convert from a GDK key symbol to the corresponding ISO10646 (Unicode)\ncharacter."
                    },
                    "source-position": {
                        "@filename": "gdk/gdkkeys.h",
                        "@line": "156"
                    },
                    "return-value": {
                        "@transfer-ownership": "none",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "gdk/gdkkeyuni.c",
                            "@line": "879",
                            "#text": "the corresponding unicode character, or 0 if there\n              is no corresponding character."
                        },
                        "type": {
                            "@name": "guint32",
                            "@c:type": "guint32"
                        }
                    },
                    "parameters": {
                        "parameter": {
                            "@name": "keyval",
                            "@transfer-ownership": "none",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkkeyuni.c",
                                "@line": "874",
                                "#text": "a GDK key symbol"
                            },
                            "type": {
                                "@name": "guint",
                                "@c:type": "guint"
                            }
                        }
                    }
                },
                {
                    "@name": "keyval_to_upper",
                    "@c:identifier": "gdk_keyval_to_upper",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "gdk/gdkkeys.c",
                        "@line": "192",
                        "#text": "Converts a key value to upper case, if applicable."
                    },
                    "source-position": {
                        "@filename": "gdk/gdkkeys.h",
                        "@line": "147"
                    },
                    "return-value": {
                        "@transfer-ownership": "none",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "gdk/gdkkeys.c",
                            "@line": "198",
                            "#text": "the upper case form of @keyval, or @keyval itself if it is already\n  in upper case or it is not subject to case conversion."
                        },
                        "type": {
                            "@name": "guint",
                            "@c:type": "guint"
                        }
                    },
                    "parameters": {
                        "parameter": {
                            "@name": "keyval",
                            "@transfer-ownership": "none",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkkeys.c",
                                "@line": "194",
                                "#text": "a key value."
                            },
                            "type": {
                                "@name": "guint",
                                "@c:type": "guint"
                            }
                        }
                    }
                },
                {
                    "@name": "list_visuals",
                    "@c:identifier": "gdk_list_visuals",
                    "@deprecated": "1",
                    "@deprecated-version": "3.22",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "gdk/gdkvisual.c",
                        "@line": "78",
                        "#text": "Lists the available visuals for the default screen.\n(See gdk_screen_list_visuals())\nA visual describes a hardware image data format.\nFor example, a visual might support 24-bit color, or 8-bit color,\nand might expect pixels to be in a certain format.\n\nCall g_list_free() on the return value when you\u2019re finished with it."
                    },
                    "doc-deprecated": {
                        "@xml:space": "preserve",
                        "#text": "Use gdk_screen_list_visuals (gdk_screen_get_default ())."
                    },
                    "source-position": {
                        "@filename": "gdk/gdkvisual.h",
                        "@line": "109"
                    },
                    "return-value": {
                        "@transfer-ownership": "container",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "gdk/gdkvisual.c",
                            "@line": "89",
                            "#text": "a list of visuals; the list must be freed, but not its contents"
                        },
                        "type": {
                            "@name": "GLib.List",
                            "@c:type": "GList*",
                            "type": {
                                "@name": "Visual"
                            }
                        }
                    }
                },
                {
                    "@name": "notify_startup_complete",
                    "@c:identifier": "gdk_notify_startup_complete",
                    "@version": "2.2",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "gdk/gdkdisplay.c",
                        "@line": "2133",
                        "#text": "Indicates to the GUI environment that the application has finished\nloading. If the applications opens windows, this function is\nnormally called after opening the application\u2019s initial set of\nwindows.\n\nGTK+ will call this function automatically after opening the first\n#GtkWindow unless gtk_window_set_auto_startup_notification() is called\nto disable that feature."
                    },
                    "source-position": {
                        "@filename": "gdk/gdkmain.h",
                        "@line": "63"
                    },
                    "return-value": {
                        "@transfer-ownership": "none",
                        "type": {
                            "@name": "none",
                            "@c:type": "void"
                        }
                    }
                },
                {
                    "@name": "notify_startup_complete_with_id",
                    "@c:identifier": "gdk_notify_startup_complete_with_id",
                    "@version": "2.12",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "gdk/gdkdisplay.c",
                        "@line": "2153",
                        "#text": "Indicates to the GUI environment that the application has\nfinished loading, using a given identifier.\n\nGTK+ will call this function automatically for #GtkWindow\nwith custom startup-notification identifier unless\ngtk_window_set_auto_startup_notification() is called to\ndisable that feature."
                    },
                    "source-position": {
                        "@filename": "gdk/gdkmain.h",
                        "@line": "65"
                    },
                    "return-value": {
                        "@transfer-ownership": "none",
                        "type": {
                            "@name": "none",
                            "@c:type": "void"
                        }
                    },
                    "parameters": {
                        "parameter": {
                            "@name": "startup_id",
                            "@transfer-ownership": "none",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkdisplay.c",
                                "@line": "2155",
                                "#text": "a startup-notification identifier, for which\n    notification process should be completed"
                            },
                            "type": {
                                "@name": "utf8",
                                "@c:type": "const gchar*"
                            }
                        }
                    }
                },
                {
                    "@name": "offscreen_window_get_embedder",
                    "@c:identifier": "gdk_offscreen_window_get_embedder",
                    "@version": "2.18",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "gdk/gdkoffscreenwindow.c",
                        "@line": "592",
                        "#text": "Gets the window that @window is embedded in."
                    },
                    "source-position": {
                        "@filename": "gdk/gdkwindow.h",
                        "@line": "1100"
                    },
                    "return-value": {
                        "@transfer-ownership": "none",
                        "@nullable": "1",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "gdk/gdkoffscreenwindow.c",
                            "@line": "598",
                            "#text": "the embedding #GdkWindow, or\n    %NULL if @window is not an mbedded offscreen window"
                        },
                        "type": {
                            "@name": "Window",
                            "@c:type": "GdkWindow*"
                        }
                    },
                    "parameters": {
                        "parameter": {
                            "@name": "window",
                            "@transfer-ownership": "none",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkoffscreenwindow.c",
                                "@line": "594",
                                "#text": "a #GdkWindow"
                            },
                            "type": {
                                "@name": "Window",
                                "@c:type": "GdkWindow*"
                            }
                        }
                    }
                },
                {
                    "@name": "offscreen_window_get_surface",
                    "@c:identifier": "gdk_offscreen_window_get_surface",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "gdk/gdkoffscreenwindow.c",
                        "@line": "322",
                        "#text": "Gets the offscreen surface that an offscreen window renders into.\nIf you need to keep this around over window resizes, you need to\nadd a reference to it."
                    },
                    "source-position": {
                        "@filename": "gdk/gdkwindow.h",
                        "@line": "1095"
                    },
                    "return-value": {
                        "@transfer-ownership": "none",
                        "@nullable": "1",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "gdk/gdkoffscreenwindow.c",
                            "@line": "330",
                            "#text": "The offscreen surface, or\n  %NULL if not offscreen"
                        },
                        "type": {
                            "@name": "cairo.Surface",
                            "@c:type": "cairo_surface_t*"
                        }
                    },
                    "parameters": {
                        "parameter": {
                            "@name": "window",
                            "@transfer-ownership": "none",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkoffscreenwindow.c",
                                "@line": "324",
                                "#text": "a #GdkWindow"
                            },
                            "type": {
                                "@name": "Window",
                                "@c:type": "GdkWindow*"
                            }
                        }
                    }
                },
                {
                    "@name": "offscreen_window_set_embedder",
                    "@c:identifier": "gdk_offscreen_window_set_embedder",
                    "@version": "2.18",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "gdk/gdkoffscreenwindow.c",
                        "@line": "550",
                        "#text": "Sets @window to be embedded in @embedder.\n\nTo fully embed an offscreen window, in addition to calling this\nfunction, it is also necessary to handle the #GdkWindow::pick-embedded-child\nsignal on the @embedder and the #GdkWindow::to-embedder and\n#GdkWindow::from-embedder signals on @window."
                    },
                    "source-position": {
                        "@filename": "gdk/gdkwindow.h",
                        "@line": "1097"
                    },
                    "return-value": {
                        "@transfer-ownership": "none",
                        "type": {
                            "@name": "none",
                            "@c:type": "void"
                        }
                    },
                    "parameters": {
                        "parameter": [
                            {
                                "@name": "window",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "gdk/gdkoffscreenwindow.c",
                                    "@line": "552",
                                    "#text": "a #GdkWindow"
                                },
                                "type": {
                                    "@name": "Window",
                                    "@c:type": "GdkWindow*"
                                }
                            },
                            {
                                "@name": "embedder",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "gdk/gdkoffscreenwindow.c",
                                    "@line": "553",
                                    "#text": "the #GdkWindow that @window gets embedded in"
                                },
                                "type": {
                                    "@name": "Window",
                                    "@c:type": "GdkWindow*"
                                }
                            }
                        ]
                    }
                },
                {
                    "@name": "pango_context_get",
                    "@c:identifier": "gdk_pango_context_get",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "gdk/gdkpango.c",
                        "@line": "301",
                        "#text": "Creates a #PangoContext for the default GDK screen.\n\nThe context must be freed when you\u2019re finished with it.\n\nWhen using GTK+, normally you should use gtk_widget_get_pango_context()\ninstead of this function, to get the appropriate context for\nthe widget you intend to render text onto.\n\nThe newly created context will have the default font options (see\n#cairo_font_options_t) for the default screen; if these options\nchange it will not be updated. Using gtk_widget_get_pango_context()\nis more convenient if you want to keep a context around and track\nchanges to the screen\u2019s font rendering settings."
                    },
                    "source-position": {
                        "@filename": "gdk/gdkpango.h",
                        "@line": "37"
                    },
                    "return-value": {
                        "@transfer-ownership": "full",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "gdk/gdkpango.c",
                            "@line": "318",
                            "#text": "a new #PangoContext for the default display"
                        },
                        "type": {
                            "@name": "Pango.Context",
                            "@c:type": "PangoContext*"
                        }
                    }
                },
                {
                    "@name": "pango_context_get_for_display",
                    "@c:identifier": "gdk_pango_context_get_for_display",
                    "@version": "3.22",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "gdk/gdkpango.c",
                        "@line": "370",
                        "#text": "Creates a #PangoContext for @display.\n\nThe context must be freed when you\u2019re finished with it.\n\nWhen using GTK+, normally you should use gtk_widget_get_pango_context()\ninstead of this function, to get the appropriate context for\nthe widget you intend to render text onto.\n\nThe newly created context will have the default font options\n(see #cairo_font_options_t) for the display; if these options\nchange it will not be updated. Using gtk_widget_get_pango_context()\nis more convenient if you want to keep a context around and track\nchanges to the font rendering settings."
                    },
                    "source-position": {
                        "@filename": "gdk/gdkpango.h",
                        "@line": "35"
                    },
                    "return-value": {
                        "@transfer-ownership": "full",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "gdk/gdkpango.c",
                            "@line": "388",
                            "#text": "a new #PangoContext for @display"
                        },
                        "type": {
                            "@name": "Pango.Context",
                            "@c:type": "PangoContext*"
                        }
                    },
                    "parameters": {
                        "parameter": {
                            "@name": "display",
                            "@transfer-ownership": "none",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkpango.c",
                                "@line": "372",
                                "#text": "the #GdkDisplay for which the context is to be created"
                            },
                            "type": {
                                "@name": "Display",
                                "@c:type": "GdkDisplay*"
                            }
                        }
                    }
                },
                {
                    "@name": "pango_context_get_for_screen",
                    "@c:identifier": "gdk_pango_context_get_for_screen",
                    "@version": "2.2",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "gdk/gdkpango.c",
                        "@line": "326",
                        "#text": "Creates a #PangoContext for @screen.\n\nThe context must be freed when you\u2019re finished with it.\n\nWhen using GTK+, normally you should use gtk_widget_get_pango_context()\ninstead of this function, to get the appropriate context for\nthe widget you intend to render text onto.\n\nThe newly created context will have the default font options\n(see #cairo_font_options_t) for the screen; if these options\nchange it will not be updated. Using gtk_widget_get_pango_context()\nis more convenient if you want to keep a context around and track\nchanges to the screen\u2019s font rendering settings."
                    },
                    "source-position": {
                        "@filename": "gdk/gdkpango.h",
                        "@line": "33"
                    },
                    "return-value": {
                        "@transfer-ownership": "full",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "gdk/gdkpango.c",
                            "@line": "344",
                            "#text": "a new #PangoContext for @screen"
                        },
                        "type": {
                            "@name": "Pango.Context",
                            "@c:type": "PangoContext*"
                        }
                    },
                    "parameters": {
                        "parameter": {
                            "@name": "screen",
                            "@transfer-ownership": "none",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkpango.c",
                                "@line": "328",
                                "#text": "the #GdkScreen for which the context is to be created."
                            },
                            "type": {
                                "@name": "Screen",
                                "@c:type": "GdkScreen*"
                            }
                        }
                    }
                },
                {
                    "@name": "pango_layout_get_clip_region",
                    "@c:identifier": "gdk_pango_layout_get_clip_region",
                    "@introspectable": "0",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "gdk/gdkpango.c",
                        "@line": "239",
                        "#text": "Obtains a clip region which contains the areas where the given ranges\nof text would be drawn. @x_origin and @y_origin are the top left point\nto center the layout. @index_ranges should contain\nranges of bytes in the layout\u2019s text.\n\nNote that the regions returned correspond to logical extents of the text\nranges, not ink extents. So the drawn layout may in fact touch areas out of\nthe clip region.  The clip region is mainly useful for highlightling parts\nof text, such as when text is selected."
                    },
                    "source-position": {
                        "@filename": "gdk/gdkpango.h",
                        "@line": "53"
                    },
                    "return-value": {
                        "@transfer-ownership": "full",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "gdk/gdkpango.c",
                            "@line": "257",
                            "#text": "a clip region containing the given ranges"
                        },
                        "type": {
                            "@name": "cairo.Region",
                            "@c:type": "cairo_region_t*"
                        }
                    },
                    "parameters": {
                        "parameter": [
                            {
                                "@name": "layout",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "gdk/gdkpango.c",
                                    "@line": "241",
                                    "#text": "a #PangoLayout"
                                },
                                "type": {
                                    "@name": "Pango.Layout",
                                    "@c:type": "PangoLayout*"
                                }
                            },
                            {
                                "@name": "x_origin",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "gdk/gdkpango.c",
                                    "@line": "242",
                                    "#text": "X pixel where you intend to draw the layout with this clip"
                                },
                                "type": {
                                    "@name": "gint",
                                    "@c:type": "gint"
                                }
                            },
                            {
                                "@name": "y_origin",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "gdk/gdkpango.c",
                                    "@line": "243",
                                    "#text": "Y pixel where you intend to draw the layout with this clip"
                                },
                                "type": {
                                    "@name": "gint",
                                    "@c:type": "gint"
                                }
                            },
                            {
                                "@name": "index_ranges",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "gdk/gdkpango.c",
                                    "@line": "244",
                                    "#text": "array of byte indexes into the layout, where even members of array are start indexes and odd elements are end indexes"
                                },
                                "type": {
                                    "@name": "gint",
                                    "@c:type": "const gint*"
                                }
                            },
                            {
                                "@name": "n_ranges",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "gdk/gdkpango.c",
                                    "@line": "245",
                                    "#text": "number of ranges in @index_ranges, i.e. half the size of @index_ranges"
                                },
                                "type": {
                                    "@name": "gint",
                                    "@c:type": "gint"
                                }
                            }
                        ]
                    }
                },
                {
                    "@name": "pango_layout_line_get_clip_region",
                    "@c:identifier": "gdk_pango_layout_line_get_clip_region",
                    "@introspectable": "0",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "gdk/gdkpango.c",
                        "@line": "188",
                        "#text": "Obtains a clip region which contains the areas where the given\nranges of text would be drawn. @x_origin and @y_origin are the top left\nposition of the layout. @index_ranges\nshould contain ranges of bytes in the layout\u2019s text. The clip\nregion will include space to the left or right of the line (to the\nlayout bounding box) if you have indexes above or below the indexes\ncontained inside the line. This is to draw the selection all the way\nto the side of the layout. However, the clip region is in line coordinates,\nnot layout coordinates.\n\nNote that the regions returned correspond to logical extents of the text\nranges, not ink extents. So the drawn line may in fact touch areas out of\nthe clip region.  The clip region is mainly useful for highlightling parts\nof text, such as when text is selected."
                    },
                    "source-position": {
                        "@filename": "gdk/gdkpango.h",
                        "@line": "47"
                    },
                    "return-value": {
                        "@transfer-ownership": "full",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "gdk/gdkpango.c",
                            "@line": "213",
                            "#text": "a clip region containing the given ranges"
                        },
                        "type": {
                            "@name": "cairo.Region",
                            "@c:type": "cairo_region_t*"
                        }
                    },
                    "parameters": {
                        "parameter": [
                            {
                                "@name": "line",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "gdk/gdkpango.c",
                                    "@line": "190",
                                    "#text": "a #PangoLayoutLine"
                                },
                                "type": {
                                    "@name": "Pango.LayoutLine",
                                    "@c:type": "PangoLayoutLine*"
                                }
                            },
                            {
                                "@name": "x_origin",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "gdk/gdkpango.c",
                                    "@line": "191",
                                    "#text": "X pixel where you intend to draw the layout line with this clip"
                                },
                                "type": {
                                    "@name": "gint",
                                    "@c:type": "gint"
                                }
                            },
                            {
                                "@name": "y_origin",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "gdk/gdkpango.c",
                                    "@line": "192",
                                    "#text": "baseline pixel where you intend to draw the layout line with this clip"
                                },
                                "type": {
                                    "@name": "gint",
                                    "@c:type": "gint"
                                }
                            },
                            {
                                "@name": "index_ranges",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "gdk/gdkpango.c",
                                    "@line": "193",
                                    "#text": "array of byte indexes into the layout,\n    where even members of array are start indexes and odd elements\n    are end indexes"
                                },
                                "array": {
                                    "@zero-terminated": "0",
                                    "@c:type": "const gint*",
                                    "type": {
                                        "@name": "gint",
                                        "@c:type": "gint"
                                    }
                                }
                            },
                            {
                                "@name": "n_ranges",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "gdk/gdkpango.c",
                                    "@line": "196",
                                    "#text": "number of ranges in @index_ranges, i.e. half the size of @index_ranges"
                                },
                                "type": {
                                    "@name": "gint",
                                    "@c:type": "gint"
                                }
                            }
                        ]
                    }
                },
                {
                    "@name": "parse_args",
                    "@c:identifier": "gdk_parse_args",
                    "@version": "2.2",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "gdk/gdk.c",
                        "@line": "358",
                        "#text": "Parse command line arguments, and store for future\nuse by calls to gdk_display_open().\n\nAny arguments used by GDK are removed from the array and @argc and @argv are\nupdated accordingly.\n\nYou shouldn\u2019t call this function explicitly if you are using\ngtk_init(), gtk_init_check(), gdk_init(), or gdk_init_check()."
                    },
                    "source-position": {
                        "@filename": "gdk/gdkmain.h",
                        "@line": "44"
                    },
                    "return-value": {
                        "@transfer-ownership": "none",
                        "type": {
                            "@name": "none",
                            "@c:type": "void"
                        }
                    },
                    "parameters": {
                        "parameter": [
                            {
                                "@name": "argc",
                                "@direction": "inout",
                                "@caller-allocates": "0",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "gdk/gdk.c",
                                    "@line": "360",
                                    "#text": "the number of command line arguments."
                                },
                                "type": {
                                    "@name": "gint",
                                    "@c:type": "gint*"
                                }
                            },
                            {
                                "@name": "argv",
                                "@direction": "inout",
                                "@caller-allocates": "0",
                                "@transfer-ownership": "full",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "gdk/gdk.c",
                                    "@line": "361",
                                    "#text": "the array of command line arguments."
                                },
                                "array": {
                                    "@length": "0",
                                    "@zero-terminated": "0",
                                    "@c:type": "gchar***",
                                    "type": {
                                        "@name": "utf8",
                                        "@c:type": "gchar**"
                                    }
                                }
                            }
                        ]
                    }
                },
                {
                    "@name": "pixbuf_get_from_surface",
                    "@c:identifier": "gdk_pixbuf_get_from_surface",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "gdk/gdkpixbuf-drawable.c",
                        "@line": "237",
                        "#text": "Transfers image data from a #cairo_surface_t and converts it to an RGB(A)\nrepresentation inside a #GdkPixbuf. This allows you to efficiently read\nindividual pixels from cairo surfaces. For #GdkWindows, use\ngdk_pixbuf_get_from_window() instead.\n\nThis function will create an RGB pixbuf with 8 bits per channel.\nThe pixbuf will contain an alpha channel if the @surface contains one."
                    },
                    "source-position": {
                        "@filename": "gdk/gdkpixbuf.h",
                        "@line": "47"
                    },
                    "return-value": {
                        "@transfer-ownership": "full",
                        "@nullable": "1",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "gdk/gdkpixbuf-drawable.c",
                            "@line": "253",
                            "#text": "A newly-created pixbuf with a\n    reference count of 1, or %NULL on error"
                        },
                        "type": {
                            "@name": "GdkPixbuf.Pixbuf",
                            "@c:type": "GdkPixbuf*"
                        }
                    },
                    "parameters": {
                        "parameter": [
                            {
                                "@name": "surface",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "gdk/gdkpixbuf-drawable.c",
                                    "@line": "239",
                                    "#text": "surface to copy from"
                                },
                                "type": {
                                    "@name": "cairo.Surface",
                                    "@c:type": "cairo_surface_t*"
                                }
                            },
                            {
                                "@name": "src_x",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "gdk/gdkpixbuf-drawable.c",
                                    "@line": "240",
                                    "#text": "Source X coordinate within @surface"
                                },
                                "type": {
                                    "@name": "gint",
                                    "@c:type": "gint"
                                }
                            },
                            {
                                "@name": "src_y",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "gdk/gdkpixbuf-drawable.c",
                                    "@line": "241",
                                    "#text": "Source Y coordinate within @surface"
                                },
                                "type": {
                                    "@name": "gint",
                                    "@c:type": "gint"
                                }
                            },
                            {
                                "@name": "width",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "gdk/gdkpixbuf-drawable.c",
                                    "@line": "242",
                                    "#text": "Width in pixels of region to get"
                                },
                                "type": {
                                    "@name": "gint",
                                    "@c:type": "gint"
                                }
                            },
                            {
                                "@name": "height",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "gdk/gdkpixbuf-drawable.c",
                                    "@line": "243",
                                    "#text": "Height in pixels of region to get"
                                },
                                "type": {
                                    "@name": "gint",
                                    "@c:type": "gint"
                                }
                            }
                        ]
                    }
                },
                {
                    "@name": "pixbuf_get_from_window",
                    "@c:identifier": "gdk_pixbuf_get_from_window",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "gdk/gdkpixbuf-drawable.c",
                        "@line": "45",
                        "#text": "Transfers image data from a #GdkWindow and converts it to an RGB(A)\nrepresentation inside a #GdkPixbuf. In other words, copies\nimage data from a server-side drawable to a client-side RGB(A) buffer.\nThis allows you to efficiently read individual pixels on the client side.\n\nThis function will create an RGB pixbuf with 8 bits per channel with\nthe size specified by the @width and @height arguments scaled by the\nscale factor of @window. The pixbuf will contain an alpha channel if\nthe @window contains one.\n\nIf the window is off the screen, then there is no image data in the\nobscured/offscreen regions to be placed in the pixbuf. The contents of\nportions of the pixbuf corresponding to the offscreen region are undefined.\n\nIf the window you\u2019re obtaining data from is partially obscured by\nother windows, then the contents of the pixbuf areas corresponding\nto the obscured regions are undefined.\n\nIf the window is not mapped (typically because it\u2019s iconified/minimized\nor not on the current workspace), then %NULL will be returned.\n\nIf memory can\u2019t be allocated for the return value, %NULL will be returned\ninstead.\n\n(In short, there are several ways this function can fail, and if it fails\n it returns %NULL; so check the return value.)"
                    },
                    "source-position": {
                        "@filename": "gdk/gdkpixbuf.h",
                        "@line": "40"
                    },
                    "return-value": {
                        "@transfer-ownership": "full",
                        "@nullable": "1",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "gdk/gdkpixbuf-drawable.c",
                            "@line": "80",
                            "#text": "A newly-created pixbuf with a\n    reference count of 1, or %NULL on error"
                        },
                        "type": {
                            "@name": "GdkPixbuf.Pixbuf",
                            "@c:type": "GdkPixbuf*"
                        }
                    },
                    "parameters": {
                        "parameter": [
                            {
                                "@name": "window",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "gdk/gdkpixbuf-drawable.c",
                                    "@line": "47",
                                    "#text": "Source window"
                                },
                                "type": {
                                    "@name": "Window",
                                    "@c:type": "GdkWindow*"
                                }
                            },
                            {
                                "@name": "src_x",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "gdk/gdkpixbuf-drawable.c",
                                    "@line": "48",
                                    "#text": "Source X coordinate within @window"
                                },
                                "type": {
                                    "@name": "gint",
                                    "@c:type": "gint"
                                }
                            },
                            {
                                "@name": "src_y",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "gdk/gdkpixbuf-drawable.c",
                                    "@line": "49",
                                    "#text": "Source Y coordinate within @window"
                                },
                                "type": {
                                    "@name": "gint",
                                    "@c:type": "gint"
                                }
                            },
                            {
                                "@name": "width",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "gdk/gdkpixbuf-drawable.c",
                                    "@line": "50",
                                    "#text": "Width in pixels of region to get"
                                },
                                "type": {
                                    "@name": "gint",
                                    "@c:type": "gint"
                                }
                            },
                            {
                                "@name": "height",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "gdk/gdkpixbuf-drawable.c",
                                    "@line": "51",
                                    "#text": "Height in pixels of region to get"
                                },
                                "type": {
                                    "@name": "gint",
                                    "@c:type": "gint"
                                }
                            }
                        ]
                    }
                },
                {
                    "@name": "pointer_grab",
                    "@c:identifier": "gdk_pointer_grab",
                    "@deprecated": "1",
                    "@deprecated-version": "3.0",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "gdk/gdkwindow.c",
                        "@line": "8595",
                        "#text": "Grabs the pointer (usually a mouse) so that all events are passed to this\napplication until the pointer is ungrabbed with gdk_pointer_ungrab(), or\nthe grab window becomes unviewable.\nThis overrides any previous pointer grab by this client.\n\nPointer grabs are used for operations which need complete control over mouse\nevents, even if the mouse leaves the application.\nFor example in GTK+ it is used for Drag and Drop, for dragging the handle in\nthe #GtkHPaned and #GtkVPaned widgets.\n\nNote that if the event mask of an X window has selected both button press and\nbutton release events, then a button press event will cause an automatic\npointer grab until the button is released.\nX does this automatically since most applications expect to receive button\npress and release events in pairs.\nIt is equivalent to a pointer grab on the window with @owner_events set to\n%TRUE.\n\nIf you set up anything at the time you take the grab that needs to be cleaned\nup when the grab ends, you should handle the #GdkEventGrabBroken events that\nare emitted when the grab ends unvoluntarily."
                    },
                    "doc-deprecated": {
                        "@xml:space": "preserve",
                        "#text": "Use gdk_device_grab() instead."
                    },
                    "source-position": {
                        "@filename": "gdk/gdkmain.h",
                        "@line": "86"
                    },
                    "return-value": {
                        "@transfer-ownership": "none",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "gdk/gdkwindow.c",
                            "@line": "8639",
                            "#text": "%GDK_GRAB_SUCCESS if the grab was successful."
                        },
                        "type": {
                            "@name": "GrabStatus",
                            "@c:type": "GdkGrabStatus"
                        }
                    },
                    "parameters": {
                        "parameter": [
                            {
                                "@name": "window",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "gdk/gdkwindow.c",
                                    "@line": "8597",
                                    "#text": "the #GdkWindow which will own the grab (the grab window)."
                                },
                                "type": {
                                    "@name": "Window",
                                    "@c:type": "GdkWindow*"
                                }
                            },
                            {
                                "@name": "owner_events",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "gdk/gdkwindow.c",
                                    "@line": "8598",
                                    "#text": "if %FALSE then all pointer events are reported with respect to\n               @window and are only reported if selected by @event_mask. If %TRUE then pointer\n               events for this application are reported as normal, but pointer events outside\n               this application are reported with respect to @window and only if selected by\n               @event_mask. In either mode, unreported events are discarded."
                                },
                                "type": {
                                    "@name": "gboolean",
                                    "@c:type": "gboolean"
                                }
                            },
                            {
                                "@name": "event_mask",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "gdk/gdkwindow.c",
                                    "@line": "8603",
                                    "#text": "specifies the event mask, which is used in accordance with\n             @owner_events. Note that only pointer events (i.e. button and motion events)\n             may be selected."
                                },
                                "type": {
                                    "@name": "EventMask",
                                    "@c:type": "GdkEventMask"
                                }
                            },
                            {
                                "@name": "confine_to",
                                "@transfer-ownership": "none",
                                "@nullable": "1",
                                "@allow-none": "1",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "gdk/gdkwindow.c",
                                    "@line": "8606",
                                    "#text": "If non-%NULL, the pointer will be confined to this\n             window during the grab. If the pointer is outside @confine_to, it will\n             automatically be moved to the closest edge of @confine_to and enter\n             and leave events will be generated as necessary."
                                },
                                "type": {
                                    "@name": "Window",
                                    "@c:type": "GdkWindow*"
                                }
                            },
                            {
                                "@name": "cursor",
                                "@transfer-ownership": "none",
                                "@nullable": "1",
                                "@allow-none": "1",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "gdk/gdkwindow.c",
                                    "@line": "8610",
                                    "#text": "the cursor to display while the grab is active. If this is %NULL then\n         the normal cursors are used for @window and its descendants, and the cursor\n         for @window is used for all other windows."
                                },
                                "type": {
                                    "@name": "Cursor",
                                    "@c:type": "GdkCursor*"
                                }
                            },
                            {
                                "@name": "time_",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "gdk/gdkwindow.c",
                                    "@line": "8613",
                                    "#text": "the timestamp of the event which led to this pointer grab. This usually\n        comes from a #GdkEventButton struct, though %GDK_CURRENT_TIME can be used if\n        the time isn\u2019t known."
                                },
                                "type": {
                                    "@name": "guint32",
                                    "@c:type": "guint32"
                                }
                            }
                        ]
                    }
                },
                {
                    "@name": "pointer_is_grabbed",
                    "@c:identifier": "gdk_pointer_is_grabbed",
                    "@deprecated": "1",
                    "@deprecated-version": "3.0",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "gdk/gdkdeprecated.c",
                        "@line": "47",
                        "#text": "Returns %TRUE if the pointer on the default display is currently\ngrabbed by this application.\n\nNote that this does not take the inmplicit pointer grab on button\npresses into account."
                    },
                    "doc-deprecated": {
                        "@xml:space": "preserve",
                        "#text": "Use gdk_display_device_is_grabbed() instead."
                    },
                    "source-position": {
                        "@filename": "gdk/gdkmain.h",
                        "@line": "104"
                    },
                    "return-value": {
                        "@transfer-ownership": "none",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "gdk/gdkdeprecated.c",
                            "@line": "56",
                            "#text": "%TRUE if the pointer is currently grabbed by this application."
                        },
                        "type": {
                            "@name": "gboolean",
                            "@c:type": "gboolean"
                        }
                    }
                },
                {
                    "@name": "pointer_ungrab",
                    "@c:identifier": "gdk_pointer_ungrab",
                    "@deprecated": "1",
                    "@deprecated-version": "3.0",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "gdk/gdkdeprecated.c",
                        "@line": "30",
                        "#text": "Ungrabs the pointer on the default display, if it is grabbed by this\napplication."
                    },
                    "doc-deprecated": {
                        "@xml:space": "preserve",
                        "#text": "Use gdk_device_ungrab(), together with gdk_device_grab()\n            instead."
                    },
                    "source-position": {
                        "@filename": "gdk/gdkmain.h",
                        "@line": "100"
                    },
                    "return-value": {
                        "@transfer-ownership": "none",
                        "type": {
                            "@name": "none",
                            "@c:type": "void"
                        }
                    },
                    "parameters": {
                        "parameter": {
                            "@name": "time_",
                            "@transfer-ownership": "none",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkdeprecated.c",
                                "@line": "32",
                                "#text": "a timestamp from a #GdkEvent, or %GDK_CURRENT_TIME if no\n timestamp is available."
                            },
                            "type": {
                                "@name": "guint32",
                                "@c:type": "guint32"
                            }
                        }
                    }
                },
                {
                    "@name": "pre_parse_libgtk_only",
                    "@c:identifier": "gdk_pre_parse_libgtk_only",
                    "@deprecated": "1",
                    "@deprecated-version": "3.16",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "gdk/gdk.c",
                        "@line": "343",
                        "#text": "Prepare for parsing command line arguments for GDK. This is not\npublic API and should not be used in application code."
                    },
                    "doc-deprecated": {
                        "@xml:space": "preserve",
                        "#text": "This symbol was never meant to be used outside\n  of GTK+"
                    },
                    "source-position": {
                        "@filename": "gdk/gdkmain.h",
                        "@line": "55"
                    },
                    "return-value": {
                        "@transfer-ownership": "none",
                        "type": {
                            "@name": "none",
                            "@c:type": "void"
                        }
                    }
                },
                {
                    "@name": "property_change",
                    "@c:identifier": "gdk_property_change",
                    "@introspectable": "0",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "gdk/gdkwindow.c",
                        "@line": "11646",
                        "#text": "Changes the contents of a property on a window."
                    },
                    "source-position": {
                        "@filename": "gdk/gdkproperty.h",
                        "@line": "76"
                    },
                    "return-value": {
                        "@transfer-ownership": "none",
                        "type": {
                            "@name": "none",
                            "@c:type": "void"
                        }
                    },
                    "parameters": {
                        "parameter": [
                            {
                                "@name": "window",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "gdk/gdkwindow.c",
                                    "@line": "11648",
                                    "#text": "a #GdkWindow"
                                },
                                "type": {
                                    "@name": "Window",
                                    "@c:type": "GdkWindow*"
                                }
                            },
                            {
                                "@name": "property",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "gdk/gdkwindow.c",
                                    "@line": "11649",
                                    "#text": "the property to change"
                                },
                                "type": {
                                    "@name": "Atom",
                                    "@c:type": "GdkAtom"
                                }
                            },
                            {
                                "@name": "type",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "gdk/gdkwindow.c",
                                    "@line": "11650",
                                    "#text": "the new type for the property. If @mode is\n  %GDK_PROP_MODE_PREPEND or %GDK_PROP_MODE_APPEND, then this\n  must match the existing type or an error will occur."
                                },
                                "type": {
                                    "@name": "Atom",
                                    "@c:type": "GdkAtom"
                                }
                            },
                            {
                                "@name": "format",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "gdk/gdkwindow.c",
                                    "@line": "11653",
                                    "#text": "the new format for the property. If @mode is\n  %GDK_PROP_MODE_PREPEND or %GDK_PROP_MODE_APPEND, then this\n  must match the existing format or an error will occur."
                                },
                                "type": {
                                    "@name": "gint",
                                    "@c:type": "gint"
                                }
                            },
                            {
                                "@name": "mode",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "gdk/gdkwindow.c",
                                    "@line": "11656",
                                    "#text": "a value describing how the new data is to be combined\n  with the current data."
                                },
                                "type": {
                                    "@name": "PropMode",
                                    "@c:type": "GdkPropMode"
                                }
                            },
                            {
                                "@name": "data",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "gdk/gdkwindow.c",
                                    "@line": "11658",
                                    "#text": "the data (a `guchar *`\n  `gushort *`, or `gulong *`,\n  depending on @format), cast to a `guchar *`."
                                },
                                "type": {
                                    "@name": "guint8",
                                    "@c:type": "const guchar*"
                                }
                            },
                            {
                                "@name": "nelements",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "gdk/gdkwindow.c",
                                    "@line": "11661",
                                    "#text": "the number of elements of size determined by the format,\n  contained in @data."
                                },
                                "type": {
                                    "@name": "gint",
                                    "@c:type": "gint"
                                }
                            }
                        ]
                    }
                },
                {
                    "@name": "property_delete",
                    "@c:identifier": "gdk_property_delete",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "gdk/gdkwindow.c",
                        "@line": "11679",
                        "#text": "Deletes a property from a window."
                    },
                    "source-position": {
                        "@filename": "gdk/gdkproperty.h",
                        "@line": "84"
                    },
                    "return-value": {
                        "@transfer-ownership": "none",
                        "type": {
                            "@name": "none",
                            "@c:type": "void"
                        }
                    },
                    "parameters": {
                        "parameter": [
                            {
                                "@name": "window",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "gdk/gdkwindow.c",
                                    "@line": "11681",
                                    "#text": "a #GdkWindow"
                                },
                                "type": {
                                    "@name": "Window",
                                    "@c:type": "GdkWindow*"
                                }
                            },
                            {
                                "@name": "property",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "gdk/gdkwindow.c",
                                    "@line": "11682",
                                    "#text": "the property to delete"
                                },
                                "type": {
                                    "@name": "Atom",
                                    "@c:type": "GdkAtom"
                                }
                            }
                        ]
                    }
                },
                {
                    "@name": "property_get",
                    "@c:identifier": "gdk_property_get",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "gdk/gdkwindow.c",
                        "@line": "11580",
                        "#text": "Retrieves a portion of the contents of a property. If the\nproperty does not exist, then the function returns %FALSE,\nand %GDK_NONE will be stored in @actual_property_type.\n\nThe XGetWindowProperty() function that gdk_property_get()\nuses has a very confusing and complicated set of semantics.\nUnfortunately, gdk_property_get() makes the situation\nworse instead of better (the semantics should be considered\nundefined), and also prints warnings to stderr in cases where it\nshould return a useful error to the program. You are advised to use\nXGetWindowProperty() directly until a replacement function for\ngdk_property_get() is provided."
                    },
                    "source-position": {
                        "@filename": "gdk/gdkproperty.h",
                        "@line": "65"
                    },
                    "return-value": {
                        "@transfer-ownership": "none",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "gdk/gdkwindow.c",
                            "@line": "11625",
                            "#text": "%TRUE if data was successfully received and stored\n  in @data, otherwise %FALSE."
                        },
                        "type": {
                            "@name": "gboolean",
                            "@c:type": "gboolean"
                        }
                    },
                    "parameters": {
                        "parameter": [
                            {
                                "@name": "window",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "gdk/gdkwindow.c",
                                    "@line": "11582",
                                    "#text": "a #GdkWindow"
                                },
                                "type": {
                                    "@name": "Window",
                                    "@c:type": "GdkWindow*"
                                }
                            },
                            {
                                "@name": "property",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "gdk/gdkwindow.c",
                                    "@line": "11583",
                                    "#text": "the property to retrieve"
                                },
                                "type": {
                                    "@name": "Atom",
                                    "@c:type": "GdkAtom"
                                }
                            },
                            {
                                "@name": "type",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "gdk/gdkwindow.c",
                                    "@line": "11584",
                                    "#text": "the desired property type, or %GDK_NONE, if any type of data\n  is acceptable. If this does not match the actual\n  type, then @actual_format and @actual_length will\n  be filled in, a warning will be printed to stderr\n  and no data will be returned."
                                },
                                "type": {
                                    "@name": "Atom",
                                    "@c:type": "GdkAtom"
                                }
                            },
                            {
                                "@name": "offset",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "gdk/gdkwindow.c",
                                    "@line": "11589",
                                    "#text": "the offset into the property at which to begin\n  retrieving data, in 4 byte units."
                                },
                                "type": {
                                    "@name": "gulong",
                                    "@c:type": "gulong"
                                }
                            },
                            {
                                "@name": "length",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "gdk/gdkwindow.c",
                                    "@line": "11591",
                                    "#text": "the length of the data to retrieve in bytes.  Data is\n  considered to be retrieved in 4 byte chunks, so @length\n  will be rounded up to the next highest 4 byte boundary\n  (so be careful not to pass a value that might overflow\n  when rounded up)."
                                },
                                "type": {
                                    "@name": "gulong",
                                    "@c:type": "gulong"
                                }
                            },
                            {
                                "@name": "pdelete",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "gdk/gdkwindow.c",
                                    "@line": "11596",
                                    "#text": "if %TRUE, delete the property after retrieving the\n  data."
                                },
                                "type": {
                                    "@name": "gint",
                                    "@c:type": "gint"
                                }
                            },
                            {
                                "@name": "actual_property_type",
                                "@direction": "out",
                                "@caller-allocates": "1",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "gdk/gdkwindow.c",
                                    "@line": "11598",
                                    "#text": "location to store the\n  actual type of the property."
                                },
                                "type": {
                                    "@name": "Atom",
                                    "@c:type": "GdkAtom*"
                                }
                            },
                            {
                                "@name": "actual_format",
                                "@direction": "out",
                                "@caller-allocates": "0",
                                "@transfer-ownership": "full",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "gdk/gdkwindow.c",
                                    "@line": "11600",
                                    "#text": "location to store the actual return format of the\n  data; either 8, 16 or 32 bits."
                                },
                                "type": {
                                    "@name": "gint",
                                    "@c:type": "gint*"
                                }
                            },
                            {
                                "@name": "actual_length",
                                "@direction": "out",
                                "@caller-allocates": "0",
                                "@transfer-ownership": "full",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "gdk/gdkwindow.c",
                                    "@line": "11602",
                                    "#text": "location to store the length of the retrieved data, in\n  bytes.  Data returned in the 32 bit format is stored\n  in a long variable, so the actual number of 32 bit\n  elements should be be calculated via\n  @actual_length / sizeof(glong) to ensure portability to\n  64 bit systems."
                                },
                                "type": {
                                    "@name": "gint",
                                    "@c:type": "gint*"
                                }
                            },
                            {
                                "@name": "data",
                                "@direction": "out",
                                "@caller-allocates": "0",
                                "@transfer-ownership": "full",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "gdk/gdkwindow.c",
                                    "@line": "11608",
                                    "#text": "location\n  to store a pointer to the data. The retrieved data should be\n  freed with g_free() when you are finished using it."
                                },
                                "array": {
                                    "@length": "8",
                                    "@zero-terminated": "0",
                                    "@c:type": "guchar**",
                                    "type": {
                                        "@name": "guint8",
                                        "@c:type": "guchar*"
                                    }
                                }
                            }
                        ]
                    }
                },
                {
                    "@name": "query_depths",
                    "@c:identifier": "gdk_query_depths",
                    "@deprecated": "1",
                    "@deprecated-version": "3.22",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "gdk/gdkvisual.c",
                        "@line": "242",
                        "#text": "This function returns the available bit depths for the default\nscreen. It\u2019s equivalent to listing the visuals\n(gdk_list_visuals()) and then looking at the depth field in each\nvisual, removing duplicates.\n\nThe array returned by this function should not be freed."
                    },
                    "doc-deprecated": {
                        "@xml:space": "preserve",
                        "#text": "Visual selection should be done using\n    gdk_screen_get_system_visual() and gdk_screen_get_rgba_visual()"
                    },
                    "source-position": {
                        "@filename": "gdk/gdkvisual.h",
                        "@line": "102"
                    },
                    "return-value": {
                        "@transfer-ownership": "none",
                        "type": {
                            "@name": "none",
                            "@c:type": "void"
                        }
                    },
                    "parameters": {
                        "parameter": [
                            {
                                "@name": "depths",
                                "@direction": "out",
                                "@caller-allocates": "0",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "gdk/gdkvisual.c",
                                    "@line": "244",
                                    "#text": "return\n    location for available depths"
                                },
                                "array": {
                                    "@length": "1",
                                    "@zero-terminated": "0",
                                    "@c:type": "gint**",
                                    "type": {
                                        "@name": "gint",
                                        "@c:type": "gint*"
                                    }
                                }
                            },
                            {
                                "@name": "count",
                                "@direction": "out",
                                "@caller-allocates": "0",
                                "@transfer-ownership": "full",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "gdk/gdkvisual.c",
                                    "@line": "246",
                                    "#text": "return location for number of available depths"
                                },
                                "type": {
                                    "@name": "gint",
                                    "@c:type": "gint*"
                                }
                            }
                        ]
                    }
                },
                {
                    "@name": "query_visual_types",
                    "@c:identifier": "gdk_query_visual_types",
                    "@deprecated": "1",
                    "@deprecated-version": "3.22",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "gdk/gdkvisual.c",
                        "@line": "267",
                        "#text": "This function returns the available visual types for the default\nscreen. It\u2019s equivalent to listing the visuals\n(gdk_list_visuals()) and then looking at the type field in each\nvisual, removing duplicates.\n\nThe array returned by this function should not be freed."
                    },
                    "doc-deprecated": {
                        "@xml:space": "preserve",
                        "#text": "Visual selection should be done using\n    gdk_screen_get_system_visual() and gdk_screen_get_rgba_visual()"
                    },
                    "source-position": {
                        "@filename": "gdk/gdkvisual.h",
                        "@line": "105"
                    },
                    "return-value": {
                        "@transfer-ownership": "none",
                        "type": {
                            "@name": "none",
                            "@c:type": "void"
                        }
                    },
                    "parameters": {
                        "parameter": [
                            {
                                "@name": "visual_types",
                                "@direction": "out",
                                "@caller-allocates": "0",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "gdk/gdkvisual.c",
                                    "@line": "269",
                                    "#text": "return\n    location for the available visual types"
                                },
                                "array": {
                                    "@length": "1",
                                    "@zero-terminated": "0",
                                    "@c:type": "GdkVisualType**",
                                    "type": {
                                        "@name": "VisualType",
                                        "@c:type": "GdkVisualType*"
                                    }
                                }
                            },
                            {
                                "@name": "count",
                                "@direction": "out",
                                "@caller-allocates": "0",
                                "@transfer-ownership": "full",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "gdk/gdkvisual.c",
                                    "@line": "271",
                                    "#text": "return location for the number of available visual types"
                                },
                                "type": {
                                    "@name": "gint",
                                    "@c:type": "gint*"
                                }
                            }
                        ]
                    }
                },
                {
                    "@name": "selection_convert",
                    "@c:identifier": "gdk_selection_convert",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "gdk/gdkselection.h",
                        "@line": "172",
                        "#text": "Retrieves the contents of a selection in a given\nform."
                    },
                    "source-position": {
                        "@filename": "gdk/gdkselection.h",
                        "@line": "187"
                    },
                    "return-value": {
                        "@transfer-ownership": "none",
                        "type": {
                            "@name": "none",
                            "@c:type": "void"
                        }
                    },
                    "parameters": {
                        "parameter": [
                            {
                                "@name": "requestor",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "gdk/gdkselection.h",
                                    "@line": "174",
                                    "#text": "a #GdkWindow."
                                },
                                "type": {
                                    "@name": "Window",
                                    "@c:type": "GdkWindow*"
                                }
                            },
                            {
                                "@name": "selection",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "gdk/gdkselection.h",
                                    "@line": "175",
                                    "#text": "an atom identifying the selection to get the\n  contents of."
                                },
                                "type": {
                                    "@name": "Atom",
                                    "@c:type": "GdkAtom"
                                }
                            },
                            {
                                "@name": "target",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "gdk/gdkselection.h",
                                    "@line": "177",
                                    "#text": "the form in which to retrieve the selection."
                                },
                                "type": {
                                    "@name": "Atom",
                                    "@c:type": "GdkAtom"
                                }
                            },
                            {
                                "@name": "time_",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "gdk/gdkselection.h",
                                    "@line": "178",
                                    "#text": "the timestamp to use when retrieving the\n  selection. The selection owner may refuse the\n  request if it did not own the selection at\n  the time indicated by the timestamp."
                                },
                                "type": {
                                    "@name": "guint32",
                                    "@c:type": "guint32"
                                }
                            }
                        ]
                    }
                },
                {
                    "@name": "selection_owner_get",
                    "@c:identifier": "gdk_selection_owner_get",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "gdk/gdkselection.c",
                        "@line": "98",
                        "#text": "Determines the owner of the given selection."
                    },
                    "source-position": {
                        "@filename": "gdk/gdkselection.h",
                        "@line": "161"
                    },
                    "return-value": {
                        "@transfer-ownership": "none",
                        "@nullable": "1",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "gdk/gdkselection.c",
                            "@line": "104",
                            "#text": "if there is a selection owner\n  for this window, and it is a window known to the current process,\n  the #GdkWindow that owns the selection, otherwise %NULL. Note\n  that the return value may be owned by a different process if a\n  foreign window was previously created for that window, but a new\n  foreign window will never be created by this call."
                        },
                        "type": {
                            "@name": "Window",
                            "@c:type": "GdkWindow*"
                        }
                    },
                    "parameters": {
                        "parameter": {
                            "@name": "selection",
                            "@transfer-ownership": "none",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkselection.c",
                                "@line": "100",
                                "#text": "an atom indentifying a selection."
                            },
                            "type": {
                                "@name": "Atom",
                                "@c:type": "GdkAtom"
                            }
                        }
                    }
                },
                {
                    "@name": "selection_owner_get_for_display",
                    "@c:identifier": "gdk_selection_owner_get_for_display",
                    "@version": "2.2",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "gdk/gdkselection.c",
                        "@line": "175",
                        "#text": "Determine the owner of the given selection.\n\nNote that the return value may be owned by a different\nprocess if a foreign window was previously created for that\nwindow, but a new foreign window will never be created by this call."
                    },
                    "source-position": {
                        "@filename": "gdk/gdkselection.h",
                        "@line": "169"
                    },
                    "return-value": {
                        "@transfer-ownership": "none",
                        "@nullable": "1",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "gdk/gdkselection.c",
                            "@line": "186",
                            "#text": "if there is a selection owner\n   for this window, and it is a window known to the current\n   process, the #GdkWindow that owns the selection, otherwise\n   %NULL."
                        },
                        "type": {
                            "@name": "Window",
                            "@c:type": "GdkWindow*"
                        }
                    },
                    "parameters": {
                        "parameter": [
                            {
                                "@name": "display",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "gdk/gdkselection.c",
                                    "@line": "177",
                                    "#text": "a #GdkDisplay"
                                },
                                "type": {
                                    "@name": "Display",
                                    "@c:type": "GdkDisplay*"
                                }
                            },
                            {
                                "@name": "selection",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "gdk/gdkselection.c",
                                    "@line": "178",
                                    "#text": "an atom indentifying a selection"
                                },
                                "type": {
                                    "@name": "Atom",
                                    "@c:type": "GdkAtom"
                                }
                            }
                        ]
                    }
                },
                {
                    "@name": "selection_owner_set",
                    "@c:identifier": "gdk_selection_owner_set",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "gdk/gdkselection.c",
                        "@line": "69",
                        "#text": "Sets the owner of the given selection."
                    },
                    "source-position": {
                        "@filename": "gdk/gdkselection.h",
                        "@line": "156"
                    },
                    "return-value": {
                        "@transfer-ownership": "none",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "gdk/gdkselection.c",
                            "@line": "84",
                            "#text": "%TRUE if the selection owner was successfully\n  changed to @owner, otherwise %FALSE."
                        },
                        "type": {
                            "@name": "gboolean",
                            "@c:type": "gboolean"
                        }
                    },
                    "parameters": {
                        "parameter": [
                            {
                                "@name": "owner",
                                "@transfer-ownership": "none",
                                "@nullable": "1",
                                "@allow-none": "1",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "gdk/gdkselection.c",
                                    "@line": "71",
                                    "#text": "a #GdkWindow or %NULL to indicate that the\n  the owner for the given should be unset."
                                },
                                "type": {
                                    "@name": "Window",
                                    "@c:type": "GdkWindow*"
                                }
                            },
                            {
                                "@name": "selection",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "gdk/gdkselection.c",
                                    "@line": "73",
                                    "#text": "an atom identifying a selection."
                                },
                                "type": {
                                    "@name": "Atom",
                                    "@c:type": "GdkAtom"
                                }
                            },
                            {
                                "@name": "time_",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "gdk/gdkselection.c",
                                    "@line": "74",
                                    "#text": "timestamp to use when setting the selection.\n  If this is older than the timestamp given last\n  time the owner was set for the given selection, the\n  request will be ignored."
                                },
                                "type": {
                                    "@name": "guint32",
                                    "@c:type": "guint32"
                                }
                            },
                            {
                                "@name": "send_event",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "gdk/gdkselection.c",
                                    "@line": "78",
                                    "#text": "if %TRUE, and the new owner is different\n  from the current owner, the current owner\n  will be sent a SelectionClear event."
                                },
                                "type": {
                                    "@name": "gboolean",
                                    "@c:type": "gboolean"
                                }
                            }
                        ]
                    }
                },
                {
                    "@name": "selection_owner_set_for_display",
                    "@c:identifier": "gdk_selection_owner_set_for_display",
                    "@version": "2.2",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "gdk/gdkselection.c",
                        "@line": "142",
                        "#text": "Sets the #GdkWindow @owner as the current owner of the selection @selection."
                    },
                    "source-position": {
                        "@filename": "gdk/gdkselection.h",
                        "@line": "163"
                    },
                    "return-value": {
                        "@transfer-ownership": "none",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "gdk/gdkselection.c",
                            "@line": "156",
                            "#text": "%TRUE if the selection owner was successfully changed to owner,\n   otherwise %FALSE."
                        },
                        "type": {
                            "@name": "gboolean",
                            "@c:type": "gboolean"
                        }
                    },
                    "parameters": {
                        "parameter": [
                            {
                                "@name": "display",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "gdk/gdkselection.c",
                                    "@line": "144",
                                    "#text": "the #GdkDisplay"
                                },
                                "type": {
                                    "@name": "Display",
                                    "@c:type": "GdkDisplay*"
                                }
                            },
                            {
                                "@name": "owner",
                                "@transfer-ownership": "none",
                                "@nullable": "1",
                                "@allow-none": "1",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "gdk/gdkselection.c",
                                    "@line": "145",
                                    "#text": "a #GdkWindow or %NULL to indicate that the owner for\n        the given should be unset"
                                },
                                "type": {
                                    "@name": "Window",
                                    "@c:type": "GdkWindow*"
                                }
                            },
                            {
                                "@name": "selection",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "gdk/gdkselection.c",
                                    "@line": "147",
                                    "#text": "an atom identifying a selection"
                                },
                                "type": {
                                    "@name": "Atom",
                                    "@c:type": "GdkAtom"
                                }
                            },
                            {
                                "@name": "time_",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "gdk/gdkselection.c",
                                    "@line": "148",
                                    "#text": "timestamp to use when setting the selection\n        If this is older than the timestamp given last time the owner was\n        set for the given selection, the request will be ignored"
                                },
                                "type": {
                                    "@name": "guint32",
                                    "@c:type": "guint32"
                                }
                            },
                            {
                                "@name": "send_event",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "gdk/gdkselection.c",
                                    "@line": "151",
                                    "#text": "if %TRUE, and the new owner is different from the current\n             owner, the current owner will be sent a SelectionClear event"
                                },
                                "type": {
                                    "@name": "gboolean",
                                    "@c:type": "gboolean"
                                }
                            }
                        ]
                    }
                },
                {
                    "@name": "selection_property_get",
                    "@c:identifier": "gdk_selection_property_get",
                    "@introspectable": "0",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "gdk/gdkselection.c",
                        "@line": "231",
                        "#text": "Retrieves selection data that was stored by the selection\ndata in response to a call to gdk_selection_convert(). This function\nwill not be used by applications, who should use the #GtkClipboard\nAPI instead."
                    },
                    "source-position": {
                        "@filename": "gdk/gdkselection.h",
                        "@line": "192"
                    },
                    "return-value": {
                        "@transfer-ownership": "none",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "gdk/gdkselection.c",
                            "@line": "249",
                            "#text": "the length of the retrieved data."
                        },
                        "type": {
                            "@name": "gint",
                            "@c:type": "gint"
                        }
                    },
                    "parameters": {
                        "parameter": [
                            {
                                "@name": "requestor",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "gdk/gdkselection.c",
                                    "@line": "233",
                                    "#text": "the window on which the data is stored"
                                },
                                "type": {
                                    "@name": "Window",
                                    "@c:type": "GdkWindow*"
                                }
                            },
                            {
                                "@name": "data",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "gdk/gdkselection.c",
                                    "@line": "234",
                                    "#text": "location to store a pointer to the retrieved data.\n       If the retrieval failed, %NULL we be stored here, otherwise, it\n       will be non-%NULL and the returned data should be freed with g_free()\n       when you are finished using it. The length of the\n       allocated memory is one more than the length\n       of the returned data, and the final byte will always\n       be zero, to ensure nul-termination of strings"
                                },
                                "type": {
                                    "@name": "guint8",
                                    "@c:type": "guchar**"
                                }
                            },
                            {
                                "@name": "prop_type",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "gdk/gdkselection.c",
                                    "@line": "241",
                                    "#text": "location to store the type of the property"
                                },
                                "type": {
                                    "@name": "Atom",
                                    "@c:type": "GdkAtom*"
                                }
                            },
                            {
                                "@name": "prop_format",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "gdk/gdkselection.c",
                                    "@line": "242",
                                    "#text": "location to store the format of the property"
                                },
                                "type": {
                                    "@name": "gint",
                                    "@c:type": "gint*"
                                }
                            }
                        ]
                    }
                },
                {
                    "@name": "selection_send_notify",
                    "@c:identifier": "gdk_selection_send_notify",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "gdk/gdkselection.c",
                        "@line": "118",
                        "#text": "Sends a response to SelectionRequest event."
                    },
                    "source-position": {
                        "@filename": "gdk/gdkselection.h",
                        "@line": "198"
                    },
                    "return-value": {
                        "@transfer-ownership": "none",
                        "type": {
                            "@name": "none",
                            "@c:type": "void"
                        }
                    },
                    "parameters": {
                        "parameter": [
                            {
                                "@name": "requestor",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "gdk/gdkselection.c",
                                    "@line": "120",
                                    "#text": "window to which to deliver response."
                                },
                                "type": {
                                    "@name": "Window",
                                    "@c:type": "GdkWindow*"
                                }
                            },
                            {
                                "@name": "selection",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "gdk/gdkselection.c",
                                    "@line": "121",
                                    "#text": "selection that was requested."
                                },
                                "type": {
                                    "@name": "Atom",
                                    "@c:type": "GdkAtom"
                                }
                            },
                            {
                                "@name": "target",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "gdk/gdkselection.c",
                                    "@line": "122",
                                    "#text": "target that was selected."
                                },
                                "type": {
                                    "@name": "Atom",
                                    "@c:type": "GdkAtom"
                                }
                            },
                            {
                                "@name": "property",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "gdk/gdkselection.c",
                                    "@line": "123",
                                    "#text": "property in which the selection owner stored the\n  data, or %GDK_NONE to indicate that the request\n  was rejected."
                                },
                                "type": {
                                    "@name": "Atom",
                                    "@c:type": "GdkAtom"
                                }
                            },
                            {
                                "@name": "time_",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "gdk/gdkselection.c",
                                    "@line": "126",
                                    "#text": "timestamp."
                                },
                                "type": {
                                    "@name": "guint32",
                                    "@c:type": "guint32"
                                }
                            }
                        ]
                    }
                },
                {
                    "@name": "selection_send_notify_for_display",
                    "@c:identifier": "gdk_selection_send_notify_for_display",
                    "@version": "2.2",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "gdk/gdkselection.c",
                        "@line": "203",
                        "#text": "Send a response to SelectionRequest event."
                    },
                    "source-position": {
                        "@filename": "gdk/gdkselection.h",
                        "@line": "205"
                    },
                    "return-value": {
                        "@transfer-ownership": "none",
                        "type": {
                            "@name": "none",
                            "@c:type": "void"
                        }
                    },
                    "parameters": {
                        "parameter": [
                            {
                                "@name": "display",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "gdk/gdkselection.c",
                                    "@line": "205",
                                    "#text": "the #GdkDisplay where @requestor is realized"
                                },
                                "type": {
                                    "@name": "Display",
                                    "@c:type": "GdkDisplay*"
                                }
                            },
                            {
                                "@name": "requestor",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "gdk/gdkselection.c",
                                    "@line": "206",
                                    "#text": "window to which to deliver response"
                                },
                                "type": {
                                    "@name": "Window",
                                    "@c:type": "GdkWindow*"
                                }
                            },
                            {
                                "@name": "selection",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "gdk/gdkselection.c",
                                    "@line": "207",
                                    "#text": "selection that was requested"
                                },
                                "type": {
                                    "@name": "Atom",
                                    "@c:type": "GdkAtom"
                                }
                            },
                            {
                                "@name": "target",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "gdk/gdkselection.c",
                                    "@line": "208",
                                    "#text": "target that was selected"
                                },
                                "type": {
                                    "@name": "Atom",
                                    "@c:type": "GdkAtom"
                                }
                            },
                            {
                                "@name": "property",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "gdk/gdkselection.c",
                                    "@line": "209",
                                    "#text": "property in which the selection owner stored the data,\n           or %GDK_NONE to indicate that the request was rejected"
                                },
                                "type": {
                                    "@name": "Atom",
                                    "@c:type": "GdkAtom"
                                }
                            },
                            {
                                "@name": "time_",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "gdk/gdkselection.c",
                                    "@line": "211",
                                    "#text": "timestamp"
                                },
                                "type": {
                                    "@name": "guint32",
                                    "@c:type": "guint32"
                                }
                            }
                        ]
                    }
                },
                {
                    "@name": "set_allowed_backends",
                    "@c:identifier": "gdk_set_allowed_backends",
                    "@version": "3.10",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "gdk/gdkdisplaymanager.c",
                        "@line": "212",
                        "#text": "Sets a list of backends that GDK should try to use.\n\nThis can be be useful if your application does not\nwork with certain GDK backends.\n\nBy default, GDK tries all included backends.\n\nFor example,\n|[<!-- language=\"C\" -->\ngdk_set_allowed_backends (\"wayland,quartz,*\");\n]|\ninstructs GDK to try the Wayland backend first,\nfollowed by the Quartz backend, and then all\nothers.\n\nIf the `GDK_BACKEND` environment variable\nis set, it determines what backends are tried in what\norder, while still respecting the set of allowed backends\nthat are specified by this function.\n\nThe possible backend names are x11, win32, quartz,\nbroadway, wayland. You can also include a * in the\nlist to try all remaining backends.\n\nThis call must happen prior to gdk_display_open(),\ngtk_init(), gtk_init_with_args() or gtk_init_check()\nin order to take effect."
                    },
                    "source-position": {
                        "@filename": "gdk/gdkmain.h",
                        "@line": "130"
                    },
                    "return-value": {
                        "@transfer-ownership": "none",
                        "type": {
                            "@name": "none",
                            "@c:type": "void"
                        }
                    },
                    "parameters": {
                        "parameter": {
                            "@name": "backends",
                            "@transfer-ownership": "none",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkdisplaymanager.c",
                                "@line": "214",
                                "#text": "a comma-separated list of backends"
                            },
                            "type": {
                                "@name": "utf8",
                                "@c:type": "const gchar*"
                            }
                        }
                    }
                },
                {
                    "@name": "set_double_click_time",
                    "@c:identifier": "gdk_set_double_click_time",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "gdk/gdkevents.c",
                        "@line": "2356",
                        "#text": "Set the double click time for the default display. See\ngdk_display_set_double_click_time().\nSee also gdk_display_set_double_click_distance().\nApplications should not set this, it is a\nglobal user-configured setting."
                    },
                    "source-position": {
                        "@filename": "gdk/gdkmain.h",
                        "@line": "118"
                    },
                    "return-value": {
                        "@transfer-ownership": "none",
                        "type": {
                            "@name": "none",
                            "@c:type": "void"
                        }
                    },
                    "parameters": {
                        "parameter": {
                            "@name": "msec",
                            "@transfer-ownership": "none",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkevents.c",
                                "@line": "2358",
                                "#text": "double click time in milliseconds (thousandths of a second)"
                            },
                            "type": {
                                "@name": "guint",
                                "@c:type": "guint"
                            }
                        }
                    }
                },
                {
                    "@name": "set_program_class",
                    "@c:identifier": "gdk_set_program_class",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "gdk/gdk.c",
                        "@line": "1073",
                        "#text": "Sets the program class. The X11 backend uses the program class to set\nthe class name part of the `WM_CLASS` property on\ntoplevel windows; see the ICCCM.\n\nThe program class can still be overridden with the --class command\nline option."
                    },
                    "source-position": {
                        "@filename": "gdk/gdkmain.h",
                        "@line": "60"
                    },
                    "return-value": {
                        "@transfer-ownership": "none",
                        "type": {
                            "@name": "none",
                            "@c:type": "void"
                        }
                    },
                    "parameters": {
                        "parameter": {
                            "@name": "program_class",
                            "@transfer-ownership": "none",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdk.c",
                                "@line": "1075",
                                "#text": "a string."
                            },
                            "type": {
                                "@name": "utf8",
                                "@c:type": "const gchar*"
                            }
                        }
                    }
                },
                {
                    "@name": "set_show_events",
                    "@c:identifier": "gdk_set_show_events",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "gdk/gdkevents.c",
                        "@line": "2125",
                        "#text": "Sets whether a trace of received events is output.\nNote that GTK+ must be compiled with debugging (that is,\nconfigured using the `--enable-debug` option)\nto use this option."
                    },
                    "source-position": {
                        "@filename": "gdk/gdkevents.h",
                        "@line": "1562"
                    },
                    "return-value": {
                        "@transfer-ownership": "none",
                        "type": {
                            "@name": "none",
                            "@c:type": "void"
                        }
                    },
                    "parameters": {
                        "parameter": {
                            "@name": "show_events",
                            "@transfer-ownership": "none",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkevents.c",
                                "@line": "2127",
                                "#text": "%TRUE to output event debugging information."
                            },
                            "type": {
                                "@name": "gboolean",
                                "@c:type": "gboolean"
                            }
                        }
                    }
                },
                {
                    "@name": "setting_get",
                    "@c:identifier": "gdk_setting_get",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "gdk/gdkevents.c",
                        "@line": "2412",
                        "#text": "Obtains a desktop-wide setting, such as the double-click time,\nfor the default screen. See gdk_screen_get_setting()."
                    },
                    "source-position": {
                        "@filename": "gdk/gdkevents.h",
                        "@line": "1567"
                    },
                    "return-value": {
                        "@transfer-ownership": "none",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "gdk/gdkevents.c",
                            "@line": "2420",
                            "#text": "%TRUE if the setting existed and a value was stored\n  in @value, %FALSE otherwise."
                        },
                        "type": {
                            "@name": "gboolean",
                            "@c:type": "gboolean"
                        }
                    },
                    "parameters": {
                        "parameter": [
                            {
                                "@name": "name",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "gdk/gdkevents.c",
                                    "@line": "2414",
                                    "#text": "the name of the setting."
                                },
                                "type": {
                                    "@name": "utf8",
                                    "@c:type": "const gchar*"
                                }
                            },
                            {
                                "@name": "value",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "gdk/gdkevents.c",
                                    "@line": "2415",
                                    "#text": "location to store the value of the setting."
                                },
                                "type": {
                                    "@name": "GObject.Value",
                                    "@c:type": "GValue*"
                                }
                            }
                        ]
                    }
                },
                {
                    "@name": "synthesize_window_state",
                    "@c:identifier": "gdk_synthesize_window_state",
                    "source-position": {
                        "@filename": "gdk/gdkprivate.h",
                        "@line": "38"
                    },
                    "return-value": {
                        "@transfer-ownership": "none",
                        "type": {
                            "@name": "none",
                            "@c:type": "void"
                        }
                    },
                    "parameters": {
                        "parameter": [
                            {
                                "@name": "window",
                                "@transfer-ownership": "none",
                                "type": {
                                    "@name": "Window",
                                    "@c:type": "GdkWindow*"
                                }
                            },
                            {
                                "@name": "unset_flags",
                                "@transfer-ownership": "none",
                                "type": {
                                    "@name": "WindowState",
                                    "@c:type": "GdkWindowState"
                                }
                            },
                            {
                                "@name": "set_flags",
                                "@transfer-ownership": "none",
                                "type": {
                                    "@name": "WindowState",
                                    "@c:type": "GdkWindowState"
                                }
                            }
                        ]
                    }
                },
                {
                    "@name": "test_render_sync",
                    "@c:identifier": "gdk_test_render_sync",
                    "@version": "2.14",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "gdk/gdkwindow.c",
                        "@line": "11480",
                        "#text": "Retrieves a pixel from @window to force the windowing\nsystem to carry out any pending rendering commands.\n\nThis function is intended to be used to synchronize with rendering\npipelines, to benchmark windowing system rendering operations."
                    },
                    "source-position": {
                        "@filename": "gdk/gdktestutils.h",
                        "@line": "43"
                    },
                    "return-value": {
                        "@transfer-ownership": "none",
                        "type": {
                            "@name": "none",
                            "@c:type": "void"
                        }
                    },
                    "parameters": {
                        "parameter": {
                            "@name": "window",
                            "@transfer-ownership": "none",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkwindow.c",
                                "@line": "11482",
                                "#text": "a mapped #GdkWindow"
                            },
                            "type": {
                                "@name": "Window",
                                "@c:type": "GdkWindow*"
                            }
                        }
                    }
                },
                {
                    "@name": "test_simulate_button",
                    "@c:identifier": "gdk_test_simulate_button",
                    "@version": "2.14",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "gdk/gdkwindow.c",
                        "@line": "11541",
                        "#text": "This function is intended to be used in GTK+ test programs.\nIt will warp the mouse pointer to the given (@x,@y) coordinates\nwithin @window and simulate a button press or release event.\nBecause the mouse pointer needs to be warped to the target\nlocation, use of this function outside of test programs that\nrun in their own virtual windowing system (e.g. Xvfb) is not\nrecommended.\n\nAlso, gdk_test_simulate_button() is a fairly low level function,\nfor most testing purposes, gtk_test_widget_click() is the right\nfunction to call which will generate a button press event followed\nby its accompanying button release event."
                    },
                    "source-position": {
                        "@filename": "gdk/gdktestutils.h",
                        "@line": "52"
                    },
                    "return-value": {
                        "@transfer-ownership": "none",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "gdk/gdkwindow.c",
                            "@line": "11563",
                            "#text": "whether all actions necessary for a button event simulation\n    were carried out successfully"
                        },
                        "type": {
                            "@name": "gboolean",
                            "@c:type": "gboolean"
                        }
                    },
                    "parameters": {
                        "parameter": [
                            {
                                "@name": "window",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "gdk/gdkwindow.c",
                                    "@line": "11543",
                                    "#text": "a #GdkWindow to simulate a button event for"
                                },
                                "type": {
                                    "@name": "Window",
                                    "@c:type": "GdkWindow*"
                                }
                            },
                            {
                                "@name": "x",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "gdk/gdkwindow.c",
                                    "@line": "11544",
                                    "#text": "x coordinate within @window for the button event"
                                },
                                "type": {
                                    "@name": "gint",
                                    "@c:type": "gint"
                                }
                            },
                            {
                                "@name": "y",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "gdk/gdkwindow.c",
                                    "@line": "11545",
                                    "#text": "y coordinate within @window for the button event"
                                },
                                "type": {
                                    "@name": "gint",
                                    "@c:type": "gint"
                                }
                            },
                            {
                                "@name": "button",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "gdk/gdkwindow.c",
                                    "@line": "11546",
                                    "#text": "Number of the pointer button for the event, usually 1, 2 or 3"
                                },
                                "type": {
                                    "@name": "guint",
                                    "@c:type": "guint"
                                }
                            },
                            {
                                "@name": "modifiers",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "gdk/gdkwindow.c",
                                    "@line": "11547",
                                    "#text": "Keyboard modifiers the event is setup with"
                                },
                                "type": {
                                    "@name": "ModifierType",
                                    "@c:type": "GdkModifierType"
                                }
                            },
                            {
                                "@name": "button_pressrelease",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "gdk/gdkwindow.c",
                                    "@line": "11548",
                                    "#text": "either %GDK_BUTTON_PRESS or %GDK_BUTTON_RELEASE"
                                },
                                "type": {
                                    "@name": "EventType",
                                    "@c:type": "GdkEventType"
                                }
                            }
                        ]
                    }
                },
                {
                    "@name": "test_simulate_key",
                    "@c:identifier": "gdk_test_simulate_key",
                    "@version": "2.14",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "gdk/gdkwindow.c",
                        "@line": "11498",
                        "#text": "This function is intended to be used in GTK+ test programs.\nIf (@x,@y) are > (-1,-1), it will warp the mouse pointer to\nthe given (@x,@y) coordinates within @window and simulate a\nkey press or release event.\n\nWhen the mouse pointer is warped to the target location, use\nof this function outside of test programs that run in their\nown virtual windowing system (e.g. Xvfb) is not recommended.\nIf (@x,@y) are passed as (-1,-1), the mouse pointer will not\nbe warped and @window origin will be used as mouse pointer\nlocation for the event.\n\nAlso, gdk_test_simulate_key() is a fairly low level function,\nfor most testing purposes, gtk_test_widget_send_key() is the\nright function to call which will generate a key press event\nfollowed by its accompanying key release event."
                    },
                    "source-position": {
                        "@filename": "gdk/gdktestutils.h",
                        "@line": "45"
                    },
                    "return-value": {
                        "@transfer-ownership": "none",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "gdk/gdkwindow.c",
                            "@line": "11524",
                            "#text": "whether all actions necessary for a key event simulation\n    were carried out successfully"
                        },
                        "type": {
                            "@name": "gboolean",
                            "@c:type": "gboolean"
                        }
                    },
                    "parameters": {
                        "parameter": [
                            {
                                "@name": "window",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "gdk/gdkwindow.c",
                                    "@line": "11500",
                                    "#text": "a #GdkWindow to simulate a key event for"
                                },
                                "type": {
                                    "@name": "Window",
                                    "@c:type": "GdkWindow*"
                                }
                            },
                            {
                                "@name": "x",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "gdk/gdkwindow.c",
                                    "@line": "11501",
                                    "#text": "x coordinate within @window for the key event"
                                },
                                "type": {
                                    "@name": "gint",
                                    "@c:type": "gint"
                                }
                            },
                            {
                                "@name": "y",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "gdk/gdkwindow.c",
                                    "@line": "11502",
                                    "#text": "y coordinate within @window for the key event"
                                },
                                "type": {
                                    "@name": "gint",
                                    "@c:type": "gint"
                                }
                            },
                            {
                                "@name": "keyval",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "gdk/gdkwindow.c",
                                    "@line": "11503",
                                    "#text": "A GDK keyboard value"
                                },
                                "type": {
                                    "@name": "guint",
                                    "@c:type": "guint"
                                }
                            },
                            {
                                "@name": "modifiers",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "gdk/gdkwindow.c",
                                    "@line": "11504",
                                    "#text": "Keyboard modifiers the event is setup with"
                                },
                                "type": {
                                    "@name": "ModifierType",
                                    "@c:type": "GdkModifierType"
                                }
                            },
                            {
                                "@name": "key_pressrelease",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "gdk/gdkwindow.c",
                                    "@line": "11505",
                                    "#text": "either %GDK_KEY_PRESS or %GDK_KEY_RELEASE"
                                },
                                "type": {
                                    "@name": "EventType",
                                    "@c:type": "GdkEventType"
                                }
                            }
                        ]
                    }
                },
                {
                    "@name": "text_property_to_utf8_list_for_display",
                    "@c:identifier": "gdk_text_property_to_utf8_list_for_display",
                    "@version": "2.2",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "gdk/gdkselection.c",
                        "@line": "283",
                        "#text": "Converts a text property in the given encoding to\na list of UTF-8 strings."
                    },
                    "source-position": {
                        "@filename": "gdk/gdkproperty.h",
                        "@line": "88"
                    },
                    "return-value": {
                        "@transfer-ownership": "none",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "gdk/gdkselection.c",
                            "@line": "297",
                            "#text": "the number of strings in the resulting list"
                        },
                        "type": {
                            "@name": "gint",
                            "@c:type": "gint"
                        }
                    },
                    "parameters": {
                        "parameter": [
                            {
                                "@name": "display",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "gdk/gdkselection.c",
                                    "@line": "285",
                                    "#text": "a #GdkDisplay"
                                },
                                "type": {
                                    "@name": "Display",
                                    "@c:type": "GdkDisplay*"
                                }
                            },
                            {
                                "@name": "encoding",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "gdk/gdkselection.c",
                                    "@line": "286",
                                    "#text": "an atom representing the encoding of the text"
                                },
                                "type": {
                                    "@name": "Atom",
                                    "@c:type": "GdkAtom"
                                }
                            },
                            {
                                "@name": "format",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "gdk/gdkselection.c",
                                    "@line": "287",
                                    "#text": "the format of the property"
                                },
                                "type": {
                                    "@name": "gint",
                                    "@c:type": "gint"
                                }
                            },
                            {
                                "@name": "text",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "gdk/gdkselection.c",
                                    "@line": "288",
                                    "#text": "the text to convert"
                                },
                                "array": {
                                    "@length": "4",
                                    "@zero-terminated": "0",
                                    "@c:type": "const guchar*",
                                    "type": {
                                        "@name": "guint8",
                                        "@c:type": "guchar"
                                    }
                                }
                            },
                            {
                                "@name": "length",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "gdk/gdkselection.c",
                                    "@line": "289",
                                    "#text": "the length of @text, in bytes"
                                },
                                "type": {
                                    "@name": "gint",
                                    "@c:type": "gint"
                                }
                            },
                            {
                                "@name": "list",
                                "@direction": "out",
                                "@caller-allocates": "0",
                                "@transfer-ownership": "full",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "gdk/gdkselection.c",
                                    "@line": "290",
                                    "#text": "location to store the list\n           of strings or %NULL. The list should be freed with\n           g_strfreev()."
                                },
                                "array": {
                                    "@c:type": "gchar***",
                                    "type": {
                                        "@name": "utf8",
                                        "@c:type": "gchar**"
                                    }
                                }
                            }
                        ]
                    }
                },
                {
                    "@name": "threads_add_idle",
                    "@c:identifier": "gdk_threads_add_idle",
                    "@shadowed-by": "threads_add_idle_full",
                    "@version": "2.12",
                    "@introspectable": "0",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "gdk/gdk.c",
                        "@line": "863",
                        "#text": "A wrapper for the common usage of gdk_threads_add_idle_full()\nassigning the default priority, #G_PRIORITY_DEFAULT_IDLE.\n\nSee gdk_threads_add_idle_full()."
                    },
                    "source-position": {
                        "@filename": "gdk/gdkthreads.h",
                        "@line": "59"
                    },
                    "return-value": {
                        "@transfer-ownership": "none",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "gdk/gdk.c",
                            "@line": "873",
                            "#text": "the ID (greater than 0) of the event source."
                        },
                        "type": {
                            "@name": "guint",
                            "@c:type": "guint"
                        }
                    },
                    "parameters": {
                        "parameter": [
                            {
                                "@name": "function",
                                "@transfer-ownership": "none",
                                "@closure": "1",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "gdk/gdk.c",
                                    "@line": "865",
                                    "#text": "function to call"
                                },
                                "type": {
                                    "@name": "GLib.SourceFunc",
                                    "@c:type": "GSourceFunc"
                                }
                            },
                            {
                                "@name": "data",
                                "@transfer-ownership": "none",
                                "@nullable": "1",
                                "@allow-none": "1",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "gdk/gdk.c",
                                    "@line": "866",
                                    "#text": "data to pass to @function"
                                },
                                "type": {
                                    "@name": "gpointer",
                                    "@c:type": "gpointer"
                                }
                            }
                        ]
                    }
                },
                {
                    "@name": "threads_add_idle_full",
                    "@c:identifier": "gdk_threads_add_idle_full",
                    "@shadows": "threads_add_idle",
                    "@version": "2.12",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "gdk/gdk.c",
                        "@line": "788",
                        "#text": "Adds a function to be called whenever there are no higher priority\nevents pending.  If the function returns %FALSE it is automatically\nremoved from the list of event sources and will not be called again.\n\nThis variant of g_idle_add_full() calls @function with the GDK lock\nheld. It can be thought of a MT-safe version for GTK+ widgets for the\nfollowing use case, where you have to worry about idle_callback()\nrunning in thread A and accessing @self after it has been finalized\nin thread B:\n\n|[<!-- language=\"C\" -->\nstatic gboolean\nidle_callback (gpointer data)\n{\n   // gdk_threads_enter(); would be needed for g_idle_add()\n\n   SomeWidget *self = data;\n   // do stuff with self\n\n   self->idle_id = 0;\n\n   // gdk_threads_leave(); would be needed for g_idle_add()\n   return FALSE;\n}\n\nstatic void\nsome_widget_do_stuff_later (SomeWidget *self)\n{\n   self->idle_id = gdk_threads_add_idle (idle_callback, self)\n   // using g_idle_add() here would require thread protection in the callback\n}\n\nstatic void\nsome_widget_finalize (GObject *object)\n{\n   SomeWidget *self = SOME_WIDGET (object);\n   if (self->idle_id)\n     g_source_remove (self->idle_id);\n   G_OBJECT_CLASS (parent_class)->finalize (object);\n}\n]|"
                    },
                    "source-position": {
                        "@filename": "gdk/gdkthreads.h",
                        "@line": "54"
                    },
                    "return-value": {
                        "@transfer-ownership": "none",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "gdk/gdk.c",
                            "@line": "838",
                            "#text": "the ID (greater than 0) of the event source."
                        },
                        "type": {
                            "@name": "guint",
                            "@c:type": "guint"
                        }
                    },
                    "parameters": {
                        "parameter": [
                            {
                                "@name": "priority",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "gdk/gdk.c",
                                    "@line": "790",
                                    "#text": "the priority of the idle source. Typically this will be in the\n           range between #G_PRIORITY_DEFAULT_IDLE and #G_PRIORITY_HIGH_IDLE"
                                },
                                "type": {
                                    "@name": "gint",
                                    "@c:type": "gint"
                                }
                            },
                            {
                                "@name": "function",
                                "@transfer-ownership": "none",
                                "@scope": "notified",
                                "@closure": "2",
                                "@destroy": "3",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "gdk/gdk.c",
                                    "@line": "792",
                                    "#text": "function to call"
                                },
                                "type": {
                                    "@name": "GLib.SourceFunc",
                                    "@c:type": "GSourceFunc"
                                }
                            },
                            {
                                "@name": "data",
                                "@transfer-ownership": "none",
                                "@nullable": "1",
                                "@allow-none": "1",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "gdk/gdk.c",
                                    "@line": "793",
                                    "#text": "data to pass to @function"
                                },
                                "type": {
                                    "@name": "gpointer",
                                    "@c:type": "gpointer"
                                }
                            },
                            {
                                "@name": "notify",
                                "@transfer-ownership": "none",
                                "@nullable": "1",
                                "@allow-none": "1",
                                "@scope": "async",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "gdk/gdk.c",
                                    "@line": "794",
                                    "#text": "function to call when the idle is removed, or %NULL"
                                },
                                "type": {
                                    "@name": "GLib.DestroyNotify",
                                    "@c:type": "GDestroyNotify"
                                }
                            }
                        ]
                    }
                },
                {
                    "@name": "threads_add_timeout",
                    "@c:identifier": "gdk_threads_add_timeout",
                    "@shadowed-by": "threads_add_timeout_full",
                    "@version": "2.12",
                    "@introspectable": "0",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "gdk/gdk.c",
                        "@line": "967",
                        "#text": "A wrapper for the common usage of gdk_threads_add_timeout_full()\nassigning the default priority, #G_PRIORITY_DEFAULT.\n\nSee gdk_threads_add_timeout_full()."
                    },
                    "source-position": {
                        "@filename": "gdk/gdkthreads.h",
                        "@line": "68"
                    },
                    "return-value": {
                        "@transfer-ownership": "none",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "gdk/gdk.c",
                            "@line": "979",
                            "#text": "the ID (greater than 0) of the event source."
                        },
                        "type": {
                            "@name": "guint",
                            "@c:type": "guint"
                        }
                    },
                    "parameters": {
                        "parameter": [
                            {
                                "@name": "interval",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "gdk/gdk.c",
                                    "@line": "969",
                                    "#text": "the time between calls to the function, in milliseconds\n            (1/1000ths of a second)"
                                },
                                "type": {
                                    "@name": "guint",
                                    "@c:type": "guint"
                                }
                            },
                            {
                                "@name": "function",
                                "@transfer-ownership": "none",
                                "@closure": "2",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "gdk/gdk.c",
                                    "@line": "971",
                                    "#text": "function to call"
                                },
                                "type": {
                                    "@name": "GLib.SourceFunc",
                                    "@c:type": "GSourceFunc"
                                }
                            },
                            {
                                "@name": "data",
                                "@transfer-ownership": "none",
                                "@nullable": "1",
                                "@allow-none": "1",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "gdk/gdk.c",
                                    "@line": "972",
                                    "#text": "data to pass to @function"
                                },
                                "type": {
                                    "@name": "gpointer",
                                    "@c:type": "gpointer"
                                }
                            }
                        ]
                    }
                },
                {
                    "@name": "threads_add_timeout_full",
                    "@c:identifier": "gdk_threads_add_timeout_full",
                    "@shadows": "threads_add_timeout",
                    "@version": "2.12",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "gdk/gdk.c",
                        "@line": "886",
                        "#text": "Sets a function to be called at regular intervals holding the GDK lock,\nwith the given priority.  The function is called repeatedly until it\nreturns %FALSE, at which point the timeout is automatically destroyed\nand the function will not be called again.  The @notify function is\ncalled when the timeout is destroyed.  The first call to the\nfunction will be at the end of the first @interval.\n\nNote that timeout functions may be delayed, due to the processing of other\nevent sources. Thus they should not be relied on for precise timing.\nAfter each call to the timeout function, the time of the next\ntimeout is recalculated based on the current time and the given interval\n(it does not try to \u201ccatch up\u201d time lost in delays).\n\nThis variant of g_timeout_add_full() can be thought of a MT-safe version\nfor GTK+ widgets for the following use case:\n\n|[<!-- language=\"C\" -->\nstatic gboolean timeout_callback (gpointer data)\n{\n   SomeWidget *self = data;\n   \n   // do stuff with self\n   \n   self->timeout_id = 0;\n   \n   return G_SOURCE_REMOVE;\n}\n \nstatic void some_widget_do_stuff_later (SomeWidget *self)\n{\n   self->timeout_id = g_timeout_add (timeout_callback, self)\n}\n \nstatic void some_widget_finalize (GObject *object)\n{\n   SomeWidget *self = SOME_WIDGET (object);\n   \n   if (self->timeout_id)\n     g_source_remove (self->timeout_id);\n   \n   G_OBJECT_CLASS (parent_class)->finalize (object);\n}\n]|"
                    },
                    "source-position": {
                        "@filename": "gdk/gdkthreads.h",
                        "@line": "62"
                    },
                    "return-value": {
                        "@transfer-ownership": "none",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "gdk/gdk.c",
                            "@line": "940",
                            "#text": "the ID (greater than 0) of the event source."
                        },
                        "type": {
                            "@name": "guint",
                            "@c:type": "guint"
                        }
                    },
                    "parameters": {
                        "parameter": [
                            {
                                "@name": "priority",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "gdk/gdk.c",
                                    "@line": "888",
                                    "#text": "the priority of the timeout source. Typically this will be in the\n           range between #G_PRIORITY_DEFAULT_IDLE and #G_PRIORITY_HIGH_IDLE."
                                },
                                "type": {
                                    "@name": "gint",
                                    "@c:type": "gint"
                                }
                            },
                            {
                                "@name": "interval",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "gdk/gdk.c",
                                    "@line": "890",
                                    "#text": "the time between calls to the function, in milliseconds\n            (1/1000ths of a second)"
                                },
                                "type": {
                                    "@name": "guint",
                                    "@c:type": "guint"
                                }
                            },
                            {
                                "@name": "function",
                                "@transfer-ownership": "none",
                                "@scope": "notified",
                                "@closure": "3",
                                "@destroy": "4",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "gdk/gdk.c",
                                    "@line": "892",
                                    "#text": "function to call"
                                },
                                "type": {
                                    "@name": "GLib.SourceFunc",
                                    "@c:type": "GSourceFunc"
                                }
                            },
                            {
                                "@name": "data",
                                "@transfer-ownership": "none",
                                "@nullable": "1",
                                "@allow-none": "1",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "gdk/gdk.c",
                                    "@line": "893",
                                    "#text": "data to pass to @function"
                                },
                                "type": {
                                    "@name": "gpointer",
                                    "@c:type": "gpointer"
                                }
                            },
                            {
                                "@name": "notify",
                                "@transfer-ownership": "none",
                                "@nullable": "1",
                                "@allow-none": "1",
                                "@scope": "async",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "gdk/gdk.c",
                                    "@line": "894",
                                    "#text": "function to call when the timeout is removed, or %NULL"
                                },
                                "type": {
                                    "@name": "GLib.DestroyNotify",
                                    "@c:type": "GDestroyNotify"
                                }
                            }
                        ]
                    }
                },
                {
                    "@name": "threads_add_timeout_seconds",
                    "@c:identifier": "gdk_threads_add_timeout_seconds",
                    "@shadowed-by": "threads_add_timeout_seconds_full",
                    "@version": "2.14",
                    "@introspectable": "0",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "gdk/gdk.c",
                        "@line": "1033",
                        "#text": "A wrapper for the common usage of gdk_threads_add_timeout_seconds_full()\nassigning the default priority, #G_PRIORITY_DEFAULT.\n\nFor details, see gdk_threads_add_timeout_full()."
                    },
                    "source-position": {
                        "@filename": "gdk/gdkthreads.h",
                        "@line": "78"
                    },
                    "return-value": {
                        "@transfer-ownership": "none",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "gdk/gdk.c",
                            "@line": "1044",
                            "#text": "the ID (greater than 0) of the event source."
                        },
                        "type": {
                            "@name": "guint",
                            "@c:type": "guint"
                        }
                    },
                    "parameters": {
                        "parameter": [
                            {
                                "@name": "interval",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "gdk/gdk.c",
                                    "@line": "1035",
                                    "#text": "the time between calls to the function, in seconds"
                                },
                                "type": {
                                    "@name": "guint",
                                    "@c:type": "guint"
                                }
                            },
                            {
                                "@name": "function",
                                "@transfer-ownership": "none",
                                "@closure": "2",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "gdk/gdk.c",
                                    "@line": "1036",
                                    "#text": "function to call"
                                },
                                "type": {
                                    "@name": "GLib.SourceFunc",
                                    "@c:type": "GSourceFunc"
                                }
                            },
                            {
                                "@name": "data",
                                "@transfer-ownership": "none",
                                "@nullable": "1",
                                "@allow-none": "1",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "gdk/gdk.c",
                                    "@line": "1037",
                                    "#text": "data to pass to @function"
                                },
                                "type": {
                                    "@name": "gpointer",
                                    "@c:type": "gpointer"
                                }
                            }
                        ]
                    }
                },
                {
                    "@name": "threads_add_timeout_seconds_full",
                    "@c:identifier": "gdk_threads_add_timeout_seconds_full",
                    "@shadows": "threads_add_timeout_seconds",
                    "@version": "2.14",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "gdk/gdk.c",
                        "@line": "993",
                        "#text": "A variant of gdk_threads_add_timeout_full() with second-granularity.\nSee g_timeout_add_seconds_full() for a discussion of why it is\na good idea to use this function if you don\u2019t need finer granularity."
                    },
                    "source-position": {
                        "@filename": "gdk/gdkthreads.h",
                        "@line": "72"
                    },
                    "return-value": {
                        "@transfer-ownership": "none",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "gdk/gdk.c",
                            "@line": "1006",
                            "#text": "the ID (greater than 0) of the event source."
                        },
                        "type": {
                            "@name": "guint",
                            "@c:type": "guint"
                        }
                    },
                    "parameters": {
                        "parameter": [
                            {
                                "@name": "priority",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "gdk/gdk.c",
                                    "@line": "995",
                                    "#text": "the priority of the timeout source. Typically this will be in the\n           range between #G_PRIORITY_DEFAULT_IDLE and #G_PRIORITY_HIGH_IDLE."
                                },
                                "type": {
                                    "@name": "gint",
                                    "@c:type": "gint"
                                }
                            },
                            {
                                "@name": "interval",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "gdk/gdk.c",
                                    "@line": "997",
                                    "#text": "the time between calls to the function, in seconds"
                                },
                                "type": {
                                    "@name": "guint",
                                    "@c:type": "guint"
                                }
                            },
                            {
                                "@name": "function",
                                "@transfer-ownership": "none",
                                "@scope": "notified",
                                "@closure": "3",
                                "@destroy": "4",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "gdk/gdk.c",
                                    "@line": "998",
                                    "#text": "function to call"
                                },
                                "type": {
                                    "@name": "GLib.SourceFunc",
                                    "@c:type": "GSourceFunc"
                                }
                            },
                            {
                                "@name": "data",
                                "@transfer-ownership": "none",
                                "@nullable": "1",
                                "@allow-none": "1",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "gdk/gdk.c",
                                    "@line": "999",
                                    "#text": "data to pass to @function"
                                },
                                "type": {
                                    "@name": "gpointer",
                                    "@c:type": "gpointer"
                                }
                            },
                            {
                                "@name": "notify",
                                "@transfer-ownership": "none",
                                "@nullable": "1",
                                "@allow-none": "1",
                                "@scope": "async",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "gdk/gdk.c",
                                    "@line": "1000",
                                    "#text": "function to call when the timeout is removed, or %NULL"
                                },
                                "type": {
                                    "@name": "GLib.DestroyNotify",
                                    "@c:type": "GDestroyNotify"
                                }
                            }
                        ]
                    }
                },
                {
                    "@name": "threads_enter",
                    "@c:identifier": "gdk_threads_enter",
                    "@deprecated": "1",
                    "@deprecated-version": "3.6",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "gdk/gdk.c",
                        "@line": "631",
                        "#text": "This function marks the beginning of a critical section in which\nGDK and GTK+ functions can be called safely and without causing race\nconditions. Only one thread at a time can be in such a critial\nsection."
                    },
                    "doc-deprecated": {
                        "@xml:space": "preserve",
                        "#text": "All GDK and GTK+ calls should be made from the main\n    thread"
                    },
                    "source-position": {
                        "@filename": "gdk/gdkthreads.h",
                        "@line": "46"
                    },
                    "return-value": {
                        "@transfer-ownership": "none",
                        "type": {
                            "@name": "none",
                            "@c:type": "void"
                        }
                    }
                },
                {
                    "@name": "threads_init",
                    "@c:identifier": "gdk_threads_init",
                    "@deprecated": "1",
                    "@deprecated-version": "3.6",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "gdk/gdk.c",
                        "@line": "696",
                        "#text": "Initializes GDK so that it can be used from multiple threads\nin conjunction with gdk_threads_enter() and gdk_threads_leave().\n\nThis call must be made before any use of the main loop from\nGTK+; to be safe, call it before gtk_init()."
                    },
                    "doc-deprecated": {
                        "@xml:space": "preserve",
                        "#text": "All GDK and GTK+ calls should be made from the main\n    thread"
                    },
                    "source-position": {
                        "@filename": "gdk/gdkthreads.h",
                        "@line": "44"
                    },
                    "return-value": {
                        "@transfer-ownership": "none",
                        "type": {
                            "@name": "none",
                            "@c:type": "void"
                        }
                    }
                },
                {
                    "@name": "threads_leave",
                    "@c:identifier": "gdk_threads_leave",
                    "@deprecated": "1",
                    "@deprecated-version": "3.6",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "gdk/gdk.c",
                        "@line": "649",
                        "#text": "Leaves a critical region begun with gdk_threads_enter()."
                    },
                    "doc-deprecated": {
                        "@xml:space": "preserve",
                        "#text": "All GDK and GTK+ calls should be made from the main\n    thread"
                    },
                    "source-position": {
                        "@filename": "gdk/gdkthreads.h",
                        "@line": "48"
                    },
                    "return-value": {
                        "@transfer-ownership": "none",
                        "type": {
                            "@name": "none",
                            "@c:type": "void"
                        }
                    }
                },
                {
                    "@name": "threads_set_lock_functions",
                    "@c:identifier": "gdk_threads_set_lock_functions",
                    "@version": "2.4",
                    "@introspectable": "0",
                    "@deprecated": "1",
                    "@deprecated-version": "3.6",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "gdk/gdk.c",
                        "@line": "717",
                        "#text": "Allows the application to replace the standard method that\nGDK uses to protect its data structures. Normally, GDK\ncreates a single #GMutex that is locked by gdk_threads_enter(),\nand released by gdk_threads_leave(); using this function an\napplication provides, instead, a function @enter_fn that is\ncalled by gdk_threads_enter() and a function @leave_fn that is\ncalled by gdk_threads_leave().\n\nThe functions must provide at least same locking functionality\nas the default implementation, but can also do extra application\nspecific processing.\n\nAs an example, consider an application that has its own recursive\nlock that when held, holds the GTK+ lock as well. When GTK+ unlocks\nthe GTK+ lock when entering a recursive main loop, the application\nmust temporarily release its lock as well.\n\nMost threaded GTK+ apps won\u2019t need to use this method.\n\nThis method must be called before gdk_threads_init(), and cannot\nbe called multiple times."
                    },
                    "doc-deprecated": {
                        "@xml:space": "preserve",
                        "#text": "All GDK and GTK+ calls should be made from the main\n    thread"
                    },
                    "source-position": {
                        "@filename": "gdk/gdkthreads.h",
                        "@line": "50"
                    },
                    "return-value": {
                        "@transfer-ownership": "none",
                        "type": {
                            "@name": "none",
                            "@c:type": "void"
                        }
                    },
                    "parameters": {
                        "parameter": [
                            {
                                "@name": "enter_fn",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "gdk/gdk.c",
                                    "@line": "719",
                                    "#text": "function called to guard GDK"
                                },
                                "type": {
                                    "@name": "GObject.Callback",
                                    "@c:type": "GCallback"
                                }
                            },
                            {
                                "@name": "leave_fn",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "gdk/gdk.c",
                                    "@line": "720",
                                    "#text": "function called to release the guard"
                                },
                                "type": {
                                    "@name": "GObject.Callback",
                                    "@c:type": "GCallback"
                                }
                            }
                        ]
                    }
                },
                {
                    "@name": "unicode_to_keyval",
                    "@c:identifier": "gdk_unicode_to_keyval",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "gdk/gdkkeyuni.c",
                        "@line": "1682",
                        "#text": "Convert from a ISO10646 character to a key symbol."
                    },
                    "source-position": {
                        "@filename": "gdk/gdkkeys.h",
                        "@line": "158"
                    },
                    "return-value": {
                        "@transfer-ownership": "none",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "gdk/gdkkeyuni.c",
                            "@line": "1688",
                            "#text": "the corresponding GDK key symbol, if one exists.\n              or, if there is no corresponding symbol,\n              wc | 0x01000000"
                        },
                        "type": {
                            "@name": "guint",
                            "@c:type": "guint"
                        }
                    },
                    "parameters": {
                        "parameter": {
                            "@name": "wc",
                            "@transfer-ownership": "none",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkkeyuni.c",
                                "@line": "1684",
                                "#text": "a ISO10646 encoded character"
                            },
                            "type": {
                                "@name": "guint32",
                                "@c:type": "guint32"
                            }
                        }
                    }
                },
                {
                    "@name": "utf8_to_string_target",
                    "@c:identifier": "gdk_utf8_to_string_target",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "gdk/gdkselection.c",
                        "@line": "317",
                        "#text": "Converts an UTF-8 string into the best possible representation\nas a STRING. The representation of characters not in STRING\nis not specified; it may be as pseudo-escape sequences\n\\x{ABCD}, or it may be in some other form of approximation."
                    },
                    "source-position": {
                        "@filename": "gdk/gdkproperty.h",
                        "@line": "96"
                    },
                    "return-value": {
                        "@transfer-ownership": "full",
                        "@nullable": "1",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "gdk/gdkselection.c",
                            "@line": "326",
                            "#text": "the newly-allocated string, or %NULL if the\n         conversion failed. (It should not fail for any properly\n         formed UTF-8 string unless system limits like memory or\n         file descriptors are exceeded.)"
                        },
                        "type": {
                            "@name": "utf8",
                            "@c:type": "gchar*"
                        }
                    },
                    "parameters": {
                        "parameter": {
                            "@name": "str",
                            "@transfer-ownership": "none",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/gdkselection.c",
                                "@line": "319",
                                "#text": "a UTF-8 string"
                            },
                            "type": {
                                "@name": "utf8",
                                "@c:type": "const gchar*"
                            }
                        }
                    }
                }
            ],
            "docsection": [
                {
                    "@name": "cairo_interaction",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "gdk/gdkcairo.c",
                        "@line": "26",
                        "#text": "[Cairo](http://cairographics.org) is a graphics\nlibrary that supports vector graphics and image compositing that\ncan be used with GDK. GTK+ does all of its drawing using cairo.\n\nGDK does not wrap the cairo API, instead it allows to create cairo\ncontexts which can be used to draw on #GdkWindows. Additional\nfunctions allow use #GdkRectangles with cairo and to use #GdkColors,\n#GdkRGBAs, #GdkPixbufs and #GdkWindows as sources for drawing\noperations."
                    }
                },
                {
                    "@name": "colors",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "gdk/deprecated/gdkcolor.c",
                        "@line": "36",
                        "#text": "A #GdkColor represents a color.\n\nWhen working with cairo, it is often more convenient\nto use a #GdkRGBA instead, and #GdkColor has been\ndeprecated in favor of #GdkRGBA."
                    }
                },
                {
                    "@name": "cursors",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "gdk/gdkcursor.c",
                        "@line": "39",
                        "#text": "These functions are used to create and destroy cursors.\nThere is a number of standard cursors, but it is also\npossible to construct new cursors from pixbufs. There\nmay be limitations as to what kinds of cursors can be\nconstructed on a given display, see\ngdk_display_supports_cursor_alpha(),\ngdk_display_supports_cursor_color(),\ngdk_display_get_default_cursor_size() and\ngdk_display_get_maximal_cursor_size().\n\nCursors by themselves are not very interesting, they must be be\nbound to a window for users to see them. This is done with\ngdk_window_set_cursor() or by setting the cursor member of the\n#GdkWindowAttr passed to gdk_window_new()."
                    }
                },
                {
                    "@name": "dnd",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "gdk/gdkdnd.c",
                        "@line": "58",
                        "#text": "These functions provide a low level interface for drag and drop.\nThe X backend of GDK supports both the Xdnd and Motif drag and drop\nprotocols transparently, the Win32 backend supports the WM_DROPFILES\nprotocol.\n\nGTK+ provides a higher level abstraction based on top of these functions,\nand so they are not normally needed in GTK+ applications.\nSee the [Drag and Drop][gtk3-Drag-and-Drop] section of\nthe GTK+ documentation for more information."
                    }
                },
                {
                    "@name": "event_structs",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "gdk/gdkevents.h",
                        "@line": "41",
                        "#text": "The event structures contain data specific to each type of event in GDK.\n\n> A common mistake is to forget to set the event mask of a widget so that\n> the required events are received. See gtk_widget_set_events()."
                    }
                },
                {
                    "@name": "events",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "gdk/gdkevents.c",
                        "@line": "35",
                        "#text": "This section describes functions dealing with events from the window\nsystem.\n\nIn GTK+ applications the events are handled automatically in\ngtk_main_do_event() and passed on to the appropriate widgets, so these\nfunctions are rarely needed. Though some of the fields in the\n[Event Structures][gdk3-Event-Structures] are useful."
                    }
                },
                {
                    "@name": "gdktestutils",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "gdk/gdktestutils.h",
                        "@line": "31",
                        "#text": "The functions in this section are intended to be used in test programs.\nThey allow to simulate some user input."
                    }
                },
                {
                    "@name": "general",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "gdk/gdk.c",
                        "@line": "50",
                        "#text": "This section describes the GDK initialization functions and miscellaneous\nutility functions, as well as deprecation facilities.\n\nThe GDK and GTK+ headers annotate deprecated APIs in a way that produces\ncompiler warnings if these deprecated APIs are used. The warnings\ncan be turned off by defining the macro %GDK_DISABLE_DEPRECATION_WARNINGS\nbefore including the glib.h header.\n\nGDK and GTK+ also provide support for building applications against\ndefined subsets of deprecated or new APIs. Define the macro\n%GDK_VERSION_MIN_REQUIRED to specify up to what version\nyou want to receive warnings about deprecated APIs. Define the\nmacro %GDK_VERSION_MAX_ALLOWED to specify the newest version\nwhose API you want to use."
                    }
                },
                {
                    "@name": "keys",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "gdk/gdkkeys.c",
                        "@line": "33",
                        "#text": "Key values are the codes which are sent whenever a key is pressed or released.\nThey appear in the #GdkEventKey.keyval field of the\n#GdkEventKey structure, which is passed to signal handlers for the\n#GtkWidget::key-press-event and #GtkWidget::key-release-event signals.\nThe complete list of key values can be found in the\n`gdk/gdkkeysyms.h` header file.\n\nKey values are regularly updated from the upstream X.org X11 implementation,\nso new values are added regularly. They will be prefixed with GDK_KEY_ rather\nthan XF86XK_ or XK_ (for older symbols).\n\nKey values can be converted into a string representation using\ngdk_keyval_name(). The reverse function, converting a string to a key value,\nis provided by gdk_keyval_from_name().\n\nThe case of key values can be determined using gdk_keyval_is_upper() and\ngdk_keyval_is_lower(). Key values can be converted to upper or lower case\nusing gdk_keyval_to_upper() and gdk_keyval_to_lower().\n\nWhen it makes sense, key values can be converted to and from\nUnicode characters with gdk_keyval_to_unicode() and gdk_unicode_to_keyval().\n\n# Groups # {#key-group-explanation}\n\nOne #GdkKeymap object exists for each user display. gdk_keymap_get_default()\nreturns the #GdkKeymap for the default display; to obtain keymaps for other\ndisplays, use gdk_keymap_get_for_display(). A keymap\nis a mapping from #GdkKeymapKey to key values. You can think of a #GdkKeymapKey\nas a representation of a symbol printed on a physical keyboard key. That is, it\ncontains three pieces of information. First, it contains the hardware keycode;\nthis is an identifying number for a physical key. Second, it contains the\n\u201clevel\u201d of the key. The level indicates which symbol on the\nkey will be used, in a vertical direction. So on a standard US keyboard, the key\nwith the number \u201c1\u201c on it also has the exclamation point (\u201d!\u201d) character on\nit. The level indicates whether to use the \u201c1\u201d or the \u201c!\u201d symbol.  The letter\nkeys are considered to have a lowercase letter at level 0, and an uppercase\nletter at level 1, though only the uppercase letter is printed.  Third, the\n#GdkKeymapKey contains a group; groups are not used on standard US keyboards,\nbut are used in many other countries. On a keyboard with groups, there can be 3\nor 4 symbols printed on a single key. The group indicates movement in a\nhorizontal direction. Usually groups are used for two different languages.  In\ngroup 0, a key might have two English characters, and in group 1 it might have\ntwo Hebrew characters. The Hebrew characters will be printed on the key next to\nthe English characters.\n\nIn order to use a keymap to interpret a key event, it\u2019s necessary to first\nconvert the keyboard state into an effective group and level. This is done via a\nset of rules that varies widely according to type of keyboard and user\nconfiguration. The function gdk_keymap_translate_keyboard_state() accepts a\nkeyboard state -- consisting of hardware keycode pressed, active modifiers, and\nactive group -- applies the appropriate rules, and returns the group/level to be\nused to index the keymap, along with the modifiers which did not affect the\ngroup and level. i.e. it returns \u201cunconsumed modifiers.\u201d The keyboard group may\ndiffer from the effective group used for keymap lookups because some keys don't\nhave multiple groups - e.g. the Enter key is always in group 0 regardless of\nkeyboard state.\n\nNote that gdk_keymap_translate_keyboard_state() also returns the keyval, i.e. it\ngoes ahead and performs the keymap lookup in addition to telling you which\neffective group/level values were used for the lookup. #GdkEventKey already\ncontains this keyval, however, so you don\u2019t normally need to call\ngdk_keymap_translate_keyboard_state() just to get the keyval."
                    }
                },
                {
                    "@name": "pango_interaction",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "gdk/gdkpango.c",
                        "@line": "29",
                        "#text": "Pango is the text layout system used by GDK and GTK+. The functions\nand types in this section are used to obtain clip regions for\n#PangoLayouts, and to get #PangoContexts that can be used with\nGDK.\n\nCreating a #PangoLayout object is the first step in rendering text,\nand requires getting a handle to a #PangoContext. For GTK+ programs,\nyou\u2019ll usually want to use gtk_widget_get_pango_context(), or\ngtk_widget_create_pango_layout(), rather than using the lowlevel\ngdk_pango_context_get_for_screen(). Once you have a #PangoLayout, you\ncan set the text and attributes of it with Pango functions like\npango_layout_set_text() and get its size with pango_layout_get_size().\n(Note that Pango uses a fixed point system internally, so converting\nbetween Pango units and pixels using [PANGO_SCALE][PANGO-SCALE-CAPS]\nor the PANGO_PIXELS() macro.)\n\nRendering a Pango layout is done most simply with pango_cairo_show_layout();\nyou can also draw pieces of the layout with pango_cairo_show_layout_line().\n\n## Draw transformed text with Pango and cairo ## {#rotated-example}\n\n|[<!-- language=\"C\" -->\n#define RADIUS 100\n#define N_WORDS 10\n#define FONT \"Sans Bold 18\"\n\nPangoContext *context;\nPangoLayout *layout;\nPangoFontDescription *desc;\n\ndouble radius;\nint width, height;\nint i;\n\n// Set up a transformation matrix so that the user space coordinates for\n// where we are drawing are [-RADIUS, RADIUS], [-RADIUS, RADIUS]\n// We first center, then change the scale\n\nwidth = gdk_window_get_width (window);\nheight = gdk_window_get_height (window);\nradius = MIN (width, height) / 2.;\n\ncairo_translate (cr,\n                 radius + (width - 2 * radius) / 2,\n                 radius + (height - 2 * radius) / 2);\n                 cairo_scale (cr, radius / RADIUS, radius / RADIUS);\n\n// Create a PangoLayout, set the font and text\ncontext = gdk_pango_context_get_for_screen (screen);\nlayout = pango_layout_new (context);\npango_layout_set_text (layout, \"Text\", -1);\ndesc = pango_font_description_from_string (FONT);\npango_layout_set_font_description (layout, desc);\npango_font_description_free (desc);\n\n// Draw the layout N_WORDS times in a circle\nfor (i = 0; i < N_WORDS; i++)\n  {\n    double red, green, blue;\n    double angle = 2 * G_PI * i / n_words;\n\n    cairo_save (cr);\n\n    // Gradient from red at angle == 60 to blue at angle == 300\n    red = (1 + cos (angle - 60)) / 2;\n    green = 0;\n    blue = 1 - red;\n\n    cairo_set_source_rgb (cr, red, green, blue);\n    cairo_rotate (cr, angle);\n\n    // Inform Pango to re-layout the text with the new transformation matrix\n    pango_cairo_update_layout (cr, layout);\n\n    pango_layout_get_size (layout, &width, &height);\n\n    cairo_move_to (cr, - width / 2 / PANGO_SCALE, - DEFAULT_TEXT_RADIUS);\n    pango_cairo_show_layout (cr, layout);\n\n    cairo_restore (cr);\n  }\n\ng_object_unref (layout);\ng_object_unref (context);\n]|\n\n## Output of the [example][rotated-example] above.\n\n![](rotated-text.png)"
                    }
                },
                {
                    "@name": "pixbufs",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "gdk/gdkpixbuf-drawable.c",
                        "@line": "32",
                        "#text": "Pixbufs are client-side images. For details on how to create\nand manipulate pixbufs, see the #GdkPixbuf API documentation.\n\nThe functions described here allow to obtain pixbufs from\n#GdkWindows and cairo surfaces."
                    }
                },
                {
                    "@name": "properties",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "gdk/gdkproperty.c",
                        "@line": "25",
                        "#text": "Each window under X can have any number of associated\n\u201cproperties\u201d attached to it.\nProperties are arbitrary chunks of data identified by\n\u201catom\u201ds. (An \u201catom\u201d\nis a numeric index into a string table on the X server. They are used\nto transfer strings efficiently between clients without\nhaving to transfer the entire string.) A property\nhas an associated type, which is also identified\nusing an atom.\n\nA property has an associated \u201cformat\u201d,\nan integer describing how many bits are in each unit\nof data inside the property. It must be 8, 16, or 32.\nWhen data is transferred between the server and client,\nif they are of different endianesses it will be byteswapped\nas necessary according to the format of the property.\nNote that on the client side, properties of format 32\nwill be stored with one unit per long,\neven if a long integer has more than 32 bits on the platform.\n(This decision was apparently made for Xlib to maintain\ncompatibility with programs that assumed longs were 32\nbits, at the expense of programs that knew better.)\n\nThe functions in this section are used to add, remove\nand change properties on windows, to convert atoms\nto and from strings and to manipulate some types of\ndata commonly stored in X window properties."
                    }
                },
                {
                    "@name": "regions",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "gdk/gdkrectangle.c",
                        "@line": "31",
                        "#text": "GDK provides the #GdkPoint and #GdkRectangle data types for representing pixels\nand sets of pixels on the screen. Together with Cairo\u2019s #cairo_region_t data\ntype, they make up the central types for representing graphical data.\n\nA #GdkPoint represents an x and y coordinate of a point.\n\nA #GdkRectangle represents the position and size of a rectangle.\nThe intersection of two rectangles can be computed with\ngdk_rectangle_intersect(). To find the union of two rectangles use\ngdk_rectangle_union().\n\n#cairo_region_t is usually used for managing clipping of graphical operations."
                    }
                },
                {
                    "@name": "rgba_colors",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "gdk/gdkrgba.c",
                        "@line": "33",
                        "#text": "#GdkRGBA is a convenient way to pass rgba colors around.\nIt\u2019s based on cairo\u2019s way to deal with colors and mirrors its behavior.\nAll values are in the range from 0.0 to 1.0 inclusive. So the color\n(0.0, 0.0, 0.0, 0.0) represents transparent black and\n(1.0, 1.0, 1.0, 1.0) is opaque white. Other values will be clamped\nto this range when drawing."
                    }
                },
                {
                    "@name": "selections",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "gdk/gdkselection.c",
                        "@line": "33",
                        "#text": "GDK\u2019s selection functions, based on the [X selection mechanism](\nhttps://www.x.org/releases/X11R7.6/doc/xorg-docs/specs/ICCCM/icccm.html),\nprovide a way to transfer arbitrary chunks of\ndata between programs. A \u201cselection\u201d is a essentially\na named clipboard, identified by a string interned as a #GdkAtom. By\nclaiming ownership of a selection, an application indicates that it will\nbe responsible for supplying its contents. The most common selections are\n`PRIMARY` and `CLIPBOARD`.\n\nThe contents of a selection can be represented in a number of formats,\ncalled \u201ctargets\u201d. Each target is identified by an atom.\nA list of all possible targets supported by the selection owner can be\nretrieved by requesting the special target `TARGETS`. When\na selection is retrieved, the data is accompanied by a type (an atom), and\na format (an integer, representing the number of bits per item).\nSee [Properties and Atoms][gdk3-Properties-and-Atoms]\nfor more information.\n\nThe functions in this section only contain the lowlevel parts of the\nselection protocol. A considerably more complicated implementation is needed\non top of this. GTK+ contains such an implementation in the functions in\n`gtkselection.h` and programmers should use those functions\ninstead of the ones presented here. If you plan to implement selection\nhandling directly on top of the functions here, you should refer to the\n[X Inter-Client Communication Conventions Manual (ICCCM)](\nhttps://www.x.org/releases/X11R7.6/doc/xorg-docs/specs/ICCCM/icccm.html).\n\nNote that although much of the selection API design is based on that of X,\nit will work on other GDK backends too."
                    }
                },
                {
                    "@name": "threads",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "gdk/gdk.c",
                        "@line": "573",
                        "#text": "For thread safety, GDK relies on the thread primitives in GLib,\nand on the thread-safe GLib main loop.\n\nGLib is completely thread safe (all global data is automatically\nlocked), but individual data structure instances are not automatically\nlocked for performance reasons. So e.g. you must coordinate\naccesses to the same #GHashTable from multiple threads.\n\nGTK+, however, is not thread safe. You should only use GTK+ and GDK\nfrom the thread gtk_init() and gtk_main() were called on.\nThis is usually referred to as the \u201cmain thread\u201d.\n\nSignals on GTK+ and GDK types, as well as non-signal callbacks, are\nemitted in the main thread.\n\nYou can schedule work in the main thread safely from other threads\nby using gdk_threads_add_idle() and gdk_threads_add_timeout():\n\n|[<!-- language=\"C\" -->\nstatic void\nworker_thread (void)\n{\n  ExpensiveData *expensive_data = do_expensive_computation ();\n\n  gdk_threads_add_idle (got_value, expensive_data);\n}\n\nstatic gboolean\ngot_value (gpointer user_data)\n{\n  ExpensiveData *expensive_data = user_data;\n\n  my_app->expensive_data = expensive_data;\n  gtk_button_set_sensitive (my_app->button, TRUE);\n  gtk_button_set_label (my_app->button, expensive_data->result_label);\n\n  return G_SOURCE_REMOVE;\n}\n]|\n\nYou should use gdk_threads_add_idle() and gdk_threads_add_timeout()\ninstead of g_idle_add() and g_timeout_add() since libraries not under\nyour control might be using the deprecated GDK locking mechanism.\nIf you are sure that none of the code in your application and libraries\nuse the deprecated gdk_threads_enter() or gdk_threads_leave() methods,\nthen you can safely use g_idle_add() and g_timeout_add().\n\nFor more information on this \"worker thread\" pattern, you should\nalso look at #GTask, which gives you high-level tools to perform\nexpensive tasks from worker threads, and will handle thread\nmanagement for you."
                    }
                },
                {
                    "@name": "visuals",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "gdk/gdkvisual.c",
                        "@line": "28",
                        "#text": "A #GdkVisual describes a particular video hardware display format.\nIt includes information about the number of bits used for each color,\nthe way the bits are translated into an RGB value for display, and\nthe way the bits are stored in memory. For example, a piece of display\nhardware might support 24-bit color, 16-bit color, or 8-bit color;\nmeaning 24/16/8-bit pixel sizes. For a given pixel size, pixels can\nbe in different formats; for example the \u201cred\u201d element of an RGB pixel\nmay be in the top 8 bits of the pixel, or may be in the lower 4 bits.\n\nThere are several standard visuals. The visual returned by\ngdk_screen_get_system_visual() is the system\u2019s default visual, and\nthe visual returned by gdk_screen_get_rgba_visual() should be used for\ncreating windows with an alpha channel.\n\nA number of functions are provided for determining the \u201cbest\u201d available\nvisual. For the purposes of making this determination, higher bit depths\nare considered better, and for visuals of the same bit depth,\n%GDK_VISUAL_PSEUDO_COLOR is preferred at 8bpp, otherwise, the visual\ntypes are ranked in the order of(highest to lowest)\n%GDK_VISUAL_DIRECT_COLOR, %GDK_VISUAL_TRUE_COLOR,\n%GDK_VISUAL_PSEUDO_COLOR, %GDK_VISUAL_STATIC_COLOR,\n%GDK_VISUAL_GRAYSCALE, then %GDK_VISUAL_STATIC_GRAY."
                    }
                },
                {
                    "@name": "windows",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "gdk/gdkwindow.c",
                        "@line": "60",
                        "#text": "A #GdkWindow is a (usually) rectangular region on the screen.\nIt\u2019s a low-level object, used to implement high-level objects such as\n#GtkWidget and #GtkWindow on the GTK+ level. A #GtkWindow is a toplevel\nwindow, the thing a user might think of as a \u201cwindow\u201d with a titlebar\nand so on; a #GtkWindow may contain many #GdkWindows. For example,\neach #GtkButton has a #GdkWindow associated with it.\n\n# Composited Windows # {#COMPOSITED-WINDOWS}\n\nNormally, the windowing system takes care of rendering the contents\nof a child window onto its parent window. This mechanism can be\nintercepted by calling gdk_window_set_composited() on the child\nwindow. For a \u201ccomposited\u201d window it is the\nresponsibility of the application to render the window contents at\nthe right spot.\n\n# Offscreen Windows # {#OFFSCREEN-WINDOWS}\n\nOffscreen windows are more general than composited windows, since\nthey allow not only to modify the rendering of the child window onto\nits parent, but also to apply coordinate transformations.\n\nTo integrate an offscreen window into a window hierarchy, one has\nto call gdk_offscreen_window_set_embedder() and handle a number of\nsignals. The #GdkWindow::pick-embedded-child signal on the embedder\nwindow is used to select an offscreen child at given coordinates,\nand the #GdkWindow::to-embedder and #GdkWindow::from-embedder signals\non the offscreen window are used to translate coordinates between\nthe embedder and the offscreen window.\n\nFor rendering an offscreen window onto its embedder, the contents\nof the offscreen window are available as a surface, via\ngdk_offscreen_window_get_surface()."
                    }
                }
            ]
        }
    }
}