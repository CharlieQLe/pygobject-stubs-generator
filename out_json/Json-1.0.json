{
    "repository": {
        "@version": "1.2",
        "@xmlns": "http://www.gtk.org/introspection/core/1.0",
        "@xmlns:c": "http://www.gtk.org/introspection/c/1.0",
        "@xmlns:glib": "http://www.gtk.org/introspection/glib/1.0",
        "include": [
            {
                "@name": "GObject",
                "@version": "2.0"
            },
            {
                "@name": "Gio",
                "@version": "2.0"
            }
        ],
        "package": {
            "@name": "json-glib-1.0"
        },
        "c:include": {
            "@name": "json-glib/json-glib.h"
        },
        "namespace": {
            "@name": "Json",
            "@version": "1.0",
            "@shared-library": "libjson-glib-1.0.so.0",
            "@c:identifier-prefixes": "Json",
            "@c:symbol-prefixes": "json",
            "record": [
                {
                    "@name": "Array",
                    "@c:type": "JsonArray",
                    "@glib:type-name": "JsonArray",
                    "@glib:get-type": "json_array_get_type",
                    "@c:symbol-prefix": "array",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "../json-glib/json-array.c",
                        "@line": "28",
                        "#text": "`JsonArray` is the representation of the array type inside JSON.\n\nA `JsonArray` contains [struct@Json.Node] elements, which may contain\nfundamental types, other arrays or objects.\n\nSince arrays can be arbitrarily big, copying them can be expensive; for\nthis reason, they are reference counted. You can control the lifetime of\na `JsonArray` using [method@Json.Array.ref] and [method@Json.Array.unref].\n\nTo append an element, use [method@Json.Array.add_element].\n\nTo extract an element at a given index, use [method@Json.Array.get_element].\n\nTo retrieve the entire array in list form, use [method@Json.Array.get_elements].\n\nTo retrieve the length of the array, use [method@Json.Array.get_length]."
                    },
                    "source-position": {
                        "@filename": "../json-glib/json-types.h",
                        "@line": "101"
                    },
                    "constructor": [
                        {
                            "@name": "new",
                            "@c:identifier": "json_array_new",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../json-glib/json-array.c",
                                "@line": "51",
                                "#text": "Creates a new array."
                            },
                            "source-position": {
                                "@filename": "../json-glib/json-types.h",
                                "@line": "450"
                            },
                            "return-value": {
                                "@transfer-ownership": "full",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "../json-glib/json-array.c",
                                    "@line": "56",
                                    "#text": "the newly created array"
                                },
                                "type": {
                                    "@name": "Array",
                                    "@c:type": "JsonArray*"
                                }
                            }
                        },
                        {
                            "@name": "sized_new",
                            "@c:identifier": "json_array_sized_new",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../json-glib/json-array.c",
                                "@line": "71",
                                "#text": "Creates a new array with `n_elements` slots already allocated."
                            },
                            "source-position": {
                                "@filename": "../json-glib/json-types.h",
                                "@line": "452"
                            },
                            "return-value": {
                                "@transfer-ownership": "full",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "../json-glib/json-array.c",
                                    "@line": "77",
                                    "#text": "the newly created array"
                                },
                                "type": {
                                    "@name": "Array",
                                    "@c:type": "JsonArray*"
                                }
                            },
                            "parameters": {
                                "parameter": {
                                    "@name": "n_elements",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../json-glib/json-array.c",
                                        "@line": "73",
                                        "#text": "number of slots to pre-allocate"
                                    },
                                    "type": {
                                        "@name": "guint",
                                        "@c:type": "guint"
                                    }
                                }
                            }
                        }
                    ],
                    "method": [
                        {
                            "@name": "add_array_element",
                            "@c:identifier": "json_array_add_array_element",
                            "@version": "0.8",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../json-glib/json-array.c",
                                "@line": "627",
                                "#text": "Conveniently adds an array element into an array.\n\nIf `value` is `NULL`, a `null` element will be added instead.\n\nSee also: [method@Json.Array.add_element], [method@Json.Node.take_array]"
                            },
                            "source-position": {
                                "@filename": "../json-glib/json-types.h",
                                "@line": "475"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "type": {
                                    "@name": "none",
                                    "@c:type": "void"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "array",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../json-glib/json-array.c",
                                        "@line": "629",
                                        "#text": "a JSON array"
                                    },
                                    "type": {
                                        "@name": "Array",
                                        "@c:type": "JsonArray*"
                                    }
                                },
                                "parameter": {
                                    "@name": "value",
                                    "@transfer-ownership": "full",
                                    "@nullable": "1",
                                    "@allow-none": "1",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../json-glib/json-array.c",
                                        "@line": "630",
                                        "#text": "the array to add"
                                    },
                                    "type": {
                                        "@name": "Array",
                                        "@c:type": "JsonArray*"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "add_boolean_element",
                            "@c:identifier": "json_array_add_boolean_element",
                            "@version": "0.8",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../json-glib/json-array.c",
                                "@line": "560",
                                "#text": "Conveniently adds the given boolean value into an array.\n\nSee also: [method@Json.Array.add_element], [method@Json.Node.set_boolean]"
                            },
                            "source-position": {
                                "@filename": "../json-glib/json-types.h",
                                "@line": "467"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "type": {
                                    "@name": "none",
                                    "@c:type": "void"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "array",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../json-glib/json-array.c",
                                        "@line": "562",
                                        "#text": "a JSON array"
                                    },
                                    "type": {
                                        "@name": "Array",
                                        "@c:type": "JsonArray*"
                                    }
                                },
                                "parameter": {
                                    "@name": "value",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../json-glib/json-array.c",
                                        "@line": "563",
                                        "#text": "the boolean value to add"
                                    },
                                    "type": {
                                        "@name": "gboolean",
                                        "@c:type": "gboolean"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "add_double_element",
                            "@c:identifier": "json_array_add_double_element",
                            "@version": "0.8",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../json-glib/json-array.c",
                                "@line": "540",
                                "#text": "Conveniently adds the given floating point value into an array.\n\nSee also: [method@Json.Array.add_element], [method@Json.Node.set_double]"
                            },
                            "source-position": {
                                "@filename": "../json-glib/json-types.h",
                                "@line": "464"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "type": {
                                    "@name": "none",
                                    "@c:type": "void"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "array",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../json-glib/json-array.c",
                                        "@line": "542",
                                        "#text": "a JSON array"
                                    },
                                    "type": {
                                        "@name": "Array",
                                        "@c:type": "JsonArray*"
                                    }
                                },
                                "parameter": {
                                    "@name": "value",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../json-glib/json-array.c",
                                        "@line": "543",
                                        "#text": "the floating point value to add"
                                    },
                                    "type": {
                                        "@name": "gdouble",
                                        "@c:type": "gdouble"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "add_element",
                            "@c:identifier": "json_array_add_element",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../json-glib/json-array.c",
                                "@line": "503",
                                "#text": "Appends the given `node` inside an array."
                            },
                            "source-position": {
                                "@filename": "../json-glib/json-types.h",
                                "@line": "458"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "type": {
                                    "@name": "none",
                                    "@c:type": "void"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "array",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../json-glib/json-array.c",
                                        "@line": "505",
                                        "#text": "a JSON array"
                                    },
                                    "type": {
                                        "@name": "Array",
                                        "@c:type": "JsonArray*"
                                    }
                                },
                                "parameter": {
                                    "@name": "node",
                                    "@transfer-ownership": "full",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../json-glib/json-array.c",
                                        "@line": "506",
                                        "#text": "the element to add"
                                    },
                                    "type": {
                                        "@name": "Node",
                                        "@c:type": "JsonNode*"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "add_int_element",
                            "@c:identifier": "json_array_add_int_element",
                            "@version": "0.8",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../json-glib/json-array.c",
                                "@line": "520",
                                "#text": "Conveniently adds the given integer value into an array.\n\nSee also: [method@Json.Array.add_element], [method@Json.Node.set_int]"
                            },
                            "source-position": {
                                "@filename": "../json-glib/json-types.h",
                                "@line": "461"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "type": {
                                    "@name": "none",
                                    "@c:type": "void"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "array",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../json-glib/json-array.c",
                                        "@line": "522",
                                        "#text": "a JSON array"
                                    },
                                    "type": {
                                        "@name": "Array",
                                        "@c:type": "JsonArray*"
                                    }
                                },
                                "parameter": {
                                    "@name": "value",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../json-glib/json-array.c",
                                        "@line": "523",
                                        "#text": "the integer value to add"
                                    },
                                    "type": {
                                        "@name": "gint64",
                                        "@c:type": "gint64"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "add_null_element",
                            "@c:identifier": "json_array_add_null_element",
                            "@version": "0.8",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../json-glib/json-array.c",
                                "@line": "609",
                                "#text": "Conveniently adds a `null` element into an array\n\nSee also: [method@Json.Array.add_element], `JSON_NODE_NULL`"
                            },
                            "source-position": {
                                "@filename": "../json-glib/json-types.h",
                                "@line": "473"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "type": {
                                    "@name": "none",
                                    "@c:type": "void"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "array",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../json-glib/json-array.c",
                                        "@line": "611",
                                        "#text": "a JSON array"
                                    },
                                    "type": {
                                        "@name": "Array",
                                        "@c:type": "JsonArray*"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "add_object_element",
                            "@c:identifier": "json_array_add_object_element",
                            "@version": "0.8",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../json-glib/json-array.c",
                                "@line": "661",
                                "#text": "Conveniently adds an object into an array.\n\nIf `value` is `NULL`, a `null` element will be added instead.\n\nSee also: [method@Json.Array.add_element], [method@Json.Node.take_object]"
                            },
                            "source-position": {
                                "@filename": "../json-glib/json-types.h",
                                "@line": "478"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "type": {
                                    "@name": "none",
                                    "@c:type": "void"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "array",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../json-glib/json-array.c",
                                        "@line": "663",
                                        "#text": "a JSON array"
                                    },
                                    "type": {
                                        "@name": "Array",
                                        "@c:type": "JsonArray*"
                                    }
                                },
                                "parameter": {
                                    "@name": "value",
                                    "@transfer-ownership": "full",
                                    "@nullable": "1",
                                    "@allow-none": "1",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../json-glib/json-array.c",
                                        "@line": "664",
                                        "#text": "the object to add"
                                    },
                                    "type": {
                                        "@name": "Object",
                                        "@c:type": "JsonObject*"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "add_string_element",
                            "@c:identifier": "json_array_add_string_element",
                            "@version": "0.8",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../json-glib/json-array.c",
                                "@line": "580",
                                "#text": "Conveniently adds the given string value into an array.\n\nSee also: [method@Json.Array.add_element], [method@Json.Node.set_string]"
                            },
                            "source-position": {
                                "@filename": "../json-glib/json-types.h",
                                "@line": "470"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "type": {
                                    "@name": "none",
                                    "@c:type": "void"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "array",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../json-glib/json-array.c",
                                        "@line": "582",
                                        "#text": "a JSON array"
                                    },
                                    "type": {
                                        "@name": "Array",
                                        "@c:type": "JsonArray*"
                                    }
                                },
                                "parameter": {
                                    "@name": "value",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../json-glib/json-array.c",
                                        "@line": "583",
                                        "#text": "the string value to add"
                                    },
                                    "type": {
                                        "@name": "utf8",
                                        "@c:type": "const gchar*"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "dup_element",
                            "@c:identifier": "json_array_dup_element",
                            "@version": "0.6",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../json-glib/json-array.c",
                                "@line": "216",
                                "#text": "Retrieves a copy of the element at the given position in the array."
                            },
                            "source-position": {
                                "@filename": "../json-glib/json-types.h",
                                "@line": "507"
                            },
                            "return-value": {
                                "@transfer-ownership": "full",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "../json-glib/json-array.c",
                                    "@line": "223",
                                    "#text": "a copy of the element at the given position"
                                },
                                "type": {
                                    "@name": "Node",
                                    "@c:type": "JsonNode*"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "array",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../json-glib/json-array.c",
                                        "@line": "218",
                                        "#text": "a JSON array"
                                    },
                                    "type": {
                                        "@name": "Array",
                                        "@c:type": "JsonArray*"
                                    }
                                },
                                "parameter": {
                                    "@name": "index_",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../json-glib/json-array.c",
                                        "@line": "219",
                                        "#text": "the index of the element to retrieve"
                                    },
                                    "type": {
                                        "@name": "guint",
                                        "@c:type": "guint"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "equal",
                            "@c:identifier": "json_array_equal",
                            "@version": "1.2",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../json-glib/json-array.c",
                                "@line": "788",
                                "#text": "Check whether two arrays are equal.\n\nEquality is defined as:\n\n - the array have the same number of elements\n - the values of elements in corresponding positions are equal"
                            },
                            "source-position": {
                                "@filename": "../json-glib/json-types.h",
                                "@line": "526"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "../json-glib/json-array.c",
                                    "@line": "800",
                                    "#text": "`TRUE` if the arrays are equal, and `FALSE` otherwise"
                                },
                                "type": {
                                    "@name": "gboolean",
                                    "@c:type": "gboolean"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "a",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../json-glib/json-array.c",
                                        "@line": "790",
                                        "#text": "a JSON array"
                                    },
                                    "type": {
                                        "@name": "Array",
                                        "@c:type": "gconstpointer"
                                    }
                                },
                                "parameter": {
                                    "@name": "b",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../json-glib/json-array.c",
                                        "@line": "791",
                                        "#text": "another JSON array"
                                    },
                                    "type": {
                                        "@name": "Array",
                                        "@c:type": "gconstpointer"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "foreach_element",
                            "@c:identifier": "json_array_foreach_element",
                            "@version": "0.8",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../json-glib/json-array.c",
                                "@line": "714",
                                "#text": "Iterates over all elements of an array, and calls a function on\neach one of them.\n\nIt is safe to change the value of an element of the array while\niterating over it, but it is not safe to add or remove elements\nfrom the array."
                            },
                            "source-position": {
                                "@filename": "../json-glib/json-types.h",
                                "@line": "515"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "type": {
                                    "@name": "none",
                                    "@c:type": "void"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "array",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../json-glib/json-array.c",
                                        "@line": "716",
                                        "#text": "a JSON array"
                                    },
                                    "type": {
                                        "@name": "Array",
                                        "@c:type": "JsonArray*"
                                    }
                                },
                                "parameter": [
                                    {
                                        "@name": "func",
                                        "@transfer-ownership": "none",
                                        "@scope": "call",
                                        "@closure": "1",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "../json-glib/json-array.c",
                                            "@line": "717",
                                            "#text": "the function to be called on each element"
                                        },
                                        "type": {
                                            "@name": "ArrayForeach",
                                            "@c:type": "JsonArrayForeach"
                                        }
                                    },
                                    {
                                        "@name": "data",
                                        "@transfer-ownership": "none",
                                        "@nullable": "1",
                                        "@allow-none": "1",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "../json-glib/json-array.c",
                                            "@line": "718",
                                            "#text": "data to be passed to the function"
                                        },
                                        "type": {
                                            "@name": "gpointer",
                                            "@c:type": "gpointer"
                                        }
                                    }
                                ]
                            }
                        },
                        {
                            "@name": "get_array_element",
                            "@c:identifier": "json_array_get_array_element",
                            "@version": "0.8",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../json-glib/json-array.c",
                                "@line": "423",
                                "#text": "Conveniently retrieves the array at the given position inside an array.\n\nSee also: [method@Json.Array.get_element], [method@Json.Node.get_array]"
                            },
                            "source-position": {
                                "@filename": "../json-glib/json-types.h",
                                "@line": "501"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "../json-glib/json-array.c",
                                    "@line": "432",
                                    "#text": "the array"
                                },
                                "type": {
                                    "@name": "Array",
                                    "@c:type": "JsonArray*"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "array",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../json-glib/json-array.c",
                                        "@line": "425",
                                        "#text": "a JSON array"
                                    },
                                    "type": {
                                        "@name": "Array",
                                        "@c:type": "JsonArray*"
                                    }
                                },
                                "parameter": {
                                    "@name": "index_",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../json-glib/json-array.c",
                                        "@line": "426",
                                        "#text": "the index of the element to retrieve"
                                    },
                                    "type": {
                                        "@name": "guint",
                                        "@c:type": "guint"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "get_boolean_element",
                            "@c:identifier": "json_array_get_boolean_element",
                            "@version": "0.8",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../json-glib/json-array.c",
                                "@line": "322",
                                "#text": "Conveniently retrieves the boolean value of the element at the given\nposition inside an array.\n\nSee also: [method@Json.Array.get_element], [method@Json.Node.get_boolean]"
                            },
                            "source-position": {
                                "@filename": "../json-glib/json-types.h",
                                "@line": "492"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "../json-glib/json-array.c",
                                    "@line": "332",
                                    "#text": "the boolean value"
                                },
                                "type": {
                                    "@name": "gboolean",
                                    "@c:type": "gboolean"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "array",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../json-glib/json-array.c",
                                        "@line": "324",
                                        "#text": "a JSON array"
                                    },
                                    "type": {
                                        "@name": "Array",
                                        "@c:type": "JsonArray*"
                                    }
                                },
                                "parameter": {
                                    "@name": "index_",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../json-glib/json-array.c",
                                        "@line": "325",
                                        "#text": "the index of the element to retrieve"
                                    },
                                    "type": {
                                        "@name": "guint",
                                        "@c:type": "guint"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "get_double_element",
                            "@c:identifier": "json_array_get_double_element",
                            "@version": "0.8",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../json-glib/json-array.c",
                                "@line": "292",
                                "#text": "Conveniently retrieves the floating point value of the element at\nthe given position inside an array.\n\nSee also: [method@Json.Array.get_element], [method@Json.Node.get_double]"
                            },
                            "source-position": {
                                "@filename": "../json-glib/json-types.h",
                                "@line": "489"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "../json-glib/json-array.c",
                                    "@line": "302",
                                    "#text": "the floating point value"
                                },
                                "type": {
                                    "@name": "gdouble",
                                    "@c:type": "gdouble"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "array",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../json-glib/json-array.c",
                                        "@line": "294",
                                        "#text": "a JSON array"
                                    },
                                    "type": {
                                        "@name": "Array",
                                        "@c:type": "JsonArray*"
                                    }
                                },
                                "parameter": {
                                    "@name": "index_",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../json-glib/json-array.c",
                                        "@line": "295",
                                        "#text": "the index of the element to retrieve"
                                    },
                                    "type": {
                                        "@name": "guint",
                                        "@c:type": "guint"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "get_element",
                            "@c:identifier": "json_array_get_element",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../json-glib/json-array.c",
                                "@line": "243",
                                "#text": "Retrieves the element at the given position in the array."
                            },
                            "source-position": {
                                "@filename": "../json-glib/json-types.h",
                                "@line": "483"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "../json-glib/json-array.c",
                                    "@line": "250",
                                    "#text": "the element at the given position"
                                },
                                "type": {
                                    "@name": "Node",
                                    "@c:type": "JsonNode*"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "array",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../json-glib/json-array.c",
                                        "@line": "245",
                                        "#text": "a JSON array"
                                    },
                                    "type": {
                                        "@name": "Array",
                                        "@c:type": "JsonArray*"
                                    }
                                },
                                "parameter": {
                                    "@name": "index_",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../json-glib/json-array.c",
                                        "@line": "246",
                                        "#text": "the index of the element to retrieve"
                                    },
                                    "type": {
                                        "@name": "guint",
                                        "@c:type": "guint"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "get_elements",
                            "@c:identifier": "json_array_get_elements",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../json-glib/json-array.c",
                                "@line": "191",
                                "#text": "Retrieves all the elements of an array as a list of nodes."
                            },
                            "source-position": {
                                "@filename": "../json-glib/json-types.h",
                                "@line": "481"
                            },
                            "return-value": {
                                "@transfer-ownership": "container",
                                "@nullable": "1",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "../json-glib/json-array.c",
                                    "@line": "197",
                                    "#text": "the elements\n  of the array"
                                },
                                "type": {
                                    "@name": "GLib.List",
                                    "@c:type": "GList*",
                                    "type": {
                                        "@name": "Node"
                                    }
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "array",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../json-glib/json-array.c",
                                        "@line": "193",
                                        "#text": "a JSON array"
                                    },
                                    "type": {
                                        "@name": "Array",
                                        "@c:type": "JsonArray*"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "get_int_element",
                            "@c:identifier": "json_array_get_int_element",
                            "@version": "0.8",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../json-glib/json-array.c",
                                "@line": "262",
                                "#text": "Conveniently retrieves the integer value of the element at the given\nposition inside an array.\n\nSee also: [method@Json.Array.get_element], [method@Json.Node.get_int]"
                            },
                            "source-position": {
                                "@filename": "../json-glib/json-types.h",
                                "@line": "486"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "../json-glib/json-array.c",
                                    "@line": "272",
                                    "#text": "the integer value"
                                },
                                "type": {
                                    "@name": "gint64",
                                    "@c:type": "gint64"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "array",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../json-glib/json-array.c",
                                        "@line": "264",
                                        "#text": "a JSON array"
                                    },
                                    "type": {
                                        "@name": "Array",
                                        "@c:type": "JsonArray*"
                                    }
                                },
                                "parameter": {
                                    "@name": "index_",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../json-glib/json-array.c",
                                        "@line": "265",
                                        "#text": "the index of the element to retrieve"
                                    },
                                    "type": {
                                        "@name": "guint",
                                        "@c:type": "guint"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "get_length",
                            "@c:identifier": "json_array_get_length",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../json-glib/json-array.c",
                                "@line": "487",
                                "#text": "Retrieves the length of the given array"
                            },
                            "source-position": {
                                "@filename": "../json-glib/json-types.h",
                                "@line": "513"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "../json-glib/json-array.c",
                                    "@line": "493",
                                    "#text": "the length of the array"
                                },
                                "type": {
                                    "@name": "guint",
                                    "@c:type": "guint"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "array",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../json-glib/json-array.c",
                                        "@line": "489",
                                        "#text": "a JSON array"
                                    },
                                    "type": {
                                        "@name": "Array",
                                        "@c:type": "JsonArray*"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "get_null_element",
                            "@c:identifier": "json_array_get_null_element",
                            "@version": "0.8",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../json-glib/json-array.c",
                                "@line": "385",
                                "#text": "Conveniently checks whether the element at the given position inside the\narray contains a `null` value.\n\nSee also: [method@Json.Array.get_element], [method@Json.Node.is_null]"
                            },
                            "source-position": {
                                "@filename": "../json-glib/json-types.h",
                                "@line": "498"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "../json-glib/json-array.c",
                                    "@line": "395",
                                    "#text": "`TRUE` if the element is `null`"
                                },
                                "type": {
                                    "@name": "gboolean",
                                    "@c:type": "gboolean"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "array",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../json-glib/json-array.c",
                                        "@line": "387",
                                        "#text": "a JSON array"
                                    },
                                    "type": {
                                        "@name": "Array",
                                        "@c:type": "JsonArray*"
                                    }
                                },
                                "parameter": {
                                    "@name": "index_",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../json-glib/json-array.c",
                                        "@line": "388",
                                        "#text": "the index of the element to retrieve"
                                    },
                                    "type": {
                                        "@name": "guint",
                                        "@c:type": "guint"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "get_object_element",
                            "@c:identifier": "json_array_get_object_element",
                            "@version": "0.8",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../json-glib/json-array.c",
                                "@line": "455",
                                "#text": "Conveniently retrieves the object at the given position inside an array.\n\nSee also: [method@Json.Array.get_element], [method@Json.Node.get_object]"
                            },
                            "source-position": {
                                "@filename": "../json-glib/json-types.h",
                                "@line": "504"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "../json-glib/json-array.c",
                                    "@line": "464",
                                    "#text": "the object"
                                },
                                "type": {
                                    "@name": "Object",
                                    "@c:type": "JsonObject*"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "array",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../json-glib/json-array.c",
                                        "@line": "457",
                                        "#text": "a JSON array"
                                    },
                                    "type": {
                                        "@name": "Array",
                                        "@c:type": "JsonArray*"
                                    }
                                },
                                "parameter": {
                                    "@name": "index_",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../json-glib/json-array.c",
                                        "@line": "458",
                                        "#text": "the index of the element to retrieve"
                                    },
                                    "type": {
                                        "@name": "guint",
                                        "@c:type": "guint"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "get_string_element",
                            "@c:identifier": "json_array_get_string_element",
                            "@version": "0.8",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../json-glib/json-array.c",
                                "@line": "352",
                                "#text": "Conveniently retrieves the string value of the element at the given\nposition inside an array.\n\nSee also: [method@Json.Array.get_element], [method@Json.Node.get_string]"
                            },
                            "source-position": {
                                "@filename": "../json-glib/json-types.h",
                                "@line": "495"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "../json-glib/json-array.c",
                                    "@line": "362",
                                    "#text": "the string value"
                                },
                                "type": {
                                    "@name": "utf8",
                                    "@c:type": "const gchar*"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "array",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../json-glib/json-array.c",
                                        "@line": "354",
                                        "#text": "a JSON array"
                                    },
                                    "type": {
                                        "@name": "Array",
                                        "@c:type": "JsonArray*"
                                    }
                                },
                                "parameter": {
                                    "@name": "index_",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../json-glib/json-array.c",
                                        "@line": "355",
                                        "#text": "the index of the element to retrieve"
                                    },
                                    "type": {
                                        "@name": "guint",
                                        "@c:type": "guint"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "hash",
                            "@c:identifier": "json_array_hash",
                            "@version": "1.2",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../json-glib/json-array.c",
                                "@line": "749",
                                "#text": "Calculates a hash value for the given `key`.\n\nThe hash is calculated over the array and all its elements, recursively.\n\nIf the array is immutable, this is a fast operation; otherwise, it scales\nproportionally with the length of the array."
                            },
                            "source-position": {
                                "@filename": "../json-glib/json-types.h",
                                "@line": "524"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "../json-glib/json-array.c",
                                    "@line": "760",
                                    "#text": "hash value for the key"
                                },
                                "type": {
                                    "@name": "guint",
                                    "@c:type": "guint"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "key",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../json-glib/json-array.c",
                                        "@line": "751",
                                        "#text": "a JSON array to hash"
                                    },
                                    "type": {
                                        "@name": "Array",
                                        "@c:type": "gconstpointer"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "is_immutable",
                            "@c:identifier": "json_array_is_immutable",
                            "@version": "1.2",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../json-glib/json-array.c",
                                "@line": "172",
                                "#text": "Check whether the given `array` has been marked as immutable by calling\n[method@Json.Array.seal] on it."
                            },
                            "source-position": {
                                "@filename": "../json-glib/json-types.h",
                                "@line": "521"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "../json-glib/json-array.c",
                                    "@line": "180",
                                    "#text": "%TRUE if the array is immutable"
                                },
                                "type": {
                                    "@name": "gboolean",
                                    "@c:type": "gboolean"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "array",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../json-glib/json-array.c",
                                        "@line": "174",
                                        "#text": "a JSON array"
                                    },
                                    "type": {
                                        "@name": "Array",
                                        "@c:type": "JsonArray*"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "ref",
                            "@c:identifier": "json_array_ref",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../json-glib/json-array.c",
                                "@line": "92",
                                "#text": "Acquires a reference on the given array."
                            },
                            "source-position": {
                                "@filename": "../json-glib/json-types.h",
                                "@line": "454"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "../json-glib/json-array.c",
                                    "@line": "98",
                                    "#text": "the passed array, with the reference count\n  increased by one"
                                },
                                "type": {
                                    "@name": "Array",
                                    "@c:type": "JsonArray*"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "array",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../json-glib/json-array.c",
                                        "@line": "94",
                                        "#text": "the array to reference"
                                    },
                                    "type": {
                                        "@name": "Array",
                                        "@c:type": "JsonArray*"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "remove_element",
                            "@c:identifier": "json_array_remove_element",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../json-glib/json-array.c",
                                "@line": "695",
                                "#text": "Removes the element at the given position inside an array.\n\nThis function will release the reference held on the element."
                            },
                            "source-position": {
                                "@filename": "../json-glib/json-types.h",
                                "@line": "510"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "type": {
                                    "@name": "none",
                                    "@c:type": "void"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "array",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../json-glib/json-array.c",
                                        "@line": "697",
                                        "#text": "a JSON array"
                                    },
                                    "type": {
                                        "@name": "Array",
                                        "@c:type": "JsonArray*"
                                    }
                                },
                                "parameter": {
                                    "@name": "index_",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../json-glib/json-array.c",
                                        "@line": "698",
                                        "#text": "the position of the element to be removed"
                                    },
                                    "type": {
                                        "@name": "guint",
                                        "@c:type": "guint"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "seal",
                            "@c:identifier": "json_array_seal",
                            "@version": "1.2",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../json-glib/json-array.c",
                                "@line": "141",
                                "#text": "Seals the given array, making it immutable to further changes.\n\nThis function will recursively seal all elements in the array too.\n\nIf the `array` is already immutable, this is a no-op."
                            },
                            "source-position": {
                                "@filename": "../json-glib/json-types.h",
                                "@line": "519"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "type": {
                                    "@name": "none",
                                    "@c:type": "void"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "array",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../json-glib/json-array.c",
                                        "@line": "143",
                                        "#text": "the array to seal"
                                    },
                                    "type": {
                                        "@name": "Array",
                                        "@c:type": "JsonArray*"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "unref",
                            "@c:identifier": "json_array_unref",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../json-glib/json-array.c",
                                "@line": "112",
                                "#text": "Releases a reference on the given array.\n\nIf the reference count reaches zero, the array is destroyed and all\nits allocated resources are freed."
                            },
                            "source-position": {
                                "@filename": "../json-glib/json-types.h",
                                "@line": "456"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "type": {
                                    "@name": "none",
                                    "@c:type": "void"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "array",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../json-glib/json-array.c",
                                        "@line": "114",
                                        "#text": "the array to unreference"
                                    },
                                    "type": {
                                        "@name": "Array",
                                        "@c:type": "JsonArray*"
                                    }
                                }
                            }
                        }
                    ]
                },
                {
                    "@name": "BuilderClass",
                    "@c:type": "JsonBuilderClass",
                    "@glib:is-gtype-struct-for": "Builder",
                    "source-position": {
                        "@filename": "../json-glib/json-builder.h",
                        "@line": "61"
                    },
                    "field": [
                        {
                            "@name": "parent_class",
                            "@readable": "0",
                            "@private": "1",
                            "type": {
                                "@name": "GObject.ObjectClass",
                                "@c:type": "GObjectClass"
                            }
                        },
                        {
                            "@name": "_json_reserved1",
                            "@introspectable": "0",
                            "callback": {
                                "@name": "_json_reserved1",
                                "source-position": {
                                    "@filename": "../json-glib/json-builder.h",
                                    "@line": "59"
                                },
                                "return-value": {
                                    "@transfer-ownership": "none",
                                    "type": {
                                        "@name": "none",
                                        "@c:type": "void"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "_json_reserved2",
                            "@introspectable": "0",
                            "callback": {
                                "@name": "_json_reserved2",
                                "source-position": {
                                    "@filename": "../json-glib/json-builder.h",
                                    "@line": "60"
                                },
                                "return-value": {
                                    "@transfer-ownership": "none",
                                    "type": {
                                        "@name": "none",
                                        "@c:type": "void"
                                    }
                                }
                            }
                        }
                    ]
                },
                {
                    "@name": "BuilderPrivate",
                    "@c:type": "JsonBuilderPrivate",
                    "@disguised": "1",
                    "source-position": {
                        "@filename": "../json-glib/json-builder.h",
                        "@line": "42"
                    }
                },
                {
                    "@name": "GeneratorClass",
                    "@c:type": "JsonGeneratorClass",
                    "@glib:is-gtype-struct-for": "Generator",
                    "source-position": {
                        "@filename": "../json-glib/json-generator.h",
                        "@line": "65"
                    },
                    "field": [
                        {
                            "@name": "parent_class",
                            "@readable": "0",
                            "@private": "1",
                            "type": {
                                "@name": "GObject.ObjectClass",
                                "@c:type": "GObjectClass"
                            }
                        },
                        {
                            "@name": "_json_reserved1",
                            "@introspectable": "0",
                            "callback": {
                                "@name": "_json_reserved1",
                                "source-position": {
                                    "@filename": "../json-glib/json-generator.h",
                                    "@line": "61"
                                },
                                "return-value": {
                                    "@transfer-ownership": "none",
                                    "type": {
                                        "@name": "none",
                                        "@c:type": "void"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "_json_reserved2",
                            "@introspectable": "0",
                            "callback": {
                                "@name": "_json_reserved2",
                                "source-position": {
                                    "@filename": "../json-glib/json-generator.h",
                                    "@line": "62"
                                },
                                "return-value": {
                                    "@transfer-ownership": "none",
                                    "type": {
                                        "@name": "none",
                                        "@c:type": "void"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "_json_reserved3",
                            "@introspectable": "0",
                            "callback": {
                                "@name": "_json_reserved3",
                                "source-position": {
                                    "@filename": "../json-glib/json-generator.h",
                                    "@line": "63"
                                },
                                "return-value": {
                                    "@transfer-ownership": "none",
                                    "type": {
                                        "@name": "none",
                                        "@c:type": "void"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "_json_reserved4",
                            "@introspectable": "0",
                            "callback": {
                                "@name": "_json_reserved4",
                                "source-position": {
                                    "@filename": "../json-glib/json-generator.h",
                                    "@line": "64"
                                },
                                "return-value": {
                                    "@transfer-ownership": "none",
                                    "type": {
                                        "@name": "none",
                                        "@c:type": "void"
                                    }
                                }
                            }
                        }
                    ]
                },
                {
                    "@name": "GeneratorPrivate",
                    "@c:type": "JsonGeneratorPrivate",
                    "@disguised": "1",
                    "source-position": {
                        "@filename": "../json-glib/json-generator.h",
                        "@line": "44"
                    }
                },
                {
                    "@name": "Node",
                    "@c:type": "JsonNode",
                    "@glib:type-name": "JsonNode",
                    "@glib:get-type": "json_node_get_type",
                    "@c:symbol-prefix": "node",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "../json-glib/json-node.c",
                        "@line": "34",
                        "#text": "A generic container of JSON data types.\n\n`JsonNode` can contain fundamental types (integers, booleans, floating point\nnumbers, strings) and complex types (arrays and objects).\n\nWhen parsing a JSON data stream you extract the root node and walk\nthe node tree by retrieving the type of data contained inside the\nnode with the `JSON_NODE_TYPE` macro. If the node contains a fundamental\ntype you can retrieve a copy of the `GValue` holding it with the\n[method@Json.Node.get_value] function, and then use the `GValue` API to extract\nthe data; if the node contains a complex type you can retrieve the\n[struct@Json.Object] or the [struct@Json.Array] using [method@Json.Node.get_object]\nor [method@Json.Node.get_array] respectively, and then retrieve the nodes\nthey contain.\n\nA `JsonNode` may be marked as immutable using [method@Json.Node.seal]. This\nmarks the node and all its descendents as read-only, and means that\nsubsequent calls to setter functions (such as [method@Json.Node.set_array])\non them will abort as a programmer error. By marking a node tree as\nimmutable, it may be referenced in multiple places and its hash value cached\nfor fast lookups, without the possibility of a value deep within the tree\nchanging and affecting hash values. Immutable nodes may be passed to\nfunctions which retain a reference to them without needing to take a copy.\n\nA `JsonNode` supports two types of memory management: `malloc`/`free`\nsemantics, and reference counting semantics. The two may be mixed to a\nlimited extent: nodes may be allocated (which gives them a reference count\nof 1), referenced one or more times, unreferenced exactly that number of\ntimes (using [method@Json.Node.unref]), then either unreferenced exactly\nonce more or freed (using [method@Json.Node.free]) to destroy them.\nThe [method@Json.Node.free] function must not be used when a node might\nhave a reference count not equal to 1. To this end, JSON-GLib uses\n[method@Json.Node.copy] and [method@Json.Node.unref] internally."
                    },
                    "source-position": {
                        "@filename": "../json-glib/json-types.h",
                        "@line": "99"
                    },
                    "constructor": [
                        {
                            "@name": "alloc",
                            "@c:identifier": "json_node_alloc",
                            "@version": "0.16",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../json-glib/json-node.c",
                                "@line": "114",
                                "#text": "Allocates a new, uninitialized node.\n\nUse [method@Json.Node.init] and its variants to initialize the returned value."
                            },
                            "source-position": {
                                "@filename": "../json-glib/json-types.h",
                                "@line": "171"
                            },
                            "return-value": {
                                "@transfer-ownership": "full",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "../json-glib/json-node.c",
                                    "@line": "121",
                                    "#text": "the newly allocated node"
                                },
                                "type": {
                                    "@name": "Node",
                                    "@c:type": "JsonNode*"
                                }
                            }
                        },
                        {
                            "@name": "new",
                            "@c:identifier": "json_node_new",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../json-glib/json-node.c",
                                "@line": "376",
                                "#text": "Creates a new node holding the given @type.\n\nThis is a convenience function for [ctor@Json.Node.alloc] and\n[method@Json.Node.init], and it's the equivalent of:\n\n```c\n   json_node_init (json_node_alloc (), type);\n```"
                            },
                            "source-position": {
                                "@filename": "../json-glib/json-types.h",
                                "@line": "168"
                            },
                            "return-value": {
                                "@transfer-ownership": "full",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "../json-glib/json-node.c",
                                    "@line": "389",
                                    "#text": "the newly created node"
                                },
                                "type": {
                                    "@name": "Node",
                                    "@c:type": "JsonNode*"
                                }
                            },
                            "parameters": {
                                "parameter": {
                                    "@name": "type",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../json-glib/json-node.c",
                                        "@line": "378",
                                        "#text": "the type of the node to create"
                                    },
                                    "type": {
                                        "@name": "NodeType",
                                        "@c:type": "JsonNodeType"
                                    }
                                }
                            }
                        }
                    ],
                    "method": [
                        {
                            "@name": "copy",
                            "@c:identifier": "json_node_copy",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../json-glib/json-node.c",
                                "@line": "400",
                                "#text": "Copies @node.\n\nIf the node contains complex data types, their reference\ncounts are increased, regardless of whether the node is mutable or\nimmutable.\n\nThe copy will be immutable if, and only if, @node is immutable. However,\nthere should be no need to copy an immutable node."
                            },
                            "source-position": {
                                "@filename": "../json-glib/json-types.h",
                                "@line": "197"
                            },
                            "return-value": {
                                "@transfer-ownership": "full",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "../json-glib/json-node.c",
                                    "@line": "413",
                                    "#text": "the copied of the given node"
                                },
                                "type": {
                                    "@name": "Node",
                                    "@c:type": "JsonNode*"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "node",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../json-glib/json-node.c",
                                        "@line": "402",
                                        "#text": "the node to copy"
                                    },
                                    "type": {
                                        "@name": "Node",
                                        "@c:type": "JsonNode*"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "dup_array",
                            "@c:identifier": "json_node_dup_array",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../json-glib/json-node.c",
                                "@line": "687",
                                "#text": "Retrieves the JSON array inside @node.\n\nThe reference count of the returned array is increased.\n\nIt is a programmer error to call this on a node which doesn\u2019t hold an\narray value. Use `JSON_NODE_HOLDS_ARRAY` first."
                            },
                            "source-position": {
                                "@filename": "../json-glib/json-types.h",
                                "@line": "237"
                            },
                            "return-value": {
                                "@transfer-ownership": "full",
                                "@nullable": "1",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "../json-glib/json-node.c",
                                    "@line": "698",
                                    "#text": "the JSON array with its reference\n  count increased."
                                },
                                "type": {
                                    "@name": "Array",
                                    "@c:type": "JsonArray*"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "node",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../json-glib/json-node.c",
                                        "@line": "689",
                                        "#text": "a node holding an array"
                                    },
                                    "type": {
                                        "@name": "Node",
                                        "@c:type": "JsonNode*"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "dup_object",
                            "@c:identifier": "json_node_dup_object",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../json-glib/json-node.c",
                                "@line": "583",
                                "#text": "Retrieves the object inside @node.\n\nThe reference count of the returned object is increased.\n\nIt is a programmer error to call this on a node which doesn\u2019t hold an\nobject value. Use `JSON_NODE_HOLDS_OBJECT` first."
                            },
                            "source-position": {
                                "@filename": "../json-glib/json-types.h",
                                "@line": "227"
                            },
                            "return-value": {
                                "@transfer-ownership": "full",
                                "@nullable": "1",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "../json-glib/json-node.c",
                                    "@line": "594",
                                    "#text": "the JSON object"
                                },
                                "type": {
                                    "@name": "Object",
                                    "@c:type": "JsonObject*"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "node",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../json-glib/json-node.c",
                                        "@line": "585",
                                        "#text": "a node holding a JSON object"
                                    },
                                    "type": {
                                        "@name": "Node",
                                        "@c:type": "JsonNode*"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "dup_string",
                            "@c:identifier": "json_node_dup_string",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../json-glib/json-node.c",
                                "@line": "1069",
                                "#text": "Gets a copy of the string value stored inside a node.\n\nIf the node does not hold a string value, `NULL` is returned."
                            },
                            "source-position": {
                                "@filename": "../json-glib/json-types.h",
                                "@line": "250"
                            },
                            "return-value": {
                                "@transfer-ownership": "full",
                                "@nullable": "1",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "../json-glib/json-node.c",
                                    "@line": "1077",
                                    "#text": "a copy of the string\n  inside the node"
                                },
                                "type": {
                                    "@name": "utf8",
                                    "@c:type": "gchar*"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "node",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../json-glib/json-node.c",
                                        "@line": "1071",
                                        "#text": "a node holding a string"
                                    },
                                    "type": {
                                        "@name": "Node",
                                        "@c:type": "JsonNode*"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "equal",
                            "@c:identifier": "json_node_equal",
                            "@version": "1.2",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../json-glib/json-node.c",
                                "@line": "1453",
                                "#text": "Check whether @a and @b are equal node, meaning they have the same\ntype and same values (checked recursively).\n\nNote that integer values are compared numerically, ignoring type, so a\ndouble value 4.0 is equal to the integer value 4."
                            },
                            "source-position": {
                                "@filename": "../json-glib/json-types.h",
                                "@line": "286"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "../json-glib/json-node.c",
                                    "@line": "1464",
                                    "#text": "`TRUE` if @a and @b are equal; `FALSE` otherwise"
                                },
                                "type": {
                                    "@name": "gboolean",
                                    "@c:type": "gboolean"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "a",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../json-glib/json-node.c",
                                        "@line": "1455",
                                        "#text": "a JSON node"
                                    },
                                    "type": {
                                        "@name": "Node",
                                        "@c:type": "gconstpointer"
                                    }
                                },
                                "parameter": {
                                    "@name": "b",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../json-glib/json-node.c",
                                        "@line": "1456",
                                        "#text": "another JSON node"
                                    },
                                    "type": {
                                        "@name": "Node",
                                        "@c:type": "gconstpointer"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "free",
                            "@c:identifier": "json_node_free",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../json-glib/json-node.c",
                                "@line": "836",
                                "#text": "Frees the resources allocated by the node."
                            },
                            "source-position": {
                                "@filename": "../json-glib/json-types.h",
                                "@line": "199"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "type": {
                                    "@name": "none",
                                    "@c:type": "void"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "node",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../json-glib/json-node.c",
                                        "@line": "838",
                                        "#text": "the node to free"
                                    },
                                    "type": {
                                        "@name": "Node",
                                        "@c:type": "JsonNode*"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "get_array",
                            "@c:identifier": "json_node_get_array",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../json-glib/json-node.c",
                                "@line": "667",
                                "#text": "Retrieves the JSON array stored inside a node.\n\nIt is a programmer error to call this on a node which doesn\u2019t hold an\narray value. Use `JSON_NODE_HOLDS_ARRAY` first."
                            },
                            "source-position": {
                                "@filename": "../json-glib/json-types.h",
                                "@line": "235"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "@nullable": "1",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "../json-glib/json-node.c",
                                    "@line": "676",
                                    "#text": "the JSON array"
                                },
                                "type": {
                                    "@name": "Array",
                                    "@c:type": "JsonArray*"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "node",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../json-glib/json-node.c",
                                        "@line": "669",
                                        "#text": "a node holding an array"
                                    },
                                    "type": {
                                        "@name": "Node",
                                        "@c:type": "JsonNode*"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "get_boolean",
                            "@c:identifier": "json_node_get_boolean",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../json-glib/json-node.c",
                                "@line": "1241",
                                "#text": "Gets the boolean value stored inside a node.\n\nIf the node holds an integer or double value which is zero, `FALSE` is\nreturned; otherwise `TRUE` is returned.\n\nIf the node holds a `JSON_NODE_NULL` value or a value of another\nnon-boolean type, `FALSE` is returned."
                            },
                            "source-position": {
                                "@filename": "../json-glib/json-types.h",
                                "@line": "265"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "../json-glib/json-node.c",
                                    "@line": "1253",
                                    "#text": "a boolean value."
                                },
                                "type": {
                                    "@name": "gboolean",
                                    "@c:type": "gboolean"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "node",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../json-glib/json-node.c",
                                        "@line": "1243",
                                        "#text": "a node holding a boolean value"
                                    },
                                    "type": {
                                        "@name": "Node",
                                        "@c:type": "JsonNode*"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "get_double",
                            "@c:identifier": "json_node_get_double",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../json-glib/json-node.c",
                                "@line": "1178",
                                "#text": "Gets the double value stored inside a node.\n\nIf the node holds an integer value, it is returned as a double.\n\nIf the node holds a `FALSE` boolean value, `0.0` is returned; otherwise\na non-zero double is returned.\n\nIf the node holds a `JSON_NODE_NULL` value or a value of another\nnon-double type, `0.0` is returned."
                            },
                            "source-position": {
                                "@filename": "../json-glib/json-types.h",
                                "@line": "260"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "../json-glib/json-node.c",
                                    "@line": "1192",
                                    "#text": "a double value."
                                },
                                "type": {
                                    "@name": "gdouble",
                                    "@c:type": "gdouble"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "node",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../json-glib/json-node.c",
                                        "@line": "1180",
                                        "#text": "a node holding a floating point value"
                                    },
                                    "type": {
                                        "@name": "Node",
                                        "@c:type": "JsonNode*"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "get_int",
                            "@c:identifier": "json_node_get_int",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../json-glib/json-node.c",
                                "@line": "1115",
                                "#text": "Gets the integer value stored inside a node.\n\nIf the node holds a double value, its integer component is returned.\n\nIf the node holds a `FALSE` boolean value, `0` is returned; otherwise,\na non-zero integer is returned.\n\nIf the node holds a `JSON_NODE_NULL` value or a value of another\nnon-integer type, `0` is returned."
                            },
                            "source-position": {
                                "@filename": "../json-glib/json-types.h",
                                "@line": "255"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "../json-glib/json-node.c",
                                    "@line": "1129",
                                    "#text": "an integer value."
                                },
                                "type": {
                                    "@name": "gint64",
                                    "@c:type": "gint64"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "node",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../json-glib/json-node.c",
                                        "@line": "1117",
                                        "#text": "a node holding an integer"
                                    },
                                    "type": {
                                        "@name": "Node",
                                        "@c:type": "JsonNode*"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "get_node_type",
                            "@c:identifier": "json_node_get_node_type",
                            "@version": "0.8",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../json-glib/json-node.c",
                                "@line": "1275",
                                "#text": "Retrieves the type of a @node."
                            },
                            "source-position": {
                                "@filename": "../json-glib/json-types.h",
                                "@line": "207"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "../json-glib/json-node.c",
                                    "@line": "1281",
                                    "#text": "the type of the node"
                                },
                                "type": {
                                    "@name": "NodeType",
                                    "@c:type": "JsonNodeType"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "node",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../json-glib/json-node.c",
                                        "@line": "1277",
                                        "#text": "the node to check"
                                    },
                                    "type": {
                                        "@name": "Node",
                                        "@c:type": "JsonNode*"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "get_object",
                            "@c:identifier": "json_node_get_object",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../json-glib/json-node.c",
                                "@line": "563",
                                "#text": "Retrieves the object stored inside a node.\n\nIt is a programmer error to call this on a node which doesn\u2019t hold an\nobject value. Use `JSON_NODE_HOLDS_OBJECT` first."
                            },
                            "source-position": {
                                "@filename": "../json-glib/json-types.h",
                                "@line": "225"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "@nullable": "1",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "../json-glib/json-node.c",
                                    "@line": "572",
                                    "#text": "the JSON object"
                                },
                                "type": {
                                    "@name": "Object",
                                    "@c:type": "JsonObject*"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "node",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../json-glib/json-node.c",
                                        "@line": "565",
                                        "#text": "a node holding a JSON object"
                                    },
                                    "type": {
                                        "@name": "Node",
                                        "@c:type": "JsonNode*"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "get_parent",
                            "@c:identifier": "json_node_get_parent",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../json-glib/json-node.c",
                                "@line": "1001",
                                "#text": "Retrieves the parent node of the given @node."
                            },
                            "source-position": {
                                "@filename": "../json-glib/json-types.h",
                                "@line": "214"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "@nullable": "1",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "../json-glib/json-node.c",
                                    "@line": "1007",
                                    "#text": "the parent node, or `NULL` if @node\n  is the root node"
                                },
                                "type": {
                                    "@name": "Node",
                                    "@c:type": "JsonNode*"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "node",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../json-glib/json-node.c",
                                        "@line": "1003",
                                        "#text": "the node to query"
                                    },
                                    "type": {
                                        "@name": "Node",
                                        "@c:type": "JsonNode*"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "get_string",
                            "@c:identifier": "json_node_get_string",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../json-glib/json-node.c",
                                "@line": "1045",
                                "#text": "Gets the string value stored inside a node.\n\nIf the node does not hold a string value, `NULL` is returned."
                            },
                            "source-position": {
                                "@filename": "../json-glib/json-types.h",
                                "@line": "248"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "@nullable": "1",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "../json-glib/json-node.c",
                                    "@line": "1053",
                                    "#text": "a string value."
                                },
                                "type": {
                                    "@name": "utf8",
                                    "@c:type": "const gchar*"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "node",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../json-glib/json-node.c",
                                        "@line": "1047",
                                        "#text": "a node holding a string"
                                    },
                                    "type": {
                                        "@name": "Node",
                                        "@c:type": "JsonNode*"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "get_value",
                            "@c:identifier": "json_node_get_value",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../json-glib/json-node.c",
                                "@line": "713",
                                "#text": "Retrieves a value from a node and copies into @value.\n\nWhen done using it, call `g_value_unset()` on the `GValue` to free the\nassociated resources.\n\nIt is a programmer error to call this on a node which doesn\u2019t hold a scalar\nvalue. Use `JSON_NODE_HOLDS_VALUE` first."
                            },
                            "source-position": {
                                "@filename": "../json-glib/json-types.h",
                                "@line": "242"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "type": {
                                    "@name": "none",
                                    "@c:type": "void"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "node",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../json-glib/json-node.c",
                                        "@line": "715",
                                        "#text": "a node"
                                    },
                                    "type": {
                                        "@name": "Node",
                                        "@c:type": "JsonNode*"
                                    }
                                },
                                "parameter": {
                                    "@name": "value",
                                    "@direction": "out",
                                    "@caller-allocates": "1",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../json-glib/json-node.c",
                                        "@line": "716",
                                        "#text": "return location for an uninitialized value"
                                    },
                                    "type": {
                                        "@name": "GObject.Value",
                                        "@c:type": "GValue*"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "get_value_type",
                            "@c:identifier": "json_node_get_value_type",
                            "@version": "0.4",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../json-glib/json-node.c",
                                "@line": "74",
                                "#text": "Returns the `GType` of the payload of the node.\n\nFor `JSON_NODE_NULL` nodes, the returned type is `G_TYPE_INVALID`."
                            },
                            "source-position": {
                                "@filename": "../json-glib/json-types.h",
                                "@line": "209"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "../json-glib/json-node.c",
                                    "@line": "82",
                                    "#text": "the type for the payload"
                                },
                                "type": {
                                    "@name": "GType",
                                    "@c:type": "GType"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "node",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../json-glib/json-node.c",
                                        "@line": "76",
                                        "#text": "the node to check"
                                    },
                                    "type": {
                                        "@name": "Node",
                                        "@c:type": "JsonNode*"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "hash",
                            "@c:identifier": "json_node_hash",
                            "@version": "1.2",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../json-glib/json-node.c",
                                "@line": "1409",
                                "#text": "Calculate a hash value for the given @key.\n\nThe hash is calculated over the node and its value, recursively. If the node\nis immutable, this is a fast operation; otherwise, it scales proportionally\nwith the size of the node\u2019s value (for example, with the number of members\nin the JSON object if this node contains an object)."
                            },
                            "source-position": {
                                "@filename": "../json-glib/json-types.h",
                                "@line": "284"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "../json-glib/json-node.c",
                                    "@line": "1420",
                                    "#text": "hash value for @key"
                                },
                                "type": {
                                    "@name": "guint",
                                    "@c:type": "guint"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "key",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../json-glib/json-node.c",
                                        "@line": "1411",
                                        "#text": "a JSON node to hash"
                                    },
                                    "type": {
                                        "@name": "Node",
                                        "@c:type": "gconstpointer"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "init",
                            "@c:identifier": "json_node_init",
                            "@version": "0.16",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../json-glib/json-node.c",
                                "@line": "166",
                                "#text": "Initializes a @node to a specific @type.\n\nIf the node has already been initialized once, it will be reset to\nthe given type, and any data contained will be cleared."
                            },
                            "source-position": {
                                "@filename": "../json-glib/json-types.h",
                                "@line": "173"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "../json-glib/json-node.c",
                                    "@line": "176",
                                    "#text": "the initialized node"
                                },
                                "type": {
                                    "@name": "Node",
                                    "@c:type": "JsonNode*"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "node",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../json-glib/json-node.c",
                                        "@line": "168",
                                        "#text": "the node to initialize"
                                    },
                                    "type": {
                                        "@name": "Node",
                                        "@c:type": "JsonNode*"
                                    }
                                },
                                "parameter": {
                                    "@name": "type",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../json-glib/json-node.c",
                                        "@line": "169",
                                        "#text": "the type of JSON node to initialize @node to"
                                    },
                                    "type": {
                                        "@name": "NodeType",
                                        "@c:type": "JsonNodeType"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "init_array",
                            "@c:identifier": "json_node_init_array",
                            "@version": "0.16",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../json-glib/json-node.c",
                                "@line": "223",
                                "#text": "Initializes @node to `JSON_NODE_ARRAY` and sets @array into it.\n\nThis function will take a reference on @array.\n\nIf the node has already been initialized once, it will be reset to\nthe given type, and any data contained will be cleared."
                            },
                            "source-position": {
                                "@filename": "../json-glib/json-types.h",
                                "@line": "179"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "../json-glib/json-node.c",
                                    "@line": "235",
                                    "#text": "the initialized node"
                                },
                                "type": {
                                    "@name": "Node",
                                    "@c:type": "JsonNode*"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "node",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../json-glib/json-node.c",
                                        "@line": "225",
                                        "#text": "the node to initialize"
                                    },
                                    "type": {
                                        "@name": "Node",
                                        "@c:type": "JsonNode*"
                                    }
                                },
                                "parameter": {
                                    "@name": "array",
                                    "@transfer-ownership": "none",
                                    "@nullable": "1",
                                    "@allow-none": "1",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../json-glib/json-node.c",
                                        "@line": "226",
                                        "#text": "the JSON array to initialize @node with, or `NULL`"
                                    },
                                    "type": {
                                        "@name": "Array",
                                        "@c:type": "JsonArray*"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "init_boolean",
                            "@c:identifier": "json_node_init_boolean",
                            "@version": "0.16",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../json-glib/json-node.c",
                                "@line": "303",
                                "#text": "Initializes @node to `JSON_NODE_VALUE` and sets @value into it.\n\nIf the node has already been initialized once, it will be reset to\nthe given type, and any data contained will be cleared."
                            },
                            "source-position": {
                                "@filename": "../json-glib/json-types.h",
                                "@line": "188"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "../json-glib/json-node.c",
                                    "@line": "313",
                                    "#text": "the initialized node"
                                },
                                "type": {
                                    "@name": "Node",
                                    "@c:type": "JsonNode*"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "node",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../json-glib/json-node.c",
                                        "@line": "305",
                                        "#text": "the node to initialize"
                                    },
                                    "type": {
                                        "@name": "Node",
                                        "@c:type": "JsonNode*"
                                    }
                                },
                                "parameter": {
                                    "@name": "value",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../json-glib/json-node.c",
                                        "@line": "306",
                                        "#text": "a boolean value"
                                    },
                                    "type": {
                                        "@name": "gboolean",
                                        "@c:type": "gboolean"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "init_double",
                            "@c:identifier": "json_node_init_double",
                            "@version": "0.16",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../json-glib/json-node.c",
                                "@line": "277",
                                "#text": "Initializes @node to `JSON_NODE_VALUE` and sets @value into it.\n\nIf the node has already been initialized once, it will be reset to\nthe given type, and any data contained will be cleared."
                            },
                            "source-position": {
                                "@filename": "../json-glib/json-types.h",
                                "@line": "185"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "../json-glib/json-node.c",
                                    "@line": "287",
                                    "#text": "the initialized node"
                                },
                                "type": {
                                    "@name": "Node",
                                    "@c:type": "JsonNode*"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "node",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../json-glib/json-node.c",
                                        "@line": "279",
                                        "#text": "the node to initialize"
                                    },
                                    "type": {
                                        "@name": "Node",
                                        "@c:type": "JsonNode*"
                                    }
                                },
                                "parameter": {
                                    "@name": "value",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../json-glib/json-node.c",
                                        "@line": "280",
                                        "#text": "a floating point value"
                                    },
                                    "type": {
                                        "@name": "gdouble",
                                        "@c:type": "gdouble"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "init_int",
                            "@c:identifier": "json_node_init_int",
                            "@version": "0.16",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../json-glib/json-node.c",
                                "@line": "251",
                                "#text": "Initializes @node to `JSON_NODE_VALUE` and sets @value into it.\n\nIf the node has already been initialized once, it will be reset to\nthe given type, and any data contained will be cleared."
                            },
                            "source-position": {
                                "@filename": "../json-glib/json-types.h",
                                "@line": "182"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "../json-glib/json-node.c",
                                    "@line": "261",
                                    "#text": "the initialized node"
                                },
                                "type": {
                                    "@name": "Node",
                                    "@c:type": "JsonNode*"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "node",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../json-glib/json-node.c",
                                        "@line": "253",
                                        "#text": "the node to initialize"
                                    },
                                    "type": {
                                        "@name": "Node",
                                        "@c:type": "JsonNode*"
                                    }
                                },
                                "parameter": {
                                    "@name": "value",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../json-glib/json-node.c",
                                        "@line": "254",
                                        "#text": "an integer"
                                    },
                                    "type": {
                                        "@name": "gint64",
                                        "@c:type": "gint64"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "init_null",
                            "@c:identifier": "json_node_init_null",
                            "@version": "0.16",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../json-glib/json-node.c",
                                "@line": "355",
                                "#text": "Initializes @node to `JSON_NODE_NULL`.\n\nIf the node has already been initialized once, it will be reset to\nthe given type, and any data contained will be cleared."
                            },
                            "source-position": {
                                "@filename": "../json-glib/json-types.h",
                                "@line": "194"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "../json-glib/json-node.c",
                                    "@line": "364",
                                    "#text": "the initialized node"
                                },
                                "type": {
                                    "@name": "Node",
                                    "@c:type": "JsonNode*"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "node",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../json-glib/json-node.c",
                                        "@line": "357",
                                        "#text": "the node to initialize"
                                    },
                                    "type": {
                                        "@name": "Node",
                                        "@c:type": "JsonNode*"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "init_object",
                            "@c:identifier": "json_node_init_object",
                            "@version": "0.16",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../json-glib/json-node.c",
                                "@line": "195",
                                "#text": "Initializes @node to `JSON_NODE_OBJECT` and sets @object into it.\n\nThis function will take a reference on @object.\n\nIf the node has already been initialized once, it will be reset to\nthe given type, and any data contained will be cleared."
                            },
                            "source-position": {
                                "@filename": "../json-glib/json-types.h",
                                "@line": "176"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "../json-glib/json-node.c",
                                    "@line": "207",
                                    "#text": "the initialized node"
                                },
                                "type": {
                                    "@name": "Node",
                                    "@c:type": "JsonNode*"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "node",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../json-glib/json-node.c",
                                        "@line": "197",
                                        "#text": "the node to initialize"
                                    },
                                    "type": {
                                        "@name": "Node",
                                        "@c:type": "JsonNode*"
                                    }
                                },
                                "parameter": {
                                    "@name": "object",
                                    "@transfer-ownership": "none",
                                    "@nullable": "1",
                                    "@allow-none": "1",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../json-glib/json-node.c",
                                        "@line": "198",
                                        "#text": "the JSON object to initialize @node with, or `NULL`"
                                    },
                                    "type": {
                                        "@name": "Object",
                                        "@c:type": "JsonObject*"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "init_string",
                            "@c:identifier": "json_node_init_string",
                            "@version": "0.16",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../json-glib/json-node.c",
                                "@line": "329",
                                "#text": "Initializes @node to `JSON_NODE_VALUE` and sets @value into it.\n\nIf the node has already been initialized once, it will be reset to\nthe given type, and any data contained will be cleared."
                            },
                            "source-position": {
                                "@filename": "../json-glib/json-types.h",
                                "@line": "191"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "../json-glib/json-node.c",
                                    "@line": "339",
                                    "#text": "the initialized node"
                                },
                                "type": {
                                    "@name": "Node",
                                    "@c:type": "JsonNode*"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "node",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../json-glib/json-node.c",
                                        "@line": "331",
                                        "#text": "the node to initialize"
                                    },
                                    "type": {
                                        "@name": "Node",
                                        "@c:type": "JsonNode*"
                                    }
                                },
                                "parameter": {
                                    "@name": "value",
                                    "@transfer-ownership": "none",
                                    "@nullable": "1",
                                    "@allow-none": "1",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../json-glib/json-node.c",
                                        "@line": "332",
                                        "#text": "a string value"
                                    },
                                    "type": {
                                        "@name": "utf8",
                                        "@c:type": "const char*"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "is_immutable",
                            "@c:identifier": "json_node_is_immutable",
                            "@version": "1.2",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../json-glib/json-node.c",
                                "@line": "903",
                                "#text": "Check whether the given @node has been marked as immutable by calling\n[method@Json.Node.seal] on it."
                            },
                            "source-position": {
                                "@filename": "../json-glib/json-types.h",
                                "@line": "272"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "../json-glib/json-node.c",
                                    "@line": "911",
                                    "#text": "`TRUE` if the @node is immutable"
                                },
                                "type": {
                                    "@name": "gboolean",
                                    "@c:type": "gboolean"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "node",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../json-glib/json-node.c",
                                        "@line": "905",
                                        "#text": "the node to check"
                                    },
                                    "type": {
                                        "@name": "Node",
                                        "@c:type": "JsonNode*"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "is_null",
                            "@c:identifier": "json_node_is_null",
                            "@version": "0.8",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../json-glib/json-node.c",
                                "@line": "1293",
                                "#text": "Checks whether @node is a `JSON_NODE_NULL`.\n\nA `JSON_NODE_NULL` node is not the same as a `NULL` node; a `JSON_NODE_NULL`\nrepresents a literal `null` value in the JSON tree."
                            },
                            "source-position": {
                                "@filename": "../json-glib/json-types.h",
                                "@line": "267"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "../json-glib/json-node.c",
                                    "@line": "1302",
                                    "#text": "`TRUE` if the node is null"
                                },
                                "type": {
                                    "@name": "gboolean",
                                    "@c:type": "gboolean"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "node",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../json-glib/json-node.c",
                                        "@line": "1295",
                                        "#text": "the node to check"
                                    },
                                    "type": {
                                        "@name": "Node",
                                        "@c:type": "JsonNode*"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "ref",
                            "@c:identifier": "json_node_ref",
                            "@version": "1.2",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../json-glib/json-node.c",
                                "@line": "460",
                                "#text": "Increments the reference count of @node."
                            },
                            "source-position": {
                                "@filename": "../json-glib/json-types.h",
                                "@line": "202"
                            },
                            "return-value": {
                                "@transfer-ownership": "full",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "../json-glib/json-node.c",
                                    "@line": "467",
                                    "#text": "a pointer to @node"
                                },
                                "type": {
                                    "@name": "Node",
                                    "@c:type": "JsonNode*"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "node",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../json-glib/json-node.c",
                                        "@line": "462",
                                        "#text": "the node to reference"
                                    },
                                    "type": {
                                        "@name": "Node",
                                        "@c:type": "JsonNode*"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "seal",
                            "@c:identifier": "json_node_seal",
                            "@version": "1.2",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../json-glib/json-node.c",
                                "@line": "858",
                                "#text": "Seals the given node, making it immutable to further changes.\n\nIn order to be sealed, the @node must have a type and value set. The value\nwill be recursively sealed \u2014 if the node holds an object, that JSON object\nwill be sealed, etc.\n\nIf the `node` is already immutable, this is a no-op."
                            },
                            "source-position": {
                                "@filename": "../json-glib/json-types.h",
                                "@line": "270"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "type": {
                                    "@name": "none",
                                    "@c:type": "void"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "node",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../json-glib/json-node.c",
                                        "@line": "860",
                                        "#text": "the node to seal"
                                    },
                                    "type": {
                                        "@name": "Node",
                                        "@c:type": "JsonNode*"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "set_array",
                            "@c:identifier": "json_node_set_array",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../json-glib/json-node.c",
                                "@line": "608",
                                "#text": "Sets @array inside @node.\n\nThe reference count of @array is increased.\n\nIt is a programmer error to call this on a node which doesn\u2019t hold an\narray value. Use `JSON_NODE_HOLDS_ARRAY` first."
                            },
                            "source-position": {
                                "@filename": "../json-glib/json-types.h",
                                "@line": "229"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "type": {
                                    "@name": "none",
                                    "@c:type": "void"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "node",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../json-glib/json-node.c",
                                        "@line": "610",
                                        "#text": "a node initialized to `JSON_NODE_ARRAY`"
                                    },
                                    "type": {
                                        "@name": "Node",
                                        "@c:type": "JsonNode*"
                                    }
                                },
                                "parameter": {
                                    "@name": "array",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../json-glib/json-node.c",
                                        "@line": "611",
                                        "#text": "a JSON array"
                                    },
                                    "type": {
                                        "@name": "Array",
                                        "@c:type": "JsonArray*"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "set_boolean",
                            "@c:identifier": "json_node_set_boolean",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../json-glib/json-node.c",
                                "@line": "1214",
                                "#text": "Sets @value as the boolean content of the @node, replacing any existing\ncontent.\n\nIt is an error to call this on an immutable node, or on a node which is not\na value node."
                            },
                            "source-position": {
                                "@filename": "../json-glib/json-types.h",
                                "@line": "262"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "type": {
                                    "@name": "none",
                                    "@c:type": "void"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "node",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../json-glib/json-node.c",
                                        "@line": "1216",
                                        "#text": "a node initialized to `JSON_NODE_VALUE`"
                                    },
                                    "type": {
                                        "@name": "Node",
                                        "@c:type": "JsonNode*"
                                    }
                                },
                                "parameter": {
                                    "@name": "value",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../json-glib/json-node.c",
                                        "@line": "1217",
                                        "#text": "a boolean value"
                                    },
                                    "type": {
                                        "@name": "gboolean",
                                        "@c:type": "gboolean"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "set_double",
                            "@c:identifier": "json_node_set_double",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../json-glib/json-node.c",
                                "@line": "1151",
                                "#text": "Sets @value as the double content of the @node, replacing any existing\ncontent.\n\nIt is an error to call this on an immutable node, or on a node which is not\na value node."
                            },
                            "source-position": {
                                "@filename": "../json-glib/json-types.h",
                                "@line": "257"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "type": {
                                    "@name": "none",
                                    "@c:type": "void"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "node",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../json-glib/json-node.c",
                                        "@line": "1153",
                                        "#text": "a node initialized to `JSON_NODE_VALUE`"
                                    },
                                    "type": {
                                        "@name": "Node",
                                        "@c:type": "JsonNode*"
                                    }
                                },
                                "parameter": {
                                    "@name": "value",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../json-glib/json-node.c",
                                        "@line": "1154",
                                        "#text": "a double value"
                                    },
                                    "type": {
                                        "@name": "gdouble",
                                        "@c:type": "gdouble"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "set_int",
                            "@c:identifier": "json_node_set_int",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../json-glib/json-node.c",
                                "@line": "1088",
                                "#text": "Sets @value as the integer content of the @node, replacing any existing\ncontent.\n\nIt is an error to call this on an immutable node, or on a node which is not\na value node."
                            },
                            "source-position": {
                                "@filename": "../json-glib/json-types.h",
                                "@line": "252"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "type": {
                                    "@name": "none",
                                    "@c:type": "void"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "node",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../json-glib/json-node.c",
                                        "@line": "1090",
                                        "#text": "a node initialized to `JSON_NODE_VALUE`"
                                    },
                                    "type": {
                                        "@name": "Node",
                                        "@c:type": "JsonNode*"
                                    }
                                },
                                "parameter": {
                                    "@name": "value",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../json-glib/json-node.c",
                                        "@line": "1091",
                                        "#text": "an integer value"
                                    },
                                    "type": {
                                        "@name": "gint64",
                                        "@c:type": "gint64"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "set_object",
                            "@c:identifier": "json_node_set_object",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../json-glib/json-node.c",
                                "@line": "502",
                                "#text": "Sets @objects inside @node.\n\nThe reference count of @object is increased.\n\nIf @object is `NULL`, the node\u2019s existing object is cleared.\n\nIt is an error to call this on an immutable node, or on a node which is not\nan object node."
                            },
                            "source-position": {
                                "@filename": "../json-glib/json-types.h",
                                "@line": "219"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "type": {
                                    "@name": "none",
                                    "@c:type": "void"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "node",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../json-glib/json-node.c",
                                        "@line": "504",
                                        "#text": "a node initialized to `JSON_NODE_OBJECT`"
                                    },
                                    "type": {
                                        "@name": "Node",
                                        "@c:type": "JsonNode*"
                                    }
                                },
                                "parameter": {
                                    "@name": "object",
                                    "@transfer-ownership": "none",
                                    "@nullable": "1",
                                    "@allow-none": "1",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../json-glib/json-node.c",
                                        "@line": "505",
                                        "#text": "a JSON object"
                                    },
                                    "type": {
                                        "@name": "Object",
                                        "@c:type": "JsonObject*"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "set_parent",
                            "@c:identifier": "json_node_set_parent",
                            "@version": "0.8",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../json-glib/json-node.c",
                                "@line": "977",
                                "#text": "Sets the parent node for the given `node`.\n\nIt is an error to call this with an immutable @parent.\n\nThe @node may be immutable."
                            },
                            "source-position": {
                                "@filename": "../json-glib/json-types.h",
                                "@line": "211"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "type": {
                                    "@name": "none",
                                    "@c:type": "void"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "node",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../json-glib/json-node.c",
                                        "@line": "979",
                                        "#text": "the node to change"
                                    },
                                    "type": {
                                        "@name": "Node",
                                        "@c:type": "JsonNode*"
                                    }
                                },
                                "parameter": {
                                    "@name": "parent",
                                    "@transfer-ownership": "none",
                                    "@nullable": "1",
                                    "@allow-none": "1",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../json-glib/json-node.c",
                                        "@line": "980",
                                        "#text": "the parent node"
                                    },
                                    "type": {
                                        "@name": "Node",
                                        "@c:type": "JsonNode*"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "set_string",
                            "@c:identifier": "json_node_set_string",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../json-glib/json-node.c",
                                "@line": "1018",
                                "#text": "Sets @value as the string content of the @node, replacing any existing\ncontent.\n\nIt is an error to call this on an immutable node, or on a node which is not\na value node."
                            },
                            "source-position": {
                                "@filename": "../json-glib/json-types.h",
                                "@line": "245"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "type": {
                                    "@name": "none",
                                    "@c:type": "void"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "node",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../json-glib/json-node.c",
                                        "@line": "1020",
                                        "#text": "a node initialized to `JSON_NODE_VALUE`"
                                    },
                                    "type": {
                                        "@name": "Node",
                                        "@c:type": "JsonNode*"
                                    }
                                },
                                "parameter": {
                                    "@name": "value",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../json-glib/json-node.c",
                                        "@line": "1021",
                                        "#text": "a string value"
                                    },
                                    "type": {
                                        "@name": "utf8",
                                        "@c:type": "const gchar*"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "set_value",
                            "@c:identifier": "json_node_set_value",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../json-glib/json-node.c",
                                "@line": "760",
                                "#text": "Sets a scalar value inside the given node.\n\nThe contents of the given `GValue` are copied into the `JsonNode`.\n\nThe following `GValue` types have a direct mapping to JSON types:\n\n - `G_TYPE_INT64`\n - `G_TYPE_DOUBLE`\n - `G_TYPE_BOOLEAN`\n - `G_TYPE_STRING`\n\nJSON-GLib will also automatically promote the following `GValue` types:\n\n - `G_TYPE_INT` to `G_TYPE_INT64`\n - `G_TYPE_FLOAT` to `G_TYPE_DOUBLE`\n\nIt is an error to call this on an immutable node, or on a node which is not\na value node."
                            },
                            "source-position": {
                                "@filename": "../json-glib/json-types.h",
                                "@line": "239"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "type": {
                                    "@name": "none",
                                    "@c:type": "void"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "node",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../json-glib/json-node.c",
                                        "@line": "762",
                                        "#text": "a node initialized to `JSON_NODE_VALUE`"
                                    },
                                    "type": {
                                        "@name": "Node",
                                        "@c:type": "JsonNode*"
                                    }
                                },
                                "parameter": {
                                    "@name": "value",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../json-glib/json-node.c",
                                        "@line": "763",
                                        "#text": "the value to set"
                                    },
                                    "type": {
                                        "@name": "GObject.Value",
                                        "@c:type": "const GValue*"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "take_array",
                            "@c:identifier": "json_node_take_array",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../json-glib/json-node.c",
                                "@line": "637",
                                "#text": "Sets @array inside @node.\n\nThe reference count of @array is not increased.\n\nIt is a programmer error to call this on a node which doesn\u2019t hold an\narray value. Use `JSON_NODE_HOLDS_ARRAY` first."
                            },
                            "source-position": {
                                "@filename": "../json-glib/json-types.h",
                                "@line": "232"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "type": {
                                    "@name": "none",
                                    "@c:type": "void"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "node",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../json-glib/json-node.c",
                                        "@line": "639",
                                        "#text": "a node initialized to `JSON_NODE_ARRAY`"
                                    },
                                    "type": {
                                        "@name": "Node",
                                        "@c:type": "JsonNode*"
                                    }
                                },
                                "parameter": {
                                    "@name": "array",
                                    "@transfer-ownership": "full",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../json-glib/json-node.c",
                                        "@line": "640",
                                        "#text": "a JSON array"
                                    },
                                    "type": {
                                        "@name": "Array",
                                        "@c:type": "JsonArray*"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "take_object",
                            "@c:identifier": "json_node_take_object",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../json-glib/json-node.c",
                                "@line": "533",
                                "#text": "Sets @object inside @node.\n\nThe reference count of @object is not increased.\n\nIt is an error to call this on an immutable node, or on a node which is not\nan object node."
                            },
                            "source-position": {
                                "@filename": "../json-glib/json-types.h",
                                "@line": "222"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "type": {
                                    "@name": "none",
                                    "@c:type": "void"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "node",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../json-glib/json-node.c",
                                        "@line": "535",
                                        "#text": "a node initialized to `JSON_NODE_OBJECT`"
                                    },
                                    "type": {
                                        "@name": "Node",
                                        "@c:type": "JsonNode*"
                                    }
                                },
                                "parameter": {
                                    "@name": "object",
                                    "@transfer-ownership": "full",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../json-glib/json-node.c",
                                        "@line": "536",
                                        "#text": "a JSON object"
                                    },
                                    "type": {
                                        "@name": "Object",
                                        "@c:type": "JsonObject*"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "type_name",
                            "@c:identifier": "json_node_type_name",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../json-glib/json-node.c",
                                "@line": "921",
                                "#text": "Retrieves the user readable name of the data type contained by @node.\n\n**Note**: The name is only meant for debugging purposes, and there is no\nguarantee the name will stay the same across different versions."
                            },
                            "source-position": {
                                "@filename": "../json-glib/json-types.h",
                                "@line": "216"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "../json-glib/json-node.c",
                                    "@line": "930",
                                    "#text": "a string containing the name of the type"
                                },
                                "type": {
                                    "@name": "utf8",
                                    "@c:type": "const gchar*"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "node",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../json-glib/json-node.c",
                                        "@line": "923",
                                        "#text": "a node"
                                    },
                                    "type": {
                                        "@name": "Node",
                                        "@c:type": "JsonNode*"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "unref",
                            "@c:identifier": "json_node_unref",
                            "@version": "1.2",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../json-glib/json-node.c",
                                "@line": "479",
                                "#text": "Decrements the reference count of @node.\n\nIf the reference count reaches zero, the node is freed."
                            },
                            "source-position": {
                                "@filename": "../json-glib/json-types.h",
                                "@line": "204"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "type": {
                                    "@name": "none",
                                    "@c:type": "void"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "node",
                                    "@transfer-ownership": "full",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../json-glib/json-node.c",
                                        "@line": "481",
                                        "#text": "the node to unreference"
                                    },
                                    "type": {
                                        "@name": "Node",
                                        "@c:type": "JsonNode*"
                                    }
                                }
                            }
                        }
                    ]
                },
                {
                    "@name": "Object",
                    "@c:type": "JsonObject",
                    "@glib:type-name": "JsonObject",
                    "@glib:get-type": "json_object_get_type",
                    "@c:symbol-prefix": "object",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "../json-glib/json-object.c",
                        "@line": "31",
                        "#text": "`JsonObject` is the representation of the object type inside JSON.\n\nA `JsonObject` contains [struct@Json.Node] \"members\", which may contain\nfundamental types, arrays or other objects; each member of an object is\naccessed using a unique string, or \"name\".\n\nSince objects can be arbitrarily big, copying them can be expensive; for\nthis reason they are reference counted. You can control the lifetime of\na `JsonObject` using [method@Json.Object.ref] and [method@Json.Object.unref].\n\nTo add or overwrite a member with a given name, use [method@Json.Object.set_member].\n\nTo extract a member with a given name, use [method@Json.Object.get_member].\n\nTo retrieve the list of members, use [method@Json.Object.get_members].\n\nTo retrieve the size of the object (that is, the number of members it has),\nuse [method@Json.Object.get_size]."
                    },
                    "source-position": {
                        "@filename": "../json-glib/json-types.h",
                        "@line": "100"
                    },
                    "constructor": {
                        "@name": "new",
                        "@c:identifier": "json_object_new",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "../json-glib/json-object.c",
                            "@line": "56",
                            "#text": "Creates a new object."
                        },
                        "source-position": {
                            "@filename": "../json-glib/json-types.h",
                            "@line": "295"
                        },
                        "return-value": {
                            "@transfer-ownership": "full",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../json-glib/json-object.c",
                                "@line": "61",
                                "#text": "the newly created object"
                            },
                            "type": {
                                "@name": "Object",
                                "@c:type": "JsonObject*"
                            }
                        }
                    },
                    "method": [
                        {
                            "@name": "add_member",
                            "@c:identifier": "json_object_add_member",
                            "@deprecated": "1",
                            "@deprecated-version": "0.8",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../json-glib/json-object.c",
                                "@line": "206",
                                "#text": "Adds a new member for the given name and value into an object.\n\nThis function will return if the object already contains a member\nwith the same name."
                            },
                            "doc-deprecated": {
                                "@xml:space": "preserve",
                                "#text": "Use [method@Json.Object.set_member] instead"
                            },
                            "source-position": {
                                "@filename": "../json-glib/json-types.h",
                                "@line": "302"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "type": {
                                    "@name": "none",
                                    "@c:type": "void"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "object",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../json-glib/json-object.c",
                                        "@line": "208",
                                        "#text": "a JSON object"
                                    },
                                    "type": {
                                        "@name": "Object",
                                        "@c:type": "JsonObject*"
                                    }
                                },
                                "parameter": [
                                    {
                                        "@name": "member_name",
                                        "@transfer-ownership": "none",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "../json-glib/json-object.c",
                                            "@line": "209",
                                            "#text": "the name of the member"
                                        },
                                        "type": {
                                            "@name": "utf8",
                                            "@c:type": "const gchar*"
                                        }
                                    },
                                    {
                                        "@name": "node",
                                        "@transfer-ownership": "full",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "../json-glib/json-object.c",
                                            "@line": "210",
                                            "#text": "the value of the member"
                                        },
                                        "type": {
                                            "@name": "Node",
                                            "@c:type": "JsonNode*"
                                        }
                                    }
                                ]
                            }
                        },
                        {
                            "@name": "dup_member",
                            "@c:identifier": "json_object_dup_member",
                            "@version": "0.6",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../json-glib/json-object.c",
                                "@line": "521",
                                "#text": "Retrieves a copy of the value of the given member inside an object."
                            },
                            "source-position": {
                                "@filename": "../json-glib/json-types.h",
                                "@line": "343"
                            },
                            "return-value": {
                                "@transfer-ownership": "full",
                                "@nullable": "1",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "../json-glib/json-object.c",
                                    "@line": "528",
                                    "#text": "a copy of the value for the\n  requested object member"
                                },
                                "type": {
                                    "@name": "Node",
                                    "@c:type": "JsonNode*"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "object",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../json-glib/json-object.c",
                                        "@line": "523",
                                        "#text": "a JSON object"
                                    },
                                    "type": {
                                        "@name": "Object",
                                        "@c:type": "JsonObject*"
                                    }
                                },
                                "parameter": {
                                    "@name": "member_name",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../json-glib/json-object.c",
                                        "@line": "524",
                                        "#text": "the name of the JSON object member to access"
                                    },
                                    "type": {
                                        "@name": "utf8",
                                        "@c:type": "const gchar*"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "equal",
                            "@c:identifier": "json_object_equal",
                            "@version": "1.2",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../json-glib/json-object.c",
                                "@line": "1019",
                                "#text": "Check whether @a and @b are equal objects, meaning they have the same\nset of members, and the values of corresponding members are equal."
                            },
                            "source-position": {
                                "@filename": "../json-glib/json-types.h",
                                "@line": "405"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "../json-glib/json-object.c",
                                    "@line": "1027",
                                    "#text": "`TRUE` if @a and @b are equal, and `FALSE` otherwise"
                                },
                                "type": {
                                    "@name": "gboolean",
                                    "@c:type": "gboolean"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "a",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../json-glib/json-object.c",
                                        "@line": "1021",
                                        "#text": "a JSON object"
                                    },
                                    "type": {
                                        "@name": "Object",
                                        "@c:type": "gconstpointer"
                                    }
                                },
                                "parameter": {
                                    "@name": "b",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../json-glib/json-object.c",
                                        "@line": "1022",
                                        "#text": "another JSON object"
                                    },
                                    "type": {
                                        "@name": "Object",
                                        "@c:type": "gconstpointer"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "foreach_member",
                            "@c:identifier": "json_object_foreach_member",
                            "@version": "0.8",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../json-glib/json-object.c",
                                "@line": "940",
                                "#text": "Iterates over all members of @object and calls @func on\neach one of them.\n\nIt is safe to change the value of a member of the oobject\nfrom within the iterator function, but it is not safe to add or\nremove members from the object.\n\nThe order in which the object members are iterated is the\ninsertion order."
                            },
                            "source-position": {
                                "@filename": "../json-glib/json-types.h",
                                "@line": "393"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "type": {
                                    "@name": "none",
                                    "@c:type": "void"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "object",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../json-glib/json-object.c",
                                        "@line": "942",
                                        "#text": "a JSON object"
                                    },
                                    "type": {
                                        "@name": "Object",
                                        "@c:type": "JsonObject*"
                                    }
                                },
                                "parameter": [
                                    {
                                        "@name": "func",
                                        "@transfer-ownership": "none",
                                        "@scope": "call",
                                        "@closure": "1",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "../json-glib/json-object.c",
                                            "@line": "943",
                                            "#text": "the function to be called on each member"
                                        },
                                        "type": {
                                            "@name": "ObjectForeach",
                                            "@c:type": "JsonObjectForeach"
                                        }
                                    },
                                    {
                                        "@name": "data",
                                        "@transfer-ownership": "none",
                                        "@nullable": "1",
                                        "@allow-none": "1",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "../json-glib/json-object.c",
                                            "@line": "944",
                                            "#text": "data to be passed to the function"
                                        },
                                        "type": {
                                            "@name": "gpointer",
                                            "@c:type": "gpointer"
                                        }
                                    }
                                ]
                            }
                        },
                        {
                            "@name": "get_array_member",
                            "@c:identifier": "json_object_get_array_member",
                            "@version": "0.8",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../json-glib/json-object.c",
                                "@line": "803",
                                "#text": "Convenience function that retrieves the array\nstored in @member_name of @object. It is an error to specify a\n@member_name which does not exist.\n\nIf @member_name contains `null`, then this function will return `NULL`.\n\nSee also: [method@Json.Object.get_member], [method@Json.Object.has_member]"
                            },
                            "source-position": {
                                "@filename": "../json-glib/json-types.h",
                                "@line": "377"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "@nullable": "1",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "../json-glib/json-object.c",
                                    "@line": "816",
                                    "#text": "the array inside the object's member"
                                },
                                "type": {
                                    "@name": "Array",
                                    "@c:type": "JsonArray*"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "object",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../json-glib/json-object.c",
                                        "@line": "805",
                                        "#text": "a JSON object"
                                    },
                                    "type": {
                                        "@name": "Object",
                                        "@c:type": "JsonObject*"
                                    }
                                },
                                "parameter": {
                                    "@name": "member_name",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../json-glib/json-object.c",
                                        "@line": "806",
                                        "#text": "the name of the member"
                                    },
                                    "type": {
                                        "@name": "utf8",
                                        "@c:type": "const gchar*"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "get_boolean_member",
                            "@c:identifier": "json_object_get_boolean_member",
                            "@version": "0.8",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../json-glib/json-object.c",
                                "@line": "690",
                                "#text": "Convenience function that retrieves the boolean value\nstored in @member_name of @object. It is an error to specify a\n@member_name which does not exist.\n\nSee also: [method@Json.Object.get_boolean_member_with_default],\n  [method@Json.Object.get_member], [method@Json.Object.has_member]"
                            },
                            "source-position": {
                                "@filename": "../json-glib/json-types.h",
                                "@line": "360"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "../json-glib/json-object.c",
                                    "@line": "702",
                                    "#text": "the boolean value of the object's member"
                                },
                                "type": {
                                    "@name": "gboolean",
                                    "@c:type": "gboolean"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "object",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../json-glib/json-object.c",
                                        "@line": "692",
                                        "#text": "a JSON object"
                                    },
                                    "type": {
                                        "@name": "Object",
                                        "@c:type": "JsonObject*"
                                    }
                                },
                                "parameter": {
                                    "@name": "member_name",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../json-glib/json-object.c",
                                        "@line": "693",
                                        "#text": "the name of the member"
                                    },
                                    "type": {
                                        "@name": "utf8",
                                        "@c:type": "const gchar*"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "get_boolean_member_with_default",
                            "@c:identifier": "json_object_get_boolean_member_with_default",
                            "@version": "1.6",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../json-glib/json-object.c",
                                "@line": "708",
                                "#text": "Convenience function that retrieves the boolean value\nstored in @member_name of @object.\n\nIf @member_name does not exist, does not contain a scalar value,\nor contains `null`, then @default_value is returned instead."
                            },
                            "source-position": {
                                "@filename": "../json-glib/json-types.h",
                                "@line": "363"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "../json-glib/json-object.c",
                                    "@line": "720",
                                    "#text": "the boolean value of the object's member, or the\n  given default"
                                },
                                "type": {
                                    "@name": "gboolean",
                                    "@c:type": "gboolean"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "object",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../json-glib/json-object.c",
                                        "@line": "710",
                                        "#text": "a JSON object"
                                    },
                                    "type": {
                                        "@name": "Object",
                                        "@c:type": "JsonObject*"
                                    }
                                },
                                "parameter": [
                                    {
                                        "@name": "member_name",
                                        "@transfer-ownership": "none",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "../json-glib/json-object.c",
                                            "@line": "711",
                                            "#text": "the name of the @object member"
                                        },
                                        "type": {
                                            "@name": "utf8",
                                            "@c:type": "const char*"
                                        }
                                    },
                                    {
                                        "@name": "default_value",
                                        "@transfer-ownership": "none",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "../json-glib/json-object.c",
                                            "@line": "712",
                                            "#text": "the value to return if @member_name is not valid"
                                        },
                                        "type": {
                                            "@name": "gboolean",
                                            "@c:type": "gboolean"
                                        }
                                    }
                                ]
                            }
                        },
                        {
                            "@name": "get_double_member",
                            "@c:identifier": "json_object_get_double_member",
                            "@version": "0.8",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../json-glib/json-object.c",
                                "@line": "653",
                                "#text": "Convenience function that retrieves the floating point value\nstored in @member_name of @object. It is an error to specify a\n@member_name which does not exist.\n\nSee also: [method@Json.Object.get_double_member_with_default],\n  [method@Json.Object.get_member], [method@Json.Object.has_member]"
                            },
                            "source-position": {
                                "@filename": "../json-glib/json-types.h",
                                "@line": "353"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "../json-glib/json-object.c",
                                    "@line": "665",
                                    "#text": "the floating point value of the object's member"
                                },
                                "type": {
                                    "@name": "gdouble",
                                    "@c:type": "gdouble"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "object",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../json-glib/json-object.c",
                                        "@line": "655",
                                        "#text": "a JSON object"
                                    },
                                    "type": {
                                        "@name": "Object",
                                        "@c:type": "JsonObject*"
                                    }
                                },
                                "parameter": {
                                    "@name": "member_name",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../json-glib/json-object.c",
                                        "@line": "656",
                                        "#text": "the name of the member"
                                    },
                                    "type": {
                                        "@name": "utf8",
                                        "@c:type": "const gchar*"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "get_double_member_with_default",
                            "@c:identifier": "json_object_get_double_member_with_default",
                            "@version": "1.6",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../json-glib/json-object.c",
                                "@line": "671",
                                "#text": "Convenience function that retrieves the floating point value\nstored in @member_name of @object.\n\nIf @member_name does not exist, does not contain a scalar value,\nor contains `null`, then @default_value is returned instead."
                            },
                            "source-position": {
                                "@filename": "../json-glib/json-types.h",
                                "@line": "356"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "../json-glib/json-object.c",
                                    "@line": "683",
                                    "#text": "the floating point value of the object's member, or the\n  given default"
                                },
                                "type": {
                                    "@name": "gdouble",
                                    "@c:type": "double"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "object",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../json-glib/json-object.c",
                                        "@line": "673",
                                        "#text": "a JSON object"
                                    },
                                    "type": {
                                        "@name": "Object",
                                        "@c:type": "JsonObject*"
                                    }
                                },
                                "parameter": [
                                    {
                                        "@name": "member_name",
                                        "@transfer-ownership": "none",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "../json-glib/json-object.c",
                                            "@line": "674",
                                            "#text": "the name of the @object member"
                                        },
                                        "type": {
                                            "@name": "utf8",
                                            "@c:type": "const char*"
                                        }
                                    },
                                    {
                                        "@name": "default_value",
                                        "@transfer-ownership": "none",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "../json-glib/json-object.c",
                                            "@line": "675",
                                            "#text": "the value to return if @member_name is not valid"
                                        },
                                        "type": {
                                            "@name": "gdouble",
                                            "@c:type": "double"
                                        }
                                    }
                                ]
                            }
                        },
                        {
                            "@name": "get_int_member",
                            "@c:identifier": "json_object_get_int_member",
                            "@version": "0.8",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../json-glib/json-object.c",
                                "@line": "616",
                                "#text": "Convenience function that retrieves the integer value\nstored in @member_name of @object. It is an error to specify a\n@member_name which does not exist.\n\nSee also: [method@Json.Object.get_int_member_with_default],\n  [method@Json.Object.get_member], [method@Json.Object.has_member]"
                            },
                            "source-position": {
                                "@filename": "../json-glib/json-types.h",
                                "@line": "346"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "../json-glib/json-object.c",
                                    "@line": "628",
                                    "#text": "the integer value of the object's member"
                                },
                                "type": {
                                    "@name": "gint64",
                                    "@c:type": "gint64"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "object",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../json-glib/json-object.c",
                                        "@line": "618",
                                        "#text": "a JSON object"
                                    },
                                    "type": {
                                        "@name": "Object",
                                        "@c:type": "JsonObject*"
                                    }
                                },
                                "parameter": {
                                    "@name": "member_name",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../json-glib/json-object.c",
                                        "@line": "619",
                                        "#text": "the name of the object member"
                                    },
                                    "type": {
                                        "@name": "utf8",
                                        "@c:type": "const gchar*"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "get_int_member_with_default",
                            "@c:identifier": "json_object_get_int_member_with_default",
                            "@version": "1.6",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../json-glib/json-object.c",
                                "@line": "634",
                                "#text": "Convenience function that retrieves the integer value\nstored in @member_name of @object.\n\nIf @member_name does not exist, does not contain a scalar value,\nor contains `null`, then @default_value is returned instead."
                            },
                            "source-position": {
                                "@filename": "../json-glib/json-types.h",
                                "@line": "349"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "../json-glib/json-object.c",
                                    "@line": "646",
                                    "#text": "the integer value of the object's member, or the\n  given default"
                                },
                                "type": {
                                    "@name": "gint64",
                                    "@c:type": "gint64"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "object",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../json-glib/json-object.c",
                                        "@line": "636",
                                        "#text": "a JSON object"
                                    },
                                    "type": {
                                        "@name": "Object",
                                        "@c:type": "JsonObject*"
                                    }
                                },
                                "parameter": [
                                    {
                                        "@name": "member_name",
                                        "@transfer-ownership": "none",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "../json-glib/json-object.c",
                                            "@line": "637",
                                            "#text": "the name of the object member"
                                        },
                                        "type": {
                                            "@name": "utf8",
                                            "@c:type": "const char*"
                                        }
                                    },
                                    {
                                        "@name": "default_value",
                                        "@transfer-ownership": "none",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "../json-glib/json-object.c",
                                            "@line": "638",
                                            "#text": "the value to return if @member_name is not valid"
                                        },
                                        "type": {
                                            "@name": "gint64",
                                            "@c:type": "gint64"
                                        }
                                    }
                                ]
                            }
                        },
                        {
                            "@name": "get_member",
                            "@c:identifier": "json_object_get_member",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../json-glib/json-object.c",
                                "@line": "556",
                                "#text": "Retrieves the value of the given member inside an object."
                            },
                            "source-position": {
                                "@filename": "../json-glib/json-types.h",
                                "@line": "340"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "@nullable": "1",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "../json-glib/json-object.c",
                                    "@line": "563",
                                    "#text": "the value for the\n  requested object member"
                                },
                                "type": {
                                    "@name": "Node",
                                    "@c:type": "JsonNode*"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "object",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../json-glib/json-object.c",
                                        "@line": "558",
                                        "#text": "a JSON object"
                                    },
                                    "type": {
                                        "@name": "Object",
                                        "@c:type": "JsonObject*"
                                    }
                                },
                                "parameter": {
                                    "@name": "member_name",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../json-glib/json-object.c",
                                        "@line": "559",
                                        "#text": "the name of the JSON object member to access"
                                    },
                                    "type": {
                                        "@name": "utf8",
                                        "@c:type": "const gchar*"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "get_members",
                            "@c:identifier": "json_object_get_members",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../json-glib/json-object.c",
                                "@line": "469",
                                "#text": "Retrieves all the names of the members of an object.\n\nYou can obtain the value for each member by iterating the returned list\nand calling [method@Json.Object.get_member]."
                            },
                            "source-position": {
                                "@filename": "../json-glib/json-types.h",
                                "@line": "338"
                            },
                            "return-value": {
                                "@transfer-ownership": "container",
                                "@nullable": "1",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "../json-glib/json-object.c",
                                    "@line": "478",
                                    "#text": "the\n  member names of the object"
                                },
                                "type": {
                                    "@name": "GLib.List",
                                    "@c:type": "GList*",
                                    "type": {
                                        "@name": "utf8"
                                    }
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "object",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../json-glib/json-object.c",
                                        "@line": "471",
                                        "#text": "a JSON object"
                                    },
                                    "type": {
                                        "@name": "Object",
                                        "@c:type": "JsonObject*"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "get_null_member",
                            "@c:identifier": "json_object_get_null_member",
                            "@version": "0.8",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../json-glib/json-object.c",
                                "@line": "764",
                                "#text": "Convenience function that checks whether the value\nstored in @member_name of @object is null. It is an error to\nspecify a @member_name which does not exist.\n\nSee also: [method@Json.Object.get_member], [method@Json.Object.has_member]"
                            },
                            "source-position": {
                                "@filename": "../json-glib/json-types.h",
                                "@line": "374"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "../json-glib/json-object.c",
                                    "@line": "775",
                                    "#text": "`TRUE` if the value is `null`"
                                },
                                "type": {
                                    "@name": "gboolean",
                                    "@c:type": "gboolean"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "object",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../json-glib/json-object.c",
                                        "@line": "766",
                                        "#text": "a JSON object"
                                    },
                                    "type": {
                                        "@name": "Object",
                                        "@c:type": "JsonObject*"
                                    }
                                },
                                "parameter": {
                                    "@name": "member_name",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../json-glib/json-object.c",
                                        "@line": "767",
                                        "#text": "the name of the member"
                                    },
                                    "type": {
                                        "@name": "utf8",
                                        "@c:type": "const gchar*"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "get_object_member",
                            "@c:identifier": "json_object_get_object_member",
                            "@version": "0.8",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../json-glib/json-object.c",
                                "@line": "839",
                                "#text": "Convenience function that retrieves the object\nstored in @member_name of @object. It is an error to specify a @member_name\nwhich does not exist.\n\nIf @member_name contains `null`, then this function will return `NULL`.\n\nSee also: [method@Json.Object.get_member], [method@Json.Object.has_member]"
                            },
                            "source-position": {
                                "@filename": "../json-glib/json-types.h",
                                "@line": "380"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "@nullable": "1",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "../json-glib/json-object.c",
                                    "@line": "852",
                                    "#text": "the object inside the object's member"
                                },
                                "type": {
                                    "@name": "Object",
                                    "@c:type": "JsonObject*"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "object",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../json-glib/json-object.c",
                                        "@line": "841",
                                        "#text": "a JSON object"
                                    },
                                    "type": {
                                        "@name": "Object",
                                        "@c:type": "JsonObject*"
                                    }
                                },
                                "parameter": {
                                    "@name": "member_name",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../json-glib/json-object.c",
                                        "@line": "842",
                                        "#text": "the name of the member"
                                    },
                                    "type": {
                                        "@name": "utf8",
                                        "@c:type": "const gchar*"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "get_size",
                            "@c:identifier": "json_object_get_size",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../json-glib/json-object.c",
                                "@line": "894",
                                "#text": "Retrieves the number of members of a JSON object."
                            },
                            "source-position": {
                                "@filename": "../json-glib/json-types.h",
                                "@line": "391"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "../json-glib/json-object.c",
                                    "@line": "900",
                                    "#text": "the number of members"
                                },
                                "type": {
                                    "@name": "guint",
                                    "@c:type": "guint"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "object",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../json-glib/json-object.c",
                                        "@line": "896",
                                        "#text": "a JSON object"
                                    },
                                    "type": {
                                        "@name": "Object",
                                        "@c:type": "JsonObject*"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "get_string_member",
                            "@c:identifier": "json_object_get_string_member",
                            "@version": "0.8",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../json-glib/json-object.c",
                                "@line": "727",
                                "#text": "Convenience function that retrieves the string value\nstored in @member_name of @object. It is an error to specify a\n@member_name that does not exist.\n\nSee also: [method@Json.Object.get_string_member_with_default],\n  [method@Json.Object.get_member], [method@Json.Object.has_member]"
                            },
                            "source-position": {
                                "@filename": "../json-glib/json-types.h",
                                "@line": "367"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "../json-glib/json-object.c",
                                    "@line": "739",
                                    "#text": "the string value of the object's member"
                                },
                                "type": {
                                    "@name": "utf8",
                                    "@c:type": "const gchar*"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "object",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../json-glib/json-object.c",
                                        "@line": "729",
                                        "#text": "a JSON object"
                                    },
                                    "type": {
                                        "@name": "Object",
                                        "@c:type": "JsonObject*"
                                    }
                                },
                                "parameter": {
                                    "@name": "member_name",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../json-glib/json-object.c",
                                        "@line": "730",
                                        "#text": "the name of the member"
                                    },
                                    "type": {
                                        "@name": "utf8",
                                        "@c:type": "const gchar*"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "get_string_member_with_default",
                            "@c:identifier": "json_object_get_string_member_with_default",
                            "@version": "1.6",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../json-glib/json-object.c",
                                "@line": "745",
                                "#text": "Convenience function that retrieves the string value\nstored in @member_name of @object.\n\nIf @member_name does not exist, does not contain a scalar value,\nor contains `null`, then @default_value is returned instead."
                            },
                            "source-position": {
                                "@filename": "../json-glib/json-types.h",
                                "@line": "370"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "../json-glib/json-object.c",
                                    "@line": "757",
                                    "#text": "the string value of the object's member, or the\n  given default"
                                },
                                "type": {
                                    "@name": "utf8",
                                    "@c:type": "const char*"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "object",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../json-glib/json-object.c",
                                        "@line": "747",
                                        "#text": "a JSON object"
                                    },
                                    "type": {
                                        "@name": "Object",
                                        "@c:type": "JsonObject*"
                                    }
                                },
                                "parameter": [
                                    {
                                        "@name": "member_name",
                                        "@transfer-ownership": "none",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "../json-glib/json-object.c",
                                            "@line": "748",
                                            "#text": "the name of the @object member"
                                        },
                                        "type": {
                                            "@name": "utf8",
                                            "@c:type": "const char*"
                                        }
                                    },
                                    {
                                        "@name": "default_value",
                                        "@transfer-ownership": "none",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "../json-glib/json-object.c",
                                            "@line": "749",
                                            "#text": "the value to return if @member_name is not valid"
                                        },
                                        "type": {
                                            "@name": "utf8",
                                            "@c:type": "const char*"
                                        }
                                    }
                                ]
                            }
                        },
                        {
                            "@name": "get_values",
                            "@c:identifier": "json_object_get_values",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../json-glib/json-object.c",
                                "@line": "498",
                                "#text": "Retrieves all the values of the members of an object."
                            },
                            "source-position": {
                                "@filename": "../json-glib/json-types.h",
                                "@line": "389"
                            },
                            "return-value": {
                                "@transfer-ownership": "container",
                                "@nullable": "1",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "../json-glib/json-object.c",
                                    "@line": "504",
                                    "#text": "the\n  member values of the object"
                                },
                                "type": {
                                    "@name": "GLib.List",
                                    "@c:type": "GList*",
                                    "type": {
                                        "@name": "Node"
                                    }
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "object",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../json-glib/json-object.c",
                                        "@line": "500",
                                        "#text": "a JSON object"
                                    },
                                    "type": {
                                        "@name": "Object",
                                        "@c:type": "JsonObject*"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "has_member",
                            "@c:identifier": "json_object_has_member",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../json-glib/json-object.c",
                                "@line": "875",
                                "#text": "Checks whether @object has a member named @member_name."
                            },
                            "source-position": {
                                "@filename": "../json-glib/json-types.h",
                                "@line": "383"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "../json-glib/json-object.c",
                                    "@line": "882",
                                    "#text": "`TRUE` if the JSON object has the requested member"
                                },
                                "type": {
                                    "@name": "gboolean",
                                    "@c:type": "gboolean"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "object",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../json-glib/json-object.c",
                                        "@line": "877",
                                        "#text": "a JSON object"
                                    },
                                    "type": {
                                        "@name": "Object",
                                        "@c:type": "JsonObject*"
                                    }
                                },
                                "parameter": {
                                    "@name": "member_name",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../json-glib/json-object.c",
                                        "@line": "878",
                                        "#text": "the name of a JSON object member"
                                    },
                                    "type": {
                                        "@name": "utf8",
                                        "@c:type": "const gchar*"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "hash",
                            "@c:identifier": "json_object_hash",
                            "@version": "1.2",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../json-glib/json-object.c",
                                "@line": "982",
                                "#text": "Calculate a hash value for the given @key (a JSON object).\n\nThe hash is calculated over the object and all its members, recursively. If\nthe object is immutable, this is a fast operation; otherwise, it scales\nproportionally with the number of members in the object."
                            },
                            "source-position": {
                                "@filename": "../json-glib/json-types.h",
                                "@line": "403"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "../json-glib/json-object.c",
                                    "@line": "992",
                                    "#text": "hash value for @key"
                                },
                                "type": {
                                    "@name": "guint",
                                    "@c:type": "guint"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "key",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../json-glib/json-object.c",
                                        "@line": "984",
                                        "#text": "a JSON object to hash"
                                    },
                                    "type": {
                                        "@name": "Object",
                                        "@c:type": "gconstpointer"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "is_immutable",
                            "@c:identifier": "json_object_is_immutable",
                            "@version": "1.2",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../json-glib/json-object.c",
                                "@line": "159",
                                "#text": "Checks whether the given object has been marked as immutable by calling\n[method@Json.Object.seal] on it."
                            },
                            "source-position": {
                                "@filename": "../json-glib/json-types.h",
                                "@line": "400"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "../json-glib/json-object.c",
                                    "@line": "167",
                                    "#text": "`TRUE` if the object is immutable"
                                },
                                "type": {
                                    "@name": "gboolean",
                                    "@c:type": "gboolean"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "object",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../json-glib/json-object.c",
                                        "@line": "161",
                                        "#text": "a JSON object"
                                    },
                                    "type": {
                                        "@name": "Object",
                                        "@c:type": "JsonObject*"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "ref",
                            "@c:identifier": "json_object_ref",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../json-glib/json-object.c",
                                "@line": "80",
                                "#text": "Acquires a reference on the given object."
                            },
                            "source-position": {
                                "@filename": "../json-glib/json-types.h",
                                "@line": "297"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "../json-glib/json-object.c",
                                    "@line": "86",
                                    "#text": "the given object, with the reference count\n  increased by one."
                                },
                                "type": {
                                    "@name": "Object",
                                    "@c:type": "JsonObject*"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "object",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../json-glib/json-object.c",
                                        "@line": "82",
                                        "#text": "a JSON object"
                                    },
                                    "type": {
                                        "@name": "Object",
                                        "@c:type": "JsonObject*"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "remove_member",
                            "@c:identifier": "json_object_remove_member",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../json-glib/json-object.c",
                                "@line": "910",
                                "#text": "Removes @member_name from @object, freeing its allocated resources."
                            },
                            "source-position": {
                                "@filename": "../json-glib/json-types.h",
                                "@line": "386"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "type": {
                                    "@name": "none",
                                    "@c:type": "void"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "object",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../json-glib/json-object.c",
                                        "@line": "912",
                                        "#text": "a JSON object"
                                    },
                                    "type": {
                                        "@name": "Object",
                                        "@c:type": "JsonObject*"
                                    }
                                },
                                "parameter": {
                                    "@name": "member_name",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../json-glib/json-object.c",
                                        "@line": "913",
                                        "#text": "the name of the member to remove"
                                    },
                                    "type": {
                                        "@name": "utf8",
                                        "@c:type": "const gchar*"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "seal",
                            "@c:identifier": "json_object_seal",
                            "@version": "1.2",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../json-glib/json-object.c",
                                "@line": "125",
                                "#text": "Seals the object, making it immutable to further changes.\n\nThis function will recursively seal all members of the object too.\n\nIf the object is already immutable, this is a no-op."
                            },
                            "source-position": {
                                "@filename": "../json-glib/json-types.h",
                                "@line": "398"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "type": {
                                    "@name": "none",
                                    "@c:type": "void"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "object",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../json-glib/json-object.c",
                                        "@line": "127",
                                        "#text": "a JSON object"
                                    },
                                    "type": {
                                        "@name": "Object",
                                        "@c:type": "JsonObject*"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "set_array_member",
                            "@c:identifier": "json_object_set_array_member",
                            "@version": "0.8",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../json-glib/json-object.c",
                                "@line": "399",
                                "#text": "Convenience function for setting an object member with an array value.\n\nSee also: [method@Json.Object.set_member], [method@Json.Node.take_array]"
                            },
                            "source-position": {
                                "@filename": "../json-glib/json-types.h",
                                "@line": "330"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "type": {
                                    "@name": "none",
                                    "@c:type": "void"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "object",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../json-glib/json-object.c",
                                        "@line": "401",
                                        "#text": "a JSON object"
                                    },
                                    "type": {
                                        "@name": "Object",
                                        "@c:type": "JsonObject*"
                                    }
                                },
                                "parameter": [
                                    {
                                        "@name": "member_name",
                                        "@transfer-ownership": "none",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "../json-glib/json-object.c",
                                            "@line": "402",
                                            "#text": "the name of the member"
                                        },
                                        "type": {
                                            "@name": "utf8",
                                            "@c:type": "const gchar*"
                                        }
                                    },
                                    {
                                        "@name": "value",
                                        "@transfer-ownership": "full",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "../json-glib/json-object.c",
                                            "@line": "403",
                                            "#text": "the value of the member"
                                        },
                                        "type": {
                                            "@name": "Array",
                                            "@c:type": "JsonArray*"
                                        }
                                    }
                                ]
                            }
                        },
                        {
                            "@name": "set_boolean_member",
                            "@c:identifier": "json_object_set_boolean_member",
                            "@version": "0.8",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../json-glib/json-object.c",
                                "@line": "323",
                                "#text": "Convenience function for setting an object member with a boolean value.\n\nSee also: [method@Json.Object.set_member], [method@Json.Node.init_boolean]"
                            },
                            "source-position": {
                                "@filename": "../json-glib/json-types.h",
                                "@line": "319"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "type": {
                                    "@name": "none",
                                    "@c:type": "void"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "object",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../json-glib/json-object.c",
                                        "@line": "325",
                                        "#text": "a JSON object"
                                    },
                                    "type": {
                                        "@name": "Object",
                                        "@c:type": "JsonObject*"
                                    }
                                },
                                "parameter": [
                                    {
                                        "@name": "member_name",
                                        "@transfer-ownership": "none",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "../json-glib/json-object.c",
                                            "@line": "326",
                                            "#text": "the name of the member"
                                        },
                                        "type": {
                                            "@name": "utf8",
                                            "@c:type": "const gchar*"
                                        }
                                    },
                                    {
                                        "@name": "value",
                                        "@transfer-ownership": "none",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "../json-glib/json-object.c",
                                            "@line": "327",
                                            "#text": "the value of the member"
                                        },
                                        "type": {
                                            "@name": "gboolean",
                                            "@c:type": "gboolean"
                                        }
                                    }
                                ]
                            }
                        },
                        {
                            "@name": "set_double_member",
                            "@c:identifier": "json_object_set_double_member",
                            "@version": "0.8",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../json-glib/json-object.c",
                                "@line": "300",
                                "#text": "Convenience function for setting an object member with a floating point value.\n\nSee also: [method@Json.Object.set_member], [method@Json.Node.init_double]"
                            },
                            "source-position": {
                                "@filename": "../json-glib/json-types.h",
                                "@line": "315"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "type": {
                                    "@name": "none",
                                    "@c:type": "void"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "object",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../json-glib/json-object.c",
                                        "@line": "302",
                                        "#text": "a JSON object"
                                    },
                                    "type": {
                                        "@name": "Object",
                                        "@c:type": "JsonObject*"
                                    }
                                },
                                "parameter": [
                                    {
                                        "@name": "member_name",
                                        "@transfer-ownership": "none",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "../json-glib/json-object.c",
                                            "@line": "303",
                                            "#text": "the name of the member"
                                        },
                                        "type": {
                                            "@name": "utf8",
                                            "@c:type": "const gchar*"
                                        }
                                    },
                                    {
                                        "@name": "value",
                                        "@transfer-ownership": "none",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "../json-glib/json-object.c",
                                            "@line": "304",
                                            "#text": "the value of the member"
                                        },
                                        "type": {
                                            "@name": "gdouble",
                                            "@c:type": "gdouble"
                                        }
                                    }
                                ]
                            }
                        },
                        {
                            "@name": "set_int_member",
                            "@c:identifier": "json_object_set_int_member",
                            "@version": "0.8",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../json-glib/json-object.c",
                                "@line": "277",
                                "#text": "Convenience function for setting an object member with an integer value.\n\nSee also: [method@Json.Object.set_member], [method@Json.Node.init_int]"
                            },
                            "source-position": {
                                "@filename": "../json-glib/json-types.h",
                                "@line": "311"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "type": {
                                    "@name": "none",
                                    "@c:type": "void"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "object",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../json-glib/json-object.c",
                                        "@line": "279",
                                        "#text": "a JSON object"
                                    },
                                    "type": {
                                        "@name": "Object",
                                        "@c:type": "JsonObject*"
                                    }
                                },
                                "parameter": [
                                    {
                                        "@name": "member_name",
                                        "@transfer-ownership": "none",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "../json-glib/json-object.c",
                                            "@line": "280",
                                            "#text": "the name of the member"
                                        },
                                        "type": {
                                            "@name": "utf8",
                                            "@c:type": "const gchar*"
                                        }
                                    },
                                    {
                                        "@name": "value",
                                        "@transfer-ownership": "none",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "../json-glib/json-object.c",
                                            "@line": "281",
                                            "#text": "the value of the member"
                                        },
                                        "type": {
                                            "@name": "gint64",
                                            "@c:type": "gint64"
                                        }
                                    }
                                ]
                            }
                        },
                        {
                            "@name": "set_member",
                            "@c:identifier": "json_object_set_member",
                            "@version": "0.8",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../json-glib/json-object.c",
                                "@line": "239",
                                "#text": "Sets the value of a member inside an object.\n\nIf the object does not have a member with the given name, a new member\nis created.\n\nIf the object already has a member with the given name, the current\nvalue is overwritten with the new."
                            },
                            "source-position": {
                                "@filename": "../json-glib/json-types.h",
                                "@line": "307"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "type": {
                                    "@name": "none",
                                    "@c:type": "void"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "object",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../json-glib/json-object.c",
                                        "@line": "241",
                                        "#text": "a JSON object"
                                    },
                                    "type": {
                                        "@name": "Object",
                                        "@c:type": "JsonObject*"
                                    }
                                },
                                "parameter": [
                                    {
                                        "@name": "member_name",
                                        "@transfer-ownership": "none",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "../json-glib/json-object.c",
                                            "@line": "242",
                                            "#text": "the name of the member"
                                        },
                                        "type": {
                                            "@name": "utf8",
                                            "@c:type": "const gchar*"
                                        }
                                    },
                                    {
                                        "@name": "node",
                                        "@transfer-ownership": "full",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "../json-glib/json-object.c",
                                            "@line": "243",
                                            "#text": "the value of the member"
                                        },
                                        "type": {
                                            "@name": "Node",
                                            "@c:type": "JsonNode*"
                                        }
                                    }
                                ]
                            }
                        },
                        {
                            "@name": "set_null_member",
                            "@c:identifier": "json_object_set_null_member",
                            "@version": "0.8",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../json-glib/json-object.c",
                                "@line": "378",
                                "#text": "Convenience function for setting an object member with a `null` value.\n\nSee also: [method@Json.Object.set_member], [method@Json.Node.init_null]"
                            },
                            "source-position": {
                                "@filename": "../json-glib/json-types.h",
                                "@line": "327"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "type": {
                                    "@name": "none",
                                    "@c:type": "void"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "object",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../json-glib/json-object.c",
                                        "@line": "380",
                                        "#text": "a JSON object"
                                    },
                                    "type": {
                                        "@name": "Object",
                                        "@c:type": "JsonObject*"
                                    }
                                },
                                "parameter": {
                                    "@name": "member_name",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../json-glib/json-object.c",
                                        "@line": "381",
                                        "#text": "the name of the member"
                                    },
                                    "type": {
                                        "@name": "utf8",
                                        "@c:type": "const gchar*"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "set_object_member",
                            "@c:identifier": "json_object_set_object_member",
                            "@version": "0.8",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../json-glib/json-object.c",
                                "@line": "434",
                                "#text": "Convenience function for setting an object member with an object value.\n\nSee also: [method@Json.Object.set_member], [method@Json.Node.take_object]"
                            },
                            "source-position": {
                                "@filename": "../json-glib/json-types.h",
                                "@line": "334"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "type": {
                                    "@name": "none",
                                    "@c:type": "void"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "object",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../json-glib/json-object.c",
                                        "@line": "436",
                                        "#text": "a JSON object"
                                    },
                                    "type": {
                                        "@name": "Object",
                                        "@c:type": "JsonObject*"
                                    }
                                },
                                "parameter": [
                                    {
                                        "@name": "member_name",
                                        "@transfer-ownership": "none",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "../json-glib/json-object.c",
                                            "@line": "437",
                                            "#text": "the name of the member"
                                        },
                                        "type": {
                                            "@name": "utf8",
                                            "@c:type": "const gchar*"
                                        }
                                    },
                                    {
                                        "@name": "value",
                                        "@transfer-ownership": "full",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "../json-glib/json-object.c",
                                            "@line": "438",
                                            "#text": "the value of the member"
                                        },
                                        "type": {
                                            "@name": "Object",
                                            "@c:type": "JsonObject*"
                                        }
                                    }
                                ]
                            }
                        },
                        {
                            "@name": "set_string_member",
                            "@c:identifier": "json_object_set_string_member",
                            "@version": "0.8",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../json-glib/json-object.c",
                                "@line": "346",
                                "#text": "Convenience function for setting an object member with a string value.\n\nSee also: [method@Json.Object.set_member], [method@Json.Node.init_string]"
                            },
                            "source-position": {
                                "@filename": "../json-glib/json-types.h",
                                "@line": "323"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "type": {
                                    "@name": "none",
                                    "@c:type": "void"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "object",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../json-glib/json-object.c",
                                        "@line": "348",
                                        "#text": "a JSON object"
                                    },
                                    "type": {
                                        "@name": "Object",
                                        "@c:type": "JsonObject*"
                                    }
                                },
                                "parameter": [
                                    {
                                        "@name": "member_name",
                                        "@transfer-ownership": "none",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "../json-glib/json-object.c",
                                            "@line": "349",
                                            "#text": "the name of the member"
                                        },
                                        "type": {
                                            "@name": "utf8",
                                            "@c:type": "const gchar*"
                                        }
                                    },
                                    {
                                        "@name": "value",
                                        "@transfer-ownership": "none",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "../json-glib/json-object.c",
                                            "@line": "350",
                                            "#text": "the value of the member"
                                        },
                                        "type": {
                                            "@name": "utf8",
                                            "@c:type": "const gchar*"
                                        }
                                    }
                                ]
                            }
                        },
                        {
                            "@name": "unref",
                            "@c:identifier": "json_object_unref",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../json-glib/json-object.c",
                                "@line": "100",
                                "#text": "Releases a reference on the given object.\n\nIf the reference count reaches zero, the object is destroyed and\nall its resources are freed."
                            },
                            "source-position": {
                                "@filename": "../json-glib/json-types.h",
                                "@line": "299"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "type": {
                                    "@name": "none",
                                    "@c:type": "void"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "object",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../json-glib/json-object.c",
                                        "@line": "102",
                                        "#text": "a JSON object"
                                    },
                                    "type": {
                                        "@name": "Object",
                                        "@c:type": "JsonObject*"
                                    }
                                }
                            }
                        }
                    ]
                },
                {
                    "@name": "ObjectIter",
                    "@c:type": "JsonObjectIter",
                    "@version": "1.2",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "../json-glib/json-types.h",
                        "@line": "408",
                        "#text": "An iterator object used to iterate over the members of a JSON object.\n\n`JsonObjectIter` must be allocated on the stack and initialised using\n[method@Json.ObjectIter.init] or [method@Json.ObjectIter.init_ordered].\n\nThe iterator is invalidated if the object is modified during\niteration.\n\nAll the fields in the `JsonObjectIter` structure are private and should\nnever be accessed directly."
                    },
                    "source-position": {
                        "@filename": "../json-glib/json-types.h",
                        "@line": "429"
                    },
                    "field": [
                        {
                            "@name": "priv_pointer",
                            "@readable": "0",
                            "@private": "1",
                            "array": {
                                "@zero-terminated": "0",
                                "@fixed-size": "6",
                                "type": {
                                    "@name": "gpointer",
                                    "@c:type": "gpointer"
                                }
                            }
                        },
                        {
                            "@name": "priv_int",
                            "@readable": "0",
                            "@private": "1",
                            "array": {
                                "@zero-terminated": "0",
                                "@fixed-size": "2",
                                "type": {
                                    "@name": "gint",
                                    "@c:type": "int"
                                }
                            }
                        },
                        {
                            "@name": "priv_boolean",
                            "@readable": "0",
                            "@private": "1",
                            "array": {
                                "@zero-terminated": "0",
                                "@fixed-size": "1",
                                "type": {
                                    "@name": "gboolean",
                                    "@c:type": "gboolean"
                                }
                            }
                        }
                    ],
                    "method": [
                        {
                            "@name": "init",
                            "@c:identifier": "json_object_iter_init",
                            "@version": "1.2",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../json-glib/json-object.c",
                                "@line": "1078",
                                "#text": "Initialises the @iter and associate it with @object.\n\n```c\nJsonObjectIter iter;\nconst gchar *member_name;\nJsonNode *member_node;\n\njson_object_iter_init (&iter, some_object);\nwhile (json_object_iter_next (&iter, &member_name, &member_node))\n  {\n    // Do something with @member_name and @member_node.\n  }\n```\n\nThe iterator initialized with this function will iterate the\nmembers of the object in an undefined order.\n\nSee also: [method@Json.ObjectIter.init_ordered]"
                            },
                            "source-position": {
                                "@filename": "../json-glib/json-types.h",
                                "@line": "432"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "type": {
                                    "@name": "none",
                                    "@c:type": "void"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "iter",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../json-glib/json-object.c",
                                        "@line": "1080",
                                        "#text": "an uninitialised JSON object iterator"
                                    },
                                    "type": {
                                        "@name": "ObjectIter",
                                        "@c:type": "JsonObjectIter*"
                                    }
                                },
                                "parameter": {
                                    "@name": "object",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../json-glib/json-object.c",
                                        "@line": "1081",
                                        "#text": "the JSON object to iterate over"
                                    },
                                    "type": {
                                        "@name": "Object",
                                        "@c:type": "JsonObject*"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "init_ordered",
                            "@c:identifier": "json_object_iter_init_ordered",
                            "@version": "1.6",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../json-glib/json-object.c",
                                "@line": "1163",
                                "#text": "Initialises the @iter and associate it with @object.\n\n```c\nJsonObjectIter iter;\nconst gchar *member_name;\nJsonNode *member_node;\n\njson_object_iter_init_ordered (&iter, some_object);\nwhile (json_object_iter_next_ordered (&iter, &member_name, &member_node))\n  {\n    // Do something with @member_name and @member_node.\n  }\n```\n\nSee also: [method@Json.ObjectIter.init]"
                            },
                            "source-position": {
                                "@filename": "../json-glib/json-types.h",
                                "@line": "440"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "type": {
                                    "@name": "none",
                                    "@c:type": "void"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "iter",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../json-glib/json-object.c",
                                        "@line": "1165",
                                        "#text": "an uninitialised iterator"
                                    },
                                    "type": {
                                        "@name": "ObjectIter",
                                        "@c:type": "JsonObjectIter*"
                                    }
                                },
                                "parameter": {
                                    "@name": "object",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../json-glib/json-object.c",
                                        "@line": "1166",
                                        "#text": "the JSON object to iterate over"
                                    },
                                    "type": {
                                        "@name": "Object",
                                        "@c:type": "JsonObject*"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "next",
                            "@c:identifier": "json_object_iter_next",
                            "@version": "1.2",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../json-glib/json-object.c",
                                "@line": "1118",
                                "#text": "Advances the iterator and retrieves the next member in the object.\n\nIf the end of the object is reached, `FALSE` is returned and @member_name\nand @member_node are set to invalid values. After that point, the @iter\nis invalid.\n\nThe order in which members are returned by the iterator is undefined. The\niterator is invalidated if the object is modified during iteration.\n\nYou must use this function with an iterator initialized with\n[method@Json.ObjectIter.init]; using this function with an iterator\ninitialized with [method@Json.ObjectIter.init_ordered] yields undefined\nbehavior.\n\nSee also: [method@Json.ObjectIter.next_ordered]"
                            },
                            "source-position": {
                                "@filename": "../json-glib/json-types.h",
                                "@line": "435"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "../json-glib/json-object.c",
                                    "@line": "1142",
                                    "#text": "`TRUE` if @member_name and @member_node are valid; `FALSE` if\n  there are no more members"
                                },
                                "type": {
                                    "@name": "gboolean",
                                    "@c:type": "gboolean"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "iter",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../json-glib/json-object.c",
                                        "@line": "1120",
                                        "#text": "a JSON object iterator"
                                    },
                                    "type": {
                                        "@name": "ObjectIter",
                                        "@c:type": "JsonObjectIter*"
                                    }
                                },
                                "parameter": [
                                    {
                                        "@name": "member_name",
                                        "@direction": "out",
                                        "@caller-allocates": "0",
                                        "@transfer-ownership": "none",
                                        "@optional": "1",
                                        "@allow-none": "1",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "../json-glib/json-object.c",
                                            "@line": "1121",
                                            "#text": "return\n   location for the member name, or %NULL to ignore"
                                        },
                                        "type": {
                                            "@name": "utf8",
                                            "@c:type": "const gchar**"
                                        }
                                    },
                                    {
                                        "@name": "member_node",
                                        "@direction": "out",
                                        "@caller-allocates": "0",
                                        "@transfer-ownership": "none",
                                        "@optional": "1",
                                        "@allow-none": "1",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "../json-glib/json-object.c",
                                            "@line": "1123",
                                            "#text": "return\n   location for the member value, or %NULL to ignore"
                                        },
                                        "type": {
                                            "@name": "Node",
                                            "@c:type": "JsonNode**"
                                        }
                                    }
                                ]
                            }
                        },
                        {
                            "@name": "next_ordered",
                            "@c:identifier": "json_object_iter_next_ordered",
                            "@version": "1.6",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../json-glib/json-object.c",
                                "@line": "1202",
                                "#text": "Advances the iterator and retrieves the next member in the object.\n\nIf the end of the object is reached, `FALSE` is returned and @member_name and\n@member_node are set to invalid values. After that point, the @iter is invalid.\n\nThe order in which members are returned by the iterator is the same order in\nwhich the members were added to the `JsonObject`. The iterator is invalidated\nif its `JsonObject` is modified during iteration.\n\nYou must use this function with an iterator initialized with\n[method@Json.ObjectIter.init_ordered]; using this function with an iterator\ninitialized with [method@Json.ObjectIter.init] yields undefined behavior.\n\nSee also: [method@Json.ObjectIter.next]"
                            },
                            "source-position": {
                                "@filename": "../json-glib/json-types.h",
                                "@line": "443"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "../json-glib/json-object.c",
                                    "@line": "1225",
                                    "#text": "`TRUE `if @member_name and @member_node are valid; `FALSE` if the end\n   of the object has been reached"
                                },
                                "type": {
                                    "@name": "gboolean",
                                    "@c:type": "gboolean"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "iter",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../json-glib/json-object.c",
                                        "@line": "1204",
                                        "#text": "an ordered JSON object iterator"
                                    },
                                    "type": {
                                        "@name": "ObjectIter",
                                        "@c:type": "JsonObjectIter*"
                                    }
                                },
                                "parameter": [
                                    {
                                        "@name": "member_name",
                                        "@direction": "out",
                                        "@caller-allocates": "0",
                                        "@transfer-ownership": "none",
                                        "@optional": "1",
                                        "@allow-none": "1",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "../json-glib/json-object.c",
                                            "@line": "1205",
                                            "#text": "return\n   location for the member name, or %NULL to ignore"
                                        },
                                        "type": {
                                            "@name": "utf8",
                                            "@c:type": "const char**"
                                        }
                                    },
                                    {
                                        "@name": "member_node",
                                        "@direction": "out",
                                        "@caller-allocates": "0",
                                        "@transfer-ownership": "none",
                                        "@optional": "1",
                                        "@allow-none": "1",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "../json-glib/json-object.c",
                                            "@line": "1207",
                                            "#text": "return\n   location for the member value, or %NULL to ignore"
                                        },
                                        "type": {
                                            "@name": "Node",
                                            "@c:type": "JsonNode**"
                                        }
                                    }
                                ]
                            }
                        }
                    ]
                },
                {
                    "@name": "ParserClass",
                    "@c:type": "JsonParserClass",
                    "@glib:is-gtype-struct-for": "Parser",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "../json-glib/json-parser.h",
                        "@line": "89",
                        "#text": "The class structure for the JsonParser type."
                    },
                    "source-position": {
                        "@filename": "../json-glib/json-parser.h",
                        "@line": "140"
                    },
                    "field": [
                        {
                            "@name": "parent_class",
                            "@readable": "0",
                            "@private": "1",
                            "type": {
                                "@name": "GObject.ObjectClass",
                                "@c:type": "GObjectClass"
                            }
                        },
                        {
                            "@name": "parse_start",
                            "callback": {
                                "@name": "parse_start",
                                "source-position": {
                                    "@filename": "../json-glib/json-parser.h",
                                    "@line": "109"
                                },
                                "return-value": {
                                    "@transfer-ownership": "none",
                                    "type": {
                                        "@name": "none",
                                        "@c:type": "void"
                                    }
                                },
                                "parameters": {
                                    "parameter": {
                                        "@name": "parser",
                                        "@transfer-ownership": "none",
                                        "type": {
                                            "@name": "Parser",
                                            "@c:type": "JsonParser*"
                                        }
                                    }
                                }
                            }
                        },
                        {
                            "@name": "object_start",
                            "callback": {
                                "@name": "object_start",
                                "source-position": {
                                    "@filename": "../json-glib/json-parser.h",
                                    "@line": "111"
                                },
                                "return-value": {
                                    "@transfer-ownership": "none",
                                    "type": {
                                        "@name": "none",
                                        "@c:type": "void"
                                    }
                                },
                                "parameters": {
                                    "parameter": {
                                        "@name": "parser",
                                        "@transfer-ownership": "none",
                                        "type": {
                                            "@name": "Parser",
                                            "@c:type": "JsonParser*"
                                        }
                                    }
                                }
                            }
                        },
                        {
                            "@name": "object_member",
                            "callback": {
                                "@name": "object_member",
                                "source-position": {
                                    "@filename": "../json-glib/json-parser.h",
                                    "@line": "112"
                                },
                                "return-value": {
                                    "@transfer-ownership": "none",
                                    "type": {
                                        "@name": "none",
                                        "@c:type": "void"
                                    }
                                },
                                "parameters": {
                                    "parameter": [
                                        {
                                            "@name": "parser",
                                            "@transfer-ownership": "none",
                                            "type": {
                                                "@name": "Parser",
                                                "@c:type": "JsonParser*"
                                            }
                                        },
                                        {
                                            "@name": "object",
                                            "@transfer-ownership": "none",
                                            "type": {
                                                "@name": "Object",
                                                "@c:type": "JsonObject*"
                                            }
                                        },
                                        {
                                            "@name": "member_name",
                                            "@transfer-ownership": "none",
                                            "type": {
                                                "@name": "utf8",
                                                "@c:type": "const gchar*"
                                            }
                                        }
                                    ]
                                }
                            }
                        },
                        {
                            "@name": "object_end",
                            "callback": {
                                "@name": "object_end",
                                "source-position": {
                                    "@filename": "../json-glib/json-parser.h",
                                    "@line": "115"
                                },
                                "return-value": {
                                    "@transfer-ownership": "none",
                                    "type": {
                                        "@name": "none",
                                        "@c:type": "void"
                                    }
                                },
                                "parameters": {
                                    "parameter": [
                                        {
                                            "@name": "parser",
                                            "@transfer-ownership": "none",
                                            "type": {
                                                "@name": "Parser",
                                                "@c:type": "JsonParser*"
                                            }
                                        },
                                        {
                                            "@name": "object",
                                            "@transfer-ownership": "none",
                                            "type": {
                                                "@name": "Object",
                                                "@c:type": "JsonObject*"
                                            }
                                        }
                                    ]
                                }
                            }
                        },
                        {
                            "@name": "array_start",
                            "callback": {
                                "@name": "array_start",
                                "source-position": {
                                    "@filename": "../json-glib/json-parser.h",
                                    "@line": "118"
                                },
                                "return-value": {
                                    "@transfer-ownership": "none",
                                    "type": {
                                        "@name": "none",
                                        "@c:type": "void"
                                    }
                                },
                                "parameters": {
                                    "parameter": {
                                        "@name": "parser",
                                        "@transfer-ownership": "none",
                                        "type": {
                                            "@name": "Parser",
                                            "@c:type": "JsonParser*"
                                        }
                                    }
                                }
                            }
                        },
                        {
                            "@name": "array_element",
                            "callback": {
                                "@name": "array_element",
                                "source-position": {
                                    "@filename": "../json-glib/json-parser.h",
                                    "@line": "119"
                                },
                                "return-value": {
                                    "@transfer-ownership": "none",
                                    "type": {
                                        "@name": "none",
                                        "@c:type": "void"
                                    }
                                },
                                "parameters": {
                                    "parameter": [
                                        {
                                            "@name": "parser",
                                            "@transfer-ownership": "none",
                                            "type": {
                                                "@name": "Parser",
                                                "@c:type": "JsonParser*"
                                            }
                                        },
                                        {
                                            "@name": "array",
                                            "@transfer-ownership": "none",
                                            "type": {
                                                "@name": "Array",
                                                "@c:type": "JsonArray*"
                                            }
                                        },
                                        {
                                            "@name": "index_",
                                            "@transfer-ownership": "none",
                                            "type": {
                                                "@name": "gint",
                                                "@c:type": "gint"
                                            }
                                        }
                                    ]
                                }
                            }
                        },
                        {
                            "@name": "array_end",
                            "callback": {
                                "@name": "array_end",
                                "source-position": {
                                    "@filename": "../json-glib/json-parser.h",
                                    "@line": "122"
                                },
                                "return-value": {
                                    "@transfer-ownership": "none",
                                    "type": {
                                        "@name": "none",
                                        "@c:type": "void"
                                    }
                                },
                                "parameters": {
                                    "parameter": [
                                        {
                                            "@name": "parser",
                                            "@transfer-ownership": "none",
                                            "type": {
                                                "@name": "Parser",
                                                "@c:type": "JsonParser*"
                                            }
                                        },
                                        {
                                            "@name": "array",
                                            "@transfer-ownership": "none",
                                            "type": {
                                                "@name": "Array",
                                                "@c:type": "JsonArray*"
                                            }
                                        }
                                    ]
                                }
                            }
                        },
                        {
                            "@name": "parse_end",
                            "callback": {
                                "@name": "parse_end",
                                "source-position": {
                                    "@filename": "../json-glib/json-parser.h",
                                    "@line": "125"
                                },
                                "return-value": {
                                    "@transfer-ownership": "none",
                                    "type": {
                                        "@name": "none",
                                        "@c:type": "void"
                                    }
                                },
                                "parameters": {
                                    "parameter": {
                                        "@name": "parser",
                                        "@transfer-ownership": "none",
                                        "type": {
                                            "@name": "Parser",
                                            "@c:type": "JsonParser*"
                                        }
                                    }
                                }
                            }
                        },
                        {
                            "@name": "error",
                            "callback": {
                                "@name": "error",
                                "source-position": {
                                    "@filename": "../json-glib/json-parser.h",
                                    "@line": "127"
                                },
                                "return-value": {
                                    "@transfer-ownership": "none",
                                    "type": {
                                        "@name": "none",
                                        "@c:type": "void"
                                    }
                                },
                                "parameters": {
                                    "parameter": [
                                        {
                                            "@name": "parser",
                                            "@transfer-ownership": "none",
                                            "type": {
                                                "@name": "Parser",
                                                "@c:type": "JsonParser*"
                                            }
                                        },
                                        {
                                            "@name": "error",
                                            "@transfer-ownership": "none",
                                            "type": {
                                                "@name": "GLib.Error",
                                                "@c:type": "const GError*"
                                            }
                                        }
                                    ]
                                }
                            }
                        },
                        {
                            "@name": "_json_reserved1",
                            "@introspectable": "0",
                            "callback": {
                                "@name": "_json_reserved1",
                                "source-position": {
                                    "@filename": "../json-glib/json-parser.h",
                                    "@line": "132"
                                },
                                "return-value": {
                                    "@transfer-ownership": "none",
                                    "type": {
                                        "@name": "none",
                                        "@c:type": "void"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "_json_reserved2",
                            "@introspectable": "0",
                            "callback": {
                                "@name": "_json_reserved2",
                                "source-position": {
                                    "@filename": "../json-glib/json-parser.h",
                                    "@line": "133"
                                },
                                "return-value": {
                                    "@transfer-ownership": "none",
                                    "type": {
                                        "@name": "none",
                                        "@c:type": "void"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "_json_reserved3",
                            "@introspectable": "0",
                            "callback": {
                                "@name": "_json_reserved3",
                                "source-position": {
                                    "@filename": "../json-glib/json-parser.h",
                                    "@line": "134"
                                },
                                "return-value": {
                                    "@transfer-ownership": "none",
                                    "type": {
                                        "@name": "none",
                                        "@c:type": "void"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "_json_reserved4",
                            "@introspectable": "0",
                            "callback": {
                                "@name": "_json_reserved4",
                                "source-position": {
                                    "@filename": "../json-glib/json-parser.h",
                                    "@line": "135"
                                },
                                "return-value": {
                                    "@transfer-ownership": "none",
                                    "type": {
                                        "@name": "none",
                                        "@c:type": "void"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "_json_reserved5",
                            "@introspectable": "0",
                            "callback": {
                                "@name": "_json_reserved5",
                                "source-position": {
                                    "@filename": "../json-glib/json-parser.h",
                                    "@line": "136"
                                },
                                "return-value": {
                                    "@transfer-ownership": "none",
                                    "type": {
                                        "@name": "none",
                                        "@c:type": "void"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "_json_reserved6",
                            "@introspectable": "0",
                            "callback": {
                                "@name": "_json_reserved6",
                                "source-position": {
                                    "@filename": "../json-glib/json-parser.h",
                                    "@line": "137"
                                },
                                "return-value": {
                                    "@transfer-ownership": "none",
                                    "type": {
                                        "@name": "none",
                                        "@c:type": "void"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "_json_reserved7",
                            "@introspectable": "0",
                            "callback": {
                                "@name": "_json_reserved7",
                                "source-position": {
                                    "@filename": "../json-glib/json-parser.h",
                                    "@line": "138"
                                },
                                "return-value": {
                                    "@transfer-ownership": "none",
                                    "type": {
                                        "@name": "none",
                                        "@c:type": "void"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "_json_reserved8",
                            "@introspectable": "0",
                            "callback": {
                                "@name": "_json_reserved8",
                                "source-position": {
                                    "@filename": "../json-glib/json-parser.h",
                                    "@line": "139"
                                },
                                "return-value": {
                                    "@transfer-ownership": "none",
                                    "type": {
                                        "@name": "none",
                                        "@c:type": "void"
                                    }
                                }
                            }
                        }
                    ]
                },
                {
                    "@name": "ParserPrivate",
                    "@c:type": "JsonParserPrivate",
                    "@disguised": "1",
                    "source-position": {
                        "@filename": "../json-glib/json-parser.h",
                        "@line": "51"
                    }
                },
                {
                    "@name": "PathClass",
                    "@c:type": "JsonPathClass",
                    "@disguised": "1",
                    "@glib:is-gtype-struct-for": "Path",
                    "source-position": {
                        "@filename": "../json-glib/json-path.h",
                        "@line": "62"
                    }
                },
                {
                    "@name": "ReaderClass",
                    "@c:type": "JsonReaderClass",
                    "@glib:is-gtype-struct-for": "Reader",
                    "source-position": {
                        "@filename": "../json-glib/json-reader.h",
                        "@line": "100"
                    },
                    "field": [
                        {
                            "@name": "parent_class",
                            "@readable": "0",
                            "@private": "1",
                            "type": {
                                "@name": "GObject.ObjectClass",
                                "@c:type": "GObjectClass"
                            }
                        },
                        {
                            "@name": "_json_padding0",
                            "@introspectable": "0",
                            "callback": {
                                "@name": "_json_padding0",
                                "source-position": {
                                    "@filename": "../json-glib/json-reader.h",
                                    "@line": "95"
                                },
                                "return-value": {
                                    "@transfer-ownership": "none",
                                    "type": {
                                        "@name": "none",
                                        "@c:type": "void"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "_json_padding1",
                            "@introspectable": "0",
                            "callback": {
                                "@name": "_json_padding1",
                                "source-position": {
                                    "@filename": "../json-glib/json-reader.h",
                                    "@line": "96"
                                },
                                "return-value": {
                                    "@transfer-ownership": "none",
                                    "type": {
                                        "@name": "none",
                                        "@c:type": "void"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "_json_padding2",
                            "@introspectable": "0",
                            "callback": {
                                "@name": "_json_padding2",
                                "source-position": {
                                    "@filename": "../json-glib/json-reader.h",
                                    "@line": "97"
                                },
                                "return-value": {
                                    "@transfer-ownership": "none",
                                    "type": {
                                        "@name": "none",
                                        "@c:type": "void"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "_json_padding3",
                            "@introspectable": "0",
                            "callback": {
                                "@name": "_json_padding3",
                                "source-position": {
                                    "@filename": "../json-glib/json-reader.h",
                                    "@line": "98"
                                },
                                "return-value": {
                                    "@transfer-ownership": "none",
                                    "type": {
                                        "@name": "none",
                                        "@c:type": "void"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "_json_padding4",
                            "@introspectable": "0",
                            "callback": {
                                "@name": "_json_padding4",
                                "source-position": {
                                    "@filename": "../json-glib/json-reader.h",
                                    "@line": "99"
                                },
                                "return-value": {
                                    "@transfer-ownership": "none",
                                    "type": {
                                        "@name": "none",
                                        "@c:type": "void"
                                    }
                                }
                            }
                        }
                    ]
                },
                {
                    "@name": "ReaderPrivate",
                    "@c:type": "JsonReaderPrivate",
                    "@disguised": "1",
                    "source-position": {
                        "@filename": "../json-glib/json-reader.h",
                        "@line": "51"
                    }
                },
                {
                    "@name": "SerializableIface",
                    "@c:type": "JsonSerializableIface",
                    "@glib:is-gtype-struct-for": "Serializable",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "../json-glib/json-gobject.h",
                        "@line": "39",
                        "#text": "Interface that allows serializing and deserializing object instances\nwith properties storing complex data types.\n\nThe [func@Json.gobject_from_data] and [func@Json.gobject_to_data]\nfunctions will check if the passed object type implements this interface,\nso it can also be used to override the default property serialization\nsequence."
                    },
                    "source-position": {
                        "@filename": "../json-glib/json-gobject.h",
                        "@line": "86"
                    },
                    "field": [
                        {
                            "@name": "g_iface",
                            "@readable": "0",
                            "@private": "1",
                            "type": {
                                "@name": "GObject.TypeInterface",
                                "@c:type": "GTypeInterface"
                            }
                        },
                        {
                            "@name": "serialize_property",
                            "callback": {
                                "@name": "serialize_property",
                                "source-position": {
                                    "@filename": "../json-glib/json-gobject.h",
                                    "@line": "66"
                                },
                                "return-value": {
                                    "@transfer-ownership": "full",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../json-glib/json-serializable.c",
                                        "@line": "50",
                                        "#text": "a node containing the serialized property"
                                    },
                                    "type": {
                                        "@name": "Node",
                                        "@c:type": "JsonNode*"
                                    }
                                },
                                "parameters": {
                                    "parameter": [
                                        {
                                            "@name": "serializable",
                                            "@transfer-ownership": "none",
                                            "doc": {
                                                "@xml:space": "preserve",
                                                "@filename": "../json-glib/json-serializable.c",
                                                "@line": "42",
                                                "#text": "a serializable object"
                                            },
                                            "type": {
                                                "@name": "Serializable",
                                                "@c:type": "JsonSerializable*"
                                            }
                                        },
                                        {
                                            "@name": "property_name",
                                            "@transfer-ownership": "none",
                                            "doc": {
                                                "@xml:space": "preserve",
                                                "@filename": "../json-glib/json-serializable.c",
                                                "@line": "43",
                                                "#text": "the name of the property to serialize"
                                            },
                                            "type": {
                                                "@name": "utf8",
                                                "@c:type": "const gchar*"
                                            }
                                        },
                                        {
                                            "@name": "value",
                                            "@transfer-ownership": "none",
                                            "doc": {
                                                "@xml:space": "preserve",
                                                "@filename": "../json-glib/json-serializable.c",
                                                "@line": "44",
                                                "#text": "the value of the property to serialize"
                                            },
                                            "type": {
                                                "@name": "GObject.Value",
                                                "@c:type": "const GValue*"
                                            }
                                        },
                                        {
                                            "@name": "pspec",
                                            "@transfer-ownership": "none",
                                            "doc": {
                                                "@xml:space": "preserve",
                                                "@filename": "../json-glib/json-serializable.c",
                                                "@line": "45",
                                                "#text": "a property description"
                                            },
                                            "type": {
                                                "@name": "GObject.ParamSpec",
                                                "@c:type": "GParamSpec*"
                                            }
                                        }
                                    ]
                                }
                            }
                        },
                        {
                            "@name": "deserialize_property",
                            "callback": {
                                "@name": "deserialize_property",
                                "source-position": {
                                    "@filename": "../json-glib/json-gobject.h",
                                    "@line": "70"
                                },
                                "return-value": {
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../json-glib/json-serializable.c",
                                        "@line": "89",
                                        "#text": "`TRUE` if the property was successfully deserialized"
                                    },
                                    "type": {
                                        "@name": "gboolean",
                                        "@c:type": "gboolean"
                                    }
                                },
                                "parameters": {
                                    "parameter": [
                                        {
                                            "@name": "serializable",
                                            "@transfer-ownership": "none",
                                            "doc": {
                                                "@xml:space": "preserve",
                                                "@filename": "../json-glib/json-serializable.c",
                                                "@line": "72",
                                                "#text": "a serializable object"
                                            },
                                            "type": {
                                                "@name": "Serializable",
                                                "@c:type": "JsonSerializable*"
                                            }
                                        },
                                        {
                                            "@name": "property_name",
                                            "@transfer-ownership": "none",
                                            "doc": {
                                                "@xml:space": "preserve",
                                                "@filename": "../json-glib/json-serializable.c",
                                                "@line": "73",
                                                "#text": "the name of the property to serialize"
                                            },
                                            "type": {
                                                "@name": "utf8",
                                                "@c:type": "const gchar*"
                                            }
                                        },
                                        {
                                            "@name": "value",
                                            "@direction": "out",
                                            "@caller-allocates": "1",
                                            "@transfer-ownership": "none",
                                            "doc": {
                                                "@xml:space": "preserve",
                                                "@filename": "../json-glib/json-serializable.c",
                                                "@line": "74",
                                                "#text": "a pointer to an uninitialized value"
                                            },
                                            "type": {
                                                "@name": "GObject.Value",
                                                "@c:type": "GValue*"
                                            }
                                        },
                                        {
                                            "@name": "pspec",
                                            "@transfer-ownership": "none",
                                            "doc": {
                                                "@xml:space": "preserve",
                                                "@filename": "../json-glib/json-serializable.c",
                                                "@line": "75",
                                                "#text": "a property description"
                                            },
                                            "type": {
                                                "@name": "GObject.ParamSpec",
                                                "@c:type": "GParamSpec*"
                                            }
                                        },
                                        {
                                            "@name": "property_node",
                                            "@transfer-ownership": "none",
                                            "doc": {
                                                "@xml:space": "preserve",
                                                "@filename": "../json-glib/json-serializable.c",
                                                "@line": "76",
                                                "#text": "the JSON node containing the serialized property"
                                            },
                                            "type": {
                                                "@name": "Node",
                                                "@c:type": "JsonNode*"
                                            }
                                        }
                                    ]
                                }
                            }
                        },
                        {
                            "@name": "find_property",
                            "callback": {
                                "@name": "find_property",
                                "source-position": {
                                    "@filename": "../json-glib/json-gobject.h",
                                    "@line": "76"
                                },
                                "return-value": {
                                    "@transfer-ownership": "none",
                                    "@nullable": "1",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../json-glib/json-serializable.c",
                                        "@line": "296",
                                        "#text": "the property description"
                                    },
                                    "type": {
                                        "@name": "GObject.ParamSpec",
                                        "@c:type": "GParamSpec*"
                                    }
                                },
                                "parameters": {
                                    "parameter": [
                                        {
                                            "@name": "serializable",
                                            "@transfer-ownership": "none",
                                            "doc": {
                                                "@xml:space": "preserve",
                                                "@filename": "../json-glib/json-serializable.c",
                                                "@line": "289",
                                                "#text": "a serializable object"
                                            },
                                            "type": {
                                                "@name": "Serializable",
                                                "@c:type": "JsonSerializable*"
                                            }
                                        },
                                        {
                                            "@name": "name",
                                            "@transfer-ownership": "none",
                                            "doc": {
                                                "@xml:space": "preserve",
                                                "@filename": "../json-glib/json-serializable.c",
                                                "@line": "290",
                                                "#text": "the name of the property"
                                            },
                                            "type": {
                                                "@name": "utf8",
                                                "@c:type": "const char*"
                                            }
                                        }
                                    ]
                                }
                            }
                        },
                        {
                            "@name": "list_properties",
                            "@introspectable": "0",
                            "callback": {
                                "@name": "list_properties",
                                "@introspectable": "0",
                                "source-position": {
                                    "@filename": "../json-glib/json-gobject.h",
                                    "@line": "78"
                                },
                                "return-value": {
                                    "type": {
                                        "@name": "GObject.ParamSpec",
                                        "@c:type": "GParamSpec**"
                                    }
                                },
                                "parameters": {
                                    "parameter": [
                                        {
                                            "@name": "serializable",
                                            "@transfer-ownership": "none",
                                            "type": {
                                                "@name": "Serializable",
                                                "@c:type": "JsonSerializable*"
                                            }
                                        },
                                        {
                                            "@name": "n_pspecs",
                                            "@transfer-ownership": "none",
                                            "type": {
                                                "@name": "guint",
                                                "@c:type": "guint*"
                                            }
                                        }
                                    ]
                                }
                            }
                        },
                        {
                            "@name": "set_property",
                            "callback": {
                                "@name": "set_property",
                                "source-position": {
                                    "@filename": "../json-glib/json-gobject.h",
                                    "@line": "80"
                                },
                                "return-value": {
                                    "@transfer-ownership": "none",
                                    "type": {
                                        "@name": "none",
                                        "@c:type": "void"
                                    }
                                },
                                "parameters": {
                                    "parameter": [
                                        {
                                            "@name": "serializable",
                                            "@transfer-ownership": "none",
                                            "doc": {
                                                "@xml:space": "preserve",
                                                "@filename": "../json-glib/json-serializable.c",
                                                "@line": "335",
                                                "#text": "a serializable object"
                                            },
                                            "type": {
                                                "@name": "Serializable",
                                                "@c:type": "JsonSerializable*"
                                            }
                                        },
                                        {
                                            "@name": "pspec",
                                            "@transfer-ownership": "none",
                                            "doc": {
                                                "@xml:space": "preserve",
                                                "@filename": "../json-glib/json-serializable.c",
                                                "@line": "336",
                                                "#text": "a property description"
                                            },
                                            "type": {
                                                "@name": "GObject.ParamSpec",
                                                "@c:type": "GParamSpec*"
                                            }
                                        },
                                        {
                                            "@name": "value",
                                            "@transfer-ownership": "none",
                                            "doc": {
                                                "@xml:space": "preserve",
                                                "@filename": "../json-glib/json-serializable.c",
                                                "@line": "337",
                                                "#text": "the property value to set"
                                            },
                                            "type": {
                                                "@name": "GObject.Value",
                                                "@c:type": "const GValue*"
                                            }
                                        }
                                    ]
                                }
                            }
                        },
                        {
                            "@name": "get_property",
                            "callback": {
                                "@name": "get_property",
                                "source-position": {
                                    "@filename": "../json-glib/json-gobject.h",
                                    "@line": "83"
                                },
                                "return-value": {
                                    "@transfer-ownership": "none",
                                    "type": {
                                        "@name": "none",
                                        "@c:type": "void"
                                    }
                                },
                                "parameters": {
                                    "parameter": [
                                        {
                                            "@name": "serializable",
                                            "@transfer-ownership": "none",
                                            "doc": {
                                                "@xml:space": "preserve",
                                                "@filename": "../json-glib/json-serializable.c",
                                                "@line": "361",
                                                "#text": "a serializable object"
                                            },
                                            "type": {
                                                "@name": "Serializable",
                                                "@c:type": "JsonSerializable*"
                                            }
                                        },
                                        {
                                            "@name": "pspec",
                                            "@transfer-ownership": "none",
                                            "doc": {
                                                "@xml:space": "preserve",
                                                "@filename": "../json-glib/json-serializable.c",
                                                "@line": "362",
                                                "#text": "a property description"
                                            },
                                            "type": {
                                                "@name": "GObject.ParamSpec",
                                                "@c:type": "GParamSpec*"
                                            }
                                        },
                                        {
                                            "@name": "value",
                                            "@direction": "out",
                                            "@caller-allocates": "1",
                                            "@transfer-ownership": "none",
                                            "doc": {
                                                "@xml:space": "preserve",
                                                "@filename": "../json-glib/json-serializable.c",
                                                "@line": "363",
                                                "#text": "return location for the property value"
                                            },
                                            "type": {
                                                "@name": "GObject.Value",
                                                "@c:type": "GValue*"
                                            }
                                        }
                                    ]
                                }
                            }
                        }
                    ]
                }
            ],
            "callback": [
                {
                    "@name": "ArrayForeach",
                    "@c:type": "JsonArrayForeach",
                    "@version": "0.8",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "../json-glib/json-types.h",
                        "@line": "140",
                        "#text": "The function to be passed to [method@Json.Array.foreach_element].\n\nYou should not add or remove elements to and from @array within\nthis function.\n\nIt is safe to change the value of @element_node."
                    },
                    "source-position": {
                        "@filename": "../json-glib/json-types.h",
                        "@line": "156"
                    },
                    "return-value": {
                        "@transfer-ownership": "none",
                        "type": {
                            "@name": "none",
                            "@c:type": "void"
                        }
                    },
                    "parameters": {
                        "parameter": [
                            {
                                "@name": "array",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "../json-glib/json-types.h",
                                    "@line": "142",
                                    "#text": "the iterated JSON array"
                                },
                                "type": {
                                    "@name": "Array",
                                    "@c:type": "JsonArray*"
                                }
                            },
                            {
                                "@name": "index_",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "../json-glib/json-types.h",
                                    "@line": "143",
                                    "#text": "the index of the element"
                                },
                                "type": {
                                    "@name": "guint",
                                    "@c:type": "guint"
                                }
                            },
                            {
                                "@name": "element_node",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "../json-glib/json-types.h",
                                    "@line": "144",
                                    "#text": "the value of the element at the given @index_"
                                },
                                "type": {
                                    "@name": "Node",
                                    "@c:type": "JsonNode*"
                                }
                            },
                            {
                                "@name": "user_data",
                                "@transfer-ownership": "none",
                                "@nullable": "1",
                                "@allow-none": "1",
                                "@closure": "3",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "../json-glib/json-types.h",
                                    "@line": "145",
                                    "#text": "data passed to the function"
                                },
                                "type": {
                                    "@name": "gpointer",
                                    "@c:type": "gpointer"
                                }
                            }
                        ]
                    }
                },
                {
                    "@name": "BoxedDeserializeFunc",
                    "@c:type": "JsonBoxedDeserializeFunc",
                    "@version": "0.10",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "../json-glib/json-gobject.h",
                        "@line": "161",
                        "#text": "Deserializes the contents of the passed `JsonNode` into a `GBoxed`, for instance:\n\n```c\nstatic gpointer\nmy_point_deserialize (JsonNode *node)\n{\n  double x = 0.0, y = 0.0;\n\n  if (JSON_NODE_HOLDS_ARRAY (node))\n    {\n      JsonArray *array = json_node_get_array (node);\n\n      if (json_array_get_length (array) == 2)\n        {\n          x = json_array_get_double_element (array, 0);\n          y = json_array_get_double_element (array, 1);\n        }\n    }\n  else if (JSON_NODE_HOLDS_OBJECT (node))\n    {\n      JsonObject *obj = json_node_get_object (node);\n\n      x = json_object_get_double_member_with_default (obj, \"x\", 0.0);\n      y = json_object_get_double_member_with_default (obj, \"y\", 0.0);\n    }\n\n  // my_point_new() is defined elsewhere\n  return my_point_new (x, y);\n}\n```"
                    },
                    "source-position": {
                        "@filename": "../json-glib/json-gobject.h",
                        "@line": "200"
                    },
                    "return-value": {
                        "@transfer-ownership": "none",
                        "@nullable": "1",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "../json-glib/json-gobject.h",
                            "@line": "196",
                            "#text": "the newly created boxed structure"
                        },
                        "type": {
                            "@name": "gpointer",
                            "@c:type": "gpointer"
                        }
                    },
                    "parameters": {
                        "parameter": {
                            "@name": "node",
                            "@transfer-ownership": "none",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../json-glib/json-gobject.h",
                                "@line": "163",
                                "#text": "a node tree representing a boxed data"
                            },
                            "type": {
                                "@name": "Node",
                                "@c:type": "JsonNode*"
                            }
                        }
                    }
                },
                {
                    "@name": "BoxedSerializeFunc",
                    "@c:type": "JsonBoxedSerializeFunc",
                    "@version": "0.10",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "../json-glib/json-gobject.h",
                        "@line": "130",
                        "#text": "Serializes the passed `GBoxed` and stores it inside a `JsonNode`, for instance:\n\n```c\nstatic JsonNode *\nmy_point_serialize (gconstpointer boxed)\n{\n  const MyPoint *point = boxed;\n\n  g_autoptr(JsonBuilder) builder = json_builder_new ();\n\n  json_builder_begin_object (builder);\n  json_builder_set_member_name (builder, \"x\");\n  json_builder_add_double_value (builder, point->x);\n  json_builder_set_member_name (builder, \"y\");\n  json_builder_add_double_value (builder, point->y);\n  json_builder_end_object (builder);\n\n  return json_builder_get_root (builder);\n}\n```"
                    },
                    "source-position": {
                        "@filename": "../json-glib/json-gobject.h",
                        "@line": "159"
                    },
                    "return-value": {
                        "@transfer-ownership": "full",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "../json-glib/json-gobject.h",
                            "@line": "155",
                            "#text": "the newly created JSON node tree representing the boxed data"
                        },
                        "type": {
                            "@name": "Node",
                            "@c:type": "JsonNode*"
                        }
                    },
                    "parameters": {
                        "parameter": {
                            "@name": "boxed",
                            "@transfer-ownership": "none",
                            "@nullable": "1",
                            "@allow-none": "1",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../json-glib/json-gobject.h",
                                "@line": "132",
                                "#text": "a boxed data structure"
                            },
                            "type": {
                                "@name": "gpointer",
                                "@c:type": "gconstpointer"
                            }
                        }
                    }
                },
                {
                    "@name": "ObjectForeach",
                    "@c:type": "JsonObjectForeach",
                    "@version": "0.8",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "../json-glib/json-types.h",
                        "@line": "119",
                        "#text": "The function to be passed to [method@Json.Object.foreach_member].\n\nYou should not add or remove members to and from @object within\nthis function.\n\nIt is safe to change the value of @member_node."
                    },
                    "source-position": {
                        "@filename": "../json-glib/json-types.h",
                        "@line": "135"
                    },
                    "return-value": {
                        "@transfer-ownership": "none",
                        "type": {
                            "@name": "none",
                            "@c:type": "void"
                        }
                    },
                    "parameters": {
                        "parameter": [
                            {
                                "@name": "object",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "../json-glib/json-types.h",
                                    "@line": "121",
                                    "#text": "the iterated JSON object"
                                },
                                "type": {
                                    "@name": "Object",
                                    "@c:type": "JsonObject*"
                                }
                            },
                            {
                                "@name": "member_name",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "../json-glib/json-types.h",
                                    "@line": "122",
                                    "#text": "the name of the member"
                                },
                                "type": {
                                    "@name": "utf8",
                                    "@c:type": "const gchar*"
                                }
                            },
                            {
                                "@name": "member_node",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "../json-glib/json-types.h",
                                    "@line": "123",
                                    "#text": "the value of the member"
                                },
                                "type": {
                                    "@name": "Node",
                                    "@c:type": "JsonNode*"
                                }
                            },
                            {
                                "@name": "user_data",
                                "@transfer-ownership": "none",
                                "@nullable": "1",
                                "@allow-none": "1",
                                "@closure": "3",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "../json-glib/json-types.h",
                                    "@line": "124",
                                    "#text": "data passed to the function"
                                },
                                "type": {
                                    "@name": "gpointer",
                                    "@c:type": "gpointer"
                                }
                            }
                        ]
                    }
                }
            ],
            "function-macro": [
                {
                    "@name": "BUILDER",
                    "@c:identifier": "JSON_BUILDER",
                    "@introspectable": "0",
                    "source-position": {
                        "@filename": "../json-glib/json-builder.h",
                        "@line": "35"
                    },
                    "parameters": {
                        "parameter": {
                            "@name": "obj"
                        }
                    }
                },
                {
                    "@name": "BUILDER_CLASS",
                    "@c:identifier": "JSON_BUILDER_CLASS",
                    "@introspectable": "0",
                    "source-position": {
                        "@filename": "../json-glib/json-builder.h",
                        "@line": "37"
                    },
                    "parameters": {
                        "parameter": {
                            "@name": "klass"
                        }
                    }
                },
                {
                    "@name": "BUILDER_GET_CLASS",
                    "@c:identifier": "JSON_BUILDER_GET_CLASS",
                    "@introspectable": "0",
                    "source-position": {
                        "@filename": "../json-glib/json-builder.h",
                        "@line": "39"
                    },
                    "parameters": {
                        "parameter": {
                            "@name": "obj"
                        }
                    }
                },
                {
                    "@name": "CHECK_VERSION",
                    "@c:identifier": "JSON_CHECK_VERSION",
                    "@introspectable": "0",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "../json-glib/json-version.h",
                        "@line": "88",
                        "#text": "Compile-time version checking. Evaluates to `TRUE` if the version\nof JSON-GLib is greater than the required one."
                    },
                    "source-position": {
                        "@filename": "../json-glib/json-version.h",
                        "@line": "96"
                    },
                    "parameters": {
                        "parameter": [
                            {
                                "@name": "major",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "../json-glib/json-version.h",
                                    "@line": "90",
                                    "#text": "required major version"
                                }
                            },
                            {
                                "@name": "minor",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "../json-glib/json-version.h",
                                    "@line": "91",
                                    "#text": "required minor version"
                                }
                            },
                            {
                                "@name": "micro",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "../json-glib/json-version.h",
                                    "@line": "92",
                                    "#text": "required micro version"
                                }
                            }
                        ]
                    }
                },
                {
                    "@name": "DEPRECATED_FOR",
                    "@c:identifier": "JSON_DEPRECATED_FOR",
                    "@introspectable": "0",
                    "source-position": {
                        "@filename": "../json-glib/json-version-macros.h",
                        "@line": "35"
                    },
                    "parameters": {
                        "parameter": {
                            "@name": "f"
                        }
                    }
                },
                {
                    "@name": "DEPRECATED_IN_1_0_FOR",
                    "@c:identifier": "JSON_DEPRECATED_IN_1_0_FOR",
                    "@introspectable": "0",
                    "source-position": {
                        "@filename": "../json-glib/json-version-macros.h",
                        "@line": "151"
                    },
                    "parameters": {
                        "parameter": {
                            "@name": "f"
                        }
                    }
                },
                {
                    "@name": "DEPRECATED_IN_1_2_FOR",
                    "@c:identifier": "JSON_DEPRECATED_IN_1_2_FOR",
                    "@introspectable": "0",
                    "source-position": {
                        "@filename": "../json-glib/json-version-macros.h",
                        "@line": "166"
                    },
                    "parameters": {
                        "parameter": {
                            "@name": "f"
                        }
                    }
                },
                {
                    "@name": "DEPRECATED_IN_1_4_FOR",
                    "@c:identifier": "JSON_DEPRECATED_IN_1_4_FOR",
                    "@introspectable": "0",
                    "source-position": {
                        "@filename": "../json-glib/json-version-macros.h",
                        "@line": "181"
                    },
                    "parameters": {
                        "parameter": {
                            "@name": "f"
                        }
                    }
                },
                {
                    "@name": "DEPRECATED_IN_1_6_FOR",
                    "@c:identifier": "JSON_DEPRECATED_IN_1_6_FOR",
                    "@introspectable": "0",
                    "source-position": {
                        "@filename": "../json-glib/json-version-macros.h",
                        "@line": "196"
                    },
                    "parameters": {
                        "parameter": {
                            "@name": "f"
                        }
                    }
                },
                {
                    "@name": "ENCODE_VERSION",
                    "@c:identifier": "JSON_ENCODE_VERSION",
                    "@introspectable": "0",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "../json-glib/json-version.h",
                        "@line": "67",
                        "#text": "Encodes a JSON-GLib version in an hexadecimal number, useful for\ninteger comparisons."
                    },
                    "source-position": {
                        "@filename": "../json-glib/json-version.h",
                        "@line": "76"
                    },
                    "parameters": {
                        "parameter": [
                            {
                                "@name": "major",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "../json-glib/json-version.h",
                                    "@line": "69",
                                    "#text": "the major version to encode"
                                }
                            },
                            {
                                "@name": "minor",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "../json-glib/json-version.h",
                                    "@line": "70",
                                    "#text": "the minor version to encode"
                                }
                            },
                            {
                                "@name": "micro",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "../json-glib/json-version.h",
                                    "@line": "71",
                                    "#text": "the micro version to encode"
                                }
                            }
                        ]
                    }
                },
                {
                    "@name": "GENERATOR",
                    "@c:identifier": "JSON_GENERATOR",
                    "@introspectable": "0",
                    "source-position": {
                        "@filename": "../json-glib/json-generator.h",
                        "@line": "37"
                    },
                    "parameters": {
                        "parameter": {
                            "@name": "obj"
                        }
                    }
                },
                {
                    "@name": "GENERATOR_CLASS",
                    "@c:identifier": "JSON_GENERATOR_CLASS",
                    "@introspectable": "0",
                    "source-position": {
                        "@filename": "../json-glib/json-generator.h",
                        "@line": "39"
                    },
                    "parameters": {
                        "parameter": {
                            "@name": "klass"
                        }
                    }
                },
                {
                    "@name": "GENERATOR_GET_CLASS",
                    "@c:identifier": "JSON_GENERATOR_GET_CLASS",
                    "@introspectable": "0",
                    "source-position": {
                        "@filename": "../json-glib/json-generator.h",
                        "@line": "41"
                    },
                    "parameters": {
                        "parameter": {
                            "@name": "obj"
                        }
                    }
                },
                {
                    "@name": "IS_BUILDER",
                    "@c:identifier": "JSON_IS_BUILDER",
                    "@introspectable": "0",
                    "source-position": {
                        "@filename": "../json-glib/json-builder.h",
                        "@line": "36"
                    },
                    "parameters": {
                        "parameter": {
                            "@name": "obj"
                        }
                    }
                },
                {
                    "@name": "IS_BUILDER_CLASS",
                    "@c:identifier": "JSON_IS_BUILDER_CLASS",
                    "@introspectable": "0",
                    "source-position": {
                        "@filename": "../json-glib/json-builder.h",
                        "@line": "38"
                    },
                    "parameters": {
                        "parameter": {
                            "@name": "klass"
                        }
                    }
                },
                {
                    "@name": "IS_GENERATOR",
                    "@c:identifier": "JSON_IS_GENERATOR",
                    "@introspectable": "0",
                    "source-position": {
                        "@filename": "../json-glib/json-generator.h",
                        "@line": "38"
                    },
                    "parameters": {
                        "parameter": {
                            "@name": "obj"
                        }
                    }
                },
                {
                    "@name": "IS_GENERATOR_CLASS",
                    "@c:identifier": "JSON_IS_GENERATOR_CLASS",
                    "@introspectable": "0",
                    "source-position": {
                        "@filename": "../json-glib/json-generator.h",
                        "@line": "40"
                    },
                    "parameters": {
                        "parameter": {
                            "@name": "klass"
                        }
                    }
                },
                {
                    "@name": "IS_PARSER",
                    "@c:identifier": "JSON_IS_PARSER",
                    "@introspectable": "0",
                    "source-position": {
                        "@filename": "../json-glib/json-parser.h",
                        "@line": "38"
                    },
                    "parameters": {
                        "parameter": {
                            "@name": "obj"
                        }
                    }
                },
                {
                    "@name": "IS_PARSER_CLASS",
                    "@c:identifier": "JSON_IS_PARSER_CLASS",
                    "@introspectable": "0",
                    "source-position": {
                        "@filename": "../json-glib/json-parser.h",
                        "@line": "40"
                    },
                    "parameters": {
                        "parameter": {
                            "@name": "klass"
                        }
                    }
                },
                {
                    "@name": "IS_PATH",
                    "@c:identifier": "JSON_IS_PATH",
                    "@introspectable": "0",
                    "source-position": {
                        "@filename": "../json-glib/json-path.h",
                        "@line": "36"
                    },
                    "parameters": {
                        "parameter": {
                            "@name": "obj"
                        }
                    }
                },
                {
                    "@name": "IS_READER",
                    "@c:identifier": "JSON_IS_READER",
                    "@introspectable": "0",
                    "source-position": {
                        "@filename": "../json-glib/json-reader.h",
                        "@line": "36"
                    },
                    "parameters": {
                        "parameter": {
                            "@name": "obj"
                        }
                    }
                },
                {
                    "@name": "IS_READER_CLASS",
                    "@c:identifier": "JSON_IS_READER_CLASS",
                    "@introspectable": "0",
                    "source-position": {
                        "@filename": "../json-glib/json-reader.h",
                        "@line": "38"
                    },
                    "parameters": {
                        "parameter": {
                            "@name": "klass"
                        }
                    }
                },
                {
                    "@name": "IS_SERIALIZABLE",
                    "@c:identifier": "JSON_IS_SERIALIZABLE",
                    "@introspectable": "0",
                    "source-position": {
                        "@filename": "../json-glib/json-gobject.h",
                        "@line": "33"
                    },
                    "parameters": {
                        "parameter": {
                            "@name": "obj"
                        }
                    }
                },
                {
                    "@name": "NODE_HOLDS",
                    "@c:identifier": "JSON_NODE_HOLDS",
                    "@version": "0.10",
                    "@introspectable": "0",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "../json-glib/json-types.h",
                        "@line": "44",
                        "#text": "Evaluates to `TRUE` if the node holds the given type."
                    },
                    "source-position": {
                        "@filename": "../json-glib/json-types.h",
                        "@line": "53"
                    },
                    "parameters": {
                        "parameter": [
                            {
                                "@name": "node",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "../json-glib/json-types.h",
                                    "@line": "46",
                                    "#text": "the [struct@Json.Node] to check"
                                }
                            },
                            {
                                "@name": "t",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "../json-glib/json-types.h",
                                    "@line": "47",
                                    "#text": "the desired [enum@Json.NodeType]"
                                }
                            }
                        ]
                    }
                },
                {
                    "@name": "NODE_HOLDS_ARRAY",
                    "@c:identifier": "JSON_NODE_HOLDS_ARRAY",
                    "@version": "0.10",
                    "@introspectable": "0",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "../json-glib/json-types.h",
                        "@line": "75",
                        "#text": "Evaluates to `TRUE` if the node holds a JSON array."
                    },
                    "source-position": {
                        "@filename": "../json-glib/json-types.h",
                        "@line": "83"
                    },
                    "parameters": {
                        "parameter": {
                            "@name": "node",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../json-glib/json-types.h",
                                "@line": "77",
                                "#text": "the [struct@Json.Node] to check"
                            }
                        }
                    }
                },
                {
                    "@name": "NODE_HOLDS_NULL",
                    "@c:identifier": "JSON_NODE_HOLDS_NULL",
                    "@version": "0.10",
                    "@introspectable": "0",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "../json-glib/json-types.h",
                        "@line": "85",
                        "#text": "Evaluates to `TRUE` if the node holds `null`."
                    },
                    "source-position": {
                        "@filename": "../json-glib/json-types.h",
                        "@line": "93"
                    },
                    "parameters": {
                        "parameter": {
                            "@name": "node",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../json-glib/json-types.h",
                                "@line": "87",
                                "#text": "the [struct@Json.Node] to check"
                            }
                        }
                    }
                },
                {
                    "@name": "NODE_HOLDS_OBJECT",
                    "@c:identifier": "JSON_NODE_HOLDS_OBJECT",
                    "@version": "0.10",
                    "@introspectable": "0",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "../json-glib/json-types.h",
                        "@line": "65",
                        "#text": "Evaluates to `TRUE` if the node holds a JSON object."
                    },
                    "source-position": {
                        "@filename": "../json-glib/json-types.h",
                        "@line": "73"
                    },
                    "parameters": {
                        "parameter": {
                            "@name": "node",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../json-glib/json-types.h",
                                "@line": "67",
                                "#text": "the [struct@Json.Node] to check"
                            }
                        }
                    }
                },
                {
                    "@name": "NODE_HOLDS_VALUE",
                    "@c:identifier": "JSON_NODE_HOLDS_VALUE",
                    "@version": "0.10",
                    "@introspectable": "0",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "../json-glib/json-types.h",
                        "@line": "55",
                        "#text": "Evaluates to `TRUE` if the node holds a scalar value."
                    },
                    "source-position": {
                        "@filename": "../json-glib/json-types.h",
                        "@line": "63"
                    },
                    "parameters": {
                        "parameter": {
                            "@name": "node",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../json-glib/json-types.h",
                                "@line": "57",
                                "#text": "the [struct@Json.Node] to check"
                            }
                        }
                    }
                },
                {
                    "@name": "NODE_TYPE",
                    "@c:identifier": "JSON_NODE_TYPE",
                    "@introspectable": "0",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "../json-glib/json-types.h",
                        "@line": "36",
                        "#text": "Evaluates to the [enum@Json.NodeType] value contained by the node."
                    },
                    "source-position": {
                        "@filename": "../json-glib/json-types.h",
                        "@line": "42"
                    },
                    "parameters": {
                        "parameter": {
                            "@name": "node",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../json-glib/json-types.h",
                                "@line": "38",
                                "#text": "the [struct@Json.Node] to check"
                            }
                        }
                    }
                },
                {
                    "@name": "PARSER",
                    "@c:identifier": "JSON_PARSER",
                    "@introspectable": "0",
                    "source-position": {
                        "@filename": "../json-glib/json-parser.h",
                        "@line": "37"
                    },
                    "parameters": {
                        "parameter": {
                            "@name": "obj"
                        }
                    }
                },
                {
                    "@name": "PARSER_CLASS",
                    "@c:identifier": "JSON_PARSER_CLASS",
                    "@introspectable": "0",
                    "source-position": {
                        "@filename": "../json-glib/json-parser.h",
                        "@line": "39"
                    },
                    "parameters": {
                        "parameter": {
                            "@name": "klass"
                        }
                    }
                },
                {
                    "@name": "PARSER_GET_CLASS",
                    "@c:identifier": "JSON_PARSER_GET_CLASS",
                    "@introspectable": "0",
                    "source-position": {
                        "@filename": "../json-glib/json-parser.h",
                        "@line": "41"
                    },
                    "parameters": {
                        "parameter": {
                            "@name": "obj"
                        }
                    }
                },
                {
                    "@name": "PATH",
                    "@c:identifier": "JSON_PATH",
                    "@introspectable": "0",
                    "source-position": {
                        "@filename": "../json-glib/json-path.h",
                        "@line": "35"
                    },
                    "parameters": {
                        "parameter": {
                            "@name": "obj"
                        }
                    }
                },
                {
                    "@name": "READER",
                    "@c:identifier": "JSON_READER",
                    "@introspectable": "0",
                    "source-position": {
                        "@filename": "../json-glib/json-reader.h",
                        "@line": "35"
                    },
                    "parameters": {
                        "parameter": {
                            "@name": "obj"
                        }
                    }
                },
                {
                    "@name": "READER_CLASS",
                    "@c:identifier": "JSON_READER_CLASS",
                    "@introspectable": "0",
                    "source-position": {
                        "@filename": "../json-glib/json-reader.h",
                        "@line": "37"
                    },
                    "parameters": {
                        "parameter": {
                            "@name": "klass"
                        }
                    }
                },
                {
                    "@name": "READER_GET_CLASS",
                    "@c:identifier": "JSON_READER_GET_CLASS",
                    "@introspectable": "0",
                    "source-position": {
                        "@filename": "../json-glib/json-reader.h",
                        "@line": "39"
                    },
                    "parameters": {
                        "parameter": {
                            "@name": "obj"
                        }
                    }
                },
                {
                    "@name": "SERIALIZABLE",
                    "@c:identifier": "JSON_SERIALIZABLE",
                    "@introspectable": "0",
                    "source-position": {
                        "@filename": "../json-glib/json-gobject.h",
                        "@line": "32"
                    },
                    "parameters": {
                        "parameter": {
                            "@name": "obj"
                        }
                    }
                },
                {
                    "@name": "SERIALIZABLE_GET_IFACE",
                    "@c:identifier": "JSON_SERIALIZABLE_GET_IFACE",
                    "@introspectable": "0",
                    "source-position": {
                        "@filename": "../json-glib/json-gobject.h",
                        "@line": "34"
                    },
                    "parameters": {
                        "parameter": {
                            "@name": "obj"
                        }
                    }
                },
                {
                    "@name": "UNAVAILABLE",
                    "@c:identifier": "JSON_UNAVAILABLE",
                    "@introspectable": "0",
                    "source-position": {
                        "@filename": "../json-glib/json-version-macros.h",
                        "@line": "36"
                    },
                    "parameters": {
                        "parameter": [
                            {
                                "@name": "maj"
                            },
                            {
                                "@name": "min"
                            }
                        ]
                    }
                }
            ],
            "class": [
                {
                    "@name": "Builder",
                    "@c:symbol-prefix": "builder",
                    "@c:type": "JsonBuilder",
                    "@parent": "GObject.Object",
                    "@glib:type-name": "JsonBuilder",
                    "@glib:get-type": "json_builder_get_type",
                    "@glib:type-struct": "BuilderClass",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "../json-glib/json-builder.c",
                        "@line": "25",
                        "#text": "`JsonBuilder` provides an object for generating a JSON tree.\n\nThe root of the JSON tree can be either a [struct@Json.Object] or a [struct@Json.Array].\nThus the first call must necessarily be either\n[method@Json.Builder.begin_object] or [method@Json.Builder.begin_array].\n\nFor convenience to language bindings, most `JsonBuilder` method return the\ninstance, making it easy to chain function calls.\n\n## Using `JsonBuilder`\n\n```c\ng_autoptr(JsonBuilder) builder = json_builder_new ();\n\njson_builder_begin_object (builder);\n\njson_builder_set_member_name (builder, \"url\");\njson_builder_add_string_value (builder, \"http://www.gnome.org/img/flash/two-thirty.png\");\n\njson_builder_set_member_name (builder, \"size\");\njson_builder_begin_array (builder);\njson_builder_add_int_value (builder, 652);\njson_builder_add_int_value (builder, 242);\njson_builder_end_array (builder);\n\njson_builder_end_object (builder);\n\ng_autoptr(JsonNode) root root = json_builder_get_root (builder);\n\ng_autoptr(JsonGenerator) gen = json_generator_new ();\njson_generator_set_root (gen, root);\ng_autofree char *str = json_generator_to_data (gen, NULL);\n\n// str now contains the following JSON data\n// { \"url\" : \"http://www.gnome.org/img/flash/two-thirty.png\", \"size\" : [ 652, 242 ] }\n```"
                    },
                    "source-position": {
                        "@filename": "../json-glib/json-builder.h",
                        "@line": "61"
                    },
                    "constructor": [
                        {
                            "@name": "new",
                            "@c:identifier": "json_builder_new",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../json-glib/json-builder.c",
                                "@line": "263",
                                "#text": "Creates a new `JsonBuilder`.\n\nYou can use this object to generate a JSON tree and obtain the root node."
                            },
                            "source-position": {
                                "@filename": "../json-glib/json-builder.h",
                                "@line": "67"
                            },
                            "return-value": {
                                "@transfer-ownership": "full",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "../json-glib/json-builder.c",
                                    "@line": "270",
                                    "#text": "the newly created builder instance"
                                },
                                "type": {
                                    "@name": "Builder",
                                    "@c:type": "JsonBuilder*"
                                }
                            }
                        },
                        {
                            "@name": "new_immutable",
                            "@c:identifier": "json_builder_new_immutable",
                            "@version": "1.2",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../json-glib/json-builder.c",
                                "@line": "278",
                                "#text": "Creates a new, immutable `JsonBuilder` instance.\n\nIt is equivalent to setting the [property@Json.Builder:immutable] property\nset to `TRUE` at construction time."
                            },
                            "source-position": {
                                "@filename": "../json-glib/json-builder.h",
                                "@line": "69"
                            },
                            "return-value": {
                                "@transfer-ownership": "full",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "../json-glib/json-builder.c",
                                    "@line": "287",
                                    "#text": "the newly create builder instance"
                                },
                                "type": {
                                    "@name": "Builder",
                                    "@c:type": "JsonBuilder*"
                                }
                            }
                        }
                    ],
                    "method": [
                        {
                            "@name": "add_boolean_value",
                            "@c:identifier": "json_builder_add_boolean_value",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../json-glib/json-builder.c",
                                "@line": "708",
                                "#text": "Adds a boolean value to the currently open object member or array.\n\nIf called after [method@Json.Builder.set_member_name], sets the given value\nas the value of the current member in the open object; otherwise, the value\nis appended to the elements of the open array.\n\nSee also: [method@Json.Builder.add_value]"
                            },
                            "source-position": {
                                "@filename": "../json-glib/json-builder.h",
                                "@line": "97"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "@nullable": "1",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "../json-glib/json-builder.c",
                                    "@line": "721",
                                    "#text": "the builder instance"
                                },
                                "type": {
                                    "@name": "Builder",
                                    "@c:type": "JsonBuilder*"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "builder",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../json-glib/json-builder.c",
                                        "@line": "710",
                                        "#text": "a builder"
                                    },
                                    "type": {
                                        "@name": "Builder",
                                        "@c:type": "JsonBuilder*"
                                    }
                                },
                                "parameter": {
                                    "@name": "value",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../json-glib/json-builder.c",
                                        "@line": "711",
                                        "#text": "the value of the member or element"
                                    },
                                    "type": {
                                        "@name": "gboolean",
                                        "@c:type": "gboolean"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "add_double_value",
                            "@c:identifier": "json_builder_add_double_value",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../json-glib/json-builder.c",
                                "@line": "661",
                                "#text": "Adds a floating point value to the currently open object member or array.\n\nIf called after [method@Json.Builder.set_member_name], sets the given value\nas the value of the current member in the open object; otherwise, the value\nis appended to the elements of the open array.\n\nSee also: [method@Json.Builder.add_value]"
                            },
                            "source-position": {
                                "@filename": "../json-glib/json-builder.h",
                                "@line": "94"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "@nullable": "1",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "../json-glib/json-builder.c",
                                    "@line": "674",
                                    "#text": "the builder instance"
                                },
                                "type": {
                                    "@name": "Builder",
                                    "@c:type": "JsonBuilder*"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "builder",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../json-glib/json-builder.c",
                                        "@line": "663",
                                        "#text": "a builder"
                                    },
                                    "type": {
                                        "@name": "Builder",
                                        "@c:type": "JsonBuilder*"
                                    }
                                },
                                "parameter": {
                                    "@name": "value",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../json-glib/json-builder.c",
                                        "@line": "664",
                                        "#text": "the value of the member or element"
                                    },
                                    "type": {
                                        "@name": "gdouble",
                                        "@c:type": "gdouble"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "add_int_value",
                            "@c:identifier": "json_builder_add_int_value",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../json-glib/json-builder.c",
                                "@line": "615",
                                "#text": "Adds an integer value to the currently open object member or array.\n\nIf called after [method@Json.Builder.set_member_name], sets the given value\nas the value of the current member in the open object; otherwise, the value\nis appended to the elements of the open array.\n\nSee also: [method@Json.Builder.add_value]"
                            },
                            "source-position": {
                                "@filename": "../json-glib/json-builder.h",
                                "@line": "91"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "@nullable": "1",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "../json-glib/json-builder.c",
                                    "@line": "628",
                                    "#text": "the builder instance"
                                },
                                "type": {
                                    "@name": "Builder",
                                    "@c:type": "JsonBuilder*"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "builder",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../json-glib/json-builder.c",
                                        "@line": "617",
                                        "#text": "a builder"
                                    },
                                    "type": {
                                        "@name": "Builder",
                                        "@c:type": "JsonBuilder*"
                                    }
                                },
                                "parameter": {
                                    "@name": "value",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../json-glib/json-builder.c",
                                        "@line": "618",
                                        "#text": "the value of the member or element"
                                    },
                                    "type": {
                                        "@name": "gint64",
                                        "@c:type": "gint64"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "add_null_value",
                            "@c:identifier": "json_builder_add_null_value",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../json-glib/json-builder.c",
                                "@line": "802",
                                "#text": "Adds a null value to the currently open object member or array.\n\nIf called after [method@Json.Builder.set_member_name], sets the given value\nas the value of the current member in the open object; otherwise, the value\nis appended to the elements of the open array.\n\nSee also: [method@Json.Builder.add_value]"
                            },
                            "source-position": {
                                "@filename": "../json-glib/json-builder.h",
                                "@line": "103"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "@nullable": "1",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "../json-glib/json-builder.c",
                                    "@line": "814",
                                    "#text": "the builder instance"
                                },
                                "type": {
                                    "@name": "Builder",
                                    "@c:type": "JsonBuilder*"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "builder",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../json-glib/json-builder.c",
                                        "@line": "804",
                                        "#text": "a builder"
                                    },
                                    "type": {
                                        "@name": "Builder",
                                        "@c:type": "JsonBuilder*"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "add_string_value",
                            "@c:identifier": "json_builder_add_string_value",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../json-glib/json-builder.c",
                                "@line": "755",
                                "#text": "Adds a boolean value to the currently open object member or array.\n\nIf called after [method@Json.Builder.set_member_name], sets the given value\nas the value of the current member in the open object; otherwise, the value\nis appended to the elements of the open array.\n\nSee also: [method@Json.Builder.add_value]"
                            },
                            "source-position": {
                                "@filename": "../json-glib/json-builder.h",
                                "@line": "100"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "@nullable": "1",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "../json-glib/json-builder.c",
                                    "@line": "768",
                                    "#text": "the builder instance"
                                },
                                "type": {
                                    "@name": "Builder",
                                    "@c:type": "JsonBuilder*"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "builder",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../json-glib/json-builder.c",
                                        "@line": "757",
                                        "#text": "a builder"
                                    },
                                    "type": {
                                        "@name": "Builder",
                                        "@c:type": "JsonBuilder*"
                                    }
                                },
                                "parameter": {
                                    "@name": "value",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../json-glib/json-builder.c",
                                        "@line": "758",
                                        "#text": "the value of the member or element"
                                    },
                                    "type": {
                                        "@name": "utf8",
                                        "@c:type": "const gchar*"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "add_value",
                            "@c:identifier": "json_builder_add_value",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../json-glib/json-builder.c",
                                "@line": "564",
                                "#text": "Adds a value to the currently open object member or array.\n\nIf called after [method@Json.Builder.set_member_name], sets the given node\nas the value of the current member in the open object; otherwise, the node\nis appended to the elements of the open array.\n\nThe builder will take ownership of the node."
                            },
                            "source-position": {
                                "@filename": "../json-glib/json-builder.h",
                                "@line": "88"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "@nullable": "1",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "../json-glib/json-builder.c",
                                    "@line": "577",
                                    "#text": "the builder instance"
                                },
                                "type": {
                                    "@name": "Builder",
                                    "@c:type": "JsonBuilder*"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "builder",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../json-glib/json-builder.c",
                                        "@line": "566",
                                        "#text": "a builder"
                                    },
                                    "type": {
                                        "@name": "Builder",
                                        "@c:type": "JsonBuilder*"
                                    }
                                },
                                "parameter": {
                                    "@name": "node",
                                    "@transfer-ownership": "full",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../json-glib/json-builder.c",
                                        "@line": "567",
                                        "#text": "the value of the member or element"
                                    },
                                    "type": {
                                        "@name": "Node",
                                        "@c:type": "JsonNode*"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "begin_array",
                            "@c:identifier": "json_builder_begin_array",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../json-glib/json-builder.c",
                                "@line": "436",
                                "#text": "Opens an array inside the given builder.\n\nYou can add a new element to the array by using [method@Json.Builder.add_value].\n\nOnce you added all elements to the array, you must call\n[method@Json.Builder.end_array] to close the array."
                            },
                            "source-position": {
                                "@filename": "../json-glib/json-builder.h",
                                "@line": "76"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "@nullable": "1",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "../json-glib/json-builder.c",
                                    "@line": "447",
                                    "#text": "the builder instance"
                                },
                                "type": {
                                    "@name": "Builder",
                                    "@c:type": "JsonBuilder*"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "builder",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../json-glib/json-builder.c",
                                        "@line": "438",
                                        "#text": "a builder"
                                    },
                                    "type": {
                                        "@name": "Builder",
                                        "@c:type": "JsonBuilder*"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "begin_object",
                            "@c:identifier": "json_builder_begin_object",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../json-glib/json-builder.c",
                                "@line": "339",
                                "#text": "Opens an object inside the given builder.\n\nYou can add a new member to the object by using [method@Json.Builder.set_member_name],\nfollowed by [method@Json.Builder.add_value].\n\nOnce you added all members to the object, you must call [method@Json.Builder.end_object]\nto close the object.\n\nIf the builder is in an inconsistent state, this function will return `NULL`."
                            },
                            "source-position": {
                                "@filename": "../json-glib/json-builder.h",
                                "@line": "80"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "@nullable": "1",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "../json-glib/json-builder.c",
                                    "@line": "353",
                                    "#text": "the builder instance"
                                },
                                "type": {
                                    "@name": "Builder",
                                    "@c:type": "JsonBuilder*"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "builder",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../json-glib/json-builder.c",
                                        "@line": "341",
                                        "#text": "a builder"
                                    },
                                    "type": {
                                        "@name": "Builder",
                                        "@c:type": "JsonBuilder*"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "end_array",
                            "@c:identifier": "json_builder_end_array",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../json-glib/json-builder.c",
                                "@line": "490",
                                "#text": "Closes the array inside the given builder that was opened by the most\nrecent call to [method@Json.Builder.begin_array].\n\nThis function cannot be called after [method@Json.Builder.set_member_name]."
                            },
                            "source-position": {
                                "@filename": "../json-glib/json-builder.h",
                                "@line": "78"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "@nullable": "1",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "../json-glib/json-builder.c",
                                    "@line": "499",
                                    "#text": "the builder instance"
                                },
                                "type": {
                                    "@name": "Builder",
                                    "@c:type": "JsonBuilder*"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "builder",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../json-glib/json-builder.c",
                                        "@line": "492",
                                        "#text": "a builder"
                                    },
                                    "type": {
                                        "@name": "Builder",
                                        "@c:type": "JsonBuilder*"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "end_object",
                            "@c:identifier": "json_builder_end_object",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../json-glib/json-builder.c",
                                "@line": "397",
                                "#text": "Closes the object inside the given builder that was opened by the most\nrecent call to [method@Json.Builder.begin_object].\n\nThis function cannot be called after [method@Json.Builder.set_member_name]."
                            },
                            "source-position": {
                                "@filename": "../json-glib/json-builder.h",
                                "@line": "82"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "@nullable": "1",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "../json-glib/json-builder.c",
                                    "@line": "406",
                                    "#text": "the builder instance"
                                },
                                "type": {
                                    "@name": "Builder",
                                    "@c:type": "JsonBuilder*"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "builder",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../json-glib/json-builder.c",
                                        "@line": "399",
                                        "#text": "a builder"
                                    },
                                    "type": {
                                        "@name": "Builder",
                                        "@c:type": "JsonBuilder*"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "get_root",
                            "@c:identifier": "json_builder_get_root",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../json-glib/json-builder.c",
                                "@line": "295",
                                "#text": "Returns the root of the currently constructed tree.\n\nif the build is incomplete (ie: if there are any opened objects, or any\nopen object members and array elements) then this function will return\n`NULL`."
                            },
                            "source-position": {
                                "@filename": "../json-glib/json-builder.h",
                                "@line": "71"
                            },
                            "return-value": {
                                "@transfer-ownership": "full",
                                "@nullable": "1",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "../json-glib/json-builder.c",
                                    "@line": "305",
                                    "#text": "the root node"
                                },
                                "type": {
                                    "@name": "Node",
                                    "@c:type": "JsonNode*"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "builder",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../json-glib/json-builder.c",
                                        "@line": "297",
                                        "#text": "a builder"
                                    },
                                    "type": {
                                        "@name": "Builder",
                                        "@c:type": "JsonBuilder*"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "reset",
                            "@c:identifier": "json_builder_reset",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../json-glib/json-builder.c",
                                "@line": "325",
                                "#text": "Resets the state of the builder back to its initial state."
                            },
                            "source-position": {
                                "@filename": "../json-glib/json-builder.h",
                                "@line": "73"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "type": {
                                    "@name": "none",
                                    "@c:type": "void"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "builder",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../json-glib/json-builder.c",
                                        "@line": "327",
                                        "#text": "a builder"
                                    },
                                    "type": {
                                        "@name": "Builder",
                                        "@c:type": "JsonBuilder*"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "set_member_name",
                            "@c:identifier": "json_builder_set_member_name",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../json-glib/json-builder.c",
                                "@line": "529",
                                "#text": "Sets the name of the member in an object.\n\nThis function must be followed by of these functions:\n\n - [method@Json.Builder.add_value], to add a scalar value to the member\n - [method@Json.Builder.begin_object], to add an object to the member\n - [method@Json.Builder.begin_array], to add an array to the member\n\nThis function can only be called within an open object."
                            },
                            "source-position": {
                                "@filename": "../json-glib/json-builder.h",
                                "@line": "85"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "@nullable": "1",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "../json-glib/json-builder.c",
                                    "@line": "544",
                                    "#text": "the builder instance"
                                },
                                "type": {
                                    "@name": "Builder",
                                    "@c:type": "JsonBuilder*"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "builder",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../json-glib/json-builder.c",
                                        "@line": "531",
                                        "#text": "a builder"
                                    },
                                    "type": {
                                        "@name": "Builder",
                                        "@c:type": "JsonBuilder*"
                                    }
                                },
                                "parameter": {
                                    "@name": "member_name",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../json-glib/json-builder.c",
                                        "@line": "532",
                                        "#text": "the name of the member"
                                    },
                                    "type": {
                                        "@name": "utf8",
                                        "@c:type": "const gchar*"
                                    }
                                }
                            }
                        }
                    ],
                    "property": {
                        "@name": "immutable",
                        "@version": "1.2",
                        "@writable": "1",
                        "@construct-only": "1",
                        "@transfer-ownership": "none",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "../json-glib/json-builder.c",
                            "@line": "214",
                            "#text": "Whether the tree should be immutable when created.\n\nMaking the output immutable on creation avoids the expense\nof traversing it to make it immutable later."
                        },
                        "type": {
                            "@name": "gboolean",
                            "@c:type": "gboolean"
                        }
                    },
                    "field": [
                        {
                            "@name": "parent_instance",
                            "@readable": "0",
                            "@private": "1",
                            "type": {
                                "@name": "GObject.Object",
                                "@c:type": "GObject"
                            }
                        },
                        {
                            "@name": "priv",
                            "@readable": "0",
                            "@private": "1",
                            "type": {
                                "@name": "BuilderPrivate",
                                "@c:type": "JsonBuilderPrivate*"
                            }
                        }
                    ]
                },
                {
                    "@name": "Generator",
                    "@c:symbol-prefix": "generator",
                    "@c:type": "JsonGenerator",
                    "@parent": "GObject.Object",
                    "@glib:type-name": "JsonGenerator",
                    "@glib:get-type": "json_generator_get_type",
                    "@glib:type-struct": "GeneratorClass",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "../json-glib/json-generator.c",
                        "@line": "24",
                        "#text": "`JsonGenerator` provides an object for generating a JSON data stream\nfrom a tree of [struct@Json.Node] instances, and put it into a buffer\nor a file."
                    },
                    "source-position": {
                        "@filename": "../json-glib/json-generator.h",
                        "@line": "65"
                    },
                    "constructor": {
                        "@name": "new",
                        "@c:identifier": "json_generator_new",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "../json-glib/json-generator.c",
                            "@line": "471",
                            "#text": "Creates a new `JsonGenerator`.\n\nYou can use this object to generate a JSON data stream starting from a\ndata object model composed by [struct@Json.Node]s."
                        },
                        "source-position": {
                            "@filename": "../json-glib/json-generator.h",
                            "@line": "71"
                        },
                        "return-value": {
                            "@transfer-ownership": "full",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../json-glib/json-generator.c",
                                "@line": "479",
                                "#text": "the newly created generator instance"
                            },
                            "type": {
                                "@name": "Generator",
                                "@c:type": "JsonGenerator*"
                            }
                        }
                    },
                    "method": [
                        {
                            "@name": "get_indent",
                            "@c:identifier": "json_generator_get_indent",
                            "@glib:get-property": "indent",
                            "@version": "0.14",
                            "attribute": {
                                "@name": "org.gtk.Method.get_property",
                                "@value": "indent"
                            },
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../json-glib/json-generator.c",
                                "@line": "743",
                                "#text": "Retrieves the value set using [method@Json.Generator.set_indent]."
                            },
                            "source-position": {
                                "@filename": "../json-glib/json-generator.h",
                                "@line": "82"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "../json-glib/json-generator.c",
                                    "@line": "749",
                                    "#text": "the number of repetitions per indentation level"
                                },
                                "type": {
                                    "@name": "guint",
                                    "@c:type": "guint"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "generator",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../json-glib/json-generator.c",
                                        "@line": "745",
                                        "#text": "a generator"
                                    },
                                    "type": {
                                        "@name": "Generator",
                                        "@c:type": "JsonGenerator*"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "get_indent_char",
                            "@c:identifier": "json_generator_get_indent_char",
                            "@glib:get-property": "indent-char",
                            "@version": "0.14",
                            "attribute": {
                                "@name": "org.gtk.Method.get_property",
                                "@value": "indent-char"
                            },
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../json-glib/json-generator.c",
                                "@line": "788",
                                "#text": "Retrieves the value set using [method@Json.Generator.set_indent_char]."
                            },
                            "source-position": {
                                "@filename": "../json-glib/json-generator.h",
                                "@line": "87"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "../json-glib/json-generator.c",
                                    "@line": "794",
                                    "#text": "the character to be used when indenting"
                                },
                                "type": {
                                    "@name": "gunichar",
                                    "@c:type": "gunichar"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "generator",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../json-glib/json-generator.c",
                                        "@line": "790",
                                        "#text": "a generator"
                                    },
                                    "type": {
                                        "@name": "Generator",
                                        "@c:type": "JsonGenerator*"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "get_pretty",
                            "@c:identifier": "json_generator_get_pretty",
                            "@glib:get-property": "pretty",
                            "@version": "0.14",
                            "attribute": {
                                "@name": "org.gtk.Method.get_property",
                                "@value": "pretty"
                            },
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../json-glib/json-generator.c",
                                "@line": "696",
                                "#text": "Retrieves the value set using [method@Json.Generator.set_pretty]."
                            },
                            "source-position": {
                                "@filename": "../json-glib/json-generator.h",
                                "@line": "77"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "../json-glib/json-generator.c",
                                    "@line": "702",
                                    "#text": "`TRUE` if the generated JSON should be pretty-printed, and\n  `FALSE` otherwise"
                                },
                                "type": {
                                    "@name": "gboolean",
                                    "@c:type": "gboolean"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "generator",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../json-glib/json-generator.c",
                                        "@line": "698",
                                        "#text": "a generator"
                                    },
                                    "type": {
                                        "@name": "Generator",
                                        "@c:type": "JsonGenerator*"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "get_root",
                            "@c:identifier": "json_generator_get_root",
                            "@glib:get-property": "root",
                            "@version": "0.14",
                            "attribute": {
                                "@name": "org.gtk.Method.get_property",
                                "@value": "root"
                            },
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../json-glib/json-generator.c",
                                "@line": "644",
                                "#text": "Retrieves a pointer to the root node set using\n[method@Json.Generator.set_root]."
                            },
                            "source-position": {
                                "@filename": "../json-glib/json-generator.h",
                                "@line": "92"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "@nullable": "1",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "../json-glib/json-generator.c",
                                    "@line": "651",
                                    "#text": "the root node"
                                },
                                "type": {
                                    "@name": "Node",
                                    "@c:type": "JsonNode*"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "generator",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../json-glib/json-generator.c",
                                        "@line": "646",
                                        "#text": "a generator"
                                    },
                                    "type": {
                                        "@name": "Generator",
                                        "@c:type": "JsonGenerator*"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "set_indent",
                            "@c:identifier": "json_generator_set_indent",
                            "@glib:set-property": "indent",
                            "@version": "0.14",
                            "attribute": {
                                "@name": "org.gtk.Method.set_property",
                                "@value": "indent"
                            },
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../json-glib/json-generator.c",
                                "@line": "715",
                                "#text": "Sets the number of repetitions for each indentation level."
                            },
                            "source-position": {
                                "@filename": "../json-glib/json-generator.h",
                                "@line": "79"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "type": {
                                    "@name": "none",
                                    "@c:type": "void"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "generator",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../json-glib/json-generator.c",
                                        "@line": "717",
                                        "#text": "a generator"
                                    },
                                    "type": {
                                        "@name": "Generator",
                                        "@c:type": "JsonGenerator*"
                                    }
                                },
                                "parameter": {
                                    "@name": "indent_level",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../json-glib/json-generator.c",
                                        "@line": "718",
                                        "#text": "the number of repetitions of the indentation character\n  that should be applied when pretty printing"
                                    },
                                    "type": {
                                        "@name": "guint",
                                        "@c:type": "guint"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "set_indent_char",
                            "@c:identifier": "json_generator_set_indent_char",
                            "@glib:set-property": "indent-char",
                            "@version": "0.14",
                            "attribute": {
                                "@name": "org.gtk.Method.set_property",
                                "@value": "indent-char"
                            },
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../json-glib/json-generator.c",
                                "@line": "761",
                                "#text": "Sets the character to be used when indenting."
                            },
                            "source-position": {
                                "@filename": "../json-glib/json-generator.h",
                                "@line": "84"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "type": {
                                    "@name": "none",
                                    "@c:type": "void"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "generator",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../json-glib/json-generator.c",
                                        "@line": "763",
                                        "#text": "a generator"
                                    },
                                    "type": {
                                        "@name": "Generator",
                                        "@c:type": "JsonGenerator*"
                                    }
                                },
                                "parameter": {
                                    "@name": "indent_char",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../json-glib/json-generator.c",
                                        "@line": "764",
                                        "#text": "a Unicode character to be used when indenting"
                                    },
                                    "type": {
                                        "@name": "gunichar",
                                        "@c:type": "gunichar"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "set_pretty",
                            "@c:identifier": "json_generator_set_pretty",
                            "@glib:set-property": "pretty",
                            "@version": "0.14",
                            "attribute": {
                                "@name": "org.gtk.Method.set_property",
                                "@value": "pretty"
                            },
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../json-glib/json-generator.c",
                                "@line": "663",
                                "#text": "Sets whether the generated JSON should be pretty printed.\n\nPretty printing will use indentation character specified in the\n[property@Json.Generator:indent-char] property and the spacing\nspecified in the [property@Json.Generator:indent] property."
                            },
                            "source-position": {
                                "@filename": "../json-glib/json-generator.h",
                                "@line": "74"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "type": {
                                    "@name": "none",
                                    "@c:type": "void"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "generator",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../json-glib/json-generator.c",
                                        "@line": "665",
                                        "#text": "a generator"
                                    },
                                    "type": {
                                        "@name": "Generator",
                                        "@c:type": "JsonGenerator*"
                                    }
                                },
                                "parameter": {
                                    "@name": "is_pretty",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../json-glib/json-generator.c",
                                        "@line": "666",
                                        "#text": "whether the generated string should be pretty printed"
                                    },
                                    "type": {
                                        "@name": "gboolean",
                                        "@c:type": "gboolean"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "set_root",
                            "@c:identifier": "json_generator_set_root",
                            "@glib:set-property": "root",
                            "attribute": {
                                "@name": "org.gtk.Method.set_property",
                                "@value": "root"
                            },
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../json-glib/json-generator.c",
                                "@line": "612",
                                "#text": "Sets the root of the JSON data stream to be serialized by\nthe given generator.\n\nThe passed `node` is copied by the generator object, so it can be\nsafely freed after calling this function."
                            },
                            "source-position": {
                                "@filename": "../json-glib/json-generator.h",
                                "@line": "89"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "type": {
                                    "@name": "none",
                                    "@c:type": "void"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "generator",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../json-glib/json-generator.c",
                                        "@line": "614",
                                        "#text": "a generator"
                                    },
                                    "type": {
                                        "@name": "Generator",
                                        "@c:type": "JsonGenerator*"
                                    }
                                },
                                "parameter": {
                                    "@name": "node",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../json-glib/json-generator.c",
                                        "@line": "615",
                                        "#text": "the root node"
                                    },
                                    "type": {
                                        "@name": "Node",
                                        "@c:type": "JsonNode*"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "to_data",
                            "@c:identifier": "json_generator_to_data",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../json-glib/json-generator.c",
                                "@line": "515",
                                "#text": "Generates a JSON data stream from @generator and returns it as a\nbuffer."
                            },
                            "source-position": {
                                "@filename": "../json-glib/json-generator.h",
                                "@line": "99"
                            },
                            "return-value": {
                                "@transfer-ownership": "full",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "../json-glib/json-generator.c",
                                    "@line": "524",
                                    "#text": "a newly allocated string holding a JSON data stream"
                                },
                                "type": {
                                    "@name": "utf8",
                                    "@c:type": "gchar*"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "generator",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../json-glib/json-generator.c",
                                        "@line": "517",
                                        "#text": "a generator"
                                    },
                                    "type": {
                                        "@name": "Generator",
                                        "@c:type": "JsonGenerator*"
                                    }
                                },
                                "parameter": {
                                    "@name": "length",
                                    "@direction": "out",
                                    "@caller-allocates": "0",
                                    "@transfer-ownership": "full",
                                    "@optional": "1",
                                    "@allow-none": "1",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../json-glib/json-generator.c",
                                        "@line": "518",
                                        "#text": "return location for the length of the returned\n  buffer"
                                    },
                                    "type": {
                                        "@name": "gsize",
                                        "@c:type": "gsize*"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "to_file",
                            "@c:identifier": "json_generator_to_file",
                            "@throws": "1",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../json-glib/json-generator.c",
                                "@line": "543",
                                "#text": "Creates a JSON data stream and puts it inside `filename`, overwriting\nthe file's current contents.\n\nThis operation is atomic, in the sense that the data is written to a\ntemporary file which is then renamed to the given `filename`."
                            },
                            "source-position": {
                                "@filename": "../json-glib/json-generator.h",
                                "@line": "102"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "../json-glib/json-generator.c",
                                    "@line": "555",
                                    "#text": "%TRUE if saving was successful."
                                },
                                "type": {
                                    "@name": "gboolean",
                                    "@c:type": "gboolean"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "generator",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../json-glib/json-generator.c",
                                        "@line": "545",
                                        "#text": "a generator"
                                    },
                                    "type": {
                                        "@name": "Generator",
                                        "@c:type": "JsonGenerator*"
                                    }
                                },
                                "parameter": {
                                    "@name": "filename",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../json-glib/json-generator.c",
                                        "@line": "546",
                                        "#text": "the path to the target file"
                                    },
                                    "type": {
                                        "@name": "filename",
                                        "@c:type": "const gchar*"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "to_gstring",
                            "@c:identifier": "json_generator_to_gstring",
                            "@version": "1.4",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../json-glib/json-generator.c",
                                "@line": "487",
                                "#text": "Generates a JSON data stream and appends it to the string buffer."
                            },
                            "source-position": {
                                "@filename": "../json-glib/json-generator.h",
                                "@line": "95"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "../json-glib/json-generator.c",
                                    "@line": "494",
                                    "#text": "the passed string, updated with\n  the generated JSON data"
                                },
                                "type": {
                                    "@name": "GLib.String",
                                    "@c:type": "GString*"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "generator",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../json-glib/json-generator.c",
                                        "@line": "489",
                                        "#text": "a generator"
                                    },
                                    "type": {
                                        "@name": "Generator",
                                        "@c:type": "JsonGenerator*"
                                    }
                                },
                                "parameter": {
                                    "@name": "string",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../json-glib/json-generator.c",
                                        "@line": "490",
                                        "#text": "a string buffer"
                                    },
                                    "type": {
                                        "@name": "GLib.String",
                                        "@c:type": "GString*"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "to_stream",
                            "@c:identifier": "json_generator_to_stream",
                            "@version": "0.12",
                            "@throws": "1",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../json-glib/json-generator.c",
                                "@line": "576",
                                "#text": "Outputs JSON data and writes it (synchronously) to the given stream."
                            },
                            "source-position": {
                                "@filename": "../json-glib/json-generator.h",
                                "@line": "106"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "../json-glib/json-generator.c",
                                    "@line": "585",
                                    "#text": "whether the write operation was successful"
                                },
                                "type": {
                                    "@name": "gboolean",
                                    "@c:type": "gboolean"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "generator",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../json-glib/json-generator.c",
                                        "@line": "578",
                                        "#text": "a generator"
                                    },
                                    "type": {
                                        "@name": "Generator",
                                        "@c:type": "JsonGenerator*"
                                    }
                                },
                                "parameter": [
                                    {
                                        "@name": "stream",
                                        "@transfer-ownership": "none",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "../json-glib/json-generator.c",
                                            "@line": "579",
                                            "#text": "the output stream used to write the JSON data"
                                        },
                                        "type": {
                                            "@name": "Gio.OutputStream",
                                            "@c:type": "GOutputStream*"
                                        }
                                    },
                                    {
                                        "@name": "cancellable",
                                        "@transfer-ownership": "none",
                                        "@nullable": "1",
                                        "@allow-none": "1",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "../json-glib/json-generator.c",
                                            "@line": "580",
                                            "#text": "a `GCancellable`"
                                        },
                                        "type": {
                                            "@name": "Gio.Cancellable",
                                            "@c:type": "GCancellable*"
                                        }
                                    }
                                ]
                            }
                        }
                    ],
                    "property": [
                        {
                            "@name": "indent",
                            "@writable": "1",
                            "@transfer-ownership": "none",
                            "@setter": "set_indent",
                            "@getter": "get_indent",
                            "attribute": [
                                {
                                    "@name": "org.gtk.Property.get",
                                    "@value": "json_generator_get_indent"
                                },
                                {
                                    "@name": "org.gtk.Property.set",
                                    "@value": "json_generator_set_indent"
                                }
                            ],
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../json-glib/json-generator.c",
                                "@line": "221",
                                "#text": "Number of spaces to be used to indent when pretty printing."
                            },
                            "type": {
                                "@name": "guint",
                                "@c:type": "guint"
                            }
                        },
                        {
                            "@name": "indent-char",
                            "@version": "0.6",
                            "@writable": "1",
                            "@transfer-ownership": "none",
                            "@setter": "set_indent_char",
                            "@getter": "get_indent_char",
                            "attribute": [
                                {
                                    "@name": "org.gtk.Property.get",
                                    "@value": "json_generator_get_indent_char"
                                },
                                {
                                    "@name": "org.gtk.Property.set",
                                    "@value": "json_generator_set_indent_char"
                                }
                            ],
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../json-glib/json-generator.c",
                                "@line": "249",
                                "#text": "The character that should be used when indenting in pretty print."
                            },
                            "type": {
                                "@name": "guint",
                                "@c:type": "guint"
                            }
                        },
                        {
                            "@name": "pretty",
                            "@writable": "1",
                            "@transfer-ownership": "none",
                            "@setter": "set_pretty",
                            "@getter": "get_pretty",
                            "attribute": [
                                {
                                    "@name": "org.gtk.Property.get",
                                    "@value": "json_generator_get_pretty"
                                },
                                {
                                    "@name": "org.gtk.Property.set",
                                    "@value": "json_generator_set_pretty"
                                }
                            ],
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../json-glib/json-generator.c",
                                "@line": "205",
                                "#text": "Whether the output should be \"pretty-printed\", with indentation and\nnewlines.\n\nThe indentation level can be controlled by using the\n[property@Json.Generator:indent] property."
                            },
                            "type": {
                                "@name": "gboolean",
                                "@c:type": "gboolean"
                            }
                        },
                        {
                            "@name": "root",
                            "@version": "0.4",
                            "@writable": "1",
                            "@transfer-ownership": "none",
                            "@setter": "set_root",
                            "@getter": "get_root",
                            "attribute": [
                                {
                                    "@name": "org.gtk.Property.get",
                                    "@value": "json_generator_get_root"
                                },
                                {
                                    "@name": "org.gtk.Property.set",
                                    "@value": "json_generator_set_root"
                                }
                            ],
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../json-glib/json-generator.c",
                                "@line": "234",
                                "#text": "The root node to be used when constructing a JSON data\nstream."
                            },
                            "type": {
                                "@name": "Node"
                            }
                        }
                    ],
                    "field": [
                        {
                            "@name": "parent_instance",
                            "@readable": "0",
                            "@private": "1",
                            "type": {
                                "@name": "GObject.Object",
                                "@c:type": "GObject"
                            }
                        },
                        {
                            "@name": "priv",
                            "@readable": "0",
                            "@private": "1",
                            "type": {
                                "@name": "GeneratorPrivate",
                                "@c:type": "JsonGeneratorPrivate*"
                            }
                        }
                    ]
                },
                {
                    "@name": "Parser",
                    "@c:symbol-prefix": "parser",
                    "@c:type": "JsonParser",
                    "@parent": "GObject.Object",
                    "@glib:type-name": "JsonParser",
                    "@glib:get-type": "json_parser_get_type",
                    "@glib:type-struct": "ParserClass",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "../json-glib/json-parser.c",
                        "@line": "27",
                        "#text": "`JsonParser` provides an object for parsing a JSON data stream, either\ninside a file or inside a static buffer.\n\n## Using `JsonParser`\n\nThe `JsonParser` API is fairly simple:\n\n```c\ngboolean\nparse_json (const char *filename)\n{\n  g_autoptr(JsonParser) parser = json_parser_new ();\n  g_autoptr(GError) error = NULL\n\n  json_parser_load_from_file (parser, filename, &error);\n  if (error != NULL)\n    {\n      g_critical (\"Unable to parse '%s': %s\", filename, error->message);\n      return FALSE;\n    }\n\n  g_autoptr(JsonNode) root = json_parser_get_root (parser);\n\n  // manipulate the object tree from the root node\n\n  return TRUE\n}\n```\n\nBy default, the entire process of loading the data and parsing it is\nsynchronous; the [method@Json.Parser.load_from_stream_async()] API will\nload the data asynchronously, but parse it in the main context as the\nsignals of the parser must be emitted in the same thread. If you do\nnot use signals, and you wish to also parse the JSON data without blocking,\nyou should use a `GTask` and the synchronous `JsonParser` API inside the\ntask itself."
                    },
                    "source-position": {
                        "@filename": "../json-glib/json-parser.h",
                        "@line": "140"
                    },
                    "constructor": [
                        {
                            "@name": "new",
                            "@c:identifier": "json_parser_new",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../json-glib/json-parser.c",
                                "@line": "973",
                                "#text": "Creates a new JSON parser.\n\nYou can use the `JsonParser` to load a JSON stream from either a file or a\nbuffer and then walk the hierarchy using the data types API."
                            },
                            "source-position": {
                                "@filename": "../json-glib/json-parser.h",
                                "@line": "148"
                            },
                            "return-value": {
                                "@transfer-ownership": "full",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "../json-glib/json-parser.c",
                                    "@line": "981",
                                    "#text": "the newly created parser"
                                },
                                "type": {
                                    "@name": "Parser",
                                    "@c:type": "JsonParser*"
                                }
                            }
                        },
                        {
                            "@name": "new_immutable",
                            "@c:identifier": "json_parser_new_immutable",
                            "@version": "1.2",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../json-glib/json-parser.c",
                                "@line": "989",
                                "#text": "Creates a new parser instance with its [property@Json.Parser:immutable]\nproperty set to `TRUE` to create immutable output trees."
                            },
                            "source-position": {
                                "@filename": "../json-glib/json-parser.h",
                                "@line": "150"
                            },
                            "return-value": {
                                "@transfer-ownership": "full",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "../json-glib/json-parser.c",
                                    "@line": "996",
                                    "#text": "the newly created parser"
                                },
                                "type": {
                                    "@name": "Parser",
                                    "@c:type": "JsonParser*"
                                }
                            }
                        }
                    ],
                    "virtual-method": [
                        {
                            "@name": "array_element",
                            "source-position": {
                                "@filename": "../json-glib/json-parser.h",
                                "@line": "119"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "type": {
                                    "@name": "none",
                                    "@c:type": "void"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "parser",
                                    "@transfer-ownership": "none",
                                    "type": {
                                        "@name": "Parser",
                                        "@c:type": "JsonParser*"
                                    }
                                },
                                "parameter": [
                                    {
                                        "@name": "array",
                                        "@transfer-ownership": "none",
                                        "type": {
                                            "@name": "Array",
                                            "@c:type": "JsonArray*"
                                        }
                                    },
                                    {
                                        "@name": "index_",
                                        "@transfer-ownership": "none",
                                        "type": {
                                            "@name": "gint",
                                            "@c:type": "gint"
                                        }
                                    }
                                ]
                            }
                        },
                        {
                            "@name": "array_end",
                            "source-position": {
                                "@filename": "../json-glib/json-parser.h",
                                "@line": "122"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "type": {
                                    "@name": "none",
                                    "@c:type": "void"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "parser",
                                    "@transfer-ownership": "none",
                                    "type": {
                                        "@name": "Parser",
                                        "@c:type": "JsonParser*"
                                    }
                                },
                                "parameter": {
                                    "@name": "array",
                                    "@transfer-ownership": "none",
                                    "type": {
                                        "@name": "Array",
                                        "@c:type": "JsonArray*"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "array_start",
                            "source-position": {
                                "@filename": "../json-glib/json-parser.h",
                                "@line": "118"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "type": {
                                    "@name": "none",
                                    "@c:type": "void"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "parser",
                                    "@transfer-ownership": "none",
                                    "type": {
                                        "@name": "Parser",
                                        "@c:type": "JsonParser*"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "error",
                            "source-position": {
                                "@filename": "../json-glib/json-parser.h",
                                "@line": "127"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "type": {
                                    "@name": "none",
                                    "@c:type": "void"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "parser",
                                    "@transfer-ownership": "none",
                                    "type": {
                                        "@name": "Parser",
                                        "@c:type": "JsonParser*"
                                    }
                                },
                                "parameter": {
                                    "@name": "error",
                                    "@transfer-ownership": "none",
                                    "type": {
                                        "@name": "GLib.Error",
                                        "@c:type": "const GError*"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "object_end",
                            "source-position": {
                                "@filename": "../json-glib/json-parser.h",
                                "@line": "115"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "type": {
                                    "@name": "none",
                                    "@c:type": "void"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "parser",
                                    "@transfer-ownership": "none",
                                    "type": {
                                        "@name": "Parser",
                                        "@c:type": "JsonParser*"
                                    }
                                },
                                "parameter": {
                                    "@name": "object",
                                    "@transfer-ownership": "none",
                                    "type": {
                                        "@name": "Object",
                                        "@c:type": "JsonObject*"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "object_member",
                            "source-position": {
                                "@filename": "../json-glib/json-parser.h",
                                "@line": "112"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "type": {
                                    "@name": "none",
                                    "@c:type": "void"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "parser",
                                    "@transfer-ownership": "none",
                                    "type": {
                                        "@name": "Parser",
                                        "@c:type": "JsonParser*"
                                    }
                                },
                                "parameter": [
                                    {
                                        "@name": "object",
                                        "@transfer-ownership": "none",
                                        "type": {
                                            "@name": "Object",
                                            "@c:type": "JsonObject*"
                                        }
                                    },
                                    {
                                        "@name": "member_name",
                                        "@transfer-ownership": "none",
                                        "type": {
                                            "@name": "utf8",
                                            "@c:type": "const gchar*"
                                        }
                                    }
                                ]
                            }
                        },
                        {
                            "@name": "object_start",
                            "source-position": {
                                "@filename": "../json-glib/json-parser.h",
                                "@line": "111"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "type": {
                                    "@name": "none",
                                    "@c:type": "void"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "parser",
                                    "@transfer-ownership": "none",
                                    "type": {
                                        "@name": "Parser",
                                        "@c:type": "JsonParser*"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "parse_end",
                            "source-position": {
                                "@filename": "../json-glib/json-parser.h",
                                "@line": "125"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "type": {
                                    "@name": "none",
                                    "@c:type": "void"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "parser",
                                    "@transfer-ownership": "none",
                                    "type": {
                                        "@name": "Parser",
                                        "@c:type": "JsonParser*"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "parse_start",
                            "source-position": {
                                "@filename": "../json-glib/json-parser.h",
                                "@line": "109"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "type": {
                                    "@name": "none",
                                    "@c:type": "void"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "parser",
                                    "@transfer-ownership": "none",
                                    "type": {
                                        "@name": "Parser",
                                        "@c:type": "JsonParser*"
                                    }
                                }
                            }
                        }
                    ],
                    "method": [
                        {
                            "@name": "get_current_line",
                            "@c:identifier": "json_parser_get_current_line",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../json-glib/json-parser.c",
                                "@line": "1337",
                                "#text": "Retrieves the line currently parsed, starting from 1.\n\nThis function has defined behaviour only while parsing; calling this\nfunction from outside the signal handlers emitted by the parser will\nyield 0."
                            },
                            "source-position": {
                                "@filename": "../json-glib/json-parser.h",
                                "@line": "186"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "../json-glib/json-parser.c",
                                    "@line": "1347",
                                    "#text": "the currently parsed line, or 0."
                                },
                                "type": {
                                    "@name": "guint",
                                    "@c:type": "guint"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "parser",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../json-glib/json-parser.c",
                                        "@line": "1339",
                                        "#text": "a parser"
                                    },
                                    "type": {
                                        "@name": "Parser",
                                        "@c:type": "JsonParser*"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "get_current_pos",
                            "@c:identifier": "json_parser_get_current_pos",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../json-glib/json-parser.c",
                                "@line": "1360",
                                "#text": "Retrieves the current position inside the current line, starting\nfrom 0.\n\nThis function has defined behaviour only while parsing; calling this\nfunction from outside the signal handlers emitted by the parser will\nyield 0."
                            },
                            "source-position": {
                                "@filename": "../json-glib/json-parser.h",
                                "@line": "188"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "../json-glib/json-parser.c",
                                    "@line": "1371",
                                    "#text": "the position in the current line, or 0."
                                },
                                "type": {
                                    "@name": "guint",
                                    "@c:type": "guint"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "parser",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../json-glib/json-parser.c",
                                        "@line": "1362",
                                        "#text": "a parser"
                                    },
                                    "type": {
                                        "@name": "Parser",
                                        "@c:type": "JsonParser*"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "get_root",
                            "@c:identifier": "json_parser_get_root",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../json-glib/json-parser.c",
                                "@line": "1284",
                                "#text": "Retrieves the top level node from the parsed JSON stream.\n\nIf the parser input was an empty string, or if parsing failed, the root\nwill be `NULL`. It will also be `NULL` if it has been stolen using\n[method@Json.Parser.steal_root]."
                            },
                            "source-position": {
                                "@filename": "../json-glib/json-parser.h",
                                "@line": "181"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "@nullable": "1",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "../json-glib/json-parser.c",
                                    "@line": "1294",
                                    "#text": "the root node."
                                },
                                "type": {
                                    "@name": "Node",
                                    "@c:type": "JsonNode*"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "parser",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../json-glib/json-parser.c",
                                        "@line": "1286",
                                        "#text": "a parser"
                                    },
                                    "type": {
                                        "@name": "Parser",
                                        "@c:type": "JsonParser*"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "has_assignment",
                            "@c:identifier": "json_parser_has_assignment",
                            "@version": "0.4",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../json-glib/json-parser.c",
                                "@line": "1384",
                                "#text": "A JSON data stream might sometimes contain an assignment, like:\n\n```\nvar _json_data = { \"member_name\" : [ ...\n```\n\neven though it would technically constitute a violation of the RFC.\n\n`JsonParser` will ignore the left hand identifier and parse the right\nhand value of the assignment. `JsonParser` will record, though, the\nexistence of the assignment in the data stream and the variable name\nused."
                            },
                            "source-position": {
                                "@filename": "../json-glib/json-parser.h",
                                "@line": "190"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "../json-glib/json-parser.c",
                                    "@line": "1402",
                                    "#text": "`TRUE` if there was an assignment, and `FALSE` otherwise"
                                },
                                "type": {
                                    "@name": "gboolean",
                                    "@c:type": "gboolean"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "parser",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../json-glib/json-parser.c",
                                        "@line": "1386",
                                        "#text": "a parser"
                                    },
                                    "type": {
                                        "@name": "Parser",
                                        "@c:type": "JsonParser*"
                                    }
                                },
                                "parameter": {
                                    "@name": "variable_name",
                                    "@direction": "out",
                                    "@caller-allocates": "0",
                                    "@transfer-ownership": "none",
                                    "@optional": "1",
                                    "@allow-none": "1",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../json-glib/json-parser.c",
                                        "@line": "1387",
                                        "#text": "the variable name"
                                    },
                                    "type": {
                                        "@name": "utf8",
                                        "@c:type": "gchar**"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "load_from_data",
                            "@c:identifier": "json_parser_load_from_data",
                            "@throws": "1",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../json-glib/json-parser.c",
                                "@line": "1238",
                                "#text": "Loads a JSON stream from a buffer and parses it.\n\nYou can call this function multiple times with the same parser, but the\ncontents of the parser will be destroyed each time."
                            },
                            "source-position": {
                                "@filename": "../json-glib/json-parser.h",
                                "@line": "160"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "../json-glib/json-parser.c",
                                    "@line": "1250",
                                    "#text": "`TRUE` if the buffer was succesfully parsed"
                                },
                                "type": {
                                    "@name": "gboolean",
                                    "@c:type": "gboolean"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "parser",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../json-glib/json-parser.c",
                                        "@line": "1240",
                                        "#text": "a parser"
                                    },
                                    "type": {
                                        "@name": "Parser",
                                        "@c:type": "JsonParser*"
                                    }
                                },
                                "parameter": [
                                    {
                                        "@name": "data",
                                        "@transfer-ownership": "none",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "../json-glib/json-parser.c",
                                            "@line": "1241",
                                            "#text": "the buffer to parse"
                                        },
                                        "type": {
                                            "@name": "utf8",
                                            "@c:type": "const gchar*"
                                        }
                                    },
                                    {
                                        "@name": "length",
                                        "@transfer-ownership": "none",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "../json-glib/json-parser.c",
                                            "@line": "1242",
                                            "#text": "the length of the buffer, or -1 if it is `NUL` terminated"
                                        },
                                        "type": {
                                            "@name": "gssize",
                                            "@c:type": "gssize"
                                        }
                                    }
                                ]
                            }
                        },
                        {
                            "@name": "load_from_file",
                            "@c:identifier": "json_parser_load_from_file",
                            "@throws": "1",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../json-glib/json-parser.c",
                                "@line": "1127",
                                "#text": "Loads a JSON stream from the content of `filename` and parses it.\n\nIf the file is large or shared between processes,\n[method@Json.Parser.load_from_mapped_file] may be a more efficient\nway to load it.\n\nSee also: [method@Json.Parser.load_from_data]"
                            },
                            "source-position": {
                                "@filename": "../json-glib/json-parser.h",
                                "@line": "152"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "../json-glib/json-parser.c",
                                    "@line": "1141",
                                    "#text": "`TRUE` if the file was successfully loaded and parsed."
                                },
                                "type": {
                                    "@name": "gboolean",
                                    "@c:type": "gboolean"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "parser",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../json-glib/json-parser.c",
                                        "@line": "1129",
                                        "#text": "a parser"
                                    },
                                    "type": {
                                        "@name": "Parser",
                                        "@c:type": "JsonParser*"
                                    }
                                },
                                "parameter": {
                                    "@name": "filename",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../json-glib/json-parser.c",
                                        "@line": "1130",
                                        "#text": "the path for the file to parse"
                                    },
                                    "type": {
                                        "@name": "filename",
                                        "@c:type": "const gchar*"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "load_from_mapped_file",
                            "@c:identifier": "json_parser_load_from_mapped_file",
                            "@version": "1.6",
                            "@throws": "1",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../json-glib/json-parser.c",
                                "@line": "1182",
                                "#text": "Loads a JSON stream from the content of `filename` and parses it.\n\nUnlike [method@Json.Parser.load_from_file], `filename` will be memory\nmapped as read-only and parsed. `filename` will be unmapped before this\nfunction returns.\n\nIf mapping or reading the file fails, a `G_FILE_ERROR` will be returned."
                            },
                            "source-position": {
                                "@filename": "../json-glib/json-parser.h",
                                "@line": "156"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "../json-glib/json-parser.c",
                                    "@line": "1196",
                                    "#text": "`TRUE` if the file was successfully loaded and parsed."
                                },
                                "type": {
                                    "@name": "gboolean",
                                    "@c:type": "gboolean"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "parser",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../json-glib/json-parser.c",
                                        "@line": "1184",
                                        "#text": "a parser"
                                    },
                                    "type": {
                                        "@name": "Parser",
                                        "@c:type": "JsonParser*"
                                    }
                                },
                                "parameter": {
                                    "@name": "filename",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../json-glib/json-parser.c",
                                        "@line": "1185",
                                        "#text": "the path for the file to parse"
                                    },
                                    "type": {
                                        "@name": "filename",
                                        "@c:type": "const gchar*"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "load_from_stream",
                            "@c:identifier": "json_parser_load_from_stream",
                            "@version": "0.12",
                            "@throws": "1",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../json-glib/json-parser.c",
                                "@line": "1424",
                                "#text": "Loads the contents of an input stream and parses them.\n\nIf `cancellable` is not `NULL`, then the operation can be cancelled by\ntriggering the cancellable object from another thread. If the\noperation was cancelled, `G_IO_ERROR_CANCELLED` will be set\non the given `error`."
                            },
                            "source-position": {
                                "@filename": "../json-glib/json-parser.h",
                                "@line": "165"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "../json-glib/json-parser.c",
                                    "@line": "1438",
                                    "#text": "`TRUE` if the data stream was successfully read and\n  parsed, and `FALSE` otherwise"
                                },
                                "type": {
                                    "@name": "gboolean",
                                    "@c:type": "gboolean"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "parser",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../json-glib/json-parser.c",
                                        "@line": "1426",
                                        "#text": "a parser"
                                    },
                                    "type": {
                                        "@name": "Parser",
                                        "@c:type": "JsonParser*"
                                    }
                                },
                                "parameter": [
                                    {
                                        "@name": "stream",
                                        "@transfer-ownership": "none",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "../json-glib/json-parser.c",
                                            "@line": "1427",
                                            "#text": "the input stream with the JSON data"
                                        },
                                        "type": {
                                            "@name": "Gio.InputStream",
                                            "@c:type": "GInputStream*"
                                        }
                                    },
                                    {
                                        "@name": "cancellable",
                                        "@transfer-ownership": "none",
                                        "@nullable": "1",
                                        "@allow-none": "1",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "../json-glib/json-parser.c",
                                            "@line": "1428",
                                            "#text": "a #GCancellable"
                                        },
                                        "type": {
                                            "@name": "Gio.Cancellable",
                                            "@c:type": "GCancellable*"
                                        }
                                    }
                                ]
                            }
                        },
                        {
                            "@name": "load_from_stream_async",
                            "@c:identifier": "json_parser_load_from_stream_async",
                            "@version": "0.12",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../json-glib/json-parser.c",
                                "@line": "1591",
                                "#text": "Asynchronously reads the contents of a stream.\n\nFor more details, see [method@Json.Parser.load_from_stream], which is the\nsynchronous version of this call.\n\nWhen the operation is finished, @callback will be called. You should\nthen call [method@Json.Parser.load_from_stream_finish] to get the result\nof the operation."
                            },
                            "source-position": {
                                "@filename": "../json-glib/json-parser.h",
                                "@line": "170"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "type": {
                                    "@name": "none",
                                    "@c:type": "void"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "parser",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../json-glib/json-parser.c",
                                        "@line": "1593",
                                        "#text": "a parser"
                                    },
                                    "type": {
                                        "@name": "Parser",
                                        "@c:type": "JsonParser*"
                                    }
                                },
                                "parameter": [
                                    {
                                        "@name": "stream",
                                        "@transfer-ownership": "none",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "../json-glib/json-parser.c",
                                            "@line": "1594",
                                            "#text": "the input stream with the JSON data"
                                        },
                                        "type": {
                                            "@name": "Gio.InputStream",
                                            "@c:type": "GInputStream*"
                                        }
                                    },
                                    {
                                        "@name": "cancellable",
                                        "@transfer-ownership": "none",
                                        "@nullable": "1",
                                        "@allow-none": "1",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "../json-glib/json-parser.c",
                                            "@line": "1595",
                                            "#text": "a #GCancellable"
                                        },
                                        "type": {
                                            "@name": "Gio.Cancellable",
                                            "@c:type": "GCancellable*"
                                        }
                                    },
                                    {
                                        "@name": "callback",
                                        "@transfer-ownership": "none",
                                        "@nullable": "1",
                                        "@allow-none": "1",
                                        "@scope": "async",
                                        "@closure": "3",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "../json-glib/json-parser.c",
                                            "@line": "1596",
                                            "#text": "the function to call when the request is satisfied"
                                        },
                                        "type": {
                                            "@name": "Gio.AsyncReadyCallback",
                                            "@c:type": "GAsyncReadyCallback"
                                        }
                                    },
                                    {
                                        "@name": "user_data",
                                        "@transfer-ownership": "none",
                                        "@nullable": "1",
                                        "@allow-none": "1",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "../json-glib/json-parser.c",
                                            "@line": "1597",
                                            "#text": "the data to pass to @callback"
                                        },
                                        "type": {
                                            "@name": "gpointer",
                                            "@c:type": "gpointer"
                                        }
                                    }
                                ]
                            }
                        },
                        {
                            "@name": "load_from_stream_finish",
                            "@c:identifier": "json_parser_load_from_stream_finish",
                            "@version": "0.12",
                            "@throws": "1",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../json-glib/json-parser.c",
                                "@line": "1515",
                                "#text": "Finishes an asynchronous stream loading started with\n[method@Json.Parser.load_from_stream_async]."
                            },
                            "source-position": {
                                "@filename": "../json-glib/json-parser.h",
                                "@line": "176"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "../json-glib/json-parser.c",
                                    "@line": "1524",
                                    "#text": "`TRUE` if the content of the stream was successfully retrieved\n  and parsed, and `FALSE` otherwise"
                                },
                                "type": {
                                    "@name": "gboolean",
                                    "@c:type": "gboolean"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "parser",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../json-glib/json-parser.c",
                                        "@line": "1517",
                                        "#text": "a parser"
                                    },
                                    "type": {
                                        "@name": "Parser",
                                        "@c:type": "JsonParser*"
                                    }
                                },
                                "parameter": {
                                    "@name": "result",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../json-glib/json-parser.c",
                                        "@line": "1518",
                                        "#text": "the result of the asynchronous operation"
                                    },
                                    "type": {
                                        "@name": "Gio.AsyncResult",
                                        "@c:type": "GAsyncResult*"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "steal_root",
                            "@c:identifier": "json_parser_steal_root",
                            "@version": "1.4",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../json-glib/json-parser.c",
                                "@line": "1309",
                                "#text": "Steals the top level node from the parsed JSON stream.\n\nThis will be `NULL` in the same situations as [method@Json.Parser.get_root]\nreturn `NULL`."
                            },
                            "source-position": {
                                "@filename": "../json-glib/json-parser.h",
                                "@line": "183"
                            },
                            "return-value": {
                                "@transfer-ownership": "full",
                                "@nullable": "1",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "../json-glib/json-parser.c",
                                    "@line": "1318",
                                    "#text": "the root node"
                                },
                                "type": {
                                    "@name": "Node",
                                    "@c:type": "JsonNode*"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "parser",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../json-glib/json-parser.c",
                                        "@line": "1311",
                                        "#text": "a parser"
                                    },
                                    "type": {
                                        "@name": "Parser",
                                        "@c:type": "JsonParser*"
                                    }
                                }
                            }
                        }
                    ],
                    "property": {
                        "@name": "immutable",
                        "@version": "1.2",
                        "@writable": "1",
                        "@construct-only": "1",
                        "@transfer-ownership": "none",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "../json-glib/json-parser.c",
                            "@line": "231",
                            "#text": "Whether the tree built by the parser should be immutable\nwhen created.\n\nMaking the output immutable on creation avoids the expense\nof traversing it to make it immutable later."
                        },
                        "type": {
                            "@name": "gboolean",
                            "@c:type": "gboolean"
                        }
                    },
                    "field": [
                        {
                            "@name": "parent_instance",
                            "@readable": "0",
                            "@private": "1",
                            "type": {
                                "@name": "GObject.Object",
                                "@c:type": "GObject"
                            }
                        },
                        {
                            "@name": "priv",
                            "@readable": "0",
                            "@private": "1",
                            "type": {
                                "@name": "ParserPrivate",
                                "@c:type": "JsonParserPrivate*"
                            }
                        }
                    ],
                    "glib:signal": [
                        {
                            "@name": "array-element",
                            "@when": "last",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../json-glib/json-parser.c",
                                "@line": "340",
                                "#text": "The `::array-element` signal is emitted each time a parser\nhas successfully parsed a single element of a JSON array."
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "type": {
                                    "@name": "none",
                                    "@c:type": "void"
                                }
                            },
                            "parameters": {
                                "parameter": [
                                    {
                                        "@name": "array",
                                        "@transfer-ownership": "none",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "../json-glib/json-parser.c",
                                            "@line": "343",
                                            "#text": "a JSON array"
                                        },
                                        "type": {
                                            "@name": "Array"
                                        }
                                    },
                                    {
                                        "@name": "index_",
                                        "@transfer-ownership": "none",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "../json-glib/json-parser.c",
                                            "@line": "344",
                                            "#text": "the index of the newly parsed array element"
                                        },
                                        "type": {
                                            "@name": "gint",
                                            "@c:type": "gint"
                                        }
                                    }
                                ]
                            }
                        },
                        {
                            "@name": "array-end",
                            "@when": "last",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../json-glib/json-parser.c",
                                "@line": "358",
                                "#text": "The `::array-end` signal is emitted each time a parser\nhas successfully parsed an entire JSON array."
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "type": {
                                    "@name": "none",
                                    "@c:type": "void"
                                }
                            },
                            "parameters": {
                                "parameter": {
                                    "@name": "array",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../json-glib/json-parser.c",
                                        "@line": "361",
                                        "#text": "the parsed JSON array"
                                    },
                                    "type": {
                                        "@name": "Array"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "array-start",
                            "@when": "last",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../json-glib/json-parser.c",
                                "@line": "326",
                                "#text": "The `::array-start` signal is emitted each time a parser\nstarts parsing a JSON array."
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "type": {
                                    "@name": "none",
                                    "@c:type": "void"
                                }
                            }
                        },
                        {
                            "@name": "error",
                            "@when": "last",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../json-glib/json-parser.c",
                                "@line": "374",
                                "#text": "The `::error` signal is emitted each time a parser encounters\nan error in a JSON stream."
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "type": {
                                    "@name": "none",
                                    "@c:type": "void"
                                }
                            },
                            "parameters": {
                                "parameter": {
                                    "@name": "error",
                                    "@transfer-ownership": "none",
                                    "@nullable": "1",
                                    "@allow-none": "1",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../json-glib/json-parser.c",
                                        "@line": "377",
                                        "#text": "the error"
                                    },
                                    "type": {
                                        "@name": "gpointer",
                                        "@c:type": "gpointer"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "object-end",
                            "@when": "last",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../json-glib/json-parser.c",
                                "@line": "310",
                                "#text": "The `::object-end` signal is emitted each time a parser\nhas successfully parsed an entire JSON object."
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "type": {
                                    "@name": "none",
                                    "@c:type": "void"
                                }
                            },
                            "parameters": {
                                "parameter": {
                                    "@name": "object",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../json-glib/json-parser.c",
                                        "@line": "313",
                                        "#text": "the parsed JSON object"
                                    },
                                    "type": {
                                        "@name": "Object"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "object-member",
                            "@when": "last",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../json-glib/json-parser.c",
                                "@line": "292",
                                "#text": "The `::object-member` signal is emitted each time a parser\nhas successfully parsed a single member of a JSON object"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "type": {
                                    "@name": "none",
                                    "@c:type": "void"
                                }
                            },
                            "parameters": {
                                "parameter": [
                                    {
                                        "@name": "object",
                                        "@transfer-ownership": "none",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "../json-glib/json-parser.c",
                                            "@line": "295",
                                            "#text": "the JSON object being parsed"
                                        },
                                        "type": {
                                            "@name": "Object"
                                        }
                                    },
                                    {
                                        "@name": "member_name",
                                        "@transfer-ownership": "none",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "../json-glib/json-parser.c",
                                            "@line": "296",
                                            "#text": "the name of the newly parsed member"
                                        },
                                        "type": {
                                            "@name": "utf8",
                                            "@c:type": "gchar*"
                                        }
                                    }
                                ]
                            }
                        },
                        {
                            "@name": "object-start",
                            "@when": "last",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../json-glib/json-parser.c",
                                "@line": "279",
                                "#text": "This signal is emitted each time a parser starts parsing a JSON object."
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "type": {
                                    "@name": "none",
                                    "@c:type": "void"
                                }
                            }
                        },
                        {
                            "@name": "parse-end",
                            "@when": "last",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../json-glib/json-parser.c",
                                "@line": "265",
                                "#text": "This signal is emitted when a parser successfully finished parsing a\nJSON data stream"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "type": {
                                    "@name": "none",
                                    "@c:type": "void"
                                }
                            }
                        },
                        {
                            "@name": "parse-start",
                            "@when": "last",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../json-glib/json-parser.c",
                                "@line": "251",
                                "#text": "This signal is emitted when a parser starts parsing a JSON data stream."
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "type": {
                                    "@name": "none",
                                    "@c:type": "void"
                                }
                            }
                        }
                    ]
                },
                {
                    "@name": "Path",
                    "@c:symbol-prefix": "path",
                    "@c:type": "JsonPath",
                    "@version": "0.14",
                    "@parent": "GObject.Object",
                    "@glib:type-name": "JsonPath",
                    "@glib:get-type": "json_path_get_type",
                    "@glib:type-struct": "PathClass",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "../json-glib/json-path.c",
                        "@line": "23",
                        "#text": "`JsonPath` is a simple class implementing the JSONPath syntax for extracting\ndata out of a JSON tree.\n\nWhile the semantics of the JSONPath expressions are heavily borrowed by the\nXPath specification for XML, the syntax follows the ECMAScript origins of\nJSON.\n\nOnce a `JsonPath` instance has been created, it has to compile a JSONPath\nexpression using [method@Json.Path.compile] before being able to match it to\na JSON tree; the same `JsonPath` instance can be used to match multiple JSON\ntrees. It it also possible to compile a new JSONPath expression using the\nsame `JsonPath` instance; the previous expression will be discarded only if\nthe compilation of the new expression is successful.\n\nThe simple convenience function [func@Json.Path.query] can be used for\none-off matching.\n\n## Syntax of the JSONPath expressions\n\nA JSONPath expression is composed by path indices and operators.\nEach path index can either be a member name or an element index inside\na JSON tree. A JSONPath expression must start with the `$` operator; each\npath index is separated using either the dot notation or the bracket\nnotation, e.g.:\n\n```\n// dot notation\n$.store.book[0].title\n\n// bracket notation\n$['store']['book'][0]['title']\n```\n\nThe available operators are:\n\n* The `$` character represents the root node of the JSON tree, and\n  matches the entire document.\n\n* Child nodes can either be matched using `.` or `[]`. For instance,\n  both `$.store.book` and `$['store']['book']` match the contents of\n  the book member of the store object.\n\n* Child nodes can be reached without specifying the whole tree structure\n  through the recursive descent operator, or `..`. For instance,\n  `$..author` matches all author member in every object.\n\n* Child nodes can grouped through the wildcard operator, or `*`. For\n  instance, `$.store.book[*].author` matches all author members of any\n  object element contained in the book array of the store object.\n\n* Element nodes can be accessed using their index (starting from zero)\n  in the subscript operator `[]`. For instance, `$.store.book[0]` matches\n  the first element of the book array of the store object.\n\n* Subsets of element nodes can be accessed using the set notation\n  operator `[i,j,...]`. For instance, `$.store.book[0,2]` matches the\n  elements 0 and 2 (the first and third) of the book array of the store\n  object.\n\n* Slices of element nodes can be accessed using the slice notation\n  operation `[start:end:step]`. If start is omitted, the starting index\n  of the slice is implied to be zero; if end is omitted, the ending index\n  of the slice is implied to be the length of the array; if step is\n  omitted, the step of the slice is implied to be 1. For instance,\n  `$.store.book[:2]` matches the first two elements of the book array\n  of the store object.\n\nMore information about JSONPath is available on Stefan G\u00f6ssner's\n[JSONPath website](http://goessner.net/articles/JsonPath/).\n\n## Example of JSONPath matches\n\nThe following example shows some of the results of using `JsonPath`\non a JSON tree. We use the following JSON description of a bookstore:\n\n```json\n{ \"store\": {\n    \"book\": [\n      { \"category\": \"reference\", \"author\": \"Nigel Rees\",\n        \"title\": \"Sayings of the Century\", \"price\": \"8.95\"  },\n      { \"category\": \"fiction\", \"author\": \"Evelyn Waugh\",\n        \"title\": \"Sword of Honour\", \"price\": \"12.99\" },\n      { \"category\": \"fiction\", \"author\": \"Herman Melville\",\n        \"title\": \"Moby Dick\", \"isbn\": \"0-553-21311-3\",\n        \"price\": \"8.99\" },\n      { \"category\": \"fiction\", \"author\": \"J. R. R. Tolkien\",\n        \"title\": \"The Lord of the Rings\", \"isbn\": \"0-395-19395-8\",\n        \"price\": \"22.99\" }\n    ],\n    \"bicycle\": { \"color\": \"red\", \"price\": \"19.95\" }\n  }\n}\n```\n\nWe can parse the JSON using [class@Json.Parser]:\n\n```c\nJsonParser *parser = json_parser_new ();\njson_parser_load_from_data (parser, json_data, -1, NULL);\n```\n\nIf we run the following code:\n\n```c\nJsonNode *result;\nJsonPath *path = json_path_new ();\njson_path_compile (path, \"$.store..author\", NULL);\nresult = json_path_match (path, json_parser_get_root (parser));\n```\n\nThe `result` node will contain an array with all values of the\nauthor member of the objects in the JSON tree. If we use a\n[class@Json.Generator] to convert the `result` node to a string\nand print it:\n\n```c\nJsonGenerator *generator = json_generator_new ();\njson_generator_set_root (generator, result);\nchar *str = json_generator_to_data (generator, NULL);\ng_print (\"Results: %s\\n\", str);\n```\n\nThe output will be:\n\n```json\n[\"Nigel Rees\",\"Evelyn Waugh\",\"Herman Melville\",\"J. R. R. Tolkien\"]\n```"
                    },
                    "source-position": {
                        "@filename": "../json-glib/json-path.h",
                        "@line": "62"
                    },
                    "constructor": {
                        "@name": "new",
                        "@c:identifier": "json_path_new",
                        "@version": "0.14",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "../json-glib/json-path.c",
                            "@line": "265",
                            "#text": "Creates a new `JsonPath` instance.\n\nOnce created, the `JsonPath` object should be used with\n[method@Json.Path.compile] and [method@Json.Path.match]."
                        },
                        "source-position": {
                            "@filename": "../json-glib/json-path.h",
                            "@line": "70"
                        },
                        "return-value": {
                            "@transfer-ownership": "full",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../json-glib/json-path.c",
                                "@line": "273",
                                "#text": "the newly created path"
                            },
                            "type": {
                                "@name": "Path",
                                "@c:type": "JsonPath*"
                            }
                        }
                    },
                    "function": {
                        "@name": "query",
                        "@c:identifier": "json_path_query",
                        "@version": "0.14",
                        "@throws": "1",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "../json-glib/json-path.c",
                            "@line": "961",
                            "#text": "Queries a JSON tree using a JSONPath expression.\n\nThis function is a simple wrapper around [ctor@Json.Path.new],\n[method@Json.Path.compile], and [method@Json.Path.match]. It implicitly\ncreates a `JsonPath` instance, compiles the given expression and matches\nit against the JSON tree pointed by `root`."
                        },
                        "source-position": {
                            "@filename": "../json-glib/json-path.h",
                            "@line": "81"
                        },
                        "return-value": {
                            "@transfer-ownership": "full",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../json-glib/json-path.c",
                                "@line": "974",
                                "#text": "a newly-created node of type\n  `JSON_NODE_ARRAY` containing the array of matching nodes"
                            },
                            "type": {
                                "@name": "Node",
                                "@c:type": "JsonNode*"
                            }
                        },
                        "parameters": {
                            "parameter": [
                                {
                                    "@name": "expression",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../json-glib/json-path.c",
                                        "@line": "963",
                                        "#text": "a JSONPath expression"
                                    },
                                    "type": {
                                        "@name": "utf8",
                                        "@c:type": "const char*"
                                    }
                                },
                                {
                                    "@name": "root",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../json-glib/json-path.c",
                                        "@line": "964",
                                        "#text": "the root of a JSON tree"
                                    },
                                    "type": {
                                        "@name": "Node",
                                        "@c:type": "JsonNode*"
                                    }
                                }
                            ]
                        }
                    },
                    "method": [
                        {
                            "@name": "compile",
                            "@c:identifier": "json_path_compile",
                            "@version": "0.14",
                            "@throws": "1",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../json-glib/json-path.c",
                                "@line": "348",
                                "#text": "Validates and decomposes the given expression.\n\nA JSONPath expression must be compiled before calling\n[method@Json.Path.match]."
                            },
                            "source-position": {
                                "@filename": "../json-glib/json-path.h",
                                "@line": "73"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "../json-glib/json-path.c",
                                    "@line": "359",
                                    "#text": "`TRUE` if the compilation was successful, and `FALSE`\n  otherwise"
                                },
                                "type": {
                                    "@name": "gboolean",
                                    "@c:type": "gboolean"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "path",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../json-glib/json-path.c",
                                        "@line": "350",
                                        "#text": "a path"
                                    },
                                    "type": {
                                        "@name": "Path",
                                        "@c:type": "JsonPath*"
                                    }
                                },
                                "parameter": {
                                    "@name": "expression",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../json-glib/json-path.c",
                                        "@line": "351",
                                        "#text": "a JSONPath expression"
                                    },
                                    "type": {
                                        "@name": "utf8",
                                        "@c:type": "const char*"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "match",
                            "@c:identifier": "json_path_match",
                            "@version": "0.14",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../json-glib/json-path.c",
                                "@line": "925",
                                "#text": "Matches the JSON tree pointed by `root` using the expression compiled\ninto the `JsonPath`.\n\nThe nodes matching the expression will be copied into an array."
                            },
                            "source-position": {
                                "@filename": "../json-glib/json-path.h",
                                "@line": "77"
                            },
                            "return-value": {
                                "@transfer-ownership": "full",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "../json-glib/json-path.c",
                                    "@line": "935",
                                    "#text": "a newly-created node of type\n  `JSON_NODE_ARRAY` containing the array of matching nodes"
                                },
                                "type": {
                                    "@name": "Node",
                                    "@c:type": "JsonNode*"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "path",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../json-glib/json-path.c",
                                        "@line": "927",
                                        "#text": "a compiled path"
                                    },
                                    "type": {
                                        "@name": "Path",
                                        "@c:type": "JsonPath*"
                                    }
                                },
                                "parameter": {
                                    "@name": "root",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../json-glib/json-path.c",
                                        "@line": "928",
                                        "#text": "the root node of the JSON data to match"
                                    },
                                    "type": {
                                        "@name": "Node",
                                        "@c:type": "JsonNode*"
                                    }
                                }
                            }
                        }
                    ]
                },
                {
                    "@name": "Reader",
                    "@c:symbol-prefix": "reader",
                    "@c:type": "JsonReader",
                    "@version": "0.12",
                    "@parent": "GObject.Object",
                    "@glib:type-name": "JsonReader",
                    "@glib:get-type": "json_reader_get_type",
                    "@glib:type-struct": "ReaderClass",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "../json-glib/json-reader.c",
                        "@line": "23",
                        "#text": "`JsonReader` provides a simple, cursor-based API for parsing a JSON DOM.\n\nIt is similar, in spirit, to the XML Reader API.\n\n## Using `JsonReader`\n\n```c\ng_autoptr(JsonParser) parser = json_parser_new ();\n\n// str is defined elsewhere\njson_parser_load_from_data (parser, str, -1, NULL);\n\ng_autoptr(JsonReader) reader = json_reader_new (json_parser_get_root (parser));\n\njson_reader_read_member (reader, \"url\");\n  const char *url = json_reader_get_string_value (reader);\n  json_reader_end_member (reader);\n\njson_reader_read_member (reader, \"size\");\n  json_reader_read_element (reader, 0);\n    int width = json_reader_get_int_value (reader);\n    json_reader_end_element (reader);\n  json_reader_read_element (reader, 1);\n    int height = json_reader_get_int_value (reader);\n    json_reader_end_element (reader);\n  json_reader_end_member (reader);\n```\n\n## Error handling\n\nIn case of error, `JsonReader` will be set in an error state; all subsequent\ncalls will simply be ignored until a function that resets the error state is\ncalled, e.g.:\n\n```c\n// ask for the 7th element; if the element does not exist, the\n// reader will be put in an error state\njson_reader_read_element (reader, 6);\n\n// in case of error, this will return NULL, otherwise it will\n// return the value of the element\nstr = json_reader_get_string_value (value);\n\n// this function resets the error state if any was set\njson_reader_end_element (reader);\n```\n\nIf you want to detect the error state as soon as possible, you can use\n[method@Json.Reader.get_error]:\n\n```c\n// like the example above, but in this case we print out the\n// error immediately\nif (!json_reader_read_element (reader, 6))\n  {\n    const GError *error = json_reader_get_error (reader);\n    g_print (\"Unable to read the element: %s\", error->message);\n  }\n```"
                    },
                    "source-position": {
                        "@filename": "../json-glib/json-reader.h",
                        "@line": "100"
                    },
                    "constructor": {
                        "@name": "new",
                        "@c:identifier": "json_reader_new",
                        "@version": "0.12",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "../json-glib/json-reader.c",
                            "@line": "222",
                            "#text": "Creates a new reader.\n\nYou can use this object to read the contents of the JSON tree starting\nfrom the given node."
                        },
                        "source-position": {
                            "@filename": "../json-glib/json-reader.h",
                            "@line": "108"
                        },
                        "return-value": {
                            "@transfer-ownership": "full",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../json-glib/json-reader.c",
                                "@line": "231",
                                "#text": "the newly created reader"
                            },
                            "type": {
                                "@name": "Reader",
                                "@c:type": "JsonReader*"
                            }
                        },
                        "parameters": {
                            "parameter": {
                                "@name": "node",
                                "@transfer-ownership": "none",
                                "@nullable": "1",
                                "@allow-none": "1",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "../json-glib/json-reader.c",
                                    "@line": "224",
                                    "#text": "the root node"
                                },
                                "type": {
                                    "@name": "Node",
                                    "@c:type": "JsonNode*"
                                }
                            }
                        }
                    },
                    "method": [
                        {
                            "@name": "count_elements",
                            "@c:identifier": "json_reader_count_elements",
                            "@version": "0.12",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../json-glib/json-reader.c",
                                "@line": "591",
                                "#text": "Counts the elements of the current position, if the reader is\npositioned on an array.\n\nIn case of failure, the reader is set to an error state."
                            },
                            "source-position": {
                                "@filename": "../json-glib/json-reader.h",
                                "@line": "125"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "../json-glib/json-reader.c",
                                    "@line": "600",
                                    "#text": "the number of elements, or -1."
                                },
                                "type": {
                                    "@name": "gint",
                                    "@c:type": "gint"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "reader",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../json-glib/json-reader.c",
                                        "@line": "593",
                                        "#text": "a reader"
                                    },
                                    "type": {
                                        "@name": "Reader",
                                        "@c:type": "JsonReader*"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "count_members",
                            "@c:identifier": "json_reader_count_members",
                            "@version": "0.12",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../json-glib/json-reader.c",
                                "@line": "813",
                                "#text": "Counts the members of the current position, if the reader is\npositioned on an object.\n\nIn case of failure, the reader is set to an error state."
                            },
                            "source-position": {
                                "@filename": "../json-glib/json-reader.h",
                                "@line": "135"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "../json-glib/json-reader.c",
                                    "@line": "822",
                                    "#text": "the number of members, or -1"
                                },
                                "type": {
                                    "@name": "gint",
                                    "@c:type": "gint"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "reader",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../json-glib/json-reader.c",
                                        "@line": "815",
                                        "#text": "a reader"
                                    },
                                    "type": {
                                        "@name": "Reader",
                                        "@c:type": "JsonReader*"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "end_element",
                            "@c:identifier": "json_reader_end_element",
                            "@version": "0.12",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../json-glib/json-reader.c",
                                "@line": "555",
                                "#text": "Moves the cursor back to the previous node after being positioned\ninside an array.\n\nThis function resets the error state of the reader, if any was set."
                            },
                            "source-position": {
                                "@filename": "../json-glib/json-reader.h",
                                "@line": "123"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "type": {
                                    "@name": "none",
                                    "@c:type": "void"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "reader",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../json-glib/json-reader.c",
                                        "@line": "557",
                                        "#text": "a reader"
                                    },
                                    "type": {
                                        "@name": "Reader",
                                        "@c:type": "JsonReader*"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "end_member",
                            "@c:identifier": "json_reader_end_member",
                            "@version": "0.12",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../json-glib/json-reader.c",
                                "@line": "723",
                                "#text": "Moves the cursor back to the previous node after being positioned\ninside an object.\n\nThis function resets the error state of the reader, if any was set."
                            },
                            "source-position": {
                                "@filename": "../json-glib/json-reader.h",
                                "@line": "133"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "type": {
                                    "@name": "none",
                                    "@c:type": "void"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "reader",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../json-glib/json-reader.c",
                                        "@line": "725",
                                        "#text": "a reader"
                                    },
                                    "type": {
                                        "@name": "Reader",
                                        "@c:type": "JsonReader*"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "get_boolean_value",
                            "@c:identifier": "json_reader_get_boolean_value",
                            "@version": "0.12",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../json-glib/json-reader.c",
                                "@line": "1021",
                                "#text": "Retrieves the boolean value of the current position of the reader.\n\nSee also: [method@Json.Reader.get_value]"
                            },
                            "source-position": {
                                "@filename": "../json-glib/json-reader.h",
                                "@line": "152"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "../json-glib/json-reader.c",
                                    "@line": "1029",
                                    "#text": "the boolean value"
                                },
                                "type": {
                                    "@name": "gboolean",
                                    "@c:type": "gboolean"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "reader",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../json-glib/json-reader.c",
                                        "@line": "1023",
                                        "#text": "a reader"
                                    },
                                    "type": {
                                        "@name": "Reader",
                                        "@c:type": "JsonReader*"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "get_double_value",
                            "@c:identifier": "json_reader_get_double_value",
                            "@version": "0.12",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../json-glib/json-reader.c",
                                "@line": "934",
                                "#text": "Retrieves the floating point value of the current position of the reader.\n\nSee also: [method@Json.Reader.get_value]"
                            },
                            "source-position": {
                                "@filename": "../json-glib/json-reader.h",
                                "@line": "148"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "../json-glib/json-reader.c",
                                    "@line": "942",
                                    "#text": "the floating point value"
                                },
                                "type": {
                                    "@name": "gdouble",
                                    "@c:type": "gdouble"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "reader",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../json-glib/json-reader.c",
                                        "@line": "936",
                                        "#text": "a reader"
                                    },
                                    "type": {
                                        "@name": "Reader",
                                        "@c:type": "JsonReader*"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "get_error",
                            "@c:identifier": "json_reader_get_error",
                            "@version": "0.12",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../json-glib/json-reader.c",
                                "@line": "342",
                                "#text": "Retrieves the error currently set on the reader."
                            },
                            "source-position": {
                                "@filename": "../json-glib/json-reader.h",
                                "@line": "115"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "@nullable": "1",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "../json-glib/json-reader.c",
                                    "@line": "348",
                                    "#text": "the current error"
                                },
                                "type": {
                                    "@name": "GLib.Error",
                                    "@c:type": "const GError*"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "reader",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../json-glib/json-reader.c",
                                        "@line": "344",
                                        "#text": "a reader"
                                    },
                                    "type": {
                                        "@name": "Reader",
                                        "@c:type": "JsonReader*"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "get_int_value",
                            "@c:identifier": "json_reader_get_int_value",
                            "@version": "0.12",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../json-glib/json-reader.c",
                                "@line": "894",
                                "#text": "Retrieves the integer value of the current position of the reader.\n\nSee also: [method@Json.Reader.get_value]"
                            },
                            "source-position": {
                                "@filename": "../json-glib/json-reader.h",
                                "@line": "146"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "../json-glib/json-reader.c",
                                    "@line": "902",
                                    "#text": "the integer value"
                                },
                                "type": {
                                    "@name": "gint64",
                                    "@c:type": "gint64"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "reader",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../json-glib/json-reader.c",
                                        "@line": "896",
                                        "#text": "a reader"
                                    },
                                    "type": {
                                        "@name": "Reader",
                                        "@c:type": "JsonReader*"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "get_member_name",
                            "@c:identifier": "json_reader_get_member_name",
                            "@version": "0.14",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../json-glib/json-reader.c",
                                "@line": "1089",
                                "#text": "Retrieves the name of the current member.\n\nIn case of failure, the reader is set to an error state."
                            },
                            "source-position": {
                                "@filename": "../json-glib/json-reader.h",
                                "@line": "139"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "@nullable": "1",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "../json-glib/json-reader.c",
                                    "@line": "1097",
                                    "#text": "the name of the member"
                                },
                                "type": {
                                    "@name": "utf8",
                                    "@c:type": "const gchar*"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "reader",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../json-glib/json-reader.c",
                                        "@line": "1091",
                                        "#text": "a reader"
                                    },
                                    "type": {
                                        "@name": "Reader",
                                        "@c:type": "JsonReader*"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "get_null_value",
                            "@c:identifier": "json_reader_get_null_value",
                            "@version": "0.12",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../json-glib/json-reader.c",
                                "@line": "1061",
                                "#text": "Checks whether the value of the current position of the reader is `null`.\n\nSee also: [method@Json.Reader.get_value]"
                            },
                            "source-position": {
                                "@filename": "../json-glib/json-reader.h",
                                "@line": "154"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "../json-glib/json-reader.c",
                                    "@line": "1069",
                                    "#text": "`TRUE` if `null` is set, and `FALSE` otherwise"
                                },
                                "type": {
                                    "@name": "gboolean",
                                    "@c:type": "gboolean"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "reader",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../json-glib/json-reader.c",
                                        "@line": "1063",
                                        "#text": "a reader"
                                    },
                                    "type": {
                                        "@name": "Reader",
                                        "@c:type": "JsonReader*"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "get_string_value",
                            "@c:identifier": "json_reader_get_string_value",
                            "@version": "0.12",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../json-glib/json-reader.c",
                                "@line": "974",
                                "#text": "Retrieves the string value of the current position of the reader.\n\nSee also: [method@Json.Reader.get_value]"
                            },
                            "source-position": {
                                "@filename": "../json-glib/json-reader.h",
                                "@line": "150"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "../json-glib/json-reader.c",
                                    "@line": "982",
                                    "#text": "the string value"
                                },
                                "type": {
                                    "@name": "utf8",
                                    "@c:type": "const gchar*"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "reader",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../json-glib/json-reader.c",
                                        "@line": "976",
                                        "#text": "a reader"
                                    },
                                    "type": {
                                        "@name": "Reader",
                                        "@c:type": "JsonReader*"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "get_value",
                            "@c:identifier": "json_reader_get_value",
                            "@version": "0.12",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../json-glib/json-reader.c",
                                "@line": "853",
                                "#text": "Retrieves the value node at the current position of the reader.\n\nIf the current position does not contain a scalar value, the reader\nis set to an error state."
                            },
                            "source-position": {
                                "@filename": "../json-glib/json-reader.h",
                                "@line": "144"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "@nullable": "1",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "../json-glib/json-reader.c",
                                    "@line": "862",
                                    "#text": "the current value node"
                                },
                                "type": {
                                    "@name": "Node",
                                    "@c:type": "JsonNode*"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "reader",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../json-glib/json-reader.c",
                                        "@line": "855",
                                        "#text": "a reader"
                                    },
                                    "type": {
                                        "@name": "Reader",
                                        "@c:type": "JsonReader*"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "is_array",
                            "@c:identifier": "json_reader_is_array",
                            "@version": "0.12",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../json-glib/json-reader.c",
                                "@line": "360",
                                "#text": "Checks whether the reader is currently on an array."
                            },
                            "source-position": {
                                "@filename": "../json-glib/json-reader.h",
                                "@line": "118"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "../json-glib/json-reader.c",
                                    "@line": "366",
                                    "#text": "`TRUE` if the reader is on an array"
                                },
                                "type": {
                                    "@name": "gboolean",
                                    "@c:type": "gboolean"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "reader",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../json-glib/json-reader.c",
                                        "@line": "362",
                                        "#text": "a reader"
                                    },
                                    "type": {
                                        "@name": "Reader",
                                        "@c:type": "JsonReader*"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "is_object",
                            "@c:identifier": "json_reader_is_object",
                            "@version": "0.12",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../json-glib/json-reader.c",
                                "@line": "382",
                                "#text": "Checks whether the reader is currently on an object."
                            },
                            "source-position": {
                                "@filename": "../json-glib/json-reader.h",
                                "@line": "128"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "../json-glib/json-reader.c",
                                    "@line": "388",
                                    "#text": "`TRUE` if the reader is on an object"
                                },
                                "type": {
                                    "@name": "gboolean",
                                    "@c:type": "gboolean"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "reader",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../json-glib/json-reader.c",
                                        "@line": "384",
                                        "#text": "a reader"
                                    },
                                    "type": {
                                        "@name": "Reader",
                                        "@c:type": "JsonReader*"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "is_value",
                            "@c:identifier": "json_reader_is_value",
                            "@version": "0.12",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../json-glib/json-reader.c",
                                "@line": "404",
                                "#text": "Checks whether the reader is currently on a value."
                            },
                            "source-position": {
                                "@filename": "../json-glib/json-reader.h",
                                "@line": "142"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "../json-glib/json-reader.c",
                                    "@line": "410",
                                    "#text": "`TRUE` if the reader is on a value"
                                },
                                "type": {
                                    "@name": "gboolean",
                                    "@c:type": "gboolean"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "reader",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../json-glib/json-reader.c",
                                        "@line": "406",
                                        "#text": "a reader"
                                    },
                                    "type": {
                                        "@name": "Reader",
                                        "@c:type": "JsonReader*"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "list_members",
                            "@c:identifier": "json_reader_list_members",
                            "@version": "0.14",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../json-glib/json-reader.c",
                                "@line": "758",
                                "#text": "Retrieves a list of member names from the current position, if the reader\nis positioned on an object.\n\nIn case of failure, the reader is set to an error state."
                            },
                            "source-position": {
                                "@filename": "../json-glib/json-reader.h",
                                "@line": "137"
                            },
                            "return-value": {
                                "@transfer-ownership": "full",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "../json-glib/json-reader.c",
                                    "@line": "767",
                                    "#text": "the members of\n  the object"
                                },
                                "array": {
                                    "@c:type": "gchar**",
                                    "type": {
                                        "@name": "utf8"
                                    }
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "reader",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../json-glib/json-reader.c",
                                        "@line": "760",
                                        "#text": "a reader"
                                    },
                                    "type": {
                                        "@name": "Reader",
                                        "@c:type": "JsonReader*"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "read_element",
                            "@c:identifier": "json_reader_read_element",
                            "@version": "0.12",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../json-glib/json-reader.c",
                                "@line": "427",
                                "#text": "Advances the cursor of the reader to the element of the array or\nthe member of the object at the given position.\n\nYou can use [method@Json.Reader.get_value] and its wrapper functions to\nretrieve the value of the element; for instance, the following code will\nread the first element of the array at the current cursor position:\n\n```c\njson_reader_read_element (reader, 0);\nint_value = json_reader_get_int_value (reader);\n```\n\nAfter reading the value, you should call [method@Json.Reader.end_element]\nto reposition the cursor inside the reader, e.g.:\n\n```c\nconst char *str_value = NULL;\n\njson_reader_read_element (reader, 1);\nstr_value = json_reader_get_string_value (reader);\njson_reader_end_element (reader);\n\njson_reader_read_element (reader, 2);\nstr_value = json_reader_get_string_value (reader);\njson_reader_end_element (reader);\n```\n\nIf the reader is not currently on an array or an object, or if the index is\nbigger than the size of the array or the object, the reader will be\nput in an error state until [method@Json.Reader.end_element] is called. This\nmeans that, if used conditionally, [method@Json.Reader.end_element] must be\ncalled on all branches:\n\n```c\nif (!json_reader_read_element (reader, 1))\n  {\n    g_propagate_error (error, json_reader_get_error (reader));\n    json_reader_end_element (reader);\n    return FALSE;\n  }\nelse\n  {\n    const char *str_value = json_reader_get_string_value (reader);\n    json_reader_end_element (reader);\n\n    // use str_value\n\n    return TRUE;\n  }\n```c"
                            },
                            "source-position": {
                                "@filename": "../json-glib/json-reader.h",
                                "@line": "120"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "../json-glib/json-reader.c",
                                    "@line": "483",
                                    "#text": "`TRUE` on success, and `FALSE` otherwise"
                                },
                                "type": {
                                    "@name": "gboolean",
                                    "@c:type": "gboolean"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "reader",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../json-glib/json-reader.c",
                                        "@line": "429",
                                        "#text": "a reader"
                                    },
                                    "type": {
                                        "@name": "Reader",
                                        "@c:type": "JsonReader*"
                                    }
                                },
                                "parameter": {
                                    "@name": "index_",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../json-glib/json-reader.c",
                                        "@line": "430",
                                        "#text": "the index of the element"
                                    },
                                    "type": {
                                        "@name": "guint",
                                        "@c:type": "guint"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "read_member",
                            "@c:identifier": "json_reader_read_member",
                            "@version": "0.12",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../json-glib/json-reader.c",
                                "@line": "631",
                                "#text": "Advances the cursor of the reader to the `member_name` of the object at\nthe current position.\n\nYou can use [method@Json.Reader.get_value] and its wrapper functions to\nretrieve the value of the member; for instance:\n\n```c\njson_reader_read_member (reader, \"width\");\nwidth = json_reader_get_int_value (reader);\n```\n\nAfter reading the value, `json_reader_end_member()` should be called to\nreposition the cursor inside the reader, e.g.:\n\n```c\njson_reader_read_member (reader, \"author\");\nauthor = json_reader_get_string_value (reader);\njson_reader_end_member (reader);\n\njson_reader_read_member (reader, \"title\");\ntitle = json_reader_get_string_value (reader);\njson_reader_end_member (reader);\n```\n\nIf the reader is not currently on an object, or if the `member_name` is not\ndefined in the object, the reader will be put in an error state until\n[method@Json.Reader.end_member] is called. This means that if used\nconditionally, [method@Json.Reader.end_member] must be called on all branches:\n\n```c\nif (!json_reader_read_member (reader, \"title\"))\n  {\n    g_propagate_error (error, json_reader_get_error (reader));\n    json_reader_end_member (reader);\n    return FALSE;\n  }\nelse\n  {\n    const char *str_value = json_reader_get_string_value (reader);\n    json_reader_end_member (reader);\n\n    // use str_value\n\n    return TRUE;\n  }\n```"
                            },
                            "source-position": {
                                "@filename": "../json-glib/json-reader.h",
                                "@line": "130"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "../json-glib/json-reader.c",
                                    "@line": "683",
                                    "#text": "`TRUE` on success, and `FALSE` otherwise"
                                },
                                "type": {
                                    "@name": "gboolean",
                                    "@c:type": "gboolean"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "reader",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../json-glib/json-reader.c",
                                        "@line": "633",
                                        "#text": "a reader"
                                    },
                                    "type": {
                                        "@name": "Reader",
                                        "@c:type": "JsonReader*"
                                    }
                                },
                                "parameter": {
                                    "@name": "member_name",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../json-glib/json-reader.c",
                                        "@line": "634",
                                        "#text": "the name of the member to read"
                                    },
                                    "type": {
                                        "@name": "utf8",
                                        "@c:type": "const gchar*"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "set_root",
                            "@c:identifier": "json_reader_set_root",
                            "@glib:set-property": "root",
                            "@version": "0.12",
                            "attribute": {
                                "@name": "org.gtk.Method.set_property",
                                "@value": "root"
                            },
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../json-glib/json-reader.c",
                                "@line": "260",
                                "#text": "Sets the root node of the JSON tree to be read by @reader.\n\nThe reader will take a copy of the node."
                            },
                            "source-position": {
                                "@filename": "../json-glib/json-reader.h",
                                "@line": "111"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "type": {
                                    "@name": "none",
                                    "@c:type": "void"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "reader",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../json-glib/json-reader.c",
                                        "@line": "262",
                                        "#text": "a reader"
                                    },
                                    "type": {
                                        "@name": "Reader",
                                        "@c:type": "JsonReader*"
                                    }
                                },
                                "parameter": {
                                    "@name": "root",
                                    "@transfer-ownership": "none",
                                    "@nullable": "1",
                                    "@allow-none": "1",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../json-glib/json-reader.c",
                                        "@line": "263",
                                        "#text": "the root node"
                                    },
                                    "type": {
                                        "@name": "Node",
                                        "@c:type": "JsonNode*"
                                    }
                                }
                            }
                        }
                    ],
                    "property": {
                        "@name": "root",
                        "@version": "0.12",
                        "@writable": "1",
                        "@construct": "1",
                        "@transfer-ownership": "none",
                        "@setter": "set_root",
                        "attribute": {
                            "@name": "org.gtk.Property.set",
                            "@value": "json_reader_set_root"
                        },
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "../json-glib/json-reader.c",
                            "@line": "193",
                            "#text": "The root of the JSON tree that the reader should read."
                        },
                        "type": {
                            "@name": "Node"
                        }
                    },
                    "field": [
                        {
                            "@name": "parent_instance",
                            "@readable": "0",
                            "@private": "1",
                            "type": {
                                "@name": "GObject.Object",
                                "@c:type": "GObject"
                            }
                        },
                        {
                            "@name": "priv",
                            "@readable": "0",
                            "@private": "1",
                            "type": {
                                "@name": "ReaderPrivate",
                                "@c:type": "JsonReaderPrivate*"
                            }
                        }
                    ]
                }
            ],
            "constant": [
                {
                    "@name": "MAJOR_VERSION",
                    "@value": "1",
                    "@c:type": "JSON_MAJOR_VERSION",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "../json-glib/json-version.h",
                        "@line": "31",
                        "#text": "Json major version component (e.g. 1 if `JSON_VERSION` is \"1.2.3\")"
                    },
                    "source-position": {
                        "@filename": "../json-glib/json-version.h",
                        "@line": "36"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "MICRO_VERSION",
                    "@value": "6",
                    "@c:type": "JSON_MICRO_VERSION",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "../json-glib/json-version.h",
                        "@line": "45",
                        "#text": "Json micro version component (e.g. 3 if `JSON_VERSION` is \"1.2.3\")"
                    },
                    "source-position": {
                        "@filename": "../json-glib/json-version.h",
                        "@line": "50"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "MINOR_VERSION",
                    "@value": "6",
                    "@c:type": "JSON_MINOR_VERSION",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "../json-glib/json-version.h",
                        "@line": "38",
                        "#text": "Json minor version component (e.g. 2 if `JSON_VERSION` is \"1.2.3\")"
                    },
                    "source-position": {
                        "@filename": "../json-glib/json-version.h",
                        "@line": "43"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "VERSION_S",
                    "@value": "1.6.6",
                    "@c:type": "JSON_VERSION_S",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "../json-glib/json-version.h",
                        "@line": "59",
                        "#text": "The version of JSON-GLib, encoded as a string, useful for printing and\nconcatenation."
                    },
                    "source-position": {
                        "@filename": "../json-glib/json-version.h",
                        "@line": "65"
                    },
                    "type": {
                        "@name": "utf8",
                        "@c:type": "gchar*"
                    }
                }
            ],
            "enumeration": [
                {
                    "@name": "NodeType",
                    "@glib:type-name": "JsonNodeType",
                    "@glib:get-type": "json_node_type_get_type",
                    "@c:type": "JsonNodeType",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "../json-glib/json-types.h",
                        "@line": "103",
                        "#text": "Indicates the content of a node."
                    },
                    "member": [
                        {
                            "@name": "object",
                            "@value": "0",
                            "@c:identifier": "JSON_NODE_OBJECT",
                            "@glib:nick": "object",
                            "@glib:name": "JSON_NODE_OBJECT",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../json-glib/json-types.h",
                                "@line": "105",
                                "#text": "The node contains a JSON object"
                            }
                        },
                        {
                            "@name": "array",
                            "@value": "1",
                            "@c:identifier": "JSON_NODE_ARRAY",
                            "@glib:nick": "array",
                            "@glib:name": "JSON_NODE_ARRAY",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../json-glib/json-types.h",
                                "@line": "106",
                                "#text": "The node contains a JSON array"
                            }
                        },
                        {
                            "@name": "value",
                            "@value": "2",
                            "@c:identifier": "JSON_NODE_VALUE",
                            "@glib:nick": "value",
                            "@glib:name": "JSON_NODE_VALUE",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../json-glib/json-types.h",
                                "@line": "107",
                                "#text": "The node contains a fundamental type"
                            }
                        },
                        {
                            "@name": "null",
                            "@value": "3",
                            "@c:identifier": "JSON_NODE_NULL",
                            "@glib:nick": "null",
                            "@glib:name": "JSON_NODE_NULL",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../json-glib/json-types.h",
                                "@line": "108",
                                "#text": "Special type, for nodes containing null"
                            }
                        }
                    ]
                },
                {
                    "@name": "ParserError",
                    "@glib:type-name": "JsonParserError",
                    "@glib:get-type": "json_parser_error_get_type",
                    "@c:type": "JsonParserError",
                    "@glib:error-domain": "json-parser-error-quark",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "../json-glib/json-parser.h",
                        "@line": "54",
                        "#text": "Error codes for `JSON_PARSER_ERROR`.\n\nThis enumeration can be extended at later date"
                    },
                    "member": [
                        {
                            "@name": "parse",
                            "@value": "0",
                            "@c:identifier": "JSON_PARSER_ERROR_PARSE",
                            "@glib:nick": "parse",
                            "@glib:name": "JSON_PARSER_ERROR_PARSE",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../json-glib/json-parser.h",
                                "@line": "56",
                                "#text": "parse error"
                            }
                        },
                        {
                            "@name": "trailing_comma",
                            "@value": "1",
                            "@c:identifier": "JSON_PARSER_ERROR_TRAILING_COMMA",
                            "@glib:nick": "trailing-comma",
                            "@glib:name": "JSON_PARSER_ERROR_TRAILING_COMMA",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../json-glib/json-parser.h",
                                "@line": "57",
                                "#text": "unexpected trailing comma"
                            }
                        },
                        {
                            "@name": "missing_comma",
                            "@value": "2",
                            "@c:identifier": "JSON_PARSER_ERROR_MISSING_COMMA",
                            "@glib:nick": "missing-comma",
                            "@glib:name": "JSON_PARSER_ERROR_MISSING_COMMA",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../json-glib/json-parser.h",
                                "@line": "58",
                                "#text": "expected comma"
                            }
                        },
                        {
                            "@name": "missing_colon",
                            "@value": "3",
                            "@c:identifier": "JSON_PARSER_ERROR_MISSING_COLON",
                            "@glib:nick": "missing-colon",
                            "@glib:name": "JSON_PARSER_ERROR_MISSING_COLON",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../json-glib/json-parser.h",
                                "@line": "59",
                                "#text": "expected colon"
                            }
                        },
                        {
                            "@name": "invalid_bareword",
                            "@value": "4",
                            "@c:identifier": "JSON_PARSER_ERROR_INVALID_BAREWORD",
                            "@glib:nick": "invalid-bareword",
                            "@glib:name": "JSON_PARSER_ERROR_INVALID_BAREWORD",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../json-glib/json-parser.h",
                                "@line": "60",
                                "#text": "invalid bareword"
                            }
                        },
                        {
                            "@name": "empty_member_name",
                            "@value": "5",
                            "@c:identifier": "JSON_PARSER_ERROR_EMPTY_MEMBER_NAME",
                            "@glib:nick": "empty-member-name",
                            "@glib:name": "JSON_PARSER_ERROR_EMPTY_MEMBER_NAME",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../json-glib/json-parser.h",
                                "@line": "61",
                                "#text": "empty member name (Since: 0.16)"
                            }
                        },
                        {
                            "@name": "invalid_data",
                            "@value": "6",
                            "@c:identifier": "JSON_PARSER_ERROR_INVALID_DATA",
                            "@glib:nick": "invalid-data",
                            "@glib:name": "JSON_PARSER_ERROR_INVALID_DATA",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../json-glib/json-parser.h",
                                "@line": "62",
                                "#text": "invalid data (Since: 0.18)"
                            }
                        },
                        {
                            "@name": "unknown",
                            "@value": "7",
                            "@c:identifier": "JSON_PARSER_ERROR_UNKNOWN",
                            "@glib:nick": "unknown",
                            "@glib:name": "JSON_PARSER_ERROR_UNKNOWN",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../json-glib/json-parser.h",
                                "@line": "63",
                                "#text": "unknown error"
                            }
                        }
                    ],
                    "function": {
                        "@name": "quark",
                        "@c:identifier": "json_parser_error_quark",
                        "return-value": {
                            "@transfer-ownership": "none",
                            "type": {
                                "@name": "GLib.Quark",
                                "@c:type": "GQuark"
                            }
                        }
                    }
                },
                {
                    "@name": "PathError",
                    "@version": "0.14",
                    "@glib:type-name": "JsonPathError",
                    "@glib:get-type": "json_path_error_get_type",
                    "@c:type": "JsonPathError",
                    "@glib:error-domain": "json-path-error-quark",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "../json-glib/json-path.h",
                        "@line": "47",
                        "#text": "Error codes for `JSON_PATH_ERROR`.\n\nThis enumeration can be extended at later date"
                    },
                    "member": {
                        "@name": "query",
                        "@value": "0",
                        "@c:identifier": "JSON_PATH_ERROR_INVALID_QUERY",
                        "@glib:nick": "query",
                        "@glib:name": "JSON_PATH_ERROR_INVALID_QUERY",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "../json-glib/json-path.h",
                            "@line": "49",
                            "#text": "Invalid query"
                        }
                    },
                    "function": {
                        "@name": "quark",
                        "@c:identifier": "json_path_error_quark",
                        "return-value": {
                            "@transfer-ownership": "none",
                            "type": {
                                "@name": "GLib.Quark",
                                "@c:type": "GQuark"
                            }
                        }
                    }
                },
                {
                    "@name": "ReaderError",
                    "@version": "0.12",
                    "@glib:type-name": "JsonReaderError",
                    "@glib:get-type": "json_reader_error_get_type",
                    "@c:type": "JsonReaderError",
                    "@glib:error-domain": "json-reader-error-quark",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "../json-glib/json-reader.h",
                        "@line": "54",
                        "#text": "Error codes for `JSON_READER_ERROR`.\n\nThis enumeration can be extended at later date"
                    },
                    "member": [
                        {
                            "@name": "no_array",
                            "@value": "0",
                            "@c:identifier": "JSON_READER_ERROR_NO_ARRAY",
                            "@glib:nick": "no-array",
                            "@glib:name": "JSON_READER_ERROR_NO_ARRAY",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../json-glib/json-reader.h",
                                "@line": "56",
                                "#text": "No array found at the current position"
                            }
                        },
                        {
                            "@name": "invalid_index",
                            "@value": "1",
                            "@c:identifier": "JSON_READER_ERROR_INVALID_INDEX",
                            "@glib:nick": "invalid-index",
                            "@glib:name": "JSON_READER_ERROR_INVALID_INDEX",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../json-glib/json-reader.h",
                                "@line": "57",
                                "#text": "Index out of bounds"
                            }
                        },
                        {
                            "@name": "no_object",
                            "@value": "2",
                            "@c:identifier": "JSON_READER_ERROR_NO_OBJECT",
                            "@glib:nick": "no-object",
                            "@glib:name": "JSON_READER_ERROR_NO_OBJECT",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../json-glib/json-reader.h",
                                "@line": "58",
                                "#text": "No object found at the current position"
                            }
                        },
                        {
                            "@name": "invalid_member",
                            "@value": "3",
                            "@c:identifier": "JSON_READER_ERROR_INVALID_MEMBER",
                            "@glib:nick": "invalid-member",
                            "@glib:name": "JSON_READER_ERROR_INVALID_MEMBER",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../json-glib/json-reader.h",
                                "@line": "59",
                                "#text": "Member not found"
                            }
                        },
                        {
                            "@name": "invalid_node",
                            "@value": "4",
                            "@c:identifier": "JSON_READER_ERROR_INVALID_NODE",
                            "@glib:nick": "invalid-node",
                            "@glib:name": "JSON_READER_ERROR_INVALID_NODE",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../json-glib/json-reader.h",
                                "@line": "60",
                                "#text": "No valid node found at the current position"
                            }
                        },
                        {
                            "@name": "no_value",
                            "@value": "5",
                            "@c:identifier": "JSON_READER_ERROR_NO_VALUE",
                            "@glib:nick": "no-value",
                            "@glib:name": "JSON_READER_ERROR_NO_VALUE",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../json-glib/json-reader.h",
                                "@line": "61",
                                "#text": "The node at the current position does not\n  hold a value"
                            }
                        },
                        {
                            "@name": "invalid_type",
                            "@value": "6",
                            "@c:identifier": "JSON_READER_ERROR_INVALID_TYPE",
                            "@glib:nick": "invalid-type",
                            "@glib:name": "JSON_READER_ERROR_INVALID_TYPE",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../json-glib/json-reader.h",
                                "@line": "63",
                                "#text": "The node at the current position does not\n  hold a value of the desired type"
                            }
                        }
                    ],
                    "function": {
                        "@name": "quark",
                        "@c:identifier": "json_reader_error_quark",
                        "return-value": {
                            "@transfer-ownership": "none",
                            "type": {
                                "@name": "GLib.Quark",
                                "@c:type": "GQuark"
                            }
                        }
                    }
                }
            ],
            "interface": {
                "@name": "Serializable",
                "@c:symbol-prefix": "serializable",
                "@c:type": "JsonSerializable",
                "@glib:type-name": "JsonSerializable",
                "@glib:get-type": "json_serializable_get_type",
                "@glib:type-struct": "SerializableIface",
                "doc": {
                    "@xml:space": "preserve",
                    "@filename": "../json-glib/json-serializable.c",
                    "@line": "20",
                    "#text": "`JsonSerializable` is an interface for controlling the serialization\nand deserialization of `GObject` classes.\n\nImplementing this interface allows controlling how the class is going\nto be serialized or deserialized by [func@Json.construct_gobject] and\n[func@Json.serialize_gobject], respectively."
                },
                "source-position": {
                    "@filename": "../json-glib/json-gobject.h",
                    "@line": "86"
                },
                "virtual-method": [
                    {
                        "@name": "deserialize_property",
                        "@invoker": "deserialize_property",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "../json-glib/json-serializable.c",
                            "@line": "70",
                            "#text": "Asks a `JsonSerializable` implementation to deserialize the\nproperty contained inside `property_node` and place its value\ninto `value`.\n\nThe `value` can be:\n\n- an empty `GValue` initialized by `G_VALUE_INIT`, which will be automatically\n  initialized with the expected type of the property by using the given\n  property description (since JSON-GLib 1.6)\n- a `GValue` initialized with the expected type of the property"
                        },
                        "source-position": {
                            "@filename": "../json-glib/json-gobject.h",
                            "@line": "70"
                        },
                        "return-value": {
                            "@transfer-ownership": "none",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../json-glib/json-serializable.c",
                                "@line": "89",
                                "#text": "`TRUE` if the property was successfully deserialized"
                            },
                            "type": {
                                "@name": "gboolean",
                                "@c:type": "gboolean"
                            }
                        },
                        "parameters": {
                            "instance-parameter": {
                                "@name": "serializable",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "../json-glib/json-serializable.c",
                                    "@line": "72",
                                    "#text": "a serializable object"
                                },
                                "type": {
                                    "@name": "Serializable",
                                    "@c:type": "JsonSerializable*"
                                }
                            },
                            "parameter": [
                                {
                                    "@name": "property_name",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../json-glib/json-serializable.c",
                                        "@line": "73",
                                        "#text": "the name of the property to serialize"
                                    },
                                    "type": {
                                        "@name": "utf8",
                                        "@c:type": "const gchar*"
                                    }
                                },
                                {
                                    "@name": "value",
                                    "@direction": "out",
                                    "@caller-allocates": "1",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../json-glib/json-serializable.c",
                                        "@line": "74",
                                        "#text": "a pointer to an uninitialized value"
                                    },
                                    "type": {
                                        "@name": "GObject.Value",
                                        "@c:type": "GValue*"
                                    }
                                },
                                {
                                    "@name": "pspec",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../json-glib/json-serializable.c",
                                        "@line": "75",
                                        "#text": "a property description"
                                    },
                                    "type": {
                                        "@name": "GObject.ParamSpec",
                                        "@c:type": "GParamSpec*"
                                    }
                                },
                                {
                                    "@name": "property_node",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../json-glib/json-serializable.c",
                                        "@line": "76",
                                        "#text": "the JSON node containing the serialized property"
                                    },
                                    "type": {
                                        "@name": "Node",
                                        "@c:type": "JsonNode*"
                                    }
                                }
                            ]
                        }
                    },
                    {
                        "@name": "find_property",
                        "@invoker": "find_property",
                        "@version": "0.14",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "../json-glib/json-serializable.c",
                            "@line": "287",
                            "#text": "Calls the [vfunc@Json.Serializable.find_property] implementation on\nthe `JsonSerializable` instance, which will return the property\ndescription for the given name."
                        },
                        "source-position": {
                            "@filename": "../json-glib/json-gobject.h",
                            "@line": "76"
                        },
                        "return-value": {
                            "@transfer-ownership": "none",
                            "@nullable": "1",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../json-glib/json-serializable.c",
                                "@line": "296",
                                "#text": "the property description"
                            },
                            "type": {
                                "@name": "GObject.ParamSpec",
                                "@c:type": "GParamSpec*"
                            }
                        },
                        "parameters": {
                            "instance-parameter": {
                                "@name": "serializable",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "../json-glib/json-serializable.c",
                                    "@line": "289",
                                    "#text": "a serializable object"
                                },
                                "type": {
                                    "@name": "Serializable",
                                    "@c:type": "JsonSerializable*"
                                }
                            },
                            "parameter": {
                                "@name": "name",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "../json-glib/json-serializable.c",
                                    "@line": "290",
                                    "#text": "the name of the property"
                                },
                                "type": {
                                    "@name": "utf8",
                                    "@c:type": "const char*"
                                }
                            }
                        }
                    },
                    {
                        "@name": "get_property",
                        "@invoker": "get_property",
                        "@version": "0.14",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "../json-glib/json-serializable.c",
                            "@line": "359",
                            "#text": "Calls the [vfunc@Json.Serializable.get_property] implementation\non the `JsonSerializable` instance, which will get the value of\nthe given property."
                        },
                        "source-position": {
                            "@filename": "../json-glib/json-gobject.h",
                            "@line": "83"
                        },
                        "return-value": {
                            "@transfer-ownership": "none",
                            "type": {
                                "@name": "none",
                                "@c:type": "void"
                            }
                        },
                        "parameters": {
                            "instance-parameter": {
                                "@name": "serializable",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "../json-glib/json-serializable.c",
                                    "@line": "361",
                                    "#text": "a serializable object"
                                },
                                "type": {
                                    "@name": "Serializable",
                                    "@c:type": "JsonSerializable*"
                                }
                            },
                            "parameter": [
                                {
                                    "@name": "pspec",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../json-glib/json-serializable.c",
                                        "@line": "362",
                                        "#text": "a property description"
                                    },
                                    "type": {
                                        "@name": "GObject.ParamSpec",
                                        "@c:type": "GParamSpec*"
                                    }
                                },
                                {
                                    "@name": "value",
                                    "@direction": "out",
                                    "@caller-allocates": "1",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../json-glib/json-serializable.c",
                                        "@line": "363",
                                        "#text": "return location for the property value"
                                    },
                                    "type": {
                                        "@name": "GObject.Value",
                                        "@c:type": "GValue*"
                                    }
                                }
                            ]
                        }
                    },
                    {
                        "@name": "list_properties",
                        "@introspectable": "0",
                        "source-position": {
                            "@filename": "../json-glib/json-gobject.h",
                            "@line": "78"
                        },
                        "return-value": {
                            "type": {
                                "@name": "GObject.ParamSpec",
                                "@c:type": "GParamSpec**"
                            }
                        },
                        "parameters": {
                            "instance-parameter": {
                                "@name": "serializable",
                                "@transfer-ownership": "none",
                                "type": {
                                    "@name": "Serializable",
                                    "@c:type": "JsonSerializable*"
                                }
                            },
                            "parameter": {
                                "@name": "n_pspecs",
                                "@transfer-ownership": "none",
                                "type": {
                                    "@name": "guint",
                                    "@c:type": "guint*"
                                }
                            }
                        }
                    },
                    {
                        "@name": "serialize_property",
                        "@invoker": "serialize_property",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "../json-glib/json-serializable.c",
                            "@line": "40",
                            "#text": "Asks a `JsonSerializable` implementation to serialize an object\nproperty into a JSON node."
                        },
                        "source-position": {
                            "@filename": "../json-glib/json-gobject.h",
                            "@line": "66"
                        },
                        "return-value": {
                            "@transfer-ownership": "full",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../json-glib/json-serializable.c",
                                "@line": "50",
                                "#text": "a node containing the serialized property"
                            },
                            "type": {
                                "@name": "Node",
                                "@c:type": "JsonNode*"
                            }
                        },
                        "parameters": {
                            "instance-parameter": {
                                "@name": "serializable",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "../json-glib/json-serializable.c",
                                    "@line": "42",
                                    "#text": "a serializable object"
                                },
                                "type": {
                                    "@name": "Serializable",
                                    "@c:type": "JsonSerializable*"
                                }
                            },
                            "parameter": [
                                {
                                    "@name": "property_name",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../json-glib/json-serializable.c",
                                        "@line": "43",
                                        "#text": "the name of the property to serialize"
                                    },
                                    "type": {
                                        "@name": "utf8",
                                        "@c:type": "const gchar*"
                                    }
                                },
                                {
                                    "@name": "value",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../json-glib/json-serializable.c",
                                        "@line": "44",
                                        "#text": "the value of the property to serialize"
                                    },
                                    "type": {
                                        "@name": "GObject.Value",
                                        "@c:type": "const GValue*"
                                    }
                                },
                                {
                                    "@name": "pspec",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../json-glib/json-serializable.c",
                                        "@line": "45",
                                        "#text": "a property description"
                                    },
                                    "type": {
                                        "@name": "GObject.ParamSpec",
                                        "@c:type": "GParamSpec*"
                                    }
                                }
                            ]
                        }
                    },
                    {
                        "@name": "set_property",
                        "@invoker": "set_property",
                        "@version": "0.14",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "../json-glib/json-serializable.c",
                            "@line": "333",
                            "#text": "Calls the [vfunc@Json.Serializable.set_property] implementation\non the `JsonSerializable` instance, which will set the property\nwith the given value."
                        },
                        "source-position": {
                            "@filename": "../json-glib/json-gobject.h",
                            "@line": "80"
                        },
                        "return-value": {
                            "@transfer-ownership": "none",
                            "type": {
                                "@name": "none",
                                "@c:type": "void"
                            }
                        },
                        "parameters": {
                            "instance-parameter": {
                                "@name": "serializable",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "../json-glib/json-serializable.c",
                                    "@line": "335",
                                    "#text": "a serializable object"
                                },
                                "type": {
                                    "@name": "Serializable",
                                    "@c:type": "JsonSerializable*"
                                }
                            },
                            "parameter": [
                                {
                                    "@name": "pspec",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../json-glib/json-serializable.c",
                                        "@line": "336",
                                        "#text": "a property description"
                                    },
                                    "type": {
                                        "@name": "GObject.ParamSpec",
                                        "@c:type": "GParamSpec*"
                                    }
                                },
                                {
                                    "@name": "value",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../json-glib/json-serializable.c",
                                        "@line": "337",
                                        "#text": "the property value to set"
                                    },
                                    "type": {
                                        "@name": "GObject.Value",
                                        "@c:type": "const GValue*"
                                    }
                                }
                            ]
                        }
                    }
                ],
                "method": [
                    {
                        "@name": "default_deserialize_property",
                        "@c:identifier": "json_serializable_default_deserialize_property",
                        "@version": "0.10",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "../json-glib/json-serializable.c",
                            "@line": "238",
                            "#text": "Calls the default implementation of the [vfunc@Json.Serializable.deserialize_property]\nvirtual function.\n\nThis function can be used inside a custom implementation of the\n`deserialize_property()` virtual function in lieu of calling the\ndefault implementation through `g_type_default_interface_peek()`:\n\n```c\nJsonSerializable *iface;\ngboolean res;\n\niface = g_type_default_interface_peek (JSON_TYPE_SERIALIZABLE);\nres = iface->deserialize_property (serializable, property_name,\n                                   value,\n                                   pspec,\n                                   property_node);\n```"
                        },
                        "source-position": {
                            "@filename": "../json-glib/json-gobject.h",
                            "@line": "124"
                        },
                        "return-value": {
                            "@transfer-ownership": "none",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../json-glib/json-serializable.c",
                                "@line": "264",
                                "#text": "`TRUE` if the property was successfully deserialized"
                            },
                            "type": {
                                "@name": "gboolean",
                                "@c:type": "gboolean"
                            }
                        },
                        "parameters": {
                            "instance-parameter": {
                                "@name": "serializable",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "../json-glib/json-serializable.c",
                                    "@line": "240",
                                    "#text": "a serializable object"
                                },
                                "type": {
                                    "@name": "Serializable",
                                    "@c:type": "JsonSerializable*"
                                }
                            },
                            "parameter": [
                                {
                                    "@name": "property_name",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../json-glib/json-serializable.c",
                                        "@line": "241",
                                        "#text": "the name of the property to deserialize"
                                    },
                                    "type": {
                                        "@name": "utf8",
                                        "@c:type": "const gchar*"
                                    }
                                },
                                {
                                    "@name": "value",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../json-glib/json-serializable.c",
                                        "@line": "242",
                                        "#text": "a pointer to an uninitialized value"
                                    },
                                    "type": {
                                        "@name": "GObject.Value",
                                        "@c:type": "GValue*"
                                    }
                                },
                                {
                                    "@name": "pspec",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../json-glib/json-serializable.c",
                                        "@line": "243",
                                        "#text": "a property description"
                                    },
                                    "type": {
                                        "@name": "GObject.ParamSpec",
                                        "@c:type": "GParamSpec*"
                                    }
                                },
                                {
                                    "@name": "property_node",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../json-glib/json-serializable.c",
                                        "@line": "244",
                                        "#text": "the JSON node containing the serialized property"
                                    },
                                    "type": {
                                        "@name": "Node",
                                        "@c:type": "JsonNode*"
                                    }
                                }
                            ]
                        }
                    },
                    {
                        "@name": "default_serialize_property",
                        "@c:identifier": "json_serializable_default_serialize_property",
                        "@version": "0.10",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "../json-glib/json-serializable.c",
                            "@line": "190",
                            "#text": "Calls the default implementation of the [vfunc@Json.Serializable.serialize_property]\nvirtual function.\n\nThis function can be used inside a custom implementation of the\n`serialize_property()` virtual function in lieu of calling the\ndefault implementation through `g_type_default_interface_peek()`:\n\n```c\nJsonSerializable *iface;\nJsonNode *node;\n\niface = g_type_default_interface_peek (JSON_TYPE_SERIALIZABLE);\nnode = iface->serialize_property (serializable, property_name,\n                                  value,\n                                  pspec);\n```\n\nThis function will return `NULL` if the property could not be\nserialized."
                        },
                        "source-position": {
                            "@filename": "../json-glib/json-gobject.h",
                            "@line": "119"
                        },
                        "return-value": {
                            "@transfer-ownership": "full",
                            "@nullable": "1",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../json-glib/json-serializable.c",
                                "@line": "217",
                                "#text": "a node containing the\n  serialized property"
                            },
                            "type": {
                                "@name": "Node",
                                "@c:type": "JsonNode*"
                            }
                        },
                        "parameters": {
                            "instance-parameter": {
                                "@name": "serializable",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "../json-glib/json-serializable.c",
                                    "@line": "192",
                                    "#text": "a serializable object"
                                },
                                "type": {
                                    "@name": "Serializable",
                                    "@c:type": "JsonSerializable*"
                                }
                            },
                            "parameter": [
                                {
                                    "@name": "property_name",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../json-glib/json-serializable.c",
                                        "@line": "193",
                                        "#text": "the name of the property to serialize"
                                    },
                                    "type": {
                                        "@name": "utf8",
                                        "@c:type": "const gchar*"
                                    }
                                },
                                {
                                    "@name": "value",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../json-glib/json-serializable.c",
                                        "@line": "194",
                                        "#text": "the value of the property to serialize"
                                    },
                                    "type": {
                                        "@name": "GObject.Value",
                                        "@c:type": "const GValue*"
                                    }
                                },
                                {
                                    "@name": "pspec",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../json-glib/json-serializable.c",
                                        "@line": "195",
                                        "#text": "a property description"
                                    },
                                    "type": {
                                        "@name": "GObject.ParamSpec",
                                        "@c:type": "GParamSpec*"
                                    }
                                }
                            ]
                        }
                    },
                    {
                        "@name": "deserialize_property",
                        "@c:identifier": "json_serializable_deserialize_property",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "../json-glib/json-serializable.c",
                            "@line": "70",
                            "#text": "Asks a `JsonSerializable` implementation to deserialize the\nproperty contained inside `property_node` and place its value\ninto `value`.\n\nThe `value` can be:\n\n- an empty `GValue` initialized by `G_VALUE_INIT`, which will be automatically\n  initialized with the expected type of the property by using the given\n  property description (since JSON-GLib 1.6)\n- a `GValue` initialized with the expected type of the property"
                        },
                        "source-position": {
                            "@filename": "../json-glib/json-gobject.h",
                            "@line": "97"
                        },
                        "return-value": {
                            "@transfer-ownership": "none",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../json-glib/json-serializable.c",
                                "@line": "89",
                                "#text": "`TRUE` if the property was successfully deserialized"
                            },
                            "type": {
                                "@name": "gboolean",
                                "@c:type": "gboolean"
                            }
                        },
                        "parameters": {
                            "instance-parameter": {
                                "@name": "serializable",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "../json-glib/json-serializable.c",
                                    "@line": "72",
                                    "#text": "a serializable object"
                                },
                                "type": {
                                    "@name": "Serializable",
                                    "@c:type": "JsonSerializable*"
                                }
                            },
                            "parameter": [
                                {
                                    "@name": "property_name",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../json-glib/json-serializable.c",
                                        "@line": "73",
                                        "#text": "the name of the property to serialize"
                                    },
                                    "type": {
                                        "@name": "utf8",
                                        "@c:type": "const gchar*"
                                    }
                                },
                                {
                                    "@name": "value",
                                    "@direction": "out",
                                    "@caller-allocates": "1",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../json-glib/json-serializable.c",
                                        "@line": "74",
                                        "#text": "a pointer to an uninitialized value"
                                    },
                                    "type": {
                                        "@name": "GObject.Value",
                                        "@c:type": "GValue*"
                                    }
                                },
                                {
                                    "@name": "pspec",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../json-glib/json-serializable.c",
                                        "@line": "75",
                                        "#text": "a property description"
                                    },
                                    "type": {
                                        "@name": "GObject.ParamSpec",
                                        "@c:type": "GParamSpec*"
                                    }
                                },
                                {
                                    "@name": "property_node",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../json-glib/json-serializable.c",
                                        "@line": "76",
                                        "#text": "the JSON node containing the serialized property"
                                    },
                                    "type": {
                                        "@name": "Node",
                                        "@c:type": "JsonNode*"
                                    }
                                }
                            ]
                        }
                    },
                    {
                        "@name": "find_property",
                        "@c:identifier": "json_serializable_find_property",
                        "@version": "0.14",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "../json-glib/json-serializable.c",
                            "@line": "287",
                            "#text": "Calls the [vfunc@Json.Serializable.find_property] implementation on\nthe `JsonSerializable` instance, which will return the property\ndescription for the given name."
                        },
                        "source-position": {
                            "@filename": "../json-glib/json-gobject.h",
                            "@line": "104"
                        },
                        "return-value": {
                            "@transfer-ownership": "none",
                            "@nullable": "1",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../json-glib/json-serializable.c",
                                "@line": "296",
                                "#text": "the property description"
                            },
                            "type": {
                                "@name": "GObject.ParamSpec",
                                "@c:type": "GParamSpec*"
                            }
                        },
                        "parameters": {
                            "instance-parameter": {
                                "@name": "serializable",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "../json-glib/json-serializable.c",
                                    "@line": "289",
                                    "#text": "a serializable object"
                                },
                                "type": {
                                    "@name": "Serializable",
                                    "@c:type": "JsonSerializable*"
                                }
                            },
                            "parameter": {
                                "@name": "name",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "../json-glib/json-serializable.c",
                                    "@line": "290",
                                    "#text": "the name of the property"
                                },
                                "type": {
                                    "@name": "utf8",
                                    "@c:type": "const char*"
                                }
                            }
                        }
                    },
                    {
                        "@name": "get_property",
                        "@c:identifier": "json_serializable_get_property",
                        "@version": "0.14",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "../json-glib/json-serializable.c",
                            "@line": "359",
                            "#text": "Calls the [vfunc@Json.Serializable.get_property] implementation\non the `JsonSerializable` instance, which will get the value of\nthe given property."
                        },
                        "source-position": {
                            "@filename": "../json-glib/json-gobject.h",
                            "@line": "114"
                        },
                        "return-value": {
                            "@transfer-ownership": "none",
                            "type": {
                                "@name": "none",
                                "@c:type": "void"
                            }
                        },
                        "parameters": {
                            "instance-parameter": {
                                "@name": "serializable",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "../json-glib/json-serializable.c",
                                    "@line": "361",
                                    "#text": "a serializable object"
                                },
                                "type": {
                                    "@name": "Serializable",
                                    "@c:type": "JsonSerializable*"
                                }
                            },
                            "parameter": [
                                {
                                    "@name": "pspec",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../json-glib/json-serializable.c",
                                        "@line": "362",
                                        "#text": "a property description"
                                    },
                                    "type": {
                                        "@name": "GObject.ParamSpec",
                                        "@c:type": "GParamSpec*"
                                    }
                                },
                                {
                                    "@name": "value",
                                    "@direction": "out",
                                    "@caller-allocates": "1",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../json-glib/json-serializable.c",
                                        "@line": "363",
                                        "#text": "return location for the property value"
                                    },
                                    "type": {
                                        "@name": "GObject.Value",
                                        "@c:type": "GValue*"
                                    }
                                }
                            ]
                        }
                    },
                    {
                        "@name": "list_properties",
                        "@c:identifier": "json_serializable_list_properties",
                        "@version": "0.14",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "../json-glib/json-serializable.c",
                            "@line": "310",
                            "#text": "Calls the [vfunc@Json.Serializable.list_properties] implementation on\nthe `JsonSerializable` instance, which will return the list of serializable\nproperties."
                        },
                        "source-position": {
                            "@filename": "../json-glib/json-gobject.h",
                            "@line": "107"
                        },
                        "return-value": {
                            "@transfer-ownership": "container",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../json-glib/json-serializable.c",
                                "@line": "319",
                                "#text": "the serializable\n  properties of the object"
                            },
                            "array": {
                                "@length": "0",
                                "@zero-terminated": "0",
                                "@c:type": "GParamSpec**",
                                "type": {
                                    "@name": "GObject.ParamSpec",
                                    "@c:type": "GParamSpec*"
                                }
                            }
                        },
                        "parameters": {
                            "instance-parameter": {
                                "@name": "serializable",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "../json-glib/json-serializable.c",
                                    "@line": "312",
                                    "#text": "a serializable object"
                                },
                                "type": {
                                    "@name": "Serializable",
                                    "@c:type": "JsonSerializable*"
                                }
                            },
                            "parameter": {
                                "@name": "n_pspecs",
                                "@direction": "out",
                                "@caller-allocates": "0",
                                "@transfer-ownership": "full",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "../json-glib/json-serializable.c",
                                    "@line": "313",
                                    "#text": "return location for the length of the returned array"
                                },
                                "type": {
                                    "@name": "guint",
                                    "@c:type": "guint*"
                                }
                            }
                        }
                    },
                    {
                        "@name": "serialize_property",
                        "@c:identifier": "json_serializable_serialize_property",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "../json-glib/json-serializable.c",
                            "@line": "40",
                            "#text": "Asks a `JsonSerializable` implementation to serialize an object\nproperty into a JSON node."
                        },
                        "source-position": {
                            "@filename": "../json-glib/json-gobject.h",
                            "@line": "92"
                        },
                        "return-value": {
                            "@transfer-ownership": "full",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../json-glib/json-serializable.c",
                                "@line": "50",
                                "#text": "a node containing the serialized property"
                            },
                            "type": {
                                "@name": "Node",
                                "@c:type": "JsonNode*"
                            }
                        },
                        "parameters": {
                            "instance-parameter": {
                                "@name": "serializable",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "../json-glib/json-serializable.c",
                                    "@line": "42",
                                    "#text": "a serializable object"
                                },
                                "type": {
                                    "@name": "Serializable",
                                    "@c:type": "JsonSerializable*"
                                }
                            },
                            "parameter": [
                                {
                                    "@name": "property_name",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../json-glib/json-serializable.c",
                                        "@line": "43",
                                        "#text": "the name of the property to serialize"
                                    },
                                    "type": {
                                        "@name": "utf8",
                                        "@c:type": "const gchar*"
                                    }
                                },
                                {
                                    "@name": "value",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../json-glib/json-serializable.c",
                                        "@line": "44",
                                        "#text": "the value of the property to serialize"
                                    },
                                    "type": {
                                        "@name": "GObject.Value",
                                        "@c:type": "const GValue*"
                                    }
                                },
                                {
                                    "@name": "pspec",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../json-glib/json-serializable.c",
                                        "@line": "45",
                                        "#text": "a property description"
                                    },
                                    "type": {
                                        "@name": "GObject.ParamSpec",
                                        "@c:type": "GParamSpec*"
                                    }
                                }
                            ]
                        }
                    },
                    {
                        "@name": "set_property",
                        "@c:identifier": "json_serializable_set_property",
                        "@version": "0.14",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "../json-glib/json-serializable.c",
                            "@line": "333",
                            "#text": "Calls the [vfunc@Json.Serializable.set_property] implementation\non the `JsonSerializable` instance, which will set the property\nwith the given value."
                        },
                        "source-position": {
                            "@filename": "../json-glib/json-gobject.h",
                            "@line": "110"
                        },
                        "return-value": {
                            "@transfer-ownership": "none",
                            "type": {
                                "@name": "none",
                                "@c:type": "void"
                            }
                        },
                        "parameters": {
                            "instance-parameter": {
                                "@name": "serializable",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "../json-glib/json-serializable.c",
                                    "@line": "335",
                                    "#text": "a serializable object"
                                },
                                "type": {
                                    "@name": "Serializable",
                                    "@c:type": "JsonSerializable*"
                                }
                            },
                            "parameter": [
                                {
                                    "@name": "pspec",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../json-glib/json-serializable.c",
                                        "@line": "336",
                                        "#text": "a property description"
                                    },
                                    "type": {
                                        "@name": "GObject.ParamSpec",
                                        "@c:type": "GParamSpec*"
                                    }
                                },
                                {
                                    "@name": "value",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../json-glib/json-serializable.c",
                                        "@line": "337",
                                        "#text": "the property value to set"
                                    },
                                    "type": {
                                        "@name": "GObject.Value",
                                        "@c:type": "const GValue*"
                                    }
                                }
                            ]
                        }
                    }
                ]
            },
            "function": [
                {
                    "@name": "boxed_can_deserialize",
                    "@c:identifier": "json_boxed_can_deserialize",
                    "@version": "0.10",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "../json-glib/json-gboxed.c",
                        "@line": "214",
                        "#text": "Checks whether it is possible to deserialize a `GBoxed` of\ntype `gboxed_type` from a [struct@Json.Node] of type `node_type`."
                    },
                    "source-position": {
                        "@filename": "../json-glib/json-gobject.h",
                        "@line": "214"
                    },
                    "return-value": {
                        "@transfer-ownership": "none",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "../json-glib/json-gboxed.c",
                            "@line": "222",
                            "#text": "`TRUE` if the type can be deserialized, and `FALSE` otherwise"
                        },
                        "type": {
                            "@name": "gboolean",
                            "@c:type": "gboolean"
                        }
                    },
                    "parameters": {
                        "parameter": [
                            {
                                "@name": "gboxed_type",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "../json-glib/json-gboxed.c",
                                    "@line": "216",
                                    "#text": "a boxed type"
                                },
                                "type": {
                                    "@name": "GType",
                                    "@c:type": "GType"
                                }
                            },
                            {
                                "@name": "node_type",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "../json-glib/json-gboxed.c",
                                    "@line": "217",
                                    "#text": "a node type"
                                },
                                "type": {
                                    "@name": "NodeType",
                                    "@c:type": "JsonNodeType"
                                }
                            }
                        ]
                    }
                },
                {
                    "@name": "boxed_can_serialize",
                    "@c:identifier": "json_boxed_can_serialize",
                    "@version": "0.10",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "../json-glib/json-gboxed.c",
                        "@line": "177",
                        "#text": "Checks whether it is possible to serialize a `GBoxed` of\ntype `gboxed_type` into a [struct@Json.Node].\n\nThe type of the node is placed inside `node_type` if the function\nreturns `TRUE`, and it's undefined otherwise."
                    },
                    "source-position": {
                        "@filename": "../json-glib/json-gobject.h",
                        "@line": "211"
                    },
                    "return-value": {
                        "@transfer-ownership": "none",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "../json-glib/json-gboxed.c",
                            "@line": "189",
                            "#text": "`TRUE` if the type can be serialized, and `FALSE` otherwise"
                        },
                        "type": {
                            "@name": "gboolean",
                            "@c:type": "gboolean"
                        }
                    },
                    "parameters": {
                        "parameter": [
                            {
                                "@name": "gboxed_type",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "../json-glib/json-gboxed.c",
                                    "@line": "179",
                                    "#text": "a boxed type"
                                },
                                "type": {
                                    "@name": "GType",
                                    "@c:type": "GType"
                                }
                            },
                            {
                                "@name": "node_type",
                                "@direction": "out",
                                "@caller-allocates": "0",
                                "@transfer-ownership": "full",
                                "@optional": "1",
                                "@allow-none": "1",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "../json-glib/json-gboxed.c",
                                    "@line": "180",
                                    "#text": "the node type to which the boxed type\n  can be serialized into"
                                },
                                "type": {
                                    "@name": "NodeType",
                                    "@c:type": "JsonNodeType*"
                                }
                            }
                        ]
                    }
                },
                {
                    "@name": "boxed_deserialize",
                    "@c:identifier": "json_boxed_deserialize",
                    "@version": "0.10",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "../json-glib/json-gboxed.c",
                        "@line": "272",
                        "#text": "Deserializes the given [struct@Json.Node] into a `GBoxed` of the given type."
                    },
                    "source-position": {
                        "@filename": "../json-glib/json-gobject.h",
                        "@line": "220"
                    },
                    "return-value": {
                        "@transfer-ownership": "full",
                        "@nullable": "1",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "../json-glib/json-gboxed.c",
                            "@line": "279",
                            "#text": "the newly allocated boxed data"
                        },
                        "type": {
                            "@name": "gpointer",
                            "@c:type": "gpointer"
                        }
                    },
                    "parameters": {
                        "parameter": [
                            {
                                "@name": "gboxed_type",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "../json-glib/json-gboxed.c",
                                    "@line": "274",
                                    "#text": "a boxed type"
                                },
                                "type": {
                                    "@name": "GType",
                                    "@c:type": "GType"
                                }
                            },
                            {
                                "@name": "node",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "../json-glib/json-gboxed.c",
                                    "@line": "275",
                                    "#text": "a node"
                                },
                                "type": {
                                    "@name": "Node",
                                    "@c:type": "JsonNode*"
                                }
                            }
                        ]
                    }
                },
                {
                    "@name": "boxed_register_deserialize_func",
                    "@c:identifier": "json_boxed_register_deserialize_func",
                    "@version": "0.10",
                    "@introspectable": "0",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "../json-glib/json-gboxed.c",
                        "@line": "133",
                        "#text": "Registers a deserialization function for a `GBoxed` of type `gboxed_type`\nfrom a [struct@Json.Node] of type `node_type`."
                    },
                    "source-position": {
                        "@filename": "../json-glib/json-gobject.h",
                        "@line": "207"
                    },
                    "return-value": {
                        "@transfer-ownership": "none",
                        "type": {
                            "@name": "none",
                            "@c:type": "void"
                        }
                    },
                    "parameters": {
                        "parameter": [
                            {
                                "@name": "gboxed_type",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "../json-glib/json-gboxed.c",
                                    "@line": "135",
                                    "#text": "a boxed type"
                                },
                                "type": {
                                    "@name": "GType",
                                    "@c:type": "GType"
                                }
                            },
                            {
                                "@name": "node_type",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "../json-glib/json-gboxed.c",
                                    "@line": "136",
                                    "#text": "a node type"
                                },
                                "type": {
                                    "@name": "NodeType",
                                    "@c:type": "JsonNodeType"
                                }
                            },
                            {
                                "@name": "deserialize_func",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "../json-glib/json-gboxed.c",
                                    "@line": "137",
                                    "#text": "deserialization function"
                                },
                                "type": {
                                    "@name": "BoxedDeserializeFunc",
                                    "@c:type": "JsonBoxedDeserializeFunc"
                                }
                            }
                        ]
                    }
                },
                {
                    "@name": "boxed_register_serialize_func",
                    "@c:identifier": "json_boxed_register_serialize_func",
                    "@version": "0.10",
                    "@introspectable": "0",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "../json-glib/json-gboxed.c",
                        "@line": "89",
                        "#text": "Registers a serialization function for a `GBoxed` of type `gboxed_type`\nto a [struct@Json.Node] of type `node_type`."
                    },
                    "source-position": {
                        "@filename": "../json-glib/json-gobject.h",
                        "@line": "203"
                    },
                    "return-value": {
                        "@transfer-ownership": "none",
                        "type": {
                            "@name": "none",
                            "@c:type": "void"
                        }
                    },
                    "parameters": {
                        "parameter": [
                            {
                                "@name": "gboxed_type",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "../json-glib/json-gboxed.c",
                                    "@line": "91",
                                    "#text": "a boxed type"
                                },
                                "type": {
                                    "@name": "GType",
                                    "@c:type": "GType"
                                }
                            },
                            {
                                "@name": "node_type",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "../json-glib/json-gboxed.c",
                                    "@line": "92",
                                    "#text": "a node type"
                                },
                                "type": {
                                    "@name": "NodeType",
                                    "@c:type": "JsonNodeType"
                                }
                            },
                            {
                                "@name": "serialize_func",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "../json-glib/json-gboxed.c",
                                    "@line": "93",
                                    "#text": "serialization function"
                                },
                                "type": {
                                    "@name": "BoxedSerializeFunc",
                                    "@c:type": "JsonBoxedSerializeFunc"
                                }
                            }
                        ]
                    }
                },
                {
                    "@name": "boxed_serialize",
                    "@c:identifier": "json_boxed_serialize",
                    "@version": "0.10",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "../json-glib/json-gboxed.c",
                        "@line": "242",
                        "#text": "Serializes a pointer to a `GBoxed` of the given type into a [struct@Json.Node].\n\nIf the serialization is not possible, this function will return `NULL`."
                    },
                    "source-position": {
                        "@filename": "../json-glib/json-gobject.h",
                        "@line": "217"
                    },
                    "return-value": {
                        "@transfer-ownership": "full",
                        "@nullable": "1",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "../json-glib/json-gboxed.c",
                            "@line": "251",
                            "#text": "a node with the serialized boxed type"
                        },
                        "type": {
                            "@name": "Node",
                            "@c:type": "JsonNode*"
                        }
                    },
                    "parameters": {
                        "parameter": [
                            {
                                "@name": "gboxed_type",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "../json-glib/json-gboxed.c",
                                    "@line": "244",
                                    "#text": "a boxed type"
                                },
                                "type": {
                                    "@name": "GType",
                                    "@c:type": "GType"
                                }
                            },
                            {
                                "@name": "boxed",
                                "@transfer-ownership": "none",
                                "@nullable": "1",
                                "@allow-none": "1",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "../json-glib/json-gboxed.c",
                                    "@line": "245",
                                    "#text": "a pointer to a boxed of type `gboxed_type`"
                                },
                                "type": {
                                    "@name": "gpointer",
                                    "@c:type": "gconstpointer"
                                }
                            }
                        ]
                    }
                },
                {
                    "@name": "construct_gobject",
                    "@c:identifier": "json_construct_gobject",
                    "@version": "0.4",
                    "@deprecated": "1",
                    "@deprecated-version": "0.10",
                    "@throws": "1",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "../json-glib/json-gobject.c",
                        "@line": "837",
                        "#text": "Deserializes a JSON data stream and creates an instance of the given\ntype\n\nIf the given type implements the [iface@Json.Serializable] interface, it\nwill be asked to deserialize all the JSON members into their respective\nproperties; otherwise, the default implementation will be used to translate\nthe compatible JSON native types.\n\n**Note**: the JSON data stream must be an object."
                    },
                    "doc-deprecated": {
                        "@xml:space": "preserve",
                        "#text": "Use [func@Json.gobject_from_data] instead"
                    },
                    "source-position": {
                        "@filename": "../json-glib/json-gobject.h",
                        "@line": "239"
                    },
                    "return-value": {
                        "@transfer-ownership": "full",
                        "@nullable": "1",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "../json-glib/json-gobject.c",
                            "@line": "854",
                            "#text": "a new object instance of the given type"
                        },
                        "type": {
                            "@name": "GObject.Object",
                            "@c:type": "GObject*"
                        }
                    },
                    "parameters": {
                        "parameter": [
                            {
                                "@name": "gtype",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "../json-glib/json-gobject.c",
                                    "@line": "839",
                                    "#text": "the type of the object to construct"
                                },
                                "type": {
                                    "@name": "GType",
                                    "@c:type": "GType"
                                }
                            },
                            {
                                "@name": "data",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "../json-glib/json-gobject.c",
                                    "@line": "840",
                                    "#text": "a JSON data stream"
                                },
                                "type": {
                                    "@name": "utf8",
                                    "@c:type": "const gchar*"
                                }
                            },
                            {
                                "@name": "length",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "../json-glib/json-gobject.c",
                                    "@line": "841",
                                    "#text": "length of the data stream"
                                },
                                "type": {
                                    "@name": "gsize",
                                    "@c:type": "gsize"
                                }
                            }
                        ]
                    }
                },
                {
                    "@name": "from_string",
                    "@c:identifier": "json_from_string",
                    "@version": "1.2",
                    "@throws": "1",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "../json-glib/json-utils.c",
                        "@line": "26",
                        "#text": "Parses the given string and returns the corresponding JSON tree.\n\nIf the string is empty, this function will return `NULL`.\n\nIn case of parsing error, this function returns `NULL` and sets\nthe error appropriately."
                    },
                    "source-position": {
                        "@filename": "../json-glib/json-utils.h",
                        "@line": "32"
                    },
                    "return-value": {
                        "@transfer-ownership": "full",
                        "@nullable": "1",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "../json-glib/json-utils.c",
                            "@line": "38",
                            "#text": "the root node of the JSON tree"
                        },
                        "type": {
                            "@name": "Node",
                            "@c:type": "JsonNode*"
                        }
                    },
                    "parameters": {
                        "parameter": {
                            "@name": "str",
                            "@transfer-ownership": "none",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../json-glib/json-utils.c",
                                "@line": "28",
                                "#text": "a valid UTF-8 string containing JSON data"
                            },
                            "type": {
                                "@name": "utf8",
                                "@c:type": "const char*"
                            }
                        }
                    }
                },
                {
                    "@name": "gobject_deserialize",
                    "@c:identifier": "json_gobject_deserialize",
                    "@version": "0.10",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "../json-glib/json-gobject.c",
                        "@line": "785",
                        "#text": "Creates a new `GObject` instance of the given type, and constructs it\nusing the members of the object in the given node."
                    },
                    "source-position": {
                        "@filename": "../json-glib/json-gobject.h",
                        "@line": "226"
                    },
                    "return-value": {
                        "@transfer-ownership": "full",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "../json-glib/json-gobject.c",
                            "@line": "794",
                            "#text": "The newly created instance"
                        },
                        "type": {
                            "@name": "GObject.Object",
                            "@c:type": "GObject*"
                        }
                    },
                    "parameters": {
                        "parameter": [
                            {
                                "@name": "gtype",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "../json-glib/json-gobject.c",
                                    "@line": "787",
                                    "#text": "the type of the object to create"
                                },
                                "type": {
                                    "@name": "GType",
                                    "@c:type": "GType"
                                }
                            },
                            {
                                "@name": "node",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "../json-glib/json-gobject.c",
                                    "@line": "788",
                                    "#text": "a node of type `JSON_NODE_OBJECT` describing the\n  object instance for the given type"
                                },
                                "type": {
                                    "@name": "Node",
                                    "@c:type": "JsonNode*"
                                }
                            }
                        ]
                    }
                },
                {
                    "@name": "gobject_from_data",
                    "@c:identifier": "json_gobject_from_data",
                    "@version": "0.10",
                    "@throws": "1",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "../json-glib/json-gobject.c",
                        "@line": "869",
                        "#text": "Deserializes a JSON data stream and creates an instance of the\ngiven type.\n\nIf the type implements the [iface@Json.Serializable] interface, it will\nbe asked to deserialize all the JSON members into their respective properties;\notherwise, the default implementation will be used to translate the\ncompatible JSON native types.\n\n**Note**: the JSON data stream must be an object"
                    },
                    "source-position": {
                        "@filename": "../json-glib/json-gobject.h",
                        "@line": "230"
                    },
                    "return-value": {
                        "@transfer-ownership": "full",
                        "@nullable": "1",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "../json-glib/json-gobject.c",
                            "@line": "886",
                            "#text": "a new object instance of the given type"
                        },
                        "type": {
                            "@name": "GObject.Object",
                            "@c:type": "GObject*"
                        }
                    },
                    "parameters": {
                        "parameter": [
                            {
                                "@name": "gtype",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "../json-glib/json-gobject.c",
                                    "@line": "871",
                                    "#text": "the type of the object to construct"
                                },
                                "type": {
                                    "@name": "GType",
                                    "@c:type": "GType"
                                }
                            },
                            {
                                "@name": "data",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "../json-glib/json-gobject.c",
                                    "@line": "872",
                                    "#text": "a JSON data stream"
                                },
                                "type": {
                                    "@name": "utf8",
                                    "@c:type": "const gchar*"
                                }
                            },
                            {
                                "@name": "length",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "../json-glib/json-gobject.c",
                                    "@line": "873",
                                    "#text": "length of the data stream, or -1 if it is `NUL`-terminated"
                                },
                                "type": {
                                    "@name": "gssize",
                                    "@c:type": "gssize"
                                }
                            }
                        ]
                    }
                },
                {
                    "@name": "gobject_serialize",
                    "@c:identifier": "json_gobject_serialize",
                    "@version": "0.10",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "../json-glib/json-gobject.c",
                        "@line": "808",
                        "#text": "Creates a JSON tree representing the passed object instance.\n\nEach member of the returned JSON object will map to a property of\nthe object type.\n\nThe returned JSON tree will be returned as a `JsonNode` with a type\nof `JSON_NODE_OBJECT`."
                    },
                    "source-position": {
                        "@filename": "../json-glib/json-gobject.h",
                        "@line": "224"
                    },
                    "return-value": {
                        "@transfer-ownership": "full",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "../json-glib/json-gobject.c",
                            "@line": "820",
                            "#text": "the newly created JSON tree"
                        },
                        "type": {
                            "@name": "Node",
                            "@c:type": "JsonNode*"
                        }
                    },
                    "parameters": {
                        "parameter": {
                            "@name": "gobject",
                            "@transfer-ownership": "none",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../json-glib/json-gobject.c",
                                "@line": "810",
                                "#text": "the object to serialize"
                            },
                            "type": {
                                "@name": "GObject.Object",
                                "@c:type": "GObject*"
                            }
                        }
                    }
                },
                {
                    "@name": "gobject_to_data",
                    "@c:identifier": "json_gobject_to_data",
                    "@version": "0.10",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "../json-glib/json-gobject.c",
                        "@line": "960",
                        "#text": "Serializes a `GObject` instance into a JSON data stream, iterating\nrecursively over each property.\n\nIf the given object implements the [iface@Json.Serializable] interface,\nit will be asked to serialize all its properties; otherwise, the default\nimplementation will be use to translate the compatible types into\nJSON native types."
                    },
                    "source-position": {
                        "@filename": "../json-glib/json-gobject.h",
                        "@line": "235"
                    },
                    "return-value": {
                        "@transfer-ownership": "full",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "../json-glib/json-gobject.c",
                            "@line": "973",
                            "#text": "a JSON data stream representing the given object"
                        },
                        "type": {
                            "@name": "utf8",
                            "@c:type": "gchar*"
                        }
                    },
                    "parameters": {
                        "parameter": [
                            {
                                "@name": "gobject",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "../json-glib/json-gobject.c",
                                    "@line": "962",
                                    "#text": "the object to serialize"
                                },
                                "type": {
                                    "@name": "GObject.Object",
                                    "@c:type": "GObject*"
                                }
                            },
                            {
                                "@name": "length",
                                "@direction": "out",
                                "@caller-allocates": "0",
                                "@transfer-ownership": "full",
                                "@optional": "1",
                                "@allow-none": "1",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "../json-glib/json-gobject.c",
                                    "@line": "963",
                                    "#text": "return value for the length of the buffer"
                                },
                                "type": {
                                    "@name": "gsize",
                                    "@c:type": "gsize*"
                                }
                            }
                        ]
                    }
                },
                {
                    "@name": "gvariant_deserialize",
                    "@c:identifier": "json_gvariant_deserialize",
                    "@version": "0.14",
                    "@throws": "1",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "../json-glib/json-gvariant.c",
                        "@line": "1233",
                        "#text": "Converts a JSON data structure to a `GVariant`.\n\nIf `signature` is not `NULL`, it will be used to resolve ambiguous\ndata types.\n\nIf no error occurs, the resulting `GVariant` is guaranteed to conform\nto `signature`.\n\nIf `signature` is not `NULL` but does not represent a valid `GVariant` type\nstring, `NULL` is returned and the `error` is set to\n`G_IO_ERROR_INVALID_ARGUMENT`.\n\nIf a `signature` is provided but the JSON structure cannot be mapped to it,\n`NULL` is returned and the `error` is set to `G_IO_ERROR_INVALID_DATA`.\n\nIf `signature` is `NULL`, the conversion is done based strictly on the types\nin the JSON nodes.\n\nThe returned variant has a floating reference that will need to be sunk\nby the caller code."
                    },
                    "source-position": {
                        "@filename": "../json-glib/json-gvariant.h",
                        "@line": "42"
                    },
                    "return-value": {
                        "@transfer-ownership": "none",
                        "@nullable": "1",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "../json-glib/json-gvariant.c",
                            "@line": "1260",
                            "#text": "A newly created `GVariant`"
                        },
                        "type": {
                            "@name": "GLib.Variant",
                            "@c:type": "GVariant*"
                        }
                    },
                    "parameters": {
                        "parameter": [
                            {
                                "@name": "json_node",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "../json-glib/json-gvariant.c",
                                    "@line": "1235",
                                    "#text": "the node to convert"
                                },
                                "type": {
                                    "@name": "Node",
                                    "@c:type": "JsonNode*"
                                }
                            },
                            {
                                "@name": "signature",
                                "@transfer-ownership": "none",
                                "@nullable": "1",
                                "@allow-none": "1",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "../json-glib/json-gvariant.c",
                                    "@line": "1236",
                                    "#text": "a valid `GVariant` type string"
                                },
                                "type": {
                                    "@name": "utf8",
                                    "@c:type": "const gchar*"
                                }
                            }
                        ]
                    }
                },
                {
                    "@name": "gvariant_deserialize_data",
                    "@c:identifier": "json_gvariant_deserialize_data",
                    "@version": "0.14",
                    "@throws": "1",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "../json-glib/json-gvariant.c",
                        "@line": "1283",
                        "#text": "Converts a JSON string to a `GVariant` value.\n\nThis function works exactly like [func@Json.gvariant_deserialize], but\ntakes a JSON encoded string instead.\n\nThe string is first converted to a [struct@Json.Node] using\n[class@Json.Parser], and then `json_gvariant_deserialize` is called on\nthe node.\n\nThe returned variant has a floating reference that will need to be sunk\nby the caller code."
                    },
                    "source-position": {
                        "@filename": "../json-glib/json-gvariant.h",
                        "@line": "46"
                    },
                    "return-value": {
                        "@transfer-ownership": "none",
                        "@nullable": "1",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "../json-glib/json-gvariant.c",
                            "@line": "1302",
                            "#text": "A newly created `GVariant`D compliant"
                        },
                        "type": {
                            "@name": "GLib.Variant",
                            "@c:type": "GVariant*"
                        }
                    },
                    "parameters": {
                        "parameter": [
                            {
                                "@name": "json",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "../json-glib/json-gvariant.c",
                                    "@line": "1285",
                                    "#text": "A JSON data string"
                                },
                                "type": {
                                    "@name": "utf8",
                                    "@c:type": "const gchar*"
                                }
                            },
                            {
                                "@name": "length",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "../json-glib/json-gvariant.c",
                                    "@line": "1286",
                                    "#text": "The length of @json, or -1 if `NUL`-terminated"
                                },
                                "type": {
                                    "@name": "gssize",
                                    "@c:type": "gssize"
                                }
                            },
                            {
                                "@name": "signature",
                                "@transfer-ownership": "none",
                                "@nullable": "1",
                                "@allow-none": "1",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "../json-glib/json-gvariant.c",
                                    "@line": "1287",
                                    "#text": "A valid `GVariant` type string"
                                },
                                "type": {
                                    "@name": "utf8",
                                    "@c:type": "const gchar*"
                                }
                            }
                        ]
                    }
                },
                {
                    "@name": "gvariant_serialize",
                    "@c:identifier": "json_gvariant_serialize",
                    "@version": "0.14",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "../json-glib/json-gvariant.c",
                        "@line": "216",
                        "#text": "Converts `variant` to a JSON tree."
                    },
                    "source-position": {
                        "@filename": "../json-glib/json-gvariant.h",
                        "@line": "36"
                    },
                    "return-value": {
                        "@transfer-ownership": "full",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "../json-glib/json-gvariant.c",
                            "@line": "222",
                            "#text": "the root of the JSON data structure\n  obtained from `variant`"
                        },
                        "type": {
                            "@name": "Node",
                            "@c:type": "JsonNode*"
                        }
                    },
                    "parameters": {
                        "parameter": {
                            "@name": "variant",
                            "@transfer-ownership": "none",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../json-glib/json-gvariant.c",
                                "@line": "218",
                                "#text": "A `GVariant` to convert"
                            },
                            "type": {
                                "@name": "GLib.Variant",
                                "@c:type": "GVariant*"
                            }
                        }
                    }
                },
                {
                    "@name": "gvariant_serialize_data",
                    "@c:identifier": "json_gvariant_serialize_data",
                    "@version": "0.14",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "../json-glib/json-gvariant.c",
                        "@line": "371",
                        "#text": "Converts @variant to its JSON encoded string representation.\n\nThis is a convenience function around [func@Json.gvariant_serialize], to\nobtain the JSON tree, and then [class@Json.Generator] to stringify it."
                    },
                    "source-position": {
                        "@filename": "../json-glib/json-gvariant.h",
                        "@line": "38"
                    },
                    "return-value": {
                        "@transfer-ownership": "full",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "../json-glib/json-gvariant.c",
                            "@line": "381",
                            "#text": "The JSON encoded string corresponding to\n  the given variant"
                        },
                        "type": {
                            "@name": "utf8",
                            "@c:type": "gchar*"
                        }
                    },
                    "parameters": {
                        "parameter": [
                            {
                                "@name": "variant",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "../json-glib/json-gvariant.c",
                                    "@line": "373",
                                    "#text": "A #GVariant to convert"
                                },
                                "type": {
                                    "@name": "GLib.Variant",
                                    "@c:type": "GVariant*"
                                }
                            },
                            {
                                "@name": "length",
                                "@direction": "out",
                                "@caller-allocates": "0",
                                "@transfer-ownership": "full",
                                "@optional": "1",
                                "@allow-none": "1",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "../json-glib/json-gvariant.c",
                                    "@line": "374",
                                    "#text": "the length of the returned string"
                                },
                                "type": {
                                    "@name": "gsize",
                                    "@c:type": "gsize*"
                                }
                            }
                        ]
                    }
                },
                {
                    "@name": "parser_error_quark",
                    "@c:identifier": "json_parser_error_quark",
                    "@moved-to": "ParserError.quark",
                    "return-value": {
                        "@transfer-ownership": "none",
                        "type": {
                            "@name": "GLib.Quark",
                            "@c:type": "GQuark"
                        }
                    }
                },
                {
                    "@name": "path_error_quark",
                    "@c:identifier": "json_path_error_quark",
                    "@moved-to": "PathError.quark",
                    "return-value": {
                        "@transfer-ownership": "none",
                        "type": {
                            "@name": "GLib.Quark",
                            "@c:type": "GQuark"
                        }
                    }
                },
                {
                    "@name": "reader_error_quark",
                    "@c:identifier": "json_reader_error_quark",
                    "@moved-to": "ReaderError.quark",
                    "return-value": {
                        "@transfer-ownership": "none",
                        "type": {
                            "@name": "GLib.Quark",
                            "@c:type": "GQuark"
                        }
                    }
                },
                {
                    "@name": "serialize_gobject",
                    "@c:identifier": "json_serialize_gobject",
                    "@deprecated": "1",
                    "@deprecated-version": "0.10",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "../json-glib/json-gobject.c",
                        "@line": "937",
                        "#text": "Serializes a `GObject` instance into a JSON data stream.\n\nIf the object implements the [iface@Json.Serializable] interface, it will be\nasked to serizalize all its properties; otherwise, the default\nimplementation will be use to translate the compatible types into JSON\nnative types."
                    },
                    "doc-deprecated": {
                        "@xml:space": "preserve",
                        "#text": "Use [func@Json.gobject_to_data] instead"
                    },
                    "source-position": {
                        "@filename": "../json-glib/json-gobject.h",
                        "@line": "244"
                    },
                    "return-value": {
                        "@transfer-ownership": "full",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "../json-glib/json-gobject.c",
                            "@line": "949",
                            "#text": "a JSON data stream representing the given object"
                        },
                        "type": {
                            "@name": "utf8",
                            "@c:type": "gchar*"
                        }
                    },
                    "parameters": {
                        "parameter": [
                            {
                                "@name": "gobject",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "../json-glib/json-gobject.c",
                                    "@line": "939",
                                    "#text": "the object to serialize"
                                },
                                "type": {
                                    "@name": "GObject.Object",
                                    "@c:type": "GObject*"
                                }
                            },
                            {
                                "@name": "length",
                                "@direction": "out",
                                "@caller-allocates": "0",
                                "@transfer-ownership": "full",
                                "@optional": "1",
                                "@allow-none": "1",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "../json-glib/json-gobject.c",
                                    "@line": "940",
                                    "#text": "return value for the length of the buffer"
                                },
                                "type": {
                                    "@name": "gsize",
                                    "@c:type": "gsize*"
                                }
                            }
                        ]
                    }
                },
                {
                    "@name": "string_compare",
                    "@c:identifier": "json_string_compare",
                    "@version": "1.2",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "../json-glib/json-node.c",
                        "@line": "1389",
                        "#text": "Check whether @a and @b are equal UTF-8 JSON strings and return an ordering\nover them in `strcmp()` style."
                    },
                    "source-position": {
                        "@filename": "../json-glib/json-types.h",
                        "@line": "280"
                    },
                    "return-value": {
                        "@transfer-ownership": "none",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "../json-glib/json-node.c",
                            "@line": "1397",
                            "#text": "an integer less than zero if `a < b`, equal to zero if `a == b`, and\n  greater than zero if `a > b`"
                        },
                        "type": {
                            "@name": "gint",
                            "@c:type": "gint"
                        }
                    },
                    "parameters": {
                        "parameter": [
                            {
                                "@name": "a",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "../json-glib/json-node.c",
                                    "@line": "1391",
                                    "#text": "a JSON string"
                                },
                                "type": {
                                    "@name": "utf8",
                                    "@c:type": "gconstpointer"
                                }
                            },
                            {
                                "@name": "b",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "../json-glib/json-node.c",
                                    "@line": "1392",
                                    "#text": "another JSON string"
                                },
                                "type": {
                                    "@name": "utf8",
                                    "@c:type": "gconstpointer"
                                }
                            }
                        ]
                    }
                },
                {
                    "@name": "string_equal",
                    "@c:identifier": "json_string_equal",
                    "@version": "1.2",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "../json-glib/json-node.c",
                        "@line": "1372",
                        "#text": "Check whether @a and @b are equal UTF-8 JSON strings."
                    },
                    "source-position": {
                        "@filename": "../json-glib/json-types.h",
                        "@line": "277"
                    },
                    "return-value": {
                        "@transfer-ownership": "none",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "../json-glib/json-node.c",
                            "@line": "1379",
                            "#text": "`TRUE` if @a and @b are equal; `FALSE` otherwise"
                        },
                        "type": {
                            "@name": "gboolean",
                            "@c:type": "gboolean"
                        }
                    },
                    "parameters": {
                        "parameter": [
                            {
                                "@name": "a",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "../json-glib/json-node.c",
                                    "@line": "1374",
                                    "#text": "a JSON string"
                                },
                                "type": {
                                    "@name": "utf8",
                                    "@c:type": "gconstpointer"
                                }
                            },
                            {
                                "@name": "b",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "../json-glib/json-node.c",
                                    "@line": "1375",
                                    "#text": "another JSON string"
                                },
                                "type": {
                                    "@name": "utf8",
                                    "@c:type": "gconstpointer"
                                }
                            }
                        ]
                    }
                },
                {
                    "@name": "string_hash",
                    "@c:identifier": "json_string_hash",
                    "@version": "1.2",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "../json-glib/json-node.c",
                        "@line": "1353",
                        "#text": "Calculate a hash value for the given @key (a UTF-8 JSON string).\n\nNote: Member names are compared byte-wise, without applying any Unicode\ndecomposition or normalisation. This is not explicitly mentioned in the JSON\nstandard (ECMA-404), but is assumed."
                    },
                    "source-position": {
                        "@filename": "../json-glib/json-types.h",
                        "@line": "275"
                    },
                    "return-value": {
                        "@transfer-ownership": "none",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "../json-glib/json-node.c",
                            "@line": "1363",
                            "#text": "hash value for @key"
                        },
                        "type": {
                            "@name": "guint",
                            "@c:type": "guint"
                        }
                    },
                    "parameters": {
                        "parameter": {
                            "@name": "key",
                            "@transfer-ownership": "none",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../json-glib/json-node.c",
                                "@line": "1355",
                                "#text": "a JSON string to hash"
                            },
                            "type": {
                                "@name": "utf8",
                                "@c:type": "gconstpointer"
                            }
                        }
                    }
                },
                {
                    "@name": "to_string",
                    "@c:identifier": "json_to_string",
                    "@version": "1.2",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "../json-glib/json-utils.c",
                        "@line": "65",
                        "#text": "Generates a stringified JSON representation of the contents of\nthe given `node`."
                    },
                    "source-position": {
                        "@filename": "../json-glib/json-utils.h",
                        "@line": "35"
                    },
                    "return-value": {
                        "@transfer-ownership": "full",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "../json-glib/json-utils.c",
                            "@line": "73",
                            "#text": "the string representation of the node"
                        },
                        "type": {
                            "@name": "utf8",
                            "@c:type": "char*"
                        }
                    },
                    "parameters": {
                        "parameter": [
                            {
                                "@name": "node",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "../json-glib/json-utils.c",
                                    "@line": "67",
                                    "#text": "a JSON tree"
                                },
                                "type": {
                                    "@name": "Node",
                                    "@c:type": "JsonNode*"
                                }
                            },
                            {
                                "@name": "pretty",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "../json-glib/json-utils.c",
                                    "@line": "68",
                                    "#text": "whether the output should be prettyfied for printing"
                                },
                                "type": {
                                    "@name": "gboolean",
                                    "@c:type": "gboolean"
                                }
                            }
                        ]
                    }
                }
            ]
        }
    }
}