{
    "repository": {
        "@version": "1.2",
        "@xmlns": "http://www.gtk.org/introspection/core/1.0",
        "@xmlns:c": "http://www.gtk.org/introspection/c/1.0",
        "@xmlns:glib": "http://www.gtk.org/introspection/glib/1.0",
        "include": [
            {
                "@name": "Gdk",
                "@version": "4.0"
            },
            {
                "@name": "xlib",
                "@version": "2.0"
            }
        ],
        "package": {
            "@name": "gtk4-x11"
        },
        "c:include": {
            "@name": "gdk/x11/gdkx.h"
        },
        "namespace": {
            "@name": "GdkX11",
            "@version": "4.0",
            "@shared-library": "libgtk-4.so.1",
            "@c:identifier-prefixes": "Gdk",
            "@c:symbol-prefixes": "gdk",
            "function-macro": [
                {
                    "@name": "DISPLAY_XDISPLAY",
                    "@c:identifier": "GDK_DISPLAY_XDISPLAY",
                    "@introspectable": "0",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "gdk/x11/gdkx11display.h",
                        "@line": "70",
                        "#text": "Returns the display of a `GdkDisplay`."
                    },
                    "source-position": {
                        "@filename": "gdk/x11/gdkx11display.h",
                        "@line": "78"
                    },
                    "parameters": {
                        "parameter": {
                            "@name": "display",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/x11/gdkx11display.h",
                                "@line": "72",
                                "#text": "a `GdkDisplay`"
                            }
                        }
                    }
                },
                {
                    "@name": "IS_X11_APP_LAUNCH_CONTEXT",
                    "@c:identifier": "GDK_IS_X11_APP_LAUNCH_CONTEXT",
                    "@introspectable": "0",
                    "source-position": {
                        "@filename": "gdk/x11/gdkx11applaunchcontext.h",
                        "@line": "32"
                    },
                    "parameters": {
                        "parameter": {
                            "@name": "object"
                        }
                    }
                },
                {
                    "@name": "IS_X11_APP_LAUNCH_CONTEXT_CLASS",
                    "@c:identifier": "GDK_IS_X11_APP_LAUNCH_CONTEXT_CLASS",
                    "@introspectable": "0",
                    "source-position": {
                        "@filename": "gdk/x11/gdkx11applaunchcontext.h",
                        "@line": "33"
                    },
                    "parameters": {
                        "parameter": {
                            "@name": "klass"
                        }
                    }
                },
                {
                    "@name": "IS_X11_DEVICE_MANAGER_XI2",
                    "@c:identifier": "GDK_IS_X11_DEVICE_MANAGER_XI2",
                    "@introspectable": "0",
                    "source-position": {
                        "@filename": "gdk/x11/gdkx11devicemanager-xi2.h",
                        "@line": "28"
                    },
                    "parameters": {
                        "parameter": {
                            "@name": "o"
                        }
                    }
                },
                {
                    "@name": "IS_X11_DEVICE_MANAGER_XI2_CLASS",
                    "@c:identifier": "GDK_IS_X11_DEVICE_MANAGER_XI2_CLASS",
                    "@introspectable": "0",
                    "source-position": {
                        "@filename": "gdk/x11/gdkx11devicemanager-xi2.h",
                        "@line": "29"
                    },
                    "parameters": {
                        "parameter": {
                            "@name": "c"
                        }
                    }
                },
                {
                    "@name": "IS_X11_DEVICE_XI2",
                    "@c:identifier": "GDK_IS_X11_DEVICE_XI2",
                    "@introspectable": "0",
                    "source-position": {
                        "@filename": "gdk/x11/gdkx11device-xi2.h",
                        "@line": "28"
                    },
                    "parameters": {
                        "parameter": {
                            "@name": "o"
                        }
                    }
                },
                {
                    "@name": "IS_X11_DEVICE_XI2_CLASS",
                    "@c:identifier": "GDK_IS_X11_DEVICE_XI2_CLASS",
                    "@introspectable": "0",
                    "source-position": {
                        "@filename": "gdk/x11/gdkx11device-xi2.h",
                        "@line": "29"
                    },
                    "parameters": {
                        "parameter": {
                            "@name": "c"
                        }
                    }
                },
                {
                    "@name": "IS_X11_DISPLAY",
                    "@c:identifier": "GDK_IS_X11_DISPLAY",
                    "@introspectable": "0",
                    "source-position": {
                        "@filename": "gdk/x11/gdkx11display.h",
                        "@line": "50"
                    },
                    "parameters": {
                        "parameter": {
                            "@name": "object"
                        }
                    }
                },
                {
                    "@name": "IS_X11_DISPLAY_CLASS",
                    "@c:identifier": "GDK_IS_X11_DISPLAY_CLASS",
                    "@introspectable": "0",
                    "source-position": {
                        "@filename": "gdk/x11/gdkx11display.h",
                        "@line": "51"
                    },
                    "parameters": {
                        "parameter": {
                            "@name": "klass"
                        }
                    }
                },
                {
                    "@name": "IS_X11_DRAG",
                    "@c:identifier": "GDK_IS_X11_DRAG",
                    "@introspectable": "0",
                    "source-position": {
                        "@filename": "gdk/x11/gdkx11dnd.h",
                        "@line": "32"
                    },
                    "parameters": {
                        "parameter": {
                            "@name": "object"
                        }
                    }
                },
                {
                    "@name": "IS_X11_DRAG_CLASS",
                    "@c:identifier": "GDK_IS_X11_DRAG_CLASS",
                    "@introspectable": "0",
                    "source-position": {
                        "@filename": "gdk/x11/gdkx11dnd.h",
                        "@line": "33"
                    },
                    "parameters": {
                        "parameter": {
                            "@name": "klass"
                        }
                    }
                },
                {
                    "@name": "IS_X11_MONITOR",
                    "@c:identifier": "GDK_IS_X11_MONITOR",
                    "@introspectable": "0",
                    "source-position": {
                        "@filename": "gdk/x11/gdkx11monitor.h",
                        "@line": "35"
                    },
                    "parameters": {
                        "parameter": {
                            "@name": "object"
                        }
                    }
                },
                {
                    "@name": "IS_X11_SCREEN",
                    "@c:identifier": "GDK_IS_X11_SCREEN",
                    "@introspectable": "0",
                    "source-position": {
                        "@filename": "gdk/x11/gdkx11screen.h",
                        "@line": "42"
                    },
                    "parameters": {
                        "parameter": {
                            "@name": "object"
                        }
                    }
                },
                {
                    "@name": "IS_X11_SCREEN_CLASS",
                    "@c:identifier": "GDK_IS_X11_SCREEN_CLASS",
                    "@introspectable": "0",
                    "source-position": {
                        "@filename": "gdk/x11/gdkx11screen.h",
                        "@line": "43"
                    },
                    "parameters": {
                        "parameter": {
                            "@name": "klass"
                        }
                    }
                },
                {
                    "@name": "IS_X11_SURFACE",
                    "@c:identifier": "GDK_IS_X11_SURFACE",
                    "@introspectable": "0",
                    "source-position": {
                        "@filename": "gdk/x11/gdkx11surface.h",
                        "@line": "42"
                    },
                    "parameters": {
                        "parameter": {
                            "@name": "object"
                        }
                    }
                },
                {
                    "@name": "IS_X11_SURFACE_CLASS",
                    "@c:identifier": "GDK_IS_X11_SURFACE_CLASS",
                    "@introspectable": "0",
                    "source-position": {
                        "@filename": "gdk/x11/gdkx11surface.h",
                        "@line": "43"
                    },
                    "parameters": {
                        "parameter": {
                            "@name": "klass"
                        }
                    }
                },
                {
                    "@name": "POINTER_TO_XID",
                    "@c:identifier": "GDK_POINTER_TO_XID",
                    "@introspectable": "0",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "gdk/x11/gdkx11utils.h",
                        "@line": "49",
                        "#text": "Converts a @gpointer back to an XID that was previously converted\nusing GDK_XID_TO_POINTER()."
                    },
                    "source-position": {
                        "@filename": "gdk/x11/gdkx11utils.h",
                        "@line": "56"
                    },
                    "parameters": {
                        "parameter": {
                            "@name": "pointer",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/x11/gdkx11utils.h",
                                "@line": "51",
                                "#text": "pointer to extract an XID from"
                            }
                        }
                    }
                },
                {
                    "@name": "SURFACE_XDISPLAY",
                    "@c:identifier": "GDK_SURFACE_XDISPLAY",
                    "@introspectable": "0",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "gdk/x11/gdkx11surface.h",
                        "@line": "81",
                        "#text": "Returns the display of a `GdkSurface`."
                    },
                    "source-position": {
                        "@filename": "gdk/x11/gdkx11surface.h",
                        "@line": "89"
                    },
                    "parameters": {
                        "parameter": {
                            "@name": "win",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/x11/gdkx11surface.h",
                                "@line": "83",
                                "#text": "a `GdkSurface`"
                            }
                        }
                    }
                },
                {
                    "@name": "SURFACE_XID",
                    "@c:identifier": "GDK_SURFACE_XID",
                    "@introspectable": "0",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "gdk/x11/gdkx11surface.h",
                        "@line": "91",
                        "#text": "Returns the X window belonging to a `GdkSurface`."
                    },
                    "source-position": {
                        "@filename": "gdk/x11/gdkx11surface.h",
                        "@line": "99"
                    },
                    "parameters": {
                        "parameter": {
                            "@name": "win",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/x11/gdkx11surface.h",
                                "@line": "93",
                                "#text": "a `GdkSurface`"
                            }
                        }
                    }
                },
                {
                    "@name": "X11_APP_LAUNCH_CONTEXT",
                    "@c:identifier": "GDK_X11_APP_LAUNCH_CONTEXT",
                    "@introspectable": "0",
                    "source-position": {
                        "@filename": "gdk/x11/gdkx11applaunchcontext.h",
                        "@line": "30"
                    },
                    "parameters": {
                        "parameter": {
                            "@name": "object"
                        }
                    }
                },
                {
                    "@name": "X11_APP_LAUNCH_CONTEXT_CLASS",
                    "@c:identifier": "GDK_X11_APP_LAUNCH_CONTEXT_CLASS",
                    "@introspectable": "0",
                    "source-position": {
                        "@filename": "gdk/x11/gdkx11applaunchcontext.h",
                        "@line": "31"
                    },
                    "parameters": {
                        "parameter": {
                            "@name": "klass"
                        }
                    }
                },
                {
                    "@name": "X11_APP_LAUNCH_CONTEXT_GET_CLASS",
                    "@c:identifier": "GDK_X11_APP_LAUNCH_CONTEXT_GET_CLASS",
                    "@introspectable": "0",
                    "source-position": {
                        "@filename": "gdk/x11/gdkx11applaunchcontext.h",
                        "@line": "34"
                    },
                    "parameters": {
                        "parameter": {
                            "@name": "obj"
                        }
                    }
                },
                {
                    "@name": "X11_DEVICE_MANAGER_XI2",
                    "@c:identifier": "GDK_X11_DEVICE_MANAGER_XI2",
                    "@introspectable": "0",
                    "source-position": {
                        "@filename": "gdk/x11/gdkx11devicemanager-xi2.h",
                        "@line": "26"
                    },
                    "parameters": {
                        "parameter": {
                            "@name": "o"
                        }
                    }
                },
                {
                    "@name": "X11_DEVICE_MANAGER_XI2_CLASS",
                    "@c:identifier": "GDK_X11_DEVICE_MANAGER_XI2_CLASS",
                    "@introspectable": "0",
                    "source-position": {
                        "@filename": "gdk/x11/gdkx11devicemanager-xi2.h",
                        "@line": "27"
                    },
                    "parameters": {
                        "parameter": {
                            "@name": "c"
                        }
                    }
                },
                {
                    "@name": "X11_DEVICE_MANAGER_XI2_GET_CLASS",
                    "@c:identifier": "GDK_X11_DEVICE_MANAGER_XI2_GET_CLASS",
                    "@introspectable": "0",
                    "source-position": {
                        "@filename": "gdk/x11/gdkx11devicemanager-xi2.h",
                        "@line": "30"
                    },
                    "parameters": {
                        "parameter": {
                            "@name": "o"
                        }
                    }
                },
                {
                    "@name": "X11_DEVICE_XI2",
                    "@c:identifier": "GDK_X11_DEVICE_XI2",
                    "@introspectable": "0",
                    "source-position": {
                        "@filename": "gdk/x11/gdkx11device-xi2.h",
                        "@line": "26"
                    },
                    "parameters": {
                        "parameter": {
                            "@name": "o"
                        }
                    }
                },
                {
                    "@name": "X11_DEVICE_XI2_CLASS",
                    "@c:identifier": "GDK_X11_DEVICE_XI2_CLASS",
                    "@introspectable": "0",
                    "source-position": {
                        "@filename": "gdk/x11/gdkx11device-xi2.h",
                        "@line": "27"
                    },
                    "parameters": {
                        "parameter": {
                            "@name": "c"
                        }
                    }
                },
                {
                    "@name": "X11_DEVICE_XI2_GET_CLASS",
                    "@c:identifier": "GDK_X11_DEVICE_XI2_GET_CLASS",
                    "@introspectable": "0",
                    "source-position": {
                        "@filename": "gdk/x11/gdkx11device-xi2.h",
                        "@line": "30"
                    },
                    "parameters": {
                        "parameter": {
                            "@name": "o"
                        }
                    }
                },
                {
                    "@name": "X11_DISPLAY",
                    "@c:identifier": "GDK_X11_DISPLAY",
                    "@introspectable": "0",
                    "source-position": {
                        "@filename": "gdk/x11/gdkx11display.h",
                        "@line": "48"
                    },
                    "parameters": {
                        "parameter": {
                            "@name": "object"
                        }
                    }
                },
                {
                    "@name": "X11_DISPLAY_CLASS",
                    "@c:identifier": "GDK_X11_DISPLAY_CLASS",
                    "@introspectable": "0",
                    "source-position": {
                        "@filename": "gdk/x11/gdkx11display.h",
                        "@line": "49"
                    },
                    "parameters": {
                        "parameter": {
                            "@name": "klass"
                        }
                    }
                },
                {
                    "@name": "X11_DISPLAY_GET_CLASS",
                    "@c:identifier": "GDK_X11_DISPLAY_GET_CLASS",
                    "@introspectable": "0",
                    "source-position": {
                        "@filename": "gdk/x11/gdkx11display.h",
                        "@line": "52"
                    },
                    "parameters": {
                        "parameter": {
                            "@name": "obj"
                        }
                    }
                },
                {
                    "@name": "X11_DRAG",
                    "@c:identifier": "GDK_X11_DRAG",
                    "@introspectable": "0",
                    "source-position": {
                        "@filename": "gdk/x11/gdkx11dnd.h",
                        "@line": "30"
                    },
                    "parameters": {
                        "parameter": {
                            "@name": "object"
                        }
                    }
                },
                {
                    "@name": "X11_DRAG_CLASS",
                    "@c:identifier": "GDK_X11_DRAG_CLASS",
                    "@introspectable": "0",
                    "source-position": {
                        "@filename": "gdk/x11/gdkx11dnd.h",
                        "@line": "31"
                    },
                    "parameters": {
                        "parameter": {
                            "@name": "klass"
                        }
                    }
                },
                {
                    "@name": "X11_DRAG_GET_CLASS",
                    "@c:identifier": "GDK_X11_DRAG_GET_CLASS",
                    "@introspectable": "0",
                    "source-position": {
                        "@filename": "gdk/x11/gdkx11dnd.h",
                        "@line": "34"
                    },
                    "parameters": {
                        "parameter": {
                            "@name": "obj"
                        }
                    }
                },
                {
                    "@name": "X11_GL_CONTEXT",
                    "@c:identifier": "GDK_X11_GL_CONTEXT",
                    "@introspectable": "0",
                    "source-position": {
                        "@filename": "gdk/x11/gdkx11glcontext.h",
                        "@line": "33"
                    },
                    "parameters": {
                        "parameter": {
                            "@name": "obj"
                        }
                    }
                },
                {
                    "@name": "X11_IS_GL_CONTEXT",
                    "@c:identifier": "GDK_X11_IS_GL_CONTEXT",
                    "@introspectable": "0",
                    "source-position": {
                        "@filename": "gdk/x11/gdkx11glcontext.h",
                        "@line": "34"
                    },
                    "parameters": {
                        "parameter": {
                            "@name": "obj"
                        }
                    }
                },
                {
                    "@name": "X11_MONITOR",
                    "@c:identifier": "GDK_X11_MONITOR",
                    "@introspectable": "0",
                    "source-position": {
                        "@filename": "gdk/x11/gdkx11monitor.h",
                        "@line": "34"
                    },
                    "parameters": {
                        "parameter": {
                            "@name": "object"
                        }
                    }
                },
                {
                    "@name": "X11_SCREEN",
                    "@c:identifier": "GDK_X11_SCREEN",
                    "@introspectable": "0",
                    "source-position": {
                        "@filename": "gdk/x11/gdkx11screen.h",
                        "@line": "40"
                    },
                    "parameters": {
                        "parameter": {
                            "@name": "object"
                        }
                    }
                },
                {
                    "@name": "X11_SCREEN_CLASS",
                    "@c:identifier": "GDK_X11_SCREEN_CLASS",
                    "@introspectable": "0",
                    "source-position": {
                        "@filename": "gdk/x11/gdkx11screen.h",
                        "@line": "41"
                    },
                    "parameters": {
                        "parameter": {
                            "@name": "klass"
                        }
                    }
                },
                {
                    "@name": "X11_SCREEN_GET_CLASS",
                    "@c:identifier": "GDK_X11_SCREEN_GET_CLASS",
                    "@introspectable": "0",
                    "source-position": {
                        "@filename": "gdk/x11/gdkx11screen.h",
                        "@line": "44"
                    },
                    "parameters": {
                        "parameter": {
                            "@name": "obj"
                        }
                    }
                },
                {
                    "@name": "X11_SURFACE",
                    "@c:identifier": "GDK_X11_SURFACE",
                    "@introspectable": "0",
                    "source-position": {
                        "@filename": "gdk/x11/gdkx11surface.h",
                        "@line": "40"
                    },
                    "parameters": {
                        "parameter": {
                            "@name": "object"
                        }
                    }
                },
                {
                    "@name": "X11_SURFACE_CLASS",
                    "@c:identifier": "GDK_X11_SURFACE_CLASS",
                    "@introspectable": "0",
                    "source-position": {
                        "@filename": "gdk/x11/gdkx11surface.h",
                        "@line": "41"
                    },
                    "parameters": {
                        "parameter": {
                            "@name": "klass"
                        }
                    }
                },
                {
                    "@name": "X11_SURFACE_GET_CLASS",
                    "@c:identifier": "GDK_X11_SURFACE_GET_CLASS",
                    "@introspectable": "0",
                    "source-position": {
                        "@filename": "gdk/x11/gdkx11surface.h",
                        "@line": "44"
                    },
                    "parameters": {
                        "parameter": {
                            "@name": "obj"
                        }
                    }
                },
                {
                    "@name": "XID_TO_POINTER",
                    "@c:identifier": "GDK_XID_TO_POINTER",
                    "@introspectable": "0",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "gdk/x11/gdkx11utils.h",
                        "@line": "39",
                        "#text": "Converts an XID into a @gpointer. This is useful with data structures\nthat use pointer arguments such as `GHashTable`. Use GDK_POINTER_TO_XID()\nto convert the argument back to an XID."
                    },
                    "source-position": {
                        "@filename": "gdk/x11/gdkx11utils.h",
                        "@line": "47"
                    },
                    "parameters": {
                        "parameter": {
                            "@name": "xid",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/x11/gdkx11utils.h",
                                "@line": "41",
                                "#text": "XID to stuff into the pointer"
                            }
                        }
                    }
                }
            ],
            "class": [
                {
                    "@name": "X11AppLaunchContext",
                    "@c:symbol-prefix": "x11_app_launch_context",
                    "@c:type": "GdkX11AppLaunchContext",
                    "@parent": "Gdk.AppLaunchContext",
                    "@glib:type-name": "GdkX11AppLaunchContext",
                    "@glib:get-type": "gdk_x11_app_launch_context_get_type",
                    "@glib:type-struct": "X11AppLaunchContextClass",
                    "source-position": {
                        "@filename": "gdk/x11/gdkx11applaunchcontext.h",
                        "@line": "41"
                    }
                },
                {
                    "@name": "X11DeviceManagerXI2",
                    "@c:symbol-prefix": "x11_device_manager_xi2",
                    "@c:type": "GdkX11DeviceManagerXI2",
                    "@parent": "GObject.Object",
                    "@glib:type-name": "GdkX11DeviceManagerXI2",
                    "@glib:get-type": "gdk_x11_device_manager_xi2_get_type",
                    "@glib:type-struct": "X11DeviceManagerXI2Class",
                    "source-position": {
                        "@filename": "gdk/x11/gdkx11devicemanager-xi2.h",
                        "@line": "33"
                    },
                    "property": [
                        {
                            "@name": "display",
                            "@writable": "1",
                            "@construct-only": "1",
                            "@transfer-ownership": "none",
                            "type": {
                                "@name": "Gdk.Display"
                            }
                        },
                        {
                            "@name": "major",
                            "@writable": "1",
                            "@construct-only": "1",
                            "@transfer-ownership": "none",
                            "type": {
                                "@name": "gint",
                                "@c:type": "gint"
                            }
                        },
                        {
                            "@name": "minor",
                            "@writable": "1",
                            "@construct-only": "1",
                            "@transfer-ownership": "none",
                            "type": {
                                "@name": "gint",
                                "@c:type": "gint"
                            }
                        },
                        {
                            "@name": "opcode",
                            "@writable": "1",
                            "@construct-only": "1",
                            "@transfer-ownership": "none",
                            "type": {
                                "@name": "gint",
                                "@c:type": "gint"
                            }
                        }
                    ]
                },
                {
                    "@name": "X11DeviceXI2",
                    "@c:symbol-prefix": "x11_device_xi2",
                    "@c:type": "GdkX11DeviceXI2",
                    "@parent": "Gdk.Device",
                    "@glib:type-name": "GdkX11DeviceXI2",
                    "@glib:get-type": "gdk_x11_device_xi2_get_type",
                    "@glib:type-struct": "X11DeviceXI2Class",
                    "source-position": {
                        "@filename": "gdk/x11/gdkx11device-xi2.h",
                        "@line": "33"
                    },
                    "property": {
                        "@name": "device-id",
                        "@writable": "1",
                        "@construct-only": "1",
                        "@transfer-ownership": "none",
                        "type": {
                            "@name": "gint",
                            "@c:type": "gint"
                        }
                    }
                },
                {
                    "@name": "X11Display",
                    "@c:symbol-prefix": "x11_display",
                    "@c:type": "GdkX11Display",
                    "@parent": "Gdk.Display",
                    "@glib:type-name": "GdkX11Display",
                    "@glib:get-type": "gdk_x11_display_get_type",
                    "@glib:type-struct": "X11DisplayClass",
                    "source-position": {
                        "@filename": "gdk/x11/gdkx11display.h",
                        "@line": "45"
                    },
                    "function": [
                        {
                            "@name": "open",
                            "@c:identifier": "gdk_x11_display_open",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/x11/gdkdisplay-x11.c",
                                "@line": "1405",
                                "#text": "Tries to open a new display to the X server given by\n@display_name. If opening the display fails, %NULL is\nreturned."
                            },
                            "source-position": {
                                "@filename": "gdk/x11/gdkx11display.h",
                                "@line": "58"
                            },
                            "return-value": {
                                "@transfer-ownership": "full",
                                "@nullable": "1",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "gdk/x11/gdkdisplay-x11.c",
                                    "@line": "1414",
                                    "#text": "The new display"
                                },
                                "type": {
                                    "@name": "Gdk.Display",
                                    "@c:type": "GdkDisplay*"
                                }
                            },
                            "parameters": {
                                "parameter": {
                                    "@name": "display_name",
                                    "@transfer-ownership": "none",
                                    "@nullable": "1",
                                    "@allow-none": "1",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "gdk/x11/gdkdisplay-x11.c",
                                        "@line": "1407",
                                        "#text": "name of the X display.\n  See the XOpenDisplay() for details."
                                    },
                                    "type": {
                                        "@name": "utf8",
                                        "@c:type": "const char*"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "set_program_class",
                            "@c:identifier": "gdk_x11_display_set_program_class",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/x11/gdkdisplay-x11.c",
                                "@line": "1647",
                                "#text": "Sets the program class.\n\nThe X11 backend uses the program class to set the class name part\nof the `WM_CLASS` property on toplevel windows; see the ICCCM."
                            },
                            "source-position": {
                                "@filename": "gdk/x11/gdkx11display.h",
                                "@line": "89"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "type": {
                                    "@name": "none",
                                    "@c:type": "void"
                                }
                            },
                            "parameters": {
                                "parameter": [
                                    {
                                        "@name": "display",
                                        "@transfer-ownership": "none",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "gdk/x11/gdkdisplay-x11.c",
                                            "@line": "1649",
                                            "#text": "a `GdkDisplay`"
                                        },
                                        "type": {
                                            "@name": "Gdk.Display",
                                            "@c:type": "GdkDisplay*"
                                        }
                                    },
                                    {
                                        "@name": "program_class",
                                        "@transfer-ownership": "none",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "gdk/x11/gdkdisplay-x11.c",
                                            "@line": "1650",
                                            "#text": "a string"
                                        },
                                        "type": {
                                            "@name": "utf8",
                                            "@c:type": "const char*"
                                        }
                                    }
                                ]
                            }
                        }
                    ],
                    "method": [
                        {
                            "@name": "broadcast_startup_message",
                            "@c:identifier": "gdk_x11_display_broadcast_startup_message",
                            "@introspectable": "0",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/x11/gdkdisplay-x11.c",
                                "@line": "2168",
                                "#text": "Sends a startup notification message of type @message_type to\n@display.\n\nThis is a convenience function for use by code that implements the\nfreedesktop startup notification specification. Applications should\nnot normally need to call it directly. See the\n[Startup Notification Protocol specification](http://standards.freedesktop.org/startup-notification-spec/startup-notification-latest.txt)\nfor definitions of the message types and keys that can be used."
                            },
                            "source-position": {
                                "@filename": "gdk/x11/gdkx11display.h",
                                "@line": "98"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "type": {
                                    "@name": "none",
                                    "@c:type": "void"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "display",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "gdk/x11/gdkdisplay-x11.c",
                                        "@line": "2170",
                                        "#text": "a `GdkDisplay`"
                                    },
                                    "type": {
                                        "@name": "X11Display",
                                        "@c:type": "GdkDisplay*"
                                    }
                                },
                                "parameter": [
                                    {
                                        "@name": "message_type",
                                        "@transfer-ownership": "none",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "gdk/x11/gdkdisplay-x11.c",
                                            "@line": "2171",
                                            "#text": "startup notification message type (\"new\", \"change\",\nor \"remove\")"
                                        },
                                        "type": {
                                            "@name": "utf8",
                                            "@c:type": "const char*"
                                        }
                                    },
                                    {
                                        "@name": "...",
                                        "@transfer-ownership": "none",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "gdk/x11/gdkdisplay-x11.c",
                                            "@line": "2173",
                                            "#text": "a list of key/value pairs (as strings), terminated by a\n%NULL key. (A %NULL value for a key will cause that key to be\nskipped in the output.)"
                                        },
                                        "varargs": null
                                    }
                                ]
                            }
                        },
                        {
                            "@name": "error_trap_pop",
                            "@c:identifier": "gdk_x11_display_error_trap_pop",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/x11/gdkdisplay-x11.c",
                                "@line": "2653",
                                "#text": "Pops the error trap pushed by gdk_x11_display_error_trap_push().\nWill XSync() if necessary and will always block until\nthe error is known to have occurred or not occurred,\nso the error code can be returned.\n\nIf you don\u2019t need to use the return value,\ngdk_x11_display_error_trap_pop_ignored() would be more efficient."
                            },
                            "source-position": {
                                "@filename": "gdk/x11/gdkx11display.h",
                                "@line": "124"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "gdk/x11/gdkdisplay-x11.c",
                                    "@line": "2665",
                                    "#text": "X error code or 0 on success"
                                },
                                "type": {
                                    "@name": "gint",
                                    "@c:type": "int"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "display",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "gdk/x11/gdkdisplay-x11.c",
                                        "@line": "2655",
                                        "#text": "the display"
                                    },
                                    "type": {
                                        "@name": "X11Display",
                                        "@c:type": "GdkDisplay*"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "error_trap_pop_ignored",
                            "@c:identifier": "gdk_x11_display_error_trap_pop_ignored",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/x11/gdkdisplay-x11.c",
                                "@line": "2675",
                                "#text": "Pops the error trap pushed by gdk_x11_display_error_trap_push().\nDoes not block to see if an error occurred; merely records the\nrange of requests to ignore errors for, and ignores those errors\nif they arrive asynchronously."
                            },
                            "source-position": {
                                "@filename": "gdk/x11/gdkx11display.h",
                                "@line": "126"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "type": {
                                    "@name": "none",
                                    "@c:type": "void"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "display",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "gdk/x11/gdkdisplay-x11.c",
                                        "@line": "2677",
                                        "#text": "the display"
                                    },
                                    "type": {
                                        "@name": "X11Display",
                                        "@c:type": "GdkDisplay*"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "error_trap_push",
                            "@c:identifier": "gdk_x11_display_error_trap_push",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/x11/gdkdisplay-x11.c",
                                "@line": "2505",
                                "#text": "Begins a range of X requests on @display for which X error events\nwill be ignored. Unignored errors (when no trap is pushed) will abort\nthe application. Use gdk_x11_display_error_trap_pop() or\ngdk_x11_display_error_trap_pop_ignored()to lift a trap pushed\nwith this function."
                            },
                            "source-position": {
                                "@filename": "gdk/x11/gdkx11display.h",
                                "@line": "121"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "type": {
                                    "@name": "none",
                                    "@c:type": "void"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "display",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "gdk/x11/gdkdisplay-x11.c",
                                        "@line": "2507",
                                        "#text": "a `GdkDisplay`"
                                    },
                                    "type": {
                                        "@name": "X11Display",
                                        "@c:type": "GdkDisplay*"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "get_default_group",
                            "@c:identifier": "gdk_x11_display_get_default_group",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/x11/gdkdisplay-x11.c",
                                "@line": "1848",
                                "#text": "Returns the default group leader surface for all toplevel surfaces\non @display. This surface is implicitly created by GDK.\nSee gdk_x11_surface_set_group()."
                            },
                            "source-position": {
                                "@filename": "gdk/x11/gdkx11display.h",
                                "@line": "132"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "gdk/x11/gdkdisplay-x11.c",
                                    "@line": "1856",
                                    "#text": "The default group leader surface\nfor @display"
                                },
                                "type": {
                                    "@name": "Gdk.Surface",
                                    "@c:type": "GdkSurface*"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "display",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "gdk/x11/gdkdisplay-x11.c",
                                        "@line": "1850",
                                        "#text": "a `GdkDisplay`"
                                    },
                                    "type": {
                                        "@name": "X11Display",
                                        "@c:type": "GdkDisplay*"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "get_egl_display",
                            "@c:identifier": "gdk_x11_display_get_egl_display",
                            "@version": "4.4",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/x11/gdkglcontext-egl.c",
                                "@line": "42",
                                "#text": "Retrieves the EGL display connection object for the given GDK display.\n\nThis function returns `NULL` if GDK is using GLX."
                            },
                            "source-position": {
                                "@filename": "gdk/x11/gdkx11glcontext.h",
                                "@line": "52"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "@nullable": "1",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "gdk/x11/gdkglcontext-egl.c",
                                    "@line": "50",
                                    "#text": "the EGL display object"
                                },
                                "type": {
                                    "@name": "gpointer",
                                    "@c:type": "gpointer"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "display",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "gdk/x11/gdkglcontext-egl.c",
                                        "@line": "44",
                                        "#text": "an X11 display"
                                    },
                                    "type": {
                                        "@name": "X11Display",
                                        "@c:type": "GdkDisplay*"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "get_egl_version",
                            "@c:identifier": "gdk_x11_display_get_egl_version",
                            "@version": "4.4",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/x11/gdkglcontext-egl.c",
                                "@line": "112",
                                "#text": "Retrieves the version of the EGL implementation."
                            },
                            "source-position": {
                                "@filename": "gdk/x11/gdkx11glcontext.h",
                                "@line": "47"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "gdk/x11/gdkglcontext-egl.c",
                                    "@line": "120",
                                    "#text": "%TRUE if EGL is available"
                                },
                                "type": {
                                    "@name": "gboolean",
                                    "@c:type": "gboolean"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "display",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "gdk/x11/gdkglcontext-egl.c",
                                        "@line": "114",
                                        "#text": "a `GdkDisplay`"
                                    },
                                    "type": {
                                        "@name": "X11Display",
                                        "@c:type": "GdkDisplay*"
                                    }
                                },
                                "parameter": [
                                    {
                                        "@name": "major",
                                        "@direction": "out",
                                        "@caller-allocates": "0",
                                        "@transfer-ownership": "full",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "gdk/x11/gdkglcontext-egl.c",
                                            "@line": "115",
                                            "#text": "return location for the EGL major version"
                                        },
                                        "type": {
                                            "@name": "gint",
                                            "@c:type": "int*"
                                        }
                                    },
                                    {
                                        "@name": "minor",
                                        "@direction": "out",
                                        "@caller-allocates": "0",
                                        "@transfer-ownership": "full",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "gdk/x11/gdkglcontext-egl.c",
                                            "@line": "116",
                                            "#text": "return location for the EGL minor version"
                                        },
                                        "type": {
                                            "@name": "gint",
                                            "@c:type": "int*"
                                        }
                                    }
                                ]
                            }
                        },
                        {
                            "@name": "get_glx_version",
                            "@c:identifier": "gdk_x11_display_get_glx_version",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/x11/gdkglcontext-glx.c",
                                "@line": "842",
                                "#text": "Retrieves the version of the GLX implementation."
                            },
                            "source-position": {
                                "@filename": "gdk/x11/gdkx11glcontext.h",
                                "@line": "43"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "gdk/x11/gdkglcontext-glx.c",
                                    "@line": "850",
                                    "#text": "%TRUE if GLX is available"
                                },
                                "type": {
                                    "@name": "gboolean",
                                    "@c:type": "gboolean"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "display",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "gdk/x11/gdkglcontext-glx.c",
                                        "@line": "844",
                                        "#text": "a `GdkDisplay`"
                                    },
                                    "type": {
                                        "@name": "X11Display",
                                        "@c:type": "GdkDisplay*"
                                    }
                                },
                                "parameter": [
                                    {
                                        "@name": "major",
                                        "@direction": "out",
                                        "@caller-allocates": "0",
                                        "@transfer-ownership": "full",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "gdk/x11/gdkglcontext-glx.c",
                                            "@line": "845",
                                            "#text": "return location for the GLX major version"
                                        },
                                        "type": {
                                            "@name": "gint",
                                            "@c:type": "int*"
                                        }
                                    },
                                    {
                                        "@name": "minor",
                                        "@direction": "out",
                                        "@caller-allocates": "0",
                                        "@transfer-ownership": "full",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "gdk/x11/gdkglcontext-glx.c",
                                            "@line": "846",
                                            "#text": "return location for the GLX minor version"
                                        },
                                        "type": {
                                            "@name": "gint",
                                            "@c:type": "int*"
                                        }
                                    }
                                ]
                            }
                        },
                        {
                            "@name": "get_primary_monitor",
                            "@c:identifier": "gdk_x11_display_get_primary_monitor",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/x11/gdkdisplay-x11.c",
                                "@line": "2808",
                                "#text": "Gets the primary monitor for the display.\n\nThe primary monitor is considered the monitor where the \u201cmain desktop\u201d\nlives. While normal application surfaces typically allow the window\nmanager to place the surfaces, specialized desktop applications\nsuch as panels should place themselves on the primary monitor.\n\nIf no monitor is the designated primary monitor, any monitor\n(usually the first) may be returned."
                            },
                            "source-position": {
                                "@filename": "gdk/x11/gdkx11display.h",
                                "@line": "109"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "gdk/x11/gdkdisplay-x11.c",
                                    "@line": "2822",
                                    "#text": "the primary monitor, or any monitor if no\n  primary monitor is configured by the user"
                                },
                                "type": {
                                    "@name": "Gdk.Monitor",
                                    "@c:type": "GdkMonitor*"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "display",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "gdk/x11/gdkdisplay-x11.c",
                                        "@line": "2810",
                                        "#text": "a `GdkDisplay`"
                                    },
                                    "type": {
                                        "@name": "X11Display",
                                        "@c:type": "GdkDisplay*"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "get_screen",
                            "@c:identifier": "gdk_x11_display_get_screen",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/x11/gdkdisplay-x11.c",
                                "@line": "2736",
                                "#text": "Retrieves the `GdkX11Screen` of the @display."
                            },
                            "source-position": {
                                "@filename": "gdk/x11/gdkx11display.h",
                                "@line": "106"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "gdk/x11/gdkdisplay-x11.c",
                                    "@line": "2742",
                                    "#text": "the `GdkX11Screen`"
                                },
                                "type": {
                                    "@name": "X11Screen",
                                    "@c:type": "GdkX11Screen*"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "display",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "gdk/x11/gdkdisplay-x11.c",
                                        "@line": "2738",
                                        "#text": "a `GdkX11Display`"
                                    },
                                    "type": {
                                        "@name": "X11Display",
                                        "@c:type": "GdkDisplay*"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "get_startup_notification_id",
                            "@c:identifier": "gdk_x11_display_get_startup_notification_id",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/x11/gdkdisplay-x11.c",
                                "@line": "2299",
                                "#text": "Gets the startup notification ID for a display."
                            },
                            "source-position": {
                                "@filename": "gdk/x11/gdkx11display.h",
                                "@line": "84"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "gdk/x11/gdkdisplay-x11.c",
                                    "@line": "2305",
                                    "#text": "the startup notification ID for @display"
                                },
                                "type": {
                                    "@name": "utf8",
                                    "@c:type": "const char*"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "display",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "gdk/x11/gdkdisplay-x11.c",
                                        "@line": "2301",
                                        "#text": "a `GdkDisplay`"
                                    },
                                    "type": {
                                        "@name": "X11Display",
                                        "@c:type": "GdkDisplay*"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "get_user_time",
                            "@c:identifier": "gdk_x11_display_get_user_time",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/x11/gdkdisplay-x11.c",
                                "@line": "2282",
                                "#text": "Returns the timestamp of the last user interaction on\n@display. The timestamp is taken from events caused\nby user interaction such as key presses or pointer\nmovements. See gdk_x11_surface_set_user_time()."
                            },
                            "source-position": {
                                "@filename": "gdk/x11/gdkx11display.h",
                                "@line": "81"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "gdk/x11/gdkdisplay-x11.c",
                                    "@line": "2291",
                                    "#text": "the timestamp of the last user interaction"
                                },
                                "type": {
                                    "@name": "guint32",
                                    "@c:type": "guint32"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "display",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "gdk/x11/gdkdisplay-x11.c",
                                        "@line": "2284",
                                        "#text": "a `GdkDisplay`"
                                    },
                                    "type": {
                                        "@name": "X11Display",
                                        "@c:type": "GdkDisplay*"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "get_xcursor",
                            "@c:identifier": "gdk_x11_display_get_xcursor",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/x11/gdkcursor-x11.c",
                                "@line": "332",
                                "#text": "Returns the X cursor belonging to a `GdkCursor`, potentially\ncreating the cursor.\n\nBe aware that the returned cursor may not be unique to @cursor.\nIt may for example be shared with its fallback cursor. On old\nX servers that don't support the XCursor extension, all cursors\nmay even fall back to a few default cursors."
                            },
                            "source-position": {
                                "@filename": "gdk/x11/gdkx11display.h",
                                "@line": "67"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "gdk/x11/gdkcursor-x11.c",
                                    "@line": "345",
                                    "#text": "an Xlib Cursor."
                                },
                                "type": {
                                    "@name": "xlib.Cursor",
                                    "@c:type": "Cursor"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "display",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "gdk/x11/gdkcursor-x11.c",
                                        "@line": "334",
                                        "#text": "a `GdkDisplay`"
                                    },
                                    "type": {
                                        "@name": "X11Display",
                                        "@c:type": "GdkDisplay*"
                                    }
                                },
                                "parameter": {
                                    "@name": "cursor",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "gdk/x11/gdkcursor-x11.c",
                                        "@line": "335",
                                        "#text": "a `GdkCursor`"
                                    },
                                    "type": {
                                        "@name": "Gdk.Cursor",
                                        "@c:type": "GdkCursor*"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "get_xdisplay",
                            "@c:identifier": "gdk_x11_display_get_xdisplay",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/x11/gdkdisplay-x11.c",
                                "@line": "2019",
                                "#text": "Returns the X display of a `GdkDisplay`."
                            },
                            "source-position": {
                                "@filename": "gdk/x11/gdkx11display.h",
                                "@line": "61"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "gdk/x11/gdkdisplay-x11.c",
                                    "@line": "2025",
                                    "#text": "an X display"
                                },
                                "type": {
                                    "@name": "xlib.Display",
                                    "@c:type": "Display*"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "display",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "gdk/x11/gdkdisplay-x11.c",
                                        "@line": "2021",
                                        "#text": "a `GdkDisplay`"
                                    },
                                    "type": {
                                        "@name": "X11Display",
                                        "@c:type": "GdkDisplay*"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "get_xrootwindow",
                            "@c:identifier": "gdk_x11_display_get_xrootwindow",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/x11/gdkdisplay-x11.c",
                                "@line": "2051",
                                "#text": "Returns the root X window used by `GdkDisplay`."
                            },
                            "source-position": {
                                "@filename": "gdk/x11/gdkx11display.h",
                                "@line": "65"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "gdk/x11/gdkdisplay-x11.c",
                                    "@line": "2057",
                                    "#text": "an X Window"
                                },
                                "type": {
                                    "@name": "xlib.Window",
                                    "@c:type": "Window"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "display",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "gdk/x11/gdkdisplay-x11.c",
                                        "@line": "2053",
                                        "#text": "a `GdkDisplay`"
                                    },
                                    "type": {
                                        "@name": "X11Display",
                                        "@c:type": "GdkDisplay*"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "get_xscreen",
                            "@c:identifier": "gdk_x11_display_get_xscreen",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/x11/gdkdisplay-x11.c",
                                "@line": "2035",
                                "#text": "Returns the X Screen used by `GdkDisplay`."
                            },
                            "source-position": {
                                "@filename": "gdk/x11/gdkx11display.h",
                                "@line": "63"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "gdk/x11/gdkdisplay-x11.c",
                                    "@line": "2041",
                                    "#text": "an X Screen"
                                },
                                "type": {
                                    "@name": "xlib.Screen",
                                    "@c:type": "Screen*"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "display",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "gdk/x11/gdkdisplay-x11.c",
                                        "@line": "2037",
                                        "#text": "a `GdkDisplay`"
                                    },
                                    "type": {
                                        "@name": "X11Display",
                                        "@c:type": "GdkDisplay*"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "grab",
                            "@c:identifier": "gdk_x11_display_grab",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/x11/gdkdisplay-x11.c",
                                "@line": "1867",
                                "#text": "Call XGrabServer() on @display.\nTo ungrab the display again, use gdk_x11_display_ungrab().\n\ngdk_x11_display_grab()/gdk_x11_display_ungrab() calls can be nested."
                            },
                            "source-position": {
                                "@filename": "gdk/x11/gdkx11display.h",
                                "@line": "112"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "type": {
                                    "@name": "none",
                                    "@c:type": "void"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "display",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "gdk/x11/gdkdisplay-x11.c",
                                        "@line": "1869",
                                        "#text": "a `GdkDisplay`"
                                    },
                                    "type": {
                                        "@name": "X11Display",
                                        "@c:type": "GdkDisplay*"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "set_cursor_theme",
                            "@c:identifier": "gdk_x11_display_set_cursor_theme",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/x11/gdkcursor-x11.c",
                                "@line": "261",
                                "#text": "Sets the cursor theme from which the images for cursor\nshould be taken.\n\nIf the windowing system supports it, existing cursors created\nwith [ctor@Gdk.Cursor.new_from_name] are updated to reflect the theme\nchange. Custom cursors constructed with [ctor@Gdk.Cursor.new_from_texture]\nwill have to be handled by the application (GTK applications can learn\nabout cursor theme changes by listening for change notification\nfor the corresponding `GtkSetting`)."
                            },
                            "source-position": {
                                "@filename": "gdk/x11/gdkx11display.h",
                                "@line": "93"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "type": {
                                    "@name": "none",
                                    "@c:type": "void"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "display",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "gdk/x11/gdkcursor-x11.c",
                                        "@line": "263",
                                        "#text": "a `GdkDisplay`"
                                    },
                                    "type": {
                                        "@name": "X11Display",
                                        "@c:type": "GdkDisplay*"
                                    }
                                },
                                "parameter": [
                                    {
                                        "@name": "theme",
                                        "@transfer-ownership": "none",
                                        "@nullable": "1",
                                        "@allow-none": "1",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "gdk/x11/gdkcursor-x11.c",
                                            "@line": "264",
                                            "#text": "the name of the cursor theme to use, or %NULL\n  to unset a previously set value"
                                        },
                                        "type": {
                                            "@name": "utf8",
                                            "@c:type": "const char*"
                                        }
                                    },
                                    {
                                        "@name": "size",
                                        "@transfer-ownership": "none",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "gdk/x11/gdkcursor-x11.c",
                                            "@line": "266",
                                            "#text": "the cursor size to use, or 0 to keep the previous size"
                                        },
                                        "type": {
                                            "@name": "gint",
                                            "@c:type": "const int"
                                        }
                                    }
                                ]
                            }
                        },
                        {
                            "@name": "set_startup_notification_id",
                            "@c:identifier": "gdk_x11_display_set_startup_notification_id",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/x11/gdkdisplay-x11.c",
                                "@line": "2313",
                                "#text": "Sets the startup notification ID for a display.\n\nThis is usually taken from the value of the DESKTOP_STARTUP_ID\nenvironment variable, but in some cases (such as the application not\nbeing launched using exec()) it can come from other sources.\n\nIf the ID contains the string \"_TIME\" then the portion following that\nstring is taken to be the X11 timestamp of the event that triggered\nthe application to be launched and the GDK current event time is set\naccordingly.\n\nThe startup ID is also what is used to signal that the startup is\ncomplete (for example, when opening a window or when calling\ngdk_display_notify_startup_complete())."
                            },
                            "source-position": {
                                "@filename": "gdk/x11/gdkx11display.h",
                                "@line": "86"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "type": {
                                    "@name": "none",
                                    "@c:type": "void"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "display",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "gdk/x11/gdkdisplay-x11.c",
                                        "@line": "2315",
                                        "#text": "a `GdkDisplay`"
                                    },
                                    "type": {
                                        "@name": "X11Display",
                                        "@c:type": "GdkDisplay*"
                                    }
                                },
                                "parameter": {
                                    "@name": "startup_id",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "gdk/x11/gdkdisplay-x11.c",
                                        "@line": "2316",
                                        "#text": "the startup notification ID (must be valid utf8)"
                                    },
                                    "type": {
                                        "@name": "utf8",
                                        "@c:type": "const char*"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "set_surface_scale",
                            "@c:identifier": "gdk_x11_display_set_surface_scale",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/x11/gdkdisplay-x11.c",
                                "@line": "2610",
                                "#text": "Forces a specific window scale for all windows on this display,\ninstead of using the default or user configured scale. This\nis can be used to disable scaling support by setting @scale to\n1, or to programmatically set the window scale.\n\nOnce the scale is set by this call it will not change in response\nto later user configuration changes."
                            },
                            "source-position": {
                                "@filename": "gdk/x11/gdkx11display.h",
                                "@line": "117"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "type": {
                                    "@name": "none",
                                    "@c:type": "void"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "display",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "gdk/x11/gdkdisplay-x11.c",
                                        "@line": "2612",
                                        "#text": "the display"
                                    },
                                    "type": {
                                        "@name": "X11Display",
                                        "@c:type": "GdkDisplay*"
                                    }
                                },
                                "parameter": {
                                    "@name": "scale",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "gdk/x11/gdkdisplay-x11.c",
                                        "@line": "2613",
                                        "#text": "The new scale value"
                                    },
                                    "type": {
                                        "@name": "gint",
                                        "@c:type": "int"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "string_to_compound_text",
                            "@c:identifier": "gdk_x11_display_string_to_compound_text",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/x11/gdkselection-x11.c",
                                "@line": "272",
                                "#text": "Convert a string from the encoding of the current\nlocale into a form suitable for storing in a window property."
                            },
                            "source-position": {
                                "@filename": "gdk/x11/gdkx11selection.h",
                                "@line": "49"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "gdk/x11/gdkselection-x11.c",
                                    "@line": "286",
                                    "#text": "0 upon success, non-zero upon failure"
                                },
                                "type": {
                                    "@name": "gint",
                                    "@c:type": "int"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "display",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "gdk/x11/gdkselection-x11.c",
                                        "@line": "274",
                                        "#text": "the `GdkDisplay` where the encoding is defined"
                                    },
                                    "type": {
                                        "@name": "X11Display",
                                        "@c:type": "GdkDisplay*"
                                    }
                                },
                                "parameter": [
                                    {
                                        "@name": "str",
                                        "@transfer-ownership": "none",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "gdk/x11/gdkselection-x11.c",
                                            "@line": "275",
                                            "#text": "a nul-terminated string"
                                        },
                                        "type": {
                                            "@name": "utf8",
                                            "@c:type": "const char*"
                                        }
                                    },
                                    {
                                        "@name": "encoding",
                                        "@direction": "out",
                                        "@caller-allocates": "0",
                                        "@transfer-ownership": "none",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "gdk/x11/gdkselection-x11.c",
                                            "@line": "276",
                                            "#text": "location to store the encoding\n  (to be used as the type for the property)"
                                        },
                                        "type": {
                                            "@name": "utf8",
                                            "@c:type": "const char**"
                                        }
                                    },
                                    {
                                        "@name": "format",
                                        "@direction": "out",
                                        "@caller-allocates": "0",
                                        "@transfer-ownership": "full",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "gdk/x11/gdkselection-x11.c",
                                            "@line": "278",
                                            "#text": "location to store the format of the property"
                                        },
                                        "type": {
                                            "@name": "gint",
                                            "@c:type": "int*"
                                        }
                                    },
                                    {
                                        "@name": "ctext",
                                        "@direction": "out",
                                        "@caller-allocates": "0",
                                        "@transfer-ownership": "full",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "gdk/x11/gdkselection-x11.c",
                                            "@line": "279",
                                            "#text": "location to store newly\n  allocated data for the property"
                                        },
                                        "array": {
                                            "@length": "4",
                                            "@zero-terminated": "0",
                                            "@c:type": "guchar**",
                                            "type": {
                                                "@name": "guint8",
                                                "@c:type": "guchar*"
                                            }
                                        }
                                    },
                                    {
                                        "@name": "length",
                                        "@direction": "out",
                                        "@caller-allocates": "0",
                                        "@transfer-ownership": "full",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "gdk/x11/gdkselection-x11.c",
                                            "@line": "281",
                                            "#text": "the length of @ctext, in bytes"
                                        },
                                        "type": {
                                            "@name": "gint",
                                            "@c:type": "int*"
                                        }
                                    }
                                ]
                            }
                        },
                        {
                            "@name": "text_property_to_text_list",
                            "@c:identifier": "gdk_x11_display_text_property_to_text_list",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/x11/gdkselection-x11.c",
                                "@line": "35",
                                "#text": "Convert a text string from the encoding as it is stored\nin a property into an array of strings in the encoding of\nthe current locale. (The elements of the array represent the\nnul-separated elements of the original text string.)"
                            },
                            "source-position": {
                                "@filename": "gdk/x11/gdkx11selection.h",
                                "@line": "40"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "gdk/x11/gdkselection-x11.c",
                                    "@line": "53",
                                    "#text": "the number of strings stored in list, or 0,\n  if the conversion failed"
                                },
                                "type": {
                                    "@name": "gint",
                                    "@c:type": "int"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "display",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "gdk/x11/gdkselection-x11.c",
                                        "@line": "37",
                                        "#text": "The `GdkDisplay` where the encoding is defined"
                                    },
                                    "type": {
                                        "@name": "X11Display",
                                        "@c:type": "GdkDisplay*"
                                    }
                                },
                                "parameter": [
                                    {
                                        "@name": "encoding",
                                        "@transfer-ownership": "none",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "gdk/x11/gdkselection-x11.c",
                                            "@line": "38",
                                            "#text": "a string representing the encoding. The most\n  common values for this are \"STRING\", or \"COMPOUND_TEXT\".\n  This is value used as the type for the property"
                                        },
                                        "type": {
                                            "@name": "utf8",
                                            "@c:type": "const char*"
                                        }
                                    },
                                    {
                                        "@name": "format",
                                        "@transfer-ownership": "none",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "gdk/x11/gdkselection-x11.c",
                                            "@line": "41",
                                            "#text": "the format of the property"
                                        },
                                        "type": {
                                            "@name": "gint",
                                            "@c:type": "int"
                                        }
                                    },
                                    {
                                        "@name": "text",
                                        "@transfer-ownership": "none",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "gdk/x11/gdkselection-x11.c",
                                            "@line": "42",
                                            "#text": "The text data"
                                        },
                                        "type": {
                                            "@name": "guint8",
                                            "@c:type": "const guchar*"
                                        }
                                    },
                                    {
                                        "@name": "length",
                                        "@transfer-ownership": "none",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "gdk/x11/gdkselection-x11.c",
                                            "@line": "43",
                                            "#text": "The number of items to transform"
                                        },
                                        "type": {
                                            "@name": "gint",
                                            "@c:type": "int"
                                        }
                                    },
                                    {
                                        "@name": "list",
                                        "@transfer-ownership": "none",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "gdk/x11/gdkselection-x11.c",
                                            "@line": "44",
                                            "#text": "location to store an  array of strings in\n  the encoding of the current locale. This array should be\n  freed using gdk_x11_free_text_list()."
                                        },
                                        "type": {
                                            "@name": "utf8",
                                            "@c:type": "char***"
                                        }
                                    }
                                ]
                            }
                        },
                        {
                            "@name": "ungrab",
                            "@c:identifier": "gdk_x11_display_ungrab",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/x11/gdkdisplay-x11.c",
                                "@line": "1890",
                                "#text": "Ungrab @display after it has been grabbed with\ngdk_x11_display_grab()."
                            },
                            "source-position": {
                                "@filename": "gdk/x11/gdkx11display.h",
                                "@line": "114"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "type": {
                                    "@name": "none",
                                    "@c:type": "void"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "display",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "gdk/x11/gdkdisplay-x11.c",
                                        "@line": "1892",
                                        "#text": "a `GdkDisplay`"
                                    },
                                    "type": {
                                        "@name": "X11Display",
                                        "@c:type": "GdkDisplay*"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "utf8_to_compound_text",
                            "@c:identifier": "gdk_x11_display_utf8_to_compound_text",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/x11/gdkselection-x11.c",
                                "@line": "327",
                                "#text": "Converts from UTF-8 to compound text."
                            },
                            "source-position": {
                                "@filename": "gdk/x11/gdkx11selection.h",
                                "@line": "56"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "gdk/x11/gdkselection-x11.c",
                                    "@line": "338",
                                    "#text": "%TRUE if the conversion succeeded, otherwise %FALSE"
                                },
                                "type": {
                                    "@name": "gboolean",
                                    "@c:type": "gboolean"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "display",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "gdk/x11/gdkselection-x11.c",
                                        "@line": "329",
                                        "#text": "a `GdkDisplay`"
                                    },
                                    "type": {
                                        "@name": "X11Display",
                                        "@c:type": "GdkDisplay*"
                                    }
                                },
                                "parameter": [
                                    {
                                        "@name": "str",
                                        "@transfer-ownership": "none",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "gdk/x11/gdkselection-x11.c",
                                            "@line": "330",
                                            "#text": "a UTF-8 string"
                                        },
                                        "type": {
                                            "@name": "utf8",
                                            "@c:type": "const char*"
                                        }
                                    },
                                    {
                                        "@name": "encoding",
                                        "@direction": "out",
                                        "@caller-allocates": "0",
                                        "@transfer-ownership": "none",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "gdk/x11/gdkselection-x11.c",
                                            "@line": "331",
                                            "#text": "location to store resulting encoding"
                                        },
                                        "type": {
                                            "@name": "utf8",
                                            "@c:type": "const char**"
                                        }
                                    },
                                    {
                                        "@name": "format",
                                        "@direction": "out",
                                        "@caller-allocates": "0",
                                        "@transfer-ownership": "full",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "gdk/x11/gdkselection-x11.c",
                                            "@line": "332",
                                            "#text": "location to store format of the result"
                                        },
                                        "type": {
                                            "@name": "gint",
                                            "@c:type": "int*"
                                        }
                                    },
                                    {
                                        "@name": "ctext",
                                        "@direction": "out",
                                        "@caller-allocates": "0",
                                        "@transfer-ownership": "full",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "gdk/x11/gdkselection-x11.c",
                                            "@line": "333",
                                            "#text": "location to store the data of the result"
                                        },
                                        "array": {
                                            "@length": "4",
                                            "@zero-terminated": "0",
                                            "@c:type": "guchar**",
                                            "type": {
                                                "@name": "guint8",
                                                "@c:type": "guchar*"
                                            }
                                        }
                                    },
                                    {
                                        "@name": "length",
                                        "@direction": "out",
                                        "@caller-allocates": "0",
                                        "@transfer-ownership": "full",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "gdk/x11/gdkselection-x11.c",
                                            "@line": "334",
                                            "#text": "location to store the length of the data stored in @ctext"
                                        },
                                        "type": {
                                            "@name": "gint",
                                            "@c:type": "int*"
                                        }
                                    }
                                ]
                            }
                        }
                    ],
                    "glib:signal": {
                        "@name": "xevent",
                        "@when": "last",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "gdk/x11/gdkdisplay-x11.c",
                            "@line": "3061",
                            "#text": "The ::xevent signal is a low level signal that is emitted\nwhenever an XEvent has been received.\n\nWhen handlers to this signal return %TRUE, no other handlers will be\ninvoked. In particular, the default handler for this function is\nGDK's own event handling mechanism, so by returning %TRUE for an event\nthat GDK expects to translate, you may break GDK and/or GTK+ in\ninteresting ways. You have been warned.\n\nIf you want this signal handler to queue a `GdkEvent`, you can use\ngdk_display_put_event().\n\nIf you are interested in X GenericEvents, bear in mind that\nXGetEventData() has been already called on the event, and\nXFreeEventData() will be called afterwards."
                        },
                        "return-value": {
                            "@transfer-ownership": "none",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/x11/gdkdisplay-x11.c",
                                "@line": "3082",
                                "#text": "%TRUE to stop other handlers from being invoked for the event.\n  %FALSE to propagate the event further."
                            },
                            "type": {
                                "@name": "gboolean",
                                "@c:type": "gboolean"
                            }
                        },
                        "parameters": {
                            "parameter": {
                                "@name": "xevent",
                                "@transfer-ownership": "none",
                                "@nullable": "1",
                                "@allow-none": "1",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "gdk/x11/gdkdisplay-x11.c",
                                    "@line": "3064",
                                    "#text": "a pointer to the XEvent to process"
                                },
                                "type": {
                                    "@name": "gpointer",
                                    "@c:type": "gpointer"
                                }
                            }
                        }
                    }
                },
                {
                    "@name": "X11Drag",
                    "@c:symbol-prefix": "x11_drag",
                    "@c:type": "GdkX11Drag",
                    "@parent": "Gdk.Drag",
                    "@glib:type-name": "GdkX11Drag",
                    "@glib:get-type": "gdk_x11_drag_get_type",
                    "@glib:type-struct": "X11DragClass",
                    "source-position": {
                        "@filename": "gdk/x11/gdkx11dnd.h",
                        "@line": "41"
                    }
                },
                {
                    "@name": "X11GLContext",
                    "@c:symbol-prefix": "x11_gl_context",
                    "@c:type": "GdkX11GLContext",
                    "@parent": "Gdk.GLContext",
                    "@abstract": "1",
                    "@glib:type-name": "GdkX11GLContext",
                    "@glib:get-type": "gdk_x11_gl_context_get_type",
                    "@glib:type-struct": "X11GLContextClass",
                    "source-position": {
                        "@filename": "gdk/x11/gdkx11glcontext.h",
                        "@line": "37"
                    }
                },
                {
                    "@name": "X11Monitor",
                    "@c:symbol-prefix": "x11_monitor",
                    "@c:type": "GdkX11Monitor",
                    "@parent": "Gdk.Monitor",
                    "@glib:type-name": "GdkX11Monitor",
                    "@glib:get-type": "gdk_x11_monitor_get_type",
                    "@glib:type-struct": "X11MonitorClass",
                    "source-position": {
                        "@filename": "gdk/x11/gdkx11monitor.h",
                        "@line": "38"
                    },
                    "method": [
                        {
                            "@name": "get_output",
                            "@c:identifier": "gdk_x11_monitor_get_output",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/x11/gdkmonitor-x11.c",
                                "@line": "117",
                                "#text": "Returns the XID of the Output corresponding to @monitor."
                            },
                            "source-position": {
                                "@filename": "gdk/x11/gdkx11monitor.h",
                                "@line": "44"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "gdk/x11/gdkmonitor-x11.c",
                                    "@line": "123",
                                    "#text": "the XID of @monitor"
                                },
                                "type": {
                                    "@name": "xlib.XID",
                                    "@c:type": "XID"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "monitor",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "gdk/x11/gdkmonitor-x11.c",
                                        "@line": "119",
                                        "#text": "a `GdkMonitor`"
                                    },
                                    "type": {
                                        "@name": "X11Monitor",
                                        "@c:type": "GdkMonitor*"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "get_workarea",
                            "@c:identifier": "gdk_x11_monitor_get_workarea",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/x11/gdkmonitor-x11.c",
                                "@line": "64",
                                "#text": "Retrieves the size and position of the \u201cwork area\u201d on a monitor\nwithin the display coordinate space.\n\nThe returned geometry is in \u201dapplication pixels\u201d, not in \u201ddevice pixels\u201d\n(see [method@Gdk.Monitor.get_scale_factor])."
                            },
                            "source-position": {
                                "@filename": "gdk/x11/gdkx11monitor.h",
                                "@line": "47"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "type": {
                                    "@name": "none",
                                    "@c:type": "void"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "monitor",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "gdk/x11/gdkmonitor-x11.c",
                                        "@line": "66",
                                        "#text": "a `GdkMonitor`"
                                    },
                                    "type": {
                                        "@name": "X11Monitor",
                                        "@c:type": "GdkMonitor*"
                                    }
                                },
                                "parameter": {
                                    "@name": "workarea",
                                    "@direction": "out",
                                    "@caller-allocates": "1",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "gdk/x11/gdkmonitor-x11.c",
                                        "@line": "67",
                                        "#text": "a `GdkRectangle` to be filled with the monitor workarea"
                                    },
                                    "type": {
                                        "@name": "Gdk.Rectangle",
                                        "@c:type": "GdkRectangle*"
                                    }
                                }
                            }
                        }
                    ]
                },
                {
                    "@name": "X11Screen",
                    "@c:symbol-prefix": "x11_screen",
                    "@c:type": "GdkX11Screen",
                    "@parent": "GObject.Object",
                    "@glib:type-name": "GdkX11Screen",
                    "@glib:get-type": "gdk_x11_screen_get_type",
                    "@glib:type-struct": "X11ScreenClass",
                    "source-position": {
                        "@filename": "gdk/x11/gdkx11screen.h",
                        "@line": "47"
                    },
                    "method": [
                        {
                            "@name": "get_current_desktop",
                            "@c:identifier": "gdk_x11_screen_get_current_desktop",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/x11/gdkscreen-x11.c",
                                "@line": "1399",
                                "#text": "Returns the current workspace for @screen when running under a\nwindow manager that supports multiple workspaces, as described\nin the\n[Extended Window Manager Hints](http://www.freedesktop.org/Standards/wm-spec) specification."
                            },
                            "source-position": {
                                "@filename": "gdk/x11/gdkx11screen.h",
                                "@line": "71"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "gdk/x11/gdkscreen-x11.c",
                                    "@line": "1408",
                                    "#text": "the current workspace, or 0 if workspaces are not supported"
                                },
                                "type": {
                                    "@name": "guint32",
                                    "@c:type": "guint32"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "screen",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "gdk/x11/gdkscreen-x11.c",
                                        "@line": "1401",
                                        "#text": "a `GdkX11Screen`"
                                    },
                                    "type": {
                                        "@name": "X11Screen",
                                        "@c:type": "GdkX11Screen*"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "get_monitor_output",
                            "@c:identifier": "gdk_x11_screen_get_monitor_output",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/x11/gdkscreen-x11.c",
                                "@line": "112",
                                "#text": "Gets the XID of the specified output/monitor.\nIf the X server does not support version 1.2 of the RANDR\nextension, 0 is returned."
                            },
                            "source-position": {
                                "@filename": "gdk/x11/gdkx11screen.h",
                                "@line": "65"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "gdk/x11/gdkscreen-x11.c",
                                    "@line": "121",
                                    "#text": "the XID of the monitor"
                                },
                                "type": {
                                    "@name": "xlib.XID",
                                    "@c:type": "XID"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "screen",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "gdk/x11/gdkscreen-x11.c",
                                        "@line": "114",
                                        "#text": "a `GdkX11Screen`"
                                    },
                                    "type": {
                                        "@name": "X11Screen",
                                        "@c:type": "GdkX11Screen*"
                                    }
                                },
                                "parameter": {
                                    "@name": "monitor_num",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "gdk/x11/gdkscreen-x11.c",
                                        "@line": "115",
                                        "#text": "number of the monitor, between 0 and gdk_screen_get_n_monitors (screen)"
                                    },
                                    "type": {
                                        "@name": "gint",
                                        "@c:type": "int"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "get_number_of_desktops",
                            "@c:identifier": "gdk_x11_screen_get_number_of_desktops",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/x11/gdkscreen-x11.c",
                                "@line": "1382",
                                "#text": "Returns the number of workspaces for @screen when running under a\nwindow manager that supports multiple workspaces, as described\nin the\n[Extended Window Manager Hints](http://www.freedesktop.org/Standards/wm-spec) specification."
                            },
                            "source-position": {
                                "@filename": "gdk/x11/gdkx11screen.h",
                                "@line": "69"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "gdk/x11/gdkscreen-x11.c",
                                    "@line": "1391",
                                    "#text": "the number of workspaces, or 0 if workspaces are not supported"
                                },
                                "type": {
                                    "@name": "guint32",
                                    "@c:type": "guint32"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "screen",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "gdk/x11/gdkscreen-x11.c",
                                        "@line": "1384",
                                        "#text": "a `GdkX11Screen`"
                                    },
                                    "type": {
                                        "@name": "X11Screen",
                                        "@c:type": "GdkX11Screen*"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "get_screen_number",
                            "@c:identifier": "gdk_x11_screen_get_screen_number",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/x11/gdkscreen-x11.c",
                                "@line": "364",
                                "#text": "Returns the index of a `GdkX11Screen`."
                            },
                            "source-position": {
                                "@filename": "gdk/x11/gdkx11screen.h",
                                "@line": "55"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "gdk/x11/gdkscreen-x11.c",
                                    "@line": "370",
                                    "#text": "the position of @screen among the screens\n  of its display"
                                },
                                "type": {
                                    "@name": "gint",
                                    "@c:type": "int"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "screen",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "gdk/x11/gdkscreen-x11.c",
                                        "@line": "366",
                                        "#text": "a `GdkX11Screen`"
                                    },
                                    "type": {
                                        "@name": "X11Screen",
                                        "@c:type": "GdkX11Screen*"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "get_window_manager_name",
                            "@c:identifier": "gdk_x11_screen_get_window_manager_name",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/x11/gdkscreen-x11.c",
                                "@line": "1267",
                                "#text": "Returns the name of the window manager for @screen."
                            },
                            "source-position": {
                                "@filename": "gdk/x11/gdkx11screen.h",
                                "@line": "58"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "gdk/x11/gdkscreen-x11.c",
                                    "@line": "1273",
                                    "#text": "the name of the window manager screen @screen, or\n\"unknown\" if the window manager is unknown. The string is owned by GDK\nand should not be freed."
                                },
                                "type": {
                                    "@name": "utf8",
                                    "@c:type": "const char*"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "screen",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "gdk/x11/gdkscreen-x11.c",
                                        "@line": "1269",
                                        "#text": "a `GdkX11Screen`"
                                    },
                                    "type": {
                                        "@name": "X11Screen",
                                        "@c:type": "GdkX11Screen*"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "get_xscreen",
                            "@c:identifier": "gdk_x11_screen_get_xscreen",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/x11/gdkscreen-x11.c",
                                "@line": "350",
                                "#text": "Returns the screen of a `GdkX11Screen`."
                            },
                            "source-position": {
                                "@filename": "gdk/x11/gdkx11screen.h",
                                "@line": "53"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "gdk/x11/gdkscreen-x11.c",
                                    "@line": "356",
                                    "#text": "an Xlib Screen*"
                                },
                                "type": {
                                    "@name": "xlib.Screen",
                                    "@c:type": "Screen*"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "screen",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "gdk/x11/gdkscreen-x11.c",
                                        "@line": "352",
                                        "#text": "a `GdkX11Screen`"
                                    },
                                    "type": {
                                        "@name": "X11Screen",
                                        "@c:type": "GdkX11Screen*"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "supports_net_wm_hint",
                            "@c:identifier": "gdk_x11_screen_supports_net_wm_hint",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/x11/gdkscreen-x11.c",
                                "@line": "1180",
                                "#text": "This function is specific to the X11 backend of GDK, and indicates\nwhether the window manager supports a certain hint from the\n[Extended Window Manager Hints](http://www.freedesktop.org/Standards/wm-spec) specification.\n\nWhen using this function, keep in mind that the window manager\ncan change over time; so you shouldn\u2019t use this function in\na way that impacts persistent application state. A common bug\nis that your application can start up before the window manager\ndoes when the user logs in, and before the window manager starts\ngdk_x11_screen_supports_net_wm_hint() will return %FALSE for every property.\nYou can monitor the window_manager_changed signal on `GdkX11Screen` to detect\na window manager change."
                            },
                            "source-position": {
                                "@filename": "gdk/x11/gdkx11screen.h",
                                "@line": "61"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "gdk/x11/gdkscreen-x11.c",
                                    "@line": "1198",
                                    "#text": "%TRUE if the window manager supports @property"
                                },
                                "type": {
                                    "@name": "gboolean",
                                    "@c:type": "gboolean"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "screen",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "gdk/x11/gdkscreen-x11.c",
                                        "@line": "1182",
                                        "#text": "the relevant `GdkX11Screen`."
                                    },
                                    "type": {
                                        "@name": "X11Screen",
                                        "@c:type": "GdkX11Screen*"
                                    }
                                },
                                "parameter": {
                                    "@name": "property_name",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "gdk/x11/gdkscreen-x11.c",
                                        "@line": "1183",
                                        "#text": "name of the WM property"
                                    },
                                    "type": {
                                        "@name": "utf8",
                                        "@c:type": "const char*"
                                    }
                                }
                            }
                        }
                    ],
                    "glib:signal": {
                        "@name": "window-manager-changed",
                        "@when": "last",
                        "return-value": {
                            "@transfer-ownership": "none",
                            "type": {
                                "@name": "none",
                                "@c:type": "void"
                            }
                        }
                    }
                },
                {
                    "@name": "X11Surface",
                    "@c:symbol-prefix": "x11_surface",
                    "@c:type": "GdkX11Surface",
                    "@parent": "Gdk.Surface",
                    "@glib:type-name": "GdkX11Surface",
                    "@glib:get-type": "gdk_x11_surface_get_type",
                    "@glib:type-struct": "X11SurfaceClass",
                    "source-position": {
                        "@filename": "gdk/x11/gdkx11surface.h",
                        "@line": "51"
                    },
                    "function": {
                        "@name": "lookup_for_display",
                        "@c:identifier": "gdk_x11_surface_lookup_for_display",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "gdk/x11/gdkxid.c",
                            "@line": "89",
                            "#text": "Looks up the `GdkSurface` that wraps the given native window handle."
                        },
                        "source-position": {
                            "@filename": "gdk/x11/gdkx11surface.h",
                            "@line": "105"
                        },
                        "return-value": {
                            "@transfer-ownership": "none",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/x11/gdkxid.c",
                                "@line": "97",
                                "#text": "the `GdkSurface` wrapper\n  for the native  window"
                            },
                            "type": {
                                "@name": "X11Surface",
                                "@c:type": "GdkSurface*"
                            }
                        },
                        "parameters": {
                            "parameter": [
                                {
                                    "@name": "display",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "gdk/x11/gdkxid.c",
                                        "@line": "91",
                                        "#text": "the `GdkDisplay` corresponding to the\n  window handle"
                                    },
                                    "type": {
                                        "@name": "X11Display",
                                        "@c:type": "GdkDisplay*"
                                    }
                                },
                                {
                                    "@name": "window",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "gdk/x11/gdkxid.c",
                                        "@line": "93",
                                        "#text": "an Xlib Window"
                                    },
                                    "type": {
                                        "@name": "xlib.Window",
                                        "@c:type": "Window"
                                    }
                                }
                            ]
                        }
                    },
                    "method": [
                        {
                            "@name": "get_desktop",
                            "@c:identifier": "gdk_x11_surface_get_desktop",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/x11/gdksurface-x11.c",
                                "@line": "2137",
                                "#text": "Gets the number of the workspace @surface is on."
                            },
                            "source-position": {
                                "@filename": "gdk/x11/gdkx11surface.h",
                                "@line": "72"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "gdk/x11/gdksurface-x11.c",
                                    "@line": "2143",
                                    "#text": "the current workspace of @surface"
                                },
                                "type": {
                                    "@name": "guint32",
                                    "@c:type": "guint32"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "surface",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "gdk/x11/gdksurface-x11.c",
                                        "@line": "2139",
                                        "#text": "a `GdkSurface`"
                                    },
                                    "type": {
                                        "@name": "X11Surface",
                                        "@c:type": "GdkSurface*"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "get_group",
                            "@c:identifier": "gdk_x11_surface_get_group",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/x11/gdksurface-x11.c",
                                "@line": "3539",
                                "#text": "Returns the group this surface belongs to."
                            },
                            "source-position": {
                                "@filename": "gdk/x11/gdkx11surface.h",
                                "@line": "122"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "@nullable": "1",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "gdk/x11/gdksurface-x11.c",
                                    "@line": "3545",
                                    "#text": "The group of this surface;"
                                },
                                "type": {
                                    "@name": "Gdk.Surface",
                                    "@c:type": "GdkSurface*"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "surface",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "gdk/x11/gdksurface-x11.c",
                                        "@line": "3541",
                                        "#text": "The `GdkSurface`"
                                    },
                                    "type": {
                                        "@name": "X11Surface",
                                        "@c:type": "GdkSurface*"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "get_xid",
                            "@c:identifier": "gdk_x11_surface_get_xid",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/x11/gdksurface-x11.c",
                                "@line": "4662",
                                "#text": "Returns the X resource (surface) belonging to a `GdkSurface`."
                            },
                            "source-position": {
                                "@filename": "gdk/x11/gdkx11surface.h",
                                "@line": "57"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "gdk/x11/gdksurface-x11.c",
                                    "@line": "4668",
                                    "#text": "the ID of @drawable\u2019s X resource."
                                },
                                "type": {
                                    "@name": "xlib.Window",
                                    "@c:type": "Window"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "surface",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "gdk/x11/gdksurface-x11.c",
                                        "@line": "4664",
                                        "#text": "a native `GdkSurface`."
                                    },
                                    "type": {
                                        "@name": "X11Surface",
                                        "@c:type": "GdkSurface*"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "move_to_current_desktop",
                            "@c:identifier": "gdk_x11_surface_move_to_current_desktop",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/x11/gdksurface-x11.c",
                                "@line": "2074",
                                "#text": "Moves the surface to the correct workspace when running under a\nwindow manager that supports multiple workspaces, as described\nin the [Extended Window Manager Hints](http://www.freedesktop.org/Standards/wm-spec) specification.\nWill not do anything if the surface is already on all workspaces."
                            },
                            "source-position": {
                                "@filename": "gdk/x11/gdkx11surface.h",
                                "@line": "69"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "type": {
                                    "@name": "none",
                                    "@c:type": "void"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "surface",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "gdk/x11/gdksurface-x11.c",
                                        "@line": "2076",
                                        "#text": "a `GdkSurface`"
                                    },
                                    "type": {
                                        "@name": "X11Surface",
                                        "@c:type": "GdkSurface*"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "move_to_desktop",
                            "@c:identifier": "gdk_x11_surface_move_to_desktop",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/x11/gdksurface-x11.c",
                                "@line": "2153",
                                "#text": "Moves the surface to the given workspace when running unde a\nwindow manager that supports multiple workspaces, as described\nin the [Extended Window Manager Hints](http://www.freedesktop.org/Standards/wm-spec) specification."
                            },
                            "source-position": {
                                "@filename": "gdk/x11/gdkx11surface.h",
                                "@line": "74"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "type": {
                                    "@name": "none",
                                    "@c:type": "void"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "surface",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "gdk/x11/gdksurface-x11.c",
                                        "@line": "2155",
                                        "#text": "a `GdkSurface`"
                                    },
                                    "type": {
                                        "@name": "X11Surface",
                                        "@c:type": "GdkSurface*"
                                    }
                                },
                                "parameter": {
                                    "@name": "desktop",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "gdk/x11/gdksurface-x11.c",
                                        "@line": "2156",
                                        "#text": "the number of the workspace to move the surface to"
                                    },
                                    "type": {
                                        "@name": "guint32",
                                        "@c:type": "guint32"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "set_frame_sync_enabled",
                            "@c:identifier": "gdk_x11_surface_set_frame_sync_enabled",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/x11/gdksurface-x11.c",
                                "@line": "4687",
                                "#text": "This function can be used to disable frame synchronization for a surface.\nNormally frame synchronziation will be enabled or disabled based on whether\nthe system has a compositor that supports frame synchronization, but if\nthe surface is not directly managed by the window manager, then frame\nsynchronziation may need to be disabled. This is the case for a surface\nembedded via the XEMBED protocol."
                            },
                            "source-position": {
                                "@filename": "gdk/x11/gdkx11surface.h",
                                "@line": "78"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "type": {
                                    "@name": "none",
                                    "@c:type": "void"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "surface",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "gdk/x11/gdksurface-x11.c",
                                        "@line": "4689",
                                        "#text": "a native `GdkSurface`"
                                    },
                                    "type": {
                                        "@name": "X11Surface",
                                        "@c:type": "GdkSurface*"
                                    }
                                },
                                "parameter": {
                                    "@name": "frame_sync_enabled",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "gdk/x11/gdksurface-x11.c",
                                        "@line": "4690",
                                        "#text": "whether frame-synchronization should be enabled"
                                    },
                                    "type": {
                                        "@name": "gboolean",
                                        "@c:type": "gboolean"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "set_group",
                            "@c:identifier": "gdk_x11_surface_set_group",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/x11/gdksurface-x11.c",
                                "@line": "3560",
                                "#text": "Sets the group leader of @surface to be @leader.\nSee the ICCCM for details."
                            },
                            "source-position": {
                                "@filename": "gdk/x11/gdkx11surface.h",
                                "@line": "119"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "type": {
                                    "@name": "none",
                                    "@c:type": "void"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "surface",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "gdk/x11/gdksurface-x11.c",
                                        "@line": "3562",
                                        "#text": "a native `GdkSurface`"
                                    },
                                    "type": {
                                        "@name": "X11Surface",
                                        "@c:type": "GdkSurface*"
                                    }
                                },
                                "parameter": {
                                    "@name": "leader",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "gdk/x11/gdksurface-x11.c",
                                        "@line": "3563",
                                        "#text": "a `GdkSurface`"
                                    },
                                    "type": {
                                        "@name": "Gdk.Surface",
                                        "@c:type": "GdkSurface*"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "set_skip_pager_hint",
                            "@c:identifier": "gdk_x11_surface_set_skip_pager_hint",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/x11/gdksurface-x11.c",
                                "@line": "2382",
                                "#text": "Sets a hint on @surface that pagers should not\ndisplay it. See the EWMH for details."
                            },
                            "source-position": {
                                "@filename": "gdk/x11/gdkx11surface.h",
                                "@line": "112"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "type": {
                                    "@name": "none",
                                    "@c:type": "void"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "surface",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "gdk/x11/gdksurface-x11.c",
                                        "@line": "2384",
                                        "#text": "a `GdkSurface`"
                                    },
                                    "type": {
                                        "@name": "X11Surface",
                                        "@c:type": "GdkSurface*"
                                    }
                                },
                                "parameter": {
                                    "@name": "skips_pager",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "gdk/x11/gdksurface-x11.c",
                                        "@line": "2385",
                                        "#text": "%TRUE to skip pagers"
                                    },
                                    "type": {
                                        "@name": "gboolean",
                                        "@c:type": "gboolean"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "set_skip_taskbar_hint",
                            "@c:identifier": "gdk_x11_surface_set_skip_taskbar_hint",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/x11/gdksurface-x11.c",
                                "@line": "2356",
                                "#text": "Sets a hint on @surface that taskbars should not\ndisplay it. See the EWMH for details."
                            },
                            "source-position": {
                                "@filename": "gdk/x11/gdkx11surface.h",
                                "@line": "109"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "type": {
                                    "@name": "none",
                                    "@c:type": "void"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "surface",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "gdk/x11/gdksurface-x11.c",
                                        "@line": "2358",
                                        "#text": "a native `GdkSurface`"
                                    },
                                    "type": {
                                        "@name": "X11Surface",
                                        "@c:type": "GdkSurface*"
                                    }
                                },
                                "parameter": {
                                    "@name": "skips_taskbar",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "gdk/x11/gdksurface-x11.c",
                                        "@line": "2359",
                                        "#text": "%TRUE to skip taskbars"
                                    },
                                    "type": {
                                        "@name": "gboolean",
                                        "@c:type": "gboolean"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "set_theme_variant",
                            "@c:identifier": "gdk_x11_surface_set_theme_variant",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/x11/gdksurface-x11.c",
                                "@line": "3094",
                                "#text": "GTK applications can request a dark theme variant. In order to\nmake other applications - namely window managers using GTK for\nthemeing - aware of this choice, GTK uses this function to\nexport the requested theme variant as _GTK_THEME_VARIANT property\non toplevel surfaces.\n\nNote that this property is automatically updated by GTK, so this\nfunction should only be used by applications which do not use GTK\nto create toplevel surfaces."
                            },
                            "source-position": {
                                "@filename": "gdk/x11/gdkx11surface.h",
                                "@line": "66"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "type": {
                                    "@name": "none",
                                    "@c:type": "void"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "surface",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "gdk/x11/gdksurface-x11.c",
                                        "@line": "3096",
                                        "#text": "a `GdkSurface`"
                                    },
                                    "type": {
                                        "@name": "X11Surface",
                                        "@c:type": "GdkSurface*"
                                    }
                                },
                                "parameter": {
                                    "@name": "variant",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "gdk/x11/gdksurface-x11.c",
                                        "@line": "3097",
                                        "#text": "the theme variant to export"
                                    },
                                    "type": {
                                        "@name": "utf8",
                                        "@c:type": "const char*"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "set_urgency_hint",
                            "@c:identifier": "gdk_x11_surface_set_urgency_hint",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/x11/gdksurface-x11.c",
                                "@line": "2408",
                                "#text": "Sets a hint on @surface that it needs user attention.\nSee the ICCCM for details."
                            },
                            "source-position": {
                                "@filename": "gdk/x11/gdkx11surface.h",
                                "@line": "115"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "type": {
                                    "@name": "none",
                                    "@c:type": "void"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "surface",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "gdk/x11/gdksurface-x11.c",
                                        "@line": "2410",
                                        "#text": "a native `GdkSurface`"
                                    },
                                    "type": {
                                        "@name": "X11Surface",
                                        "@c:type": "GdkSurface*"
                                    }
                                },
                                "parameter": {
                                    "@name": "urgent",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "gdk/x11/gdksurface-x11.c",
                                        "@line": "2411",
                                        "#text": "%TRUE to indicate urgenct attention needed"
                                    },
                                    "type": {
                                        "@name": "gboolean",
                                        "@c:type": "gboolean"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "set_user_time",
                            "@c:identifier": "gdk_x11_surface_set_user_time",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/x11/gdksurface-x11.c",
                                "@line": "2997",
                                "#text": "The application can use this call to update the _NET_WM_USER_TIME\nproperty on a toplevel surface.  This property stores an Xserver\ntime which represents the time of the last user input event\nreceived for this surface.  This property may be used by the window\nmanager to alter the focus, stacking, and/or placement behavior of\nsurfaces when they are mapped depending on whether the new surface\nwas created by a user action or is a \"pop-up\" surface activated by a\ntimer or some other event.\n\nNote that this property is automatically updated by GDK, so this\nfunction should only be used by applications which handle input\nevents bypassing GDK."
                            },
                            "source-position": {
                                "@filename": "gdk/x11/gdkx11surface.h",
                                "@line": "59"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "type": {
                                    "@name": "none",
                                    "@c:type": "void"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "surface",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "gdk/x11/gdksurface-x11.c",
                                        "@line": "2999",
                                        "#text": "A toplevel `GdkSurface`"
                                    },
                                    "type": {
                                        "@name": "X11Surface",
                                        "@c:type": "GdkSurface*"
                                    }
                                },
                                "parameter": {
                                    "@name": "timestamp",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "gdk/x11/gdksurface-x11.c",
                                        "@line": "3000",
                                        "#text": "An XServer timestamp to which the property should be set"
                                    },
                                    "type": {
                                        "@name": "guint32",
                                        "@c:type": "guint32"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "set_utf8_property",
                            "@c:identifier": "gdk_x11_surface_set_utf8_property",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/x11/gdksurface-x11.c",
                                "@line": "3059",
                                "#text": "This function modifies or removes an arbitrary X11 window\nproperty of type UTF8_STRING.  If the given @surface is\nnot a toplevel surface, it is ignored."
                            },
                            "source-position": {
                                "@filename": "gdk/x11/gdkx11surface.h",
                                "@line": "62"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "type": {
                                    "@name": "none",
                                    "@c:type": "void"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "surface",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "gdk/x11/gdksurface-x11.c",
                                        "@line": "3061",
                                        "#text": "a `GdkSurface`"
                                    },
                                    "type": {
                                        "@name": "X11Surface",
                                        "@c:type": "GdkSurface*"
                                    }
                                },
                                "parameter": [
                                    {
                                        "@name": "name",
                                        "@transfer-ownership": "none",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "gdk/x11/gdksurface-x11.c",
                                            "@line": "3062",
                                            "#text": "Property name, will be interned as an X atom"
                                        },
                                        "type": {
                                            "@name": "utf8",
                                            "@c:type": "const char*"
                                        }
                                    },
                                    {
                                        "@name": "value",
                                        "@transfer-ownership": "none",
                                        "@nullable": "1",
                                        "@allow-none": "1",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "gdk/x11/gdksurface-x11.c",
                                            "@line": "3063",
                                            "#text": "Property value, or %NULL to delete"
                                        },
                                        "type": {
                                            "@name": "utf8",
                                            "@c:type": "const char*"
                                        }
                                    }
                                ]
                            }
                        }
                    ]
                }
            ],
            "record": [
                {
                    "@name": "X11AppLaunchContextClass",
                    "@c:type": "GdkX11AppLaunchContextClass",
                    "@disguised": "1",
                    "@glib:is-gtype-struct-for": "X11AppLaunchContext",
                    "source-position": {
                        "@filename": "gdk/x11/gdkx11applaunchcontext.h",
                        "@line": "41"
                    }
                },
                {
                    "@name": "X11DeviceManagerXI2Class",
                    "@c:type": "GdkX11DeviceManagerXI2Class",
                    "@disguised": "1",
                    "@glib:is-gtype-struct-for": "X11DeviceManagerXI2",
                    "source-position": {
                        "@filename": "gdk/x11/gdkx11devicemanager-xi2.h",
                        "@line": "33"
                    }
                },
                {
                    "@name": "X11DeviceXI2Class",
                    "@c:type": "GdkX11DeviceXI2Class",
                    "@disguised": "1",
                    "@glib:is-gtype-struct-for": "X11DeviceXI2",
                    "source-position": {
                        "@filename": "gdk/x11/gdkx11device-xi2.h",
                        "@line": "33"
                    }
                },
                {
                    "@name": "X11DisplayClass",
                    "@c:type": "GdkX11DisplayClass",
                    "@disguised": "1",
                    "@glib:is-gtype-struct-for": "X11Display",
                    "source-position": {
                        "@filename": "gdk/x11/gdkx11display.h",
                        "@line": "45"
                    }
                },
                {
                    "@name": "X11DragClass",
                    "@c:type": "GdkX11DragClass",
                    "@disguised": "1",
                    "@glib:is-gtype-struct-for": "X11Drag",
                    "source-position": {
                        "@filename": "gdk/x11/gdkx11dnd.h",
                        "@line": "41"
                    }
                },
                {
                    "@name": "X11GLContextClass",
                    "@c:type": "GdkX11GLContextClass",
                    "@disguised": "1",
                    "@glib:is-gtype-struct-for": "X11GLContext",
                    "source-position": {
                        "@filename": "gdk/x11/gdkx11glcontext.h",
                        "@line": "37"
                    }
                },
                {
                    "@name": "X11MonitorClass",
                    "@c:type": "GdkX11MonitorClass",
                    "@disguised": "1",
                    "@glib:is-gtype-struct-for": "X11Monitor",
                    "source-position": {
                        "@filename": "gdk/x11/gdkx11monitor.h",
                        "@line": "38"
                    }
                },
                {
                    "@name": "X11ScreenClass",
                    "@c:type": "GdkX11ScreenClass",
                    "@disguised": "1",
                    "@glib:is-gtype-struct-for": "X11Screen",
                    "source-position": {
                        "@filename": "gdk/x11/gdkx11screen.h",
                        "@line": "47"
                    }
                },
                {
                    "@name": "X11SurfaceClass",
                    "@c:type": "GdkX11SurfaceClass",
                    "@disguised": "1",
                    "@glib:is-gtype-struct-for": "X11Surface",
                    "source-position": {
                        "@filename": "gdk/x11/gdkx11surface.h",
                        "@line": "51"
                    }
                }
            ],
            "enumeration": {
                "@name": "X11DeviceType",
                "@c:type": "GdkX11DeviceType",
                "source-position": {
                    "@filename": "gdk/x11/gdkx11device-xi2.h",
                    "@line": "39"
                },
                "member": [
                    {
                        "@name": "logical",
                        "@value": "0",
                        "@c:identifier": "GDK_X11_DEVICE_TYPE_LOGICAL"
                    },
                    {
                        "@name": "physical",
                        "@value": "1",
                        "@c:identifier": "GDK_X11_DEVICE_TYPE_PHYSICAL"
                    },
                    {
                        "@name": "floating",
                        "@value": "2",
                        "@c:identifier": "GDK_X11_DEVICE_TYPE_FLOATING"
                    }
                ]
            },
            "function": [
                {
                    "@name": "x11_device_get_id",
                    "@c:identifier": "gdk_x11_device_get_id",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "gdk/x11/gdkdevicemanager-x11.c",
                        "@line": "88",
                        "#text": "Returns the device ID as seen by XInput2."
                    },
                    "source-position": {
                        "@filename": "gdk/x11/gdkx11device.h",
                        "@line": "30"
                    },
                    "return-value": {
                        "@transfer-ownership": "none",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "gdk/x11/gdkdevicemanager-x11.c",
                            "@line": "94",
                            "#text": "the XInput2 device ID"
                        },
                        "type": {
                            "@name": "gint",
                            "@c:type": "int"
                        }
                    },
                    "parameters": {
                        "parameter": {
                            "@name": "device",
                            "@transfer-ownership": "none",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/x11/gdkdevicemanager-x11.c",
                                "@line": "90",
                                "#text": "a `GdkDevice`"
                            },
                            "type": {
                                "@name": "X11DeviceXI2",
                                "@c:type": "GdkDevice*"
                            }
                        }
                    }
                },
                {
                    "@name": "x11_device_manager_lookup",
                    "@c:identifier": "gdk_x11_device_manager_lookup",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "gdk/x11/gdkdevicemanager-x11.c",
                        "@line": "67",
                        "#text": "Returns the `GdkDevice` that wraps the given device ID."
                    },
                    "source-position": {
                        "@filename": "gdk/x11/gdkx11devicemanager.h",
                        "@line": "34"
                    },
                    "return-value": {
                        "@transfer-ownership": "none",
                        "@nullable": "1",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "gdk/x11/gdkdevicemanager-x11.c",
                            "@line": "74",
                            "#text": "The\n  `GdkDevice` wrapping the device ID, or %NULL if the given ID\n  doesn\u2019t currently represent a device."
                        },
                        "type": {
                            "@name": "X11DeviceXI2",
                            "@c:type": "GdkDevice*"
                        }
                    },
                    "parameters": {
                        "parameter": [
                            {
                                "@name": "device_manager",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "gdk/x11/gdkdevicemanager-x11.c",
                                    "@line": "69",
                                    "#text": "a `GdkDeviceManager`"
                                },
                                "type": {
                                    "@name": "X11DeviceManagerXI2",
                                    "@c:type": "GdkX11DeviceManagerXI2*"
                                }
                            },
                            {
                                "@name": "device_id",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "gdk/x11/gdkdevicemanager-x11.c",
                                    "@line": "70",
                                    "#text": "a device ID, as understood by the XInput2 protocol"
                                },
                                "type": {
                                    "@name": "gint",
                                    "@c:type": "int"
                                }
                            }
                        ]
                    }
                },
                {
                    "@name": "x11_free_compound_text",
                    "@c:identifier": "gdk_x11_free_compound_text",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "gdk/x11/gdkselection-x11.c",
                        "@line": "402",
                        "#text": "Frees the data returned from gdk_x11_display_string_to_compound_text()."
                    },
                    "source-position": {
                        "@filename": "gdk/x11/gdkx11selection.h",
                        "@line": "63"
                    },
                    "return-value": {
                        "@transfer-ownership": "none",
                        "type": {
                            "@name": "none",
                            "@c:type": "void"
                        }
                    },
                    "parameters": {
                        "parameter": {
                            "@name": "ctext",
                            "@transfer-ownership": "none",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/x11/gdkselection-x11.c",
                                "@line": "404",
                                "#text": "The pointer stored in @ctext from a call to\n  gdk_x11_display_string_to_compound_text()."
                            },
                            "type": {
                                "@name": "guint8",
                                "@c:type": "guchar*"
                            }
                        }
                    }
                },
                {
                    "@name": "x11_free_text_list",
                    "@c:identifier": "gdk_x11_free_text_list",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "gdk/x11/gdkselection-x11.c",
                        "@line": "95",
                        "#text": "Frees the array of strings created by\ngdk_x11_display_text_property_to_text_list()."
                    },
                    "source-position": {
                        "@filename": "gdk/x11/gdkx11selection.h",
                        "@line": "47"
                    },
                    "return-value": {
                        "@transfer-ownership": "none",
                        "type": {
                            "@name": "none",
                            "@c:type": "void"
                        }
                    },
                    "parameters": {
                        "parameter": {
                            "@name": "list",
                            "@transfer-ownership": "none",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/x11/gdkselection-x11.c",
                                "@line": "97",
                                "#text": "the value stored in the @list parameter by\n  a call to gdk_x11_display_text_property_to_text_list()."
                            },
                            "type": {
                                "@name": "utf8",
                                "@c:type": "char**"
                            }
                        }
                    }
                },
                {
                    "@name": "x11_get_server_time",
                    "@c:identifier": "gdk_x11_get_server_time",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "gdk/x11/gdksurface-x11.c",
                        "@line": "4624",
                        "#text": "Routine to get the current X server time stamp."
                    },
                    "source-position": {
                        "@filename": "gdk/x11/gdkx11surface.h",
                        "@line": "102"
                    },
                    "return-value": {
                        "@transfer-ownership": "none",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "gdk/x11/gdksurface-x11.c",
                            "@line": "4632",
                            "#text": "the time stamp"
                        },
                        "type": {
                            "@name": "guint32",
                            "@c:type": "guint32"
                        }
                    },
                    "parameters": {
                        "parameter": {
                            "@name": "surface",
                            "@transfer-ownership": "none",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/x11/gdksurface-x11.c",
                                "@line": "4626",
                                "#text": "a `GdkSurface`, used for communication\n  with the server. The surface must have `GDK_PROPERTY_CHANGE_MASK` in\n  its events mask or a hang will result."
                            },
                            "type": {
                                "@name": "X11Surface",
                                "@c:type": "GdkSurface*"
                            }
                        }
                    }
                },
                {
                    "@name": "x11_get_xatom_by_name_for_display",
                    "@c:identifier": "gdk_x11_get_xatom_by_name_for_display",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "gdk/x11/gdkproperty-x11.c",
                        "@line": "66",
                        "#text": "Returns the X atom for a `GdkDisplay` corresponding to @atom_name.\nThis function caches the result, so if called repeatedly it is much\nfaster than XInternAtom(), which is a round trip to the server each time."
                    },
                    "source-position": {
                        "@filename": "gdk/x11/gdkx11property.h",
                        "@line": "40"
                    },
                    "return-value": {
                        "@transfer-ownership": "none",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "gdk/x11/gdkproperty-x11.c",
                            "@line": "75",
                            "#text": "a X atom for a `GdkDisplay`"
                        },
                        "type": {
                            "@name": "xlib.Atom",
                            "@c:type": "Atom"
                        }
                    },
                    "parameters": {
                        "parameter": [
                            {
                                "@name": "display",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "gdk/x11/gdkproperty-x11.c",
                                    "@line": "68",
                                    "#text": "a `GdkDisplay`"
                                },
                                "type": {
                                    "@name": "X11Display",
                                    "@c:type": "GdkDisplay*"
                                }
                            },
                            {
                                "@name": "atom_name",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "gdk/x11/gdkproperty-x11.c",
                                    "@line": "69",
                                    "#text": "a string"
                                },
                                "type": {
                                    "@name": "utf8",
                                    "@c:type": "const char*"
                                }
                            }
                        ]
                    }
                },
                {
                    "@name": "x11_get_xatom_name_for_display",
                    "@c:identifier": "gdk_x11_get_xatom_name_for_display",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "gdk/x11/gdkproperty-x11.c",
                        "@line": "136",
                        "#text": "Returns the name of an X atom for its display. This\nfunction is meant mainly for debugging, so for convenience, unlike\nXAtomName() and the result doesn\u2019t need to\nbe freed."
                    },
                    "source-position": {
                        "@filename": "gdk/x11/gdkx11property.h",
                        "@line": "43"
                    },
                    "return-value": {
                        "@transfer-ownership": "none",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "gdk/x11/gdkproperty-x11.c",
                            "@line": "146",
                            "#text": "name of the X atom; this string is owned by GDK,\n  so it shouldn\u2019t be modified or freed."
                        },
                        "type": {
                            "@name": "utf8",
                            "@c:type": "const char*"
                        }
                    },
                    "parameters": {
                        "parameter": [
                            {
                                "@name": "display",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "gdk/x11/gdkproperty-x11.c",
                                    "@line": "138",
                                    "#text": "the `GdkDisplay` where @xatom is defined"
                                },
                                "type": {
                                    "@name": "X11Display",
                                    "@c:type": "GdkDisplay*"
                                }
                            },
                            {
                                "@name": "xatom",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "gdk/x11/gdkproperty-x11.c",
                                    "@line": "139",
                                    "#text": "an X atom"
                                },
                                "type": {
                                    "@name": "xlib.Atom",
                                    "@c:type": "Atom"
                                }
                            }
                        ]
                    }
                },
                {
                    "@name": "x11_lookup_xdisplay",
                    "@c:identifier": "gdk_x11_lookup_xdisplay",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "gdk/x11/gdkdisplay-x11.c",
                        "@line": "1986",
                        "#text": "Find the `GdkDisplay` corresponding to @xdisplay, if any exists."
                    },
                    "source-position": {
                        "@filename": "gdk/x11/gdkx11display.h",
                        "@line": "103"
                    },
                    "return-value": {
                        "@transfer-ownership": "none",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "gdk/x11/gdkdisplay-x11.c",
                            "@line": "1992",
                            "#text": "the `GdkDisplay`, if found, otherwise %NULL."
                        },
                        "type": {
                            "@name": "X11Display",
                            "@c:type": "GdkDisplay*"
                        }
                    },
                    "parameters": {
                        "parameter": {
                            "@name": "xdisplay",
                            "@transfer-ownership": "none",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/x11/gdkdisplay-x11.c",
                                "@line": "1988",
                                "#text": "a pointer to an X Display"
                            },
                            "type": {
                                "@name": "xlib.Display",
                                "@c:type": "Display*"
                            }
                        }
                    }
                },
                {
                    "@name": "x11_set_sm_client_id",
                    "@c:identifier": "gdk_x11_set_sm_client_id",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "gdk/x11/gdkdisplay-x11.c",
                        "@line": "2692",
                        "#text": "Sets the `SM_CLIENT_ID` property on the application\u2019s leader window so that\nthe window manager can save the application\u2019s state using the X11R6 ICCCM\nsession management protocol.\n\nSee the X Session Management Library documentation for more information on\nsession management and the Inter-Client Communication Conventions Manual"
                    },
                    "source-position": {
                        "@filename": "gdk/x11/gdkx11display.h",
                        "@line": "129"
                    },
                    "return-value": {
                        "@transfer-ownership": "none",
                        "type": {
                            "@name": "none",
                            "@c:type": "void"
                        }
                    },
                    "parameters": {
                        "parameter": {
                            "@name": "sm_client_id",
                            "@transfer-ownership": "none",
                            "@nullable": "1",
                            "@allow-none": "1",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "gdk/x11/gdkdisplay-x11.c",
                                "@line": "2694",
                                "#text": "the client id assigned by the session manager\n   when the connection was opened, or %NULL to remove the property."
                            },
                            "type": {
                                "@name": "utf8",
                                "@c:type": "const char*"
                            }
                        }
                    }
                }
            ]
        }
    }
}