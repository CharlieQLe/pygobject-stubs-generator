{
    "repository": {
        "@version": "1.2",
        "@xmlns": "http://www.gtk.org/introspection/core/1.0",
        "@xmlns:c": "http://www.gtk.org/introspection/c/1.0",
        "@xmlns:glib": "http://www.gtk.org/introspection/glib/1.0",
        "include": {
            "@name": "Gio",
            "@version": "2.0"
        },
        "package": {
            "@name": "libsoup-3.0"
        },
        "c:include": {
            "@name": "libsoup/soup.h"
        },
        "namespace": {
            "@name": "Soup",
            "@version": "3.0",
            "@shared-library": "libsoup-3.0.so.0",
            "@c:identifier-prefixes": "Soup",
            "@c:symbol-prefixes": "soup",
            "class": [
                {
                    "@name": "Auth",
                    "@c:symbol-prefix": "auth",
                    "@c:type": "SoupAuth",
                    "@parent": "GObject.Object",
                    "@abstract": "1",
                    "@glib:type-name": "SoupAuth",
                    "@glib:get-type": "soup_auth_get_type",
                    "@glib:type-struct": "AuthClass",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "../libsoup/auth/soup-auth.c",
                        "@line": "20",
                        "#text": "The abstract base class for handling authentication.\n\nSpecific HTTP Authentication mechanisms are implemented by its subclasses,\nbut applications never need to be aware of the specific subclasses being\nused.\n\n#SoupAuth objects store the authentication data associated with a given bit\nof web space. They are created automatically by [class@Session]."
                    },
                    "source-position": {
                        "@filename": "../libsoup/auth/soup-auth.h",
                        "@line": "44"
                    },
                    "constructor": {
                        "@name": "new",
                        "@c:identifier": "soup_auth_new",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "../libsoup/auth/soup-auth.c",
                            "@line": "238",
                            "#text": "Creates a new #SoupAuth of type @type with the information from\n@msg and @auth_header.\n\nThis is called by [class@Session]; you will normally not create auths\nyourself."
                        },
                        "source-position": {
                            "@filename": "../libsoup/auth/soup-auth.h",
                            "@line": "47"
                        },
                        "return-value": {
                            "@transfer-ownership": "full",
                            "@nullable": "1",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../libsoup/auth/soup-auth.c",
                                "@line": "250",
                                "#text": "the new #SoupAuth, or %NULL if it could\n  not be created"
                            },
                            "type": {
                                "@name": "Auth",
                                "@c:type": "SoupAuth*"
                            }
                        },
                        "parameters": {
                            "parameter": [
                                {
                                    "@name": "type",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../libsoup/auth/soup-auth.c",
                                        "@line": "240",
                                        "#text": "the type of auth to create (a subtype of #SoupAuth)"
                                    },
                                    "type": {
                                        "@name": "GType",
                                        "@c:type": "GType"
                                    }
                                },
                                {
                                    "@name": "msg",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../libsoup/auth/soup-auth.c",
                                        "@line": "241",
                                        "#text": "the #SoupMessage the auth is being created for"
                                    },
                                    "type": {
                                        "@name": "Message",
                                        "@c:type": "SoupMessage*"
                                    }
                                },
                                {
                                    "@name": "auth_header",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../libsoup/auth/soup-auth.c",
                                        "@line": "242",
                                        "#text": "the WWW-Authenticate/Proxy-Authenticate header"
                                    },
                                    "type": {
                                        "@name": "utf8",
                                        "@c:type": "const char*"
                                    }
                                }
                            ]
                        }
                    },
                    "virtual-method": [
                        {
                            "@name": "authenticate",
                            "@invoker": "authenticate",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../libsoup/auth/soup-auth.c",
                                "@line": "351",
                                "#text": "Call this on an auth to authenticate it.\n\nNormally this will cause the auth's message to be requeued with the new\nauthentication info."
                            },
                            "source-position": {
                                "@filename": "../libsoup/auth/soup-auth.h",
                                "@line": "30"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "type": {
                                    "@name": "none",
                                    "@c:type": "void"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "auth",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../libsoup/auth/soup-auth.c",
                                        "@line": "353",
                                        "#text": "a #SoupAuth"
                                    },
                                    "type": {
                                        "@name": "Auth",
                                        "@c:type": "SoupAuth*"
                                    }
                                },
                                "parameter": [
                                    {
                                        "@name": "username",
                                        "@transfer-ownership": "none",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "../libsoup/auth/soup-auth.c",
                                            "@line": "354",
                                            "#text": "the username provided by the user or client"
                                        },
                                        "type": {
                                            "@name": "utf8",
                                            "@c:type": "const char*"
                                        }
                                    },
                                    {
                                        "@name": "password",
                                        "@transfer-ownership": "none",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "../libsoup/auth/soup-auth.c",
                                            "@line": "355",
                                            "#text": "the password provided by the user or client"
                                        },
                                        "type": {
                                            "@name": "utf8",
                                            "@c:type": "const char*"
                                        }
                                    }
                                ]
                            }
                        },
                        {
                            "@name": "can_authenticate",
                            "@invoker": "can_authenticate",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../libsoup/auth/soup-auth.c",
                                "@line": "607",
                                "#text": "Tests if @auth is able to authenticate by providing credentials to the\n[method@Auth.authenticate]."
                            },
                            "source-position": {
                                "@filename": "../libsoup/auth/soup-auth.h",
                                "@line": "41"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "../libsoup/auth/soup-auth.c",
                                    "@line": "614",
                                    "#text": "%TRUE if @auth is able to accept credentials."
                                },
                                "type": {
                                    "@name": "gboolean",
                                    "@c:type": "gboolean"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "auth",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../libsoup/auth/soup-auth.c",
                                        "@line": "609",
                                        "#text": "a #SoupAuth"
                                    },
                                    "type": {
                                        "@name": "Auth",
                                        "@c:type": "SoupAuth*"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "get_authorization",
                            "@invoker": "get_authorization",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../libsoup/auth/soup-auth.c",
                                "@line": "553",
                                "#text": "Generates an appropriate \"Authorization\" header for @msg.\n\n(The session will only call this if [method@Auth.is_authenticated] returned\n%TRUE.)"
                            },
                            "source-position": {
                                "@filename": "../libsoup/auth/soup-auth.h",
                                "@line": "35"
                            },
                            "return-value": {
                                "@transfer-ownership": "full",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "../libsoup/auth/soup-auth.c",
                                    "@line": "563",
                                    "#text": "the \"Authorization\" header, which must be freed."
                                },
                                "type": {
                                    "@name": "utf8",
                                    "@c:type": "char*"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "auth",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../libsoup/auth/soup-auth.c",
                                        "@line": "555",
                                        "#text": "a #SoupAuth"
                                    },
                                    "type": {
                                        "@name": "Auth",
                                        "@c:type": "SoupAuth*"
                                    }
                                },
                                "parameter": {
                                    "@name": "msg",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../libsoup/auth/soup-auth.c",
                                        "@line": "556",
                                        "#text": "the #SoupMessage to be authorized"
                                    },
                                    "type": {
                                        "@name": "Message",
                                        "@c:type": "SoupMessage*"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "get_protection_space",
                            "@invoker": "get_protection_space",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../libsoup/auth/soup-auth.c",
                                "@line": "631",
                                "#text": "Returns a list of paths on the server which @auth extends over.\n\n(All subdirectories of these paths are also assumed to be part\nof @auth's protection space, unless otherwise discovered not to\nbe.)"
                            },
                            "source-position": {
                                "@filename": "../libsoup/auth/soup-auth.h",
                                "@line": "27"
                            },
                            "return-value": {
                                "@transfer-ownership": "full",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "../libsoup/auth/soup-auth.c",
                                    "@line": "643",
                                    "#text": "the list of\n  paths, which can be freed with [method@Auth.free_protection_space]."
                                },
                                "type": {
                                    "@name": "GLib.SList",
                                    "@c:type": "GSList*",
                                    "type": {
                                        "@name": "utf8"
                                    }
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "auth",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../libsoup/auth/soup-auth.c",
                                        "@line": "633",
                                        "#text": "a #SoupAuth"
                                    },
                                    "type": {
                                        "@name": "Auth",
                                        "@c:type": "SoupAuth*"
                                    }
                                },
                                "parameter": {
                                    "@name": "source_uri",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../libsoup/auth/soup-auth.c",
                                        "@line": "634",
                                        "#text": "the URI of the request that @auth was generated in\n  response to."
                                    },
                                    "type": {
                                        "@name": "GLib.Uri",
                                        "@c:type": "GUri*"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "is_authenticated",
                            "@invoker": "is_authenticated",
                            "attribute": {
                                "@name": "org.gtk.Method.get_property",
                                "@value": "is-authenticated"
                            },
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../libsoup/auth/soup-auth.c",
                                "@line": "512",
                                "#text": "Tests if @auth has been given a username and password."
                            },
                            "source-position": {
                                "@filename": "../libsoup/auth/soup-auth.h",
                                "@line": "33"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "../libsoup/auth/soup-auth.c",
                                    "@line": "518",
                                    "#text": "%TRUE if @auth has been given a username and password"
                                },
                                "type": {
                                    "@name": "gboolean",
                                    "@c:type": "gboolean"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "auth",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../libsoup/auth/soup-auth.c",
                                        "@line": "514",
                                        "#text": "a #SoupAuth"
                                    },
                                    "type": {
                                        "@name": "Auth",
                                        "@c:type": "SoupAuth*"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "is_ready",
                            "@invoker": "is_ready",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../libsoup/auth/soup-auth.c",
                                "@line": "574",
                                "#text": "Tests if @auth is ready to make a request for @msg with.\n\nFor most auths, this is equivalent to [method@Auth.is_authenticated], but for\nsome auth types (eg, NTLM), the auth may be sendable (eg, as an\nauthentication request) even before it is authenticated."
                            },
                            "source-position": {
                                "@filename": "../libsoup/auth/soup-auth.h",
                                "@line": "38"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "../libsoup/auth/soup-auth.c",
                                    "@line": "585",
                                    "#text": "%TRUE if @auth is ready to make a request with."
                                },
                                "type": {
                                    "@name": "gboolean",
                                    "@c:type": "gboolean"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "auth",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../libsoup/auth/soup-auth.c",
                                        "@line": "576",
                                        "#text": "a #SoupAuth"
                                    },
                                    "type": {
                                        "@name": "Auth",
                                        "@c:type": "SoupAuth*"
                                    }
                                },
                                "parameter": {
                                    "@name": "msg",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../libsoup/auth/soup-auth.c",
                                        "@line": "577",
                                        "#text": "a #SoupMessage"
                                    },
                                    "type": {
                                        "@name": "Message",
                                        "@c:type": "SoupMessage*"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "update",
                            "@invoker": "update",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../libsoup/auth/soup-auth.c",
                                "@line": "299",
                                "#text": "Updates @auth with the information from @msg and @auth_header,\npossibly un-authenticating it.\n\nAs with [ctor@Auth.new], this is normally only used by [class@Session]."
                            },
                            "source-position": {
                                "@filename": "../libsoup/auth/soup-auth.h",
                                "@line": "23"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "../libsoup/auth/soup-auth.c",
                                    "@line": "310",
                                    "#text": "%TRUE if @auth is still a valid (but potentially\n  unauthenticated) #SoupAuth. %FALSE if something about @auth_params\n  could not be parsed or incorporated into @auth at all."
                                },
                                "type": {
                                    "@name": "gboolean",
                                    "@c:type": "gboolean"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "auth",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../libsoup/auth/soup-auth.c",
                                        "@line": "301",
                                        "#text": "a #SoupAuth"
                                    },
                                    "type": {
                                        "@name": "Auth",
                                        "@c:type": "SoupAuth*"
                                    }
                                },
                                "parameter": [
                                    {
                                        "@name": "msg",
                                        "@transfer-ownership": "none",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "../libsoup/auth/soup-auth.c",
                                            "@line": "302",
                                            "#text": "the #SoupMessage @auth is being updated for"
                                        },
                                        "type": {
                                            "@name": "Message",
                                            "@c:type": "SoupMessage*"
                                        }
                                    },
                                    {
                                        "@name": "auth_header",
                                        "@transfer-ownership": "none",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "../libsoup/auth/soup-auth.c",
                                            "@line": "303",
                                            "#text": "the WWW-Authenticate/Proxy-Authenticate header"
                                        },
                                        "type": {
                                            "@name": "GLib.HashTable",
                                            "@c:type": "GHashTable*",
                                            "type": [
                                                {
                                                    "@name": "gpointer",
                                                    "@c:type": "gpointer"
                                                },
                                                {
                                                    "@name": "gpointer",
                                                    "@c:type": "gpointer"
                                                }
                                            ]
                                        }
                                    }
                                ]
                            }
                        }
                    ],
                    "method": [
                        {
                            "@name": "authenticate",
                            "@c:identifier": "soup_auth_authenticate",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../libsoup/auth/soup-auth.c",
                                "@line": "351",
                                "#text": "Call this on an auth to authenticate it.\n\nNormally this will cause the auth's message to be requeued with the new\nauthentication info."
                            },
                            "source-position": {
                                "@filename": "../libsoup/auth/soup-auth.h",
                                "@line": "67"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "type": {
                                    "@name": "none",
                                    "@c:type": "void"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "auth",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../libsoup/auth/soup-auth.c",
                                        "@line": "353",
                                        "#text": "a #SoupAuth"
                                    },
                                    "type": {
                                        "@name": "Auth",
                                        "@c:type": "SoupAuth*"
                                    }
                                },
                                "parameter": [
                                    {
                                        "@name": "username",
                                        "@transfer-ownership": "none",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "../libsoup/auth/soup-auth.c",
                                            "@line": "354",
                                            "#text": "the username provided by the user or client"
                                        },
                                        "type": {
                                            "@name": "utf8",
                                            "@c:type": "const char*"
                                        }
                                    },
                                    {
                                        "@name": "password",
                                        "@transfer-ownership": "none",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "../libsoup/auth/soup-auth.c",
                                            "@line": "355",
                                            "#text": "the password provided by the user or client"
                                        },
                                        "type": {
                                            "@name": "utf8",
                                            "@c:type": "const char*"
                                        }
                                    }
                                ]
                            }
                        },
                        {
                            "@name": "can_authenticate",
                            "@c:identifier": "soup_auth_can_authenticate",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../libsoup/auth/soup-auth.c",
                                "@line": "607",
                                "#text": "Tests if @auth is able to authenticate by providing credentials to the\n[method@Auth.authenticate]."
                            },
                            "source-position": {
                                "@filename": "../libsoup/auth/soup-auth.h",
                                "@line": "84"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "../libsoup/auth/soup-auth.c",
                                    "@line": "614",
                                    "#text": "%TRUE if @auth is able to accept credentials."
                                },
                                "type": {
                                    "@name": "gboolean",
                                    "@c:type": "gboolean"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "auth",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../libsoup/auth/soup-auth.c",
                                        "@line": "609",
                                        "#text": "a #SoupAuth"
                                    },
                                    "type": {
                                        "@name": "Auth",
                                        "@c:type": "SoupAuth*"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "cancel",
                            "@c:identifier": "soup_auth_cancel",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../libsoup/auth/soup-auth.c",
                                "@line": "382",
                                "#text": "Call this on an auth to cancel it.\n\nYou need to cancel an auth to complete an asynchronous authenticate operation\nwhen no credentials are provided ([method@Auth.authenticate] is not called).\nThe #SoupAuth will be cancelled on dispose if it hans't been authenticated."
                            },
                            "source-position": {
                                "@filename": "../libsoup/auth/soup-auth.h",
                                "@line": "72"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "type": {
                                    "@name": "none",
                                    "@c:type": "void"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "auth",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../libsoup/auth/soup-auth.c",
                                        "@line": "384",
                                        "#text": "a #SoupAuth"
                                    },
                                    "type": {
                                        "@name": "Auth",
                                        "@c:type": "SoupAuth*"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "free_protection_space",
                            "@c:identifier": "soup_auth_free_protection_space",
                            "@introspectable": "0",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../libsoup/auth/soup-auth.c",
                                "@line": "658",
                                "#text": "Frees @space."
                            },
                            "source-position": {
                                "@filename": "../libsoup/auth/soup-auth.h",
                                "@line": "94"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "type": {
                                    "@name": "none",
                                    "@c:type": "void"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "auth",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../libsoup/auth/soup-auth.c",
                                        "@line": "660",
                                        "#text": "a #SoupAuth"
                                    },
                                    "type": {
                                        "@name": "Auth",
                                        "@c:type": "SoupAuth*"
                                    }
                                },
                                "parameter": {
                                    "@name": "space",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../libsoup/auth/soup-auth.c",
                                        "@line": "661",
                                        "#text": "the return value from [method@Auth.get_protection_space]"
                                    },
                                    "type": {
                                        "@name": "GLib.SList",
                                        "@c:type": "GSList*",
                                        "type": {
                                            "@name": "gpointer",
                                            "@c:type": "gpointer"
                                        }
                                    }
                                }
                            }
                        },
                        {
                            "@name": "get_authority",
                            "@c:identifier": "soup_auth_get_authority",
                            "@glib:get-property": "authority",
                            "attribute": {
                                "@name": "org.gtk.Method.get_property",
                                "@value": "authority"
                            },
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../libsoup/auth/soup-auth.c",
                                "@line": "443",
                                "#text": "Returns the authority (host:port) that @auth is associated with."
                            },
                            "source-position": {
                                "@filename": "../libsoup/auth/soup-auth.h",
                                "@line": "60"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "../libsoup/auth/soup-auth.c",
                                    "@line": "449",
                                    "#text": "the authority"
                                },
                                "type": {
                                    "@name": "utf8",
                                    "@c:type": "const char*"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "auth",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../libsoup/auth/soup-auth.c",
                                        "@line": "445",
                                        "#text": "a #SoupAuth"
                                    },
                                    "type": {
                                        "@name": "Auth",
                                        "@c:type": "SoupAuth*"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "get_authorization",
                            "@c:identifier": "soup_auth_get_authorization",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../libsoup/auth/soup-auth.c",
                                "@line": "553",
                                "#text": "Generates an appropriate \"Authorization\" header for @msg.\n\n(The session will only call this if [method@Auth.is_authenticated] returned\n%TRUE.)"
                            },
                            "source-position": {
                                "@filename": "../libsoup/auth/soup-auth.h",
                                "@line": "87"
                            },
                            "return-value": {
                                "@transfer-ownership": "full",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "../libsoup/auth/soup-auth.c",
                                    "@line": "563",
                                    "#text": "the \"Authorization\" header, which must be freed."
                                },
                                "type": {
                                    "@name": "utf8",
                                    "@c:type": "char*"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "auth",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../libsoup/auth/soup-auth.c",
                                        "@line": "555",
                                        "#text": "a #SoupAuth"
                                    },
                                    "type": {
                                        "@name": "Auth",
                                        "@c:type": "SoupAuth*"
                                    }
                                },
                                "parameter": {
                                    "@name": "msg",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../libsoup/auth/soup-auth.c",
                                        "@line": "556",
                                        "#text": "the #SoupMessage to be authorized"
                                    },
                                    "type": {
                                        "@name": "Message",
                                        "@c:type": "SoupMessage*"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "get_info",
                            "@c:identifier": "soup_auth_get_info",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../libsoup/auth/soup-auth.c",
                                "@line": "483",
                                "#text": "Gets an opaque identifier for @auth.\n\nThe identifier can be used as a hash key or the like. #SoupAuth objects from\nthe same server with the same identifier refer to the same authentication\ndomain (eg, the URLs associated with them take the same usernames and\npasswords)."
                            },
                            "source-position": {
                                "@filename": "../libsoup/auth/soup-auth.h",
                                "@line": "64"
                            },
                            "return-value": {
                                "@transfer-ownership": "full",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "../libsoup/auth/soup-auth.c",
                                    "@line": "494",
                                    "#text": "the identifier"
                                },
                                "type": {
                                    "@name": "utf8",
                                    "@c:type": "char*"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "auth",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../libsoup/auth/soup-auth.c",
                                        "@line": "485",
                                        "#text": "a #SoupAuth"
                                    },
                                    "type": {
                                        "@name": "Auth",
                                        "@c:type": "SoupAuth*"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "get_protection_space",
                            "@c:identifier": "soup_auth_get_protection_space",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../libsoup/auth/soup-auth.c",
                                "@line": "631",
                                "#text": "Returns a list of paths on the server which @auth extends over.\n\n(All subdirectories of these paths are also assumed to be part\nof @auth's protection space, unless otherwise discovered not to\nbe.)"
                            },
                            "source-position": {
                                "@filename": "../libsoup/auth/soup-auth.h",
                                "@line": "91"
                            },
                            "return-value": {
                                "@transfer-ownership": "full",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "../libsoup/auth/soup-auth.c",
                                    "@line": "643",
                                    "#text": "the list of\n  paths, which can be freed with [method@Auth.free_protection_space]."
                                },
                                "type": {
                                    "@name": "GLib.SList",
                                    "@c:type": "GSList*",
                                    "type": {
                                        "@name": "utf8"
                                    }
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "auth",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../libsoup/auth/soup-auth.c",
                                        "@line": "633",
                                        "#text": "a #SoupAuth"
                                    },
                                    "type": {
                                        "@name": "Auth",
                                        "@c:type": "SoupAuth*"
                                    }
                                },
                                "parameter": {
                                    "@name": "source_uri",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../libsoup/auth/soup-auth.c",
                                        "@line": "634",
                                        "#text": "the URI of the request that @auth was generated in\n  response to."
                                    },
                                    "type": {
                                        "@name": "GLib.Uri",
                                        "@c:type": "GUri*"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "get_realm",
                            "@c:identifier": "soup_auth_get_realm",
                            "@glib:get-property": "realm",
                            "attribute": {
                                "@name": "org.gtk.Method.get_property",
                                "@value": "realm"
                            },
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../libsoup/auth/soup-auth.c",
                                "@line": "461",
                                "#text": "Returns @auth's realm.\n\nThis is an identifier that distinguishes separate authentication spaces on a\ngiven server, and may be some string that is meaningful to the user.\n(Although it is probably not localized.)"
                            },
                            "source-position": {
                                "@filename": "../libsoup/auth/soup-auth.h",
                                "@line": "62"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "../libsoup/auth/soup-auth.c",
                                    "@line": "471",
                                    "#text": "the realm name"
                                },
                                "type": {
                                    "@name": "utf8",
                                    "@c:type": "const char*"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "auth",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../libsoup/auth/soup-auth.c",
                                        "@line": "463",
                                        "#text": "a #SoupAuth"
                                    },
                                    "type": {
                                        "@name": "Auth",
                                        "@c:type": "SoupAuth*"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "get_scheme_name",
                            "@c:identifier": "soup_auth_get_scheme_name",
                            "@glib:get-property": "scheme-name",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../libsoup/auth/soup-auth.c",
                                "@line": "426",
                                "#text": "soup_auth_get_scheme_name: (attributes org.gtk.Method.get_property=scheme-name)\nReturns @auth's scheme name. (Eg, \"Basic\", \"Digest\", or \"NTLM\")"
                            },
                            "source-position": {
                                "@filename": "../libsoup/auth/soup-auth.h",
                                "@line": "58"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "../libsoup/auth/soup-auth.c",
                                    "@line": "433",
                                    "#text": "the scheme name"
                                },
                                "type": {
                                    "@name": "utf8",
                                    "@c:type": "const char*"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "auth",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../libsoup/auth/soup-auth.c",
                                        "@line": "429",
                                        "#text": "a #SoupAuth"
                                    },
                                    "type": {
                                        "@name": "Auth",
                                        "@c:type": "SoupAuth*"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "is_authenticated",
                            "@c:identifier": "soup_auth_is_authenticated",
                            "@glib:get-property": "is-authenticated",
                            "attribute": {
                                "@name": "org.gtk.Method.get_property",
                                "@value": "is-authenticated"
                            },
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../libsoup/auth/soup-auth.c",
                                "@line": "512",
                                "#text": "Tests if @auth has been given a username and password."
                            },
                            "source-position": {
                                "@filename": "../libsoup/auth/soup-auth.h",
                                "@line": "75"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "../libsoup/auth/soup-auth.c",
                                    "@line": "518",
                                    "#text": "%TRUE if @auth has been given a username and password"
                                },
                                "type": {
                                    "@name": "gboolean",
                                    "@c:type": "gboolean"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "auth",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../libsoup/auth/soup-auth.c",
                                        "@line": "514",
                                        "#text": "a #SoupAuth"
                                    },
                                    "type": {
                                        "@name": "Auth",
                                        "@c:type": "SoupAuth*"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "is_cancelled",
                            "@c:identifier": "soup_auth_is_cancelled",
                            "@glib:get-property": "is-cancelled",
                            "attribute": {
                                "@name": "org.gtk.Method.get_property",
                                "@value": "is-cancelled"
                            },
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../libsoup/auth/soup-auth.c",
                                "@line": "534",
                                "#text": "Tests if @auth has been cancelled"
                            },
                            "source-position": {
                                "@filename": "../libsoup/auth/soup-auth.h",
                                "@line": "78"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "../libsoup/auth/soup-auth.c",
                                    "@line": "540",
                                    "#text": "%TRUE if @auth has been cancelled"
                                },
                                "type": {
                                    "@name": "gboolean",
                                    "@c:type": "gboolean"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "auth",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../libsoup/auth/soup-auth.c",
                                        "@line": "536",
                                        "#text": "a #SoupAuth"
                                    },
                                    "type": {
                                        "@name": "Auth",
                                        "@c:type": "SoupAuth*"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "is_for_proxy",
                            "@c:identifier": "soup_auth_is_for_proxy",
                            "attribute": {
                                "@name": "org.gtk.Method.get_property",
                                "@value": "is-for-proxy"
                            },
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../libsoup/auth/soup-auth.c",
                                "@line": "407",
                                "#text": "Tests whether or not @auth is associated with a proxy server rather\nthan an \"origin\" server."
                            },
                            "source-position": {
                                "@filename": "../libsoup/auth/soup-auth.h",
                                "@line": "56"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "../libsoup/auth/soup-auth.c",
                                    "@line": "414",
                                    "#text": "%TRUE or %FALSE"
                                },
                                "type": {
                                    "@name": "gboolean",
                                    "@c:type": "gboolean"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "auth",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../libsoup/auth/soup-auth.c",
                                        "@line": "409",
                                        "#text": "a #SoupAuth"
                                    },
                                    "type": {
                                        "@name": "Auth",
                                        "@c:type": "SoupAuth*"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "is_ready",
                            "@c:identifier": "soup_auth_is_ready",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../libsoup/auth/soup-auth.c",
                                "@line": "574",
                                "#text": "Tests if @auth is ready to make a request for @msg with.\n\nFor most auths, this is equivalent to [method@Auth.is_authenticated], but for\nsome auth types (eg, NTLM), the auth may be sendable (eg, as an\nauthentication request) even before it is authenticated."
                            },
                            "source-position": {
                                "@filename": "../libsoup/auth/soup-auth.h",
                                "@line": "81"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "../libsoup/auth/soup-auth.c",
                                    "@line": "585",
                                    "#text": "%TRUE if @auth is ready to make a request with."
                                },
                                "type": {
                                    "@name": "gboolean",
                                    "@c:type": "gboolean"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "auth",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../libsoup/auth/soup-auth.c",
                                        "@line": "576",
                                        "#text": "a #SoupAuth"
                                    },
                                    "type": {
                                        "@name": "Auth",
                                        "@c:type": "SoupAuth*"
                                    }
                                },
                                "parameter": {
                                    "@name": "msg",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../libsoup/auth/soup-auth.c",
                                        "@line": "577",
                                        "#text": "a #SoupMessage"
                                    },
                                    "type": {
                                        "@name": "Message",
                                        "@c:type": "SoupMessage*"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "update",
                            "@c:identifier": "soup_auth_update",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../libsoup/auth/soup-auth.c",
                                "@line": "299",
                                "#text": "Updates @auth with the information from @msg and @auth_header,\npossibly un-authenticating it.\n\nAs with [ctor@Auth.new], this is normally only used by [class@Session]."
                            },
                            "source-position": {
                                "@filename": "../libsoup/auth/soup-auth.h",
                                "@line": "51"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "../libsoup/auth/soup-auth.c",
                                    "@line": "310",
                                    "#text": "%TRUE if @auth is still a valid (but potentially\n  unauthenticated) #SoupAuth. %FALSE if something about @auth_params\n  could not be parsed or incorporated into @auth at all."
                                },
                                "type": {
                                    "@name": "gboolean",
                                    "@c:type": "gboolean"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "auth",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../libsoup/auth/soup-auth.c",
                                        "@line": "301",
                                        "#text": "a #SoupAuth"
                                    },
                                    "type": {
                                        "@name": "Auth",
                                        "@c:type": "SoupAuth*"
                                    }
                                },
                                "parameter": [
                                    {
                                        "@name": "msg",
                                        "@transfer-ownership": "none",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "../libsoup/auth/soup-auth.c",
                                            "@line": "302",
                                            "#text": "the #SoupMessage @auth is being updated for"
                                        },
                                        "type": {
                                            "@name": "Message",
                                            "@c:type": "SoupMessage*"
                                        }
                                    },
                                    {
                                        "@name": "auth_header",
                                        "@transfer-ownership": "none",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "../libsoup/auth/soup-auth.c",
                                            "@line": "303",
                                            "#text": "the WWW-Authenticate/Proxy-Authenticate header"
                                        },
                                        "type": {
                                            "@name": "utf8",
                                            "@c:type": "const char*"
                                        }
                                    }
                                ]
                            }
                        }
                    ],
                    "property": [
                        {
                            "@name": "authority",
                            "@writable": "1",
                            "@transfer-ownership": "none",
                            "@getter": "get_authority",
                            "attribute": {
                                "@name": "org.gtk.Property.get",
                                "@value": "soup_auth_get_authority"
                            },
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../libsoup/auth/soup-auth.c",
                                "@line": "186",
                                "#text": "The authority (host:port) being authenticated to."
                            },
                            "type": {
                                "@name": "utf8",
                                "@c:type": "gchar*"
                            }
                        },
                        {
                            "@name": "is-authenticated",
                            "@transfer-ownership": "none",
                            "@getter": "is_authenticated",
                            "attribute": {
                                "@name": "org.gtk.Property.get",
                                "@value": "soup_auth_is_authenticated"
                            },
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../libsoup/auth/soup-auth.c",
                                "@line": "210",
                                "#text": "Whether or not the auth has been authenticated."
                            },
                            "type": {
                                "@name": "gboolean",
                                "@c:type": "gboolean"
                            }
                        },
                        {
                            "@name": "is-cancelled",
                            "@transfer-ownership": "none",
                            "@getter": "is_cancelled",
                            "attribute": {
                                "@name": "org.gtk.Property.get",
                                "@value": "soup_auth_is_cancelled"
                            },
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../libsoup/auth/soup-auth.c",
                                "@line": "222",
                                "#text": "Whether or not the auth has been cancelled."
                            },
                            "type": {
                                "@name": "gboolean",
                                "@c:type": "gboolean"
                            }
                        },
                        {
                            "@name": "is-for-proxy",
                            "@writable": "1",
                            "@transfer-ownership": "none",
                            "attribute": {
                                "@name": "org.gtk.Property.get",
                                "@value": "soup_auth_is_for_proxy"
                            },
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../libsoup/auth/soup-auth.c",
                                "@line": "198",
                                "#text": "Whether or not the auth is for a proxy server."
                            },
                            "type": {
                                "@name": "gboolean",
                                "@c:type": "gboolean"
                            }
                        },
                        {
                            "@name": "realm",
                            "@writable": "1",
                            "@transfer-ownership": "none",
                            "@getter": "get_realm",
                            "attribute": {
                                "@name": "org.gtk.Property.get",
                                "@value": "soup_auth_get_realm"
                            },
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../libsoup/auth/soup-auth.c",
                                "@line": "174",
                                "#text": "The authentication realm."
                            },
                            "type": {
                                "@name": "utf8",
                                "@c:type": "gchar*"
                            }
                        },
                        {
                            "@name": "scheme-name",
                            "@transfer-ownership": "none",
                            "@getter": "get_scheme_name",
                            "attribute": {
                                "@name": "org.gtk.Property.get",
                                "@value": "soup_auth_get_scheme_name"
                            },
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../libsoup/auth/soup-auth.c",
                                "@line": "162",
                                "#text": "The authentication scheme name."
                            },
                            "type": {
                                "@name": "utf8",
                                "@c:type": "gchar*"
                            }
                        }
                    ],
                    "field": {
                        "@name": "parent_instance",
                        "type": {
                            "@name": "GObject.Object",
                            "@c:type": "GObject"
                        }
                    }
                },
                {
                    "@name": "AuthBasic",
                    "@c:symbol-prefix": "auth_basic",
                    "@parent": "Auth",
                    "@final": "1",
                    "@glib:type-name": "SoupAuthBasic",
                    "@glib:get-type": "soup_auth_basic_get_type",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "../libsoup/auth/soup-auth-basic.c",
                        "@line": "25",
                        "#text": "HTTP \"Basic\" authentication.\n\n[class@Session]s support this by default; if you want to disable\nsupport for it, call [method@Session.remove_feature_by_type],\npassing %SOUP_TYPE_AUTH_BASIC."
                    }
                },
                {
                    "@name": "AuthDigest",
                    "@c:symbol-prefix": "auth_digest",
                    "@parent": "Auth",
                    "@final": "1",
                    "@glib:type-name": "SoupAuthDigest",
                    "@glib:get-type": "soup_auth_digest_get_type",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "../libsoup/auth/soup-auth-digest.c",
                        "@line": "48",
                        "#text": "HTTP \"Digest\" authentication.\n\n[class@Session]s support this by default; if you want to disable\nsupport for it, call [method@Session.remove_feature_by_type]\npassing %SOUP_TYPE_AUTH_DIGEST."
                    }
                },
                {
                    "@name": "AuthDomain",
                    "@c:symbol-prefix": "auth_domain",
                    "@c:type": "SoupAuthDomain",
                    "@parent": "GObject.Object",
                    "@abstract": "1",
                    "@glib:type-name": "SoupAuthDomain",
                    "@glib:get-type": "soup_auth_domain_get_type",
                    "@glib:type-struct": "AuthDomainClass",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "../libsoup/server/soup-auth-domain.c",
                        "@line": "19",
                        "#text": "Server-side authentication.\n\nA #SoupAuthDomain manages authentication for all or part of a\n[class@Server]. To make a server require authentication, first create\nan appropriate subclass of #SoupAuthDomain, and then add it to the\nserver with [method@Server.add_auth_domain].\n\nIn order for an auth domain to have any effect, you must add one or more\npaths to it (via [method@AuthDomain.add_path]). To require authentication for\nall ordinary requests, add the path `\"/\"`. (Note that this does not include\nthe special `\"*\"` URI (eg, \"OPTIONS *\"), which must be added as a separate\npath if you want to cover it.)\n\nIf you need greater control over which requests should and shouldn't be\nauthenticated, add paths covering everything you *might* want authenticated,\nand then use a filter ([method@AuthDomain.set_filter] to bypass\nauthentication for those requests that don't need it."
                    },
                    "source-position": {
                        "@filename": "../libsoup/server/soup-auth-domain.h",
                        "@line": "29"
                    },
                    "virtual-method": [
                        {
                            "@name": "accepts",
                            "source-position": {
                                "@filename": "../libsoup/server/soup-auth-domain.h",
                                "@line": "19"
                            },
                            "return-value": {
                                "@transfer-ownership": "full",
                                "type": {
                                    "@name": "utf8",
                                    "@c:type": "char*"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "domain",
                                    "@transfer-ownership": "none",
                                    "type": {
                                        "@name": "AuthDomain",
                                        "@c:type": "SoupAuthDomain*"
                                    }
                                },
                                "parameter": [
                                    {
                                        "@name": "msg",
                                        "@transfer-ownership": "none",
                                        "type": {
                                            "@name": "ServerMessage",
                                            "@c:type": "SoupServerMessage*"
                                        }
                                    },
                                    {
                                        "@name": "header",
                                        "@transfer-ownership": "none",
                                        "type": {
                                            "@name": "utf8",
                                            "@c:type": "const char*"
                                        }
                                    }
                                ]
                            }
                        },
                        {
                            "@name": "challenge",
                            "@invoker": "challenge",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../libsoup/server/soup-auth-domain.c",
                                "@line": "556",
                                "#text": "Adds a \"WWW-Authenticate\" or \"Proxy-Authenticate\" header to @msg.\n\nIt requests that the client authenticate, and sets @msg's status accordingly.\n\nThis is used by [class@Server] internally and is probably of no use to\nanyone else."
                            },
                            "source-position": {
                                "@filename": "../libsoup/server/soup-auth-domain.h",
                                "@line": "22"
                            },
                            "return-value": {
                                "@transfer-ownership": "full",
                                "type": {
                                    "@name": "utf8",
                                    "@c:type": "char*"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "domain",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../libsoup/server/soup-auth-domain.c",
                                        "@line": "558",
                                        "#text": "a #SoupAuthDomain"
                                    },
                                    "type": {
                                        "@name": "AuthDomain",
                                        "@c:type": "SoupAuthDomain*"
                                    }
                                },
                                "parameter": {
                                    "@name": "msg",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../libsoup/server/soup-auth-domain.c",
                                        "@line": "559",
                                        "#text": "a #SoupServerMessage"
                                    },
                                    "type": {
                                        "@name": "ServerMessage",
                                        "@c:type": "SoupServerMessage*"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "check_password",
                            "@invoker": "check_password",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../libsoup/server/soup-auth-domain.c",
                                "@line": "462",
                                "#text": "Checks if @msg authenticates to @domain via @username and\n@password.\n\nThis would normally be called from a\n[callback@AuthDomainGenericAuthCallback]."
                            },
                            "source-position": {
                                "@filename": "../libsoup/server/soup-auth-domain.h",
                                "@line": "24"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "../libsoup/server/soup-auth-domain.c",
                                    "@line": "475",
                                    "#text": "whether or not the message is authenticated"
                                },
                                "type": {
                                    "@name": "gboolean",
                                    "@c:type": "gboolean"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "domain",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../libsoup/server/soup-auth-domain.c",
                                        "@line": "464",
                                        "#text": "a #SoupAuthDomain"
                                    },
                                    "type": {
                                        "@name": "AuthDomain",
                                        "@c:type": "SoupAuthDomain*"
                                    }
                                },
                                "parameter": [
                                    {
                                        "@name": "msg",
                                        "@transfer-ownership": "none",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "../libsoup/server/soup-auth-domain.c",
                                            "@line": "465",
                                            "#text": "a #SoupServerMessage"
                                        },
                                        "type": {
                                            "@name": "ServerMessage",
                                            "@c:type": "SoupServerMessage*"
                                        }
                                    },
                                    {
                                        "@name": "username",
                                        "@transfer-ownership": "none",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "../libsoup/server/soup-auth-domain.c",
                                            "@line": "466",
                                            "#text": "a username"
                                        },
                                        "type": {
                                            "@name": "utf8",
                                            "@c:type": "const char*"
                                        }
                                    },
                                    {
                                        "@name": "password",
                                        "@transfer-ownership": "none",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "../libsoup/server/soup-auth-domain.c",
                                            "@line": "467",
                                            "#text": "a password"
                                        },
                                        "type": {
                                            "@name": "utf8",
                                            "@c:type": "const char*"
                                        }
                                    }
                                ]
                            }
                        }
                    ],
                    "method": [
                        {
                            "@name": "accepts",
                            "@c:identifier": "soup_auth_domain_accepts",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../libsoup/server/soup-auth-domain.c",
                                "@line": "523",
                                "#text": "Checks if @msg contains appropriate authorization for @domain to\naccept it.\n\nMirroring [method@AuthDomain.covers], this does not check whether or not\n@domain *cares* if @msg is authorized.\n\nThis is used by [class@Server] internally and is probably of no use to\nanyone else."
                            },
                            "source-position": {
                                "@filename": "../libsoup/server/soup-auth-domain.h",
                                "@line": "71"
                            },
                            "return-value": {
                                "@transfer-ownership": "full",
                                "@nullable": "1",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "../libsoup/server/soup-auth-domain.c",
                                    "@line": "537",
                                    "#text": "the username that @msg has authenticated\n  as, if in fact it has authenticated. %NULL otherwise."
                                },
                                "type": {
                                    "@name": "utf8",
                                    "@c:type": "char*"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "domain",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../libsoup/server/soup-auth-domain.c",
                                        "@line": "525",
                                        "#text": "a #SoupAuthDomain"
                                    },
                                    "type": {
                                        "@name": "AuthDomain",
                                        "@c:type": "SoupAuthDomain*"
                                    }
                                },
                                "parameter": {
                                    "@name": "msg",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../libsoup/server/soup-auth-domain.c",
                                        "@line": "526",
                                        "#text": "a #SoupServerMessage"
                                    },
                                    "type": {
                                        "@name": "ServerMessage",
                                        "@c:type": "SoupServerMessage*"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "add_path",
                            "@c:identifier": "soup_auth_domain_add_path",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../libsoup/server/soup-auth-domain.c",
                                "@line": "252",
                                "#text": "Adds @path to @domain.\n\nRequests under @path on @domain's server will require authentication (unless\noverridden by [method@AuthDomain.remove_path] or\n[method@AuthDomain.set_filter])."
                            },
                            "source-position": {
                                "@filename": "../libsoup/server/soup-auth-domain.h",
                                "@line": "41"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "type": {
                                    "@name": "none",
                                    "@c:type": "void"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "domain",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../libsoup/server/soup-auth-domain.c",
                                        "@line": "254",
                                        "#text": "a #SoupAuthDomain"
                                    },
                                    "type": {
                                        "@name": "AuthDomain",
                                        "@c:type": "SoupAuthDomain*"
                                    }
                                },
                                "parameter": {
                                    "@name": "path",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../libsoup/server/soup-auth-domain.c",
                                        "@line": "255",
                                        "#text": "the path to add to @domain"
                                    },
                                    "type": {
                                        "@name": "utf8",
                                        "@c:type": "const char*"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "challenge",
                            "@c:identifier": "soup_auth_domain_challenge",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../libsoup/server/soup-auth-domain.c",
                                "@line": "556",
                                "#text": "Adds a \"WWW-Authenticate\" or \"Proxy-Authenticate\" header to @msg.\n\nIt requests that the client authenticate, and sets @msg's status accordingly.\n\nThis is used by [class@Server] internally and is probably of no use to\nanyone else."
                            },
                            "source-position": {
                                "@filename": "../libsoup/server/soup-auth-domain.h",
                                "@line": "74"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "type": {
                                    "@name": "none",
                                    "@c:type": "void"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "domain",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../libsoup/server/soup-auth-domain.c",
                                        "@line": "558",
                                        "#text": "a #SoupAuthDomain"
                                    },
                                    "type": {
                                        "@name": "AuthDomain",
                                        "@c:type": "SoupAuthDomain*"
                                    }
                                },
                                "parameter": {
                                    "@name": "msg",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../libsoup/server/soup-auth-domain.c",
                                        "@line": "559",
                                        "#text": "a #SoupServerMessage"
                                    },
                                    "type": {
                                        "@name": "ServerMessage",
                                        "@c:type": "SoupServerMessage*"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "check_password",
                            "@c:identifier": "soup_auth_domain_check_password",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../libsoup/server/soup-auth-domain.c",
                                "@line": "462",
                                "#text": "Checks if @msg authenticates to @domain via @username and\n@password.\n\nThis would normally be called from a\n[callback@AuthDomainGenericAuthCallback]."
                            },
                            "source-position": {
                                "@filename": "../libsoup/server/soup-auth-domain.h",
                                "@line": "62"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "../libsoup/server/soup-auth-domain.c",
                                    "@line": "475",
                                    "#text": "whether or not the message is authenticated"
                                },
                                "type": {
                                    "@name": "gboolean",
                                    "@c:type": "gboolean"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "domain",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../libsoup/server/soup-auth-domain.c",
                                        "@line": "464",
                                        "#text": "a #SoupAuthDomain"
                                    },
                                    "type": {
                                        "@name": "AuthDomain",
                                        "@c:type": "SoupAuthDomain*"
                                    }
                                },
                                "parameter": [
                                    {
                                        "@name": "msg",
                                        "@transfer-ownership": "none",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "../libsoup/server/soup-auth-domain.c",
                                            "@line": "465",
                                            "#text": "a #SoupServerMessage"
                                        },
                                        "type": {
                                            "@name": "ServerMessage",
                                            "@c:type": "SoupServerMessage*"
                                        }
                                    },
                                    {
                                        "@name": "username",
                                        "@transfer-ownership": "none",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "../libsoup/server/soup-auth-domain.c",
                                            "@line": "466",
                                            "#text": "a username"
                                        },
                                        "type": {
                                            "@name": "utf8",
                                            "@c:type": "const char*"
                                        }
                                    },
                                    {
                                        "@name": "password",
                                        "@transfer-ownership": "none",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "../libsoup/server/soup-auth-domain.c",
                                            "@line": "467",
                                            "#text": "a password"
                                        },
                                        "type": {
                                            "@name": "utf8",
                                            "@c:type": "const char*"
                                        }
                                    }
                                ]
                            }
                        },
                        {
                            "@name": "covers",
                            "@c:identifier": "soup_auth_domain_covers",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../libsoup/server/soup-auth-domain.c",
                                "@line": "488",
                                "#text": "Checks if @domain requires @msg to be authenticated (according to\nits paths and filter function).\n\nThis does not actually look at whether @msg *is* authenticated, merely\nwhether or not it needs to be.\n\nThis is used by [class@Server] internally and is probably of no use to\nanyone else."
                            },
                            "source-position": {
                                "@filename": "../libsoup/server/soup-auth-domain.h",
                                "@line": "68"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "../libsoup/server/soup-auth-domain.c",
                                    "@line": "502",
                                    "#text": "%TRUE if @domain requires @msg to be authenticated"
                                },
                                "type": {
                                    "@name": "gboolean",
                                    "@c:type": "gboolean"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "domain",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../libsoup/server/soup-auth-domain.c",
                                        "@line": "490",
                                        "#text": "a #SoupAuthDomain"
                                    },
                                    "type": {
                                        "@name": "AuthDomain",
                                        "@c:type": "SoupAuthDomain*"
                                    }
                                },
                                "parameter": {
                                    "@name": "msg",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../libsoup/server/soup-auth-domain.c",
                                        "@line": "491",
                                        "#text": "a #SoupServerMessage"
                                    },
                                    "type": {
                                        "@name": "ServerMessage",
                                        "@c:type": "SoupServerMessage*"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "get_realm",
                            "@c:identifier": "soup_auth_domain_get_realm",
                            "@glib:get-property": "realm",
                            "attribute": {
                                "@name": "org.gtk.Method.get_property",
                                "@value": "realm"
                            },
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../libsoup/server/soup-auth-domain.c",
                                "@line": "371",
                                "#text": "Gets the realm name associated with @domain."
                            },
                            "source-position": {
                                "@filename": "../libsoup/server/soup-auth-domain.h",
                                "@line": "54"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "../libsoup/server/soup-auth-domain.c",
                                    "@line": "377",
                                    "#text": "@domain's realm"
                                },
                                "type": {
                                    "@name": "utf8",
                                    "@c:type": "const char*"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "domain",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../libsoup/server/soup-auth-domain.c",
                                        "@line": "373",
                                        "#text": "a #SoupAuthDomain"
                                    },
                                    "type": {
                                        "@name": "AuthDomain",
                                        "@c:type": "SoupAuthDomain*"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "remove_path",
                            "@c:identifier": "soup_auth_domain_remove_path",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../libsoup/server/soup-auth-domain.c",
                                "@line": "275",
                                "#text": "Removes @path from @domain.\n\nRequests under @path on @domain's server will NOT require\nauthentication.\n\nThis is not simply an undo-er for [method@AuthDomain.add_path]; it\ncan be used to \"carve out\" a subtree that does not require\nauthentication inside a hierarchy that does. Note also that unlike\nwith [method@AuthDomain.add_path], this cannot be overridden by\nadding a filter, as filters can only bypass authentication that\nwould otherwise be required, not require it where it would\notherwise be unnecessary."
                            },
                            "source-position": {
                                "@filename": "../libsoup/server/soup-auth-domain.h",
                                "@line": "44"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "type": {
                                    "@name": "none",
                                    "@c:type": "void"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "domain",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../libsoup/server/soup-auth-domain.c",
                                        "@line": "277",
                                        "#text": "a #SoupAuthDomain"
                                    },
                                    "type": {
                                        "@name": "AuthDomain",
                                        "@c:type": "SoupAuthDomain*"
                                    }
                                },
                                "parameter": {
                                    "@name": "path",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../libsoup/server/soup-auth-domain.c",
                                        "@line": "278",
                                        "#text": "the path to remove from @domain"
                                    },
                                    "type": {
                                        "@name": "utf8",
                                        "@c:type": "const char*"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "set_filter",
                            "@c:identifier": "soup_auth_domain_set_filter",
                            "@glib:set-property": "filter",
                            "attribute": {
                                "@name": "org.gtk.Method.set_property",
                                "@value": "filter"
                            },
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../libsoup/server/soup-auth-domain.c",
                                "@line": "318",
                                "#text": "Adds @filter as an authentication filter to @domain.\n\nThe filter gets a chance to bypass authentication for certain requests that\nwould otherwise require it. Eg, it might check the message's path in some way\nthat is too complicated to do via the other methods, or it might check the\nmessage's method, and allow GETs but not PUTs.\n\nThe filter function returns %TRUE if the request should still\nrequire authentication, or %FALSE if authentication is unnecessary\nfor this request.\n\nTo help prevent security holes, your filter should return %TRUE by\ndefault, and only return %FALSE under specifically-tested\ncircumstances, rather than the other way around. Eg, in the example\nabove, where you want to authenticate PUTs but not GETs, you should\ncheck if the method is GET and return %FALSE in that case, and then\nreturn %TRUE for all other methods (rather than returning %TRUE for\nPUT and %FALSE for all other methods). This way if it turned out\n(now or later) that some paths supported additional methods besides\nGET and PUT, those methods would default to being NOT allowed for\nunauthenticated users.\n\nYou can also set the filter by setting the SoupAuthDomain:filter\nand [property@AuthDomain:filter-data properties], which can also be\nused to set the filter at construct time."
                            },
                            "source-position": {
                                "@filename": "../libsoup/server/soup-auth-domain.h",
                                "@line": "48"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "type": {
                                    "@name": "none",
                                    "@c:type": "void"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "domain",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../libsoup/server/soup-auth-domain.c",
                                        "@line": "320",
                                        "#text": "a #SoupAuthDomain"
                                    },
                                    "type": {
                                        "@name": "AuthDomain",
                                        "@c:type": "SoupAuthDomain*"
                                    }
                                },
                                "parameter": [
                                    {
                                        "@name": "filter",
                                        "@transfer-ownership": "none",
                                        "@scope": "notified",
                                        "@closure": "1",
                                        "@destroy": "2",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "../libsoup/server/soup-auth-domain.c",
                                            "@line": "321",
                                            "#text": "the auth filter for @domain"
                                        },
                                        "type": {
                                            "@name": "AuthDomainFilter",
                                            "@c:type": "SoupAuthDomainFilter"
                                        }
                                    },
                                    {
                                        "@name": "filter_data",
                                        "@transfer-ownership": "none",
                                        "@nullable": "1",
                                        "@allow-none": "1",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "../libsoup/server/soup-auth-domain.c",
                                            "@line": "322",
                                            "#text": "data to pass to @filter"
                                        },
                                        "type": {
                                            "@name": "gpointer",
                                            "@c:type": "gpointer"
                                        }
                                    },
                                    {
                                        "@name": "dnotify",
                                        "@transfer-ownership": "none",
                                        "@scope": "async",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "../libsoup/server/soup-auth-domain.c",
                                            "@line": "323",
                                            "#text": "destroy notifier to free @filter_data when @domain\n  is destroyed"
                                        },
                                        "type": {
                                            "@name": "GLib.DestroyNotify",
                                            "@c:type": "GDestroyNotify"
                                        }
                                    }
                                ]
                            }
                        },
                        {
                            "@name": "set_generic_auth_callback",
                            "@c:identifier": "soup_auth_domain_set_generic_auth_callback",
                            "@glib:set-property": "generic-auth-callback",
                            "attribute": {
                                "@name": "org.gtk.Method.get_property",
                                "@value": "generic-auth-callback"
                            },
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../libsoup/server/soup-auth-domain.c",
                                "@line": "414",
                                "#text": "Sets @auth_callback as an authentication-handling callback for @domain.\n\nWhenever a request comes in to @domain which cannot be authenticated via a\ndomain-specific auth callback (eg, [callback@AuthDomainDigestAuthCallback]),\nthe generic auth callback will be invoked. See\n[callback@AuthDomainGenericAuthCallback] for information on what the callback\nshould do."
                            },
                            "source-position": {
                                "@filename": "../libsoup/server/soup-auth-domain.h",
                                "@line": "57"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "type": {
                                    "@name": "none",
                                    "@c:type": "void"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "domain",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../libsoup/server/soup-auth-domain.c",
                                        "@line": "416",
                                        "#text": "a #SoupAuthDomain"
                                    },
                                    "type": {
                                        "@name": "AuthDomain",
                                        "@c:type": "SoupAuthDomain*"
                                    }
                                },
                                "parameter": [
                                    {
                                        "@name": "auth_callback",
                                        "@transfer-ownership": "none",
                                        "@scope": "notified",
                                        "@closure": "1",
                                        "@destroy": "2",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "../libsoup/server/soup-auth-domain.c",
                                            "@line": "417",
                                            "#text": "the auth callback"
                                        },
                                        "type": {
                                            "@name": "AuthDomainGenericAuthCallback",
                                            "@c:type": "SoupAuthDomainGenericAuthCallback"
                                        }
                                    },
                                    {
                                        "@name": "auth_data",
                                        "@transfer-ownership": "none",
                                        "@nullable": "1",
                                        "@allow-none": "1",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "../libsoup/server/soup-auth-domain.c",
                                            "@line": "418",
                                            "#text": "data to pass to @auth_callback"
                                        },
                                        "type": {
                                            "@name": "gpointer",
                                            "@c:type": "gpointer"
                                        }
                                    },
                                    {
                                        "@name": "dnotify",
                                        "@transfer-ownership": "none",
                                        "@scope": "async",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "../libsoup/server/soup-auth-domain.c",
                                            "@line": "419",
                                            "#text": "destroy notifier to free @auth_data when @domain\n  is destroyed"
                                        },
                                        "type": {
                                            "@name": "GLib.DestroyNotify",
                                            "@c:type": "GDestroyNotify"
                                        }
                                    }
                                ]
                            }
                        }
                    ],
                    "property": [
                        {
                            "@name": "filter",
                            "@writable": "1",
                            "@transfer-ownership": "none",
                            "@setter": "set_filter",
                            "attribute": {
                                "@name": "org.gtk.Property.set",
                                "@value": "soup_auth_domain_set_filter"
                            },
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../libsoup/server/soup-auth-domain.c",
                                "@line": "204",
                                "#text": "The [callback@AuthDomainFilter] for the domain."
                            },
                            "type": {
                                "@name": "AuthDomainFilter",
                                "@c:type": "gpointer"
                            }
                        },
                        {
                            "@name": "filter-data",
                            "@writable": "1",
                            "@transfer-ownership": "none",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../libsoup/server/soup-auth-domain.c",
                                "@line": "215",
                                "#text": "Data to pass to the [callback@AuthDomainFilter]."
                            },
                            "type": {
                                "@name": "gpointer",
                                "@c:type": "gpointer"
                            }
                        },
                        {
                            "@name": "generic-auth-callback",
                            "@writable": "1",
                            "@transfer-ownership": "none",
                            "@setter": "set_generic_auth_callback",
                            "attribute": {
                                "@name": "org.gtk.Property.set",
                                "@value": "soup_auth_domain_set_generic_auth_callback"
                            },
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../libsoup/server/soup-auth-domain.c",
                                "@line": "226",
                                "#text": "The [callback@AuthDomainGenericAuthCallback]."
                            },
                            "type": {
                                "@name": "AuthDomainGenericAuthCallback",
                                "@c:type": "gpointer"
                            }
                        },
                        {
                            "@name": "generic-auth-data",
                            "@writable": "1",
                            "@transfer-ownership": "none",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../libsoup/server/soup-auth-domain.c",
                                "@line": "237",
                                "#text": "The data to pass to the [callback@AuthDomainGenericAuthCallback]."
                            },
                            "type": {
                                "@name": "gpointer",
                                "@c:type": "gpointer"
                            }
                        },
                        {
                            "@name": "proxy",
                            "@writable": "1",
                            "@construct-only": "1",
                            "@transfer-ownership": "none",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../libsoup/server/soup-auth-domain.c",
                                "@line": "191",
                                "#text": "Whether or not this is a proxy auth domain."
                            },
                            "type": {
                                "@name": "gboolean",
                                "@c:type": "gboolean"
                            }
                        },
                        {
                            "@name": "realm",
                            "@writable": "1",
                            "@construct-only": "1",
                            "@transfer-ownership": "none",
                            "@getter": "get_realm",
                            "attribute": {
                                "@name": "org.gtk.Property.get",
                                "@value": "soup_auth_domain_get_realm"
                            },
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../libsoup/server/soup-auth-domain.c",
                                "@line": "178",
                                "#text": "The realm of this auth domain."
                            },
                            "type": {
                                "@name": "utf8",
                                "@c:type": "gchar*"
                            }
                        }
                    ],
                    "field": {
                        "@name": "parent_instance",
                        "type": {
                            "@name": "GObject.Object",
                            "@c:type": "GObject"
                        }
                    }
                },
                {
                    "@name": "AuthDomainBasic",
                    "@c:symbol-prefix": "auth_domain_basic",
                    "@c:type": "SoupAuthDomainBasic",
                    "@parent": "AuthDomain",
                    "@final": "1",
                    "@glib:type-name": "SoupAuthDomainBasic",
                    "@glib:get-type": "soup_auth_domain_basic_get_type",
                    "@glib:type-struct": "AuthDomainBasicClass",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "../libsoup/server/soup-auth-domain-basic.c",
                        "@line": "19",
                        "#text": "Server-side \"Basic\" authentication.\n\n#SoupAuthDomainBasic handles the server side of HTTP \"Basic\" (ie,\ncleartext password) authentication."
                    },
                    "source-position": {
                        "@filename": "../libsoup/server/soup-auth-domain-basic.h",
                        "@line": "14"
                    },
                    "constructor": {
                        "@name": "new",
                        "@c:identifier": "soup_auth_domain_basic_new",
                        "@introspectable": "0",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "../libsoup/server/soup-auth-domain-basic.c",
                            "@line": "112",
                            "#text": "Creates a #SoupAuthDomainBasic.\n\nYou must set the [property@AuthDomain:realm] property, to indicate the realm\nname to be returned with the authentication challenge to the client. Other\nparameters are optional."
                        },
                        "source-position": {
                            "@filename": "../libsoup/server/soup-auth-domain-basic.h",
                            "@line": "17"
                        },
                        "return-value": {
                            "@transfer-ownership": "full",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../libsoup/server/soup-auth-domain-basic.c",
                                "@line": "123",
                                "#text": "the new #SoupAuthDomain"
                            },
                            "type": {
                                "@name": "AuthDomain",
                                "@c:type": "SoupAuthDomain*"
                            }
                        },
                        "parameters": {
                            "parameter": [
                                {
                                    "@name": "optname1",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../libsoup/server/soup-auth-domain-basic.c",
                                        "@line": "114",
                                        "#text": "name of first option, or %NULL"
                                    },
                                    "type": {
                                        "@name": "utf8",
                                        "@c:type": "const char*"
                                    }
                                },
                                {
                                    "@name": "...",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../libsoup/server/soup-auth-domain-basic.c",
                                        "@line": "115",
                                        "#text": "option name/value pairs"
                                    },
                                    "varargs": null
                                }
                            ]
                        }
                    },
                    "method": {
                        "@name": "set_auth_callback",
                        "@c:identifier": "soup_auth_domain_basic_set_auth_callback",
                        "@glib:set-property": "auth-callback",
                        "attribute": {
                            "@name": "org.gtk.Method.set_property",
                            "@value": "auth-callback"
                        },
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "../libsoup/server/soup-auth-domain-basic.c",
                            "@line": "168",
                            "#text": "Sets the callback that @domain will use to authenticate incoming\nrequests.\n\nFor each request containing authorization, @domain will invoke the callback,\nand then either accept or reject the request based on @callback's return\nvalue.\n\nYou can also set the auth callback by setting the\n[property@AuthDomainBasic:auth-callback] and\n[property@AuthDomainBasic:auth-data] properties, which can also be used to\nset the callback at construct time."
                        },
                        "source-position": {
                            "@filename": "../libsoup/server/soup-auth-domain-basic.h",
                            "@line": "27"
                        },
                        "return-value": {
                            "@transfer-ownership": "none",
                            "type": {
                                "@name": "none",
                                "@c:type": "void"
                            }
                        },
                        "parameters": {
                            "instance-parameter": {
                                "@name": "domain",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "../libsoup/server/soup-auth-domain-basic.c",
                                    "@line": "170",
                                    "#text": "the domain"
                                },
                                "type": {
                                    "@name": "AuthDomainBasic",
                                    "@c:type": "SoupAuthDomain*"
                                }
                            },
                            "parameter": [
                                {
                                    "@name": "callback",
                                    "@transfer-ownership": "none",
                                    "@scope": "notified",
                                    "@closure": "1",
                                    "@destroy": "2",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../libsoup/server/soup-auth-domain-basic.c",
                                        "@line": "171",
                                        "#text": "the callback"
                                    },
                                    "type": {
                                        "@name": "AuthDomainBasicAuthCallback",
                                        "@c:type": "SoupAuthDomainBasicAuthCallback"
                                    }
                                },
                                {
                                    "@name": "user_data",
                                    "@transfer-ownership": "none",
                                    "@nullable": "1",
                                    "@allow-none": "1",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../libsoup/server/soup-auth-domain-basic.c",
                                        "@line": "172",
                                        "#text": "data to pass to @auth_callback"
                                    },
                                    "type": {
                                        "@name": "gpointer",
                                        "@c:type": "gpointer"
                                    }
                                },
                                {
                                    "@name": "dnotify",
                                    "@transfer-ownership": "none",
                                    "@scope": "async",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../libsoup/server/soup-auth-domain-basic.c",
                                        "@line": "173",
                                        "#text": "destroy notifier to free @user_data when @domain\n  is destroyed"
                                    },
                                    "type": {
                                        "@name": "GLib.DestroyNotify",
                                        "@c:type": "GDestroyNotify"
                                    }
                                }
                            ]
                        }
                    },
                    "property": [
                        {
                            "@name": "auth-callback",
                            "@writable": "1",
                            "@transfer-ownership": "none",
                            "@setter": "set_auth_callback",
                            "attribute": {
                                "@name": "org.gtk.Property.set",
                                "@value": "soup_auth_domain_basic_set_auth_callback"
                            },
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../libsoup/server/soup-auth-domain-basic.c",
                                "@line": "324",
                                "#text": "The [callback@AuthDomainBasicAuthCallback]."
                            },
                            "type": {
                                "@name": "AuthDomainBasicAuthCallback",
                                "@c:type": "gpointer"
                            }
                        },
                        {
                            "@name": "auth-data",
                            "@writable": "1",
                            "@transfer-ownership": "none",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../libsoup/server/soup-auth-domain-basic.c",
                                "@line": "335",
                                "#text": "The data to pass to the [callback@AuthDomainBasicAuthCallback]."
                            },
                            "type": {
                                "@name": "gpointer",
                                "@c:type": "gpointer"
                            }
                        }
                    ]
                },
                {
                    "@name": "AuthDomainDigest",
                    "@c:symbol-prefix": "auth_domain_digest",
                    "@c:type": "SoupAuthDomainDigest",
                    "@parent": "AuthDomain",
                    "@final": "1",
                    "@glib:type-name": "SoupAuthDomainDigest",
                    "@glib:get-type": "soup_auth_domain_digest_get_type",
                    "@glib:type-struct": "AuthDomainDigestClass",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "../libsoup/server/soup-auth-domain-digest.c",
                        "@line": "22",
                        "#text": "Server-side \"Digest\" authentication.\n\n#SoupAuthDomainDigest handles the server side of HTTP \"Digest\"\nauthentication."
                    },
                    "source-position": {
                        "@filename": "../libsoup/server/soup-auth-domain-digest.h",
                        "@line": "14"
                    },
                    "constructor": {
                        "@name": "new",
                        "@c:identifier": "soup_auth_domain_digest_new",
                        "@introspectable": "0",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "../libsoup/server/soup-auth-domain-digest.c",
                            "@line": "116",
                            "#text": "Creates a #SoupAuthDomainDigest.\n\nYou must set the [property@AuthDomain:realm] property, to indicate the realm name to\nbe returned with the authentication challenge to the client. Other parameters\nare optional."
                        },
                        "source-position": {
                            "@filename": "../libsoup/server/soup-auth-domain-digest.h",
                            "@line": "17"
                        },
                        "return-value": {
                            "@transfer-ownership": "full",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../libsoup/server/soup-auth-domain-digest.c",
                                "@line": "127",
                                "#text": "the new #SoupAuthDomain"
                            },
                            "type": {
                                "@name": "AuthDomain",
                                "@c:type": "SoupAuthDomain*"
                            }
                        },
                        "parameters": {
                            "parameter": [
                                {
                                    "@name": "optname1",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../libsoup/server/soup-auth-domain-digest.c",
                                        "@line": "118",
                                        "#text": "name of first option, or %NULL"
                                    },
                                    "type": {
                                        "@name": "utf8",
                                        "@c:type": "const char*"
                                    }
                                },
                                {
                                    "@name": "...",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../libsoup/server/soup-auth-domain-digest.c",
                                        "@line": "119",
                                        "#text": "option name/value pairs"
                                    },
                                    "varargs": null
                                }
                            ]
                        }
                    },
                    "function": {
                        "@name": "encode_password",
                        "@c:identifier": "soup_auth_domain_digest_encode_password",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "../libsoup/server/soup-auth-domain-digest.c",
                            "@line": "350",
                            "#text": "Encodes the username/realm/password triplet for Digest\nauthentication.\n\nThat is, it returns a stringified MD5 hash of\n@username, @realm, and @password concatenated together. This is\nthe form that is needed as the return value of\n#SoupAuthDomainDigest's auth handler.\n\nFor security reasons, you should store the encoded hash, rather\nthan storing the cleartext password itself and calling this method\nonly when you need to verify it. This way, if your server is\ncompromised, the attackers will not gain access to cleartext\npasswords which might also be usable at other sites. (Note also\nthat the encoded password returned by this method is identical to\nthe encoded password stored in an Apache .htdigest file.)"
                        },
                        "source-position": {
                            "@filename": "../libsoup/server/soup-auth-domain-digest.h",
                            "@line": "32"
                        },
                        "return-value": {
                            "@transfer-ownership": "full",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../libsoup/server/soup-auth-domain-digest.c",
                                "@line": "372",
                                "#text": "the encoded password"
                            },
                            "type": {
                                "@name": "utf8",
                                "@c:type": "char*"
                            }
                        },
                        "parameters": {
                            "parameter": [
                                {
                                    "@name": "username",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../libsoup/server/soup-auth-domain-digest.c",
                                        "@line": "352",
                                        "#text": "a username"
                                    },
                                    "type": {
                                        "@name": "utf8",
                                        "@c:type": "const char*"
                                    }
                                },
                                {
                                    "@name": "realm",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../libsoup/server/soup-auth-domain-digest.c",
                                        "@line": "353",
                                        "#text": "an auth realm name"
                                    },
                                    "type": {
                                        "@name": "utf8",
                                        "@c:type": "const char*"
                                    }
                                },
                                {
                                    "@name": "password",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../libsoup/server/soup-auth-domain-digest.c",
                                        "@line": "354",
                                        "#text": "the password for @username in @realm"
                                    },
                                    "type": {
                                        "@name": "utf8",
                                        "@c:type": "const char*"
                                    }
                                }
                            ]
                        }
                    },
                    "method": {
                        "@name": "set_auth_callback",
                        "@c:identifier": "soup_auth_domain_digest_set_auth_callback",
                        "@glib:set-property": "auth-callback",
                        "attribute": {
                            "@name": "org.gtk.Method.set_property",
                            "@value": "auth-callback"
                        },
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "../libsoup/server/soup-auth-domain-digest.c",
                            "@line": "163",
                            "#text": "Sets the callback that @domain will use to authenticate incoming\nrequests.\n\nFor each request containing authorization, @domain will\ninvoke the callback, and then either accept or reject the request\nbased on @callback's return value.\n\nYou can also set the auth callback by setting the\n[property@AuthDomainDigest:auth-callback] and\n[property@AuthDomainDigest:auth-data] properties, which can also be used to\nset the callback at construct time."
                        },
                        "source-position": {
                            "@filename": "../libsoup/server/soup-auth-domain-digest.h",
                            "@line": "26"
                        },
                        "return-value": {
                            "@transfer-ownership": "none",
                            "type": {
                                "@name": "none",
                                "@c:type": "void"
                            }
                        },
                        "parameters": {
                            "instance-parameter": {
                                "@name": "domain",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "../libsoup/server/soup-auth-domain-digest.c",
                                    "@line": "165",
                                    "#text": "the domain"
                                },
                                "type": {
                                    "@name": "AuthDomainDigest",
                                    "@c:type": "SoupAuthDomain*"
                                }
                            },
                            "parameter": [
                                {
                                    "@name": "callback",
                                    "@transfer-ownership": "none",
                                    "@scope": "notified",
                                    "@closure": "1",
                                    "@destroy": "2",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../libsoup/server/soup-auth-domain-digest.c",
                                        "@line": "166",
                                        "#text": "the callback"
                                    },
                                    "type": {
                                        "@name": "AuthDomainDigestAuthCallback",
                                        "@c:type": "SoupAuthDomainDigestAuthCallback"
                                    }
                                },
                                {
                                    "@name": "user_data",
                                    "@transfer-ownership": "none",
                                    "@nullable": "1",
                                    "@allow-none": "1",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../libsoup/server/soup-auth-domain-digest.c",
                                        "@line": "167",
                                        "#text": "data to pass to @auth_callback"
                                    },
                                    "type": {
                                        "@name": "gpointer",
                                        "@c:type": "gpointer"
                                    }
                                },
                                {
                                    "@name": "dnotify",
                                    "@transfer-ownership": "none",
                                    "@scope": "async",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../libsoup/server/soup-auth-domain-digest.c",
                                        "@line": "168",
                                        "#text": "destroy notifier to free @user_data when @domain\n  is destroyed"
                                    },
                                    "type": {
                                        "@name": "GLib.DestroyNotify",
                                        "@c:type": "GDestroyNotify"
                                    }
                                }
                            ]
                        }
                    },
                    "property": [
                        {
                            "@name": "auth-callback",
                            "@writable": "1",
                            "@transfer-ownership": "none",
                            "@setter": "set_auth_callback",
                            "attribute": {
                                "@name": "org.gtk.Property.set",
                                "@value": "soup_auth_domain_digest_set_auth_callback"
                            },
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../libsoup/server/soup-auth-domain-digest.c",
                                "@line": "435",
                                "#text": "The [callback@AuthDomainDigestAuthCallback]."
                            },
                            "type": {
                                "@name": "AuthDomainDigestAuthCallback",
                                "@c:type": "gpointer"
                            }
                        },
                        {
                            "@name": "auth-data",
                            "@writable": "1",
                            "@transfer-ownership": "none",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../libsoup/server/soup-auth-domain-digest.c",
                                "@line": "446",
                                "#text": "The data to pass to the [callback@AuthDomainDigestAuthCallback]."
                            },
                            "type": {
                                "@name": "gpointer",
                                "@c:type": "gpointer"
                            }
                        }
                    ]
                },
                {
                    "@name": "AuthManager",
                    "@c:symbol-prefix": "auth_manager",
                    "@c:type": "SoupAuthManager",
                    "@parent": "GObject.Object",
                    "@final": "1",
                    "@glib:type-name": "SoupAuthManager",
                    "@glib:get-type": "soup_auth_manager_get_type",
                    "@glib:type-struct": "AuthManagerClass",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "../libsoup/auth/soup-auth-manager.c",
                        "@line": "24",
                        "#text": "HTTP client-side authentication handler.\n\n#SoupAuthManager is the [iface@SessionFeature] that handles HTTP\nauthentication for a [class@Session].\n\nA #SoupAuthManager is added to the session by default, and normally\nyou don't need to worry about it at all. However, if you want to\ndisable HTTP authentication, you can remove the feature from the\nsession with [method@Session.remove_feature_by_type] or disable it on\nindividual requests with [method@Message.disable_feature].\n\nYou can use this with [method@Session.remove_feature_by_type] or\n[method@Message.disable_feature].\n\n(Although this type has only been publicly visible since libsoup 2.42, it has\nalways existed in the background, and you can use `g_type_from_name\n(\"SoupAuthManager\")` to get its [alias@GLib.Type] in earlier releases.)"
                    },
                    "source-position": {
                        "@filename": "../libsoup/auth/soup-auth-manager.h",
                        "@line": "15"
                    },
                    "implements": {
                        "@name": "SessionFeature"
                    },
                    "method": [
                        {
                            "@name": "clear_cached_credentials",
                            "@c:identifier": "soup_auth_manager_clear_cached_credentials",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../libsoup/auth/soup-auth-manager.c",
                                "@line": "836",
                                "#text": "Clear all credentials cached by @manager."
                            },
                            "source-position": {
                                "@filename": "../libsoup/auth/soup-auth-manager.h",
                                "@line": "23"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "type": {
                                    "@name": "none",
                                    "@c:type": "void"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "manager",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../libsoup/auth/soup-auth-manager.c",
                                        "@line": "838",
                                        "#text": "a #SoupAuthManager"
                                    },
                                    "type": {
                                        "@name": "AuthManager",
                                        "@c:type": "SoupAuthManager*"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "use_auth",
                            "@c:identifier": "soup_auth_manager_use_auth",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../libsoup/auth/soup-auth-manager.c",
                                "@line": "806",
                                "#text": "Records that @auth is to be used under @uri, as though a\nWWW-Authenticate header had been received at that URI.\n\nThis can be used to \"preload\" @manager's auth cache, to avoid an extra HTTP\nround trip in the case where you know ahead of time that a 401 response will\nbe returned.\n\nThis is only useful for authentication types where the initial\nAuthorization header does not depend on any additional information\nfrom the server. (Eg, Basic or NTLM, but not Digest.)"
                            },
                            "source-position": {
                                "@filename": "../libsoup/auth/soup-auth-manager.h",
                                "@line": "18"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "type": {
                                    "@name": "none",
                                    "@c:type": "void"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "manager",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../libsoup/auth/soup-auth-manager.c",
                                        "@line": "808",
                                        "#text": "a #SoupAuthManager"
                                    },
                                    "type": {
                                        "@name": "AuthManager",
                                        "@c:type": "SoupAuthManager*"
                                    }
                                },
                                "parameter": [
                                    {
                                        "@name": "uri",
                                        "@transfer-ownership": "none",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "../libsoup/auth/soup-auth-manager.c",
                                            "@line": "809",
                                            "#text": "the #GUri under which @auth is to be used"
                                        },
                                        "type": {
                                            "@name": "GLib.Uri",
                                            "@c:type": "GUri*"
                                        }
                                    },
                                    {
                                        "@name": "auth",
                                        "@transfer-ownership": "none",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "../libsoup/auth/soup-auth-manager.c",
                                            "@line": "810",
                                            "#text": "the #SoupAuth to use"
                                        },
                                        "type": {
                                            "@name": "Auth",
                                            "@c:type": "SoupAuth*"
                                        }
                                    }
                                ]
                            }
                        }
                    ]
                },
                {
                    "@name": "AuthNTLM",
                    "@c:symbol-prefix": "auth_ntlm",
                    "@parent": "Auth",
                    "@final": "1",
                    "@glib:type-name": "SoupAuthNTLM",
                    "@glib:get-type": "soup_auth_ntlm_get_type",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "../libsoup/auth/soup-auth-ntlm.c",
                        "@line": "101",
                        "#text": "HTTP-based NTLM authentication.\n\n[class@Session]s do not support this type by default; if you want to\nenable support for it, call [method@Session.add_feature_by_type],\npassing %SOUP_TYPE_AUTH_NTLM."
                    }
                },
                {
                    "@name": "AuthNegotiate",
                    "@c:symbol-prefix": "auth_negotiate",
                    "@parent": "Auth",
                    "@final": "1",
                    "@glib:type-name": "SoupAuthNegotiate",
                    "@glib:get-type": "soup_auth_negotiate_get_type",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "../libsoup/auth/soup-auth-negotiate.c",
                        "@line": "80",
                        "#text": "HTTP-based GSS-Negotiate authentication, as defined by\n[RFC 4559](https://datatracker.ietf.org/doc/html/rfc4559).\n\n[class@Session]s do not support this type by default; if you want to\nenable support for it, call [method@Session.add_feature_by_type],\npassing %SOUP_TYPE_AUTH_NEGOTIATE.\n\nThis auth type will only work if libsoup was compiled with GSSAPI\nsupport; you can check [func@AuthNegotiate.supported] to see if it\nwas."
                    },
                    "function": {
                        "@name": "supported",
                        "@c:identifier": "soup_auth_negotiate_supported",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "../libsoup/auth/soup-auth-negotiate.c",
                            "@line": "27",
                            "#text": "Indicates whether libsoup was built with GSSAPI support.\n\nIf this is %FALSE, %SOUP_TYPE_AUTH_NEGOTIATE will still be defined and can\nstill be added to a [class@Session], but libsoup will never attempt to\nactually use this auth type."
                        },
                        "source-position": {
                            "@filename": "../libsoup/auth/soup-auth.h",
                            "@line": "98"
                        },
                        "return-value": {
                            "@transfer-ownership": "none",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../libsoup/auth/soup-auth-negotiate.c",
                                "@line": "36",
                                "#text": "%TRUE if supported otherwise %FALSE"
                            },
                            "type": {
                                "@name": "gboolean",
                                "@c:type": "gboolean"
                            }
                        }
                    }
                },
                {
                    "@name": "Cache",
                    "@c:symbol-prefix": "cache",
                    "@c:type": "SoupCache",
                    "@parent": "GObject.Object",
                    "@glib:type-name": "SoupCache",
                    "@glib:get-type": "soup_cache_get_type",
                    "@glib:type-struct": "CacheClass",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "../libsoup/cache/soup-cache.c",
                        "@line": "49",
                        "#text": "File-based cache for HTTP resources."
                    },
                    "source-position": {
                        "@filename": "../libsoup/cache/soup-cache.h",
                        "@line": "52"
                    },
                    "implements": {
                        "@name": "SessionFeature"
                    },
                    "constructor": {
                        "@name": "new",
                        "@c:identifier": "soup_cache_new",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "../libsoup/cache/soup-cache.c",
                            "@line": "1103",
                            "#text": "Creates a new #SoupCache."
                        },
                        "source-position": {
                            "@filename": "../libsoup/cache/soup-cache.h",
                            "@line": "55"
                        },
                        "return-value": {
                            "@transfer-ownership": "full",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../libsoup/cache/soup-cache.c",
                                "@line": "1113",
                                "#text": "a new #SoupCache"
                            },
                            "type": {
                                "@name": "Cache",
                                "@c:type": "SoupCache*"
                            }
                        },
                        "parameters": {
                            "parameter": [
                                {
                                    "@name": "cache_dir",
                                    "@transfer-ownership": "none",
                                    "@nullable": "1",
                                    "@allow-none": "1",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../libsoup/cache/soup-cache.c",
                                        "@line": "1105",
                                        "#text": "the directory to store the cached data, or %NULL\n  to use the default one. Note that since the cache isn't safe to access for\n  multiple processes at once, and the default directory isn't namespaced by\n  process, clients are strongly discouraged from passing %NULL."
                                    },
                                    "type": {
                                        "@name": "utf8",
                                        "@c:type": "const char*"
                                    }
                                },
                                {
                                    "@name": "cache_type",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../libsoup/cache/soup-cache.c",
                                        "@line": "1109",
                                        "#text": "the #SoupCacheType of the cache"
                                    },
                                    "type": {
                                        "@name": "CacheType",
                                        "@c:type": "SoupCacheType"
                                    }
                                }
                            ]
                        }
                    },
                    "virtual-method": {
                        "@name": "get_cacheability",
                        "source-position": {
                            "@filename": "../libsoup/cache/soup-cache.h",
                            "@line": "49"
                        },
                        "return-value": {
                            "@transfer-ownership": "none",
                            "type": {
                                "@name": "Cacheability",
                                "@c:type": "SoupCacheability"
                            }
                        },
                        "parameters": {
                            "instance-parameter": {
                                "@name": "cache",
                                "@transfer-ownership": "none",
                                "type": {
                                    "@name": "Cache",
                                    "@c:type": "SoupCache*"
                                }
                            },
                            "parameter": {
                                "@name": "msg",
                                "@transfer-ownership": "none",
                                "type": {
                                    "@name": "Message",
                                    "@c:type": "SoupMessage*"
                                }
                            }
                        }
                    },
                    "method": [
                        {
                            "@name": "clear",
                            "@c:identifier": "soup_cache_clear",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../libsoup/cache/soup-cache.c",
                                "@line": "1403",
                                "#text": "Will remove all entries in the @cache plus all the cache files.\n\nThis is not thread safe and must be called only from the thread that created the #SoupCache"
                            },
                            "source-position": {
                                "@filename": "../libsoup/cache/soup-cache.h",
                                "@line": "60"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "type": {
                                    "@name": "none",
                                    "@c:type": "void"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "cache",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../libsoup/cache/soup-cache.c",
                                        "@line": "1405",
                                        "#text": "a #SoupCache"
                                    },
                                    "type": {
                                        "@name": "Cache",
                                        "@c:type": "SoupCache*"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "dump",
                            "@c:identifier": "soup_cache_dump",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../libsoup/cache/soup-cache.c",
                                "@line": "1559",
                                "#text": "Synchronously writes the cache index out to disk.\n\nContrast with [method@Cache.flush], which writes pending cache *entries* to\ndisk.\n\nYou must call this before exiting if you want your cache data to\npersist between sessions.\n\nThis is not thread safe and must be called only from the thread that created the #SoupCache"
                            },
                            "source-position": {
                                "@filename": "../libsoup/cache/soup-cache.h",
                                "@line": "63"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "type": {
                                    "@name": "none",
                                    "@c:type": "void"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "cache",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../libsoup/cache/soup-cache.c",
                                        "@line": "1561",
                                        "#text": "a #SoupCache"
                                    },
                                    "type": {
                                        "@name": "Cache",
                                        "@c:type": "SoupCache*"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "flush",
                            "@c:identifier": "soup_cache_flush",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../libsoup/cache/soup-cache.c",
                                "@line": "1319",
                                "#text": "Forces all pending writes in the @cache to be\ncommitted to disk.\n\nFor doing so it will iterate the [struct@GLib.MainContext] associated with\n@cache's session as long as needed.\n\nContrast with [method@Cache.dump], which writes out the cache index file."
                            },
                            "source-position": {
                                "@filename": "../libsoup/cache/soup-cache.h",
                                "@line": "58"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "type": {
                                    "@name": "none",
                                    "@c:type": "void"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "cache",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../libsoup/cache/soup-cache.c",
                                        "@line": "1321",
                                        "#text": "a #SoupCache"
                                    },
                                    "type": {
                                        "@name": "Cache",
                                        "@c:type": "SoupCache*"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "get_max_size",
                            "@c:identifier": "soup_cache_get_max_size",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../libsoup/cache/soup-cache.c",
                                "@line": "1743",
                                "#text": "Gets the maximum size of the cache."
                            },
                            "source-position": {
                                "@filename": "../libsoup/cache/soup-cache.h",
                                "@line": "71"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "../libsoup/cache/soup-cache.c",
                                    "@line": "1749",
                                    "#text": "the maximum size of the cache, in bytes."
                                },
                                "type": {
                                    "@name": "guint",
                                    "@c:type": "guint"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "cache",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../libsoup/cache/soup-cache.c",
                                        "@line": "1745",
                                        "#text": "a #SoupCache"
                                    },
                                    "type": {
                                        "@name": "Cache",
                                        "@c:type": "SoupCache*"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "load",
                            "@c:identifier": "soup_cache_load",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../libsoup/cache/soup-cache.c",
                                "@line": "1628",
                                "#text": "Loads the contents of @cache's index into memory.\n\nThis is not thread safe and must be called only from the thread that created the #SoupCache"
                            },
                            "source-position": {
                                "@filename": "../libsoup/cache/soup-cache.h",
                                "@line": "65"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "type": {
                                    "@name": "none",
                                    "@c:type": "void"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "cache",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../libsoup/cache/soup-cache.c",
                                        "@line": "1630",
                                        "#text": "a #SoupCache"
                                    },
                                    "type": {
                                        "@name": "Cache",
                                        "@c:type": "SoupCache*"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "set_max_size",
                            "@c:identifier": "soup_cache_set_max_size",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../libsoup/cache/soup-cache.c",
                                "@line": "1727",
                                "#text": "Sets the maximum size of the cache."
                            },
                            "source-position": {
                                "@filename": "../libsoup/cache/soup-cache.h",
                                "@line": "68"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "type": {
                                    "@name": "none",
                                    "@c:type": "void"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "cache",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../libsoup/cache/soup-cache.c",
                                        "@line": "1729",
                                        "#text": "a #SoupCache"
                                    },
                                    "type": {
                                        "@name": "Cache",
                                        "@c:type": "SoupCache*"
                                    }
                                },
                                "parameter": {
                                    "@name": "max_size",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../libsoup/cache/soup-cache.c",
                                        "@line": "1730",
                                        "#text": "the maximum size of the cache, in bytes"
                                    },
                                    "type": {
                                        "@name": "guint",
                                        "@c:type": "guint"
                                    }
                                }
                            }
                        }
                    ],
                    "property": [
                        {
                            "@name": "cache-dir",
                            "@writable": "1",
                            "@construct-only": "1",
                            "@transfer-ownership": "none",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../libsoup/cache/soup-cache.c",
                                "@line": "1065",
                                "#text": "The directory to store the cache files."
                            },
                            "type": {
                                "@name": "utf8",
                                "@c:type": "gchar*"
                            }
                        },
                        {
                            "@name": "cache-type",
                            "@writable": "1",
                            "@construct-only": "1",
                            "@transfer-ownership": "none",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../libsoup/cache/soup-cache.c",
                                "@line": "1077",
                                "#text": "Whether the cache is private or shared."
                            },
                            "type": {
                                "@name": "CacheType"
                            }
                        }
                    ],
                    "field": {
                        "@name": "parent_instance",
                        "type": {
                            "@name": "GObject.Object",
                            "@c:type": "GObject"
                        }
                    }
                },
                {
                    "@name": "ContentDecoder",
                    "@c:symbol-prefix": "content_decoder",
                    "@c:type": "SoupContentDecoder",
                    "@parent": "GObject.Object",
                    "@final": "1",
                    "@glib:type-name": "SoupContentDecoder",
                    "@glib:get-type": "soup_content_decoder_get_type",
                    "@glib:type-struct": "ContentDecoderClass",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "../libsoup/content-decoder/soup-content-decoder.c",
                        "@line": "23",
                        "#text": "Handles decoding of HTTP messages.\n\n#SoupContentDecoder handles adding the \"Accept-Encoding\" header on\noutgoing messages, and processing the \"Content-Encoding\" header on\nincoming ones. Currently it supports the \"gzip\", \"deflate\", and \"br\"\ncontent codings.\n\nA #SoupContentDecoder will automatically be\nadded to the session by default. (You can use\n[method@Session.remove_feature_by_type] if you don't\nwant this.)\n\nIf #SoupContentDecoder successfully decodes the Content-Encoding,\nthe message body will contain the decoded data; however, the message headers\nwill be unchanged (and so \"Content-Encoding\" will still be present,\n\"Content-Length\" will describe the original encoded length, etc).\n\nIf \"Content-Encoding\" contains any encoding types that\n#SoupContentDecoder doesn't recognize, then none of the encodings\nwill be decoded.\n\n(Note that currently there is no way to (automatically) use\nContent-Encoding when sending a request body, or to pick specific\nencoding types to support.)"
                    },
                    "source-position": {
                        "@filename": "../libsoup/content-decoder/soup-content-decoder.h",
                        "@line": "15"
                    },
                    "implements": {
                        "@name": "SessionFeature"
                    }
                },
                {
                    "@name": "ContentSniffer",
                    "@c:symbol-prefix": "content_sniffer",
                    "@c:type": "SoupContentSniffer",
                    "@parent": "GObject.Object",
                    "@final": "1",
                    "@glib:type-name": "SoupContentSniffer",
                    "@glib:get-type": "soup_content_sniffer_get_type",
                    "@glib:type-struct": "ContentSnifferClass",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "../libsoup/content-sniffer/soup-content-sniffer.c",
                        "@line": "26",
                        "#text": "Sniffs the mime type of messages.\n\nA #SoupContentSniffer tries to detect the actual content type of\nthe files that are being downloaded by looking at some of the data\nbefore the [class@Message] emits its [signal@Message::got-headers] signal.\n#SoupContentSniffer implements [iface@SessionFeature], so you can add\ncontent sniffing to a session with [method@Session.add_feature] or\n[method@Session.add_feature_by_type]."
                    },
                    "source-position": {
                        "@filename": "../libsoup/content-sniffer/soup-content-sniffer.h",
                        "@line": "15"
                    },
                    "implements": {
                        "@name": "SessionFeature"
                    },
                    "constructor": {
                        "@name": "new",
                        "@c:identifier": "soup_content_sniffer_new",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "../libsoup/content-sniffer/soup-content-sniffer.c",
                            "@line": "892",
                            "#text": "Creates a new #SoupContentSniffer."
                        },
                        "source-position": {
                            "@filename": "../libsoup/content-sniffer/soup-content-sniffer.h",
                            "@line": "18"
                        },
                        "return-value": {
                            "@transfer-ownership": "full",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../libsoup/content-sniffer/soup-content-sniffer.c",
                                "@line": "897",
                                "#text": "a new #SoupContentSniffer"
                            },
                            "type": {
                                "@name": "ContentSniffer",
                                "@c:type": "SoupContentSniffer*"
                            }
                        }
                    },
                    "method": {
                        "@name": "sniff",
                        "@c:identifier": "soup_content_sniffer_sniff",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "../libsoup/content-sniffer/soup-content-sniffer.c",
                            "@line": "776",
                            "#text": "Sniffs @buffer to determine its Content-Type.\n\nThe result may also be influenced by the Content-Type declared in @msg's\nresponse headers."
                        },
                        "source-position": {
                            "@filename": "../libsoup/content-sniffer/soup-content-sniffer.h",
                            "@line": "21"
                        },
                        "return-value": {
                            "@transfer-ownership": "full",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../libsoup/content-sniffer/soup-content-sniffer.c",
                                "@line": "789",
                                "#text": "the sniffed Content-Type of @buffer; this will never be %NULL,\n  but may be `application/octet-stream`."
                            },
                            "type": {
                                "@name": "utf8",
                                "@c:type": "char*"
                            }
                        },
                        "parameters": {
                            "instance-parameter": {
                                "@name": "sniffer",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "../libsoup/content-sniffer/soup-content-sniffer.c",
                                    "@line": "778",
                                    "#text": "a #SoupContentSniffer"
                                },
                                "type": {
                                    "@name": "ContentSniffer",
                                    "@c:type": "SoupContentSniffer*"
                                }
                            },
                            "parameter": [
                                {
                                    "@name": "msg",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../libsoup/content-sniffer/soup-content-sniffer.c",
                                        "@line": "779",
                                        "#text": "the message to sniff"
                                    },
                                    "type": {
                                        "@name": "Message",
                                        "@c:type": "SoupMessage*"
                                    }
                                },
                                {
                                    "@name": "buffer",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../libsoup/content-sniffer/soup-content-sniffer.c",
                                        "@line": "780",
                                        "#text": "a buffer containing the start of @msg's response body"
                                    },
                                    "type": {
                                        "@name": "GLib.Bytes",
                                        "@c:type": "GBytes*"
                                    }
                                },
                                {
                                    "@name": "params",
                                    "@direction": "out",
                                    "@caller-allocates": "0",
                                    "@transfer-ownership": "full",
                                    "@nullable": "1",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../libsoup/content-sniffer/soup-content-sniffer.c",
                                        "@line": "781",
                                        "#text": "return\n  location for Content-Type parameters (eg, \"charset\"), or %NULL"
                                    },
                                    "type": {
                                        "@name": "GLib.HashTable",
                                        "@c:type": "GHashTable**",
                                        "type": [
                                            {
                                                "@name": "utf8"
                                            },
                                            {
                                                "@name": "utf8"
                                            }
                                        ]
                                    }
                                }
                            ]
                        }
                    }
                },
                {
                    "@name": "CookieJar",
                    "@c:symbol-prefix": "cookie_jar",
                    "@c:type": "SoupCookieJar",
                    "@parent": "GObject.Object",
                    "@glib:type-name": "SoupCookieJar",
                    "@glib:get-type": "soup_cookie_jar_get_type",
                    "@glib:type-struct": "CookieJarClass",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "../libsoup/cookies/soup-cookie-jar.c",
                        "@line": "23",
                        "#text": "Automatic cookie handling for SoupSession.\n\nA #SoupCookieJar stores [struct@Cookie]s and arrange for them to be sent with\nthe appropriate [class@Message]s. #SoupCookieJar implements\n[iface@SessionFeature], so you can add a cookie jar to a session with\n[method@Session.add_feature] or [method@Session.add_feature_by_type].\n\nNote that the base #SoupCookieJar class does not support any form\nof long-term cookie persistence."
                    },
                    "source-position": {
                        "@filename": "../libsoup/cookies/soup-cookie-jar.h",
                        "@line": "29"
                    },
                    "implements": {
                        "@name": "SessionFeature"
                    },
                    "constructor": {
                        "@name": "new",
                        "@c:identifier": "soup_cookie_jar_new",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "../libsoup/cookies/soup-cookie-jar.c",
                            "@line": "225",
                            "#text": "Creates a new #SoupCookieJar.\n\nThe base #SoupCookieJar class does not support persistent storage of cookies;\nuse a subclass for that."
                        },
                        "source-position": {
                            "@filename": "../libsoup/cookies/soup-cookie-jar.h",
                            "@line": "39"
                        },
                        "return-value": {
                            "@transfer-ownership": "full",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../libsoup/cookies/soup-cookie-jar.c",
                                "@line": "233",
                                "#text": "a new #SoupCookieJar"
                            },
                            "type": {
                                "@name": "CookieJar",
                                "@c:type": "SoupCookieJar*"
                            }
                        }
                    },
                    "virtual-method": [
                        {
                            "@name": "changed",
                            "source-position": {
                                "@filename": "../libsoup/cookies/soup-cookie-jar.h",
                                "@line": "23"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "type": {
                                    "@name": "none",
                                    "@c:type": "void"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "jar",
                                    "@transfer-ownership": "none",
                                    "type": {
                                        "@name": "CookieJar",
                                        "@c:type": "SoupCookieJar*"
                                    }
                                },
                                "parameter": [
                                    {
                                        "@name": "old_cookie",
                                        "@transfer-ownership": "none",
                                        "type": {
                                            "@name": "Cookie",
                                            "@c:type": "SoupCookie*"
                                        }
                                    },
                                    {
                                        "@name": "new_cookie",
                                        "@transfer-ownership": "none",
                                        "type": {
                                            "@name": "Cookie",
                                            "@c:type": "SoupCookie*"
                                        }
                                    }
                                ]
                            }
                        },
                        {
                            "@name": "is_persistent",
                            "@invoker": "is_persistent",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../libsoup/cookies/soup-cookie-jar.c",
                                "@line": "1040",
                                "#text": "Gets whether @jar stores cookies persistenly."
                            },
                            "source-position": {
                                "@filename": "../libsoup/cookies/soup-cookie-jar.h",
                                "@line": "20"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "../libsoup/cookies/soup-cookie-jar.c",
                                    "@line": "1046",
                                    "#text": "%TRUE if @jar storage is persistent or %FALSE otherwise."
                                },
                                "type": {
                                    "@name": "gboolean",
                                    "@c:type": "gboolean"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "jar",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../libsoup/cookies/soup-cookie-jar.c",
                                        "@line": "1042",
                                        "#text": "a #SoupCookieJar"
                                    },
                                    "type": {
                                        "@name": "CookieJar",
                                        "@c:type": "SoupCookieJar*"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "save",
                            "source-position": {
                                "@filename": "../libsoup/cookies/soup-cookie-jar.h",
                                "@line": "19"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "type": {
                                    "@name": "none",
                                    "@c:type": "void"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "jar",
                                    "@transfer-ownership": "none",
                                    "type": {
                                        "@name": "CookieJar",
                                        "@c:type": "SoupCookieJar*"
                                    }
                                }
                            }
                        }
                    ],
                    "method": [
                        {
                            "@name": "add_cookie",
                            "@c:identifier": "soup_cookie_jar_add_cookie",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../libsoup/cookies/soup-cookie-jar.c",
                                "@line": "679",
                                "#text": "Adds @cookie to @jar.\n\nEmits the [signal@CookieJar::changed] signal if we are modifying\nan existing cookie or adding a valid new cookie ('valid' means\nthat the cookie's expire date is not in the past).\n\n@cookie will be 'stolen' by the jar, so don't free it afterwards."
                            },
                            "source-position": {
                                "@filename": "../libsoup/cookies/soup-cookie-jar.h",
                                "@line": "67"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "type": {
                                    "@name": "none",
                                    "@c:type": "void"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "jar",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../libsoup/cookies/soup-cookie-jar.c",
                                        "@line": "681",
                                        "#text": "a #SoupCookieJar"
                                    },
                                    "type": {
                                        "@name": "CookieJar",
                                        "@c:type": "SoupCookieJar*"
                                    }
                                },
                                "parameter": {
                                    "@name": "cookie",
                                    "@transfer-ownership": "full",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../libsoup/cookies/soup-cookie-jar.c",
                                        "@line": "682",
                                        "#text": "a #SoupCookie"
                                    },
                                    "type": {
                                        "@name": "Cookie",
                                        "@c:type": "SoupCookie*"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "add_cookie_full",
                            "@c:identifier": "soup_cookie_jar_add_cookie_full",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../libsoup/cookies/soup-cookie-jar.c",
                                "@line": "567",
                                "#text": "Adds @cookie to @jar.\n\nEmits the [signal@CookieJar::changed] signal if we are modifying an existing\ncookie or adding a valid new cookie ('valid' means that the cookie's expire\ndate is not in the past).\n\n@first_party will be used to reject cookies coming from third party\nresources in case such a security policy is set in the @jar.\n\n@uri will be used to reject setting or overwriting secure cookies\nfrom insecure origins. %NULL is treated as secure.\n\n@cookie will be 'stolen' by the jar, so don't free it afterwards."
                            },
                            "source-position": {
                                "@filename": "../libsoup/cookies/soup-cookie-jar.h",
                                "@line": "74"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "type": {
                                    "@name": "none",
                                    "@c:type": "void"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "jar",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../libsoup/cookies/soup-cookie-jar.c",
                                        "@line": "569",
                                        "#text": "a #SoupCookieJar"
                                    },
                                    "type": {
                                        "@name": "CookieJar",
                                        "@c:type": "SoupCookieJar*"
                                    }
                                },
                                "parameter": [
                                    {
                                        "@name": "cookie",
                                        "@transfer-ownership": "full",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "../libsoup/cookies/soup-cookie-jar.c",
                                            "@line": "570",
                                            "#text": "a #SoupCookie"
                                        },
                                        "type": {
                                            "@name": "Cookie",
                                            "@c:type": "SoupCookie*"
                                        }
                                    },
                                    {
                                        "@name": "uri",
                                        "@transfer-ownership": "none",
                                        "@nullable": "1",
                                        "@allow-none": "1",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "../libsoup/cookies/soup-cookie-jar.c",
                                            "@line": "571",
                                            "#text": "the URI setting the cookie"
                                        },
                                        "type": {
                                            "@name": "GLib.Uri",
                                            "@c:type": "GUri*"
                                        }
                                    },
                                    {
                                        "@name": "first_party",
                                        "@transfer-ownership": "none",
                                        "@nullable": "1",
                                        "@allow-none": "1",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "../libsoup/cookies/soup-cookie-jar.c",
                                            "@line": "572",
                                            "#text": "the URI for the main document"
                                        },
                                        "type": {
                                            "@name": "GLib.Uri",
                                            "@c:type": "GUri*"
                                        }
                                    }
                                ]
                            }
                        },
                        {
                            "@name": "add_cookie_with_first_party",
                            "@c:identifier": "soup_cookie_jar_add_cookie_with_first_party",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../libsoup/cookies/soup-cookie-jar.c",
                                "@line": "698",
                                "#text": "Adds @cookie to @jar.\n\nEmits the [signal@CookieJar::changed] signal if we are modifying\nan existing cookie or adding a valid new cookie ('valid' means\nthat the cookie's expire date is not in the past).\n\n@first_party will be used to reject cookies coming from third party\nresources in case such a security policy is set in the @jar.\n\n@cookie will be 'stolen' by the jar, so don't free it afterwards.\n\nFor secure cookies to work properly you may want to use\n[method@CookieJar.add_cookie_full]."
                            },
                            "source-position": {
                                "@filename": "../libsoup/cookies/soup-cookie-jar.h",
                                "@line": "70"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "type": {
                                    "@name": "none",
                                    "@c:type": "void"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "jar",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../libsoup/cookies/soup-cookie-jar.c",
                                        "@line": "700",
                                        "#text": "a #SoupCookieJar"
                                    },
                                    "type": {
                                        "@name": "CookieJar",
                                        "@c:type": "SoupCookieJar*"
                                    }
                                },
                                "parameter": [
                                    {
                                        "@name": "first_party",
                                        "@transfer-ownership": "none",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "../libsoup/cookies/soup-cookie-jar.c",
                                            "@line": "701",
                                            "#text": "the URI for the main document"
                                        },
                                        "type": {
                                            "@name": "GLib.Uri",
                                            "@c:type": "GUri*"
                                        }
                                    },
                                    {
                                        "@name": "cookie",
                                        "@transfer-ownership": "full",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "../libsoup/cookies/soup-cookie-jar.c",
                                            "@line": "702",
                                            "#text": "a #SoupCookie"
                                        },
                                        "type": {
                                            "@name": "Cookie",
                                            "@c:type": "SoupCookie*"
                                        }
                                    }
                                ]
                            }
                        },
                        {
                            "@name": "all_cookies",
                            "@c:identifier": "soup_cookie_jar_all_cookies",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../libsoup/cookies/soup-cookie-jar.c",
                                "@line": "880",
                                "#text": "Constructs a [struct@GLib.List] with every cookie inside the @jar.\n\nThe cookies in the list are a copy of the original, so\nyou have to free them when you are done with them."
                            },
                            "source-position": {
                                "@filename": "../libsoup/cookies/soup-cookie-jar.h",
                                "@line": "82"
                            },
                            "return-value": {
                                "@transfer-ownership": "full",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "../libsoup/cookies/soup-cookie-jar.c",
                                    "@line": "889",
                                    "#text": "a #GSList\n  with all the cookies in the @jar."
                                },
                                "type": {
                                    "@name": "GLib.SList",
                                    "@c:type": "GSList*",
                                    "type": {
                                        "@name": "Cookie"
                                    }
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "jar",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../libsoup/cookies/soup-cookie-jar.c",
                                        "@line": "882",
                                        "#text": "a #SoupCookieJar"
                                    },
                                    "type": {
                                        "@name": "CookieJar",
                                        "@c:type": "SoupCookieJar*"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "delete_cookie",
                            "@c:identifier": "soup_cookie_jar_delete_cookie",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../libsoup/cookies/soup-cookie-jar.c",
                                "@line": "919",
                                "#text": "Deletes @cookie from @jar.\n\nEmits the [signal@CookieJar::changed] signal."
                            },
                            "source-position": {
                                "@filename": "../libsoup/cookies/soup-cookie-jar.h",
                                "@line": "79"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "type": {
                                    "@name": "none",
                                    "@c:type": "void"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "jar",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../libsoup/cookies/soup-cookie-jar.c",
                                        "@line": "921",
                                        "#text": "a #SoupCookieJar"
                                    },
                                    "type": {
                                        "@name": "CookieJar",
                                        "@c:type": "SoupCookieJar*"
                                    }
                                },
                                "parameter": {
                                    "@name": "cookie",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../libsoup/cookies/soup-cookie-jar.c",
                                        "@line": "922",
                                        "#text": "a #SoupCookie"
                                    },
                                    "type": {
                                        "@name": "Cookie",
                                        "@c:type": "SoupCookie*"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "get_accept_policy",
                            "@c:identifier": "soup_cookie_jar_get_accept_policy",
                            "@glib:get-property": "accept-policy",
                            "attribute": {
                                "@name": "org.gtk.Method.get_property",
                                "@value": "accept-policy"
                            },
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../libsoup/cookies/soup-cookie-jar.c",
                                "@line": "998",
                                "#text": "Gets @jar's [enum@CookieJarAcceptPolicy]."
                            },
                            "source-position": {
                                "@filename": "../libsoup/cookies/soup-cookie-jar.h",
                                "@line": "87"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "../libsoup/cookies/soup-cookie-jar.c",
                                    "@line": "1004",
                                    "#text": "the #SoupCookieJarAcceptPolicy set in the @jar"
                                },
                                "type": {
                                    "@name": "CookieJarAcceptPolicy",
                                    "@c:type": "SoupCookieJarAcceptPolicy"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "jar",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../libsoup/cookies/soup-cookie-jar.c",
                                        "@line": "1000",
                                        "#text": "a #SoupCookieJar"
                                    },
                                    "type": {
                                        "@name": "CookieJar",
                                        "@c:type": "SoupCookieJar*"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "get_cookie_list",
                            "@c:identifier": "soup_cookie_jar_get_cookie_list",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../libsoup/cookies/soup-cookie-jar.c",
                                "@line": "436",
                                "#text": "Retrieves the list of cookies that would be sent with a request to @uri\nas a [struct@GLib.List] of #SoupCookie objects.\n\nIf @for_http is %TRUE, the return value will include cookies marked\n\"HttpOnly\" (that is, cookies that the server wishes to keep hidden\nfrom client-side scripting operations such as the JavaScript\ndocument.cookies property). Since #SoupCookieJar sets the Cookie\nheader itself when making the actual HTTP request, you should\nalmost certainly be setting @for_http to %FALSE if you are calling\nthis."
                            },
                            "source-position": {
                                "@filename": "../libsoup/cookies/soup-cookie-jar.h",
                                "@line": "45"
                            },
                            "return-value": {
                                "@transfer-ownership": "full",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "../libsoup/cookies/soup-cookie-jar.c",
                                    "@line": "454",
                                    "#text": "a #GSList\n  with the cookies in the @jar that would be sent with a request to @uri."
                                },
                                "type": {
                                    "@name": "GLib.SList",
                                    "@c:type": "GSList*",
                                    "type": {
                                        "@name": "Cookie"
                                    }
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "jar",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../libsoup/cookies/soup-cookie-jar.c",
                                        "@line": "438",
                                        "#text": "a #SoupCookieJar"
                                    },
                                    "type": {
                                        "@name": "CookieJar",
                                        "@c:type": "SoupCookieJar*"
                                    }
                                },
                                "parameter": [
                                    {
                                        "@name": "uri",
                                        "@transfer-ownership": "none",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "../libsoup/cookies/soup-cookie-jar.c",
                                            "@line": "439",
                                            "#text": "a #GUri"
                                        },
                                        "type": {
                                            "@name": "GLib.Uri",
                                            "@c:type": "GUri*"
                                        }
                                    },
                                    {
                                        "@name": "for_http",
                                        "@transfer-ownership": "none",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "../libsoup/cookies/soup-cookie-jar.c",
                                            "@line": "440",
                                            "#text": "whether or not the return value is being passed directly\n  to an HTTP operation"
                                        },
                                        "type": {
                                            "@name": "gboolean",
                                            "@c:type": "gboolean"
                                        }
                                    }
                                ]
                            }
                        },
                        {
                            "@name": "get_cookie_list_with_same_site_info",
                            "@c:identifier": "soup_cookie_jar_get_cookie_list_with_same_site_info",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../libsoup/cookies/soup-cookie-jar.c",
                                "@line": "466",
                                "#text": "This is an extended version of [method@CookieJar.get_cookie_list] that\nprovides more information required to use SameSite cookies.\n\nSee the [SameSite cookies\nspec](https://tools.ietf.org/html/draft-ietf-httpbis-cookie-same-site-00) for\nmore detailed information."
                            },
                            "source-position": {
                                "@filename": "../libsoup/cookies/soup-cookie-jar.h",
                                "@line": "49"
                            },
                            "return-value": {
                                "@transfer-ownership": "full",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "../libsoup/cookies/soup-cookie-jar.c",
                                    "@line": "485",
                                    "#text": "a #GSList\n  with the cookies in the @jar that would be sent with a request to @uri."
                                },
                                "type": {
                                    "@name": "GLib.SList",
                                    "@c:type": "GSList*",
                                    "type": {
                                        "@name": "Cookie"
                                    }
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "jar",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../libsoup/cookies/soup-cookie-jar.c",
                                        "@line": "468",
                                        "#text": "a #SoupCookieJar"
                                    },
                                    "type": {
                                        "@name": "CookieJar",
                                        "@c:type": "SoupCookieJar*"
                                    }
                                },
                                "parameter": [
                                    {
                                        "@name": "uri",
                                        "@transfer-ownership": "none",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "../libsoup/cookies/soup-cookie-jar.c",
                                            "@line": "469",
                                            "#text": "a #GUri"
                                        },
                                        "type": {
                                            "@name": "GLib.Uri",
                                            "@c:type": "GUri*"
                                        }
                                    },
                                    {
                                        "@name": "top_level",
                                        "@transfer-ownership": "none",
                                        "@nullable": "1",
                                        "@allow-none": "1",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "../libsoup/cookies/soup-cookie-jar.c",
                                            "@line": "470",
                                            "#text": "a #GUri for the top level document"
                                        },
                                        "type": {
                                            "@name": "GLib.Uri",
                                            "@c:type": "GUri*"
                                        }
                                    },
                                    {
                                        "@name": "site_for_cookies",
                                        "@transfer-ownership": "none",
                                        "@nullable": "1",
                                        "@allow-none": "1",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "../libsoup/cookies/soup-cookie-jar.c",
                                            "@line": "471",
                                            "#text": "a #GUri indicating the origin to get cookies for"
                                        },
                                        "type": {
                                            "@name": "GLib.Uri",
                                            "@c:type": "GUri*"
                                        }
                                    },
                                    {
                                        "@name": "for_http",
                                        "@transfer-ownership": "none",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "../libsoup/cookies/soup-cookie-jar.c",
                                            "@line": "472",
                                            "#text": "whether or not the return value is being passed directly\n  to an HTTP operation"
                                        },
                                        "type": {
                                            "@name": "gboolean",
                                            "@c:type": "gboolean"
                                        }
                                    },
                                    {
                                        "@name": "is_safe_method",
                                        "@transfer-ownership": "none",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "../libsoup/cookies/soup-cookie-jar.c",
                                            "@line": "474",
                                            "#text": "if the HTTP method is safe, as defined by RFC 7231, ignored when @for_http is %FALSE"
                                        },
                                        "type": {
                                            "@name": "gboolean",
                                            "@c:type": "gboolean"
                                        }
                                    },
                                    {
                                        "@name": "is_top_level_navigation",
                                        "@transfer-ownership": "none",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "../libsoup/cookies/soup-cookie-jar.c",
                                            "@line": "475",
                                            "#text": "whether or not the HTTP request is part of\n  top level navigation"
                                        },
                                        "type": {
                                            "@name": "gboolean",
                                            "@c:type": "gboolean"
                                        }
                                    }
                                ]
                            }
                        },
                        {
                            "@name": "get_cookies",
                            "@c:identifier": "soup_cookie_jar_get_cookies",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../libsoup/cookies/soup-cookie-jar.c",
                                "@line": "391",
                                "#text": "Retrieves (in Cookie-header form) the list of cookies that would\nbe sent with a request to @uri.\n\nIf @for_http is %TRUE, the return value will include cookies marked\n\"HttpOnly\" (that is, cookies that the server wishes to keep hidden\nfrom client-side scripting operations such as the JavaScript\ndocument.cookies property). Since #SoupCookieJar sets the Cookie\nheader itself when making the actual HTTP request, you should\nalmost certainly be setting @for_http to %FALSE if you are calling\nthis."
                            },
                            "source-position": {
                                "@filename": "../libsoup/cookies/soup-cookie-jar.h",
                                "@line": "41"
                            },
                            "return-value": {
                                "@transfer-ownership": "full",
                                "@nullable": "1",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "../libsoup/cookies/soup-cookie-jar.c",
                                    "@line": "409",
                                    "#text": "the cookies, in string form, or %NULL if\n  there are no cookies for @uri."
                                },
                                "type": {
                                    "@name": "utf8",
                                    "@c:type": "char*"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "jar",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../libsoup/cookies/soup-cookie-jar.c",
                                        "@line": "393",
                                        "#text": "a #SoupCookieJar"
                                    },
                                    "type": {
                                        "@name": "CookieJar",
                                        "@c:type": "SoupCookieJar*"
                                    }
                                },
                                "parameter": [
                                    {
                                        "@name": "uri",
                                        "@transfer-ownership": "none",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "../libsoup/cookies/soup-cookie-jar.c",
                                            "@line": "394",
                                            "#text": "a #GUri"
                                        },
                                        "type": {
                                            "@name": "GLib.Uri",
                                            "@c:type": "GUri*"
                                        }
                                    },
                                    {
                                        "@name": "for_http",
                                        "@transfer-ownership": "none",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "../libsoup/cookies/soup-cookie-jar.c",
                                            "@line": "395",
                                            "#text": "whether or not the return value is being passed directly\n  to an HTTP operation"
                                        },
                                        "type": {
                                            "@name": "gboolean",
                                            "@c:type": "gboolean"
                                        }
                                    }
                                ]
                            }
                        },
                        {
                            "@name": "is_persistent",
                            "@c:identifier": "soup_cookie_jar_is_persistent",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../libsoup/cookies/soup-cookie-jar.c",
                                "@line": "1040",
                                "#text": "Gets whether @jar stores cookies persistenly."
                            },
                            "source-position": {
                                "@filename": "../libsoup/cookies/soup-cookie-jar.h",
                                "@line": "89"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "../libsoup/cookies/soup-cookie-jar.c",
                                    "@line": "1046",
                                    "#text": "%TRUE if @jar storage is persistent or %FALSE otherwise."
                                },
                                "type": {
                                    "@name": "gboolean",
                                    "@c:type": "gboolean"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "jar",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../libsoup/cookies/soup-cookie-jar.c",
                                        "@line": "1042",
                                        "#text": "a #SoupCookieJar"
                                    },
                                    "type": {
                                        "@name": "CookieJar",
                                        "@c:type": "SoupCookieJar*"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "set_accept_policy",
                            "@c:identifier": "soup_cookie_jar_set_accept_policy",
                            "@glib:set-property": "accept-policy",
                            "attribute": {
                                "@name": "org.gtk.Method.set_property",
                                "@value": "accept-policy"
                            },
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../libsoup/cookies/soup-cookie-jar.c",
                                "@line": "1017",
                                "#text": "Sets @policy as the cookie acceptance policy for @jar."
                            },
                            "source-position": {
                                "@filename": "../libsoup/cookies/soup-cookie-jar.h",
                                "@line": "84"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "type": {
                                    "@name": "none",
                                    "@c:type": "void"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "jar",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../libsoup/cookies/soup-cookie-jar.c",
                                        "@line": "1019",
                                        "#text": "a #SoupCookieJar"
                                    },
                                    "type": {
                                        "@name": "CookieJar",
                                        "@c:type": "SoupCookieJar*"
                                    }
                                },
                                "parameter": {
                                    "@name": "policy",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../libsoup/cookies/soup-cookie-jar.c",
                                        "@line": "1020",
                                        "#text": "a #SoupCookieJarAcceptPolicy"
                                    },
                                    "type": {
                                        "@name": "CookieJarAcceptPolicy",
                                        "@c:type": "SoupCookieJarAcceptPolicy"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "set_cookie",
                            "@c:identifier": "soup_cookie_jar_set_cookie",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../libsoup/cookies/soup-cookie-jar.c",
                                "@line": "726",
                                "#text": "Adds @cookie to @jar, exactly as though it had appeared in a\nSet-Cookie header returned from a request to @uri.\n\nKeep in mind that if the [enum@CookieJarAcceptPolicy] set is either\n%SOUP_COOKIE_JAR_ACCEPT_NO_THIRD_PARTY or\n%SOUP_COOKIE_JAR_ACCEPT_GRANDFATHERED_THIRD_PARTY you'll need to use\n[method@CookieJar.set_cookie_with_first_party], otherwise the jar\nwill have no way of knowing if the cookie is being set by a third\nparty or not."
                            },
                            "source-position": {
                                "@filename": "../libsoup/cookies/soup-cookie-jar.h",
                                "@line": "58"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "type": {
                                    "@name": "none",
                                    "@c:type": "void"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "jar",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../libsoup/cookies/soup-cookie-jar.c",
                                        "@line": "728",
                                        "#text": "a #SoupCookieJar"
                                    },
                                    "type": {
                                        "@name": "CookieJar",
                                        "@c:type": "SoupCookieJar*"
                                    }
                                },
                                "parameter": [
                                    {
                                        "@name": "uri",
                                        "@transfer-ownership": "none",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "../libsoup/cookies/soup-cookie-jar.c",
                                            "@line": "729",
                                            "#text": "the URI setting the cookie"
                                        },
                                        "type": {
                                            "@name": "GLib.Uri",
                                            "@c:type": "GUri*"
                                        }
                                    },
                                    {
                                        "@name": "cookie",
                                        "@transfer-ownership": "none",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "../libsoup/cookies/soup-cookie-jar.c",
                                            "@line": "730",
                                            "#text": "the stringified cookie to set"
                                        },
                                        "type": {
                                            "@name": "utf8",
                                            "@c:type": "const char*"
                                        }
                                    }
                                ]
                            }
                        },
                        {
                            "@name": "set_cookie_with_first_party",
                            "@c:identifier": "soup_cookie_jar_set_cookie_with_first_party",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../libsoup/cookies/soup-cookie-jar.c",
                                "@line": "770",
                                "#text": "Adds @cookie to @jar, exactly as though it had appeared in a\nSet-Cookie header returned from a request to @uri.\n\n@first_party will be used to reject cookies coming from third party resources\nin case such a security policy is set in the @jar."
                            },
                            "source-position": {
                                "@filename": "../libsoup/cookies/soup-cookie-jar.h",
                                "@line": "62"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "type": {
                                    "@name": "none",
                                    "@c:type": "void"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "jar",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../libsoup/cookies/soup-cookie-jar.c",
                                        "@line": "772",
                                        "#text": "a #SoupCookieJar"
                                    },
                                    "type": {
                                        "@name": "CookieJar",
                                        "@c:type": "SoupCookieJar*"
                                    }
                                },
                                "parameter": [
                                    {
                                        "@name": "uri",
                                        "@transfer-ownership": "none",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "../libsoup/cookies/soup-cookie-jar.c",
                                            "@line": "773",
                                            "#text": "the URI setting the cookie"
                                        },
                                        "type": {
                                            "@name": "GLib.Uri",
                                            "@c:type": "GUri*"
                                        }
                                    },
                                    {
                                        "@name": "first_party",
                                        "@transfer-ownership": "none",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "../libsoup/cookies/soup-cookie-jar.c",
                                            "@line": "774",
                                            "#text": "the URI for the main document"
                                        },
                                        "type": {
                                            "@name": "GLib.Uri",
                                            "@c:type": "GUri*"
                                        }
                                    },
                                    {
                                        "@name": "cookie",
                                        "@transfer-ownership": "none",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "../libsoup/cookies/soup-cookie-jar.c",
                                            "@line": "775",
                                            "#text": "the stringified cookie to set"
                                        },
                                        "type": {
                                            "@name": "utf8",
                                            "@c:type": "const char*"
                                        }
                                    }
                                ]
                            }
                        }
                    ],
                    "property": [
                        {
                            "@name": "accept-policy",
                            "@writable": "1",
                            "@transfer-ownership": "none",
                            "@setter": "set_accept_policy",
                            "@getter": "get_accept_policy",
                            "attribute": [
                                {
                                    "@name": "org.gtk.Property.get",
                                    "@value": "soup_cookie_jar_get_accept_policy"
                                },
                                {
                                    "@name": "org.gtk.Property.set",
                                    "@value": "soup_cookie_jar_set_accept_policy"
                                }
                            ],
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../libsoup/cookies/soup-cookie-jar.c",
                                "@line": "208",
                                "#text": "The policy the jar should follow to accept or reject cookies."
                            },
                            "type": {
                                "@name": "CookieJarAcceptPolicy"
                            }
                        },
                        {
                            "@name": "read-only",
                            "@writable": "1",
                            "@construct-only": "1",
                            "@transfer-ownership": "none",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../libsoup/cookies/soup-cookie-jar.c",
                                "@line": "195",
                                "#text": "Whether or not the cookie jar is read-only."
                            },
                            "type": {
                                "@name": "gboolean",
                                "@c:type": "gboolean"
                            }
                        }
                    ],
                    "field": {
                        "@name": "parent_instance",
                        "type": {
                            "@name": "GObject.Object",
                            "@c:type": "GObject"
                        }
                    },
                    "glib:signal": {
                        "@name": "changed",
                        "@when": "first",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "../libsoup/cookies/soup-cookie-jar.c",
                            "@line": "168",
                            "#text": "Emitted when @jar changes.\n\nIf a cookie has been added,\n@new_cookie will contain the newly-added cookie and\n@old_cookie will be %NULL. If a cookie has been deleted,\n@old_cookie will contain the to-be-deleted cookie and\n@new_cookie will be %NULL. If a cookie has been changed,\n@old_cookie will contain its old value, and @new_cookie its\nnew value."
                        },
                        "return-value": {
                            "@transfer-ownership": "none",
                            "type": {
                                "@name": "none",
                                "@c:type": "void"
                            }
                        },
                        "parameters": {
                            "parameter": [
                                {
                                    "@name": "old_cookie",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../libsoup/cookies/soup-cookie-jar.c",
                                        "@line": "171",
                                        "#text": "the old #SoupCookie value"
                                    },
                                    "type": {
                                        "@name": "Cookie"
                                    }
                                },
                                {
                                    "@name": "new_cookie",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../libsoup/cookies/soup-cookie-jar.c",
                                        "@line": "172",
                                        "#text": "the new #SoupCookie value"
                                    },
                                    "type": {
                                        "@name": "Cookie"
                                    }
                                }
                            ]
                        }
                    }
                },
                {
                    "@name": "CookieJarDB",
                    "@c:symbol-prefix": "cookie_jar_db",
                    "@c:type": "SoupCookieJarDB",
                    "@parent": "CookieJar",
                    "@final": "1",
                    "@glib:type-name": "SoupCookieJarDB",
                    "@glib:get-type": "soup_cookie_jar_db_get_type",
                    "@glib:type-struct": "CookieJarDBClass",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "../libsoup/cookies/soup-cookie-jar-db.c",
                        "@line": "21",
                        "#text": "Database-based Cookie Jar.\n\n#SoupCookieJarDB is a [class@CookieJar] that reads cookies from and writes\nthem to a sqlite database in the new Mozilla format.\n\n(This is identical to `SoupCookieJarSqlite` in\nlibsoup-gnome; it has just been moved into libsoup proper, and\nrenamed to avoid conflicting.)"
                    },
                    "source-position": {
                        "@filename": "../libsoup/cookies/soup-cookie-jar-db.h",
                        "@line": "14"
                    },
                    "implements": {
                        "@name": "SessionFeature"
                    },
                    "constructor": {
                        "@name": "new",
                        "@c:identifier": "soup_cookie_jar_db_new",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "../libsoup/cookies/soup-cookie-jar-db.c",
                            "@line": "110",
                            "#text": "Creates a #SoupCookieJarDB.\n\n@filename will be read in at startup to create an initial set of cookies. If\n@read_only is %FALSE, then the non-session cookies will be written to\n@filename when the [signal@CookieJar::changed] signal is emitted from the\njar. (If @read_only is %TRUE, then the cookie jar will only be used for this\nsession, and changes made to it will be lost when the jar is destroyed.)"
                        },
                        "source-position": {
                            "@filename": "../libsoup/cookies/soup-cookie-jar-db.h",
                            "@line": "17"
                        },
                        "return-value": {
                            "@transfer-ownership": "full",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../libsoup/cookies/soup-cookie-jar-db.c",
                                "@line": "123",
                                "#text": "the new #SoupCookieJar"
                            },
                            "type": {
                                "@name": "CookieJar",
                                "@c:type": "SoupCookieJar*"
                            }
                        },
                        "parameters": {
                            "parameter": [
                                {
                                    "@name": "filename",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../libsoup/cookies/soup-cookie-jar-db.c",
                                        "@line": "112",
                                        "#text": "the filename to read to/write from, or %NULL"
                                    },
                                    "type": {
                                        "@name": "utf8",
                                        "@c:type": "const char*"
                                    }
                                },
                                {
                                    "@name": "read_only",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../libsoup/cookies/soup-cookie-jar-db.c",
                                        "@line": "113",
                                        "#text": "%TRUE if @filename is read-only"
                                    },
                                    "type": {
                                        "@name": "gboolean",
                                        "@c:type": "gboolean"
                                    }
                                }
                            ]
                        }
                    },
                    "property": {
                        "@name": "filename",
                        "@writable": "1",
                        "@construct-only": "1",
                        "@transfer-ownership": "none",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "../libsoup/cookies/soup-cookie-jar-db.c",
                            "@line": "335",
                            "#text": "Cookie-storage filename."
                        },
                        "type": {
                            "@name": "utf8",
                            "@c:type": "gchar*"
                        }
                    }
                },
                {
                    "@name": "CookieJarText",
                    "@c:symbol-prefix": "cookie_jar_text",
                    "@c:type": "SoupCookieJarText",
                    "@parent": "CookieJar",
                    "@final": "1",
                    "@glib:type-name": "SoupCookieJarText",
                    "@glib:get-type": "soup_cookie_jar_text_get_type",
                    "@glib:type-struct": "CookieJarTextClass",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "../libsoup/cookies/soup-cookie-jar-text.c",
                        "@line": "19",
                        "#text": "Text-file-based (\"cookies.txt\") Cookie Jar\n\n#SoupCookieJarText is a [class@CookieJar] that reads cookies from and writes\nthem to a text file in format similar to Mozilla's \"cookies.txt\"."
                    },
                    "source-position": {
                        "@filename": "../libsoup/cookies/soup-cookie-jar-text.h",
                        "@line": "14"
                    },
                    "implements": {
                        "@name": "SessionFeature"
                    },
                    "constructor": {
                        "@name": "new",
                        "@c:identifier": "soup_cookie_jar_text_new",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "../libsoup/cookies/soup-cookie-jar-text.c",
                            "@line": "104",
                            "#text": "Creates a #SoupCookieJarText.\n\n@filename will be read in at startup to create an initial set of cookies. If\n@read_only is %FALSE, then the non-session cookies will be written to\n@filename when the [signal@CookieJar::changed] signal is emitted from the\njar. (If @read_only is %TRUE, then the cookie jar will only be used for this\nsession, and changes made to it will be lost when the jar is destroyed.)"
                        },
                        "source-position": {
                            "@filename": "../libsoup/cookies/soup-cookie-jar-text.h",
                            "@line": "17"
                        },
                        "return-value": {
                            "@transfer-ownership": "full",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../libsoup/cookies/soup-cookie-jar-text.c",
                                "@line": "117",
                                "#text": "the new #SoupCookieJar"
                            },
                            "type": {
                                "@name": "CookieJar",
                                "@c:type": "SoupCookieJar*"
                            }
                        },
                        "parameters": {
                            "parameter": [
                                {
                                    "@name": "filename",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../libsoup/cookies/soup-cookie-jar-text.c",
                                        "@line": "106",
                                        "#text": "the filename to read to/write from"
                                    },
                                    "type": {
                                        "@name": "utf8",
                                        "@c:type": "const char*"
                                    }
                                },
                                {
                                    "@name": "read_only",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../libsoup/cookies/soup-cookie-jar-text.c",
                                        "@line": "107",
                                        "#text": "%TRUE if @filename is read-only"
                                    },
                                    "type": {
                                        "@name": "gboolean",
                                        "@c:type": "gboolean"
                                    }
                                }
                            ]
                        }
                    },
                    "property": {
                        "@name": "filename",
                        "@writable": "1",
                        "@construct-only": "1",
                        "@transfer-ownership": "none",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "../libsoup/cookies/soup-cookie-jar-text.c",
                            "@line": "390",
                            "#text": "Cookie-storage filename."
                        },
                        "type": {
                            "@name": "utf8",
                            "@c:type": "gchar*"
                        }
                    }
                },
                {
                    "@name": "HSTSEnforcer",
                    "@c:symbol-prefix": "hsts_enforcer",
                    "@c:type": "SoupHSTSEnforcer",
                    "@parent": "GObject.Object",
                    "@glib:type-name": "SoupHSTSEnforcer",
                    "@glib:get-type": "soup_hsts_enforcer_get_type",
                    "@glib:type-struct": "HSTSEnforcerClass",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "../libsoup/hsts/soup-hsts-enforcer.c",
                        "@line": "21",
                        "#text": "Automatic HTTP Strict Transport Security enforcing for [class@Session].\n\nA #SoupHSTSEnforcer stores HSTS policies and enforces them when\nrequired. #SoupHSTSEnforcer implements [iface@SessionFeature], so you\ncan add an HSTS enforcer to a session with\n[method@Session.add_feature] or [method@Session.add_feature_by_type].\n\n#SoupHSTSEnforcer keeps track of all the HTTPS destinations that,\nwhen connected to, return the Strict-Transport-Security header with\nvalid values. #SoupHSTSEnforcer will forget those destinations\nupon expiry or when the server requests it.\n\nWhen the [class@Session] the #SoupHSTSEnforcer is attached to queues or\nrestarts a message, the #SoupHSTSEnforcer will rewrite the URI to HTTPS if\nthe destination is a known HSTS host and is contacted over an insecure\ntransport protocol (HTTP). Users of #SoupHSTSEnforcer are advised to listen\nto changes in the [property@Message:uri] property in order to be aware of\nchanges in the message URI.\n\nNote that #SoupHSTSEnforcer does not support any form of long-term\nHSTS policy persistence. See [class@HSTSEnforcerDB] for a persistent\nenforcer."
                    },
                    "source-position": {
                        "@filename": "../libsoup/hsts/soup-hsts-enforcer.h",
                        "@line": "44"
                    },
                    "implements": {
                        "@name": "SessionFeature"
                    },
                    "constructor": {
                        "@name": "new",
                        "@c:identifier": "soup_hsts_enforcer_new",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "../libsoup/hsts/soup-hsts-enforcer.c",
                            "@line": "185",
                            "#text": "Creates a new #SoupHSTSEnforcer.\n\nThe base #SoupHSTSEnforcer class does not support persistent storage of HSTS\npolicies, see [class@HSTSEnforcerDB] for that."
                        },
                        "source-position": {
                            "@filename": "../libsoup/hsts/soup-hsts-enforcer.h",
                            "@line": "47"
                        },
                        "return-value": {
                            "@transfer-ownership": "full",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../libsoup/hsts/soup-hsts-enforcer.c",
                                "@line": "193",
                                "#text": "a new #SoupHSTSEnforcer"
                            },
                            "type": {
                                "@name": "HSTSEnforcer",
                                "@c:type": "SoupHSTSEnforcer*"
                            }
                        }
                    },
                    "virtual-method": [
                        {
                            "@name": "changed",
                            "source-position": {
                                "@filename": "../libsoup/hsts/soup-hsts-enforcer.h",
                                "@line": "38"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "type": {
                                    "@name": "none",
                                    "@c:type": "void"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "enforcer",
                                    "@transfer-ownership": "none",
                                    "type": {
                                        "@name": "HSTSEnforcer",
                                        "@c:type": "SoupHSTSEnforcer*"
                                    }
                                },
                                "parameter": [
                                    {
                                        "@name": "old_policy",
                                        "@transfer-ownership": "none",
                                        "type": {
                                            "@name": "HSTSPolicy",
                                            "@c:type": "SoupHSTSPolicy*"
                                        }
                                    },
                                    {
                                        "@name": "new_policy",
                                        "@transfer-ownership": "none",
                                        "type": {
                                            "@name": "HSTSPolicy",
                                            "@c:type": "SoupHSTSPolicy*"
                                        }
                                    }
                                ]
                            }
                        },
                        {
                            "@name": "has_valid_policy",
                            "@invoker": "has_valid_policy",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../libsoup/hsts/soup-hsts-enforcer.c",
                                "@line": "604",
                                "#text": "Gets whether @hsts_enforcer has a currently valid policy for @domain."
                            },
                            "source-position": {
                                "@filename": "../libsoup/hsts/soup-hsts-enforcer.h",
                                "@line": "35"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "../libsoup/hsts/soup-hsts-enforcer.c",
                                    "@line": "611",
                                    "#text": "%TRUE if access to @domain should happen over HTTPS, false\n  otherwise."
                                },
                                "type": {
                                    "@name": "gboolean",
                                    "@c:type": "gboolean"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "hsts_enforcer",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../libsoup/hsts/soup-hsts-enforcer.c",
                                        "@line": "606",
                                        "#text": "a #SoupHSTSEnforcer"
                                    },
                                    "type": {
                                        "@name": "HSTSEnforcer",
                                        "@c:type": "SoupHSTSEnforcer*"
                                    }
                                },
                                "parameter": {
                                    "@name": "domain",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../libsoup/hsts/soup-hsts-enforcer.c",
                                        "@line": "607",
                                        "#text": "a domain."
                                    },
                                    "type": {
                                        "@name": "utf8",
                                        "@c:type": "const char*"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "is_persistent",
                            "@invoker": "is_persistent",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../libsoup/hsts/soup-hsts-enforcer.c",
                                "@line": "588",
                                "#text": "Gets whether @hsts_enforcer stores policies persistenly."
                            },
                            "source-position": {
                                "@filename": "../libsoup/hsts/soup-hsts-enforcer.h",
                                "@line": "34"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "../libsoup/hsts/soup-hsts-enforcer.c",
                                    "@line": "594",
                                    "#text": "%TRUE if @hsts_enforcer storage is persistent or %FALSE otherwise."
                                },
                                "type": {
                                    "@name": "gboolean",
                                    "@c:type": "gboolean"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "hsts_enforcer",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../libsoup/hsts/soup-hsts-enforcer.c",
                                        "@line": "590",
                                        "#text": "a #SoupHSTSEnforcer"
                                    },
                                    "type": {
                                        "@name": "HSTSEnforcer",
                                        "@c:type": "SoupHSTSEnforcer*"
                                    }
                                }
                            }
                        }
                    ],
                    "method": [
                        {
                            "@name": "get_domains",
                            "@c:identifier": "soup_hsts_enforcer_get_domains",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../libsoup/hsts/soup-hsts-enforcer.c",
                                "@line": "646",
                                "#text": "Gets a list of domains for which there are policies in @enforcer."
                            },
                            "source-position": {
                                "@filename": "../libsoup/hsts/soup-hsts-enforcer.h",
                                "@line": "62"
                            },
                            "return-value": {
                                "@transfer-ownership": "full",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "../libsoup/hsts/soup-hsts-enforcer.c",
                                    "@line": "653",
                                    "#text": "a newly allocated\n  list of domains. Use [func@GLib.List.free_full] and [func@GLib.free] to free the\n  list."
                                },
                                "type": {
                                    "@name": "GLib.List",
                                    "@c:type": "GList*",
                                    "type": {
                                        "@name": "utf8"
                                    }
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "hsts_enforcer",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../libsoup/hsts/soup-hsts-enforcer.c",
                                        "@line": "648",
                                        "#text": "a #SoupHSTSEnforcer"
                                    },
                                    "type": {
                                        "@name": "HSTSEnforcer",
                                        "@c:type": "SoupHSTSEnforcer*"
                                    }
                                },
                                "parameter": {
                                    "@name": "session_policies",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../libsoup/hsts/soup-hsts-enforcer.c",
                                        "@line": "649",
                                        "#text": "whether to include session policies"
                                    },
                                    "type": {
                                        "@name": "gboolean",
                                        "@c:type": "gboolean"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "get_policies",
                            "@c:identifier": "soup_hsts_enforcer_get_policies",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../libsoup/hsts/soup-hsts-enforcer.c",
                                "@line": "682",
                                "#text": "Gets a list with the policies in @enforcer."
                            },
                            "source-position": {
                                "@filename": "../libsoup/hsts/soup-hsts-enforcer.h",
                                "@line": "66"
                            },
                            "return-value": {
                                "@transfer-ownership": "full",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "../libsoup/hsts/soup-hsts-enforcer.c",
                                    "@line": "689",
                                    "#text": "a newly\n  allocated list of policies. Use [func@GLib.List.free_full] and\n  [method@HSTSPolicy.free] to free the list."
                                },
                                "type": {
                                    "@name": "GLib.List",
                                    "@c:type": "GList*",
                                    "type": {
                                        "@name": "HSTSPolicy"
                                    }
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "hsts_enforcer",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../libsoup/hsts/soup-hsts-enforcer.c",
                                        "@line": "684",
                                        "#text": "a #SoupHSTSEnforcer"
                                    },
                                    "type": {
                                        "@name": "HSTSEnforcer",
                                        "@c:type": "SoupHSTSEnforcer*"
                                    }
                                },
                                "parameter": {
                                    "@name": "session_policies",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../libsoup/hsts/soup-hsts-enforcer.c",
                                        "@line": "685",
                                        "#text": "whether to include session policies"
                                    },
                                    "type": {
                                        "@name": "gboolean",
                                        "@c:type": "gboolean"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "has_valid_policy",
                            "@c:identifier": "soup_hsts_enforcer_has_valid_policy",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../libsoup/hsts/soup-hsts-enforcer.c",
                                "@line": "604",
                                "#text": "Gets whether @hsts_enforcer has a currently valid policy for @domain."
                            },
                            "source-position": {
                                "@filename": "../libsoup/hsts/soup-hsts-enforcer.h",
                                "@line": "51"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "../libsoup/hsts/soup-hsts-enforcer.c",
                                    "@line": "611",
                                    "#text": "%TRUE if access to @domain should happen over HTTPS, false\n  otherwise."
                                },
                                "type": {
                                    "@name": "gboolean",
                                    "@c:type": "gboolean"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "hsts_enforcer",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../libsoup/hsts/soup-hsts-enforcer.c",
                                        "@line": "606",
                                        "#text": "a #SoupHSTSEnforcer"
                                    },
                                    "type": {
                                        "@name": "HSTSEnforcer",
                                        "@c:type": "SoupHSTSEnforcer*"
                                    }
                                },
                                "parameter": {
                                    "@name": "domain",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../libsoup/hsts/soup-hsts-enforcer.c",
                                        "@line": "607",
                                        "#text": "a domain."
                                    },
                                    "type": {
                                        "@name": "utf8",
                                        "@c:type": "const char*"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "is_persistent",
                            "@c:identifier": "soup_hsts_enforcer_is_persistent",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../libsoup/hsts/soup-hsts-enforcer.c",
                                "@line": "588",
                                "#text": "Gets whether @hsts_enforcer stores policies persistenly."
                            },
                            "source-position": {
                                "@filename": "../libsoup/hsts/soup-hsts-enforcer.h",
                                "@line": "49"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "../libsoup/hsts/soup-hsts-enforcer.c",
                                    "@line": "594",
                                    "#text": "%TRUE if @hsts_enforcer storage is persistent or %FALSE otherwise."
                                },
                                "type": {
                                    "@name": "gboolean",
                                    "@c:type": "gboolean"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "hsts_enforcer",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../libsoup/hsts/soup-hsts-enforcer.c",
                                        "@line": "590",
                                        "#text": "a #SoupHSTSEnforcer"
                                    },
                                    "type": {
                                        "@name": "HSTSEnforcer",
                                        "@c:type": "SoupHSTSEnforcer*"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "set_policy",
                            "@c:identifier": "soup_hsts_enforcer_set_policy",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../libsoup/hsts/soup-hsts-enforcer.c",
                                "@line": "314",
                                "#text": "Sets @policy to @hsts_enforcer.\n\nIf @policy is expired, any existing HSTS policy for its host will be removed\ninstead. If a policy existed for this host, it will be replaced. Otherwise,\nthe new policy will be inserted. If the policy is a session policy, that is,\none created with [ctor@HSTSPolicy.new_session_policy], the policy will not\nexpire and will be enforced during the lifetime of @hsts_enforcer's\n[class@Session]."
                            },
                            "source-position": {
                                "@filename": "../libsoup/hsts/soup-hsts-enforcer.h",
                                "@line": "58"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "type": {
                                    "@name": "none",
                                    "@c:type": "void"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "hsts_enforcer",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../libsoup/hsts/soup-hsts-enforcer.c",
                                        "@line": "316",
                                        "#text": "a #SoupHSTSEnforcer"
                                    },
                                    "type": {
                                        "@name": "HSTSEnforcer",
                                        "@c:type": "SoupHSTSEnforcer*"
                                    }
                                },
                                "parameter": {
                                    "@name": "policy",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../libsoup/hsts/soup-hsts-enforcer.c",
                                        "@line": "317",
                                        "#text": "the policy of the HSTS host"
                                    },
                                    "type": {
                                        "@name": "HSTSPolicy",
                                        "@c:type": "SoupHSTSPolicy*"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "set_session_policy",
                            "@c:identifier": "soup_hsts_enforcer_set_session_policy",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../libsoup/hsts/soup-hsts-enforcer.c",
                                "@line": "364",
                                "#text": "Sets a session policy for @domain.\n\nA session policy is a policy that is permanent to the lifetime of\n@hsts_enforcer's [class@Session] and doesn't expire."
                            },
                            "source-position": {
                                "@filename": "../libsoup/hsts/soup-hsts-enforcer.h",
                                "@line": "54"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "type": {
                                    "@name": "none",
                                    "@c:type": "void"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "hsts_enforcer",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../libsoup/hsts/soup-hsts-enforcer.c",
                                        "@line": "366",
                                        "#text": "a #SoupHSTSEnforcer"
                                    },
                                    "type": {
                                        "@name": "HSTSEnforcer",
                                        "@c:type": "SoupHSTSEnforcer*"
                                    }
                                },
                                "parameter": [
                                    {
                                        "@name": "domain",
                                        "@transfer-ownership": "none",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "../libsoup/hsts/soup-hsts-enforcer.c",
                                            "@line": "367",
                                            "#text": "policy domain or hostname"
                                        },
                                        "type": {
                                            "@name": "utf8",
                                            "@c:type": "const char*"
                                        }
                                    },
                                    {
                                        "@name": "include_subdomains",
                                        "@transfer-ownership": "none",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "../libsoup/hsts/soup-hsts-enforcer.c",
                                            "@line": "368",
                                            "#text": "%TRUE if the policy applies on sub domains"
                                        },
                                        "type": {
                                            "@name": "gboolean",
                                            "@c:type": "gboolean"
                                        }
                                    }
                                ]
                            }
                        }
                    ],
                    "field": {
                        "@name": "parent_instance",
                        "type": {
                            "@name": "GObject.Object",
                            "@c:type": "GObject"
                        }
                    },
                    "glib:signal": {
                        "@name": "changed",
                        "@when": "first",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "../libsoup/hsts/soup-hsts-enforcer.c",
                            "@line": "154",
                            "#text": "Emitted when @hsts_enforcer changes.\n\nIf a policy has been added,\n@new_policy will contain the newly-added policy and\n@old_policy will be %NULL. If a policy has been deleted,\n@old_policy will contain the to-be-deleted policy and\n@new_policy will be %NULL. If a policy has been changed,\n@old_policy will contain its old value, and @new_policy its\nnew value.\n\nNote that you shouldn't modify the policies from a callback to\nthis signal."
                        },
                        "return-value": {
                            "@transfer-ownership": "none",
                            "type": {
                                "@name": "none",
                                "@c:type": "void"
                            }
                        },
                        "parameters": {
                            "parameter": [
                                {
                                    "@name": "old_policy",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../libsoup/hsts/soup-hsts-enforcer.c",
                                        "@line": "157",
                                        "#text": "the old #SoupHSTSPolicy value"
                                    },
                                    "type": {
                                        "@name": "HSTSPolicy"
                                    }
                                },
                                {
                                    "@name": "new_policy",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../libsoup/hsts/soup-hsts-enforcer.c",
                                        "@line": "158",
                                        "#text": "the new #SoupHSTSPolicy value"
                                    },
                                    "type": {
                                        "@name": "HSTSPolicy"
                                    }
                                }
                            ]
                        }
                    }
                },
                {
                    "@name": "HSTSEnforcerDB",
                    "@c:symbol-prefix": "hsts_enforcer_db",
                    "@c:type": "SoupHSTSEnforcerDB",
                    "@parent": "HSTSEnforcer",
                    "@final": "1",
                    "@glib:type-name": "SoupHSTSEnforcerDB",
                    "@glib:get-type": "soup_hsts_enforcer_db_get_type",
                    "@glib:type-struct": "HSTSEnforcerDBClass",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "../libsoup/hsts/soup-hsts-enforcer-db.c",
                        "@line": "21",
                        "#text": "Persistent HTTP Strict Transport Security enforcer.\n\n#SoupHSTSEnforcerDB is a [class@HSTSEnforcer] that uses a SQLite\ndatabase as a backend for persistency."
                    },
                    "source-position": {
                        "@filename": "../libsoup/hsts/soup-hsts-enforcer-db.h",
                        "@line": "15"
                    },
                    "implements": {
                        "@name": "SessionFeature"
                    },
                    "constructor": {
                        "@name": "new",
                        "@c:identifier": "soup_hsts_enforcer_db_new",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "../libsoup/hsts/soup-hsts-enforcer-db.c",
                            "@line": "103",
                            "#text": "Creates a #SoupHSTSEnforcerDB.\n\n@filename will be read in during the initialization of a\n#SoupHSTSEnforcerDB, in order to create an initial set of HSTS\npolicies. If the file doesn't exist, a new database will be created\nand initialized. Changes to the policies during the lifetime of a\n#SoupHSTSEnforcerDB will be written to @filename when\n[signal@HSTSEnforcer::changed] is emitted."
                        },
                        "source-position": {
                            "@filename": "../libsoup/hsts/soup-hsts-enforcer-db.h",
                            "@line": "18"
                        },
                        "return-value": {
                            "@transfer-ownership": "full",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../libsoup/hsts/soup-hsts-enforcer-db.c",
                                "@line": "116",
                                "#text": "the new #SoupHSTSEnforcer"
                            },
                            "type": {
                                "@name": "HSTSEnforcer",
                                "@c:type": "SoupHSTSEnforcer*"
                            }
                        },
                        "parameters": {
                            "parameter": {
                                "@name": "filename",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "../libsoup/hsts/soup-hsts-enforcer-db.c",
                                    "@line": "105",
                                    "#text": "the filename of the database to read/write from."
                                },
                                "type": {
                                    "@name": "utf8",
                                    "@c:type": "const char*"
                                }
                            }
                        }
                    },
                    "property": {
                        "@name": "filename",
                        "@writable": "1",
                        "@construct-only": "1",
                        "@transfer-ownership": "none",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "../libsoup/hsts/soup-hsts-enforcer-db.c",
                            "@line": "329",
                            "#text": "The filename of the SQLite database where HSTS policies are stored."
                        },
                        "type": {
                            "@name": "utf8",
                            "@c:type": "gchar*"
                        }
                    }
                },
                {
                    "@name": "Logger",
                    "@c:symbol-prefix": "logger",
                    "@c:type": "SoupLogger",
                    "@parent": "GObject.Object",
                    "@final": "1",
                    "@glib:type-name": "SoupLogger",
                    "@glib:get-type": "soup_logger_get_type",
                    "@glib:type-struct": "LoggerClass",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "../libsoup/soup-logger.c",
                        "@line": "25",
                        "#text": "Debug logging support\n\n#SoupLogger watches a [class@Session] and logs the HTTP traffic that\nit generates, for debugging purposes. Many applications use an\nenvironment variable to determine whether or not to use\n#SoupLogger, and to determine the amount of debugging output.\n\nTo use #SoupLogger, first create a logger with [ctor@Logger.new], optionally\nconfigure it with [method@Logger.set_request_filter],\n[method@Logger.set_response_filter], and [method@Logger.set_printer], and\nthen attach it to a session (or multiple sessions) with\n[method@Session.add_feature].\n\nBy default, the debugging output is sent to `stdout`, and looks something\nlike:\n\n```\n> POST /unauth HTTP/1.1\n> Soup-Debug-Timestamp: 1200171744\n> Soup-Debug: SoupSession 1 (0x612190), SoupMessage 1 (0x617000), GSocket 1 (0x612220)\n> Host: localhost\n> Content-Type: text/plain\n> Connection: close\n\n&lt; HTTP/1.1 201 Created\n&lt; Soup-Debug-Timestamp: 1200171744\n&lt; Soup-Debug: SoupMessage 1 (0x617000)\n&lt; Date: Sun, 12 Jan 2008 21:02:24 GMT\n&lt; Content-Length: 0\n```\n\nThe `Soup-Debug-Timestamp` line gives the time (as a `time_t`) when the\nrequest was sent, or the response fully received.\n\nThe `Soup-Debug` line gives further debugging information about the\n[class@Session], [class@Message], and [class@Gio.Socket] involved; the hex\nnumbers are the addresses of the objects in question (which may be useful if\nyou are running in a debugger). The decimal IDs are simply counters that\nuniquely identify objects across the lifetime of the #SoupLogger. In\nparticular, this can be used to identify when multiple messages are sent\nacross the same connection.\n\nCurrently, the request half of the message is logged just before\nthe first byte of the request gets written to the network (from the\n[signal@Message::starting] signal).\n\nThe response is logged just after the last byte of the response body is read\nfrom the network (from the [signal@Message::got-body] or\n[signal@Message::got-informational] signal), which means that the\n[signal@Message::got-headers] signal, and anything triggered off it (such as\n#SoupMessage::authenticate) will be emitted *before* the response headers are\nactually logged.\n\nIf the response doesn't happen to trigger the [signal@Message::got-body] nor\n[signal@Message::got-informational] signals due to, for example, a\ncancellation before receiving the last byte of the response body, the\nresponse will still be logged on the event of the [signal@Message::finished]\nsignal."
                    },
                    "source-position": {
                        "@filename": "../libsoup/soup-logger.h",
                        "@line": "14"
                    },
                    "implements": {
                        "@name": "SessionFeature"
                    },
                    "constructor": {
                        "@name": "new",
                        "@c:identifier": "soup_logger_new",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "../libsoup/soup-logger.c",
                            "@line": "370",
                            "#text": "Creates a new #SoupLogger with the given debug level.\n\nIf you need finer control over what message parts are and aren't\nlogged, use [method@Logger.set_request_filter] and\n[method@Logger.set_response_filter]."
                        },
                        "source-position": {
                            "@filename": "../libsoup/soup-logger.h",
                            "@line": "34"
                        },
                        "return-value": {
                            "@transfer-ownership": "full",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../libsoup/soup-logger.c",
                                "@line": "380",
                                "#text": "a new #SoupLogger"
                            },
                            "type": {
                                "@name": "Logger",
                                "@c:type": "SoupLogger*"
                            }
                        },
                        "parameters": {
                            "parameter": {
                                "@name": "level",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "../libsoup/soup-logger.c",
                                    "@line": "372",
                                    "#text": "the debug level"
                                },
                                "type": {
                                    "@name": "LoggerLogLevel",
                                    "@c:type": "SoupLoggerLogLevel"
                                }
                            }
                        }
                    },
                    "method": [
                        {
                            "@name": "get_max_body_size",
                            "@c:identifier": "soup_logger_get_max_body_size",
                            "@glib:get-property": "max-body-size",
                            "attribute": {
                                "@name": "org.gtk.Method.get_property",
                                "@value": "max-body-size"
                            },
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../libsoup/soup-logger.c",
                                "@line": "520",
                                "#text": "Get the maximum body size for @logger."
                            },
                            "source-position": {
                                "@filename": "../libsoup/soup-logger.h",
                                "@line": "59"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "../libsoup/soup-logger.c",
                                    "@line": "526",
                                    "#text": "the maximum body size, or -1 if unlimited"
                                },
                                "type": {
                                    "@name": "gint",
                                    "@c:type": "int"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "logger",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../libsoup/soup-logger.c",
                                        "@line": "522",
                                        "#text": "a #SoupLogger"
                                    },
                                    "type": {
                                        "@name": "Logger",
                                        "@c:type": "SoupLogger*"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "set_max_body_size",
                            "@c:identifier": "soup_logger_set_max_body_size",
                            "@glib:set-property": "max-body-size",
                            "attribute": {
                                "@name": "org.gtk.Method.set_property",
                                "@value": "max-body-size"
                            },
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../libsoup/soup-logger.c",
                                "@line": "505",
                                "#text": "Sets the maximum body size for @logger (-1 means no limit)."
                            },
                            "source-position": {
                                "@filename": "../libsoup/soup-logger.h",
                                "@line": "55"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "type": {
                                    "@name": "none",
                                    "@c:type": "void"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "logger",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../libsoup/soup-logger.c",
                                        "@line": "507",
                                        "#text": "a #SoupLogger"
                                    },
                                    "type": {
                                        "@name": "Logger",
                                        "@c:type": "SoupLogger*"
                                    }
                                },
                                "parameter": {
                                    "@name": "max_body_size",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../libsoup/soup-logger.c",
                                        "@line": "508",
                                        "#text": "the maximum body size to log"
                                    },
                                    "type": {
                                        "@name": "gint",
                                        "@c:type": "int"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "set_printer",
                            "@c:identifier": "soup_logger_set_printer",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../libsoup/soup-logger.c",
                                "@line": "482",
                                "#text": "Sets up an alternate log printing routine, if you don't want\nthe log to go to `stdout`."
                            },
                            "source-position": {
                                "@filename": "../libsoup/soup-logger.h",
                                "@line": "49"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "type": {
                                    "@name": "none",
                                    "@c:type": "void"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "logger",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../libsoup/soup-logger.c",
                                        "@line": "484",
                                        "#text": "a #SoupLogger"
                                    },
                                    "type": {
                                        "@name": "Logger",
                                        "@c:type": "SoupLogger*"
                                    }
                                },
                                "parameter": [
                                    {
                                        "@name": "printer",
                                        "@transfer-ownership": "none",
                                        "@scope": "notified",
                                        "@closure": "1",
                                        "@destroy": "2",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "../libsoup/soup-logger.c",
                                            "@line": "485",
                                            "#text": "the callback for printing logging output"
                                        },
                                        "type": {
                                            "@name": "LoggerPrinter",
                                            "@c:type": "SoupLoggerPrinter"
                                        }
                                    },
                                    {
                                        "@name": "printer_data",
                                        "@transfer-ownership": "none",
                                        "@nullable": "1",
                                        "@allow-none": "1",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "../libsoup/soup-logger.c",
                                            "@line": "486",
                                            "#text": "data to pass to the callback"
                                        },
                                        "type": {
                                            "@name": "gpointer",
                                            "@c:type": "gpointer"
                                        }
                                    },
                                    {
                                        "@name": "destroy",
                                        "@transfer-ownership": "none",
                                        "@scope": "async",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "../libsoup/soup-logger.c",
                                            "@line": "487",
                                            "#text": "a #GDestroyNotify to free @printer_data"
                                        },
                                        "type": {
                                            "@name": "GLib.DestroyNotify",
                                            "@c:type": "GDestroyNotify"
                                        }
                                    }
                                ]
                            }
                        },
                        {
                            "@name": "set_request_filter",
                            "@c:identifier": "soup_logger_set_request_filter",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../libsoup/soup-logger.c",
                                "@line": "405",
                                "#text": "Sets up a filter to determine the log level for a given request.\n\nFor each HTTP request @logger will invoke @request_filter to\ndetermine how much (if any) of that request to log. (If you do not\nset a request filter, @logger will just always log requests at the\nlevel passed to [ctor@Logger.new].)"
                            },
                            "source-position": {
                                "@filename": "../libsoup/soup-logger.h",
                                "@line": "38"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "type": {
                                    "@name": "none",
                                    "@c:type": "void"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "logger",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../libsoup/soup-logger.c",
                                        "@line": "407",
                                        "#text": "a #SoupLogger"
                                    },
                                    "type": {
                                        "@name": "Logger",
                                        "@c:type": "SoupLogger*"
                                    }
                                },
                                "parameter": [
                                    {
                                        "@name": "request_filter",
                                        "@transfer-ownership": "none",
                                        "@scope": "notified",
                                        "@closure": "1",
                                        "@destroy": "2",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "../libsoup/soup-logger.c",
                                            "@line": "408",
                                            "#text": "the callback for request debugging"
                                        },
                                        "type": {
                                            "@name": "LoggerFilter",
                                            "@c:type": "SoupLoggerFilter"
                                        }
                                    },
                                    {
                                        "@name": "filter_data",
                                        "@transfer-ownership": "none",
                                        "@nullable": "1",
                                        "@allow-none": "1",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "../libsoup/soup-logger.c",
                                            "@line": "409",
                                            "#text": "data to pass to the callback"
                                        },
                                        "type": {
                                            "@name": "gpointer",
                                            "@c:type": "gpointer"
                                        }
                                    },
                                    {
                                        "@name": "destroy",
                                        "@transfer-ownership": "none",
                                        "@scope": "async",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "../libsoup/soup-logger.c",
                                            "@line": "410",
                                            "#text": "a #GDestroyNotify to free @filter_data"
                                        },
                                        "type": {
                                            "@name": "GLib.DestroyNotify",
                                            "@c:type": "GDestroyNotify"
                                        }
                                    }
                                ]
                            }
                        },
                        {
                            "@name": "set_response_filter",
                            "@c:identifier": "soup_logger_set_response_filter",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../libsoup/soup-logger.c",
                                "@line": "432",
                                "#text": "Sets up a filter to determine the log level for a given response.\n\nFor each HTTP response @logger will invoke @response_filter to\ndetermine how much (if any) of that response to log. (If you do not\nset a response filter, @logger will just always log responses at\nthe level passed to [ctor@Logger.new].)"
                            },
                            "source-position": {
                                "@filename": "../libsoup/soup-logger.h",
                                "@line": "43"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "type": {
                                    "@name": "none",
                                    "@c:type": "void"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "logger",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../libsoup/soup-logger.c",
                                        "@line": "434",
                                        "#text": "a #SoupLogger"
                                    },
                                    "type": {
                                        "@name": "Logger",
                                        "@c:type": "SoupLogger*"
                                    }
                                },
                                "parameter": [
                                    {
                                        "@name": "response_filter",
                                        "@transfer-ownership": "none",
                                        "@scope": "notified",
                                        "@closure": "1",
                                        "@destroy": "2",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "../libsoup/soup-logger.c",
                                            "@line": "435",
                                            "#text": "the callback for response debugging"
                                        },
                                        "type": {
                                            "@name": "LoggerFilter",
                                            "@c:type": "SoupLoggerFilter"
                                        }
                                    },
                                    {
                                        "@name": "filter_data",
                                        "@transfer-ownership": "none",
                                        "@nullable": "1",
                                        "@allow-none": "1",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "../libsoup/soup-logger.c",
                                            "@line": "436",
                                            "#text": "data to pass to the callback"
                                        },
                                        "type": {
                                            "@name": "gpointer",
                                            "@c:type": "gpointer"
                                        }
                                    },
                                    {
                                        "@name": "destroy",
                                        "@transfer-ownership": "none",
                                        "@scope": "async",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "../libsoup/soup-logger.c",
                                            "@line": "437",
                                            "#text": "a #GDestroyNotify to free @filter_data"
                                        },
                                        "type": {
                                            "@name": "GLib.DestroyNotify",
                                            "@c:type": "GDestroyNotify"
                                        }
                                    }
                                ]
                            }
                        }
                    ],
                    "property": [
                        {
                            "@name": "level",
                            "@writable": "1",
                            "@transfer-ownership": "none",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../libsoup/soup-logger.c",
                                "@line": "325",
                                "#text": "The level of logging output."
                            },
                            "type": {
                                "@name": "LoggerLogLevel"
                            }
                        },
                        {
                            "@name": "max-body-size",
                            "@writable": "1",
                            "@construct": "1",
                            "@transfer-ownership": "none",
                            "@setter": "set_max_body_size",
                            "@getter": "get_max_body_size",
                            "attribute": [
                                {
                                    "@name": "org.gtk.Property.get",
                                    "@value": "soup_logger_get_max_body_size"
                                },
                                {
                                    "@name": "org.gtk.Property.set",
                                    "@value": "soup_logger_set_max_body_size"
                                }
                            ],
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../libsoup/soup-logger.c",
                                "@line": "338",
                                "#text": "If [property@Logger:level] is %SOUP_LOGGER_LOG_BODY, this gives\nthe maximum number of bytes of the body that will be logged.\n(-1 means \"no limit\".)"
                            },
                            "type": {
                                "@name": "gint",
                                "@c:type": "gint"
                            }
                        }
                    ]
                },
                {
                    "@name": "Message",
                    "@c:symbol-prefix": "message",
                    "@c:type": "SoupMessage",
                    "@parent": "GObject.Object",
                    "@final": "1",
                    "@glib:type-name": "SoupMessage",
                    "@glib:get-type": "soup_message_get_type",
                    "@glib:type-struct": "MessageClass",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "../libsoup/soup-message.c",
                        "@line": "23",
                        "#text": "Represents an HTTP message being sent or received.\n\nA #SoupMessage represents an HTTP message that is being sent or\nreceived.\n\nYou would create a #SoupMessage with [ctor@Message.new] or\n[ctor@Message.new_from_uri], set up its fields appropriately, and send it.\n\n[property@Message:status-code] will normally be a [enum@Status] value, eg,\n%SOUP_STATUS_OK, though of course it might actually be an unknown status\ncode. [property@Message:reason-phrase] is the actual text returned from the\nserver, which may or may not correspond to the \"standard\" description of\n@status_code. At any rate, it is almost certainly not localized, and not very\ndescriptive even if it is in the user's language; you should not use\n[property@Message:reason-phrase] in user-visible messages. Rather, you should\nlook at [property@Message:status-code], and determine an end-user-appropriate\nmessage based on that and on what you were trying to do.\n\nNote that libsoup's terminology here does not quite match the HTTP\nspecification: in RFC 2616, an \"HTTP-message\" is *either* a Request, *or* a\nResponse. In libsoup, a #SoupMessage combines both the request and the\nresponse."
                    },
                    "source-position": {
                        "@filename": "../libsoup/soup-message.h",
                        "@line": "18"
                    },
                    "constructor": [
                        {
                            "@name": "new",
                            "@c:identifier": "soup_message_new",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../libsoup/soup-message.c",
                                "@line": "936",
                                "#text": "Creates a new empty #SoupMessage, which will connect to @uri."
                            },
                            "source-position": {
                                "@filename": "../libsoup/soup-message.h",
                                "@line": "21"
                            },
                            "return-value": {
                                "@transfer-ownership": "full",
                                "@nullable": "1",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "../libsoup/soup-message.c",
                                    "@line": "943",
                                    "#text": "the new #SoupMessage (or %NULL if @uri\n  could not be parsed)."
                                },
                                "type": {
                                    "@name": "Message",
                                    "@c:type": "SoupMessage*"
                                }
                            },
                            "parameters": {
                                "parameter": [
                                    {
                                        "@name": "method",
                                        "@transfer-ownership": "none",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "../libsoup/soup-message.c",
                                            "@line": "938",
                                            "#text": "the HTTP method for the created request"
                                        },
                                        "type": {
                                            "@name": "utf8",
                                            "@c:type": "const char*"
                                        }
                                    },
                                    {
                                        "@name": "uri_string",
                                        "@transfer-ownership": "none",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "../libsoup/soup-message.c",
                                            "@line": "939",
                                            "#text": "the destination endpoint (as a string)"
                                        },
                                        "type": {
                                            "@name": "utf8",
                                            "@c:type": "const char*"
                                        }
                                    }
                                ]
                            }
                        },
                        {
                            "@name": "new_from_encoded_form",
                            "@c:identifier": "soup_message_new_from_encoded_form",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../libsoup/soup-message.c",
                                "@line": "1010",
                                "#text": "Creates a new #SoupMessage and sets it up to send the given @encoded_form\nto @uri via @method. If @method is \"GET\", it will include the form data\ninto @uri's query field, and if @method is \"POST\" or \"PUT\", it will be set as\nrequest body.\n\nThis function takes the ownership of @encoded_form, that will be released\nwith [func@GLib.free] when no longer in use. See also [func@form_encode],\n[func@form_encode_hash] and [func@form_encode_datalist]."
                            },
                            "source-position": {
                                "@filename": "../libsoup/soup-message.h",
                                "@line": "31"
                            },
                            "return-value": {
                                "@transfer-ownership": "full",
                                "@nullable": "1",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "../libsoup/soup-message.c",
                                    "@line": "1025",
                                    "#text": "the new #SoupMessage, or %NULL if\n  @uri_string could not be parsed or @method is not \"GET, \"POST\" or \"PUT\""
                                },
                                "type": {
                                    "@name": "Message",
                                    "@c:type": "SoupMessage*"
                                }
                            },
                            "parameters": {
                                "parameter": [
                                    {
                                        "@name": "method",
                                        "@transfer-ownership": "none",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "../libsoup/soup-message.c",
                                            "@line": "1012",
                                            "#text": "the HTTP method for the created request (GET, POST or PUT)"
                                        },
                                        "type": {
                                            "@name": "utf8",
                                            "@c:type": "const char*"
                                        }
                                    },
                                    {
                                        "@name": "uri_string",
                                        "@transfer-ownership": "none",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "../libsoup/soup-message.c",
                                            "@line": "1013",
                                            "#text": "the destination endpoint (as a string)"
                                        },
                                        "type": {
                                            "@name": "utf8",
                                            "@c:type": "const char*"
                                        }
                                    },
                                    {
                                        "@name": "encoded_form",
                                        "@transfer-ownership": "full",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "../libsoup/soup-message.c",
                                            "@line": "1014",
                                            "#text": "a encoded form"
                                        },
                                        "type": {
                                            "@name": "utf8",
                                            "@c:type": "char*"
                                        }
                                    }
                                ]
                            }
                        },
                        {
                            "@name": "new_from_multipart",
                            "@c:identifier": "soup_message_new_from_multipart",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../libsoup/soup-message.c",
                                "@line": "1067",
                                "#text": "Creates a new #SoupMessage and sets it up to send @multipart to\n@uri_string via POST."
                            },
                            "source-position": {
                                "@filename": "../libsoup/soup-message.h",
                                "@line": "36"
                            },
                            "return-value": {
                                "@transfer-ownership": "full",
                                "@nullable": "1",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "../libsoup/soup-message.c",
                                    "@line": "1075",
                                    "#text": "the new #SoupMessage, or %NULL if @uri_string\n  could not be parsed"
                                },
                                "type": {
                                    "@name": "Message",
                                    "@c:type": "SoupMessage*"
                                }
                            },
                            "parameters": {
                                "parameter": [
                                    {
                                        "@name": "uri_string",
                                        "@transfer-ownership": "none",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "../libsoup/soup-message.c",
                                            "@line": "1069",
                                            "#text": "the destination endpoint"
                                        },
                                        "type": {
                                            "@name": "utf8",
                                            "@c:type": "const char*"
                                        }
                                    },
                                    {
                                        "@name": "multipart",
                                        "@transfer-ownership": "none",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "../libsoup/soup-message.c",
                                            "@line": "1070",
                                            "#text": "a #SoupMultipart"
                                        },
                                        "type": {
                                            "@name": "Multipart",
                                            "@c:type": "SoupMultipart*"
                                        }
                                    }
                                ]
                            }
                        },
                        {
                            "@name": "new_from_uri",
                            "@c:identifier": "soup_message_new_from_uri",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../libsoup/soup-message.c",
                                "@line": "968",
                                "#text": "Creates a new empty #SoupMessage, which will connect to @uri."
                            },
                            "source-position": {
                                "@filename": "../libsoup/soup-message.h",
                                "@line": "24"
                            },
                            "return-value": {
                                "@transfer-ownership": "full",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "../libsoup/soup-message.c",
                                    "@line": "975",
                                    "#text": "the new #SoupMessage"
                                },
                                "type": {
                                    "@name": "Message",
                                    "@c:type": "SoupMessage*"
                                }
                            },
                            "parameters": {
                                "parameter": [
                                    {
                                        "@name": "method",
                                        "@transfer-ownership": "none",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "../libsoup/soup-message.c",
                                            "@line": "970",
                                            "#text": "the HTTP method for the created request"
                                        },
                                        "type": {
                                            "@name": "utf8",
                                            "@c:type": "const char*"
                                        }
                                    },
                                    {
                                        "@name": "uri",
                                        "@transfer-ownership": "none",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "../libsoup/soup-message.c",
                                            "@line": "971",
                                            "#text": "the destination endpoint"
                                        },
                                        "type": {
                                            "@name": "GLib.Uri",
                                            "@c:type": "GUri*"
                                        }
                                    }
                                ]
                            }
                        },
                        {
                            "@name": "new_options_ping",
                            "@c:identifier": "soup_message_new_options_ping",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../libsoup/soup-message.c",
                                "@line": "989",
                                "#text": "Creates a new #SoupMessage to send `OPTIONS *` to a server. The path of\n@base_uri will be ignored."
                            },
                            "source-position": {
                                "@filename": "../libsoup/soup-message.h",
                                "@line": "28"
                            },
                            "return-value": {
                                "@transfer-ownership": "full",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "../libsoup/soup-message.c",
                                    "@line": "996",
                                    "#text": "the new #SoupMessage"
                                },
                                "type": {
                                    "@name": "Message",
                                    "@c:type": "SoupMessage*"
                                }
                            },
                            "parameters": {
                                "parameter": {
                                    "@name": "base_uri",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../libsoup/soup-message.c",
                                        "@line": "991",
                                        "#text": "the destination endpoint"
                                    },
                                    "type": {
                                        "@name": "GLib.Uri",
                                        "@c:type": "GUri*"
                                    }
                                }
                            }
                        }
                    ],
                    "method": [
                        {
                            "@name": "add_flags",
                            "@c:identifier": "soup_message_add_flags",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../libsoup/soup-message.c",
                                "@line": "1931",
                                "#text": "Adds @flags to the set of @msg's flags."
                            },
                            "source-position": {
                                "@filename": "../libsoup/soup-message.h",
                                "@line": "92"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "type": {
                                    "@name": "none",
                                    "@c:type": "void"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "msg",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../libsoup/soup-message.c",
                                        "@line": "1933",
                                        "#text": "a #SoupMessage"
                                    },
                                    "type": {
                                        "@name": "Message",
                                        "@c:type": "SoupMessage*"
                                    }
                                },
                                "parameter": {
                                    "@name": "flags",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../libsoup/soup-message.c",
                                        "@line": "1934",
                                        "#text": "a set of #SoupMessageFlags values"
                                    },
                                    "type": {
                                        "@name": "MessageFlags",
                                        "@c:type": "SoupMessageFlags"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "add_header_handler",
                            "@c:identifier": "soup_message_add_header_handler",
                            "@introspectable": "0",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../libsoup/soup-message.c",
                                "@line": "1292",
                                "#text": "Adds a signal handler to @msg for @signal.\n\nSimilar to [func@GObject.signal_connect], but the @callback will only be run\nif @msg's incoming messages headers (that is, the `request_headers`) contain\na header named @header."
                            },
                            "source-position": {
                                "@filename": "../libsoup/soup-message.h",
                                "@line": "125"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "../libsoup/soup-message.c",
                                    "@line": "1306",
                                    "#text": "the handler ID from [func@GObject.signal_connect]"
                                },
                                "type": {
                                    "@name": "guint",
                                    "@c:type": "guint"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "msg",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../libsoup/soup-message.c",
                                        "@line": "1294",
                                        "#text": "a #SoupMessage"
                                    },
                                    "type": {
                                        "@name": "Message",
                                        "@c:type": "SoupMessage*"
                                    }
                                },
                                "parameter": [
                                    {
                                        "@name": "signal",
                                        "@transfer-ownership": "none",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "../libsoup/soup-message.c",
                                            "@line": "1295",
                                            "#text": "signal to connect the handler to."
                                        },
                                        "type": {
                                            "@name": "utf8",
                                            "@c:type": "const char*"
                                        }
                                    },
                                    {
                                        "@name": "header",
                                        "@transfer-ownership": "none",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "../libsoup/soup-message.c",
                                            "@line": "1296",
                                            "#text": "HTTP response header to match against"
                                        },
                                        "type": {
                                            "@name": "utf8",
                                            "@c:type": "const char*"
                                        }
                                    },
                                    {
                                        "@name": "callback",
                                        "@transfer-ownership": "none",
                                        "@closure": "3",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "../libsoup/soup-message.c",
                                            "@line": "1297",
                                            "#text": "the header handler"
                                        },
                                        "type": {
                                            "@name": "GObject.Callback",
                                            "@c:type": "GCallback"
                                        }
                                    },
                                    {
                                        "@name": "user_data",
                                        "@transfer-ownership": "none",
                                        "@nullable": "1",
                                        "@allow-none": "1",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "../libsoup/soup-message.c",
                                            "@line": "1298",
                                            "#text": "data to pass to @handler_cb"
                                        },
                                        "type": {
                                            "@name": "gpointer",
                                            "@c:type": "gpointer"
                                        }
                                    }
                                ]
                            }
                        },
                        {
                            "@name": "add_status_code_handler",
                            "@c:identifier": "soup_message_add_status_code_handler",
                            "@introspectable": "0",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../libsoup/soup-message.c",
                                "@line": "1350",
                                "#text": "Adds a signal handler to @msg for @signal.\n\nSimilar to [func@GObject.signal_connect], but the @callback will only be run\nif @msg has the status @status_code.\n\n@signal must be a signal that will be emitted after @msg's status\nis set (this means it can't be a \"wrote\" signal)."
                            },
                            "source-position": {
                                "@filename": "../libsoup/soup-message.h",
                                "@line": "132"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "../libsoup/soup-message.c",
                                    "@line": "1366",
                                    "#text": "the handler ID from [func@GObject.signal_connect]"
                                },
                                "type": {
                                    "@name": "guint",
                                    "@c:type": "guint"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "msg",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../libsoup/soup-message.c",
                                        "@line": "1352",
                                        "#text": "a #SoupMessage"
                                    },
                                    "type": {
                                        "@name": "Message",
                                        "@c:type": "SoupMessage*"
                                    }
                                },
                                "parameter": [
                                    {
                                        "@name": "signal",
                                        "@transfer-ownership": "none",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "../libsoup/soup-message.c",
                                            "@line": "1353",
                                            "#text": "signal to connect the handler to."
                                        },
                                        "type": {
                                            "@name": "utf8",
                                            "@c:type": "const char*"
                                        }
                                    },
                                    {
                                        "@name": "status_code",
                                        "@transfer-ownership": "none",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "../libsoup/soup-message.c",
                                            "@line": "1354",
                                            "#text": "status code to match against"
                                        },
                                        "type": {
                                            "@name": "guint",
                                            "@c:type": "guint"
                                        }
                                    },
                                    {
                                        "@name": "callback",
                                        "@transfer-ownership": "none",
                                        "@closure": "3",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "../libsoup/soup-message.c",
                                            "@line": "1355",
                                            "#text": "the header handler"
                                        },
                                        "type": {
                                            "@name": "GObject.Callback",
                                            "@c:type": "GCallback"
                                        }
                                    },
                                    {
                                        "@name": "user_data",
                                        "@transfer-ownership": "none",
                                        "@nullable": "1",
                                        "@allow-none": "1",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "../libsoup/soup-message.c",
                                            "@line": "1356",
                                            "#text": "data to pass to @handler_cb"
                                        },
                                        "type": {
                                            "@name": "gpointer",
                                            "@c:type": "gpointer"
                                        }
                                    }
                                ]
                            }
                        },
                        {
                            "@name": "disable_feature",
                            "@c:identifier": "soup_message_disable_feature",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../libsoup/soup-message.c",
                                "@line": "2183",
                                "#text": "Disables the actions of [iface@SessionFeature]s with the\ngiven @feature_type (or a subclass of that type) on @msg.\n\n@msg is processed as though the feature(s) hadn't been added to the\nsession. Eg, passing #SOUP_TYPE_CONTENT_SNIFFER for @feature_type\nwill disable Content-Type sniffing on the message.\n\nYou must call this before queueing @msg on a session; calling it on\na message that has already been queued is undefined. In particular,\nyou cannot call this on a message that is being requeued after a\nredirect or authentication."
                            },
                            "source-position": {
                                "@filename": "../libsoup/soup-message.h",
                                "@line": "140"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "type": {
                                    "@name": "none",
                                    "@c:type": "void"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "msg",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../libsoup/soup-message.c",
                                        "@line": "2185",
                                        "#text": "a #SoupMessage"
                                    },
                                    "type": {
                                        "@name": "Message",
                                        "@c:type": "SoupMessage*"
                                    }
                                },
                                "parameter": {
                                    "@name": "feature_type",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../libsoup/soup-message.c",
                                        "@line": "2186",
                                        "#text": "the #GType of a #SoupSessionFeature"
                                    },
                                    "type": {
                                        "@name": "GType",
                                        "@c:type": "GType"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "get_connection_id",
                            "@c:identifier": "soup_message_get_connection_id",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../libsoup/soup-message.c",
                                "@line": "3074",
                                "#text": "Returns the unique idenfier for the last connection used.\n\nThis may be 0 if it was a cached resource or it has not gotten\na connection yet."
                            },
                            "source-position": {
                                "@filename": "../libsoup/soup-message.h",
                                "@line": "190"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "../libsoup/soup-message.c",
                                    "@line": "3083",
                                    "#text": "An id or 0 if no connection."
                                },
                                "type": {
                                    "@name": "guint64",
                                    "@c:type": "guint64"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "msg",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../libsoup/soup-message.c",
                                        "@line": "3076",
                                        "#text": "The #SoupMessage"
                                    },
                                    "type": {
                                        "@name": "Message",
                                        "@c:type": "SoupMessage*"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "get_first_party",
                            "@c:identifier": "soup_message_get_first_party",
                            "@glib:get-property": "first-party",
                            "attribute": {
                                "@name": "org.gtk.Method.get_property",
                                "@value": "first-party"
                            },
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../libsoup/soup-message.c",
                                "@line": "2279",
                                "#text": "Gets @msg's first-party [struct@GLib.Uri]."
                            },
                            "source-position": {
                                "@filename": "../libsoup/soup-message.h",
                                "@line": "61"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "../libsoup/soup-message.c",
                                    "@line": "2285",
                                    "#text": "the @msg's first party #GUri"
                                },
                                "type": {
                                    "@name": "GLib.Uri",
                                    "@c:type": "GUri*"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "msg",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../libsoup/soup-message.c",
                                        "@line": "2281",
                                        "#text": "a #SoupMessage"
                                    },
                                    "type": {
                                        "@name": "Message",
                                        "@c:type": "SoupMessage*"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "get_flags",
                            "@c:identifier": "soup_message_get_flags",
                            "@glib:get-property": "flags",
                            "attribute": {
                                "@name": "org.gtk.Method.get_property",
                                "@value": "flags"
                            },
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../libsoup/soup-message.c",
                                "@line": "1911",
                                "#text": "Gets the flags on @msg."
                            },
                            "source-position": {
                                "@filename": "../libsoup/soup-message.h",
                                "@line": "89"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "../libsoup/soup-message.c",
                                    "@line": "1917",
                                    "#text": "the flags"
                                },
                                "type": {
                                    "@name": "MessageFlags",
                                    "@c:type": "SoupMessageFlags"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "msg",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../libsoup/soup-message.c",
                                        "@line": "1913",
                                        "#text": "a #SoupMessage"
                                    },
                                    "type": {
                                        "@name": "Message",
                                        "@c:type": "SoupMessage*"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "get_http_version",
                            "@c:identifier": "soup_message_get_http_version",
                            "@glib:get-property": "http-version",
                            "attribute": {
                                "@name": "org.gtk.Method.get_property",
                                "@value": "http-version"
                            },
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../libsoup/soup-message.c",
                                "@line": "2014",
                                "#text": "Gets the HTTP version of @msg.\n\nThis is the minimum of the version from the request and the version from the\nresponse."
                            },
                            "source-position": {
                                "@filename": "../libsoup/soup-message.h",
                                "@line": "50"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "../libsoup/soup-message.c",
                                    "@line": "2023",
                                    "#text": "the HTTP version"
                                },
                                "type": {
                                    "@name": "HTTPVersion",
                                    "@c:type": "SoupHTTPVersion"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "msg",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../libsoup/soup-message.c",
                                        "@line": "2016",
                                        "#text": "a #SoupMessage"
                                    },
                                    "type": {
                                        "@name": "Message",
                                        "@c:type": "SoupMessage*"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "get_is_options_ping",
                            "@c:identifier": "soup_message_get_is_options_ping",
                            "@glib:get-property": "is-options-ping",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../libsoup/soup-message.c",
                                "@line": "3026",
                                "#text": "Gets whether @msg is intended to be used to send `OPTIONS *` to a server."
                            },
                            "source-position": {
                                "@filename": "../libsoup/soup-message.h",
                                "@line": "184"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "../libsoup/soup-message.c",
                                    "@line": "3032",
                                    "#text": "%TRUE if the message is options ping, or %FALSE otherwise"
                                },
                                "type": {
                                    "@name": "gboolean",
                                    "@c:type": "gboolean"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "msg",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../libsoup/soup-message.c",
                                        "@line": "3028",
                                        "#text": "a #SoupMessage"
                                    },
                                    "type": {
                                        "@name": "Message",
                                        "@c:type": "SoupMessage*"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "get_is_top_level_navigation",
                            "@c:identifier": "soup_message_get_is_top_level_navigation",
                            "@glib:get-property": "is-top-level-navigation",
                            "attribute": {
                                "@name": "org.gtk.Method.get_property",
                                "@value": "is-top-level-navigation"
                            },
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../libsoup/soup-message.c",
                                "@line": "2426",
                                "#text": "Returns if this message is set as a top level navigation.\n\nUsed for same-site policy checks."
                            },
                            "source-position": {
                                "@filename": "../libsoup/soup-message.h",
                                "@line": "74"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "../libsoup/soup-message.c",
                                    "@line": "2434",
                                    "#text": "Whether the current request is a top-level navitation"
                                },
                                "type": {
                                    "@name": "gboolean",
                                    "@c:type": "gboolean"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "msg",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../libsoup/soup-message.c",
                                        "@line": "2428",
                                        "#text": "a #SoupMessage"
                                    },
                                    "type": {
                                        "@name": "Message",
                                        "@c:type": "SoupMessage*"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "get_method",
                            "@c:identifier": "soup_message_get_method",
                            "@glib:get-property": "method",
                            "attribute": {
                                "@name": "org.gtk.Method.get_property",
                                "@value": "method"
                            },
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../libsoup/soup-message.c",
                                "@line": "2895",
                                "#text": "Returns the method of this message."
                            },
                            "source-position": {
                                "@filename": "../libsoup/soup-message.h",
                                "@line": "165"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "../libsoup/soup-message.c",
                                    "@line": "2901",
                                    "#text": "A method such as %SOUP_METHOD_GET"
                                },
                                "type": {
                                    "@name": "utf8",
                                    "@c:type": "const char*"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "msg",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../libsoup/soup-message.c",
                                        "@line": "2897",
                                        "#text": "The #SoupMessage"
                                    },
                                    "type": {
                                        "@name": "Message",
                                        "@c:type": "SoupMessage*"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "get_metrics",
                            "@c:identifier": "soup_message_get_metrics",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../libsoup/soup-message.c",
                                "@line": "3122",
                                "#text": "Get the [struct@MessageMetrics] of @msg.\n\nIf the flag %SOUP_MESSAGE_COLLECT_METRICS is not enabled for @msg this will\nreturn %NULL."
                            },
                            "source-position": {
                                "@filename": "../libsoup/soup-message.h",
                                "@line": "196"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "@nullable": "1",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "../libsoup/soup-message.c",
                                    "@line": "3131",
                                    "#text": "a #SoupMessageMetrics"
                                },
                                "type": {
                                    "@name": "MessageMetrics",
                                    "@c:type": "SoupMessageMetrics*"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "msg",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../libsoup/soup-message.c",
                                        "@line": "3124",
                                        "#text": "The #SoupMessage"
                                    },
                                    "type": {
                                        "@name": "Message",
                                        "@c:type": "SoupMessage*"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "get_priority",
                            "@c:identifier": "soup_message_get_priority",
                            "@glib:get-property": "priority",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../libsoup/soup-message.c",
                                "@line": "2668",
                                "#text": "Retrieves the [enum@MessagePriority].\n\nIf not set this value defaults to #SOUP_MESSAGE_PRIORITY_NORMAL."
                            },
                            "source-position": {
                                "@filename": "../libsoup/soup-message.h",
                                "@line": "162"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "../libsoup/soup-message.c",
                                    "@line": "2676",
                                    "#text": "the priority of the message."
                                },
                                "type": {
                                    "@name": "MessagePriority",
                                    "@c:type": "SoupMessagePriority"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "msg",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../libsoup/soup-message.c",
                                        "@line": "2670",
                                        "#text": "a #SoupMessage"
                                    },
                                    "type": {
                                        "@name": "Message",
                                        "@c:type": "SoupMessage*"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "get_reason_phrase",
                            "@c:identifier": "soup_message_get_reason_phrase",
                            "@glib:get-property": "reason-phrase",
                            "attribute": {
                                "@name": "org.gtk.Method.get_property",
                                "@value": "reason-phrase"
                            },
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../libsoup/soup-message.c",
                                "@line": "2931",
                                "#text": "Returns the reason phrase for the status of this message."
                            },
                            "source-position": {
                                "@filename": "../libsoup/soup-message.h",
                                "@line": "175"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "@nullable": "1",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "../libsoup/soup-message.c",
                                    "@line": "2937",
                                    "#text": "the phrase"
                                },
                                "type": {
                                    "@name": "utf8",
                                    "@c:type": "const char*"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "msg",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../libsoup/soup-message.c",
                                        "@line": "2933",
                                        "#text": "The #SoupMessage"
                                    },
                                    "type": {
                                        "@name": "Message",
                                        "@c:type": "SoupMessage*"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "get_remote_address",
                            "@c:identifier": "soup_message_get_remote_address",
                            "@glib:get-property": "remote-address",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../libsoup/soup-message.c",
                                "@line": "3095",
                                "#text": "Get the remote [class@Gio.SocketAddress] of the connection associated with\nthe message.\n\nThe returned address can be %NULL if the connection hasn't been established\nyet, or the resource was loaded from the disk cache. In case of proxy\nconnections, the remote address returned is a [class@Gio.ProxyAddress]. If\n[property@Session:remote-connectable] is set the returned address id for the\nconnection to the session's remote connectable."
                            },
                            "source-position": {
                                "@filename": "../libsoup/soup-message.h",
                                "@line": "193"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "@nullable": "1",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "../libsoup/soup-message.c",
                                    "@line": "3108",
                                    "#text": "a #GSocketAddress or %NULL if the connection\n    hasn't been established"
                                },
                                "type": {
                                    "@name": "Gio.SocketAddress",
                                    "@c:type": "GSocketAddress*"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "msg",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../libsoup/soup-message.c",
                                        "@line": "3097",
                                        "#text": "The #SoupMessage"
                                    },
                                    "type": {
                                        "@name": "Message",
                                        "@c:type": "SoupMessage*"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "get_request_headers",
                            "@c:identifier": "soup_message_get_request_headers",
                            "@glib:get-property": "request-headers",
                            "attribute": {
                                "@name": "org.gtk.Method.get_property",
                                "@value": "request-headers"
                            },
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../libsoup/soup-message.c",
                                "@line": "2949",
                                "#text": "Returns the headers sent with the request."
                            },
                            "source-position": {
                                "@filename": "../libsoup/soup-message.h",
                                "@line": "178"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "../libsoup/soup-message.c",
                                    "@line": "2955",
                                    "#text": "The #SoupMessageHeaders"
                                },
                                "type": {
                                    "@name": "MessageHeaders",
                                    "@c:type": "SoupMessageHeaders*"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "msg",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../libsoup/soup-message.c",
                                        "@line": "2951",
                                        "#text": "The #SoupMessage"
                                    },
                                    "type": {
                                        "@name": "Message",
                                        "@c:type": "SoupMessage*"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "get_response_headers",
                            "@c:identifier": "soup_message_get_response_headers",
                            "@glib:get-property": "response-headers",
                            "attribute": {
                                "@name": "org.gtk.Method.get_property",
                                "@value": "response-headers"
                            },
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../libsoup/soup-message.c",
                                "@line": "2967",
                                "#text": "Returns the headers recieved with the response."
                            },
                            "source-position": {
                                "@filename": "../libsoup/soup-message.h",
                                "@line": "181"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "../libsoup/soup-message.c",
                                    "@line": "2973",
                                    "#text": "The #SoupMessageHeaders"
                                },
                                "type": {
                                    "@name": "MessageHeaders",
                                    "@c:type": "SoupMessageHeaders*"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "msg",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../libsoup/soup-message.c",
                                        "@line": "2969",
                                        "#text": "The #SoupMessage"
                                    },
                                    "type": {
                                        "@name": "Message",
                                        "@c:type": "SoupMessage*"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "get_site_for_cookies",
                            "@c:identifier": "soup_message_get_site_for_cookies",
                            "@glib:get-property": "site-for-cookies",
                            "attribute": {
                                "@name": "org.gtk.Method.get_property",
                                "@value": "site-for-cookies"
                            },
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../libsoup/soup-message.c",
                                "@line": "2336",
                                "#text": "Gets @msg's site for cookies #GUri."
                            },
                            "source-position": {
                                "@filename": "../libsoup/soup-message.h",
                                "@line": "66"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "../libsoup/soup-message.c",
                                    "@line": "2342",
                                    "#text": "the @msg's site for cookies #GUri"
                                },
                                "type": {
                                    "@name": "GLib.Uri",
                                    "@c:type": "GUri*"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "msg",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../libsoup/soup-message.c",
                                        "@line": "2338",
                                        "#text": "a #SoupMessage"
                                    },
                                    "type": {
                                        "@name": "Message",
                                        "@c:type": "SoupMessage*"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "get_status",
                            "@c:identifier": "soup_message_get_status",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../libsoup/soup-message.c",
                                "@line": "2913",
                                "#text": "Returns the set status of this message."
                            },
                            "source-position": {
                                "@filename": "../libsoup/soup-message.h",
                                "@line": "172"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "../libsoup/soup-message.c",
                                    "@line": "2919",
                                    "#text": "The #SoupStatus"
                                },
                                "type": {
                                    "@name": "Status",
                                    "@c:type": "SoupStatus"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "msg",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../libsoup/soup-message.c",
                                        "@line": "2915",
                                        "#text": "The #SoupMessage"
                                    },
                                    "type": {
                                        "@name": "Message",
                                        "@c:type": "SoupMessage*"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "get_tls_ciphersuite_name",
                            "@c:identifier": "soup_message_get_tls_ciphersuite_name",
                            "@glib:get-property": "tls-ciphersuite-name",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../libsoup/soup-message.c",
                                "@line": "2515",
                                "#text": "Gets the name of the TLS ciphersuite negotiated for @msg's connection."
                            },
                            "source-position": {
                                "@filename": "../libsoup/soup-message.h",
                                "@line": "113"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "../libsoup/soup-message.c",
                                    "@line": "2521",
                                    "#text": "the name of the TLS ciphersuite,\n  or %NULL if @msg's connection is not SSL."
                                },
                                "type": {
                                    "@name": "utf8",
                                    "@c:type": "const char*"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "msg",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../libsoup/soup-message.c",
                                        "@line": "2517",
                                        "#text": "a #SoupMessage"
                                    },
                                    "type": {
                                        "@name": "Message",
                                        "@c:type": "SoupMessage*"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "get_tls_peer_certificate",
                            "@c:identifier": "soup_message_get_tls_peer_certificate",
                            "@glib:get-property": "tls-peer-certificate",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../libsoup/soup-message.c",
                                "@line": "2447",
                                "#text": "Gets the peer's [class@Gio.TlsCertificate] associated with @msg's connection.\n\nNote that this is not set yet during the emission of\n[signal@Message::accept-certificate] signal."
                            },
                            "source-position": {
                                "@filename": "../libsoup/soup-message.h",
                                "@line": "104"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "@nullable": "1",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "../libsoup/soup-message.c",
                                    "@line": "2456",
                                    "#text": "@msg's TLS peer certificate,\n  or %NULL if @msg's connection is not SSL."
                                },
                                "type": {
                                    "@name": "Gio.TlsCertificate",
                                    "@c:type": "GTlsCertificate*"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "msg",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../libsoup/soup-message.c",
                                        "@line": "2449",
                                        "#text": "a #SoupMessage"
                                    },
                                    "type": {
                                        "@name": "Message",
                                        "@c:type": "SoupMessage*"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "get_tls_peer_certificate_errors",
                            "@c:identifier": "soup_message_get_tls_peer_certificate_errors",
                            "@glib:get-property": "tls-peer-certificate-errors",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../libsoup/soup-message.c",
                                "@line": "2471",
                                "#text": "Gets the errors associated with validating @msg's TLS peer certificate.\nNote that this is not set yet during the emission of\n[signal@Message::accept-certificate] signal."
                            },
                            "source-position": {
                                "@filename": "../libsoup/soup-message.h",
                                "@line": "107"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "../libsoup/soup-message.c",
                                    "@line": "2479",
                                    "#text": "a #GTlsCertificateFlags with @msg's TLS peer certificate errors."
                                },
                                "type": {
                                    "@name": "Gio.TlsCertificateFlags",
                                    "@c:type": "GTlsCertificateFlags"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "msg",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../libsoup/soup-message.c",
                                        "@line": "2473",
                                        "#text": "a #SoupMessage"
                                    },
                                    "type": {
                                        "@name": "Message",
                                        "@c:type": "SoupMessage*"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "get_tls_protocol_version",
                            "@c:identifier": "soup_message_get_tls_protocol_version",
                            "@glib:get-property": "tls-protocol-version",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../libsoup/soup-message.c",
                                "@line": "2493",
                                "#text": "Gets the TLS protocol version negotiated for @msg's connection.\n\nIf the message connection is not SSL, %G_TLS_PROTOCOL_VERSION_UNKNOWN is returned."
                            },
                            "source-position": {
                                "@filename": "../libsoup/soup-message.h",
                                "@line": "110"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "../libsoup/soup-message.c",
                                    "@line": "2501",
                                    "#text": "a #GTlsProtocolVersion"
                                },
                                "type": {
                                    "@name": "Gio.TlsProtocolVersion",
                                    "@c:type": "GTlsProtocolVersion"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "msg",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../libsoup/soup-message.c",
                                        "@line": "2495",
                                        "#text": "a #SoupMessage"
                                    },
                                    "type": {
                                        "@name": "Message",
                                        "@c:type": "SoupMessage*"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "get_uri",
                            "@c:identifier": "soup_message_get_uri",
                            "@glib:get-property": "uri",
                            "attribute": {
                                "@name": "org.gtk.Method.get_property",
                                "@value": "method"
                            },
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../libsoup/soup-message.c",
                                "@line": "2129",
                                "#text": "Gets @msg's URI."
                            },
                            "source-position": {
                                "@filename": "../libsoup/soup-message.h",
                                "@line": "56"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "../libsoup/soup-message.c",
                                    "@line": "2135",
                                    "#text": "the URI @msg is targeted for."
                                },
                                "type": {
                                    "@name": "GLib.Uri",
                                    "@c:type": "GUri*"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "msg",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../libsoup/soup-message.c",
                                        "@line": "2131",
                                        "#text": "a #SoupMessage"
                                    },
                                    "type": {
                                        "@name": "Message",
                                        "@c:type": "SoupMessage*"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "is_feature_disabled",
                            "@c:identifier": "soup_message_is_feature_disabled",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../libsoup/soup-message.c",
                                "@line": "2237",
                                "#text": "Get whether [iface@SessionFeature]s of the given @feature_type\n(or a subclass of that type) are disabled on @msg.\n\nSee [method@Message.disable_feature]."
                            },
                            "source-position": {
                                "@filename": "../libsoup/soup-message.h",
                                "@line": "144"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "../libsoup/soup-message.c",
                                    "@line": "2247",
                                    "#text": "%TRUE if feature is disabled, or %FALSE otherwise."
                                },
                                "type": {
                                    "@name": "gboolean",
                                    "@c:type": "gboolean"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "msg",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../libsoup/soup-message.c",
                                        "@line": "2239",
                                        "#text": "a #SoupMessage"
                                    },
                                    "type": {
                                        "@name": "Message",
                                        "@c:type": "SoupMessage*"
                                    }
                                },
                                "parameter": {
                                    "@name": "feature_type",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../libsoup/soup-message.c",
                                        "@line": "2240",
                                        "#text": "the #GType of a #SoupSessionFeature"
                                    },
                                    "type": {
                                        "@name": "GType",
                                        "@c:type": "GType"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "is_keepalive",
                            "@c:identifier": "soup_message_is_keepalive",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../libsoup/soup-message.c",
                                "@line": "2037",
                                "#text": "Determines whether or not @msg's connection can be kept alive for\nfurther requests after processing @msg.\n\nThe result is based on the HTTP version, Connection header, etc."
                            },
                            "source-position": {
                                "@filename": "../libsoup/soup-message.h",
                                "@line": "53"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "../libsoup/soup-message.c",
                                    "@line": "2046",
                                    "#text": "%TRUE or %FALSE."
                                },
                                "type": {
                                    "@name": "gboolean",
                                    "@c:type": "gboolean"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "msg",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../libsoup/soup-message.c",
                                        "@line": "2039",
                                        "#text": "a #SoupMessage"
                                    },
                                    "type": {
                                        "@name": "Message",
                                        "@c:type": "SoupMessage*"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "query_flags",
                            "@c:identifier": "soup_message_query_flags",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../libsoup/soup-message.c",
                                "@line": "1950",
                                "#text": "Queries if @flags are present in the set of @msg's flags."
                            },
                            "source-position": {
                                "@filename": "../libsoup/soup-message.h",
                                "@line": "100"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "../libsoup/soup-message.c",
                                    "@line": "1957",
                                    "#text": "%TRUE if @flags are enabled in @msg"
                                },
                                "type": {
                                    "@name": "gboolean",
                                    "@c:type": "gboolean"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "msg",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../libsoup/soup-message.c",
                                        "@line": "1952",
                                        "#text": "a #SoupMessage"
                                    },
                                    "type": {
                                        "@name": "Message",
                                        "@c:type": "SoupMessage*"
                                    }
                                },
                                "parameter": {
                                    "@name": "flags",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../libsoup/soup-message.c",
                                        "@line": "1953",
                                        "#text": "a set of #SoupMessageFlags values"
                                    },
                                    "type": {
                                        "@name": "MessageFlags",
                                        "@c:type": "SoupMessageFlags"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "remove_flags",
                            "@c:identifier": "soup_message_remove_flags",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../libsoup/soup-message.c",
                                "@line": "1971",
                                "#text": "Removes @flags from the set of @msg's flags."
                            },
                            "source-position": {
                                "@filename": "../libsoup/soup-message.h",
                                "@line": "96"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "type": {
                                    "@name": "none",
                                    "@c:type": "void"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "msg",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../libsoup/soup-message.c",
                                        "@line": "1973",
                                        "#text": "a #SoupMessage"
                                    },
                                    "type": {
                                        "@name": "Message",
                                        "@c:type": "SoupMessage*"
                                    }
                                },
                                "parameter": {
                                    "@name": "flags",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../libsoup/soup-message.c",
                                        "@line": "1974",
                                        "#text": "a set of #SoupMessageFlags values"
                                    },
                                    "type": {
                                        "@name": "MessageFlags",
                                        "@c:type": "SoupMessageFlags"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "set_first_party",
                            "@c:identifier": "soup_message_set_first_party",
                            "@glib:set-property": "first-party",
                            "attribute": {
                                "@name": "org.gtk.Method.set_property",
                                "@value": "first-party"
                            },
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../libsoup/soup-message.c",
                                "@line": "2298",
                                "#text": "Sets @first_party as the main document #GUri for @msg.\n\nFor details of when and how this is used refer to the documentation for\n[enum@CookieJarAcceptPolicy]."
                            },
                            "source-position": {
                                "@filename": "../libsoup/soup-message.h",
                                "@line": "63"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "type": {
                                    "@name": "none",
                                    "@c:type": "void"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "msg",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../libsoup/soup-message.c",
                                        "@line": "2300",
                                        "#text": "a #SoupMessage"
                                    },
                                    "type": {
                                        "@name": "Message",
                                        "@c:type": "SoupMessage*"
                                    }
                                },
                                "parameter": {
                                    "@name": "first_party",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../libsoup/soup-message.c",
                                        "@line": "2301",
                                        "#text": "the #GUri for the @msg's first party"
                                    },
                                    "type": {
                                        "@name": "GLib.Uri",
                                        "@c:type": "GUri*"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "set_flags",
                            "@c:identifier": "soup_message_set_flags",
                            "@glib:set-property": "flags",
                            "attribute": {
                                "@name": "org.gtk.Method.set_property",
                                "@value": "flags"
                            },
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../libsoup/soup-message.c",
                                "@line": "1888",
                                "#text": "Sets the specified flags on @msg."
                            },
                            "source-position": {
                                "@filename": "../libsoup/soup-message.h",
                                "@line": "85"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "type": {
                                    "@name": "none",
                                    "@c:type": "void"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "msg",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../libsoup/soup-message.c",
                                        "@line": "1890",
                                        "#text": "a #SoupMessage"
                                    },
                                    "type": {
                                        "@name": "Message",
                                        "@c:type": "SoupMessage*"
                                    }
                                },
                                "parameter": {
                                    "@name": "flags",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../libsoup/soup-message.c",
                                        "@line": "1891",
                                        "#text": "a set of #SoupMessageFlags values"
                                    },
                                    "type": {
                                        "@name": "MessageFlags",
                                        "@c:type": "SoupMessageFlags"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "set_is_options_ping",
                            "@c:identifier": "soup_message_set_is_options_ping",
                            "@glib:set-property": "is-options-ping",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../libsoup/soup-message.c",
                                "@line": "3046",
                                "#text": "Set whether @msg is intended to be used to send `OPTIONS *` to a server.\n\nWhen set to %TRUE, the path of [property@Message:uri] will be ignored and\n[property@Message:method] set to %SOUP_METHOD_OPTIONS."
                            },
                            "source-position": {
                                "@filename": "../libsoup/soup-message.h",
                                "@line": "187"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "type": {
                                    "@name": "none",
                                    "@c:type": "void"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "msg",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../libsoup/soup-message.c",
                                        "@line": "3048",
                                        "#text": "a #SoupMessage"
                                    },
                                    "type": {
                                        "@name": "Message",
                                        "@c:type": "SoupMessage*"
                                    }
                                },
                                "parameter": {
                                    "@name": "is_options_ping",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../libsoup/soup-message.c",
                                        "@line": "3049",
                                        "#text": "the value to set"
                                    },
                                    "type": {
                                        "@name": "gboolean",
                                        "@c:type": "gboolean"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "set_is_top_level_navigation",
                            "@c:identifier": "soup_message_set_is_top_level_navigation",
                            "@glib:set-property": "is-top-level-navigation",
                            "attribute": {
                                "@name": "org.gtk.Method.set_property",
                                "@value": "is-top-level-navigation"
                            },
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../libsoup/soup-message.c",
                                "@line": "2399",
                                "#text": "Sets whether the current request is a top-level navitation.\n\nSee the [same-site spec](https://tools.ietf.org/html/draft-ietf-httpbis-cookie-same-site-00)\nfor more information."
                            },
                            "source-position": {
                                "@filename": "../libsoup/soup-message.h",
                                "@line": "71"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "type": {
                                    "@name": "none",
                                    "@c:type": "void"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "msg",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../libsoup/soup-message.c",
                                        "@line": "2401",
                                        "#text": "a #SoupMessage"
                                    },
                                    "type": {
                                        "@name": "Message",
                                        "@c:type": "SoupMessage*"
                                    }
                                },
                                "parameter": {
                                    "@name": "is_top_level_navigation",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../libsoup/soup-message.c",
                                        "@line": "2402",
                                        "#text": "if %TRUE indicate the current request is a top-level navigation"
                                    },
                                    "type": {
                                        "@name": "gboolean",
                                        "@c:type": "gboolean"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "set_method",
                            "@c:identifier": "soup_message_set_method",
                            "@glib:set-property": "method",
                            "attribute": {
                                "@name": "org.gtk.Method.set_property",
                                "@value": "method"
                            },
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../libsoup/soup-message.c",
                                "@line": "3005",
                                "#text": "Set @msg's HTTP method to @method."
                            },
                            "source-position": {
                                "@filename": "../libsoup/soup-message.h",
                                "@line": "168"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "type": {
                                    "@name": "none",
                                    "@c:type": "void"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "msg",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../libsoup/soup-message.c",
                                        "@line": "3007",
                                        "#text": "a #SoupMessage"
                                    },
                                    "type": {
                                        "@name": "Message",
                                        "@c:type": "SoupMessage*"
                                    }
                                },
                                "parameter": {
                                    "@name": "method",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../libsoup/soup-message.c",
                                        "@line": "3008",
                                        "#text": "the value to set"
                                    },
                                    "type": {
                                        "@name": "utf8",
                                        "@c:type": "const char*"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "set_priority",
                            "@c:identifier": "soup_message_set_priority",
                            "@glib:set-property": "priority",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../libsoup/soup-message.c",
                                "@line": "2634",
                                "#text": "Sets the priority of a message.\n\nNote that this won't have any effect unless used before the message is added\nto the session's message processing queue.\n\nThe message will be placed just before any other previously added\nmessage with lower priority (messages with the same priority are\nprocessed on a FIFO basis).\n\nSetting priorities does not currently work with synchronous messages\nbecause in the synchronous/blocking case, priority ends up being determined\nsemi-randomly by thread scheduling."
                            },
                            "source-position": {
                                "@filename": "../libsoup/soup-message.h",
                                "@line": "157"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "type": {
                                    "@name": "none",
                                    "@c:type": "void"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "msg",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../libsoup/soup-message.c",
                                        "@line": "2636",
                                        "#text": "a #SoupMessage"
                                    },
                                    "type": {
                                        "@name": "Message",
                                        "@c:type": "SoupMessage*"
                                    }
                                },
                                "parameter": {
                                    "@name": "priority",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../libsoup/soup-message.c",
                                        "@line": "2637",
                                        "#text": "the #SoupMessagePriority"
                                    },
                                    "type": {
                                        "@name": "MessagePriority",
                                        "@c:type": "SoupMessagePriority"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "set_request_body",
                            "@c:identifier": "soup_message_set_request_body",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../libsoup/soup-message.c",
                                "@line": "1106",
                                "#text": "Set the request body of a #SoupMessage.\n\nIf @content_type is %NULL and @stream is not %NULL the Content-Type header will\nnot be changed if present.\nThe request body needs to be set again in case @msg is restarted\n(in case of redirection or authentication)."
                            },
                            "source-position": {
                                "@filename": "../libsoup/soup-message.h",
                                "@line": "40"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "type": {
                                    "@name": "none",
                                    "@c:type": "void"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "msg",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../libsoup/soup-message.c",
                                        "@line": "1108",
                                        "#text": "the message"
                                    },
                                    "type": {
                                        "@name": "Message",
                                        "@c:type": "SoupMessage*"
                                    }
                                },
                                "parameter": [
                                    {
                                        "@name": "content_type",
                                        "@transfer-ownership": "none",
                                        "@nullable": "1",
                                        "@allow-none": "1",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "../libsoup/soup-message.c",
                                            "@line": "1109",
                                            "#text": "MIME Content-Type of the body, or %NULL if unknown"
                                        },
                                        "type": {
                                            "@name": "utf8",
                                            "@c:type": "const char*"
                                        }
                                    },
                                    {
                                        "@name": "stream",
                                        "@transfer-ownership": "none",
                                        "@nullable": "1",
                                        "@allow-none": "1",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "../libsoup/soup-message.c",
                                            "@line": "1110",
                                            "#text": "a #GInputStream to read the request body from"
                                        },
                                        "type": {
                                            "@name": "Gio.InputStream",
                                            "@c:type": "GInputStream*"
                                        }
                                    },
                                    {
                                        "@name": "content_length",
                                        "@transfer-ownership": "none",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "../libsoup/soup-message.c",
                                            "@line": "1111",
                                            "#text": "the byte length of @stream or -1 if unknown"
                                        },
                                        "type": {
                                            "@name": "gssize",
                                            "@c:type": "gssize"
                                        }
                                    }
                                ]
                            }
                        },
                        {
                            "@name": "set_request_body_from_bytes",
                            "@c:identifier": "soup_message_set_request_body_from_bytes",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../libsoup/soup-message.c",
                                "@line": "1154",
                                "#text": "Set the request body of a #SoupMessage from [struct@GLib.Bytes].\n\nIf @content_type is %NULL and @bytes is not %NULL the Content-Type header will\nnot be changed if present.\nThe request body needs to be set again in case @msg is restarted\n(in case of redirection or authentication)."
                            },
                            "source-position": {
                                "@filename": "../libsoup/soup-message.h",
                                "@line": "45"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "type": {
                                    "@name": "none",
                                    "@c:type": "void"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "msg",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../libsoup/soup-message.c",
                                        "@line": "1156",
                                        "#text": "the message"
                                    },
                                    "type": {
                                        "@name": "Message",
                                        "@c:type": "SoupMessage*"
                                    }
                                },
                                "parameter": [
                                    {
                                        "@name": "content_type",
                                        "@transfer-ownership": "none",
                                        "@nullable": "1",
                                        "@allow-none": "1",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "../libsoup/soup-message.c",
                                            "@line": "1157",
                                            "#text": "MIME Content-Type of the body, or %NULL if unknown"
                                        },
                                        "type": {
                                            "@name": "utf8",
                                            "@c:type": "const char*"
                                        }
                                    },
                                    {
                                        "@name": "bytes",
                                        "@transfer-ownership": "none",
                                        "@nullable": "1",
                                        "@allow-none": "1",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "../libsoup/soup-message.c",
                                            "@line": "1158",
                                            "#text": "a #GBytes with the request body data"
                                        },
                                        "type": {
                                            "@name": "GLib.Bytes",
                                            "@c:type": "GBytes*"
                                        }
                                    }
                                ]
                            }
                        },
                        {
                            "@name": "set_site_for_cookies",
                            "@c:identifier": "soup_message_set_site_for_cookies",
                            "@glib:set-property": "site-for-cookies",
                            "attribute": {
                                "@name": "org.gtk.Method.set_property",
                                "@value": "site-for-cookies"
                            },
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../libsoup/soup-message.c",
                                "@line": "2355",
                                "#text": "Sets @site_for_cookies as the policy URL for same-site cookies for @msg.\n\nIt is either the URL of the top-level document or %NULL depending on whether\nthe registrable domain of this document's URL matches the registrable domain\nof its parent's/opener's URL. For the top-level document it is set to the\ndocument's URL.\n\nSee the [same-site spec](https://tools.ietf.org/html/draft-ietf-httpbis-cookie-same-site-00)\nfor more information."
                            },
                            "source-position": {
                                "@filename": "../libsoup/soup-message.h",
                                "@line": "68"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "type": {
                                    "@name": "none",
                                    "@c:type": "void"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "msg",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../libsoup/soup-message.c",
                                        "@line": "2357",
                                        "#text": "a #SoupMessage"
                                    },
                                    "type": {
                                        "@name": "Message",
                                        "@c:type": "SoupMessage*"
                                    }
                                },
                                "parameter": {
                                    "@name": "site_for_cookies",
                                    "@transfer-ownership": "none",
                                    "@nullable": "1",
                                    "@allow-none": "1",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../libsoup/soup-message.c",
                                        "@line": "2358",
                                        "#text": "the #GUri for the @msg's site for cookies"
                                    },
                                    "type": {
                                        "@name": "GLib.Uri",
                                        "@c:type": "GUri*"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "set_tls_client_certificate",
                            "@c:identifier": "soup_message_set_tls_client_certificate",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../libsoup/soup-message.c",
                                "@line": "2536",
                                "#text": "Sets the @certificate to be used by @msg's connection when a\nclient certificate is requested during the TLS handshake.\n\nYou can call this as a response to [signal@Message::request-certificate]\nsignal, or before the connection is started. If @certificate is %NULL\nthe handshake will continue without providing a GTlsCertificate.\nNote that the [class@Gio.TlsCertificate] set by this function will be ignored if\n[property@Session:tls-interaction] is not %NULL."
                            },
                            "source-position": {
                                "@filename": "../libsoup/soup-message.h",
                                "@line": "116"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "type": {
                                    "@name": "none",
                                    "@c:type": "void"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "msg",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../libsoup/soup-message.c",
                                        "@line": "2538",
                                        "#text": "a #SoupMessage"
                                    },
                                    "type": {
                                        "@name": "Message",
                                        "@c:type": "SoupMessage*"
                                    }
                                },
                                "parameter": {
                                    "@name": "certificate",
                                    "@transfer-ownership": "none",
                                    "@nullable": "1",
                                    "@allow-none": "1",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../libsoup/soup-message.c",
                                        "@line": "2539",
                                        "#text": "the #GTlsCertificate to set, or %NULL"
                                    },
                                    "type": {
                                        "@name": "Gio.TlsCertificate",
                                        "@c:type": "GTlsCertificate*"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "set_uri",
                            "@c:identifier": "soup_message_set_uri",
                            "@glib:set-property": "uri",
                            "attribute": {
                                "@name": "org.gtk.Method.set_property",
                                "@value": "method"
                            },
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../libsoup/soup-message.c",
                                "@line": "2091",
                                "#text": "Sets @msg's URI to @uri.\n\nIf @msg has already been sent and you want to re-send it with the new URI,\nyou need to send it again."
                            },
                            "source-position": {
                                "@filename": "../libsoup/soup-message.h",
                                "@line": "58"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "type": {
                                    "@name": "none",
                                    "@c:type": "void"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "msg",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../libsoup/soup-message.c",
                                        "@line": "2093",
                                        "#text": "a #SoupMessage"
                                    },
                                    "type": {
                                        "@name": "Message",
                                        "@c:type": "SoupMessage*"
                                    }
                                },
                                "parameter": {
                                    "@name": "uri",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../libsoup/soup-message.c",
                                        "@line": "2094",
                                        "#text": "the new #GUri"
                                    },
                                    "type": {
                                        "@name": "GLib.Uri",
                                        "@c:type": "GUri*"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "tls_client_certificate_password_request_complete",
                            "@c:identifier": "soup_message_tls_client_certificate_password_request_complete",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../libsoup/soup-message.c",
                                "@line": "2584",
                                "#text": "Completes a certificate password request.\n\nYou must call this as a response to\n[signal@Message::request-certificate-password] signal, to notify @msg that\nthe [class@Gio.TlsPassword] has already been updated."
                            },
                            "source-position": {
                                "@filename": "../libsoup/soup-message.h",
                                "@line": "120"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "type": {
                                    "@name": "none",
                                    "@c:type": "void"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "msg",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../libsoup/soup-message.c",
                                        "@line": "2586",
                                        "#text": "a #SoupMessage"
                                    },
                                    "type": {
                                        "@name": "Message",
                                        "@c:type": "SoupMessage*"
                                    }
                                }
                            }
                        }
                    ],
                    "property": [
                        {
                            "@name": "first-party",
                            "@writable": "1",
                            "@transfer-ownership": "none",
                            "@setter": "set_first_party",
                            "@getter": "get_first_party",
                            "attribute": [
                                {
                                    "@name": "org.gtk.Property.get",
                                    "@value": "soup_message_get_first_party"
                                },
                                {
                                    "@name": "org.gtk.Property.set",
                                    "@value": "soup_message_set_first_party"
                                }
                            ],
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../libsoup/soup-message.c",
                                "@line": "776",
                                "#text": "The [struct@GLib.Uri] loaded in the application when the message was\nqueued."
                            },
                            "type": {
                                "@name": "GLib.Uri"
                            }
                        },
                        {
                            "@name": "flags",
                            "@writable": "1",
                            "@transfer-ownership": "none",
                            "@setter": "set_flags",
                            "@getter": "get_flags",
                            "attribute": [
                                {
                                    "@name": "org.gtk.Property.get",
                                    "@value": "soup_message_get_flags"
                                },
                                {
                                    "@name": "org.gtk.Property.set",
                                    "@value": "soup_message_set_flags"
                                }
                            ],
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../libsoup/soup-message.c",
                                "@line": "739",
                                "#text": "Various message options."
                            },
                            "type": {
                                "@name": "MessageFlags"
                            }
                        },
                        {
                            "@name": "http-version",
                            "@transfer-ownership": "none",
                            "@getter": "get_http_version",
                            "attribute": {
                                "@name": "org.gtk.Property.get",
                                "@value": "soup_message_get_http_version"
                            },
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../libsoup/soup-message.c",
                                "@line": "726",
                                "#text": "The HTTP protocol version to use."
                            },
                            "type": {
                                "@name": "HTTPVersion"
                            }
                        },
                        {
                            "@name": "is-options-ping",
                            "@writable": "1",
                            "@transfer-ownership": "none",
                            "@setter": "set_is_options_ping",
                            "@getter": "get_is_options_ping",
                            "attribute": [
                                {
                                    "@name": "org.gtk.Property.get",
                                    "@value": "soup_message_get_is_options_ping"
                                },
                                {
                                    "@name": "org.gtk.Property.set",
                                    "@value": "soup_message_set_is_options_ping"
                                }
                            ],
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../libsoup/soup-message.c",
                                "@line": "914",
                                "#text": "Whether the message is an OPTIONS ping.\n\nThe #SoupMessage is intended to be used to send\n`OPTIONS *` to a server. When set to %TRUE, the\npath of [property@Message:uri] will be ignored and\n[property@Message:method] set to %SOUP_METHOD_OPTIONS."
                            },
                            "type": {
                                "@name": "gboolean",
                                "@c:type": "gboolean"
                            }
                        },
                        {
                            "@name": "is-top-level-navigation",
                            "@writable": "1",
                            "@transfer-ownership": "none",
                            "@setter": "set_is_top_level_navigation",
                            "@getter": "get_is_top_level_navigation",
                            "attribute": [
                                {
                                    "@name": "org.gtk.Property.get",
                                    "@value": "soup_message_get_is_top_level_navigation"
                                },
                                {
                                    "@name": "org.gtk.Property.set",
                                    "@value": "soup_message_set_is_top_level_navigation"
                                }
                            ],
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../libsoup/soup-message.c",
                                "@line": "800",
                                "#text": "Set when the message is navigating between top level domains."
                            },
                            "type": {
                                "@name": "gboolean",
                                "@c:type": "gboolean"
                            }
                        },
                        {
                            "@name": "method",
                            "@writable": "1",
                            "@transfer-ownership": "none",
                            "@setter": "set_method",
                            "@getter": "get_method",
                            "attribute": [
                                {
                                    "@name": "org.gtk.Property.get",
                                    "@value": "soup_message_get_method"
                                },
                                {
                                    "@name": "org.gtk.Property.set",
                                    "@value": "soup_message_set_method"
                                }
                            ],
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../libsoup/soup-message.c",
                                "@line": "701",
                                "#text": "The message's HTTP method."
                            },
                            "type": {
                                "@name": "utf8",
                                "@c:type": "gchar*"
                            }
                        },
                        {
                            "@name": "priority",
                            "@writable": "1",
                            "@transfer-ownership": "none",
                            "@setter": "set_priority",
                            "@getter": "get_priority",
                            "attribute": [
                                {
                                    "@name": "org.gtk.Property.get",
                                    "@value": "soup_message_get_priority"
                                },
                                {
                                    "@name": "org.gtk.Property.set",
                                    "@value": "soup_message_set_priority"
                                }
                            ],
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../libsoup/soup-message.c",
                                "@line": "899",
                                "#text": "Sets the priority of the #SoupMessage. See\n[method@Message.set_priority] for further details."
                            },
                            "type": {
                                "@name": "MessagePriority"
                            }
                        },
                        {
                            "@name": "reason-phrase",
                            "@transfer-ownership": "none",
                            "@getter": "get_reason_phrase",
                            "attribute": {
                                "@name": "org.gtk.Property.get",
                                "@value": "soup_message_get_reason_phrase"
                            },
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../libsoup/soup-message.c",
                                "@line": "764",
                                "#text": "The HTTP response reason phrase."
                            },
                            "type": {
                                "@name": "utf8",
                                "@c:type": "gchar*"
                            }
                        },
                        {
                            "@name": "remote-address",
                            "@transfer-ownership": "none",
                            "@getter": "get_remote_address",
                            "attribute": {
                                "@name": "org.gtk.Property.get",
                                "@value": "soup_message_get_remote_address"
                            },
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../libsoup/soup-message.c",
                                "@line": "886",
                                "#text": "The remote [class@Gio.SocketAddress] of the connection associated\nwith the message."
                            },
                            "type": {
                                "@name": "Gio.SocketAddress"
                            }
                        },
                        {
                            "@name": "request-headers",
                            "@transfer-ownership": "none",
                            "@getter": "get_request_headers",
                            "attribute": {
                                "@name": "org.gtk.Property.get",
                                "@value": "soup_message_get_request_headers"
                            },
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../libsoup/soup-message.c",
                                "@line": "811",
                                "#text": "The HTTP request headers."
                            },
                            "type": {
                                "@name": "MessageHeaders"
                            }
                        },
                        {
                            "@name": "response-headers",
                            "@transfer-ownership": "none",
                            "@getter": "get_response_headers",
                            "attribute": {
                                "@name": "org.gtk.Property.get",
                                "@value": "soup_message_get_response_headers"
                            },
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../libsoup/soup-message.c",
                                "@line": "823",
                                "#text": "The HTTP response headers."
                            },
                            "type": {
                                "@name": "MessageHeaders"
                            }
                        },
                        {
                            "@name": "site-for-cookies",
                            "@writable": "1",
                            "@transfer-ownership": "none",
                            "@setter": "set_site_for_cookies",
                            "@getter": "get_site_for_cookies",
                            "attribute": [
                                {
                                    "@name": "org.gtk.Property.get",
                                    "@value": "soup_message_get_site_for_cookies"
                                },
                                {
                                    "@name": "org.gtk.Property.set",
                                    "@value": "soup_message_set_site_for_cookies"
                                }
                            ],
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../libsoup/soup-message.c",
                                "@line": "789",
                                "#text": "Site used to compare cookies against. Used for SameSite cookie support."
                            },
                            "type": {
                                "@name": "GLib.Uri"
                            }
                        },
                        {
                            "@name": "status-code",
                            "@transfer-ownership": "none",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../libsoup/soup-message.c",
                                "@line": "752",
                                "#text": "The HTTP response status code."
                            },
                            "type": {
                                "@name": "guint",
                                "@c:type": "guint"
                            }
                        },
                        {
                            "@name": "tls-ciphersuite-name",
                            "@transfer-ownership": "none",
                            "@getter": "get_tls_ciphersuite_name",
                            "attribute": {
                                "@name": "org.gtk.Property.get",
                                "@value": "soup_message_get_tls_ciphersuite_name"
                            },
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../libsoup/soup-message.c",
                                "@line": "873",
                                "#text": "The Name of TLS ciphersuite negotiated for this message connection."
                            },
                            "type": {
                                "@name": "utf8",
                                "@c:type": "gchar*"
                            }
                        },
                        {
                            "@name": "tls-peer-certificate",
                            "@transfer-ownership": "none",
                            "@getter": "get_tls_peer_certificate",
                            "attribute": {
                                "@name": "org.gtk.Property.get",
                                "@value": "soup_message_get_tls_peer_certificate"
                            },
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../libsoup/soup-message.c",
                                "@line": "835",
                                "#text": "The peer's [class@Gio.TlsCertificate] associated with the message."
                            },
                            "type": {
                                "@name": "Gio.TlsCertificate"
                            }
                        },
                        {
                            "@name": "tls-peer-certificate-errors",
                            "@transfer-ownership": "none",
                            "@getter": "get_tls_peer_certificate_errors",
                            "attribute": {
                                "@name": "org.gtk.Property.get",
                                "@value": "soup_message_get_tls_peer_certificate_errors"
                            },
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../libsoup/soup-message.c",
                                "@line": "847",
                                "#text": "The verification errors on [property@Message:tls-peer-certificate]."
                            },
                            "type": {
                                "@name": "Gio.TlsCertificateFlags"
                            }
                        },
                        {
                            "@name": "tls-protocol-version",
                            "@transfer-ownership": "none",
                            "@getter": "get_tls_protocol_version",
                            "attribute": {
                                "@name": "org.gtk.Property.get",
                                "@value": "soup_message_get_tls_protocol_version"
                            },
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../libsoup/soup-message.c",
                                "@line": "859",
                                "#text": "The TLS protocol version negotiated for the message connection."
                            },
                            "type": {
                                "@name": "Gio.TlsProtocolVersion"
                            }
                        },
                        {
                            "@name": "uri",
                            "@writable": "1",
                            "@transfer-ownership": "none",
                            "@setter": "set_uri",
                            "@getter": "get_uri",
                            "attribute": [
                                {
                                    "@name": "org.gtk.Property.get",
                                    "@value": "soup_message_get_uri"
                                },
                                {
                                    "@name": "org.gtk.Property.set",
                                    "@value": "soup_message_set_uri"
                                }
                            ],
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../libsoup/soup-message.c",
                                "@line": "714",
                                "#text": "The message's Request-URI."
                            },
                            "type": {
                                "@name": "GLib.Uri"
                            }
                        }
                    ],
                    "glib:signal": [
                        {
                            "@name": "accept-certificate",
                            "@when": "last",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../libsoup/soup-message.c",
                                "@line": "596",
                                "#text": "Emitted during the @msg's connection TLS handshake\nafter an unacceptable TLS certificate has been received.\n\nYou can return %TRUE to accept @tls_certificate despite\n@tls_errors."
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "../libsoup/soup-message.c",
                                    "@line": "608",
                                    "#text": "%TRUE to accept the TLS certificate and stop other\n  handlers from being invoked, or %FALSE to propagate the\n  event further."
                                },
                                "type": {
                                    "@name": "gboolean",
                                    "@c:type": "gboolean"
                                }
                            },
                            "parameters": {
                                "parameter": [
                                    {
                                        "@name": "tls_peer_certificate",
                                        "@transfer-ownership": "none",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "../libsoup/soup-message.c",
                                            "@line": "599",
                                            "#text": "the peer's #GTlsCertificate"
                                        },
                                        "type": {
                                            "@name": "Gio.TlsCertificate"
                                        }
                                    },
                                    {
                                        "@name": "tls_peer_errors",
                                        "@transfer-ownership": "none",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "../libsoup/soup-message.c",
                                            "@line": "600",
                                            "#text": "the tls errors of @tls_certificate"
                                        },
                                        "type": {
                                            "@name": "Gio.TlsCertificateFlags"
                                        }
                                    }
                                ]
                            }
                        },
                        {
                            "@name": "authenticate",
                            "@when": "last",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../libsoup/soup-message.c",
                                "@line": "531",
                                "#text": "Emitted when the message requires authentication.\n\nIf credentials are available call [method@Auth.authenticate] on\n@auth. If these credentials fail, the signal will be emitted again,\nwith @retrying set to %TRUE, which will continue until you return\nwithout calling [method@Auth.authenticate] on @auth.\n\nNote that this may be emitted before @msg's body has been\nfully read.\n\nYou can authenticate @auth asynchronously by calling\n[method@GObject.Object.ref] on @auth and returning %TRUE. The operation will\ncomplete once either [method@Auth.authenticate] or\n[method@Auth.cancel] are called."
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "../libsoup/soup-message.c",
                                    "@line": "552",
                                    "#text": "%TRUE to stop other handlers from being invoked\n  or %FALSE to propagate the event further."
                                },
                                "type": {
                                    "@name": "gboolean",
                                    "@c:type": "gboolean"
                                }
                            },
                            "parameters": {
                                "parameter": [
                                    {
                                        "@name": "auth",
                                        "@transfer-ownership": "none",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "../libsoup/soup-message.c",
                                            "@line": "534",
                                            "#text": "the #SoupAuth to authenticate"
                                        },
                                        "type": {
                                            "@name": "Auth"
                                        }
                                    },
                                    {
                                        "@name": "retrying",
                                        "@transfer-ownership": "none",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "../libsoup/soup-message.c",
                                            "@line": "535",
                                            "#text": "%TRUE if this is the second (or later) attempt"
                                        },
                                        "type": {
                                            "@name": "gboolean",
                                            "@c:type": "gboolean"
                                        }
                                    }
                                ]
                            }
                        },
                        {
                            "@name": "content-sniffed",
                            "@when": "first",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../libsoup/soup-message.c",
                                "@line": "454",
                                "#text": "This signal is emitted after [signal@Message::got-headers].\n\nIf content sniffing is disabled, or no content sniffing will be\nperformed, due to the sniffer deciding to trust the\nContent-Type sent by the server, this signal is emitted\nimmediately after [signal@Message::got-headers], and @type is\n%NULL."
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "type": {
                                    "@name": "none",
                                    "@c:type": "void"
                                }
                            },
                            "parameters": {
                                "parameter": [
                                    {
                                        "@name": "type",
                                        "@transfer-ownership": "none",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "../libsoup/soup-message.c",
                                            "@line": "457",
                                            "#text": "the content type that we got from sniffing"
                                        },
                                        "type": {
                                            "@name": "utf8",
                                            "@c:type": "gchar*"
                                        }
                                    },
                                    {
                                        "@name": "params",
                                        "@transfer-ownership": "none",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "../libsoup/soup-message.c",
                                            "@line": "458",
                                            "#text": "a #GHashTable with the parameters"
                                        },
                                        "type": {
                                            "@name": "GLib.HashTable",
                                            "type": [
                                                {
                                                    "@name": "utf8"
                                                },
                                                {
                                                    "@name": "utf8"
                                                }
                                            ]
                                        }
                                    }
                                ]
                            }
                        },
                        {
                            "@name": "finished",
                            "@when": "first",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../libsoup/soup-message.c",
                                "@line": "514",
                                "#text": "Emitted when all HTTP processing is finished for a message.\n\n(After [signal@Message::got_body])."
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "type": {
                                    "@name": "none",
                                    "@c:type": "void"
                                }
                            }
                        },
                        {
                            "@name": "got-body",
                            "@when": "first",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../libsoup/soup-message.c",
                                "@line": "439",
                                "#text": "Emitted after receiving the complete message response body."
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "type": {
                                    "@name": "none",
                                    "@c:type": "void"
                                }
                            }
                        },
                        {
                            "@name": "got-headers",
                            "@when": "first",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../libsoup/soup-message.c",
                                "@line": "411",
                                "#text": "Emitted after receiving the Status-Line and response headers.\n\nSee also [method@Message.add_header_handler] and\n[method@Message.add_status_code_handler], which can be used to\nconnect to a subset of emissions of this signal.\n\nIf you cancel or requeue @msg while processing this signal,\nthen the current HTTP I/O will be stopped after this signal\nemission finished, and @msg's connection will be closed.\n(If you need to requeue a message--eg, after handling\nauthentication or redirection--it is usually better to\nrequeue it from a [signal@Message::got-body] handler rather\nthan a [signal@Message::got_headers] handler, so that the\nexisting HTTP connection can be reused.)"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "type": {
                                    "@name": "none",
                                    "@c:type": "void"
                                }
                            }
                        },
                        {
                            "@name": "got-informational",
                            "@when": "first",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../libsoup/soup-message.c",
                                "@line": "387",
                                "#text": "Emitted after receiving a 1xx (Informational) response for\na (client-side) message.\n\nThe response_headers will be filled in with the headers associated\nwith the informational response; however, those header values will be\nerased after this signal is done.\n\nIf you cancel or requeue @msg while processing this signal,\nthen the current HTTP I/O will be stopped after this signal\nemission finished, and @msg's connection will be closed."
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "type": {
                                    "@name": "none",
                                    "@c:type": "void"
                                }
                            }
                        },
                        {
                            "@name": "hsts-enforced",
                            "@when": "last",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../libsoup/soup-message.c",
                                "@line": "684",
                                "#text": "Emitted when [class@HSTSEnforcer] has upgraded the protocol\nfor @msg to HTTPS as a result of matching its domain with\na HSTS policy."
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "type": {
                                    "@name": "none",
                                    "@c:type": "void"
                                }
                            }
                        },
                        {
                            "@name": "network-event",
                            "@when": "first",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../libsoup/soup-message.c",
                                "@line": "566",
                                "#text": "Emitted to indicate that some network-related event\nrelated to @msg has occurred.\n\nThis essentially proxies the [signal@Gio.SocketClient::event] signal,\nbut only for events that occur while @msg \"owns\" the connection; if\n@msg is sent on an existing persistent connection, then this signal\nwill not be emitted. (If you want to force the message to be sent on\na new connection, set the %SOUP_MESSAGE_NEW_CONNECTION flag on it.)\n\nSee [signal@Gio.SocketClient::event] for more information on what\nthe different values of @event correspond to, and what\n@connection will be in each case."
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "type": {
                                    "@name": "none",
                                    "@c:type": "void"
                                }
                            },
                            "parameters": {
                                "parameter": [
                                    {
                                        "@name": "event",
                                        "@transfer-ownership": "none",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "../libsoup/soup-message.c",
                                            "@line": "569",
                                            "#text": "the network event"
                                        },
                                        "type": {
                                            "@name": "Gio.SocketClientEvent"
                                        }
                                    },
                                    {
                                        "@name": "connection",
                                        "@transfer-ownership": "none",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "../libsoup/soup-message.c",
                                            "@line": "570",
                                            "#text": "the current state of the network connection"
                                        },
                                        "type": {
                                            "@name": "Gio.IOStream"
                                        }
                                    }
                                ]
                            }
                        },
                        {
                            "@name": "request-certificate",
                            "@when": "last",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../libsoup/soup-message.c",
                                "@line": "623",
                                "#text": "Emitted during the @msg's connection TLS handshake when\n@tls_connection requests a certificate from the client.\n\nYou can set the client certificate by calling\n[method@Message.set_tls_client_certificate] and returning %TRUE. It's\npossible to handle the request asynchornously by returning %TRUE and\ncall [method@Message.set_tls_client_certificate] later once the\ncertificate is available. Note that this signal is not emitted if\n[property@Session:tls-interaction] was set, or if\n[method@Message.set_tls_client_certificate] was called before the\nconnection TLS handshake started."
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "../libsoup/soup-message.c",
                                    "@line": "640",
                                    "#text": "%TRUE to handle the request, or %FALSE to make the connection\n  fail with %G_TLS_ERROR_CERTIFICATE_REQUIRED."
                                },
                                "type": {
                                    "@name": "gboolean",
                                    "@c:type": "gboolean"
                                }
                            },
                            "parameters": {
                                "parameter": {
                                    "@name": "tls_connection",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../libsoup/soup-message.c",
                                        "@line": "626",
                                        "#text": "the #GTlsClientConnection"
                                    },
                                    "type": {
                                        "@name": "Gio.TlsClientConnection"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "request-certificate-password",
                            "@when": "last",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../libsoup/soup-message.c",
                                "@line": "653",
                                "#text": "Emitted during the @msg's connection TLS handshake when\n@tls_connection requests a certificate password from the client.\n\nYou can set the certificate password on @password, then call\n[method@Message.tls_client_certificate_password_request_complete] and\nreturn %TRUE to handle the signal synchronously. It's possible to\nhandle the request asynchornously by calling\n[method@GObject.Object.ref] on @password, then returning %TRUE and\ncall\n[method@Message.tls_client_certificate_password_request_complete]\nlater after setting the password on @password. Note that this signal\nis not emitted if [property@Session:tls-interaction] was set."
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "../libsoup/soup-message.c",
                                    "@line": "671",
                                    "#text": "%TRUE to handle the request, or %FALSE to make the connection\n  fail with %G_TLS_ERROR_CERTIFICATE_REQUIRED."
                                },
                                "type": {
                                    "@name": "gboolean",
                                    "@c:type": "gboolean"
                                }
                            },
                            "parameters": {
                                "parameter": {
                                    "@name": "tls_password",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../libsoup/soup-message.c",
                                        "@line": "656",
                                        "#text": "the #GTlsPassword"
                                    },
                                    "type": {
                                        "@name": "Gio.TlsPassword"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "restarted",
                            "@when": "first",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../libsoup/soup-message.c",
                                "@line": "494",
                                "#text": "Emitted when a request that was already sent once is now\nbeing sent again.\n\ne.g. because the first attempt received a\nredirection response, or because we needed to use\nauthentication."
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "type": {
                                    "@name": "none",
                                    "@c:type": "void"
                                }
                            }
                        },
                        {
                            "@name": "starting",
                            "@when": "first",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../libsoup/soup-message.c",
                                "@line": "479",
                                "#text": "Emitted just before a message is sent."
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "type": {
                                    "@name": "none",
                                    "@c:type": "void"
                                }
                            }
                        },
                        {
                            "@name": "wrote-body",
                            "@when": "first",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../libsoup/soup-message.c",
                                "@line": "371",
                                "#text": "Emitted immediately after writing the complete body for a\nmessage."
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "type": {
                                    "@name": "none",
                                    "@c:type": "void"
                                }
                            }
                        },
                        {
                            "@name": "wrote-body-data",
                            "@when": "first",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../libsoup/soup-message.c",
                                "@line": "353",
                                "#text": "Emitted immediately after writing a portion of the message\nbody to the network."
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "type": {
                                    "@name": "none",
                                    "@c:type": "void"
                                }
                            },
                            "parameters": {
                                "parameter": {
                                    "@name": "chunk_size",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../libsoup/soup-message.c",
                                        "@line": "356",
                                        "#text": "the number of bytes written"
                                    },
                                    "type": {
                                        "@name": "guint",
                                        "@c:type": "guint"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "wrote-headers",
                            "@when": "first",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../libsoup/soup-message.c",
                                "@line": "337",
                                "#text": "Emitted immediately after writing the request headers for a\nmessage."
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "type": {
                                    "@name": "none",
                                    "@c:type": "void"
                                }
                            }
                        }
                    ]
                },
                {
                    "@name": "MultipartInputStream",
                    "@c:symbol-prefix": "multipart_input_stream",
                    "@c:type": "SoupMultipartInputStream",
                    "@parent": "Gio.FilterInputStream",
                    "@final": "1",
                    "@glib:type-name": "SoupMultipartInputStream",
                    "@glib:get-type": "soup_multipart_input_stream_get_type",
                    "@glib:type-struct": "MultipartInputStreamClass",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "../libsoup/soup-multipart-input-stream.c",
                        "@line": "23",
                        "#text": "Handles streams of multipart messages.\n\nThis adds support for the multipart responses. For handling the\nmultiple parts the user needs to wrap the [class@Gio.InputStream] obtained by\nsending the request with a [class@MultipartInputStream] and use\n[method@MultipartInputStream.next_part] before reading. Responses\nwhich are not wrapped will be treated like non-multipart responses.\n\nNote that although #SoupMultipartInputStream is a [class@Gio.InputStream],\nyou should not read directly from it, and the results are undefined\nif you do."
                    },
                    "source-position": {
                        "@filename": "../libsoup/soup-multipart-input-stream.h",
                        "@line": "15"
                    },
                    "implements": {
                        "@name": "Gio.PollableInputStream"
                    },
                    "constructor": {
                        "@name": "new",
                        "@c:identifier": "soup_multipart_input_stream_new",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "../libsoup/soup-multipart-input-stream.c",
                            "@line": "429",
                            "#text": "Creates a new #SoupMultipartInputStream that wraps the\n[class@Gio.InputStream] obtained by sending the [class@Message].\n\nReads should not be done directly through this object, use the input streams\nreturned by [method@MultipartInputStream.next_part] or its async\ncounterpart instead."
                        },
                        "source-position": {
                            "@filename": "../libsoup/soup-multipart-input-stream.h",
                            "@line": "18"
                        },
                        "return-value": {
                            "@transfer-ownership": "full",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../libsoup/soup-multipart-input-stream.c",
                                "@line": "441",
                                "#text": "a new #SoupMultipartInputStream"
                            },
                            "type": {
                                "@name": "MultipartInputStream",
                                "@c:type": "SoupMultipartInputStream*"
                            }
                        },
                        "parameters": {
                            "parameter": [
                                {
                                    "@name": "msg",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../libsoup/soup-multipart-input-stream.c",
                                        "@line": "431",
                                        "#text": "the #SoupMessage the response is related to."
                                    },
                                    "type": {
                                        "@name": "Message",
                                        "@c:type": "SoupMessage*"
                                    }
                                },
                                {
                                    "@name": "base_stream",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../libsoup/soup-multipart-input-stream.c",
                                        "@line": "432",
                                        "#text": "the #GInputStream returned by sending the request."
                                    },
                                    "type": {
                                        "@name": "Gio.InputStream",
                                        "@c:type": "GInputStream*"
                                    }
                                }
                            ]
                        }
                    },
                    "method": [
                        {
                            "@name": "get_headers",
                            "@c:identifier": "soup_multipart_input_stream_get_headers",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../libsoup/soup-multipart-input-stream.c",
                                "@line": "576",
                                "#text": "Obtains the headers for the part currently being processed.\n\nNote that the [struct@MessageHeaders] that are returned are owned by the\n#SoupMultipartInputStream and will be replaced when a call is made to\n[method@MultipartInputStream.next_part] or its async counterpart, so if\nkeeping the headers is required, a copy must be made.\n\nNote that if a part had no headers at all an empty [struct@MessageHeaders]\nwill be returned."
                            },
                            "source-position": {
                                "@filename": "../libsoup/soup-multipart-input-stream.h",
                                "@line": "39"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "@nullable": "1",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "../libsoup/soup-multipart-input-stream.c",
                                    "@line": "590",
                                    "#text": "a #SoupMessageHeaders\n  containing the headers for the part currently being processed or\n  %NULL if the headers failed to parse."
                                },
                                "type": {
                                    "@name": "MessageHeaders",
                                    "@c:type": "SoupMessageHeaders*"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "multipart",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../libsoup/soup-multipart-input-stream.c",
                                        "@line": "578",
                                        "#text": "a #SoupMultipartInputStream."
                                    },
                                    "type": {
                                        "@name": "MultipartInputStream",
                                        "@c:type": "SoupMultipartInputStream*"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "next_part",
                            "@c:identifier": "soup_multipart_input_stream_next_part",
                            "@throws": "1",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../libsoup/soup-multipart-input-stream.c",
                                "@line": "453",
                                "#text": "Obtains an input stream for the next part.\n\nWhen dealing with a multipart response the input stream needs to be wrapped\nin a #SoupMultipartInputStream and this function or its async counterpart\nneed to be called to obtain the first part for reading.\n\nAfter calling this function,\n[method@MultipartInputStream.get_headers] can be used to obtain the\nheaders for the first part. A read of 0 bytes indicates the end of\nthe part; a new call to this function should be done at that point,\nto obtain the next part."
                            },
                            "source-position": {
                                "@filename": "../libsoup/soup-multipart-input-stream.h",
                                "@line": "22"
                            },
                            "return-value": {
                                "@transfer-ownership": "full",
                                "@nullable": "1",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "../libsoup/soup-multipart-input-stream.c",
                                    "@line": "471",
                                    "#text": "a new #GInputStream, or\n  %NULL if there are no more parts"
                                },
                                "type": {
                                    "@name": "Gio.InputStream",
                                    "@c:type": "GInputStream*"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "multipart",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../libsoup/soup-multipart-input-stream.c",
                                        "@line": "455",
                                        "#text": "the #SoupMultipartInputStream"
                                    },
                                    "type": {
                                        "@name": "MultipartInputStream",
                                        "@c:type": "SoupMultipartInputStream*"
                                    }
                                },
                                "parameter": {
                                    "@name": "cancellable",
                                    "@transfer-ownership": "none",
                                    "@nullable": "1",
                                    "@allow-none": "1",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../libsoup/soup-multipart-input-stream.c",
                                        "@line": "456",
                                        "#text": "a #GCancellable"
                                    },
                                    "type": {
                                        "@name": "Gio.Cancellable",
                                        "@c:type": "GCancellable*"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "next_part_async",
                            "@c:identifier": "soup_multipart_input_stream_next_part_async",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../libsoup/soup-multipart-input-stream.c",
                                "@line": "516",
                                "#text": "Obtains a [class@Gio.InputStream] for the next request.\n\nSee [method@MultipartInputStream.next_part] for details on the workflow."
                            },
                            "source-position": {
                                "@filename": "../libsoup/soup-multipart-input-stream.h",
                                "@line": "27"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "type": {
                                    "@name": "none",
                                    "@c:type": "void"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "multipart",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../libsoup/soup-multipart-input-stream.c",
                                        "@line": "518",
                                        "#text": "the #SoupMultipartInputStream."
                                    },
                                    "type": {
                                        "@name": "MultipartInputStream",
                                        "@c:type": "SoupMultipartInputStream*"
                                    }
                                },
                                "parameter": [
                                    {
                                        "@name": "io_priority",
                                        "@transfer-ownership": "none",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "../libsoup/soup-multipart-input-stream.c",
                                            "@line": "519",
                                            "#text": "the I/O priority for the request."
                                        },
                                        "type": {
                                            "@name": "gint",
                                            "@c:type": "int"
                                        }
                                    },
                                    {
                                        "@name": "cancellable",
                                        "@transfer-ownership": "none",
                                        "@nullable": "1",
                                        "@allow-none": "1",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "../libsoup/soup-multipart-input-stream.c",
                                            "@line": "520",
                                            "#text": "a #GCancellable."
                                        },
                                        "type": {
                                            "@name": "Gio.Cancellable",
                                            "@c:type": "GCancellable*"
                                        }
                                    },
                                    {
                                        "@name": "callback",
                                        "@transfer-ownership": "none",
                                        "@nullable": "1",
                                        "@allow-none": "1",
                                        "@scope": "async",
                                        "@closure": "3",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "../libsoup/soup-multipart-input-stream.c",
                                            "@line": "521",
                                            "#text": "callback to call when request is satisfied."
                                        },
                                        "type": {
                                            "@name": "Gio.AsyncReadyCallback",
                                            "@c:type": "GAsyncReadyCallback"
                                        }
                                    },
                                    {
                                        "@name": "data",
                                        "@transfer-ownership": "none",
                                        "@nullable": "1",
                                        "@allow-none": "1",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "../libsoup/soup-multipart-input-stream.c",
                                            "@line": "522",
                                            "#text": "data for @callback"
                                        },
                                        "type": {
                                            "@name": "gpointer",
                                            "@c:type": "gpointer"
                                        }
                                    }
                                ]
                            }
                        },
                        {
                            "@name": "next_part_finish",
                            "@c:identifier": "soup_multipart_input_stream_next_part_finish",
                            "@throws": "1",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../libsoup/soup-multipart-input-stream.c",
                                "@line": "554",
                                "#text": "Finishes an asynchronous request for the next part."
                            },
                            "source-position": {
                                "@filename": "../libsoup/soup-multipart-input-stream.h",
                                "@line": "34"
                            },
                            "return-value": {
                                "@transfer-ownership": "full",
                                "@nullable": "1",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "../libsoup/soup-multipart-input-stream.c",
                                    "@line": "562",
                                    "#text": "a newly created\n  [class@Gio.InputStream] for reading the next part or %NULL if there are no\n  more parts."
                                },
                                "type": {
                                    "@name": "Gio.InputStream",
                                    "@c:type": "GInputStream*"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "multipart",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../libsoup/soup-multipart-input-stream.c",
                                        "@line": "556",
                                        "#text": "a #SoupMultipartInputStream."
                                    },
                                    "type": {
                                        "@name": "MultipartInputStream",
                                        "@c:type": "SoupMultipartInputStream*"
                                    }
                                },
                                "parameter": {
                                    "@name": "result",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../libsoup/soup-multipart-input-stream.c",
                                        "@line": "557",
                                        "#text": "a #GAsyncResult."
                                    },
                                    "type": {
                                        "@name": "Gio.AsyncResult",
                                        "@c:type": "GAsyncResult*"
                                    }
                                }
                            }
                        }
                    ],
                    "property": {
                        "@name": "message",
                        "@writable": "1",
                        "@construct-only": "1",
                        "@transfer-ownership": "none",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "../libsoup/soup-multipart-input-stream.c",
                            "@line": "307",
                            "#text": "The [class@Message]."
                        },
                        "type": {
                            "@name": "Message"
                        }
                    }
                },
                {
                    "@name": "Server",
                    "@c:symbol-prefix": "server",
                    "@c:type": "SoupServer",
                    "@parent": "GObject.Object",
                    "@glib:type-name": "SoupServer",
                    "@glib:get-type": "soup_server_get_type",
                    "@glib:type-struct": "ServerClass",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "../libsoup/server/soup-server.c",
                        "@line": "28",
                        "#text": "A HTTP server.\n\n#SoupServer implements a simple HTTP server.\n\nTo begin, create a server using [ctor@Server.new]. Add at least one\nhandler by calling [method@Server.add_handler] or\n[method@Server.add_early_handler]; the handler will be called to\nprocess any requests underneath the path you pass. (If you want all\nrequests to go to the same handler, just pass \"/\" (or %NULL) for\nthe path.)\n\nWhen a new connection is accepted (or a new request is started on\nan existing persistent connection), the #SoupServer will emit\n[signal@Server::request-started] and then begin processing the request\nas described below, but note that once the message is assigned a\nstatus-code, then callbacks after that point will be\nskipped. Note also that it is not defined when the callbacks happen\nrelative to various [class@ServerMessage] signals.\n\nOnce the headers have been read, #SoupServer will check if there is\na [class@AuthDomain] `(qv)` covering the Request-URI; if so, and if the\nmessage does not contain suitable authorization, then the\n[class@AuthDomain] will set a status of %SOUP_STATUS_UNAUTHORIZED on\nthe message.\n\nAfter checking for authorization, #SoupServer will look for \"early\"\nhandlers (added with [method@Server.add_early_handler]) matching the\nRequest-URI. If one is found, it will be run; in particular, this\ncan be used to connect to signals to do a streaming read of the\nrequest body.\n\n(At this point, if the request headers contain `Expect:\n100-continue`, and a status code has been set, then\n#SoupServer will skip the remaining steps and return the response.\nIf the request headers contain `Expect:\n100-continue` and no status code has been set,\n#SoupServer will return a %SOUP_STATUS_CONTINUE status before\ncontinuing.)\n\nThe server will then read in the response body (if present). At\nthis point, if there are no handlers at all defined for the\nRequest-URI, then the server will return %SOUP_STATUS_NOT_FOUND to\nthe client.\n\nOtherwise (assuming no previous step assigned a status to the\nmessage) any \"normal\" handlers (added with\n[method@Server.add_handler]) for the message's Request-URI will be\nrun.\n\nThen, if the path has a WebSocket handler registered (and has\nnot yet been assigned a status), #SoupServer will attempt to\nvalidate the WebSocket handshake, filling in the response and\nsetting a status of %SOUP_STATUS_SWITCHING_PROTOCOLS or\n%SOUP_STATUS_BAD_REQUEST accordingly.\n\nIf the message still has no status code at this point (and has not\nbeen paused with [method@ServerMessage.pause]), then it will be\ngiven a status of %SOUP_STATUS_INTERNAL_SERVER_ERROR (because at\nleast one handler ran, but returned without assigning a status).\n\nFinally, the server will emit [signal@Server::request-finished] (or\n[signal@Server::request-aborted] if an I/O error occurred before\nhandling was completed).\n\nIf you want to handle the special \"*\" URI (eg, \"OPTIONS *\"), you\nmust explicitly register a handler for \"*\"; the default handler\nwill not be used for that case.\n\nIf you want to process https connections in addition to (or instead\nof) http connections, you can set the [property@Server:tls-certificate]\nproperty.\n\nOnce the server is set up, make one or more calls to\n[method@Server.listen], [method@Server.listen_local], or\n[method@Server.listen_all] to tell it where to listen for\nconnections. (All ports on a #SoupServer use the same handlers; if\nyou need to handle some ports differently, such as returning\ndifferent data for http and https, you'll need to create multiple\n`SoupServer`s, or else check the passed-in URI in the handler\nfunction.).\n\n#SoupServer will begin processing connections as soon as you return\nto (or start) the main loop for the current thread-default\n[struct@GLib.MainContext]."
                    },
                    "source-position": {
                        "@filename": "../libsoup/server/soup-server.h",
                        "@line": "38"
                    },
                    "constructor": {
                        "@name": "new",
                        "@c:identifier": "soup_server_new",
                        "@introspectable": "0",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "../libsoup/server/soup-server.c",
                            "@line": "543",
                            "#text": "Creates a new #SoupServer.\n\nThis is exactly equivalent to calling [ctor@GObject.Object.new] and\nspecifying %SOUP_TYPE_SERVER as the type."
                        },
                        "source-position": {
                            "@filename": "../libsoup/server/soup-server.h",
                            "@line": "41"
                        },
                        "return-value": {
                            "@transfer-ownership": "full",
                            "@nullable": "1",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../libsoup/server/soup-server.c",
                                "@line": "553",
                                "#text": "a new #SoupServer. If you are using\n  certain legacy properties, this may also return %NULL if an error\n  occurs."
                            },
                            "type": {
                                "@name": "Server",
                                "@c:type": "SoupServer*"
                            }
                        },
                        "parameters": {
                            "parameter": [
                                {
                                    "@name": "optname1",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../libsoup/server/soup-server.c",
                                        "@line": "545",
                                        "#text": "name of first property to set"
                                    },
                                    "type": {
                                        "@name": "utf8",
                                        "@c:type": "const char*"
                                    }
                                },
                                {
                                    "@name": "...",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../libsoup/server/soup-server.c",
                                        "@line": "546",
                                        "#text": "value of @optname1, followed by additional property/value pairs"
                                    },
                                    "varargs": null
                                }
                            ]
                        }
                    },
                    "virtual-method": [
                        {
                            "@name": "request_aborted",
                            "source-position": {
                                "@filename": "../libsoup/server/soup-server.h",
                                "@line": "34"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "type": {
                                    "@name": "none",
                                    "@c:type": "void"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "server",
                                    "@transfer-ownership": "none",
                                    "type": {
                                        "@name": "Server",
                                        "@c:type": "SoupServer*"
                                    }
                                },
                                "parameter": {
                                    "@name": "msg",
                                    "@transfer-ownership": "none",
                                    "type": {
                                        "@name": "ServerMessage",
                                        "@c:type": "SoupServerMessage*"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "request_finished",
                            "source-position": {
                                "@filename": "../libsoup/server/soup-server.h",
                                "@line": "32"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "type": {
                                    "@name": "none",
                                    "@c:type": "void"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "server",
                                    "@transfer-ownership": "none",
                                    "type": {
                                        "@name": "Server",
                                        "@c:type": "SoupServer*"
                                    }
                                },
                                "parameter": {
                                    "@name": "msg",
                                    "@transfer-ownership": "none",
                                    "type": {
                                        "@name": "ServerMessage",
                                        "@c:type": "SoupServerMessage*"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "request_read",
                            "source-position": {
                                "@filename": "../libsoup/server/soup-server.h",
                                "@line": "30"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "type": {
                                    "@name": "none",
                                    "@c:type": "void"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "server",
                                    "@transfer-ownership": "none",
                                    "type": {
                                        "@name": "Server",
                                        "@c:type": "SoupServer*"
                                    }
                                },
                                "parameter": {
                                    "@name": "msg",
                                    "@transfer-ownership": "none",
                                    "type": {
                                        "@name": "ServerMessage",
                                        "@c:type": "SoupServerMessage*"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "request_started",
                            "source-position": {
                                "@filename": "../libsoup/server/soup-server.h",
                                "@line": "28"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "type": {
                                    "@name": "none",
                                    "@c:type": "void"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "server",
                                    "@transfer-ownership": "none",
                                    "type": {
                                        "@name": "Server",
                                        "@c:type": "SoupServer*"
                                    }
                                },
                                "parameter": {
                                    "@name": "msg",
                                    "@transfer-ownership": "none",
                                    "type": {
                                        "@name": "ServerMessage",
                                        "@c:type": "SoupServerMessage*"
                                    }
                                }
                            }
                        }
                    ],
                    "method": [
                        {
                            "@name": "accept_iostream",
                            "@c:identifier": "soup_server_accept_iostream",
                            "@throws": "1",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../libsoup/server/soup-server.c",
                                "@line": "1094",
                                "#text": "Adds a new client stream to the @server."
                            },
                            "source-position": {
                                "@filename": "../libsoup/server/soup-server.h",
                                "@line": "94"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "../libsoup/server/soup-server.c",
                                    "@line": "1106",
                                    "#text": "%TRUE on success, %FALSE if the stream could not be\n  accepted or any other error occurred (in which case @error will be\n  set)."
                                },
                                "type": {
                                    "@name": "gboolean",
                                    "@c:type": "gboolean"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "server",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../libsoup/server/soup-server.c",
                                        "@line": "1096",
                                        "#text": "a #SoupServer"
                                    },
                                    "type": {
                                        "@name": "Server",
                                        "@c:type": "SoupServer*"
                                    }
                                },
                                "parameter": [
                                    {
                                        "@name": "stream",
                                        "@transfer-ownership": "none",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "../libsoup/server/soup-server.c",
                                            "@line": "1097",
                                            "#text": "a #GIOStream"
                                        },
                                        "type": {
                                            "@name": "Gio.IOStream",
                                            "@c:type": "GIOStream*"
                                        }
                                    },
                                    {
                                        "@name": "local_addr",
                                        "@transfer-ownership": "none",
                                        "@nullable": "1",
                                        "@allow-none": "1",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "../libsoup/server/soup-server.c",
                                            "@line": "1098",
                                            "#text": "the local #GSocketAddress associated with the\n  @stream"
                                        },
                                        "type": {
                                            "@name": "Gio.SocketAddress",
                                            "@c:type": "GSocketAddress*"
                                        }
                                    },
                                    {
                                        "@name": "remote_addr",
                                        "@transfer-ownership": "none",
                                        "@nullable": "1",
                                        "@allow-none": "1",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "../libsoup/server/soup-server.c",
                                            "@line": "1100",
                                            "#text": "the remote #GSocketAddress associated with the\n  @stream"
                                        },
                                        "type": {
                                            "@name": "Gio.SocketAddress",
                                            "@c:type": "GSocketAddress*"
                                        }
                                    }
                                ]
                            }
                        },
                        {
                            "@name": "add_auth_domain",
                            "@c:identifier": "soup_server_add_auth_domain",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../libsoup/server/soup-server.c",
                                "@line": "1831",
                                "#text": "Adds an authentication domain to @server.\n\nEach auth domain will have the chance to require authentication for each\nrequest that comes in; normally auth domains will require authentication for\nrequests on certain paths that they have been set up to watch, or that meet\nother criteria set by the caller. If an auth domain determines that a request\nrequires authentication (and the request doesn't contain authentication),\n@server will automatically reject the request with an appropriate status (401\nUnauthorized or 407 Proxy Authentication Required). If the request used the\nSoupServer:100-continue Expectation, @server will reject it before the\nrequest body is sent."
                            },
                            "source-position": {
                                "@filename": "../libsoup/server/soup-server.h",
                                "@line": "146"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "type": {
                                    "@name": "none",
                                    "@c:type": "void"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "server",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../libsoup/server/soup-server.c",
                                        "@line": "1833",
                                        "#text": "a #SoupServer"
                                    },
                                    "type": {
                                        "@name": "Server",
                                        "@c:type": "SoupServer*"
                                    }
                                },
                                "parameter": {
                                    "@name": "auth_domain",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../libsoup/server/soup-server.c",
                                        "@line": "1834",
                                        "#text": "a #SoupAuthDomain"
                                    },
                                    "type": {
                                        "@name": "AuthDomain",
                                        "@c:type": "SoupAuthDomain*"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "add_early_handler",
                            "@c:identifier": "soup_server_add_early_handler",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../libsoup/server/soup-server.c",
                                "@line": "1677",
                                "#text": "Adds an \"early\" handler to @server for requests prefixed by @path.\n\nNote that \"normal\" and \"early\" handlers are matched up together, so if you\nadd a normal handler for \"/foo\" and an early handler for \"/foo/bar\", then a\nrequest to \"/foo/bar\" (or any path below it) will run only the early handler.\n(But if you add both handlers at the same path, then both will get run.)\n\nFor requests under @path (that have not already been assigned a\nstatus code by a [class@AuthDomain] or a signal handler), @callback\nwill be invoked after receiving the request headers, but before\nreceiving the request body; the message's method and\nrequest-headers properties will be set.\n\nEarly handlers are generally used for processing requests with request bodies\nin a streaming fashion. If you determine that the request will contain a\nmessage body, normally you would call [method@MessageBody.set_accumulate] on\nthe message's request-body to turn off request-body accumulation, and connect\nto the message's [signal@ServerMessage::got-chunk] signal to process each\nchunk as it comes in.\n\nTo complete the message processing after the full message body has\nbeen read, you can either also connect to [signal@ServerMessage::got-body],\nor else you can register a non-early handler for @path as well. As\nlong as you have not set the status-code by the time\n[signal@ServerMessage::got-body] is emitted, the non-early handler will be\nrun as well."
                            },
                            "source-position": {
                                "@filename": "../libsoup/server/soup-server.h",
                                "@line": "115"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "type": {
                                    "@name": "none",
                                    "@c:type": "void"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "server",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../libsoup/server/soup-server.c",
                                        "@line": "1679",
                                        "#text": "a #SoupServer"
                                    },
                                    "type": {
                                        "@name": "Server",
                                        "@c:type": "SoupServer*"
                                    }
                                },
                                "parameter": [
                                    {
                                        "@name": "path",
                                        "@transfer-ownership": "none",
                                        "@nullable": "1",
                                        "@allow-none": "1",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "../libsoup/server/soup-server.c",
                                            "@line": "1680",
                                            "#text": "the toplevel path for the handler"
                                        },
                                        "type": {
                                            "@name": "utf8",
                                            "@c:type": "const char*"
                                        }
                                    },
                                    {
                                        "@name": "callback",
                                        "@transfer-ownership": "none",
                                        "@scope": "notified",
                                        "@closure": "2",
                                        "@destroy": "3",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "../libsoup/server/soup-server.c",
                                            "@line": "1681",
                                            "#text": "callback to invoke for\n  requests under @path"
                                        },
                                        "type": {
                                            "@name": "ServerCallback",
                                            "@c:type": "SoupServerCallback"
                                        }
                                    },
                                    {
                                        "@name": "user_data",
                                        "@transfer-ownership": "none",
                                        "@nullable": "1",
                                        "@allow-none": "1",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "../libsoup/server/soup-server.c",
                                            "@line": "1683",
                                            "#text": "data for @callback"
                                        },
                                        "type": {
                                            "@name": "gpointer",
                                            "@c:type": "gpointer"
                                        }
                                    },
                                    {
                                        "@name": "destroy",
                                        "@transfer-ownership": "none",
                                        "@scope": "async",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "../libsoup/server/soup-server.c",
                                            "@line": "1684",
                                            "#text": "destroy notifier to free @user_data"
                                        },
                                        "type": {
                                            "@name": "GLib.DestroyNotify",
                                            "@c:type": "GDestroyNotify"
                                        }
                                    }
                                ]
                            }
                        },
                        {
                            "@name": "add_handler",
                            "@c:identifier": "soup_server_add_handler",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../libsoup/server/soup-server.c",
                                "@line": "1613",
                                "#text": "Adds a handler to @server for requests prefixed by @path.\n\nIf @path is %NULL or \"/\", then this will be the default handler for all\nrequests that don't have a more specific handler. (Note though that if you\nwant to handle requests to the special \"*\" URI, you must explicitly register\na handler for \"*\"; the default handler will not be used for that case.)\n\nFor requests under @path (that have not already been assigned a\nstatus code by a [class@AuthDomain], an early server handler, or a\nsignal handler), @callback will be invoked after receiving the\nrequest body; the [class@ServerMessage]'s method, request-headers,\nand request-body properties will be set.\n\nAfter determining what to do with the request, the callback must at a minimum\ncall [method@ServerMessage.set_status] on the message to set the response\nstatus code. Additionally, it may set response headers and/or fill in the\nresponse body.\n\nIf the callback cannot fully fill in the response before returning\n(eg, if it needs to wait for information from a database, or\nanother network server), it should call [method@ServerMessage.pause]\nto tell @server to not send the response right away. When the\nresponse is ready, call [method@ServerMessage.unpause] to cause it\nto be sent.\n\nTo send the response body a bit at a time using \"chunked\" encoding, first\ncall [method@MessageHeaders.set_encoding] to set %SOUP_ENCODING_CHUNKED on\nthe response-headers. Then call [method@MessageBody.append] (or\n[method@MessageBody.append_bytes])) to append each chunk as it becomes ready,\nand [method@ServerMessage.unpause] to make sure it's running. (The server\nwill automatically pause the message if it is using chunked encoding but no\nmore chunks are available.) When you are done, call\n[method@MessageBody.complete] to indicate that no more chunks are coming."
                            },
                            "source-position": {
                                "@filename": "../libsoup/server/soup-server.h",
                                "@line": "109"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "type": {
                                    "@name": "none",
                                    "@c:type": "void"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "server",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../libsoup/server/soup-server.c",
                                        "@line": "1615",
                                        "#text": "a #SoupServer"
                                    },
                                    "type": {
                                        "@name": "Server",
                                        "@c:type": "SoupServer*"
                                    }
                                },
                                "parameter": [
                                    {
                                        "@name": "path",
                                        "@transfer-ownership": "none",
                                        "@nullable": "1",
                                        "@allow-none": "1",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "../libsoup/server/soup-server.c",
                                            "@line": "1616",
                                            "#text": "the toplevel path for the handler"
                                        },
                                        "type": {
                                            "@name": "utf8",
                                            "@c:type": "const char*"
                                        }
                                    },
                                    {
                                        "@name": "callback",
                                        "@transfer-ownership": "none",
                                        "@scope": "notified",
                                        "@closure": "2",
                                        "@destroy": "3",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "../libsoup/server/soup-server.c",
                                            "@line": "1617",
                                            "#text": "callback to invoke for\n  requests under @path"
                                        },
                                        "type": {
                                            "@name": "ServerCallback",
                                            "@c:type": "SoupServerCallback"
                                        }
                                    },
                                    {
                                        "@name": "user_data",
                                        "@transfer-ownership": "none",
                                        "@nullable": "1",
                                        "@allow-none": "1",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "../libsoup/server/soup-server.c",
                                            "@line": "1619",
                                            "#text": "data for @callback"
                                        },
                                        "type": {
                                            "@name": "gpointer",
                                            "@c:type": "gpointer"
                                        }
                                    },
                                    {
                                        "@name": "destroy",
                                        "@transfer-ownership": "none",
                                        "@scope": "async",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "../libsoup/server/soup-server.c",
                                            "@line": "1620",
                                            "#text": "destroy notifier to free @user_data"
                                        },
                                        "type": {
                                            "@name": "GLib.DestroyNotify",
                                            "@c:type": "GDestroyNotify"
                                        }
                                    }
                                ]
                            }
                        },
                        {
                            "@name": "add_websocket_extension",
                            "@c:identifier": "soup_server_add_websocket_extension",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../libsoup/server/soup-server.c",
                                "@line": "1934",
                                "#text": "Add support for a WebSocket extension of the given @extension_type.\n\nWhen a WebSocket client requests an extension of @extension_type,\na new [class@WebsocketExtension] of type @extension_type will be created\nto handle the request.\n\nNote that [class@WebsocketExtensionDeflate] is supported by default, use\n[method@Server.remove_websocket_extension] if you want to disable it."
                            },
                            "source-position": {
                                "@filename": "../libsoup/server/soup-server.h",
                                "@line": "135"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "type": {
                                    "@name": "none",
                                    "@c:type": "void"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "server",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../libsoup/server/soup-server.c",
                                        "@line": "1936",
                                        "#text": "a #SoupServer"
                                    },
                                    "type": {
                                        "@name": "Server",
                                        "@c:type": "SoupServer*"
                                    }
                                },
                                "parameter": {
                                    "@name": "extension_type",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../libsoup/server/soup-server.c",
                                        "@line": "1937",
                                        "#text": "a #GType"
                                    },
                                    "type": {
                                        "@name": "GType",
                                        "@c:type": "GType"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "add_websocket_handler",
                            "@c:identifier": "soup_server_add_websocket_handler",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../libsoup/server/soup-server.c",
                                "@line": "1751",
                                "#text": "Adds a WebSocket handler to @server for requests prefixed by @path.\n\nIf @path is %NULL or \"/\", then this will be the default handler for all\nrequests that don't have a more specific handler.\n\nWhen a path has a WebSocket handler registered, @server will check\nincoming requests for WebSocket handshakes after all other handlers\nhave run (unless some earlier handler has already set a status code\non the message), and update the request's status, response headers,\nand response body accordingly.\n\nIf @origin is non-%NULL, then only requests containing a matching\n\"Origin\" header will be accepted. If @protocols is non-%NULL, then\nonly requests containing a compatible \"Sec-WebSocket-Protocols\"\nheader will be accepted. More complicated requirements can be\nhandled by adding a normal handler to @path, and having it perform\nwhatever checks are needed and\nsetting a failure status code if the handshake should be rejected."
                            },
                            "source-position": {
                                "@filename": "../libsoup/server/soup-server.h",
                                "@line": "127"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "type": {
                                    "@name": "none",
                                    "@c:type": "void"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "server",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../libsoup/server/soup-server.c",
                                        "@line": "1753",
                                        "#text": "a #SoupServer"
                                    },
                                    "type": {
                                        "@name": "Server",
                                        "@c:type": "SoupServer*"
                                    }
                                },
                                "parameter": [
                                    {
                                        "@name": "path",
                                        "@transfer-ownership": "none",
                                        "@nullable": "1",
                                        "@allow-none": "1",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "../libsoup/server/soup-server.c",
                                            "@line": "1754",
                                            "#text": "the toplevel path for the handler"
                                        },
                                        "type": {
                                            "@name": "utf8",
                                            "@c:type": "const char*"
                                        }
                                    },
                                    {
                                        "@name": "origin",
                                        "@transfer-ownership": "none",
                                        "@nullable": "1",
                                        "@allow-none": "1",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "../libsoup/server/soup-server.c",
                                            "@line": "1755",
                                            "#text": "the origin of the connection"
                                        },
                                        "type": {
                                            "@name": "utf8",
                                            "@c:type": "const char*"
                                        }
                                    },
                                    {
                                        "@name": "protocols",
                                        "@transfer-ownership": "none",
                                        "@nullable": "1",
                                        "@allow-none": "1",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "../libsoup/server/soup-server.c",
                                            "@line": "1756",
                                            "#text": "the protocols\n  supported by this handler"
                                        },
                                        "array": {
                                            "@c:type": "char**",
                                            "type": {
                                                "@name": "utf8",
                                                "@c:type": "char*"
                                            }
                                        }
                                    },
                                    {
                                        "@name": "callback",
                                        "@transfer-ownership": "none",
                                        "@scope": "notified",
                                        "@closure": "4",
                                        "@destroy": "5",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "../libsoup/server/soup-server.c",
                                            "@line": "1758",
                                            "#text": "callback to invoke for\n  successful WebSocket requests under @path"
                                        },
                                        "type": {
                                            "@name": "ServerWebsocketCallback",
                                            "@c:type": "SoupServerWebsocketCallback"
                                        }
                                    },
                                    {
                                        "@name": "user_data",
                                        "@transfer-ownership": "none",
                                        "@nullable": "1",
                                        "@allow-none": "1",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "../libsoup/server/soup-server.c",
                                            "@line": "1760",
                                            "#text": "data for @callback"
                                        },
                                        "type": {
                                            "@name": "gpointer",
                                            "@c:type": "gpointer"
                                        }
                                    },
                                    {
                                        "@name": "destroy",
                                        "@transfer-ownership": "none",
                                        "@scope": "async",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "../libsoup/server/soup-server.c",
                                            "@line": "1761",
                                            "#text": "destroy notifier to free @user_data"
                                        },
                                        "type": {
                                            "@name": "GLib.DestroyNotify",
                                            "@c:type": "GDestroyNotify"
                                        }
                                    }
                                ]
                            }
                        },
                        {
                            "@name": "disconnect",
                            "@c:identifier": "soup_server_disconnect",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../libsoup/server/soup-server.c",
                                "@line": "1137",
                                "#text": "Closes and frees @server's listening sockets.\n\nNote that if there are currently requests in progress on @server, that they\nwill continue to be processed if @server's [struct@GLib.MainContext] is still\nrunning.\n\nYou can call [method@Server.listen], etc, after calling this function\nif you want to start listening again."
                            },
                            "source-position": {
                                "@filename": "../libsoup/server/soup-server.h",
                                "@line": "91"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "type": {
                                    "@name": "none",
                                    "@c:type": "void"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "server",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../libsoup/server/soup-server.c",
                                        "@line": "1139",
                                        "#text": "a #SoupServer"
                                    },
                                    "type": {
                                        "@name": "Server",
                                        "@c:type": "SoupServer*"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "get_listeners",
                            "@c:identifier": "soup_server_get_listeners",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../libsoup/server/soup-server.c",
                                "@line": "730",
                                "#text": "Gets @server's list of listening sockets.\n\nYou should treat these sockets as read-only; writing to or\nmodifiying any of these sockets may cause @server to malfunction."
                            },
                            "source-position": {
                                "@filename": "../libsoup/server/soup-server.h",
                                "@line": "88"
                            },
                            "return-value": {
                                "@transfer-ownership": "container",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "../libsoup/server/soup-server.c",
                                    "@line": "739",
                                    "#text": "a\n  list of listening sockets."
                                },
                                "type": {
                                    "@name": "GLib.SList",
                                    "@c:type": "GSList*",
                                    "type": {
                                        "@name": "Gio.Socket"
                                    }
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "server",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../libsoup/server/soup-server.c",
                                        "@line": "732",
                                        "#text": "a #SoupServer"
                                    },
                                    "type": {
                                        "@name": "Server",
                                        "@c:type": "SoupServer*"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "get_tls_auth_mode",
                            "@c:identifier": "soup_server_get_tls_auth_mode",
                            "@glib:get-property": "tls-auth-mode",
                            "attribute": {
                                "@name": "org.gtk.Method.get_property",
                                "@value": "tls-auth-mode"
                            },
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../libsoup/server/soup-server.c",
                                "@line": "680",
                                "#text": "Gets the @server SSL/TLS client authentication mode."
                            },
                            "source-position": {
                                "@filename": "../libsoup/server/soup-server.h",
                                "@line": "60"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "../libsoup/server/soup-server.c",
                                    "@line": "686",
                                    "#text": "a #GTlsAuthenticationMode"
                                },
                                "type": {
                                    "@name": "Gio.TlsAuthenticationMode",
                                    "@c:type": "GTlsAuthenticationMode"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "server",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../libsoup/server/soup-server.c",
                                        "@line": "682",
                                        "#text": "a #SoupServer"
                                    },
                                    "type": {
                                        "@name": "Server",
                                        "@c:type": "SoupServer*"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "get_tls_certificate",
                            "@c:identifier": "soup_server_get_tls_certificate",
                            "@glib:get-property": "tls-certificate",
                            "attribute": {
                                "@name": "org.gtk.Method.get_property",
                                "@value": "tls-certificate"
                            },
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../libsoup/server/soup-server.c",
                                "@line": "595",
                                "#text": "Gets the @server SSL/TLS certificate."
                            },
                            "source-position": {
                                "@filename": "../libsoup/server/soup-server.h",
                                "@line": "48"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "@nullable": "1",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "../libsoup/server/soup-server.c",
                                    "@line": "601",
                                    "#text": "a #GTlsCertificate or %NULL"
                                },
                                "type": {
                                    "@name": "Gio.TlsCertificate",
                                    "@c:type": "GTlsCertificate*"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "server",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../libsoup/server/soup-server.c",
                                        "@line": "597",
                                        "#text": "a #SoupServer"
                                    },
                                    "type": {
                                        "@name": "Server",
                                        "@c:type": "SoupServer*"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "get_tls_database",
                            "@c:identifier": "soup_server_get_tls_database",
                            "@glib:get-property": "tls-database",
                            "attribute": {
                                "@name": "org.gtk.Method.get_property",
                                "@value": "tls-database"
                            },
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../libsoup/server/soup-server.c",
                                "@line": "638",
                                "#text": "Gets the @server SSL/TLS database."
                            },
                            "source-position": {
                                "@filename": "../libsoup/server/soup-server.h",
                                "@line": "54"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "@nullable": "1",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "../libsoup/server/soup-server.c",
                                    "@line": "644",
                                    "#text": "a #GTlsDatabase"
                                },
                                "type": {
                                    "@name": "Gio.TlsDatabase",
                                    "@c:type": "GTlsDatabase*"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "server",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../libsoup/server/soup-server.c",
                                        "@line": "640",
                                        "#text": "a #SoupServer"
                                    },
                                    "type": {
                                        "@name": "Server",
                                        "@c:type": "SoupServer*"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "get_uris",
                            "@c:identifier": "soup_server_get_uris",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../libsoup/server/soup-server.c",
                                "@line": "1508",
                                "#text": "Gets a list of URIs corresponding to the interfaces @server is\nlistening on.\n\nThese will contain IP addresses, not hostnames, and will also indicate\nwhether the given listener is http or https.\n\nNote that if you used [method@Server.listen_all] the returned URIs will use\nthe addresses `0.0.0.0` and `::`, rather than actually returning separate\nURIs for each interface on the system."
                            },
                            "source-position": {
                                "@filename": "../libsoup/server/soup-server.h",
                                "@line": "86"
                            },
                            "return-value": {
                                "@transfer-ownership": "full",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "../libsoup/server/soup-server.c",
                                    "@line": "1522",
                                    "#text": "a list of #GUris, which you\n  must free when you are done with it."
                                },
                                "type": {
                                    "@name": "GLib.SList",
                                    "@c:type": "GSList*",
                                    "type": {
                                        "@name": "GLib.Uri"
                                    }
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "server",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../libsoup/server/soup-server.c",
                                        "@line": "1510",
                                        "#text": "a #SoupServer"
                                    },
                                    "type": {
                                        "@name": "Server",
                                        "@c:type": "SoupServer*"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "is_https",
                            "@c:identifier": "soup_server_is_https",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../libsoup/server/soup-server.c",
                                "@line": "699",
                                "#text": "Checks whether @server is capable of https.\n\nIn order for a server to run https, you must call\n[method@Server.set_tls_certificate], or set the\n[property@Server:tls-certificate] property, to provide it with a\ncertificate to use.\n\nIf you are using the deprecated single-listener APIs, then a return value of\n%TRUE indicates that the #SoupServer serves https exclusively. If you are\nusing [method@Server.listen], etc, then a %TRUE return value merely indicates\nthat the server is *able* to do https, regardless of whether it actually\ncurrently is or not. Use [method@Server.get_uris] to see if it currently has\nany https listeners."
                            },
                            "source-position": {
                                "@filename": "../libsoup/server/soup-server.h",
                                "@line": "63"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "../libsoup/server/soup-server.c",
                                    "@line": "717",
                                    "#text": "%TRUE if @server is configured to serve https."
                                },
                                "type": {
                                    "@name": "gboolean",
                                    "@c:type": "gboolean"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "server",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../libsoup/server/soup-server.c",
                                        "@line": "701",
                                        "#text": "a #SoupServer"
                                    },
                                    "type": {
                                        "@name": "Server",
                                        "@c:type": "SoupServer*"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "listen",
                            "@c:identifier": "soup_server_listen",
                            "@throws": "1",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../libsoup/server/soup-server.c",
                                "@line": "1235",
                                "#text": "Attempts to set up @server to listen for connections on @address.\n\nIf @options includes %SOUP_SERVER_LISTEN_HTTPS, and @server has\nbeen configured for TLS, then @server will listen for https\nconnections on this port. Otherwise it will listen for plain http.\n\nYou may call this method (along with the other \"listen\" methods)\nany number of times on a server, if you want to listen on multiple\nports, or set up both http and https service.\n\nAfter calling this method, @server will begin accepting and processing\nconnections as soon as the appropriate [struct@GLib.MainContext] is run.\n\nNote that this API does not make use of dual IPv4/IPv6 sockets; if\n@address is an IPv6 address, it will only accept IPv6 connections.\nYou must configure IPv4 listening separately."
                            },
                            "source-position": {
                                "@filename": "../libsoup/server/soup-server.h",
                                "@line": "66"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "../libsoup/server/soup-server.c",
                                    "@line": "1259",
                                    "#text": "%TRUE on success, %FALSE if @address could not be\n  bound or any other error occurred (in which case @error will be\n  set)."
                                },
                                "type": {
                                    "@name": "gboolean",
                                    "@c:type": "gboolean"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "server",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../libsoup/server/soup-server.c",
                                        "@line": "1237",
                                        "#text": "a #SoupServer"
                                    },
                                    "type": {
                                        "@name": "Server",
                                        "@c:type": "SoupServer*"
                                    }
                                },
                                "parameter": [
                                    {
                                        "@name": "address",
                                        "@transfer-ownership": "none",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "../libsoup/server/soup-server.c",
                                            "@line": "1238",
                                            "#text": "the address of the interface to listen on"
                                        },
                                        "type": {
                                            "@name": "Gio.SocketAddress",
                                            "@c:type": "GSocketAddress*"
                                        }
                                    },
                                    {
                                        "@name": "options",
                                        "@transfer-ownership": "none",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "../libsoup/server/soup-server.c",
                                            "@line": "1239",
                                            "#text": "listening options for this server"
                                        },
                                        "type": {
                                            "@name": "ServerListenOptions",
                                            "@c:type": "SoupServerListenOptions"
                                        }
                                    }
                                ]
                            }
                        },
                        {
                            "@name": "listen_all",
                            "@c:identifier": "soup_server_listen_all",
                            "@throws": "1",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../libsoup/server/soup-server.c",
                                "@line": "1363",
                                "#text": "Attempts to set up @server to listen for connections on all interfaces\non the system.\n\nThat is, it listens on the addresses `0.0.0.0` and/or `::`, depending on\nwhether @options includes %SOUP_SERVER_LISTEN_IPV4_ONLY,\n%SOUP_SERVER_LISTEN_IPV6_ONLY, or neither.) If @port is specified, @server\nwill listen on that port. If it is 0, @server will find an unused port to\nlisten on. (In that case, you can use [method@Server.get_uris] to find out\nwhat port it ended up choosing.\n\nSee [method@Server.listen] for more details."
                            },
                            "source-position": {
                                "@filename": "../libsoup/server/soup-server.h",
                                "@line": "71"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "../libsoup/server/soup-server.c",
                                    "@line": "1382",
                                    "#text": "%TRUE on success, %FALSE if @port could not be bound\n  or any other error occurred (in which case @error will be set)."
                                },
                                "type": {
                                    "@name": "gboolean",
                                    "@c:type": "gboolean"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "server",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../libsoup/server/soup-server.c",
                                        "@line": "1365",
                                        "#text": "a #SoupServer"
                                    },
                                    "type": {
                                        "@name": "Server",
                                        "@c:type": "SoupServer*"
                                    }
                                },
                                "parameter": [
                                    {
                                        "@name": "port",
                                        "@transfer-ownership": "none",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "../libsoup/server/soup-server.c",
                                            "@line": "1366",
                                            "#text": "the port to listen on, or 0"
                                        },
                                        "type": {
                                            "@name": "guint",
                                            "@c:type": "guint"
                                        }
                                    },
                                    {
                                        "@name": "options",
                                        "@transfer-ownership": "none",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "../libsoup/server/soup-server.c",
                                            "@line": "1367",
                                            "#text": "listening options for this server"
                                        },
                                        "type": {
                                            "@name": "ServerListenOptions",
                                            "@c:type": "SoupServerListenOptions"
                                        }
                                    }
                                ]
                            }
                        },
                        {
                            "@name": "listen_local",
                            "@c:identifier": "soup_server_listen_local",
                            "@throws": "1",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../libsoup/server/soup-server.c",
                                "@line": "1416",
                                "#text": "Attempts to set up @server to listen for connections on \"localhost\".\n\nThat is, `127.0.0.1` and/or `::1`, depending on whether @options includes\n%SOUP_SERVER_LISTEN_IPV4_ONLY, %SOUP_SERVER_LISTEN_IPV6_ONLY, or neither). If\n@port is specified, @server will listen on that port. If it is 0, @server\nwill find an unused port to listen on. (In that case, you can use\n[method@Server.get_uris] to find out what port it ended up choosing.\n\nSee [method@Server.listen] for more details."
                            },
                            "source-position": {
                                "@filename": "../libsoup/server/soup-server.h",
                                "@line": "76"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "../libsoup/server/soup-server.c",
                                    "@line": "1433",
                                    "#text": "%TRUE on success, %FALSE if @port could not be bound\n  or any other error occurred (in which case @error will be set)."
                                },
                                "type": {
                                    "@name": "gboolean",
                                    "@c:type": "gboolean"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "server",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../libsoup/server/soup-server.c",
                                        "@line": "1418",
                                        "#text": "a #SoupServer"
                                    },
                                    "type": {
                                        "@name": "Server",
                                        "@c:type": "SoupServer*"
                                    }
                                },
                                "parameter": [
                                    {
                                        "@name": "port",
                                        "@transfer-ownership": "none",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "../libsoup/server/soup-server.c",
                                            "@line": "1419",
                                            "#text": "the port to listen on, or 0"
                                        },
                                        "type": {
                                            "@name": "guint",
                                            "@c:type": "guint"
                                        }
                                    },
                                    {
                                        "@name": "options",
                                        "@transfer-ownership": "none",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "../libsoup/server/soup-server.c",
                                            "@line": "1420",
                                            "#text": "listening options for this server"
                                        },
                                        "type": {
                                            "@name": "ServerListenOptions",
                                            "@c:type": "SoupServerListenOptions"
                                        }
                                    }
                                ]
                            }
                        },
                        {
                            "@name": "listen_socket",
                            "@c:identifier": "soup_server_listen_socket",
                            "@throws": "1",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../libsoup/server/soup-server.c",
                                "@line": "1467",
                                "#text": "Attempts to set up @server to listen for connections on @socket.\n\nSee [method@Server.listen] for more details."
                            },
                            "source-position": {
                                "@filename": "../libsoup/server/soup-server.h",
                                "@line": "81"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "../libsoup/server/soup-server.c",
                                    "@line": "1478",
                                    "#text": "%TRUE on success, %FALSE if an error occurred (in\n  which case @error will be set)."
                                },
                                "type": {
                                    "@name": "gboolean",
                                    "@c:type": "gboolean"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "server",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../libsoup/server/soup-server.c",
                                        "@line": "1469",
                                        "#text": "a #SoupServer"
                                    },
                                    "type": {
                                        "@name": "Server",
                                        "@c:type": "SoupServer*"
                                    }
                                },
                                "parameter": [
                                    {
                                        "@name": "socket",
                                        "@transfer-ownership": "none",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "../libsoup/server/soup-server.c",
                                            "@line": "1470",
                                            "#text": "a listening #GSocket"
                                        },
                                        "type": {
                                            "@name": "Gio.Socket",
                                            "@c:type": "GSocket*"
                                        }
                                    },
                                    {
                                        "@name": "options",
                                        "@transfer-ownership": "none",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "../libsoup/server/soup-server.c",
                                            "@line": "1471",
                                            "#text": "listening options for this server"
                                        },
                                        "type": {
                                            "@name": "ServerListenOptions",
                                            "@c:type": "SoupServerListenOptions"
                                        }
                                    }
                                ]
                            }
                        },
                        {
                            "@name": "pause_message",
                            "@c:identifier": "soup_server_pause_message",
                            "@deprecated": "1",
                            "@deprecated-version": "3.2",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../libsoup/server/soup-server.c",
                                "@line": "1879",
                                "#text": "Pauses I/O on @msg.\n\nThis can be used when you need to return from the server handler without\nhaving the full response ready yet. Use [method@Server.unpause_message] to\nresume I/O.\n\nThis must only be called on a [class@ServerMessage] which was created by the\n#SoupServer and are currently doing I/O, such as those passed into a\n[callback@ServerCallback] or emitted in a [signal@Server::request-read]\nsignal."
                            },
                            "doc-deprecated": {
                                "@xml:space": "preserve",
                                "#text": "Use soup_server_message_pause() instead."
                            },
                            "source-position": {
                                "@filename": "../libsoup/server/soup-server.h",
                                "@line": "154"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "type": {
                                    "@name": "none",
                                    "@c:type": "void"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "server",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../libsoup/server/soup-server.c",
                                        "@line": "1881",
                                        "#text": "a #SoupServer"
                                    },
                                    "type": {
                                        "@name": "Server",
                                        "@c:type": "SoupServer*"
                                    }
                                },
                                "parameter": {
                                    "@name": "msg",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../libsoup/server/soup-server.c",
                                        "@line": "1882",
                                        "#text": "a #SoupServerMessage associated with @server."
                                    },
                                    "type": {
                                        "@name": "ServerMessage",
                                        "@c:type": "SoupServerMessage*"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "remove_auth_domain",
                            "@c:identifier": "soup_server_remove_auth_domain",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../libsoup/server/soup-server.c",
                                "@line": "1860",
                                "#text": "Removes @auth_domain from @server."
                            },
                            "source-position": {
                                "@filename": "../libsoup/server/soup-server.h",
                                "@line": "149"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "type": {
                                    "@name": "none",
                                    "@c:type": "void"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "server",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../libsoup/server/soup-server.c",
                                        "@line": "1862",
                                        "#text": "a #SoupServer"
                                    },
                                    "type": {
                                        "@name": "Server",
                                        "@c:type": "SoupServer*"
                                    }
                                },
                                "parameter": {
                                    "@name": "auth_domain",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../libsoup/server/soup-server.c",
                                        "@line": "1863",
                                        "#text": "a #SoupAuthDomain"
                                    },
                                    "type": {
                                        "@name": "AuthDomain",
                                        "@c:type": "SoupAuthDomain*"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "remove_handler",
                            "@c:identifier": "soup_server_remove_handler",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../libsoup/server/soup-server.c",
                                "@line": "1813",
                                "#text": "Removes all handlers (early and normal) registered at @path."
                            },
                            "source-position": {
                                "@filename": "../libsoup/server/soup-server.h",
                                "@line": "142"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "type": {
                                    "@name": "none",
                                    "@c:type": "void"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "server",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../libsoup/server/soup-server.c",
                                        "@line": "1815",
                                        "#text": "a #SoupServer"
                                    },
                                    "type": {
                                        "@name": "Server",
                                        "@c:type": "SoupServer*"
                                    }
                                },
                                "parameter": {
                                    "@name": "path",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../libsoup/server/soup-server.c",
                                        "@line": "1816",
                                        "#text": "the toplevel path for the handler"
                                    },
                                    "type": {
                                        "@name": "utf8",
                                        "@c:type": "const char*"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "remove_websocket_extension",
                            "@c:identifier": "soup_server_remove_websocket_extension",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../libsoup/server/soup-server.c",
                                "@line": "1964",
                                "#text": "Removes support for WebSocket extension of type @extension_type (or any subclass of\n@extension_type) from @server."
                            },
                            "source-position": {
                                "@filename": "../libsoup/server/soup-server.h",
                                "@line": "138"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "type": {
                                    "@name": "none",
                                    "@c:type": "void"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "server",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../libsoup/server/soup-server.c",
                                        "@line": "1966",
                                        "#text": "a #SoupServer"
                                    },
                                    "type": {
                                        "@name": "Server",
                                        "@c:type": "SoupServer*"
                                    }
                                },
                                "parameter": {
                                    "@name": "extension_type",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../libsoup/server/soup-server.c",
                                        "@line": "1967",
                                        "#text": "a #GType"
                                    },
                                    "type": {
                                        "@name": "GType",
                                        "@c:type": "GType"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "set_tls_auth_mode",
                            "@c:identifier": "soup_server_set_tls_auth_mode",
                            "@glib:set-property": "tls-auth-mode",
                            "attribute": {
                                "@name": "org.gtk.Method.set_property",
                                "@value": "tls-auth-mode"
                            },
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../libsoup/server/soup-server.c",
                                "@line": "657",
                                "#text": "Sets @server's #GTlsAuthenticationMode to use for SSL/TLS client authentication."
                            },
                            "source-position": {
                                "@filename": "../libsoup/server/soup-server.h",
                                "@line": "57"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "type": {
                                    "@name": "none",
                                    "@c:type": "void"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "server",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../libsoup/server/soup-server.c",
                                        "@line": "659",
                                        "#text": "a #SoupServer"
                                    },
                                    "type": {
                                        "@name": "Server",
                                        "@c:type": "SoupServer*"
                                    }
                                },
                                "parameter": {
                                    "@name": "mode",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../libsoup/server/soup-server.c",
                                        "@line": "660",
                                        "#text": "a #GTlsAuthenticationMode"
                                    },
                                    "type": {
                                        "@name": "Gio.TlsAuthenticationMode",
                                        "@c:type": "GTlsAuthenticationMode"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "set_tls_certificate",
                            "@c:identifier": "soup_server_set_tls_certificate",
                            "@glib:set-property": "tls-certificate",
                            "attribute": {
                                "@name": "org.gtk.Method.set_property",
                                "@value": "tls-certificate"
                            },
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../libsoup/server/soup-server.c",
                                "@line": "571",
                                "#text": "Sets @server up to do https, using the given SSL/TLS @certificate."
                            },
                            "source-position": {
                                "@filename": "../libsoup/server/soup-server.h",
                                "@line": "45"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "type": {
                                    "@name": "none",
                                    "@c:type": "void"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "server",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../libsoup/server/soup-server.c",
                                        "@line": "573",
                                        "#text": "a #SoupServer"
                                    },
                                    "type": {
                                        "@name": "Server",
                                        "@c:type": "SoupServer*"
                                    }
                                },
                                "parameter": {
                                    "@name": "certificate",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../libsoup/server/soup-server.c",
                                        "@line": "574",
                                        "#text": "a #GTlsCertificate"
                                    },
                                    "type": {
                                        "@name": "Gio.TlsCertificate",
                                        "@c:type": "GTlsCertificate*"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "set_tls_database",
                            "@c:identifier": "soup_server_set_tls_database",
                            "@glib:set-property": "tls-database",
                            "attribute": {
                                "@name": "org.gtk.Method.set_property",
                                "@value": "tls-database"
                            },
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../libsoup/server/soup-server.c",
                                "@line": "614",
                                "#text": "Sets @server's #GTlsDatabase to use for validating SSL/TLS client certificates."
                            },
                            "source-position": {
                                "@filename": "../libsoup/server/soup-server.h",
                                "@line": "51"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "type": {
                                    "@name": "none",
                                    "@c:type": "void"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "server",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../libsoup/server/soup-server.c",
                                        "@line": "616",
                                        "#text": "a #SoupServer"
                                    },
                                    "type": {
                                        "@name": "Server",
                                        "@c:type": "SoupServer*"
                                    }
                                },
                                "parameter": {
                                    "@name": "tls_database",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../libsoup/server/soup-server.c",
                                        "@line": "617",
                                        "#text": "a #GTlsDatabase"
                                    },
                                    "type": {
                                        "@name": "Gio.TlsDatabase",
                                        "@c:type": "GTlsDatabase*"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "unpause_message",
                            "@c:identifier": "soup_server_unpause_message",
                            "@deprecated": "1",
                            "@deprecated-version": "3.2",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../libsoup/server/soup-server.c",
                                "@line": "1906",
                                "#text": "Resumes I/O on @msg.\n\nUse this to resume after calling [method@Server.pause_message], or after\nadding a new chunk to a chunked response.\n\nI/O won't actually resume until you return to the main loop.\n\nThis must only be called on a [class@ServerMessage] which was created by the\n#SoupServer and are currently doing I/O, such as those passed into a\n[callback@ServerCallback] or emitted in a [signal@Server::request-read]\nsignal."
                            },
                            "doc-deprecated": {
                                "@xml:space": "preserve",
                                "#text": "Use soup_server_message_unpause() instead."
                            },
                            "source-position": {
                                "@filename": "../libsoup/server/soup-server.h",
                                "@line": "157"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "type": {
                                    "@name": "none",
                                    "@c:type": "void"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "server",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../libsoup/server/soup-server.c",
                                        "@line": "1908",
                                        "#text": "a #SoupServer"
                                    },
                                    "type": {
                                        "@name": "Server",
                                        "@c:type": "SoupServer*"
                                    }
                                },
                                "parameter": {
                                    "@name": "msg",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../libsoup/server/soup-server.c",
                                        "@line": "1909",
                                        "#text": "a #SoupServerMessage associated with @server."
                                    },
                                    "type": {
                                        "@name": "ServerMessage",
                                        "@c:type": "SoupServerMessage*"
                                    }
                                }
                            }
                        }
                    ],
                    "property": [
                        {
                            "@name": "raw-paths",
                            "@writable": "1",
                            "@construct-only": "1",
                            "@transfer-ownership": "none",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../libsoup/server/soup-server.c",
                                "@line": "487",
                                "#text": "If %TRUE, percent-encoding in the Request-URI path will not be\nautomatically decoded."
                            },
                            "type": {
                                "@name": "gboolean",
                                "@c:type": "gboolean"
                            }
                        },
                        {
                            "@name": "server-header",
                            "@writable": "1",
                            "@construct": "1",
                            "@transfer-ownership": "none",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../libsoup/server/soup-server.c",
                                "@line": "502",
                                "#text": "Server header.\n\nIf non-%NULL, the value to use for the \"Server\" header on\n[class@ServerMessage]s processed by this server.\n\nThe Server header is the server equivalent of the\nUser-Agent header, and provides information about the\nserver and its components. It contains a list of one or\nmore product tokens, separated by whitespace, with the most\nsignificant product token coming first. The tokens must be\nbrief, ASCII, and mostly alphanumeric (although \"-\", \"_\",\nand \".\" are also allowed), and may optionally include a \"/\"\nfollowed by a version string. You may also put comments,\nenclosed in parentheses, between or after the tokens.\n\nSome HTTP server implementations intentionally do not use\nversion numbers in their Server header, so that\ninstallations running older versions of the server don't\nend up advertising their vulnerability to specific security\nholes.\n\nAs with [property@Session:user_agent], if you set a\n[property@Server:server-header] property that has trailing\nwhitespace, #SoupServer will append its own product token (eg,\n`libsoup/2.3.2`) to the end of the header for you."
                            },
                            "type": {
                                "@name": "utf8",
                                "@c:type": "gchar*"
                            }
                        },
                        {
                            "@name": "tls-auth-mode",
                            "@writable": "1",
                            "@construct": "1",
                            "@transfer-ownership": "none",
                            "@setter": "set_tls_auth_mode",
                            "@getter": "get_tls_auth_mode",
                            "attribute": [
                                {
                                    "@name": "org.gtk.Property.get",
                                    "@value": "soup_server_get_tls_auth_mode"
                                },
                                {
                                    "@name": "org.gtk.Property.set",
                                    "@value": "soup_server_set_tls_auth_mode"
                                }
                            ],
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../libsoup/server/soup-server.c",
                                "@line": "472",
                                "#text": "A [enum@Gio.TlsAuthenticationMode] for SSL/TLS client authentication."
                            },
                            "type": {
                                "@name": "Gio.TlsAuthenticationMode"
                            }
                        },
                        {
                            "@name": "tls-certificate",
                            "@writable": "1",
                            "@construct": "1",
                            "@transfer-ownership": "none",
                            "@setter": "set_tls_certificate",
                            "@getter": "get_tls_certificate",
                            "attribute": [
                                {
                                    "@name": "org.gtk.Property.get",
                                    "@value": "soup_server_get_tls_certificate"
                                },
                                {
                                    "@name": "org.gtk.Property.set",
                                    "@value": "soup_server_set_tls_certificate"
                                }
                            ],
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../libsoup/server/soup-server.c",
                                "@line": "439",
                                "#text": "A [class@Gio.TlsCertificate[] that has a\n[property@Gio.TlsCertificate:private-key] set.\n\nIf this is set, then the server will be able to speak\nhttps in addition to (or instead of) plain http."
                            },
                            "type": {
                                "@name": "Gio.TlsCertificate"
                            }
                        },
                        {
                            "@name": "tls-database",
                            "@writable": "1",
                            "@construct": "1",
                            "@transfer-ownership": "none",
                            "@setter": "set_tls_database",
                            "@getter": "get_tls_database",
                            "attribute": [
                                {
                                    "@name": "org.gtk.Property.get",
                                    "@value": "soup_server_get_tls_database"
                                },
                                {
                                    "@name": "org.gtk.Property.set",
                                    "@value": "soup_server_set_tls_database"
                                }
                            ],
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../libsoup/server/soup-server.c",
                                "@line": "457",
                                "#text": "A [class@Gio.TlsDatabase] to use for validating SSL/TLS client\ncertificates."
                            },
                            "type": {
                                "@name": "Gio.TlsDatabase"
                            }
                        }
                    ],
                    "field": {
                        "@name": "parent_instance",
                        "type": {
                            "@name": "GObject.Object",
                            "@c:type": "GObject"
                        }
                    },
                    "glib:signal": [
                        {
                            "@name": "request-aborted",
                            "@when": "first",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../libsoup/server/soup-server.c",
                                "@line": "411",
                                "#text": "Emitted when processing has failed for a message.\n\nThis could mean either that it could not be read (if\n[signal@Server::request-read] has not been emitted for it yet), or that\nthe response could not be written back (if [signal@Server::request-read]\nhas been emitted but [signal@Server::request-finished] has not been).\n\n@message is in an undefined state when this signal is\nemitted; the signal exists primarily to allow the server to\nfree any state that it may have allocated in\n[signal@Server::request-started]."
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "type": {
                                    "@name": "none",
                                    "@c:type": "void"
                                }
                            },
                            "parameters": {
                                "parameter": {
                                    "@name": "message",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../libsoup/server/soup-server.c",
                                        "@line": "414",
                                        "#text": "the message"
                                    },
                                    "type": {
                                        "@name": "ServerMessage"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "request-finished",
                            "@when": "first",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../libsoup/server/soup-server.c",
                                "@line": "393",
                                "#text": "Emitted when the server has finished writing a response to\na request."
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "type": {
                                    "@name": "none",
                                    "@c:type": "void"
                                }
                            },
                            "parameters": {
                                "parameter": {
                                    "@name": "message",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../libsoup/server/soup-server.c",
                                        "@line": "396",
                                        "#text": "the message"
                                    },
                                    "type": {
                                        "@name": "ServerMessage"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "request-read",
                            "@when": "first",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../libsoup/server/soup-server.c",
                                "@line": "369",
                                "#text": "Emitted when the server has successfully read a request.\n\n@message will have all of its request-side information\nfilled in, and if the message was authenticated, @client\nwill have information about that. This signal is emitted\nbefore any (non-early) handlers are called for the message,\nand if it sets the message's #status_code, then normal\nhandler processing will be skipped."
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "type": {
                                    "@name": "none",
                                    "@c:type": "void"
                                }
                            },
                            "parameters": {
                                "parameter": {
                                    "@name": "message",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../libsoup/server/soup-server.c",
                                        "@line": "372",
                                        "#text": "the message"
                                    },
                                    "type": {
                                        "@name": "ServerMessage"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "request-started",
                            "@when": "first",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../libsoup/server/soup-server.c",
                                "@line": "341",
                                "#text": "Emitted when the server has started reading a new request.\n\n@message will be completely blank; not even the\nRequest-Line will have been read yet. About the only thing\nyou can usefully do with it is connect to its signals.\n\nIf the request is read successfully, this will eventually\nbe followed by a [signal@Server::request_read signal]. If a\nresponse is then sent, the request processing will end with\na [signal@Server::request-finished] signal. If a network error\noccurs, the processing will instead end with\n[signal@Server::request-aborted]."
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "type": {
                                    "@name": "none",
                                    "@c:type": "void"
                                }
                            },
                            "parameters": {
                                "parameter": {
                                    "@name": "message",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../libsoup/server/soup-server.c",
                                        "@line": "344",
                                        "#text": "the new message"
                                    },
                                    "type": {
                                        "@name": "ServerMessage"
                                    }
                                }
                            }
                        }
                    ]
                },
                {
                    "@name": "ServerMessage",
                    "@c:symbol-prefix": "server_message",
                    "@c:type": "SoupServerMessage",
                    "@parent": "GObject.Object",
                    "@final": "1",
                    "@glib:type-name": "SoupServerMessage",
                    "@glib:get-type": "soup_server_message_get_type",
                    "@glib:type-struct": "ServerMessageClass",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "../libsoup/server/soup-server-message.c",
                        "@line": "20",
                        "#text": "An HTTP server request and response pair.\n\nA SoupServerMessage represents an HTTP message that is being sent or\nreceived on a [class@Server].\n\n[class@Server] will create `SoupServerMessage`s automatically for\nincoming requests, which your application will receive via handlers.\n\nNote that libsoup's terminology here does not quite match the HTTP\nspecification: in RFC 2616, an \"HTTP-message\" is *either* a Request, *or* a\nResponse. In libsoup, a #SoupServerMessage combines both the request and the\nresponse."
                    },
                    "source-position": {
                        "@filename": "../libsoup/server/soup-server-message.h",
                        "@line": "17"
                    },
                    "method": [
                        {
                            "@name": "get_http_version",
                            "@c:identifier": "soup_server_message_get_http_version",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../libsoup/server/soup-server-message.c",
                                "@line": "808",
                                "#text": "Get the HTTP version of @msg."
                            },
                            "source-position": {
                                "@filename": "../libsoup/server/soup-server-message.h",
                                "@line": "35"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "../libsoup/server/soup-server-message.c",
                                    "@line": "814",
                                    "#text": "a #SoupHTTPVersion."
                                },
                                "type": {
                                    "@name": "HTTPVersion",
                                    "@c:type": "SoupHTTPVersion"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "msg",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../libsoup/server/soup-server-message.c",
                                        "@line": "810",
                                        "#text": "a #SoupServerMessage"
                                    },
                                    "type": {
                                        "@name": "ServerMessage",
                                        "@c:type": "SoupServerMessage*"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "get_local_address",
                            "@c:identifier": "soup_server_message_get_local_address",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../libsoup/server/soup-server-message.c",
                                "@line": "1031",
                                "#text": "Retrieves the [class@Gio.SocketAddress] associated with the local end\nof a connection."
                            },
                            "source-position": {
                                "@filename": "../libsoup/server/soup-server-message.h",
                                "@line": "69"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "@nullable": "1",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "../libsoup/server/soup-server-message.c",
                                    "@line": "1038",
                                    "#text": "the #GSocketAddress\n  associated with the local end of a connection, it may be\n  %NULL if you used [method@Server.accept_iostream]."
                                },
                                "type": {
                                    "@name": "Gio.SocketAddress",
                                    "@c:type": "GSocketAddress*"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "msg",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../libsoup/server/soup-server-message.c",
                                        "@line": "1033",
                                        "#text": "a #SoupServerMessage"
                                    },
                                    "type": {
                                        "@name": "ServerMessage",
                                        "@c:type": "SoupServerMessage*"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "get_method",
                            "@c:identifier": "soup_server_message_get_method",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../libsoup/server/soup-server-message.c",
                                "@line": "762",
                                "#text": "Get the HTTP method of @msg."
                            },
                            "source-position": {
                                "@filename": "../libsoup/server/soup-server-message.h",
                                "@line": "32"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "../libsoup/server/soup-server-message.c",
                                    "@line": "768",
                                    "#text": "the HTTP method."
                                },
                                "type": {
                                    "@name": "utf8",
                                    "@c:type": "const char*"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "msg",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../libsoup/server/soup-server-message.c",
                                        "@line": "764",
                                        "#text": "a #SoupServerMessage"
                                    },
                                    "type": {
                                        "@name": "ServerMessage",
                                        "@c:type": "SoupServerMessage*"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "get_reason_phrase",
                            "@c:identifier": "soup_server_message_get_reason_phrase",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../libsoup/server/soup-server-message.c",
                                "@line": "842",
                                "#text": "Get the HTTP reason phrase of @msg."
                            },
                            "source-position": {
                                "@filename": "../libsoup/server/soup-server-message.h",
                                "@line": "42"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "@nullable": "1",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "../libsoup/server/soup-server-message.c",
                                    "@line": "848",
                                    "#text": "the reason phrase."
                                },
                                "type": {
                                    "@name": "utf8",
                                    "@c:type": "const char*"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "msg",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../libsoup/server/soup-server-message.c",
                                        "@line": "844",
                                        "#text": "a #SoupServerMessage:"
                                    },
                                    "type": {
                                        "@name": "ServerMessage",
                                        "@c:type": "SoupServerMessage*"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "get_remote_address",
                            "@c:identifier": "soup_server_message_get_remote_address",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../libsoup/server/soup-server-message.c",
                                "@line": "1012",
                                "#text": "Retrieves the [class@Gio.SocketAddress] associated with the remote end\nof a connection."
                            },
                            "source-position": {
                                "@filename": "../libsoup/server/soup-server-message.h",
                                "@line": "72"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "@nullable": "1",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "../libsoup/server/soup-server-message.c",
                                    "@line": "1019",
                                    "#text": "the #GSocketAddress\n  associated with the remote end of a connection, it may be\n  %NULL if you used [class@Server.accept_iostream]."
                                },
                                "type": {
                                    "@name": "Gio.SocketAddress",
                                    "@c:type": "GSocketAddress*"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "msg",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../libsoup/server/soup-server-message.c",
                                        "@line": "1014",
                                        "#text": "a #SoupServerMessage"
                                    },
                                    "type": {
                                        "@name": "ServerMessage",
                                        "@c:type": "SoupServerMessage*"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "get_remote_host",
                            "@c:identifier": "soup_server_message_get_remote_host",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../libsoup/server/soup-server-message.c",
                                "@line": "1050",
                                "#text": "Retrieves the IP address associated with the remote end of a\nconnection."
                            },
                            "source-position": {
                                "@filename": "../libsoup/server/soup-server-message.h",
                                "@line": "75"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "@nullable": "1",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "../libsoup/server/soup-server-message.c",
                                    "@line": "1057",
                                    "#text": "the IP address associated with the remote\n  end of a connection, it may be %NULL if you used\n  [method@Server.accept_iostream]."
                                },
                                "type": {
                                    "@name": "utf8",
                                    "@c:type": "const char*"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "msg",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../libsoup/server/soup-server-message.c",
                                        "@line": "1052",
                                        "#text": "a #SoupServerMessage"
                                    },
                                    "type": {
                                        "@name": "ServerMessage",
                                        "@c:type": "SoupServerMessage*"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "get_request_body",
                            "@c:identifier": "soup_server_message_get_request_body",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../libsoup/server/soup-server-message.c",
                                "@line": "730",
                                "#text": "Get the request body of @msg."
                            },
                            "source-position": {
                                "@filename": "../libsoup/server/soup-server-message.h",
                                "@line": "26"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "../libsoup/server/soup-server-message.c",
                                    "@line": "736",
                                    "#text": "a #SoupMessageBody."
                                },
                                "type": {
                                    "@name": "MessageBody",
                                    "@c:type": "SoupMessageBody*"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "msg",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../libsoup/server/soup-server-message.c",
                                        "@line": "732",
                                        "#text": "a #SoupServerMessage"
                                    },
                                    "type": {
                                        "@name": "ServerMessage",
                                        "@c:type": "SoupServerMessage*"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "get_request_headers",
                            "@c:identifier": "soup_server_message_get_request_headers",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../libsoup/server/soup-server-message.c",
                                "@line": "698",
                                "#text": "Get the request headers of @msg."
                            },
                            "source-position": {
                                "@filename": "../libsoup/server/soup-server-message.h",
                                "@line": "20"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "../libsoup/server/soup-server-message.c",
                                    "@line": "704",
                                    "#text": "a #SoupMessageHeaders with the request headers."
                                },
                                "type": {
                                    "@name": "MessageHeaders",
                                    "@c:type": "SoupMessageHeaders*"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "msg",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../libsoup/server/soup-server-message.c",
                                        "@line": "700",
                                        "#text": "a #SoupServerMessage"
                                    },
                                    "type": {
                                        "@name": "ServerMessage",
                                        "@c:type": "SoupServerMessage*"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "get_response_body",
                            "@c:identifier": "soup_server_message_get_response_body",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../libsoup/server/soup-server-message.c",
                                "@line": "746",
                                "#text": "Get the response body of @msg."
                            },
                            "source-position": {
                                "@filename": "../libsoup/server/soup-server-message.h",
                                "@line": "29"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "../libsoup/server/soup-server-message.c",
                                    "@line": "752",
                                    "#text": "a #SoupMessageBody."
                                },
                                "type": {
                                    "@name": "MessageBody",
                                    "@c:type": "SoupMessageBody*"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "msg",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../libsoup/server/soup-server-message.c",
                                        "@line": "748",
                                        "#text": "a #SoupServerMessage"
                                    },
                                    "type": {
                                        "@name": "ServerMessage",
                                        "@c:type": "SoupServerMessage*"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "get_response_headers",
                            "@c:identifier": "soup_server_message_get_response_headers",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../libsoup/server/soup-server-message.c",
                                "@line": "714",
                                "#text": "Get the response headers of @msg."
                            },
                            "source-position": {
                                "@filename": "../libsoup/server/soup-server-message.h",
                                "@line": "23"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "../libsoup/server/soup-server-message.c",
                                    "@line": "720",
                                    "#text": "a #SoupMessageHeaders with the response headers."
                                },
                                "type": {
                                    "@name": "MessageHeaders",
                                    "@c:type": "SoupMessageHeaders*"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "msg",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../libsoup/server/soup-server-message.c",
                                        "@line": "716",
                                        "#text": "a #SoupServerMessage"
                                    },
                                    "type": {
                                        "@name": "ServerMessage",
                                        "@c:type": "SoupServerMessage*"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "get_socket",
                            "@c:identifier": "soup_server_message_get_socket",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../libsoup/server/soup-server-message.c",
                                "@line": "988",
                                "#text": "Retrieves the [class@Gio.Socket] that @msg is associated with.\n\nIf you are using this method to observe when multiple requests are\nmade on the same persistent HTTP connection (eg, as the ntlm-test\ntest program does), you will need to pay attention to socket\ndestruction as well (eg, by using weak references), so that you do\nnot get fooled when the allocator reuses the memory address of a\npreviously-destroyed socket to represent a new socket."
                            },
                            "source-position": {
                                "@filename": "../libsoup/server/soup-server-message.h",
                                "@line": "66"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "@nullable": "1",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "../libsoup/server/soup-server-message.c",
                                    "@line": "1001",
                                    "#text": "the #GSocket that @msg is\n  associated with, %NULL if you used [method@Server.accept_iostream]."
                                },
                                "type": {
                                    "@name": "Gio.Socket",
                                    "@c:type": "GSocket*"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "msg",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../libsoup/server/soup-server-message.c",
                                        "@line": "990",
                                        "#text": "a #SoupServerMessage"
                                    },
                                    "type": {
                                        "@name": "ServerMessage",
                                        "@c:type": "SoupServerMessage*"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "get_status",
                            "@c:identifier": "soup_server_message_get_status",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../libsoup/server/soup-server-message.c",
                                "@line": "858",
                                "#text": "Get the HTTP status code of @msg."
                            },
                            "source-position": {
                                "@filename": "../libsoup/server/soup-server-message.h",
                                "@line": "45"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "../libsoup/server/soup-server-message.c",
                                    "@line": "864",
                                    "#text": "the HTTP status code."
                                },
                                "type": {
                                    "@name": "guint",
                                    "@c:type": "guint"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "msg",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../libsoup/server/soup-server-message.c",
                                        "@line": "860",
                                        "#text": "a #SoupServerMessage"
                                    },
                                    "type": {
                                        "@name": "ServerMessage",
                                        "@c:type": "SoupServerMessage*"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "get_tls_peer_certificate",
                            "@c:identifier": "soup_server_message_get_tls_peer_certificate",
                            "@glib:get-property": "tls-peer-certificate",
                            "@version": "3.2",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../libsoup/server/soup-server-message.c",
                                "@line": "1113",
                                "#text": "Gets the peer's #GTlsCertificate associated with @msg's connection.\nNote that this is not set yet during the emission of\nSoupServerMessage::accept-certificate signal."
                            },
                            "source-position": {
                                "@filename": "../libsoup/server/soup-server-message.h",
                                "@line": "90"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "@nullable": "1",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "../libsoup/server/soup-server-message.c",
                                    "@line": "1121",
                                    "#text": "@msg's TLS peer certificate,\n   or %NULL if @msg's connection is not SSL."
                                },
                                "type": {
                                    "@name": "Gio.TlsCertificate",
                                    "@c:type": "GTlsCertificate*"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "msg",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../libsoup/server/soup-server-message.c",
                                        "@line": "1115",
                                        "#text": "a #SoupMessage"
                                    },
                                    "type": {
                                        "@name": "ServerMessage",
                                        "@c:type": "SoupServerMessage*"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "get_tls_peer_certificate_errors",
                            "@c:identifier": "soup_server_message_get_tls_peer_certificate_errors",
                            "@glib:get-property": "tls-peer-certificate-errors",
                            "@version": "3.2",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../libsoup/server/soup-server-message.c",
                                "@line": "1134",
                                "#text": "Gets the errors associated with validating @msg's TLS peer certificate.\nNote that this is not set yet during the emission of\nSoupServerMessage::accept-certificate signal."
                            },
                            "source-position": {
                                "@filename": "../libsoup/server/soup-server-message.h",
                                "@line": "93"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "../libsoup/server/soup-server-message.c",
                                    "@line": "1142",
                                    "#text": "a #GTlsCertificateFlags with @msg's TLS peer certificate errors."
                                },
                                "type": {
                                    "@name": "Gio.TlsCertificateFlags",
                                    "@c:type": "GTlsCertificateFlags"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "msg",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../libsoup/server/soup-server-message.c",
                                        "@line": "1136",
                                        "#text": "a #SoupMessage"
                                    },
                                    "type": {
                                        "@name": "ServerMessage",
                                        "@c:type": "SoupServerMessage*"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "get_uri",
                            "@c:identifier": "soup_server_message_get_uri",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../libsoup/server/soup-server-message.c",
                                "@line": "899",
                                "#text": "Get @msg's URI."
                            },
                            "source-position": {
                                "@filename": "../libsoup/server/soup-server-message.h",
                                "@line": "52"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "../libsoup/server/soup-server-message.c",
                                    "@line": "905",
                                    "#text": "a #GUri"
                                },
                                "type": {
                                    "@name": "GLib.Uri",
                                    "@c:type": "GUri*"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "msg",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../libsoup/server/soup-server-message.c",
                                        "@line": "901",
                                        "#text": "a #SoupServerMessage"
                                    },
                                    "type": {
                                        "@name": "ServerMessage",
                                        "@c:type": "SoupServerMessage*"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "is_options_ping",
                            "@c:identifier": "soup_server_message_is_options_ping",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../libsoup/server/soup-server-message.c",
                                "@line": "792",
                                "#text": "Gets if @msg represents an OPTIONS message with the path `*`."
                            },
                            "source-position": {
                                "@filename": "../libsoup/server/soup-server-message.h",
                                "@line": "81"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "../libsoup/server/soup-server-message.c",
                                    "@line": "798",
                                    "#text": "%TRUE if is an OPTIONS ping"
                                },
                                "type": {
                                    "@name": "gboolean",
                                    "@c:type": "gboolean"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "msg",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../libsoup/server/soup-server-message.c",
                                        "@line": "794",
                                        "#text": "a #SoupServerMessage"
                                    },
                                    "type": {
                                        "@name": "ServerMessage",
                                        "@c:type": "SoupServerMessage*"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "pause",
                            "@c:identifier": "soup_server_message_pause",
                            "@version": "3.2",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../libsoup/server/soup-server-message.c",
                                "@line": "571",
                                "#text": "Pauses I/O on @msg.\n\nThis can be used when you need to return from the server handler without\nhaving the full response ready yet. Use [method@ServerMessage.unpause] to\nresume I/O."
                            },
                            "source-position": {
                                "@filename": "../libsoup/server/soup-server-message.h",
                                "@line": "84"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "type": {
                                    "@name": "none",
                                    "@c:type": "void"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "msg",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../libsoup/server/soup-server-message.c",
                                        "@line": "573",
                                        "#text": "a SoupServerMessage"
                                    },
                                    "type": {
                                        "@name": "ServerMessage",
                                        "@c:type": "SoupServerMessage*"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "set_http_version",
                            "@c:identifier": "soup_server_message_set_http_version",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../libsoup/server/soup-server-message.c",
                                "@line": "824",
                                "#text": "Set the HTTP version of @msg."
                            },
                            "source-position": {
                                "@filename": "../libsoup/server/soup-server-message.h",
                                "@line": "38"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "type": {
                                    "@name": "none",
                                    "@c:type": "void"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "msg",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../libsoup/server/soup-server-message.c",
                                        "@line": "826",
                                        "#text": "a #SoupServerMessage"
                                    },
                                    "type": {
                                        "@name": "ServerMessage",
                                        "@c:type": "SoupServerMessage*"
                                    }
                                },
                                "parameter": {
                                    "@name": "version",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../libsoup/server/soup-server-message.c",
                                        "@line": "827",
                                        "#text": "a #SoupHTTPVersion"
                                    },
                                    "type": {
                                        "@name": "HTTPVersion",
                                        "@c:type": "SoupHTTPVersion"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "set_redirect",
                            "@c:identifier": "soup_server_message_set_redirect",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../libsoup/server/soup-server-message.c",
                                "@line": "952",
                                "#text": "Sets @msg's status_code to @status_code and adds a Location header\npointing to @redirect_uri. Use this from a [class@Server] when you\nwant to redirect the client to another URI.\n\n@redirect_uri can be a relative URI, in which case it is\ninterpreted relative to @msg's current URI. In particular, if\n@redirect_uri is just a path, it will replace the path\n*and query* of @msg's URI."
                            },
                            "source-position": {
                                "@filename": "../libsoup/server/soup-server-message.h",
                                "@line": "61"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "type": {
                                    "@name": "none",
                                    "@c:type": "void"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "msg",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../libsoup/server/soup-server-message.c",
                                        "@line": "954",
                                        "#text": "a #SoupServerMessage"
                                    },
                                    "type": {
                                        "@name": "ServerMessage",
                                        "@c:type": "SoupServerMessage*"
                                    }
                                },
                                "parameter": [
                                    {
                                        "@name": "status_code",
                                        "@transfer-ownership": "none",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "../libsoup/server/soup-server-message.c",
                                            "@line": "955",
                                            "#text": "a 3xx status code"
                                        },
                                        "type": {
                                            "@name": "guint",
                                            "@c:type": "guint"
                                        }
                                    },
                                    {
                                        "@name": "redirect_uri",
                                        "@transfer-ownership": "none",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "../libsoup/server/soup-server-message.c",
                                            "@line": "956",
                                            "#text": "the URI to redirect @msg to"
                                        },
                                        "type": {
                                            "@name": "utf8",
                                            "@c:type": "const char*"
                                        }
                                    }
                                ]
                            }
                        },
                        {
                            "@name": "set_response",
                            "@c:identifier": "soup_server_message_set_response",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../libsoup/server/soup-server-message.c",
                                "@line": "915",
                                "#text": "Convenience function to set the response body of a #SoupServerMessage. If\n@content_type is %NULL, the response body must be empty as well."
                            },
                            "source-position": {
                                "@filename": "../libsoup/server/soup-server-message.h",
                                "@line": "55"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "type": {
                                    "@name": "none",
                                    "@c:type": "void"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "msg",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../libsoup/server/soup-server-message.c",
                                        "@line": "917",
                                        "#text": "the message"
                                    },
                                    "type": {
                                        "@name": "ServerMessage",
                                        "@c:type": "SoupServerMessage*"
                                    }
                                },
                                "parameter": [
                                    {
                                        "@name": "content_type",
                                        "@transfer-ownership": "none",
                                        "@nullable": "1",
                                        "@allow-none": "1",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "../libsoup/server/soup-server-message.c",
                                            "@line": "918",
                                            "#text": "MIME Content-Type of the body"
                                        },
                                        "type": {
                                            "@name": "utf8",
                                            "@c:type": "const char*"
                                        }
                                    },
                                    {
                                        "@name": "resp_use",
                                        "@transfer-ownership": "none",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "../libsoup/server/soup-server-message.c",
                                            "@line": "919",
                                            "#text": "a #SoupMemoryUse describing how to handle @resp_body"
                                        },
                                        "type": {
                                            "@name": "MemoryUse",
                                            "@c:type": "SoupMemoryUse"
                                        }
                                    },
                                    {
                                        "@name": "resp_body",
                                        "@transfer-ownership": "none",
                                        "@nullable": "1",
                                        "@allow-none": "1",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "../libsoup/server/soup-server-message.c",
                                            "@line": "920",
                                            "#text": "a data buffer containing the body of the message response."
                                        },
                                        "array": {
                                            "@length": "3",
                                            "@zero-terminated": "0",
                                            "@c:type": "const char*",
                                            "type": {
                                                "@name": "guint8"
                                            }
                                        }
                                    },
                                    {
                                        "@name": "resp_length",
                                        "@transfer-ownership": "none",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "../libsoup/server/soup-server-message.c",
                                            "@line": "922",
                                            "#text": "the byte length of @resp_body."
                                        },
                                        "type": {
                                            "@name": "gsize",
                                            "@c:type": "gsize"
                                        }
                                    }
                                ]
                            }
                        },
                        {
                            "@name": "set_status",
                            "@c:identifier": "soup_server_message_set_status",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../libsoup/server/soup-server-message.c",
                                "@line": "874",
                                "#text": "Sets @msg's status code to @status_code.\n\nIf @status_code is a known value and @reason_phrase is %NULL, the\nreason_phrase will be set automatically."
                            },
                            "source-position": {
                                "@filename": "../libsoup/server/soup-server-message.h",
                                "@line": "48"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "type": {
                                    "@name": "none",
                                    "@c:type": "void"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "msg",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../libsoup/server/soup-server-message.c",
                                        "@line": "876",
                                        "#text": "a #SoupServerMessage"
                                    },
                                    "type": {
                                        "@name": "ServerMessage",
                                        "@c:type": "SoupServerMessage*"
                                    }
                                },
                                "parameter": [
                                    {
                                        "@name": "status_code",
                                        "@transfer-ownership": "none",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "../libsoup/server/soup-server-message.c",
                                            "@line": "877",
                                            "#text": "an HTTP status code"
                                        },
                                        "type": {
                                            "@name": "guint",
                                            "@c:type": "guint"
                                        }
                                    },
                                    {
                                        "@name": "reason_phrase",
                                        "@transfer-ownership": "none",
                                        "@nullable": "1",
                                        "@allow-none": "1",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "../libsoup/server/soup-server-message.c",
                                            "@line": "878",
                                            "#text": "a reason phrase"
                                        },
                                        "type": {
                                            "@name": "utf8",
                                            "@c:type": "const char*"
                                        }
                                    }
                                ]
                            }
                        },
                        {
                            "@name": "steal_connection",
                            "@c:identifier": "soup_server_message_steal_connection",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../libsoup/server/soup-server-message.c",
                                "@line": "1080",
                                "#text": "\"Steals\" the HTTP connection associated with @msg from its #SoupServer. This\nhappens immediately, regardless of the current state of the connection; if\nthe response to @msg has not yet finished being sent, then it will be\ndiscarded; you can steal the connection from a\n[signal@ServerMessage::wrote-informational] or\n[signal@ServerMessage::wrote-body] signal handler if you need to wait for\npart or all of the response to be sent.\n\nNote that when calling this function from C, @msg will most\nlikely be freed as a side effect."
                            },
                            "source-position": {
                                "@filename": "../libsoup/server/soup-server-message.h",
                                "@line": "78"
                            },
                            "return-value": {
                                "@transfer-ownership": "full",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "../libsoup/server/soup-server-message.c",
                                    "@line": "1095",
                                    "#text": "the #GIOStream formerly associated\n  with @msg (or %NULL if @msg was no longer associated with a\n  connection). No guarantees are made about what kind of #GIOStream\n  is returned."
                                },
                                "type": {
                                    "@name": "Gio.IOStream",
                                    "@c:type": "GIOStream*"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "msg",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../libsoup/server/soup-server-message.c",
                                        "@line": "1082",
                                        "#text": "a #SoupServerMessage"
                                    },
                                    "type": {
                                        "@name": "ServerMessage",
                                        "@c:type": "SoupServerMessage*"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "unpause",
                            "@c:identifier": "soup_server_message_unpause",
                            "@version": "3.2",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../libsoup/server/soup-server-message.c",
                                "@line": "592",
                                "#text": "Resumes I/O on @msg.\n\nUse this to resume after calling [method@ServerMessage.pause], or after\nadding a new chunk to a chunked response. I/O won't actually resume until you\nreturn to the main loop."
                            },
                            "source-position": {
                                "@filename": "../libsoup/server/soup-server-message.h",
                                "@line": "87"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "type": {
                                    "@name": "none",
                                    "@c:type": "void"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "msg",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../libsoup/server/soup-server-message.c",
                                        "@line": "594",
                                        "#text": "a SoupServerMessage"
                                    },
                                    "type": {
                                        "@name": "ServerMessage",
                                        "@c:type": "SoupServerMessage*"
                                    }
                                }
                            }
                        }
                    ],
                    "property": [
                        {
                            "@name": "tls-peer-certificate",
                            "@version": "3.2",
                            "@transfer-ownership": "none",
                            "@getter": "get_tls_peer_certificate",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../libsoup/server/soup-server-message.c",
                                "@line": "378",
                                "#text": "The peer's #GTlsCertificate associated with the message"
                            },
                            "type": {
                                "@name": "Gio.TlsCertificate"
                            }
                        },
                        {
                            "@name": "tls-peer-certificate-errors",
                            "@version": "3.2",
                            "@transfer-ownership": "none",
                            "@getter": "get_tls_peer_certificate_errors",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../libsoup/server/soup-server-message.c",
                                "@line": "393",
                                "#text": "The verification errors on #SoupServerMessage:tls-peer-certificate"
                            },
                            "type": {
                                "@name": "Gio.TlsCertificateFlags"
                            }
                        }
                    ],
                    "glib:signal": [
                        {
                            "@name": "accept-certificate",
                            "@when": "last",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../libsoup/server/soup-server-message.c",
                                "@line": "352",
                                "#text": "Emitted during the @msg's connection TLS handshake\nafter client TLS certificate has been received.\nYou can return %TRUE to accept @tls_certificate despite\n@tls_errors."
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "../libsoup/server/soup-server-message.c",
                                    "@line": "363",
                                    "#text": "%TRUE to accept the TLS certificate and stop other\n  handlers from being invoked, or %FALSE to propagate the\n  event further."
                                },
                                "type": {
                                    "@name": "gboolean",
                                    "@c:type": "gboolean"
                                }
                            },
                            "parameters": {
                                "parameter": [
                                    {
                                        "@name": "tls_peer_certificate",
                                        "@transfer-ownership": "none",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "../libsoup/server/soup-server-message.c",
                                            "@line": "355",
                                            "#text": "the peer's #GTlsCertificate"
                                        },
                                        "type": {
                                            "@name": "Gio.TlsCertificate"
                                        }
                                    },
                                    {
                                        "@name": "tls_peer_errors",
                                        "@transfer-ownership": "none",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "../libsoup/server/soup-server-message.c",
                                            "@line": "356",
                                            "#text": "the tls errors of @tls_certificate"
                                        },
                                        "type": {
                                            "@name": "Gio.TlsCertificateFlags"
                                        }
                                    }
                                ]
                            }
                        },
                        {
                            "@name": "connected",
                            "@when": "last",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../libsoup/server/soup-server-message.c",
                                "@line": "322",
                                "#text": "Emitted when the @msg's socket is connected and the TLS handshake completed."
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "type": {
                                    "@name": "none",
                                    "@c:type": "void"
                                }
                            }
                        },
                        {
                            "@name": "disconnected",
                            "@when": "last",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../libsoup/server/soup-server-message.c",
                                "@line": "337",
                                "#text": "Emitted when the @msg's socket is disconnected."
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "type": {
                                    "@name": "none",
                                    "@c:type": "void"
                                }
                            }
                        },
                        {
                            "@name": "finished",
                            "@when": "last",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../libsoup/server/soup-server-message.c",
                                "@line": "307",
                                "#text": "Emitted when all HTTP processing is finished for a message.\n(After [signal@ServerMessage::wrote-body])."
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "type": {
                                    "@name": "none",
                                    "@c:type": "void"
                                }
                            }
                        },
                        {
                            "@name": "got-body",
                            "@when": "last",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../libsoup/server/soup-server-message.c",
                                "@line": "292",
                                "#text": "Emitted after receiving the complete request body."
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "type": {
                                    "@name": "none",
                                    "@c:type": "void"
                                }
                            }
                        },
                        {
                            "@name": "got-chunk",
                            "@when": "first",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../libsoup/server/soup-server-message.c",
                                "@line": "272",
                                "#text": "Emitted after receiving a chunk of a message body.\n\nNote that \"chunk\" in this context means any subpiece of the body, not\nnecessarily the specific HTTP 1.1 chunks sent by the other side."
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "type": {
                                    "@name": "none",
                                    "@c:type": "void"
                                }
                            },
                            "parameters": {
                                "parameter": {
                                    "@name": "chunk",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../libsoup/server/soup-server-message.c",
                                        "@line": "275",
                                        "#text": "the just-read chunk"
                                    },
                                    "type": {
                                        "@name": "GLib.Bytes"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "got-headers",
                            "@when": "last",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../libsoup/server/soup-server-message.c",
                                "@line": "257",
                                "#text": "Emitted after receiving the Request-Line and request headers."
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "type": {
                                    "@name": "none",
                                    "@c:type": "void"
                                }
                            }
                        },
                        {
                            "@name": "wrote-body",
                            "@when": "last",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../libsoup/server/soup-server-message.c",
                                "@line": "241",
                                "#text": "Emitted immediately after writing the complete response body for a\nmessage."
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "type": {
                                    "@name": "none",
                                    "@c:type": "void"
                                }
                            }
                        },
                        {
                            "@name": "wrote-body-data",
                            "@when": "last",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../libsoup/server/soup-server-message.c",
                                "@line": "223",
                                "#text": "Emitted immediately after writing a portion of the message\nbody to the network."
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "type": {
                                    "@name": "none",
                                    "@c:type": "void"
                                }
                            },
                            "parameters": {
                                "parameter": {
                                    "@name": "chunk_size",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../libsoup/server/soup-server-message.c",
                                        "@line": "226",
                                        "#text": "the number of bytes written"
                                    },
                                    "type": {
                                        "@name": "guint",
                                        "@c:type": "guint"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "wrote-chunk",
                            "@when": "last",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../libsoup/server/soup-server-message.c",
                                "@line": "201",
                                "#text": "Emitted immediately after writing a body chunk for a message.\n\nNote that this signal is not parallel to\n[signal@ServerMessage::got-chunk]; it is emitted only when a complete\nchunk (added with [method@MessageBody.append] or\n[method@MessageBody.append_bytes] has been written. To get\nmore useful continuous progress information, use\n[signal@ServerMessage::wrote-body-data]."
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "type": {
                                    "@name": "none",
                                    "@c:type": "void"
                                }
                            }
                        },
                        {
                            "@name": "wrote-headers",
                            "@when": "last",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../libsoup/server/soup-server-message.c",
                                "@line": "185",
                                "#text": "Emitted immediately after writing the response headers for a\nmessage."
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "type": {
                                    "@name": "none",
                                    "@c:type": "void"
                                }
                            }
                        },
                        {
                            "@name": "wrote-informational",
                            "@when": "last",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../libsoup/server/soup-server-message.c",
                                "@line": "170",
                                "#text": "Emitted immediately after writing a 1xx (Informational) response."
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "type": {
                                    "@name": "none",
                                    "@c:type": "void"
                                }
                            }
                        }
                    ]
                },
                {
                    "@name": "Session",
                    "@c:symbol-prefix": "session",
                    "@c:type": "SoupSession",
                    "@parent": "GObject.Object",
                    "@glib:type-name": "SoupSession",
                    "@glib:get-type": "soup_session_get_type",
                    "@glib:type-struct": "SessionClass",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "../libsoup/soup-session.c",
                        "@line": "32",
                        "#text": "Soup session state object.\n\n#SoupSession is the object that controls client-side HTTP. A\n#SoupSession encapsulates all of the state that libsoup is keeping\non behalf of your program; cached HTTP connections, authentication\ninformation, etc. It also keeps track of various global options\nand features that you are using.\n\nMost applications will only need a single #SoupSession; the primary\nreason you might need multiple sessions is if you need to have\nmultiple independent authentication contexts. (Eg, you are\nconnecting to a server and authenticating as two different users at\ndifferent times; the easiest way to ensure that each [class@Message]\nis sent with the authentication information you intended is to use\none session for the first user, and a second session for the other\nuser.)\n\nAdditional #SoupSession functionality is provided by\n[iface@SessionFeature] objects, which can be added to a session with\n[method@Session.add_feature] or [method@Session.add_feature_by_type]\nFor example, [class@Logger] provides support for\nlogging HTTP traffic, [class@ContentDecoder] provides support for\ncompressed response handling, and [class@ContentSniffer] provides\nsupport for HTML5-style response body content sniffing.\nAdditionally, subtypes of [class@Auth] can be added\nas features, to add support for additional authentication types.\n\nAll `SoupSession`s are created with a [class@AuthManager], and support\nfor %SOUP_TYPE_AUTH_BASIC and %SOUP_TYPE_AUTH_DIGEST. Additionally,\nsessions using the plain #SoupSession class (rather than one of its deprecated\nsubtypes) have a [class@ContentDecoder] by default.\n\nNote that all async methods will invoke their callbacks on the thread-default\ncontext at the time of the function call."
                    },
                    "source-position": {
                        "@filename": "../libsoup/soup-session.h",
                        "@line": "34"
                    },
                    "constructor": [
                        {
                            "@name": "new",
                            "@c:identifier": "soup_session_new",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../libsoup/soup-session.c",
                                "@line": "516",
                                "#text": "Creates a #SoupSession with the default options."
                            },
                            "source-position": {
                                "@filename": "../libsoup/soup-session.h",
                                "@line": "57"
                            },
                            "return-value": {
                                "@transfer-ownership": "full",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "../libsoup/soup-session.c",
                                    "@line": "521",
                                    "#text": "the new session."
                                },
                                "type": {
                                    "@name": "Session",
                                    "@c:type": "SoupSession*"
                                }
                            }
                        },
                        {
                            "@name": "new_with_options",
                            "@c:identifier": "soup_session_new_with_options",
                            "@introspectable": "0",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../libsoup/soup-session.c",
                                "@line": "529",
                                "#text": "Creates a #SoupSession with the specified options."
                            },
                            "source-position": {
                                "@filename": "../libsoup/soup-session.h",
                                "@line": "60"
                            },
                            "return-value": {
                                "@transfer-ownership": "full",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "../libsoup/soup-session.c",
                                    "@line": "536",
                                    "#text": "the new session."
                                },
                                "type": {
                                    "@name": "Session",
                                    "@c:type": "SoupSession*"
                                }
                            },
                            "parameters": {
                                "parameter": [
                                    {
                                        "@name": "optname1",
                                        "@transfer-ownership": "none",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "../libsoup/soup-session.c",
                                            "@line": "531",
                                            "#text": "name of first property to set"
                                        },
                                        "type": {
                                            "@name": "utf8",
                                            "@c:type": "const char*"
                                        }
                                    },
                                    {
                                        "@name": "...",
                                        "@transfer-ownership": "none",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "../libsoup/soup-session.c",
                                            "@line": "532",
                                            "#text": "value of @optname1, followed by additional property/value pairs"
                                        },
                                        "varargs": null
                                    }
                                ]
                            }
                        }
                    ],
                    "virtual-method": [
                        {
                            "@name": "request_queued",
                            "source-position": {
                                "@filename": "../libsoup/soup-session.h",
                                "@line": "21"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "type": {
                                    "@name": "none",
                                    "@c:type": "void"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "session",
                                    "@transfer-ownership": "none",
                                    "type": {
                                        "@name": "Session",
                                        "@c:type": "SoupSession*"
                                    }
                                },
                                "parameter": {
                                    "@name": "msg",
                                    "@transfer-ownership": "none",
                                    "type": {
                                        "@name": "Message",
                                        "@c:type": "SoupMessage*"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "request_unqueued",
                            "source-position": {
                                "@filename": "../libsoup/soup-session.h",
                                "@line": "23"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "type": {
                                    "@name": "none",
                                    "@c:type": "void"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "session",
                                    "@transfer-ownership": "none",
                                    "type": {
                                        "@name": "Session",
                                        "@c:type": "SoupSession*"
                                    }
                                },
                                "parameter": {
                                    "@name": "msg",
                                    "@transfer-ownership": "none",
                                    "type": {
                                        "@name": "Message",
                                        "@c:type": "SoupMessage*"
                                    }
                                }
                            }
                        }
                    ],
                    "method": [
                        {
                            "@name": "abort",
                            "@c:identifier": "soup_session_abort",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../libsoup/soup-session.c",
                                "@line": "1975",
                                "#text": "Cancels all pending requests in @session and closes all idle\npersistent connections."
                            },
                            "source-position": {
                                "@filename": "../libsoup/soup-session.h",
                                "@line": "132"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "type": {
                                    "@name": "none",
                                    "@c:type": "void"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "session",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../libsoup/soup-session.c",
                                        "@line": "1977",
                                        "#text": "the session"
                                    },
                                    "type": {
                                        "@name": "Session",
                                        "@c:type": "SoupSession*"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "add_feature",
                            "@c:identifier": "soup_session_add_feature",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../libsoup/soup-session.c",
                                "@line": "2012",
                                "#text": "Adds @feature's functionality to @session. You cannot add multiple\nfeatures of the same [alias@GLib.Type] to a session.\n\nSee the main #SoupSession documentation for information on what\nfeatures are present in sessions by default."
                            },
                            "source-position": {
                                "@filename": "../libsoup/soup-session.h",
                                "@line": "174"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "type": {
                                    "@name": "none",
                                    "@c:type": "void"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "session",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../libsoup/soup-session.c",
                                        "@line": "2014",
                                        "#text": "a #SoupSession"
                                    },
                                    "type": {
                                        "@name": "Session",
                                        "@c:type": "SoupSession*"
                                    }
                                },
                                "parameter": {
                                    "@name": "feature",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../libsoup/soup-session.c",
                                        "@line": "2015",
                                        "#text": "an object that implements #SoupSessionFeature"
                                    },
                                    "type": {
                                        "@name": "SessionFeature",
                                        "@c:type": "SoupSessionFeature*"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "add_feature_by_type",
                            "@c:identifier": "soup_session_add_feature_by_type",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../libsoup/soup-session.c",
                                "@line": "2040",
                                "#text": "If @feature_type is the type of a class that implements\n[iface@SessionFeature], this creates a new feature of that type and\nadds it to @session as with [method@Session.add_feature]. You can use\nthis when you don't need to customize the new feature in any way.\nAdding multiple features of the same @feature_type is not allowed.\n\nIf @feature_type is not a [iface@SessionFeature] type, this gives each\nexisting feature on @session the chance to accept @feature_type as\na \"subfeature\". This can be used to add new [class@Auth] types, for instance.\n\nSee the main #SoupSession documentation for information on what\nfeatures are present in sessions by default."
                            },
                            "source-position": {
                                "@filename": "../libsoup/soup-session.h",
                                "@line": "177"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "type": {
                                    "@name": "none",
                                    "@c:type": "void"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "session",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../libsoup/soup-session.c",
                                        "@line": "2042",
                                        "#text": "a #SoupSession"
                                    },
                                    "type": {
                                        "@name": "Session",
                                        "@c:type": "SoupSession*"
                                    }
                                },
                                "parameter": {
                                    "@name": "feature_type",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../libsoup/soup-session.c",
                                        "@line": "2043",
                                        "#text": "a #GType"
                                    },
                                    "type": {
                                        "@name": "GType",
                                        "@c:type": "GType"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "get_accept_language",
                            "@c:identifier": "soup_session_get_accept_language",
                            "@glib:get-property": "accept-language",
                            "attribute": {
                                "@name": "org.gtk.Method.get_property",
                                "@value": "accept-language"
                            },
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../libsoup/soup-session.c",
                                "@line": "962",
                                "#text": "Get the value used by @session for the \"Accept-Language\" header on new\nrequests."
                            },
                            "source-position": {
                                "@filename": "../libsoup/soup-session.h",
                                "@line": "119"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "@nullable": "1",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "../libsoup/soup-session.c",
                                    "@line": "969",
                                    "#text": "the accept language string"
                                },
                                "type": {
                                    "@name": "utf8",
                                    "@c:type": "const char*"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "session",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../libsoup/soup-session.c",
                                        "@line": "964",
                                        "#text": "a #SoupSession"
                                    },
                                    "type": {
                                        "@name": "Session",
                                        "@c:type": "SoupSession*"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "get_accept_language_auto",
                            "@c:identifier": "soup_session_get_accept_language_auto",
                            "@glib:get-property": "accept-language-auto",
                            "attribute": {
                                "@name": "org.gtk.Method.get_property",
                                "@value": "accept-language-auto"
                            },
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../libsoup/soup-session.c",
                                "@line": "1017",
                                "#text": "Gets whether @session automatically sets the \"Accept-Language\" header on new\nrequests."
                            },
                            "source-position": {
                                "@filename": "../libsoup/soup-session.h",
                                "@line": "126"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "../libsoup/soup-session.c",
                                    "@line": "1024",
                                    "#text": "%TRUE if @session sets \"Accept-Language\" header automatically, or\n  %FALSE otherwise."
                                },
                                "type": {
                                    "@name": "gboolean",
                                    "@c:type": "gboolean"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "session",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../libsoup/soup-session.c",
                                        "@line": "1019",
                                        "#text": "a #SoupSession"
                                    },
                                    "type": {
                                        "@name": "Session",
                                        "@c:type": "SoupSession*"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "get_async_result_message",
                            "@c:identifier": "soup_session_get_async_result_message",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../libsoup/soup-session.c",
                                "@line": "3435",
                                "#text": "Gets the [class@Message] of the @result asynchronous operation This is useful\nto get the [class@Message] of an asynchronous operation started by @session\nfrom its [callback@Gio.AsyncReadyCallback]."
                            },
                            "source-position": {
                                "@filename": "../libsoup/soup-session.h",
                                "@line": "170"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "@nullable": "1",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "../libsoup/soup-session.c",
                                    "@line": "3444",
                                    "#text": "a #SoupMessage or\n  %NULL if @result is not a valid @session async operation result."
                                },
                                "type": {
                                    "@name": "Message",
                                    "@c:type": "SoupMessage*"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "session",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../libsoup/soup-session.c",
                                        "@line": "3437",
                                        "#text": "a #SoupSession"
                                    },
                                    "type": {
                                        "@name": "Session",
                                        "@c:type": "SoupSession*"
                                    }
                                },
                                "parameter": {
                                    "@name": "result",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../libsoup/soup-session.c",
                                        "@line": "3438",
                                        "#text": "the #GAsyncResult passed to your callback"
                                    },
                                    "type": {
                                        "@name": "Gio.AsyncResult",
                                        "@c:type": "GAsyncResult*"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "get_feature",
                            "@c:identifier": "soup_session_get_feature",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../libsoup/soup-session.c",
                                "@line": "2209",
                                "#text": "Gets the feature in @session of type @feature_type."
                            },
                            "source-position": {
                                "@filename": "../libsoup/soup-session.h",
                                "@line": "189"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "@nullable": "1",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "../libsoup/soup-session.c",
                                    "@line": "2216",
                                    "#text": "a #SoupSessionFeature, or %NULL. The\n  feature is owned by @session."
                                },
                                "type": {
                                    "@name": "SessionFeature",
                                    "@c:type": "SoupSessionFeature*"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "session",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../libsoup/soup-session.c",
                                        "@line": "2211",
                                        "#text": "a #SoupSession"
                                    },
                                    "type": {
                                        "@name": "Session",
                                        "@c:type": "SoupSession*"
                                    }
                                },
                                "parameter": {
                                    "@name": "feature_type",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../libsoup/soup-session.c",
                                        "@line": "2212",
                                        "#text": "the #GType of the feature to get"
                                    },
                                    "type": {
                                        "@name": "GType",
                                        "@c:type": "GType"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "get_feature_for_message",
                            "@c:identifier": "soup_session_get_feature_for_message",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../libsoup/soup-session.c",
                                "@line": "2238",
                                "#text": "Gets the feature in @session of type @feature_type, provided\nthat it is not disabled for @msg."
                            },
                            "source-position": {
                                "@filename": "../libsoup/soup-session.h",
                                "@line": "192"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "@nullable": "1",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "../libsoup/soup-session.c",
                                    "@line": "2247",
                                    "#text": "a #SoupSessionFeature. The feature is\n  owned by @session."
                                },
                                "type": {
                                    "@name": "SessionFeature",
                                    "@c:type": "SoupSessionFeature*"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "session",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../libsoup/soup-session.c",
                                        "@line": "2240",
                                        "#text": "a #SoupSession"
                                    },
                                    "type": {
                                        "@name": "Session",
                                        "@c:type": "SoupSession*"
                                    }
                                },
                                "parameter": [
                                    {
                                        "@name": "feature_type",
                                        "@transfer-ownership": "none",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "../libsoup/soup-session.c",
                                            "@line": "2241",
                                            "#text": "the #GType of the feature to get"
                                        },
                                        "type": {
                                            "@name": "GType",
                                            "@c:type": "GType"
                                        }
                                    },
                                    {
                                        "@name": "msg",
                                        "@transfer-ownership": "none",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "../libsoup/soup-session.c",
                                            "@line": "2242",
                                            "#text": "a #SoupMessage"
                                        },
                                        "type": {
                                            "@name": "Message",
                                            "@c:type": "SoupMessage*"
                                        }
                                    }
                                ]
                            }
                        },
                        {
                            "@name": "get_idle_timeout",
                            "@c:identifier": "soup_session_get_idle_timeout",
                            "@glib:get-property": "idle-timeout",
                            "attribute": {
                                "@name": "org.gtk.Method.get_property",
                                "@value": "idle-timeout"
                            },
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../libsoup/soup-session.c",
                                "@line": "838",
                                "#text": "Get the timeout in seconds for idle connection lifetime currently used by\n@session."
                            },
                            "source-position": {
                                "@filename": "../libsoup/soup-session.h",
                                "@line": "105"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "../libsoup/soup-session.c",
                                    "@line": "845",
                                    "#text": "the timeout in seconds"
                                },
                                "type": {
                                    "@name": "guint",
                                    "@c:type": "guint"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "session",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../libsoup/soup-session.c",
                                        "@line": "840",
                                        "#text": "a #SoupSession"
                                    },
                                    "type": {
                                        "@name": "Session",
                                        "@c:type": "SoupSession*"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "get_local_address",
                            "@c:identifier": "soup_session_get_local_address",
                            "@glib:get-property": "local-address",
                            "attribute": {
                                "@name": "org.gtk.Method.get_property",
                                "@value": "local-address"
                            },
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../libsoup/soup-session.c",
                                "@line": "553",
                                "#text": "Get the [class@Gio.InetSocketAddress] to use for the client side of\nconnections in @session."
                            },
                            "source-position": {
                                "@filename": "../libsoup/soup-session.h",
                                "@line": "64"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "@nullable": "1",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "../libsoup/soup-session.c",
                                    "@line": "560",
                                    "#text": "a #GInetSocketAddress"
                                },
                                "type": {
                                    "@name": "Gio.InetSocketAddress",
                                    "@c:type": "GInetSocketAddress*"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "session",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../libsoup/soup-session.c",
                                        "@line": "555",
                                        "#text": "a #SoupSession"
                                    },
                                    "type": {
                                        "@name": "Session",
                                        "@c:type": "SoupSession*"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "get_max_conns",
                            "@c:identifier": "soup_session_get_max_conns",
                            "@glib:get-property": "max-conns",
                            "attribute": {
                                "@name": "org.gtk.Method.set_property",
                                "@value": "max-conns"
                            },
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../libsoup/soup-session.c",
                                "@line": "573",
                                "#text": "Get the maximum number of connections that @session can open at once."
                            },
                            "source-position": {
                                "@filename": "../libsoup/soup-session.h",
                                "@line": "67"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "../libsoup/soup-session.c",
                                    "@line": "579",
                                    "#text": "the maximum number of connections"
                                },
                                "type": {
                                    "@name": "guint",
                                    "@c:type": "guint"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "session",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../libsoup/soup-session.c",
                                        "@line": "575",
                                        "#text": "a #SoupSession"
                                    },
                                    "type": {
                                        "@name": "Session",
                                        "@c:type": "SoupSession*"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "get_max_conns_per_host",
                            "@c:identifier": "soup_session_get_max_conns_per_host",
                            "@glib:get-property": "max-conns-per-host",
                            "attribute": {
                                "@name": "org.gtk.Method.get_property",
                                "@value": "max-conns-per-host"
                            },
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../libsoup/soup-session.c",
                                "@line": "592",
                                "#text": "Get the maximum number of connections that @session can open at once to a\ngiven host."
                            },
                            "source-position": {
                                "@filename": "../libsoup/soup-session.h",
                                "@line": "70"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "../libsoup/soup-session.c",
                                    "@line": "599",
                                    "#text": "the maximum number of connections per host"
                                },
                                "type": {
                                    "@name": "guint",
                                    "@c:type": "guint"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "session",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../libsoup/soup-session.c",
                                        "@line": "594",
                                        "#text": "a #SoupSession"
                                    },
                                    "type": {
                                        "@name": "Session",
                                        "@c:type": "SoupSession*"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "get_proxy_resolver",
                            "@c:identifier": "soup_session_get_proxy_resolver",
                            "@glib:get-property": "proxy-resolver",
                            "attribute": {
                                "@name": "org.gtk.Method.get_property",
                                "@value": "proxy-resolver"
                            },
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../libsoup/soup-session.c",
                                "@line": "642",
                                "#text": "Get the [iface@Gio.ProxyResolver] currently used by @session."
                            },
                            "source-position": {
                                "@filename": "../libsoup/soup-session.h",
                                "@line": "77"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "@nullable": "1",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "../libsoup/soup-session.c",
                                    "@line": "648",
                                    "#text": "a #GProxyResolver or %NULL if proxies\n  are disabled in @session"
                                },
                                "type": {
                                    "@name": "Gio.ProxyResolver",
                                    "@c:type": "GProxyResolver*"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "session",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../libsoup/soup-session.c",
                                        "@line": "644",
                                        "#text": "a #SoupSession"
                                    },
                                    "type": {
                                        "@name": "Session",
                                        "@c:type": "SoupSession*"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "get_remote_connectable",
                            "@c:identifier": "soup_session_get_remote_connectable",
                            "@glib:get-property": "remote-connectable",
                            "attribute": {
                                "@name": "org.gtk.Method.get_property",
                                "@value": "remote-connectable"
                            },
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../libsoup/soup-session.c",
                                "@line": "1038",
                                "#text": "Gets the remote connectable if one set."
                            },
                            "source-position": {
                                "@filename": "../libsoup/soup-session.h",
                                "@line": "129"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "@nullable": "1",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "../libsoup/soup-session.c",
                                    "@line": "1044",
                                    "#text": "the #GSocketConnectable"
                                },
                                "type": {
                                    "@name": "Gio.SocketConnectable",
                                    "@c:type": "GSocketConnectable*"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "session",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../libsoup/soup-session.c",
                                        "@line": "1040",
                                        "#text": "a #SoupSession"
                                    },
                                    "type": {
                                        "@name": "Session",
                                        "@c:type": "SoupSession*"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "get_timeout",
                            "@c:identifier": "soup_session_get_timeout",
                            "@glib:get-property": "timeout",
                            "attribute": {
                                "@name": "org.gtk.Method.get_property",
                                "@value": "timeout"
                            },
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../libsoup/soup-session.c",
                                "@line": "791",
                                "#text": "Get the timeout in seconds for socket I/O operations currently used by\n@session."
                            },
                            "source-position": {
                                "@filename": "../libsoup/soup-session.h",
                                "@line": "98"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "../libsoup/soup-session.c",
                                    "@line": "798",
                                    "#text": "the timeout in seconds"
                                },
                                "type": {
                                    "@name": "guint",
                                    "@c:type": "guint"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "session",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../libsoup/soup-session.c",
                                        "@line": "793",
                                        "#text": "a #SoupSession"
                                    },
                                    "type": {
                                        "@name": "Session",
                                        "@c:type": "SoupSession*"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "get_tls_database",
                            "@c:identifier": "soup_session_get_tls_database",
                            "@glib:get-property": "tls-database",
                            "attribute": {
                                "@name": "org.gtk.Method.get_property",
                                "@value": "tls-database"
                            },
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../libsoup/soup-session.c",
                                "@line": "692",
                                "#text": "Get the [class@Gio.TlsDatabase] currently used by @session."
                            },
                            "source-position": {
                                "@filename": "../libsoup/soup-session.h",
                                "@line": "84"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "@nullable": "1",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "../libsoup/soup-session.c",
                                    "@line": "698",
                                    "#text": "a #GTlsDatabase"
                                },
                                "type": {
                                    "@name": "Gio.TlsDatabase",
                                    "@c:type": "GTlsDatabase*"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "session",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../libsoup/soup-session.c",
                                        "@line": "694",
                                        "#text": "a #SoupSession"
                                    },
                                    "type": {
                                        "@name": "Session",
                                        "@c:type": "SoupSession*"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "get_tls_interaction",
                            "@c:identifier": "soup_session_get_tls_interaction",
                            "@glib:get-property": "tls-interaction",
                            "attribute": {
                                "@name": "org.gtk.Method.get_property",
                                "@value": "tls-interaction"
                            },
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../libsoup/soup-session.c",
                                "@line": "745",
                                "#text": "Get the [class@Gio.TlsInteraction] currently used by @session."
                            },
                            "source-position": {
                                "@filename": "../libsoup/soup-session.h",
                                "@line": "91"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "@nullable": "1",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "../libsoup/soup-session.c",
                                    "@line": "751",
                                    "#text": "a #GTlsInteraction"
                                },
                                "type": {
                                    "@name": "Gio.TlsInteraction",
                                    "@c:type": "GTlsInteraction*"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "session",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../libsoup/soup-session.c",
                                        "@line": "747",
                                        "#text": "a #SoupSession"
                                    },
                                    "type": {
                                        "@name": "Session",
                                        "@c:type": "SoupSession*"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "get_user_agent",
                            "@c:identifier": "soup_session_get_user_agent",
                            "@glib:get-property": "user-agent",
                            "attribute": {
                                "@name": "org.gtk.Method.get_property",
                                "@value": "user-agent"
                            },
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../libsoup/soup-session.c",
                                "@line": "910",
                                "#text": "Get the value used by @session for the \"User-Agent\" header on new requests."
                            },
                            "source-position": {
                                "@filename": "../libsoup/soup-session.h",
                                "@line": "112"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "@nullable": "1",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "../libsoup/soup-session.c",
                                    "@line": "916",
                                    "#text": "the user agent string"
                                },
                                "type": {
                                    "@name": "utf8",
                                    "@c:type": "const char*"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "session",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../libsoup/soup-session.c",
                                        "@line": "912",
                                        "#text": "a #SoupSession"
                                    },
                                    "type": {
                                        "@name": "Session",
                                        "@c:type": "SoupSession*"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "has_feature",
                            "@c:identifier": "soup_session_has_feature",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../libsoup/soup-session.c",
                                "@line": "2144",
                                "#text": "Tests if @session has at a feature of type @feature_type (which can\nbe the type of either a [iface@SessionFeature], or else a subtype of\nsome class managed by another feature, such as [class@Auth])."
                            },
                            "source-position": {
                                "@filename": "../libsoup/soup-session.h",
                                "@line": "186"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "../libsoup/soup-session.c",
                                    "@line": "2153",
                                    "#text": "%TRUE or %FALSE"
                                },
                                "type": {
                                    "@name": "gboolean",
                                    "@c:type": "gboolean"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "session",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../libsoup/soup-session.c",
                                        "@line": "2146",
                                        "#text": "a #SoupSession"
                                    },
                                    "type": {
                                        "@name": "Session",
                                        "@c:type": "SoupSession*"
                                    }
                                },
                                "parameter": {
                                    "@name": "feature_type",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../libsoup/soup-session.c",
                                        "@line": "2147",
                                        "#text": "the #GType of the class of features to check for"
                                    },
                                    "type": {
                                        "@name": "GType",
                                        "@c:type": "GType"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "preconnect_async",
                            "@c:identifier": "soup_session_preconnect_async",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../libsoup/soup-session.c",
                                "@line": "3696",
                                "#text": "Start a preconnection to @msg.\n\nOnce the connection is done, it will remain in idle state so that it can be\nreused by future requests. If there's already an idle connection for the\ngiven @msg host, the operation finishes successfully without creating a new\nconnection. If a new request for the given @msg host is made while the\npreconnect is still ongoing, the request will take the ownership of the\nconnection and the preconnect operation will finish successfully (if there's\na connection error it will be handled by the request).\n\nThe operation finishes when the connection is done or an error occurred."
                            },
                            "source-position": {
                                "@filename": "../libsoup/soup-session.h",
                                "@line": "213"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "type": {
                                    "@name": "none",
                                    "@c:type": "void"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "session",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../libsoup/soup-session.c",
                                        "@line": "3698",
                                        "#text": "a #SoupSession"
                                    },
                                    "type": {
                                        "@name": "Session",
                                        "@c:type": "SoupSession*"
                                    }
                                },
                                "parameter": [
                                    {
                                        "@name": "msg",
                                        "@transfer-ownership": "none",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "../libsoup/soup-session.c",
                                            "@line": "3699",
                                            "#text": "a #SoupMessage"
                                        },
                                        "type": {
                                            "@name": "Message",
                                            "@c:type": "SoupMessage*"
                                        }
                                    },
                                    {
                                        "@name": "io_priority",
                                        "@transfer-ownership": "none",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "../libsoup/soup-session.c",
                                            "@line": "3700",
                                            "#text": "the I/O priority of the request"
                                        },
                                        "type": {
                                            "@name": "gint",
                                            "@c:type": "int"
                                        }
                                    },
                                    {
                                        "@name": "cancellable",
                                        "@transfer-ownership": "none",
                                        "@nullable": "1",
                                        "@allow-none": "1",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "../libsoup/soup-session.c",
                                            "@line": "3701",
                                            "#text": "a #GCancellable"
                                        },
                                        "type": {
                                            "@name": "Gio.Cancellable",
                                            "@c:type": "GCancellable*"
                                        }
                                    },
                                    {
                                        "@name": "callback",
                                        "@transfer-ownership": "none",
                                        "@nullable": "1",
                                        "@allow-none": "1",
                                        "@scope": "async",
                                        "@closure": "4",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "../libsoup/soup-session.c",
                                            "@line": "3702",
                                            "#text": "the callback to invoke when the operation finishes"
                                        },
                                        "type": {
                                            "@name": "Gio.AsyncReadyCallback",
                                            "@c:type": "GAsyncReadyCallback"
                                        }
                                    },
                                    {
                                        "@name": "user_data",
                                        "@transfer-ownership": "none",
                                        "@nullable": "1",
                                        "@allow-none": "1",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "../libsoup/soup-session.c",
                                            "@line": "3703",
                                            "#text": "data for @progress_callback and @callback"
                                        },
                                        "type": {
                                            "@name": "gpointer",
                                            "@c:type": "gpointer"
                                        }
                                    }
                                ]
                            }
                        },
                        {
                            "@name": "preconnect_finish",
                            "@c:identifier": "soup_session_preconnect_finish",
                            "@throws": "1",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../libsoup/soup-session.c",
                                "@line": "3750",
                                "#text": "Complete a preconnect async operation started with [method@Session.preconnect_async]."
                            },
                            "source-position": {
                                "@filename": "../libsoup/soup-session.h",
                                "@line": "220"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "../libsoup/soup-session.c",
                                    "@line": "3758",
                                    "#text": "%TRUE if the preconnect succeeded, or %FALSE in case of error."
                                },
                                "type": {
                                    "@name": "gboolean",
                                    "@c:type": "gboolean"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "session",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../libsoup/soup-session.c",
                                        "@line": "3752",
                                        "#text": "a #SoupSession"
                                    },
                                    "type": {
                                        "@name": "Session",
                                        "@c:type": "SoupSession*"
                                    }
                                },
                                "parameter": {
                                    "@name": "result",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../libsoup/soup-session.c",
                                        "@line": "3753",
                                        "#text": "the #GAsyncResult passed to your callback"
                                    },
                                    "type": {
                                        "@name": "Gio.AsyncResult",
                                        "@c:type": "GAsyncResult*"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "remove_feature",
                            "@c:identifier": "soup_session_remove_feature",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../libsoup/soup-session.c",
                                "@line": "2087",
                                "#text": "Removes @feature's functionality from @session."
                            },
                            "source-position": {
                                "@filename": "../libsoup/soup-session.h",
                                "@line": "180"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "type": {
                                    "@name": "none",
                                    "@c:type": "void"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "session",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../libsoup/soup-session.c",
                                        "@line": "2089",
                                        "#text": "a #SoupSession"
                                    },
                                    "type": {
                                        "@name": "Session",
                                        "@c:type": "SoupSession*"
                                    }
                                },
                                "parameter": {
                                    "@name": "feature",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../libsoup/soup-session.c",
                                        "@line": "2090",
                                        "#text": "a feature that has previously been added to @session"
                                    },
                                    "type": {
                                        "@name": "SessionFeature",
                                        "@c:type": "SoupSessionFeature*"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "remove_feature_by_type",
                            "@c:identifier": "soup_session_remove_feature_by_type",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../libsoup/soup-session.c",
                                "@line": "2109",
                                "#text": "Removes all features of type @feature_type (or any subclass of\n@feature_type) from @session."
                            },
                            "source-position": {
                                "@filename": "../libsoup/soup-session.h",
                                "@line": "183"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "type": {
                                    "@name": "none",
                                    "@c:type": "void"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "session",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../libsoup/soup-session.c",
                                        "@line": "2111",
                                        "#text": "a #SoupSession"
                                    },
                                    "type": {
                                        "@name": "Session",
                                        "@c:type": "SoupSession*"
                                    }
                                },
                                "parameter": {
                                    "@name": "feature_type",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../libsoup/soup-session.c",
                                        "@line": "2112",
                                        "#text": "a #GType"
                                    },
                                    "type": {
                                        "@name": "GType",
                                        "@c:type": "GType"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "send",
                            "@c:identifier": "soup_session_send",
                            "@throws": "1",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../libsoup/soup-session.c",
                                "@line": "3138",
                                "#text": "Synchronously sends @msg and waits for the beginning of a response.\n\nOn success, a [class@Gio.InputStream] will be returned which you can use to\nread the response body. (\"Success\" here means only that an HTTP\nresponse was received and understood; it does not necessarily mean\nthat a 2xx class status code was received.)\n\nIf non-%NULL, @cancellable can be used to cancel the request;\n[method@Session.send] will return a %G_IO_ERROR_CANCELLED error. Note that\nwith requests that have side effects (eg, `POST`, `PUT`, `DELETE`) it is\npossible that you might cancel the request after the server acts on it, but\nbefore it returns a response, leaving the remote resource in an unknown\nstate.\n\nIf @msg is requeued due to a redirect or authentication, the\ninitial (`3xx/401/407`) response body will be suppressed, and\n[method@Session.send] will only return once a final response has been\nreceived."
                            },
                            "source-position": {
                                "@filename": "../libsoup/soup-session.h",
                                "@line": "146"
                            },
                            "return-value": {
                                "@transfer-ownership": "full",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "../libsoup/soup-session.c",
                                    "@line": "3164",
                                    "#text": "a #GInputStream for reading the\n  response body, or %NULL on error."
                                },
                                "type": {
                                    "@name": "Gio.InputStream",
                                    "@c:type": "GInputStream*"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "session",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../libsoup/soup-session.c",
                                        "@line": "3140",
                                        "#text": "a #SoupSession"
                                    },
                                    "type": {
                                        "@name": "Session",
                                        "@c:type": "SoupSession*"
                                    }
                                },
                                "parameter": [
                                    {
                                        "@name": "msg",
                                        "@transfer-ownership": "none",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "../libsoup/soup-session.c",
                                            "@line": "3141",
                                            "#text": "a #SoupMessage"
                                        },
                                        "type": {
                                            "@name": "Message",
                                            "@c:type": "SoupMessage*"
                                        }
                                    },
                                    {
                                        "@name": "cancellable",
                                        "@transfer-ownership": "none",
                                        "@nullable": "1",
                                        "@allow-none": "1",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "../libsoup/soup-session.c",
                                            "@line": "3142",
                                            "#text": "a #GCancellable"
                                        },
                                        "type": {
                                            "@name": "Gio.Cancellable",
                                            "@c:type": "GCancellable*"
                                        }
                                    }
                                ]
                            }
                        },
                        {
                            "@name": "send_and_read",
                            "@c:identifier": "soup_session_send_and_read",
                            "@throws": "1",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../libsoup/soup-session.c",
                                "@line": "3390",
                                "#text": "Synchronously sends @msg and reads the response body.\n\nOn success, a [struct@GLib.Bytes] will be returned with the response body.\nThis function should only be used when the resource to be retrieved\nis not too long and can be stored in memory.\n\nSee [method@Session.send] for more details on the general semantics."
                            },
                            "source-position": {
                                "@filename": "../libsoup/soup-session.h",
                                "@line": "164"
                            },
                            "return-value": {
                                "@transfer-ownership": "full",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "../libsoup/soup-session.c",
                                    "@line": "3405",
                                    "#text": "a #GBytes, or %NULL on error."
                                },
                                "type": {
                                    "@name": "GLib.Bytes",
                                    "@c:type": "GBytes*"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "session",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../libsoup/soup-session.c",
                                        "@line": "3392",
                                        "#text": "a #SoupSession"
                                    },
                                    "type": {
                                        "@name": "Session",
                                        "@c:type": "SoupSession*"
                                    }
                                },
                                "parameter": [
                                    {
                                        "@name": "msg",
                                        "@transfer-ownership": "none",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "../libsoup/soup-session.c",
                                            "@line": "3393",
                                            "#text": "a #SoupMessage"
                                        },
                                        "type": {
                                            "@name": "Message",
                                            "@c:type": "SoupMessage*"
                                        }
                                    },
                                    {
                                        "@name": "cancellable",
                                        "@transfer-ownership": "none",
                                        "@nullable": "1",
                                        "@allow-none": "1",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "../libsoup/soup-session.c",
                                            "@line": "3394",
                                            "#text": "a #GCancellable"
                                        },
                                        "type": {
                                            "@name": "Gio.Cancellable",
                                            "@c:type": "GCancellable*"
                                        }
                                    }
                                ]
                            }
                        },
                        {
                            "@name": "send_and_read_async",
                            "@c:identifier": "soup_session_send_and_read_async",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../libsoup/soup-session.c",
                                "@line": "3325",
                                "#text": "Asynchronously sends @msg and reads the response body.\n\nWhen @callback is called, then either @msg has been sent, and its response\nbody read, or else an error has occurred. This function should only be used\nwhen the resource to be retrieved is not too long and can be stored in\nmemory. Call [method@Session.send_and_read_finish] to get a\n[struct@GLib.Bytes] with the response body.\n\nSee [method@Session.send] for more details on the general semantics."
                            },
                            "source-position": {
                                "@filename": "../libsoup/soup-session.h",
                                "@line": "151"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "type": {
                                    "@name": "none",
                                    "@c:type": "void"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "session",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../libsoup/soup-session.c",
                                        "@line": "3327",
                                        "#text": "a #SoupSession"
                                    },
                                    "type": {
                                        "@name": "Session",
                                        "@c:type": "SoupSession*"
                                    }
                                },
                                "parameter": [
                                    {
                                        "@name": "msg",
                                        "@transfer-ownership": "none",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "../libsoup/soup-session.c",
                                            "@line": "3328",
                                            "#text": "a #SoupMessage"
                                        },
                                        "type": {
                                            "@name": "Message",
                                            "@c:type": "SoupMessage*"
                                        }
                                    },
                                    {
                                        "@name": "io_priority",
                                        "@transfer-ownership": "none",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "../libsoup/soup-session.c",
                                            "@line": "3329",
                                            "#text": "the I/O priority of the request"
                                        },
                                        "type": {
                                            "@name": "gint",
                                            "@c:type": "int"
                                        }
                                    },
                                    {
                                        "@name": "cancellable",
                                        "@transfer-ownership": "none",
                                        "@nullable": "1",
                                        "@allow-none": "1",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "../libsoup/soup-session.c",
                                            "@line": "3330",
                                            "#text": "a #GCancellable"
                                        },
                                        "type": {
                                            "@name": "Gio.Cancellable",
                                            "@c:type": "GCancellable*"
                                        }
                                    },
                                    {
                                        "@name": "callback",
                                        "@transfer-ownership": "none",
                                        "@nullable": "1",
                                        "@allow-none": "1",
                                        "@scope": "async",
                                        "@closure": "4",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "../libsoup/soup-session.c",
                                            "@line": "3331",
                                            "#text": "the callback to invoke"
                                        },
                                        "type": {
                                            "@name": "Gio.AsyncReadyCallback",
                                            "@c:type": "GAsyncReadyCallback"
                                        }
                                    },
                                    {
                                        "@name": "user_data",
                                        "@transfer-ownership": "none",
                                        "@nullable": "1",
                                        "@allow-none": "1",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "../libsoup/soup-session.c",
                                            "@line": "3332",
                                            "#text": "data for @callback"
                                        },
                                        "type": {
                                            "@name": "gpointer",
                                            "@c:type": "gpointer"
                                        }
                                    }
                                ]
                            }
                        },
                        {
                            "@name": "send_and_read_finish",
                            "@c:identifier": "soup_session_send_and_read_finish",
                            "@throws": "1",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../libsoup/soup-session.c",
                                "@line": "3367",
                                "#text": "Gets the response to a [method@Session.send_and_read_async].\n\nIf successful, returns a [struct@GLib.Bytes] with the response body."
                            },
                            "source-position": {
                                "@filename": "../libsoup/soup-session.h",
                                "@line": "159"
                            },
                            "return-value": {
                                "@transfer-ownership": "full",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "../libsoup/soup-session.c",
                                    "@line": "3377",
                                    "#text": "a #GBytes, or %NULL on error."
                                },
                                "type": {
                                    "@name": "GLib.Bytes",
                                    "@c:type": "GBytes*"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "session",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../libsoup/soup-session.c",
                                        "@line": "3369",
                                        "#text": "a #SoupSession"
                                    },
                                    "type": {
                                        "@name": "Session",
                                        "@c:type": "SoupSession*"
                                    }
                                },
                                "parameter": {
                                    "@name": "result",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../libsoup/soup-session.c",
                                        "@line": "3370",
                                        "#text": "the #GAsyncResult passed to your callback"
                                    },
                                    "type": {
                                        "@name": "Gio.AsyncResult",
                                        "@c:type": "GAsyncResult*"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "send_async",
                            "@c:identifier": "soup_session_send_async",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../libsoup/soup-session.c",
                                "@line": "3047",
                                "#text": "Asynchronously sends @msg and waits for the beginning of a response.\n\nWhen @callback is called, then either @msg has been sent, and its response\nheaders received, or else an error has occurred. Call\n[method@Session.send_finish] to get a [class@Gio.InputStream] for reading the\nresponse body.\n\nSee [method@Session.send] for more details on the general semantics."
                            },
                            "source-position": {
                                "@filename": "../libsoup/soup-session.h",
                                "@line": "135"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "type": {
                                    "@name": "none",
                                    "@c:type": "void"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "session",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../libsoup/soup-session.c",
                                        "@line": "3049",
                                        "#text": "a #SoupSession"
                                    },
                                    "type": {
                                        "@name": "Session",
                                        "@c:type": "SoupSession*"
                                    }
                                },
                                "parameter": [
                                    {
                                        "@name": "msg",
                                        "@transfer-ownership": "none",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "../libsoup/soup-session.c",
                                            "@line": "3050",
                                            "#text": "a #SoupMessage"
                                        },
                                        "type": {
                                            "@name": "Message",
                                            "@c:type": "SoupMessage*"
                                        }
                                    },
                                    {
                                        "@name": "io_priority",
                                        "@transfer-ownership": "none",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "../libsoup/soup-session.c",
                                            "@line": "3051",
                                            "#text": "the I/O priority of the request"
                                        },
                                        "type": {
                                            "@name": "gint",
                                            "@c:type": "int"
                                        }
                                    },
                                    {
                                        "@name": "cancellable",
                                        "@transfer-ownership": "none",
                                        "@nullable": "1",
                                        "@allow-none": "1",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "../libsoup/soup-session.c",
                                            "@line": "3052",
                                            "#text": "a #GCancellable"
                                        },
                                        "type": {
                                            "@name": "Gio.Cancellable",
                                            "@c:type": "GCancellable*"
                                        }
                                    },
                                    {
                                        "@name": "callback",
                                        "@transfer-ownership": "none",
                                        "@nullable": "1",
                                        "@allow-none": "1",
                                        "@scope": "async",
                                        "@closure": "4",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "../libsoup/soup-session.c",
                                            "@line": "3053",
                                            "#text": "the callback to invoke"
                                        },
                                        "type": {
                                            "@name": "Gio.AsyncReadyCallback",
                                            "@c:type": "GAsyncReadyCallback"
                                        }
                                    },
                                    {
                                        "@name": "user_data",
                                        "@transfer-ownership": "none",
                                        "@nullable": "1",
                                        "@allow-none": "1",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "../libsoup/soup-session.c",
                                            "@line": "3054",
                                            "#text": "data for @callback"
                                        },
                                        "type": {
                                            "@name": "gpointer",
                                            "@c:type": "gpointer"
                                        }
                                    }
                                ]
                            }
                        },
                        {
                            "@name": "send_finish",
                            "@c:identifier": "soup_session_send_finish",
                            "@throws": "1",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../libsoup/soup-session.c",
                                "@line": "3096",
                                "#text": "Gets the response to a [method@Session.send_async] call.\n\nIf successful returns a [class@Gio.InputStream] that can be used to read the\nresponse body."
                            },
                            "source-position": {
                                "@filename": "../libsoup/soup-session.h",
                                "@line": "142"
                            },
                            "return-value": {
                                "@transfer-ownership": "full",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "../libsoup/soup-session.c",
                                    "@line": "3107",
                                    "#text": "a #GInputStream for reading the\n  response body, or %NULL on error."
                                },
                                "type": {
                                    "@name": "Gio.InputStream",
                                    "@c:type": "GInputStream*"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "session",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../libsoup/soup-session.c",
                                        "@line": "3098",
                                        "#text": "a #SoupSession"
                                    },
                                    "type": {
                                        "@name": "Session",
                                        "@c:type": "SoupSession*"
                                    }
                                },
                                "parameter": {
                                    "@name": "result",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../libsoup/soup-session.c",
                                        "@line": "3099",
                                        "#text": "the #GAsyncResult passed to your callback"
                                    },
                                    "type": {
                                        "@name": "Gio.AsyncResult",
                                        "@c:type": "GAsyncResult*"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "set_accept_language",
                            "@c:identifier": "soup_session_set_accept_language",
                            "@glib:set-property": "accept-language",
                            "attribute": {
                                "@name": "org.gtk.Method.set_property",
                                "@value": "accept-language"
                            },
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../libsoup/soup-session.c",
                                "@line": "929",
                                "#text": "Set the value to use for the \"Accept-Language\" header on [class@Message]s\nsent from @session.\n\nIf @accept_language is %NULL then no \"Accept-Language\" will be included in\nrequests. See [property@Session:accept-language] for more information."
                            },
                            "source-position": {
                                "@filename": "../libsoup/soup-session.h",
                                "@line": "115"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "type": {
                                    "@name": "none",
                                    "@c:type": "void"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "session",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../libsoup/soup-session.c",
                                        "@line": "931",
                                        "#text": "a #SoupSession"
                                    },
                                    "type": {
                                        "@name": "Session",
                                        "@c:type": "SoupSession*"
                                    }
                                },
                                "parameter": {
                                    "@name": "accept_language",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../libsoup/soup-session.c",
                                        "@line": "932",
                                        "#text": "the languages string"
                                    },
                                    "type": {
                                        "@name": "utf8",
                                        "@c:type": "const char*"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "set_accept_language_auto",
                            "@c:identifier": "soup_session_set_accept_language_auto",
                            "@glib:set-property": "accept-language-auto",
                            "attribute": {
                                "@name": "org.gtk.Method.set_property",
                                "@value": "accept-language-auto"
                            },
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../libsoup/soup-session.c",
                                "@line": "982",
                                "#text": "Set whether @session will automatically set the \"Accept-Language\" header on\nrequests using a value generated from system languages based on\n[func@GLib.get_language_names].\n\nSee [property@Session:accept-language-auto] for more information."
                            },
                            "source-position": {
                                "@filename": "../libsoup/soup-session.h",
                                "@line": "122"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "type": {
                                    "@name": "none",
                                    "@c:type": "void"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "session",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../libsoup/soup-session.c",
                                        "@line": "984",
                                        "#text": "a #SoupSession"
                                    },
                                    "type": {
                                        "@name": "Session",
                                        "@c:type": "SoupSession*"
                                    }
                                },
                                "parameter": {
                                    "@name": "accept_language_auto",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../libsoup/soup-session.c",
                                        "@line": "985",
                                        "#text": "the value to set"
                                    },
                                    "type": {
                                        "@name": "gboolean",
                                        "@c:type": "gboolean"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "set_idle_timeout",
                            "@c:identifier": "soup_session_set_idle_timeout",
                            "@glib:set-property": "idle-timeout",
                            "attribute": {
                                "@name": "org.gtk.Method.set_property",
                                "@value": "idle-timeout"
                            },
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../libsoup/soup-session.c",
                                "@line": "811",
                                "#text": "Set a timeout in seconds for idle connection lifetime to be used by @session\non new connections.\n\nSee [property@Session:idle-timeout] for more information."
                            },
                            "source-position": {
                                "@filename": "../libsoup/soup-session.h",
                                "@line": "101"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "type": {
                                    "@name": "none",
                                    "@c:type": "void"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "session",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../libsoup/soup-session.c",
                                        "@line": "813",
                                        "#text": "a #SoupSession"
                                    },
                                    "type": {
                                        "@name": "Session",
                                        "@c:type": "SoupSession*"
                                    }
                                },
                                "parameter": {
                                    "@name": "timeout",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../libsoup/soup-session.c",
                                        "@line": "814",
                                        "#text": "a timeout in seconds"
                                    },
                                    "type": {
                                        "@name": "guint",
                                        "@c:type": "guint"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "set_proxy_resolver",
                            "@c:identifier": "soup_session_set_proxy_resolver",
                            "@glib:set-property": "proxy-resolver",
                            "attribute": {
                                "@name": "org.gtk.Method.set_property",
                                "@value": "proxy-resolver"
                            },
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../libsoup/soup-session.c",
                                "@line": "612",
                                "#text": "Set a [iface@Gio.ProxyResolver] to be used by @session on new connections.\n\nIf @proxy_resolver is %NULL then no proxies will be used. See\n[property@Session:proxy-resolver] for more information."
                            },
                            "source-position": {
                                "@filename": "../libsoup/soup-session.h",
                                "@line": "73"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "type": {
                                    "@name": "none",
                                    "@c:type": "void"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "session",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../libsoup/soup-session.c",
                                        "@line": "614",
                                        "#text": "a #SoupSession"
                                    },
                                    "type": {
                                        "@name": "Session",
                                        "@c:type": "SoupSession*"
                                    }
                                },
                                "parameter": {
                                    "@name": "proxy_resolver",
                                    "@transfer-ownership": "none",
                                    "@nullable": "1",
                                    "@allow-none": "1",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../libsoup/soup-session.c",
                                        "@line": "615",
                                        "#text": "a #GProxyResolver or %NULL"
                                    },
                                    "type": {
                                        "@name": "Gio.ProxyResolver",
                                        "@c:type": "GProxyResolver*"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "set_timeout",
                            "@c:identifier": "soup_session_set_timeout",
                            "@glib:set-property": "timeout",
                            "attribute": {
                                "@name": "org.gtk.Method.set_property",
                                "@value": "timeout"
                            },
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../libsoup/soup-session.c",
                                "@line": "764",
                                "#text": "Set a timeout in seconds for socket I/O operations to be used by @session\non new connections.\n\nSee [property@Session:timeout] for more information."
                            },
                            "source-position": {
                                "@filename": "../libsoup/soup-session.h",
                                "@line": "94"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "type": {
                                    "@name": "none",
                                    "@c:type": "void"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "session",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../libsoup/soup-session.c",
                                        "@line": "766",
                                        "#text": "a #SoupSession"
                                    },
                                    "type": {
                                        "@name": "Session",
                                        "@c:type": "SoupSession*"
                                    }
                                },
                                "parameter": {
                                    "@name": "timeout",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../libsoup/soup-session.c",
                                        "@line": "767",
                                        "#text": "a timeout in seconds"
                                    },
                                    "type": {
                                        "@name": "guint",
                                        "@c:type": "guint"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "set_tls_database",
                            "@c:identifier": "soup_session_set_tls_database",
                            "@glib:set-property": "tls-database",
                            "attribute": {
                                "@name": "org.gtk.Method.set_property",
                                "@value": "tls-database"
                            },
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../libsoup/soup-session.c",
                                "@line": "662",
                                "#text": "Set a [class@GIo.TlsDatabase] to be used by @session on new connections.\n\nIf @tls_database is %NULL then certificate validation will always fail. See\n[property@Session:tls-database] for more information."
                            },
                            "source-position": {
                                "@filename": "../libsoup/soup-session.h",
                                "@line": "80"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "type": {
                                    "@name": "none",
                                    "@c:type": "void"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "session",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../libsoup/soup-session.c",
                                        "@line": "664",
                                        "#text": "a #SoupSession"
                                    },
                                    "type": {
                                        "@name": "Session",
                                        "@c:type": "SoupSession*"
                                    }
                                },
                                "parameter": {
                                    "@name": "tls_database",
                                    "@transfer-ownership": "none",
                                    "@nullable": "1",
                                    "@allow-none": "1",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../libsoup/soup-session.c",
                                        "@line": "665",
                                        "#text": "a #GTlsDatabase"
                                    },
                                    "type": {
                                        "@name": "Gio.TlsDatabase",
                                        "@c:type": "GTlsDatabase*"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "set_tls_interaction",
                            "@c:identifier": "soup_session_set_tls_interaction",
                            "@glib:set-property": "tls-interaction",
                            "attribute": {
                                "@name": "org.gtk.Method.set_property",
                                "@value": "tls-interaction"
                            },
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../libsoup/soup-session.c",
                                "@line": "714",
                                "#text": "Set a [class@Gio.TlsInteraction] to be used by @session on new connections.\n\nIf @tls_interaction is %NULL then client certificate validation will always\nfail.\n\nSee [property@Session:tls-interaction] for more information."
                            },
                            "source-position": {
                                "@filename": "../libsoup/soup-session.h",
                                "@line": "87"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "type": {
                                    "@name": "none",
                                    "@c:type": "void"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "session",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../libsoup/soup-session.c",
                                        "@line": "716",
                                        "#text": "a #SoupSession"
                                    },
                                    "type": {
                                        "@name": "Session",
                                        "@c:type": "SoupSession*"
                                    }
                                },
                                "parameter": {
                                    "@name": "tls_interaction",
                                    "@transfer-ownership": "none",
                                    "@nullable": "1",
                                    "@allow-none": "1",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../libsoup/soup-session.c",
                                        "@line": "717",
                                        "#text": "a #GTlsInteraction"
                                    },
                                    "type": {
                                        "@name": "Gio.TlsInteraction",
                                        "@c:type": "GTlsInteraction*"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "set_user_agent",
                            "@c:identifier": "soup_session_set_user_agent",
                            "@glib:set-property": "user-agent",
                            "attribute": {
                                "@name": "org.gtk.Method.set_property",
                                "@value": "user-agent"
                            },
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../libsoup/soup-session.c",
                                "@line": "858",
                                "#text": "Set the value to use for the \"User-Agent\" header on [class@Message]s sent\nfrom @session.\n\nIf @user_agent has trailing whitespace, @session will append its own product\ntoken (eg, `libsoup/3.0.0`) to the end of the header for you. If @user_agent\nis %NULL then no \"User-Agent\" will be included in requests. See\n[property@Session:user-agent] for more information."
                            },
                            "source-position": {
                                "@filename": "../libsoup/soup-session.h",
                                "@line": "108"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "type": {
                                    "@name": "none",
                                    "@c:type": "void"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "session",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../libsoup/soup-session.c",
                                        "@line": "860",
                                        "#text": "a #SoupSession"
                                    },
                                    "type": {
                                        "@name": "Session",
                                        "@c:type": "SoupSession*"
                                    }
                                },
                                "parameter": {
                                    "@name": "user_agent",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../libsoup/soup-session.c",
                                        "@line": "861",
                                        "#text": "the user agent string"
                                    },
                                    "type": {
                                        "@name": "utf8",
                                        "@c:type": "const char*"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "websocket_connect_async",
                            "@c:identifier": "soup_session_websocket_connect_async",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../libsoup/soup-session.c",
                                "@line": "3560",
                                "#text": "Asynchronously creates a [class@WebsocketConnection] to communicate with a\nremote server.\n\nAll necessary WebSocket-related headers will be added to @msg, and\nit will then be sent and asynchronously processed normally\n(including handling of redirection and HTTP authentication).\n\nIf the server returns \"101 Switching Protocols\", then @msg's status\ncode and response headers will be updated, and then the WebSocket\nhandshake will be completed. On success,\n[method@Session.websocket_connect_finish] will return a new\n[class@WebsocketConnection]. On failure it will return a #GError.\n\nIf the server returns a status other than \"101 Switching Protocols\", then\n@msg will contain the complete response headers and body from the server's\nresponse, and [method@Session.websocket_connect_finish] will return\n%SOUP_WEBSOCKET_ERROR_NOT_WEBSOCKET."
                            },
                            "source-position": {
                                "@filename": "../libsoup/soup-session.h",
                                "@line": "197"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "type": {
                                    "@name": "none",
                                    "@c:type": "void"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "session",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../libsoup/soup-session.c",
                                        "@line": "3562",
                                        "#text": "a #SoupSession"
                                    },
                                    "type": {
                                        "@name": "Session",
                                        "@c:type": "SoupSession*"
                                    }
                                },
                                "parameter": [
                                    {
                                        "@name": "msg",
                                        "@transfer-ownership": "none",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "../libsoup/soup-session.c",
                                            "@line": "3563",
                                            "#text": "#SoupMessage indicating the WebSocket server to connect to"
                                        },
                                        "type": {
                                            "@name": "Message",
                                            "@c:type": "SoupMessage*"
                                        }
                                    },
                                    {
                                        "@name": "origin",
                                        "@transfer-ownership": "none",
                                        "@nullable": "1",
                                        "@allow-none": "1",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "../libsoup/soup-session.c",
                                            "@line": "3564",
                                            "#text": "origin of the connection"
                                        },
                                        "type": {
                                            "@name": "utf8",
                                            "@c:type": "const char*"
                                        }
                                    },
                                    {
                                        "@name": "protocols",
                                        "@transfer-ownership": "none",
                                        "@nullable": "1",
                                        "@allow-none": "1",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "../libsoup/soup-session.c",
                                            "@line": "3565",
                                            "#text": "a\n  %NULL-terminated array of protocols supported"
                                        },
                                        "array": {
                                            "@c:type": "char**",
                                            "type": {
                                                "@name": "utf8",
                                                "@c:type": "char*"
                                            }
                                        }
                                    },
                                    {
                                        "@name": "io_priority",
                                        "@transfer-ownership": "none",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "../libsoup/soup-session.c",
                                            "@line": "3567",
                                            "#text": "the I/O priority of the request"
                                        },
                                        "type": {
                                            "@name": "gint",
                                            "@c:type": "int"
                                        }
                                    },
                                    {
                                        "@name": "cancellable",
                                        "@transfer-ownership": "none",
                                        "@nullable": "1",
                                        "@allow-none": "1",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "../libsoup/soup-session.c",
                                            "@line": "3568",
                                            "#text": "a #GCancellable"
                                        },
                                        "type": {
                                            "@name": "Gio.Cancellable",
                                            "@c:type": "GCancellable*"
                                        }
                                    },
                                    {
                                        "@name": "callback",
                                        "@transfer-ownership": "none",
                                        "@nullable": "1",
                                        "@allow-none": "1",
                                        "@scope": "async",
                                        "@closure": "6",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "../libsoup/soup-session.c",
                                            "@line": "3569",
                                            "#text": "the callback to invoke"
                                        },
                                        "type": {
                                            "@name": "Gio.AsyncReadyCallback",
                                            "@c:type": "GAsyncReadyCallback"
                                        }
                                    },
                                    {
                                        "@name": "user_data",
                                        "@transfer-ownership": "none",
                                        "@nullable": "1",
                                        "@allow-none": "1",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "../libsoup/soup-session.c",
                                            "@line": "3570",
                                            "#text": "data for @callback"
                                        },
                                        "type": {
                                            "@name": "gpointer",
                                            "@c:type": "gpointer"
                                        }
                                    }
                                ]
                            }
                        },
                        {
                            "@name": "websocket_connect_finish",
                            "@c:identifier": "soup_session_websocket_connect_finish",
                            "@throws": "1",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../libsoup/soup-session.c",
                                "@line": "3641",
                                "#text": "Gets the [class@WebsocketConnection] response to a\n[method@Session.websocket_connect_async] call.\n\nIf successful, returns a [class@WebsocketConnection] that can be used to\ncommunicate with the server."
                            },
                            "source-position": {
                                "@filename": "../libsoup/soup-session.h",
                                "@line": "207"
                            },
                            "return-value": {
                                "@transfer-ownership": "full",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "../libsoup/soup-session.c",
                                    "@line": "3653",
                                    "#text": "a new #SoupWebsocketConnection, or\n  %NULL on error."
                                },
                                "type": {
                                    "@name": "WebsocketConnection",
                                    "@c:type": "SoupWebsocketConnection*"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "session",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../libsoup/soup-session.c",
                                        "@line": "3643",
                                        "#text": "a #SoupSession"
                                    },
                                    "type": {
                                        "@name": "Session",
                                        "@c:type": "SoupSession*"
                                    }
                                },
                                "parameter": {
                                    "@name": "result",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../libsoup/soup-session.c",
                                        "@line": "3644",
                                        "#text": "the #GAsyncResult passed to your callback"
                                    },
                                    "type": {
                                        "@name": "Gio.AsyncResult",
                                        "@c:type": "GAsyncResult*"
                                    }
                                }
                            }
                        }
                    ],
                    "property": [
                        {
                            "@name": "accept-language",
                            "@writable": "1",
                            "@transfer-ownership": "none",
                            "@setter": "set_accept_language",
                            "@getter": "get_accept_language",
                            "attribute": [
                                {
                                    "@name": "org.gtk.Property.get",
                                    "@value": "soup_session_get_accept_language"
                                },
                                {
                                    "@name": "org.gtk.Property.set",
                                    "@value": "soup_session_set_accept_language"
                                }
                            ],
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../libsoup/soup-session.c",
                                "@line": "2539",
                                "#text": "If non-%NULL, the value to use for the \"Accept-Language\" header\non [class@Message]s sent from this session.\n\nSetting this will disable [property@Session:accept-language-auto]."
                            },
                            "type": {
                                "@name": "utf8",
                                "@c:type": "gchar*"
                            }
                        },
                        {
                            "@name": "accept-language-auto",
                            "@writable": "1",
                            "@transfer-ownership": "none",
                            "@setter": "set_accept_language_auto",
                            "@getter": "get_accept_language_auto",
                            "attribute": [
                                {
                                    "@name": "org.gtk.Property.get",
                                    "@value": "soup_session_get_accept_language_auto"
                                },
                                {
                                    "@name": "org.gtk.Property.set",
                                    "@value": "soup_session_set_accept_language_auto"
                                }
                            ],
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../libsoup/soup-session.c",
                                "@line": "2555",
                                "#text": "If %TRUE, #SoupSession will automatically set the string\nfor the \"Accept-Language\" header on every [class@Message]\nsent, based on the return value of [func@GLib.get_language_names].\n\nSetting this will override any previous value of\n[property@Session:accept-language]."
                            },
                            "type": {
                                "@name": "gboolean",
                                "@c:type": "gboolean"
                            }
                        },
                        {
                            "@name": "idle-timeout",
                            "@writable": "1",
                            "@transfer-ownership": "none",
                            "@setter": "set_idle_timeout",
                            "@getter": "get_idle_timeout",
                            "attribute": [
                                {
                                    "@name": "org.gtk.Property.get",
                                    "@value": "soup_session_get_idle_timeout"
                                },
                                {
                                    "@name": "org.gtk.Property.set",
                                    "@value": "soup_session_set_idle_timeout"
                                }
                            ],
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../libsoup/soup-session.c",
                                "@line": "2440",
                                "#text": "Connection lifetime (in seconds) when idle. Any connection\nleft idle longer than this will be closed.\n\nAlthough you can change this property at any time, it will\nonly affect newly-created connections, not currently-open\nones. You can call [method@Session.abort] after setting this\nif you want to ensure that all future connections will have\nthis timeout value."
                            },
                            "type": {
                                "@name": "guint",
                                "@c:type": "guint"
                            }
                        },
                        {
                            "@name": "local-address",
                            "@writable": "1",
                            "@construct-only": "1",
                            "@transfer-ownership": "none",
                            "@getter": "get_local_address",
                            "attribute": {
                                "@name": "org.gtk.Property.get",
                                "@value": "soup_session_get_local_address"
                            },
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../libsoup/soup-session.c",
                                "@line": "2592",
                                "#text": "Sets the [class@Gio.InetSocketAddress] to use for the client side of\nthe connection.\n\nUse this property if you want for instance to bind the\nlocal socket to a specific IP address."
                            },
                            "type": {
                                "@name": "Gio.InetSocketAddress"
                            }
                        },
                        {
                            "@name": "max-conns",
                            "@writable": "1",
                            "@construct-only": "1",
                            "@transfer-ownership": "none",
                            "@getter": "get_max_conns",
                            "attribute": {
                                "@name": "org.gtk.Property.get",
                                "@value": "soup_session_get_max_conns"
                            },
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../libsoup/soup-session.c",
                                "@line": "2408",
                                "#text": "The maximum number of connections that the session can open at once."
                            },
                            "type": {
                                "@name": "gint",
                                "@c:type": "gint"
                            }
                        },
                        {
                            "@name": "max-conns-per-host",
                            "@writable": "1",
                            "@construct-only": "1",
                            "@transfer-ownership": "none",
                            "@getter": "get_max_conns_per_host",
                            "attribute": {
                                "@name": "org.gtk.Property.get",
                                "@value": "soup_session_get_max_conns_per_host"
                            },
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../libsoup/soup-session.c",
                                "@line": "2424",
                                "#text": "The maximum number of connections that the session can open at once\nto a given host."
                            },
                            "type": {
                                "@name": "gint",
                                "@c:type": "gint"
                            }
                        },
                        {
                            "@name": "proxy-resolver",
                            "@writable": "1",
                            "@transfer-ownership": "none",
                            "@setter": "set_proxy_resolver",
                            "@getter": "get_proxy_resolver",
                            "attribute": [
                                {
                                    "@name": "org.gtk.Property.get",
                                    "@value": "soup_session_get_proxy_resolver"
                                },
                                {
                                    "@name": "org.gtk.Property.set",
                                    "@value": "soup_session_set_proxy_resolver"
                                }
                            ],
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../libsoup/soup-session.c",
                                "@line": "2390",
                                "#text": "A [iface@Gio.ProxyResolver] to use with this session.\n\nIf no proxy resolver is set, then the default proxy resolver\nwill be used. See [func@Gio.ProxyResolver.get_default].\nYou can set it to %NULL if you don't want to use proxies, or\nset it to your own [iface@Gio.ProxyResolver] if you want to control\nwhat proxies get used."
                            },
                            "type": {
                                "@name": "Gio.ProxyResolver"
                            }
                        },
                        {
                            "@name": "remote-connectable",
                            "@writable": "1",
                            "@construct-only": "1",
                            "@transfer-ownership": "none",
                            "@getter": "get_remote_connectable",
                            "attribute": {
                                "@name": "org.gtk.Property.get",
                                "@value": "soup_session_get_remote_connectable"
                            },
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../libsoup/soup-session.c",
                                "@line": "2573",
                                "#text": "Sets a socket to make outgoing connections on. This will override the default\nbehaviour of opening TCP/IP sockets to the hosts specified in the URIs.\n\nThis function is not required for common HTTP usage, but only when connecting\nto a HTTP service that is not using standard TCP/IP sockets. An example of\nthis is a local service that uses HTTP over UNIX-domain sockets, in that case\na [class@Gio.UnixSocketAddress] can be passed to this function."
                            },
                            "type": {
                                "@name": "Gio.SocketConnectable"
                            }
                        },
                        {
                            "@name": "timeout",
                            "@writable": "1",
                            "@transfer-ownership": "none",
                            "@setter": "set_timeout",
                            "@getter": "get_timeout",
                            "attribute": [
                                {
                                    "@name": "org.gtk.Property.get",
                                    "@value": "soup_session_get_timeout"
                                },
                                {
                                    "@name": "org.gtk.Property.set",
                                    "@value": "soup_session_set_timeout"
                                }
                            ],
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../libsoup/soup-session.c",
                                "@line": "2477",
                                "#text": "The timeout (in seconds) for socket I/O operations\n(including connecting to a server, and waiting for a reply\nto an HTTP request).\n\nAlthough you can change this property at any time, it will\nonly affect newly-created connections, not currently-open\nones. You can call [method@Session.abort] after setting this\nif you want to ensure that all future connections will have\nthis timeout value.\n\nNot to be confused with [property@Session:idle-timeout] (which is\nthe length of time that idle persistent connections will be\nkept open)."
                            },
                            "type": {
                                "@name": "guint",
                                "@c:type": "guint"
                            }
                        },
                        {
                            "@name": "tls-database",
                            "@writable": "1",
                            "@transfer-ownership": "none",
                            "@setter": "set_tls_database",
                            "@getter": "get_tls_database",
                            "attribute": [
                                {
                                    "@name": "org.gtk.Property.get",
                                    "@value": "soup_session_get_tls_database"
                                },
                                {
                                    "@name": "org.gtk.Property.set",
                                    "@value": "soup_session_set_tls_database"
                                }
                            ],
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../libsoup/soup-session.c",
                                "@line": "2460",
                                "#text": "Sets the [class@Gio.TlsDatabase] to use for validating SSL/TLS\ncertificates.\n\nIf no certificate database is set, then the default database will be\nused. See [method@Gio.TlsBackend.get_default_database]."
                            },
                            "type": {
                                "@name": "Gio.TlsDatabase"
                            }
                        },
                        {
                            "@name": "tls-interaction",
                            "@writable": "1",
                            "@transfer-ownership": "none",
                            "@setter": "set_tls_interaction",
                            "@getter": "get_tls_interaction",
                            "attribute": [
                                {
                                    "@name": "org.gtk.Property.get",
                                    "@value": "soup_session_get_tls_interaction"
                                },
                                {
                                    "@name": "org.gtk.Property.set",
                                    "@value": "soup_session_set_tls_interaction"
                                }
                            ],
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../libsoup/soup-session.c",
                                "@line": "2609",
                                "#text": "A [class@Gio.TlsInteraction] object that will be passed on to any\n[class@Gio.TlsConnection]s created by the session.\n\nThis can be used to provide client-side certificates, for example."
                            },
                            "type": {
                                "@name": "Gio.TlsInteraction"
                            }
                        },
                        {
                            "@name": "user-agent",
                            "@writable": "1",
                            "@transfer-ownership": "none",
                            "@setter": "set_user_agent",
                            "@getter": "get_user_agent",
                            "attribute": [
                                {
                                    "@name": "org.gtk.Property.get",
                                    "@value": "soup_session_get_user_agent"
                                },
                                {
                                    "@name": "org.gtk.Property.set",
                                    "@value": "soup_session_set_user_agent"
                                }
                            ],
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../libsoup/soup-session.c",
                                "@line": "2502",
                                "#text": "User-Agent string.\n\nIf non-%NULL, the value to use for the \"User-Agent\" header\non [class@Message]s sent from this session.\n\nRFC 2616 says: \"The User-Agent request-header field\ncontains information about the user agent originating the\nrequest. This is for statistical purposes, the tracing of\nprotocol violations, and automated recognition of user\nagents for the sake of tailoring responses to avoid\nparticular user agent limitations. User agents SHOULD\ninclude this field with requests.\"\n\nThe User-Agent header contains a list of one or more\nproduct tokens, separated by whitespace, with the most\nsignificant product token coming first. The tokens must be\nbrief, ASCII, and mostly alphanumeric (although \"-\", \"_\",\nand \".\" are also allowed), and may optionally include a \"/\"\nfollowed by a version string. You may also put comments,\nenclosed in parentheses, between or after the tokens.\n\nIf you set a [property@Session:user-agent] property that has trailing\nwhitespace, #SoupSession will append its own product token\n(eg, `libsoup/2.3.2`) to the end of the\nheader for you."
                            },
                            "type": {
                                "@name": "utf8",
                                "@c:type": "gchar*"
                            }
                        }
                    ],
                    "field": {
                        "@name": "parent_instance",
                        "type": {
                            "@name": "GObject.Object",
                            "@c:type": "GObject"
                        }
                    },
                    "glib:signal": [
                        {
                            "@name": "request-queued",
                            "@when": "last",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../libsoup/soup-session.c",
                                "@line": "2324",
                                "#text": "Emitted when a request is queued on @session.\n\nWhen sending a request, first [signal@Session::request-queued]\nis emitted, indicating that the session has become aware of\nthe request.\n\nAfter a connection is available to send the request various\n[class@Message] signals are emitted as the message is\nprocessed. If the message is requeued, it will emit\n[signal@Message::restarted], which will then be followed by other\n[class@Message] signals when the message is re-sent.\n\nEventually, the message will emit [signal@Message::finished].\nNormally, this signals the completion of message\nprocessing. However, it is possible that the application\nwill requeue the message from the \"finished\" handler.\nIn that case the process will loop back.\n\nEventually, a message will reach \"finished\" and not be\nrequeued. At that point, the session will emit\n[signal@Session::request-unqueued] to indicate that it is done\nwith the message.\n\nTo sum up: [signal@Session::request-queued] and\n[signal@Session::request-unqueued] are guaranteed to be emitted\nexactly once, but [signal@Message::finished] (and all of the other\n[class@Message] signals) may be invoked multiple times for a given\nmessage."
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "type": {
                                    "@name": "none",
                                    "@c:type": "void"
                                }
                            },
                            "parameters": {
                                "parameter": {
                                    "@name": "msg",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../libsoup/soup-session.c",
                                        "@line": "2327",
                                        "#text": "the request that was queued"
                                    },
                                    "type": {
                                        "@name": "Message"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "request-unqueued",
                            "@when": "last",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../libsoup/soup-session.c",
                                "@line": "2368",
                                "#text": "Emitted when a request is removed from @session's queue,\nindicating that @session is done with it.\n\nSee [signal@Session::request-queued] for a detailed description of\nthe message lifecycle within a session."
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "type": {
                                    "@name": "none",
                                    "@c:type": "void"
                                }
                            },
                            "parameters": {
                                "parameter": {
                                    "@name": "msg",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../libsoup/soup-session.c",
                                        "@line": "2371",
                                        "#text": "the request that was unqueued"
                                    },
                                    "type": {
                                        "@name": "Message"
                                    }
                                }
                            }
                        }
                    ]
                },
                {
                    "@name": "WebsocketConnection",
                    "@c:symbol-prefix": "websocket_connection",
                    "@c:type": "SoupWebsocketConnection",
                    "@parent": "GObject.Object",
                    "@final": "1",
                    "@glib:type-name": "SoupWebsocketConnection",
                    "@glib:get-type": "soup_websocket_connection_get_type",
                    "@glib:type-struct": "WebsocketConnectionClass",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "../libsoup/websocket/soup-websocket.c",
                        "@line": "36",
                        "#text": "The WebSocket Protocol\n\nProvides support for the [WebSocket](http://tools.ietf.org/html/rfc6455)\nprotocol.\n\nTo connect to a WebSocket server, create a [class@Session] and call\n[method@Session.websocket_connect_async]. To accept WebSocket\nconnections, create a [class@Server] and add a handler to it with\n[method@Server.add_websocket_handler].\n\n(Lower-level support is available via\n[func@websocket_client_prepare_handshake] and\n[func@websocket_client_verify_handshake], for handling the client side of the\nWebSocket handshake, and [func@websocket_server_process_handshake] for\nhandling the server side.)\n\n#SoupWebsocketConnection handles the details of WebSocket communication. You\ncan use [method@WebsocketConnection.send_text] and\n[method@WebsocketConnection.send_binary] to send data, and the\n[signal@WebsocketConnection::message] signal to receive data.\n(#SoupWebsocketConnection currently only supports asynchronous I/O.)"
                    },
                    "source-position": {
                        "@filename": "../libsoup/websocket/soup-websocket-connection.h",
                        "@line": "30"
                    },
                    "constructor": {
                        "@name": "new",
                        "@c:identifier": "soup_websocket_connection_new",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "../libsoup/websocket/soup-websocket-connection.c",
                            "@line": "1718",
                            "#text": "Creates a #SoupWebsocketConnection on @stream with the given active @extensions.\n\nThis should be called after completing the handshake to begin using the WebSocket\nprotocol."
                        },
                        "source-position": {
                            "@filename": "../libsoup/websocket/soup-websocket-connection.h",
                            "@line": "33"
                        },
                        "return-value": {
                            "@transfer-ownership": "full",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../libsoup/websocket/soup-websocket-connection.c",
                                "@line": "1732",
                                "#text": "a new #SoupWebsocketConnection"
                            },
                            "type": {
                                "@name": "WebsocketConnection",
                                "@c:type": "SoupWebsocketConnection*"
                            }
                        },
                        "parameters": {
                            "parameter": [
                                {
                                    "@name": "stream",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../libsoup/websocket/soup-websocket-connection.c",
                                        "@line": "1720",
                                        "#text": "a #GIOStream connected to the WebSocket server"
                                    },
                                    "type": {
                                        "@name": "Gio.IOStream",
                                        "@c:type": "GIOStream*"
                                    }
                                },
                                {
                                    "@name": "uri",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../libsoup/websocket/soup-websocket-connection.c",
                                        "@line": "1721",
                                        "#text": "the URI of the connection"
                                    },
                                    "type": {
                                        "@name": "GLib.Uri",
                                        "@c:type": "GUri*"
                                    }
                                },
                                {
                                    "@name": "type",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../libsoup/websocket/soup-websocket-connection.c",
                                        "@line": "1722",
                                        "#text": "the type of connection (client/side)"
                                    },
                                    "type": {
                                        "@name": "WebsocketConnectionType",
                                        "@c:type": "SoupWebsocketConnectionType"
                                    }
                                },
                                {
                                    "@name": "origin",
                                    "@transfer-ownership": "none",
                                    "@nullable": "1",
                                    "@allow-none": "1",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../libsoup/websocket/soup-websocket-connection.c",
                                        "@line": "1723",
                                        "#text": "the Origin of the client"
                                    },
                                    "type": {
                                        "@name": "utf8",
                                        "@c:type": "const char*"
                                    }
                                },
                                {
                                    "@name": "protocol",
                                    "@transfer-ownership": "none",
                                    "@nullable": "1",
                                    "@allow-none": "1",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../libsoup/websocket/soup-websocket-connection.c",
                                        "@line": "1724",
                                        "#text": "the subprotocol in use"
                                    },
                                    "type": {
                                        "@name": "utf8",
                                        "@c:type": "const char*"
                                    }
                                },
                                {
                                    "@name": "extensions",
                                    "@transfer-ownership": "full",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../libsoup/websocket/soup-websocket-connection.c",
                                        "@line": "1725",
                                        "#text": "a #GList of #SoupWebsocketExtension objects"
                                    },
                                    "type": {
                                        "@name": "GLib.List",
                                        "@c:type": "GList*",
                                        "type": {
                                            "@name": "WebsocketExtension"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "method": [
                        {
                            "@name": "close",
                            "@c:identifier": "soup_websocket_connection_close",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../libsoup/websocket/soup-websocket-connection.c",
                                "@line": "2019",
                                "#text": "Close the connection in an orderly fashion.\n\nNote that until the [signal@WebsocketConnection::closed] signal fires, the connection\nis not yet completely closed. The close message is not even sent until the\nmain loop runs.\n\nThe @code and @data are sent to the peer along with the close request.\nIf @code is %SOUP_WEBSOCKET_CLOSE_NO_STATUS a close message with no body\n(without code and data) is sent.\nNote that the @data must be UTF-8 valid."
                            },
                            "source-position": {
                                "@filename": "../libsoup/websocket/soup-websocket-connection.h",
                                "@line": "80"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "type": {
                                    "@name": "none",
                                    "@c:type": "void"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "self",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../libsoup/websocket/soup-websocket-connection.c",
                                        "@line": "2021",
                                        "#text": "the WebSocket"
                                    },
                                    "type": {
                                        "@name": "WebsocketConnection",
                                        "@c:type": "SoupWebsocketConnection*"
                                    }
                                },
                                "parameter": [
                                    {
                                        "@name": "code",
                                        "@transfer-ownership": "none",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "../libsoup/websocket/soup-websocket-connection.c",
                                            "@line": "2022",
                                            "#text": "close code"
                                        },
                                        "type": {
                                            "@name": "gushort",
                                            "@c:type": "gushort"
                                        }
                                    },
                                    {
                                        "@name": "data",
                                        "@transfer-ownership": "none",
                                        "@nullable": "1",
                                        "@allow-none": "1",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "../libsoup/websocket/soup-websocket-connection.c",
                                            "@line": "2023",
                                            "#text": "close data"
                                        },
                                        "type": {
                                            "@name": "utf8",
                                            "@c:type": "const char*"
                                        }
                                    }
                                ]
                            }
                        },
                        {
                            "@name": "get_close_code",
                            "@c:identifier": "soup_websocket_connection_get_close_code",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../libsoup/websocket/soup-websocket-connection.c",
                                "@line": "1890",
                                "#text": "Get the close code received from the WebSocket peer.\n\nThis only becomes valid once the WebSocket is in the\n%SOUP_WEBSOCKET_STATE_CLOSED state. The value will often be in the\n[enum@WebsocketCloseCode] enumeration, but may also be an application\ndefined close code."
                            },
                            "source-position": {
                                "@filename": "../libsoup/websocket/soup-websocket-connection.h",
                                "@line": "62"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "../libsoup/websocket/soup-websocket-connection.c",
                                    "@line": "1901",
                                    "#text": "the close code or zero."
                                },
                                "type": {
                                    "@name": "gushort",
                                    "@c:type": "gushort"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "self",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../libsoup/websocket/soup-websocket-connection.c",
                                        "@line": "1892",
                                        "#text": "the WebSocket"
                                    },
                                    "type": {
                                        "@name": "WebsocketConnection",
                                        "@c:type": "SoupWebsocketConnection*"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "get_close_data",
                            "@c:identifier": "soup_websocket_connection_get_close_data",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../libsoup/websocket/soup-websocket-connection.c",
                                "@line": "1913",
                                "#text": "Get the close data received from the WebSocket peer.\n\nThis only becomes valid once the WebSocket is in the\n%SOUP_WEBSOCKET_STATE_CLOSED state. The data may be freed once\nthe main loop is run, so copy it if you need to keep it around."
                            },
                            "source-position": {
                                "@filename": "../libsoup/websocket/soup-websocket-connection.h",
                                "@line": "65"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "../libsoup/websocket/soup-websocket-connection.c",
                                    "@line": "1923",
                                    "#text": "the close data or %NULL"
                                },
                                "type": {
                                    "@name": "utf8",
                                    "@c:type": "const char*"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "self",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../libsoup/websocket/soup-websocket-connection.c",
                                        "@line": "1915",
                                        "#text": "the WebSocket"
                                    },
                                    "type": {
                                        "@name": "WebsocketConnection",
                                        "@c:type": "SoupWebsocketConnection*"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "get_connection_type",
                            "@c:identifier": "soup_websocket_connection_get_connection_type",
                            "@glib:get-property": "connection-type",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../libsoup/websocket/soup-websocket-connection.c",
                                "@line": "1774",
                                "#text": "Get the connection type (client/server) of the connection."
                            },
                            "source-position": {
                                "@filename": "../libsoup/websocket/soup-websocket-connection.h",
                                "@line": "44"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "../libsoup/websocket/soup-websocket-connection.c",
                                    "@line": "1780",
                                    "#text": "the connection type"
                                },
                                "type": {
                                    "@name": "WebsocketConnectionType",
                                    "@c:type": "SoupWebsocketConnectionType"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "self",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../libsoup/websocket/soup-websocket-connection.c",
                                        "@line": "1776",
                                        "#text": "the WebSocket"
                                    },
                                    "type": {
                                        "@name": "WebsocketConnection",
                                        "@c:type": "SoupWebsocketConnection*"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "get_extensions",
                            "@c:identifier": "soup_websocket_connection_get_extensions",
                            "@glib:get-property": "extensions",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../libsoup/websocket/soup-websocket-connection.c",
                                "@line": "1849",
                                "#text": "Get the extensions chosen via negotiation with the peer."
                            },
                            "source-position": {
                                "@filename": "../libsoup/websocket/soup-websocket-connection.h",
                                "@line": "56"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "../libsoup/websocket/soup-websocket-connection.c",
                                    "@line": "1855",
                                    "#text": "a #GList of #SoupWebsocketExtension objects"
                                },
                                "type": {
                                    "@name": "GLib.List",
                                    "@c:type": "GList*",
                                    "type": {
                                        "@name": "WebsocketExtension"
                                    }
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "self",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../libsoup/websocket/soup-websocket-connection.c",
                                        "@line": "1851",
                                        "#text": "the WebSocket"
                                    },
                                    "type": {
                                        "@name": "WebsocketConnection",
                                        "@c:type": "SoupWebsocketConnection*"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "get_io_stream",
                            "@c:identifier": "soup_websocket_connection_get_io_stream",
                            "@glib:get-property": "io-stream",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../libsoup/websocket/soup-websocket-connection.c",
                                "@line": "1756",
                                "#text": "Get the I/O stream the WebSocket is communicating over."
                            },
                            "source-position": {
                                "@filename": "../libsoup/websocket/soup-websocket-connection.h",
                                "@line": "41"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "../libsoup/websocket/soup-websocket-connection.c",
                                    "@line": "1762",
                                    "#text": "the WebSocket's I/O stream."
                                },
                                "type": {
                                    "@name": "Gio.IOStream",
                                    "@c:type": "GIOStream*"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "self",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../libsoup/websocket/soup-websocket-connection.c",
                                        "@line": "1758",
                                        "#text": "the WebSocket"
                                    },
                                    "type": {
                                        "@name": "WebsocketConnection",
                                        "@c:type": "SoupWebsocketConnection*"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "get_keepalive_interval",
                            "@c:identifier": "soup_websocket_connection_get_keepalive_interval",
                            "@glib:get-property": "keepalive-interval",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../libsoup/websocket/soup-websocket-connection.c",
                                "@line": "2098",
                                "#text": "Gets the keepalive interval in seconds or 0 if disabled."
                            },
                            "source-position": {
                                "@filename": "../libsoup/websocket/soup-websocket-connection.h",
                                "@line": "92"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "../libsoup/websocket/soup-websocket-connection.c",
                                    "@line": "2104",
                                    "#text": "the keepalive interval."
                                },
                                "type": {
                                    "@name": "guint",
                                    "@c:type": "guint"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "self",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../libsoup/websocket/soup-websocket-connection.c",
                                        "@line": "2100",
                                        "#text": "the WebSocket"
                                    },
                                    "type": {
                                        "@name": "WebsocketConnection",
                                        "@c:type": "SoupWebsocketConnection*"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "get_max_incoming_payload_size",
                            "@c:identifier": "soup_websocket_connection_get_max_incoming_payload_size",
                            "@glib:get-property": "max-incoming-payload-size",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../libsoup/websocket/soup-websocket-connection.c",
                                "@line": "2057",
                                "#text": "Gets the maximum payload size allowed for incoming packets."
                            },
                            "source-position": {
                                "@filename": "../libsoup/websocket/soup-websocket-connection.h",
                                "@line": "85"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "../libsoup/websocket/soup-websocket-connection.c",
                                    "@line": "2063",
                                    "#text": "the maximum payload size."
                                },
                                "type": {
                                    "@name": "guint64",
                                    "@c:type": "guint64"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "self",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../libsoup/websocket/soup-websocket-connection.c",
                                        "@line": "2059",
                                        "#text": "the WebSocket"
                                    },
                                    "type": {
                                        "@name": "WebsocketConnection",
                                        "@c:type": "SoupWebsocketConnection*"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "get_origin",
                            "@c:identifier": "soup_websocket_connection_get_origin",
                            "@glib:get-property": "origin",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../libsoup/websocket/soup-websocket-connection.c",
                                "@line": "1813",
                                "#text": "Get the origin of the WebSocket."
                            },
                            "source-position": {
                                "@filename": "../libsoup/websocket/soup-websocket-connection.h",
                                "@line": "50"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "@nullable": "1",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "../libsoup/websocket/soup-websocket-connection.c",
                                    "@line": "1819",
                                    "#text": "the origin"
                                },
                                "type": {
                                    "@name": "utf8",
                                    "@c:type": "const char*"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "self",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../libsoup/websocket/soup-websocket-connection.c",
                                        "@line": "1815",
                                        "#text": "the WebSocket"
                                    },
                                    "type": {
                                        "@name": "WebsocketConnection",
                                        "@c:type": "SoupWebsocketConnection*"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "get_protocol",
                            "@c:identifier": "soup_websocket_connection_get_protocol",
                            "@glib:get-property": "protocol",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../libsoup/websocket/soup-websocket-connection.c",
                                "@line": "1831",
                                "#text": "Get the protocol chosen via negotiation with the peer."
                            },
                            "source-position": {
                                "@filename": "../libsoup/websocket/soup-websocket-connection.h",
                                "@line": "53"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "@nullable": "1",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "../libsoup/websocket/soup-websocket-connection.c",
                                    "@line": "1837",
                                    "#text": "the chosen protocol"
                                },
                                "type": {
                                    "@name": "utf8",
                                    "@c:type": "const char*"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "self",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../libsoup/websocket/soup-websocket-connection.c",
                                        "@line": "1833",
                                        "#text": "the WebSocket"
                                    },
                                    "type": {
                                        "@name": "WebsocketConnection",
                                        "@c:type": "SoupWebsocketConnection*"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "get_state",
                            "@c:identifier": "soup_websocket_connection_get_state",
                            "@glib:get-property": "state",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../libsoup/websocket/soup-websocket-connection.c",
                                "@line": "1867",
                                "#text": "Get the current state of the WebSocket."
                            },
                            "source-position": {
                                "@filename": "../libsoup/websocket/soup-websocket-connection.h",
                                "@line": "59"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "../libsoup/websocket/soup-websocket-connection.c",
                                    "@line": "1873",
                                    "#text": "the state"
                                },
                                "type": {
                                    "@name": "WebsocketState",
                                    "@c:type": "SoupWebsocketState"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "self",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../libsoup/websocket/soup-websocket-connection.c",
                                        "@line": "1869",
                                        "#text": "the WebSocket"
                                    },
                                    "type": {
                                        "@name": "WebsocketConnection",
                                        "@c:type": "SoupWebsocketConnection*"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "get_uri",
                            "@c:identifier": "soup_websocket_connection_get_uri",
                            "@glib:get-property": "uri",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../libsoup/websocket/soup-websocket-connection.c",
                                "@line": "1792",
                                "#text": "Get the URI of the WebSocket.\n\nFor servers this represents the address of the WebSocket, and\nfor clients it is the address connected to."
                            },
                            "source-position": {
                                "@filename": "../libsoup/websocket/soup-websocket-connection.h",
                                "@line": "47"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "../libsoup/websocket/soup-websocket-connection.c",
                                    "@line": "1801",
                                    "#text": "the URI"
                                },
                                "type": {
                                    "@name": "GLib.Uri",
                                    "@c:type": "GUri*"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "self",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../libsoup/websocket/soup-websocket-connection.c",
                                        "@line": "1794",
                                        "#text": "the WebSocket"
                                    },
                                    "type": {
                                        "@name": "WebsocketConnection",
                                        "@c:type": "SoupWebsocketConnection*"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "send_binary",
                            "@c:identifier": "soup_websocket_connection_send_binary",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../libsoup/websocket/soup-websocket-connection.c",
                                "@line": "1964",
                                "#text": "Send a binary message to the peer.\n\nIf @length is 0, @data may be %NULL.\n\nThe message is queued to be sent and will be sent when the main loop\nis run."
                            },
                            "source-position": {
                                "@filename": "../libsoup/websocket/soup-websocket-connection.h",
                                "@line": "71"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "type": {
                                    "@name": "none",
                                    "@c:type": "void"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "self",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../libsoup/websocket/soup-websocket-connection.c",
                                        "@line": "1966",
                                        "#text": "the WebSocket"
                                    },
                                    "type": {
                                        "@name": "WebsocketConnection",
                                        "@c:type": "SoupWebsocketConnection*"
                                    }
                                },
                                "parameter": [
                                    {
                                        "@name": "data",
                                        "@transfer-ownership": "none",
                                        "@nullable": "1",
                                        "@allow-none": "1",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "../libsoup/websocket/soup-websocket-connection.c",
                                            "@line": "1967",
                                            "#text": "the message contents"
                                        },
                                        "array": {
                                            "@length": "1",
                                            "@zero-terminated": "0",
                                            "@c:type": "gconstpointer",
                                            "type": {
                                                "@name": "guint8"
                                            }
                                        }
                                    },
                                    {
                                        "@name": "length",
                                        "@transfer-ownership": "none",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "../libsoup/websocket/soup-websocket-connection.c",
                                            "@line": "1968",
                                            "#text": "the length of @data"
                                        },
                                        "type": {
                                            "@name": "gsize",
                                            "@c:type": "gsize"
                                        }
                                    }
                                ]
                            }
                        },
                        {
                            "@name": "send_message",
                            "@c:identifier": "soup_websocket_connection_send_message",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../libsoup/websocket/soup-websocket-connection.c",
                                "@line": "1989",
                                "#text": "Send a message of the given @type to the peer. Note that this method,\nallows to send text messages containing %NULL characters.\n\nThe message is queued to be sent and will be sent when the main loop\nis run."
                            },
                            "source-position": {
                                "@filename": "../libsoup/websocket/soup-websocket-connection.h",
                                "@line": "75"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "type": {
                                    "@name": "none",
                                    "@c:type": "void"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "self",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../libsoup/websocket/soup-websocket-connection.c",
                                        "@line": "1991",
                                        "#text": "the WebSocket"
                                    },
                                    "type": {
                                        "@name": "WebsocketConnection",
                                        "@c:type": "SoupWebsocketConnection*"
                                    }
                                },
                                "parameter": [
                                    {
                                        "@name": "type",
                                        "@transfer-ownership": "none",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "../libsoup/websocket/soup-websocket-connection.c",
                                            "@line": "1992",
                                            "#text": "the type of message contents"
                                        },
                                        "type": {
                                            "@name": "WebsocketDataType",
                                            "@c:type": "SoupWebsocketDataType"
                                        }
                                    },
                                    {
                                        "@name": "message",
                                        "@transfer-ownership": "none",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "../libsoup/websocket/soup-websocket-connection.c",
                                            "@line": "1993",
                                            "#text": "the message data as #GBytes"
                                        },
                                        "type": {
                                            "@name": "GLib.Bytes",
                                            "@c:type": "GBytes*"
                                        }
                                    }
                                ]
                            }
                        },
                        {
                            "@name": "send_text",
                            "@c:identifier": "soup_websocket_connection_send_text",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../libsoup/websocket/soup-websocket-connection.c",
                                "@line": "1935",
                                "#text": "Send a %NULL-terminated text (UTF-8) message to the peer.\n\nIf you need to send text messages containing %NULL characters use\n[method@WebsocketConnection.send_message] instead.\n\nThe message is queued to be sent and will be sent when the main loop\nis run."
                            },
                            "source-position": {
                                "@filename": "../libsoup/websocket/soup-websocket-connection.h",
                                "@line": "68"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "type": {
                                    "@name": "none",
                                    "@c:type": "void"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "self",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../libsoup/websocket/soup-websocket-connection.c",
                                        "@line": "1937",
                                        "#text": "the WebSocket"
                                    },
                                    "type": {
                                        "@name": "WebsocketConnection",
                                        "@c:type": "SoupWebsocketConnection*"
                                    }
                                },
                                "parameter": {
                                    "@name": "text",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../libsoup/websocket/soup-websocket-connection.c",
                                        "@line": "1938",
                                        "#text": "the message contents"
                                    },
                                    "type": {
                                        "@name": "utf8",
                                        "@c:type": "const char*"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "set_keepalive_interval",
                            "@c:identifier": "soup_websocket_connection_set_keepalive_interval",
                            "@glib:set-property": "keepalive-interval",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../libsoup/websocket/soup-websocket-connection.c",
                                "@line": "2130",
                                "#text": "Sets the interval in seconds on when to send a ping message which will serve\nas a keepalive message.\n\nIf set to 0 the keepalive message is disabled."
                            },
                            "source-position": {
                                "@filename": "../libsoup/websocket/soup-websocket-connection.h",
                                "@line": "95"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "type": {
                                    "@name": "none",
                                    "@c:type": "void"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "self",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../libsoup/websocket/soup-websocket-connection.c",
                                        "@line": "2132",
                                        "#text": "the WebSocket"
                                    },
                                    "type": {
                                        "@name": "WebsocketConnection",
                                        "@c:type": "SoupWebsocketConnection*"
                                    }
                                },
                                "parameter": {
                                    "@name": "interval",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../libsoup/websocket/soup-websocket-connection.c",
                                        "@line": "2133",
                                        "#text": "the interval to send a ping message or 0 to disable it"
                                    },
                                    "type": {
                                        "@name": "guint",
                                        "@c:type": "guint"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "set_max_incoming_payload_size",
                            "@c:identifier": "soup_websocket_connection_set_max_incoming_payload_size",
                            "@glib:set-property": "max-incoming-payload-size",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../libsoup/websocket/soup-websocket-connection.c",
                                "@line": "2075",
                                "#text": "Sets the maximum payload size allowed for incoming packets.\n\nIt does not limit the outgoing packet size."
                            },
                            "source-position": {
                                "@filename": "../libsoup/websocket/soup-websocket-connection.h",
                                "@line": "88"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "type": {
                                    "@name": "none",
                                    "@c:type": "void"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "self",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../libsoup/websocket/soup-websocket-connection.c",
                                        "@line": "2077",
                                        "#text": "the WebSocket"
                                    },
                                    "type": {
                                        "@name": "WebsocketConnection",
                                        "@c:type": "SoupWebsocketConnection*"
                                    }
                                },
                                "parameter": {
                                    "@name": "max_incoming_payload_size",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../libsoup/websocket/soup-websocket-connection.c",
                                        "@line": "2078",
                                        "#text": "the maximum payload size"
                                    },
                                    "type": {
                                        "@name": "guint64",
                                        "@c:type": "guint64"
                                    }
                                }
                            }
                        }
                    ],
                    "property": [
                        {
                            "@name": "connection-type",
                            "@writable": "1",
                            "@construct-only": "1",
                            "@transfer-ownership": "none",
                            "@getter": "get_connection_type",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../libsoup/websocket/soup-websocket-connection.c",
                                "@line": "1503",
                                "#text": "The type of connection (client/server)."
                            },
                            "type": {
                                "@name": "WebsocketConnectionType"
                            }
                        },
                        {
                            "@name": "extensions",
                            "@writable": "1",
                            "@construct-only": "1",
                            "@transfer-ownership": "none",
                            "@getter": "get_extensions",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../libsoup/websocket/soup-websocket-connection.c",
                                "@line": "1615",
                                "#text": "List of [class@WebsocketExtension] objects that are active in the connection."
                            },
                            "type": {
                                "@name": "gpointer",
                                "@c:type": "gpointer"
                            }
                        },
                        {
                            "@name": "io-stream",
                            "@writable": "1",
                            "@construct-only": "1",
                            "@transfer-ownership": "none",
                            "@getter": "get_io_stream",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../libsoup/websocket/soup-websocket-connection.c",
                                "@line": "1486",
                                "#text": "The underlying IO stream the WebSocket is communicating\nover.\n\nThe input and output streams must be pollable streams."
                            },
                            "type": {
                                "@name": "Gio.IOStream"
                            }
                        },
                        {
                            "@name": "keepalive-interval",
                            "@writable": "1",
                            "@construct": "1",
                            "@transfer-ownership": "none",
                            "@setter": "set_keepalive_interval",
                            "@getter": "get_keepalive_interval",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../libsoup/websocket/soup-websocket-connection.c",
                                "@line": "1596",
                                "#text": "Interval in seconds on when to send a ping message which will\nserve as a keepalive message.\n\nIf set to 0 the keepalive message is disabled."
                            },
                            "type": {
                                "@name": "guint",
                                "@c:type": "guint"
                            }
                        },
                        {
                            "@name": "max-incoming-payload-size",
                            "@writable": "1",
                            "@construct": "1",
                            "@transfer-ownership": "none",
                            "@setter": "set_max_incoming_payload_size",
                            "@getter": "get_max_incoming_payload_size",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../libsoup/websocket/soup-websocket-connection.c",
                                "@line": "1578",
                                "#text": "The maximum payload size for incoming packets.\n\nThe protocol expects or 0 to not limit it."
                            },
                            "type": {
                                "@name": "guint64",
                                "@c:type": "guint64"
                            }
                        },
                        {
                            "@name": "origin",
                            "@writable": "1",
                            "@construct-only": "1",
                            "@transfer-ownership": "none",
                            "@getter": "get_origin",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../libsoup/websocket/soup-websocket-connection.c",
                                "@line": "1535",
                                "#text": "The client's Origin."
                            },
                            "type": {
                                "@name": "utf8",
                                "@c:type": "gchar*"
                            }
                        },
                        {
                            "@name": "protocol",
                            "@writable": "1",
                            "@construct-only": "1",
                            "@transfer-ownership": "none",
                            "@getter": "get_protocol",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../libsoup/websocket/soup-websocket-connection.c",
                                "@line": "1549",
                                "#text": "The chosen protocol, or %NULL if a protocol was not agreed\nupon."
                            },
                            "type": {
                                "@name": "utf8",
                                "@c:type": "gchar*"
                            }
                        },
                        {
                            "@name": "state",
                            "@transfer-ownership": "none",
                            "@getter": "get_state",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../libsoup/websocket/soup-websocket-connection.c",
                                "@line": "1564",
                                "#text": "The current state of the WebSocket."
                            },
                            "type": {
                                "@name": "WebsocketState"
                            }
                        },
                        {
                            "@name": "uri",
                            "@writable": "1",
                            "@construct-only": "1",
                            "@transfer-ownership": "none",
                            "@getter": "get_uri",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../libsoup/websocket/soup-websocket-connection.c",
                                "@line": "1518",
                                "#text": "The URI of the WebSocket.\n\nFor servers this represents the address of the WebSocket,\nand for clients it is the address connected to."
                            },
                            "type": {
                                "@name": "GLib.Uri"
                            }
                        }
                    ],
                    "glib:signal": [
                        {
                            "@name": "closed",
                            "@when": "first",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../libsoup/websocket/soup-websocket-connection.c",
                                "@line": "1679",
                                "#text": "Emitted when the connection has completely closed.\n\nThis happens either due to an orderly close from the peer, one\ninitiated via [method@WebsocketConnection.close] or a fatal error\ncondition that caused a close.\n\nThis signal will be emitted once."
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "type": {
                                    "@name": "none",
                                    "@c:type": "void"
                                }
                            }
                        },
                        {
                            "@name": "closing",
                            "@when": "last",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../libsoup/websocket/soup-websocket-connection.c",
                                "@line": "1666",
                                "#text": "This signal will be emitted during an orderly close."
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "type": {
                                    "@name": "none",
                                    "@c:type": "void"
                                }
                            }
                        },
                        {
                            "@name": "error",
                            "@when": "first",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../libsoup/websocket/soup-websocket-connection.c",
                                "@line": "1649",
                                "#text": "Emitted when an error occurred on the WebSocket.\n\nThis may be fired multiple times. Fatal errors will be followed by\nthe [signal@WebsocketConnection::closed] signal being emitted."
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "type": {
                                    "@name": "none",
                                    "@c:type": "void"
                                }
                            },
                            "parameters": {
                                "parameter": {
                                    "@name": "error",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../libsoup/websocket/soup-websocket-connection.c",
                                        "@line": "1652",
                                        "#text": "the error that occured"
                                    },
                                    "type": {
                                        "@name": "GLib.Error"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "message",
                            "@when": "first",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../libsoup/websocket/soup-websocket-connection.c",
                                "@line": "1630",
                                "#text": "Emitted when we receive a message from the peer.\n\nAs a convenience, the @message data will always be\n%NULL-terminated, but the NUL byte will not be included in\nthe length count."
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "type": {
                                    "@name": "none",
                                    "@c:type": "void"
                                }
                            },
                            "parameters": {
                                "parameter": [
                                    {
                                        "@name": "type",
                                        "@transfer-ownership": "none",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "../libsoup/websocket/soup-websocket-connection.c",
                                            "@line": "1633",
                                            "#text": "the type of message contents"
                                        },
                                        "type": {
                                            "@name": "gint",
                                            "@c:type": "gint"
                                        }
                                    },
                                    {
                                        "@name": "message",
                                        "@transfer-ownership": "none",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "../libsoup/websocket/soup-websocket-connection.c",
                                            "@line": "1634",
                                            "#text": "the message data"
                                        },
                                        "type": {
                                            "@name": "GLib.Bytes"
                                        }
                                    }
                                ]
                            }
                        },
                        {
                            "@name": "pong",
                            "@when": "first",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../libsoup/websocket/soup-websocket-connection.c",
                                "@line": "1698",
                                "#text": "Emitted when we receive a Pong frame (solicited or\nunsolicited) from the peer.\n\nAs a convenience, the @message data will always be\n%NULL-terminated, but the NUL byte will not be included in\nthe length count."
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "type": {
                                    "@name": "none",
                                    "@c:type": "void"
                                }
                            },
                            "parameters": {
                                "parameter": {
                                    "@name": "message",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../libsoup/websocket/soup-websocket-connection.c",
                                        "@line": "1701",
                                        "#text": "the application data (if any)"
                                    },
                                    "type": {
                                        "@name": "GLib.Bytes"
                                    }
                                }
                            }
                        }
                    ]
                },
                {
                    "@name": "WebsocketExtension",
                    "@c:symbol-prefix": "websocket_extension",
                    "@c:type": "SoupWebsocketExtension",
                    "@parent": "GObject.Object",
                    "@abstract": "1",
                    "@glib:type-name": "SoupWebsocketExtension",
                    "@glib:get-type": "soup_websocket_extension_get_type",
                    "@glib:type-struct": "WebsocketExtensionClass",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "../libsoup/websocket/soup-websocket-extension.c",
                        "@line": "29",
                        "#text": "A WebSocket extension\n\n#SoupWebsocketExtension is the base class for WebSocket extension objects."
                    },
                    "source-position": {
                        "@filename": "../libsoup/websocket/soup-websocket-extension.h",
                        "@line": "60"
                    },
                    "virtual-method": [
                        {
                            "@name": "configure",
                            "@invoker": "configure",
                            "@throws": "1",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../libsoup/websocket/soup-websocket-extension.c",
                                "@line": "66",
                                "#text": "Configures @extension with the given @params."
                            },
                            "source-position": {
                                "@filename": "../libsoup/websocket/soup-websocket-extension.h",
                                "@line": "39"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "../libsoup/websocket/soup-websocket-extension.c",
                                    "@line": "75",
                                    "#text": "%TRUE if extension could be configured with the given parameters, or %FALSE otherwise"
                                },
                                "type": {
                                    "@name": "gboolean",
                                    "@c:type": "gboolean"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "extension",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../libsoup/websocket/soup-websocket-extension.c",
                                        "@line": "68",
                                        "#text": "a #SoupWebsocketExtension"
                                    },
                                    "type": {
                                        "@name": "WebsocketExtension",
                                        "@c:type": "SoupWebsocketExtension*"
                                    }
                                },
                                "parameter": [
                                    {
                                        "@name": "connection_type",
                                        "@transfer-ownership": "none",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "../libsoup/websocket/soup-websocket-extension.c",
                                            "@line": "69",
                                            "#text": "either %SOUP_WEBSOCKET_CONNECTION_CLIENT or %SOUP_WEBSOCKET_CONNECTION_SERVER"
                                        },
                                        "type": {
                                            "@name": "WebsocketConnectionType",
                                            "@c:type": "SoupWebsocketConnectionType"
                                        }
                                    },
                                    {
                                        "@name": "params",
                                        "@transfer-ownership": "none",
                                        "@nullable": "1",
                                        "@allow-none": "1",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "../libsoup/websocket/soup-websocket-extension.c",
                                            "@line": "70",
                                            "#text": "the parameters"
                                        },
                                        "type": {
                                            "@name": "GLib.HashTable",
                                            "@c:type": "GHashTable*",
                                            "type": [
                                                {
                                                    "@name": "gpointer",
                                                    "@c:type": "gpointer"
                                                },
                                                {
                                                    "@name": "gpointer",
                                                    "@c:type": "gpointer"
                                                }
                                            ]
                                        }
                                    }
                                ]
                            }
                        },
                        {
                            "@name": "get_request_params",
                            "@invoker": "get_request_params",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../libsoup/websocket/soup-websocket-extension.c",
                                "@line": "96",
                                "#text": "Get the parameters strings to be included in the request header.\n\nIf the extension doesn't include any parameter in the request, this function\nreturns %NULL."
                            },
                            "source-position": {
                                "@filename": "../libsoup/websocket/soup-websocket-extension.h",
                                "@line": "44"
                            },
                            "return-value": {
                                "@transfer-ownership": "full",
                                "@nullable": "1",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "../libsoup/websocket/soup-websocket-extension.c",
                                    "@line": "105",
                                    "#text": "a new allocated string with the parameters"
                                },
                                "type": {
                                    "@name": "utf8",
                                    "@c:type": "char*"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "extension",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../libsoup/websocket/soup-websocket-extension.c",
                                        "@line": "98",
                                        "#text": "a #SoupWebsocketExtension"
                                    },
                                    "type": {
                                        "@name": "WebsocketExtension",
                                        "@c:type": "SoupWebsocketExtension*"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "get_response_params",
                            "@invoker": "get_response_params",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../libsoup/websocket/soup-websocket-extension.c",
                                "@line": "121",
                                "#text": "Get the parameters strings to be included in the response header.\n\nIf the extension doesn't include any parameter in the response, this function\nreturns %NULL."
                            },
                            "source-position": {
                                "@filename": "../libsoup/websocket/soup-websocket-extension.h",
                                "@line": "46"
                            },
                            "return-value": {
                                "@transfer-ownership": "full",
                                "@nullable": "1",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "../libsoup/websocket/soup-websocket-extension.c",
                                    "@line": "130",
                                    "#text": "a new allocated string with the parameters"
                                },
                                "type": {
                                    "@name": "utf8",
                                    "@c:type": "char*"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "extension",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../libsoup/websocket/soup-websocket-extension.c",
                                        "@line": "123",
                                        "#text": "a #SoupWebsocketExtension"
                                    },
                                    "type": {
                                        "@name": "WebsocketExtension",
                                        "@c:type": "SoupWebsocketExtension*"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "process_incoming_message",
                            "@invoker": "process_incoming_message",
                            "@throws": "1",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../libsoup/websocket/soup-websocket-extension.c",
                                "@line": "183",
                                "#text": "Process a message after it's received.\n\nIf the payload isn't changed the given @payload is just returned, otherwise\n[method@GLib.Bytes.unref] is called on the given @payload and a new\n[struct@GLib.Bytes] is returned with the new data.\n\nExtensions using reserved bits of the header will reset them in @header."
                            },
                            "source-position": {
                                "@filename": "../libsoup/websocket/soup-websocket-extension.h",
                                "@line": "53"
                            },
                            "return-value": {
                                "@transfer-ownership": "full",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "../libsoup/websocket/soup-websocket-extension.c",
                                    "@line": "198",
                                    "#text": "the message payload data, or %NULL in case of error"
                                },
                                "type": {
                                    "@name": "GLib.Bytes",
                                    "@c:type": "GBytes*"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "extension",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../libsoup/websocket/soup-websocket-extension.c",
                                        "@line": "185",
                                        "#text": "a #SoupWebsocketExtension"
                                    },
                                    "type": {
                                        "@name": "WebsocketExtension",
                                        "@c:type": "SoupWebsocketExtension*"
                                    }
                                },
                                "parameter": [
                                    {
                                        "@name": "header",
                                        "@direction": "inout",
                                        "@caller-allocates": "0",
                                        "@transfer-ownership": "full",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "../libsoup/websocket/soup-websocket-extension.c",
                                            "@line": "186",
                                            "#text": "the message header"
                                        },
                                        "type": {
                                            "@name": "guint8",
                                            "@c:type": "guint8*"
                                        }
                                    },
                                    {
                                        "@name": "payload",
                                        "@transfer-ownership": "full",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "../libsoup/websocket/soup-websocket-extension.c",
                                            "@line": "187",
                                            "#text": "the payload data"
                                        },
                                        "type": {
                                            "@name": "GLib.Bytes",
                                            "@c:type": "GBytes*"
                                        }
                                    }
                                ]
                            }
                        },
                        {
                            "@name": "process_outgoing_message",
                            "@invoker": "process_outgoing_message",
                            "@throws": "1",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../libsoup/websocket/soup-websocket-extension.c",
                                "@line": "146",
                                "#text": "Process a message before it's sent.\n\nIf the payload isn't changed the given @payload is just returned, otherwise\n[method@Glib.Bytes.unref] is called on the given @payload and a new\n[struct@GLib.Bytes] is returned with the new data.\n\nExtensions using reserved bits of the header will change them in @header."
                            },
                            "source-position": {
                                "@filename": "../libsoup/websocket/soup-websocket-extension.h",
                                "@line": "48"
                            },
                            "return-value": {
                                "@transfer-ownership": "full",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "../libsoup/websocket/soup-websocket-extension.c",
                                    "@line": "161",
                                    "#text": "the message payload data, or %NULL in case of error"
                                },
                                "type": {
                                    "@name": "GLib.Bytes",
                                    "@c:type": "GBytes*"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "extension",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../libsoup/websocket/soup-websocket-extension.c",
                                        "@line": "148",
                                        "#text": "a #SoupWebsocketExtension"
                                    },
                                    "type": {
                                        "@name": "WebsocketExtension",
                                        "@c:type": "SoupWebsocketExtension*"
                                    }
                                },
                                "parameter": [
                                    {
                                        "@name": "header",
                                        "@direction": "inout",
                                        "@caller-allocates": "0",
                                        "@transfer-ownership": "full",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "../libsoup/websocket/soup-websocket-extension.c",
                                            "@line": "149",
                                            "#text": "the message header"
                                        },
                                        "type": {
                                            "@name": "guint8",
                                            "@c:type": "guint8*"
                                        }
                                    },
                                    {
                                        "@name": "payload",
                                        "@transfer-ownership": "full",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "../libsoup/websocket/soup-websocket-extension.c",
                                            "@line": "150",
                                            "#text": "the payload data"
                                        },
                                        "type": {
                                            "@name": "GLib.Bytes",
                                            "@c:type": "GBytes*"
                                        }
                                    }
                                ]
                            }
                        }
                    ],
                    "method": [
                        {
                            "@name": "configure",
                            "@c:identifier": "soup_websocket_extension_configure",
                            "@throws": "1",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../libsoup/websocket/soup-websocket-extension.c",
                                "@line": "66",
                                "#text": "Configures @extension with the given @params."
                            },
                            "source-position": {
                                "@filename": "../libsoup/websocket/soup-websocket-extension.h",
                                "@line": "63"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "../libsoup/websocket/soup-websocket-extension.c",
                                    "@line": "75",
                                    "#text": "%TRUE if extension could be configured with the given parameters, or %FALSE otherwise"
                                },
                                "type": {
                                    "@name": "gboolean",
                                    "@c:type": "gboolean"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "extension",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../libsoup/websocket/soup-websocket-extension.c",
                                        "@line": "68",
                                        "#text": "a #SoupWebsocketExtension"
                                    },
                                    "type": {
                                        "@name": "WebsocketExtension",
                                        "@c:type": "SoupWebsocketExtension*"
                                    }
                                },
                                "parameter": [
                                    {
                                        "@name": "connection_type",
                                        "@transfer-ownership": "none",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "../libsoup/websocket/soup-websocket-extension.c",
                                            "@line": "69",
                                            "#text": "either %SOUP_WEBSOCKET_CONNECTION_CLIENT or %SOUP_WEBSOCKET_CONNECTION_SERVER"
                                        },
                                        "type": {
                                            "@name": "WebsocketConnectionType",
                                            "@c:type": "SoupWebsocketConnectionType"
                                        }
                                    },
                                    {
                                        "@name": "params",
                                        "@transfer-ownership": "none",
                                        "@nullable": "1",
                                        "@allow-none": "1",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "../libsoup/websocket/soup-websocket-extension.c",
                                            "@line": "70",
                                            "#text": "the parameters"
                                        },
                                        "type": {
                                            "@name": "GLib.HashTable",
                                            "@c:type": "GHashTable*",
                                            "type": [
                                                {
                                                    "@name": "gpointer",
                                                    "@c:type": "gpointer"
                                                },
                                                {
                                                    "@name": "gpointer",
                                                    "@c:type": "gpointer"
                                                }
                                            ]
                                        }
                                    }
                                ]
                            }
                        },
                        {
                            "@name": "get_request_params",
                            "@c:identifier": "soup_websocket_extension_get_request_params",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../libsoup/websocket/soup-websocket-extension.c",
                                "@line": "96",
                                "#text": "Get the parameters strings to be included in the request header.\n\nIf the extension doesn't include any parameter in the request, this function\nreturns %NULL."
                            },
                            "source-position": {
                                "@filename": "../libsoup/websocket/soup-websocket-extension.h",
                                "@line": "68"
                            },
                            "return-value": {
                                "@transfer-ownership": "full",
                                "@nullable": "1",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "../libsoup/websocket/soup-websocket-extension.c",
                                    "@line": "105",
                                    "#text": "a new allocated string with the parameters"
                                },
                                "type": {
                                    "@name": "utf8",
                                    "@c:type": "char*"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "extension",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../libsoup/websocket/soup-websocket-extension.c",
                                        "@line": "98",
                                        "#text": "a #SoupWebsocketExtension"
                                    },
                                    "type": {
                                        "@name": "WebsocketExtension",
                                        "@c:type": "SoupWebsocketExtension*"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "get_response_params",
                            "@c:identifier": "soup_websocket_extension_get_response_params",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../libsoup/websocket/soup-websocket-extension.c",
                                "@line": "121",
                                "#text": "Get the parameters strings to be included in the response header.\n\nIf the extension doesn't include any parameter in the response, this function\nreturns %NULL."
                            },
                            "source-position": {
                                "@filename": "../libsoup/websocket/soup-websocket-extension.h",
                                "@line": "71"
                            },
                            "return-value": {
                                "@transfer-ownership": "full",
                                "@nullable": "1",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "../libsoup/websocket/soup-websocket-extension.c",
                                    "@line": "130",
                                    "#text": "a new allocated string with the parameters"
                                },
                                "type": {
                                    "@name": "utf8",
                                    "@c:type": "char*"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "extension",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../libsoup/websocket/soup-websocket-extension.c",
                                        "@line": "123",
                                        "#text": "a #SoupWebsocketExtension"
                                    },
                                    "type": {
                                        "@name": "WebsocketExtension",
                                        "@c:type": "SoupWebsocketExtension*"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "process_incoming_message",
                            "@c:identifier": "soup_websocket_extension_process_incoming_message",
                            "@throws": "1",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../libsoup/websocket/soup-websocket-extension.c",
                                "@line": "183",
                                "#text": "Process a message after it's received.\n\nIf the payload isn't changed the given @payload is just returned, otherwise\n[method@GLib.Bytes.unref] is called on the given @payload and a new\n[struct@GLib.Bytes] is returned with the new data.\n\nExtensions using reserved bits of the header will reset them in @header."
                            },
                            "source-position": {
                                "@filename": "../libsoup/websocket/soup-websocket-extension.h",
                                "@line": "79"
                            },
                            "return-value": {
                                "@transfer-ownership": "full",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "../libsoup/websocket/soup-websocket-extension.c",
                                    "@line": "198",
                                    "#text": "the message payload data, or %NULL in case of error"
                                },
                                "type": {
                                    "@name": "GLib.Bytes",
                                    "@c:type": "GBytes*"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "extension",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../libsoup/websocket/soup-websocket-extension.c",
                                        "@line": "185",
                                        "#text": "a #SoupWebsocketExtension"
                                    },
                                    "type": {
                                        "@name": "WebsocketExtension",
                                        "@c:type": "SoupWebsocketExtension*"
                                    }
                                },
                                "parameter": [
                                    {
                                        "@name": "header",
                                        "@direction": "inout",
                                        "@caller-allocates": "0",
                                        "@transfer-ownership": "full",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "../libsoup/websocket/soup-websocket-extension.c",
                                            "@line": "186",
                                            "#text": "the message header"
                                        },
                                        "type": {
                                            "@name": "guint8",
                                            "@c:type": "guint8*"
                                        }
                                    },
                                    {
                                        "@name": "payload",
                                        "@transfer-ownership": "full",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "../libsoup/websocket/soup-websocket-extension.c",
                                            "@line": "187",
                                            "#text": "the payload data"
                                        },
                                        "type": {
                                            "@name": "GLib.Bytes",
                                            "@c:type": "GBytes*"
                                        }
                                    }
                                ]
                            }
                        },
                        {
                            "@name": "process_outgoing_message",
                            "@c:identifier": "soup_websocket_extension_process_outgoing_message",
                            "@throws": "1",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../libsoup/websocket/soup-websocket-extension.c",
                                "@line": "146",
                                "#text": "Process a message before it's sent.\n\nIf the payload isn't changed the given @payload is just returned, otherwise\n[method@Glib.Bytes.unref] is called on the given @payload and a new\n[struct@GLib.Bytes] is returned with the new data.\n\nExtensions using reserved bits of the header will change them in @header."
                            },
                            "source-position": {
                                "@filename": "../libsoup/websocket/soup-websocket-extension.h",
                                "@line": "74"
                            },
                            "return-value": {
                                "@transfer-ownership": "full",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "../libsoup/websocket/soup-websocket-extension.c",
                                    "@line": "161",
                                    "#text": "the message payload data, or %NULL in case of error"
                                },
                                "type": {
                                    "@name": "GLib.Bytes",
                                    "@c:type": "GBytes*"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "extension",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../libsoup/websocket/soup-websocket-extension.c",
                                        "@line": "148",
                                        "#text": "a #SoupWebsocketExtension"
                                    },
                                    "type": {
                                        "@name": "WebsocketExtension",
                                        "@c:type": "SoupWebsocketExtension*"
                                    }
                                },
                                "parameter": [
                                    {
                                        "@name": "header",
                                        "@direction": "inout",
                                        "@caller-allocates": "0",
                                        "@transfer-ownership": "full",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "../libsoup/websocket/soup-websocket-extension.c",
                                            "@line": "149",
                                            "#text": "the message header"
                                        },
                                        "type": {
                                            "@name": "guint8",
                                            "@c:type": "guint8*"
                                        }
                                    },
                                    {
                                        "@name": "payload",
                                        "@transfer-ownership": "full",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "../libsoup/websocket/soup-websocket-extension.c",
                                            "@line": "150",
                                            "#text": "the payload data"
                                        },
                                        "type": {
                                            "@name": "GLib.Bytes",
                                            "@c:type": "GBytes*"
                                        }
                                    }
                                ]
                            }
                        }
                    ],
                    "field": {
                        "@name": "parent_instance",
                        "type": {
                            "@name": "GObject.Object",
                            "@c:type": "GObject"
                        }
                    }
                },
                {
                    "@name": "WebsocketExtensionDeflate",
                    "@c:symbol-prefix": "websocket_extension_deflate",
                    "@c:type": "SoupWebsocketExtensionDeflate",
                    "@parent": "WebsocketExtension",
                    "@final": "1",
                    "@glib:type-name": "SoupWebsocketExtensionDeflate",
                    "@glib:get-type": "soup_websocket_extension_deflate_get_type",
                    "@glib:type-struct": "WebsocketExtensionDeflateClass",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "../libsoup/websocket/soup-websocket-extension-deflate.c",
                        "@line": "69",
                        "#text": "A SoupWebsocketExtensionDeflate is a [class@WebsocketExtension]\nimplementing permessage-deflate (RFC 7692).\n\nThis extension is used by default in a [class@Session] when [class@WebsocketExtensionManager]\nfeature is present, and always used by [class@Server]."
                    },
                    "source-position": {
                        "@filename": "../libsoup/websocket/soup-websocket-extension-deflate.h",
                        "@line": "31"
                    }
                },
                {
                    "@name": "WebsocketExtensionManager",
                    "@c:symbol-prefix": "websocket_extension_manager",
                    "@c:type": "SoupWebsocketExtensionManager",
                    "@parent": "GObject.Object",
                    "@final": "1",
                    "@glib:type-name": "SoupWebsocketExtensionManager",
                    "@glib:get-type": "soup_websocket_extension_manager_get_type",
                    "@glib:type-struct": "WebsocketExtensionManagerClass",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "../libsoup/websocket/soup-websocket-extension-manager.c",
                        "@line": "35",
                        "#text": "SoupWebsocketExtensionManager is the [iface@SessionFeature] that handles WebSockets\nextensions for a [class@Session].\n\nA #SoupWebsocketExtensionManager is added to the session by default, and normally\nyou don't need to worry about it at all. However, if you want to\ndisable WebSocket extensions, you can remove the feature from the\nsession with [method@Session.remove_feature_by_type] or disable it on\nindividual requests with [method@Message.disable_feature]."
                    },
                    "source-position": {
                        "@filename": "../libsoup/websocket/soup-websocket-extension-manager.h",
                        "@line": "31"
                    },
                    "implements": {
                        "@name": "SessionFeature"
                    }
                }
            ],
            "record": [
                {
                    "@name": "AuthClass",
                    "@c:type": "SoupAuthClass",
                    "@glib:is-gtype-struct-for": "Auth",
                    "source-position": {
                        "@filename": "../libsoup/auth/soup-auth.h",
                        "@line": "44"
                    },
                    "field": [
                        {
                            "@name": "parent_class",
                            "type": {
                                "@name": "GObject.ObjectClass",
                                "@c:type": "GObjectClass"
                            }
                        },
                        {
                            "@name": "scheme_name",
                            "type": {
                                "@name": "utf8",
                                "@c:type": "const char*"
                            }
                        },
                        {
                            "@name": "strength",
                            "type": {
                                "@name": "guint",
                                "@c:type": "guint"
                            }
                        },
                        {
                            "@name": "update",
                            "callback": {
                                "@name": "update",
                                "source-position": {
                                    "@filename": "../libsoup/auth/soup-auth.h",
                                    "@line": "23"
                                },
                                "return-value": {
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../libsoup/auth/soup-auth.c",
                                        "@line": "310",
                                        "#text": "%TRUE if @auth is still a valid (but potentially\n  unauthenticated) #SoupAuth. %FALSE if something about @auth_params\n  could not be parsed or incorporated into @auth at all."
                                    },
                                    "type": {
                                        "@name": "gboolean",
                                        "@c:type": "gboolean"
                                    }
                                },
                                "parameters": {
                                    "parameter": [
                                        {
                                            "@name": "auth",
                                            "@transfer-ownership": "none",
                                            "doc": {
                                                "@xml:space": "preserve",
                                                "@filename": "../libsoup/auth/soup-auth.c",
                                                "@line": "301",
                                                "#text": "a #SoupAuth"
                                            },
                                            "type": {
                                                "@name": "Auth",
                                                "@c:type": "SoupAuth*"
                                            }
                                        },
                                        {
                                            "@name": "msg",
                                            "@transfer-ownership": "none",
                                            "doc": {
                                                "@xml:space": "preserve",
                                                "@filename": "../libsoup/auth/soup-auth.c",
                                                "@line": "302",
                                                "#text": "the #SoupMessage @auth is being updated for"
                                            },
                                            "type": {
                                                "@name": "Message",
                                                "@c:type": "SoupMessage*"
                                            }
                                        },
                                        {
                                            "@name": "auth_header",
                                            "@transfer-ownership": "none",
                                            "doc": {
                                                "@xml:space": "preserve",
                                                "@filename": "../libsoup/auth/soup-auth.c",
                                                "@line": "303",
                                                "#text": "the WWW-Authenticate/Proxy-Authenticate header"
                                            },
                                            "type": {
                                                "@name": "GLib.HashTable",
                                                "@c:type": "GHashTable*",
                                                "type": [
                                                    {
                                                        "@name": "gpointer",
                                                        "@c:type": "gpointer"
                                                    },
                                                    {
                                                        "@name": "gpointer",
                                                        "@c:type": "gpointer"
                                                    }
                                                ]
                                            }
                                        }
                                    ]
                                }
                            }
                        },
                        {
                            "@name": "get_protection_space",
                            "callback": {
                                "@name": "get_protection_space",
                                "source-position": {
                                    "@filename": "../libsoup/auth/soup-auth.h",
                                    "@line": "27"
                                },
                                "return-value": {
                                    "@transfer-ownership": "full",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../libsoup/auth/soup-auth.c",
                                        "@line": "643",
                                        "#text": "the list of\n  paths, which can be freed with [method@Auth.free_protection_space]."
                                    },
                                    "type": {
                                        "@name": "GLib.SList",
                                        "@c:type": "GSList*",
                                        "type": {
                                            "@name": "utf8"
                                        }
                                    }
                                },
                                "parameters": {
                                    "parameter": [
                                        {
                                            "@name": "auth",
                                            "@transfer-ownership": "none",
                                            "doc": {
                                                "@xml:space": "preserve",
                                                "@filename": "../libsoup/auth/soup-auth.c",
                                                "@line": "633",
                                                "#text": "a #SoupAuth"
                                            },
                                            "type": {
                                                "@name": "Auth",
                                                "@c:type": "SoupAuth*"
                                            }
                                        },
                                        {
                                            "@name": "source_uri",
                                            "@transfer-ownership": "none",
                                            "doc": {
                                                "@xml:space": "preserve",
                                                "@filename": "../libsoup/auth/soup-auth.c",
                                                "@line": "634",
                                                "#text": "the URI of the request that @auth was generated in\n  response to."
                                            },
                                            "type": {
                                                "@name": "GLib.Uri",
                                                "@c:type": "GUri*"
                                            }
                                        }
                                    ]
                                }
                            }
                        },
                        {
                            "@name": "authenticate",
                            "callback": {
                                "@name": "authenticate",
                                "source-position": {
                                    "@filename": "../libsoup/auth/soup-auth.h",
                                    "@line": "30"
                                },
                                "return-value": {
                                    "@transfer-ownership": "none",
                                    "type": {
                                        "@name": "none",
                                        "@c:type": "void"
                                    }
                                },
                                "parameters": {
                                    "parameter": [
                                        {
                                            "@name": "auth",
                                            "@transfer-ownership": "none",
                                            "doc": {
                                                "@xml:space": "preserve",
                                                "@filename": "../libsoup/auth/soup-auth.c",
                                                "@line": "353",
                                                "#text": "a #SoupAuth"
                                            },
                                            "type": {
                                                "@name": "Auth",
                                                "@c:type": "SoupAuth*"
                                            }
                                        },
                                        {
                                            "@name": "username",
                                            "@transfer-ownership": "none",
                                            "doc": {
                                                "@xml:space": "preserve",
                                                "@filename": "../libsoup/auth/soup-auth.c",
                                                "@line": "354",
                                                "#text": "the username provided by the user or client"
                                            },
                                            "type": {
                                                "@name": "utf8",
                                                "@c:type": "const char*"
                                            }
                                        },
                                        {
                                            "@name": "password",
                                            "@transfer-ownership": "none",
                                            "doc": {
                                                "@xml:space": "preserve",
                                                "@filename": "../libsoup/auth/soup-auth.c",
                                                "@line": "355",
                                                "#text": "the password provided by the user or client"
                                            },
                                            "type": {
                                                "@name": "utf8",
                                                "@c:type": "const char*"
                                            }
                                        }
                                    ]
                                }
                            }
                        },
                        {
                            "@name": "is_authenticated",
                            "callback": {
                                "@name": "is_authenticated",
                                "source-position": {
                                    "@filename": "../libsoup/auth/soup-auth.h",
                                    "@line": "33"
                                },
                                "return-value": {
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../libsoup/auth/soup-auth.c",
                                        "@line": "518",
                                        "#text": "%TRUE if @auth has been given a username and password"
                                    },
                                    "type": {
                                        "@name": "gboolean",
                                        "@c:type": "gboolean"
                                    }
                                },
                                "parameters": {
                                    "parameter": {
                                        "@name": "auth",
                                        "@transfer-ownership": "none",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "../libsoup/auth/soup-auth.c",
                                            "@line": "514",
                                            "#text": "a #SoupAuth"
                                        },
                                        "type": {
                                            "@name": "Auth",
                                            "@c:type": "SoupAuth*"
                                        }
                                    }
                                }
                            }
                        },
                        {
                            "@name": "get_authorization",
                            "callback": {
                                "@name": "get_authorization",
                                "source-position": {
                                    "@filename": "../libsoup/auth/soup-auth.h",
                                    "@line": "35"
                                },
                                "return-value": {
                                    "@transfer-ownership": "full",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../libsoup/auth/soup-auth.c",
                                        "@line": "563",
                                        "#text": "the \"Authorization\" header, which must be freed."
                                    },
                                    "type": {
                                        "@name": "utf8",
                                        "@c:type": "char*"
                                    }
                                },
                                "parameters": {
                                    "parameter": [
                                        {
                                            "@name": "auth",
                                            "@transfer-ownership": "none",
                                            "doc": {
                                                "@xml:space": "preserve",
                                                "@filename": "../libsoup/auth/soup-auth.c",
                                                "@line": "555",
                                                "#text": "a #SoupAuth"
                                            },
                                            "type": {
                                                "@name": "Auth",
                                                "@c:type": "SoupAuth*"
                                            }
                                        },
                                        {
                                            "@name": "msg",
                                            "@transfer-ownership": "none",
                                            "doc": {
                                                "@xml:space": "preserve",
                                                "@filename": "../libsoup/auth/soup-auth.c",
                                                "@line": "556",
                                                "#text": "the #SoupMessage to be authorized"
                                            },
                                            "type": {
                                                "@name": "Message",
                                                "@c:type": "SoupMessage*"
                                            }
                                        }
                                    ]
                                }
                            }
                        },
                        {
                            "@name": "is_ready",
                            "callback": {
                                "@name": "is_ready",
                                "source-position": {
                                    "@filename": "../libsoup/auth/soup-auth.h",
                                    "@line": "38"
                                },
                                "return-value": {
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../libsoup/auth/soup-auth.c",
                                        "@line": "585",
                                        "#text": "%TRUE if @auth is ready to make a request with."
                                    },
                                    "type": {
                                        "@name": "gboolean",
                                        "@c:type": "gboolean"
                                    }
                                },
                                "parameters": {
                                    "parameter": [
                                        {
                                            "@name": "auth",
                                            "@transfer-ownership": "none",
                                            "doc": {
                                                "@xml:space": "preserve",
                                                "@filename": "../libsoup/auth/soup-auth.c",
                                                "@line": "576",
                                                "#text": "a #SoupAuth"
                                            },
                                            "type": {
                                                "@name": "Auth",
                                                "@c:type": "SoupAuth*"
                                            }
                                        },
                                        {
                                            "@name": "msg",
                                            "@transfer-ownership": "none",
                                            "doc": {
                                                "@xml:space": "preserve",
                                                "@filename": "../libsoup/auth/soup-auth.c",
                                                "@line": "577",
                                                "#text": "a #SoupMessage"
                                            },
                                            "type": {
                                                "@name": "Message",
                                                "@c:type": "SoupMessage*"
                                            }
                                        }
                                    ]
                                }
                            }
                        },
                        {
                            "@name": "can_authenticate",
                            "callback": {
                                "@name": "can_authenticate",
                                "source-position": {
                                    "@filename": "../libsoup/auth/soup-auth.h",
                                    "@line": "41"
                                },
                                "return-value": {
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../libsoup/auth/soup-auth.c",
                                        "@line": "614",
                                        "#text": "%TRUE if @auth is able to accept credentials."
                                    },
                                    "type": {
                                        "@name": "gboolean",
                                        "@c:type": "gboolean"
                                    }
                                },
                                "parameters": {
                                    "parameter": {
                                        "@name": "auth",
                                        "@transfer-ownership": "none",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "../libsoup/auth/soup-auth.c",
                                            "@line": "609",
                                            "#text": "a #SoupAuth"
                                        },
                                        "type": {
                                            "@name": "Auth",
                                            "@c:type": "SoupAuth*"
                                        }
                                    }
                                }
                            }
                        },
                        {
                            "@name": "padding",
                            "array": {
                                "@zero-terminated": "0",
                                "@fixed-size": "6",
                                "type": {
                                    "@name": "gpointer",
                                    "@c:type": "gpointer"
                                }
                            }
                        }
                    ]
                },
                {
                    "@name": "AuthDomainBasicClass",
                    "@c:type": "SoupAuthDomainBasicClass",
                    "@glib:is-gtype-struct-for": "AuthDomainBasic",
                    "source-position": {
                        "@filename": "../libsoup/server/soup-auth-domain-basic.h",
                        "@line": "14"
                    },
                    "field": {
                        "@name": "parent_class",
                        "type": {
                            "@name": "AuthDomainClass",
                            "@c:type": "SoupAuthDomainClass"
                        }
                    }
                },
                {
                    "@name": "AuthDomainClass",
                    "@c:type": "SoupAuthDomainClass",
                    "@glib:is-gtype-struct-for": "AuthDomain",
                    "source-position": {
                        "@filename": "../libsoup/server/soup-auth-domain.h",
                        "@line": "29"
                    },
                    "field": [
                        {
                            "@name": "parent_class",
                            "type": {
                                "@name": "GObject.ObjectClass",
                                "@c:type": "GObjectClass"
                            }
                        },
                        {
                            "@name": "accepts",
                            "callback": {
                                "@name": "accepts",
                                "source-position": {
                                    "@filename": "../libsoup/server/soup-auth-domain.h",
                                    "@line": "19"
                                },
                                "return-value": {
                                    "@transfer-ownership": "full",
                                    "type": {
                                        "@name": "utf8",
                                        "@c:type": "char*"
                                    }
                                },
                                "parameters": {
                                    "parameter": [
                                        {
                                            "@name": "domain",
                                            "@transfer-ownership": "none",
                                            "type": {
                                                "@name": "AuthDomain",
                                                "@c:type": "SoupAuthDomain*"
                                            }
                                        },
                                        {
                                            "@name": "msg",
                                            "@transfer-ownership": "none",
                                            "type": {
                                                "@name": "ServerMessage",
                                                "@c:type": "SoupServerMessage*"
                                            }
                                        },
                                        {
                                            "@name": "header",
                                            "@transfer-ownership": "none",
                                            "type": {
                                                "@name": "utf8",
                                                "@c:type": "const char*"
                                            }
                                        }
                                    ]
                                }
                            }
                        },
                        {
                            "@name": "challenge",
                            "callback": {
                                "@name": "challenge",
                                "source-position": {
                                    "@filename": "../libsoup/server/soup-auth-domain.h",
                                    "@line": "22"
                                },
                                "return-value": {
                                    "@transfer-ownership": "full",
                                    "type": {
                                        "@name": "utf8",
                                        "@c:type": "char*"
                                    }
                                },
                                "parameters": {
                                    "parameter": [
                                        {
                                            "@name": "domain",
                                            "@transfer-ownership": "none",
                                            "doc": {
                                                "@xml:space": "preserve",
                                                "@filename": "../libsoup/server/soup-auth-domain.c",
                                                "@line": "558",
                                                "#text": "a #SoupAuthDomain"
                                            },
                                            "type": {
                                                "@name": "AuthDomain",
                                                "@c:type": "SoupAuthDomain*"
                                            }
                                        },
                                        {
                                            "@name": "msg",
                                            "@transfer-ownership": "none",
                                            "doc": {
                                                "@xml:space": "preserve",
                                                "@filename": "../libsoup/server/soup-auth-domain.c",
                                                "@line": "559",
                                                "#text": "a #SoupServerMessage"
                                            },
                                            "type": {
                                                "@name": "ServerMessage",
                                                "@c:type": "SoupServerMessage*"
                                            }
                                        }
                                    ]
                                }
                            }
                        },
                        {
                            "@name": "check_password",
                            "callback": {
                                "@name": "check_password",
                                "source-position": {
                                    "@filename": "../libsoup/server/soup-auth-domain.h",
                                    "@line": "24"
                                },
                                "return-value": {
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../libsoup/server/soup-auth-domain.c",
                                        "@line": "475",
                                        "#text": "whether or not the message is authenticated"
                                    },
                                    "type": {
                                        "@name": "gboolean",
                                        "@c:type": "gboolean"
                                    }
                                },
                                "parameters": {
                                    "parameter": [
                                        {
                                            "@name": "domain",
                                            "@transfer-ownership": "none",
                                            "doc": {
                                                "@xml:space": "preserve",
                                                "@filename": "../libsoup/server/soup-auth-domain.c",
                                                "@line": "464",
                                                "#text": "a #SoupAuthDomain"
                                            },
                                            "type": {
                                                "@name": "AuthDomain",
                                                "@c:type": "SoupAuthDomain*"
                                            }
                                        },
                                        {
                                            "@name": "msg",
                                            "@transfer-ownership": "none",
                                            "doc": {
                                                "@xml:space": "preserve",
                                                "@filename": "../libsoup/server/soup-auth-domain.c",
                                                "@line": "465",
                                                "#text": "a #SoupServerMessage"
                                            },
                                            "type": {
                                                "@name": "ServerMessage",
                                                "@c:type": "SoupServerMessage*"
                                            }
                                        },
                                        {
                                            "@name": "username",
                                            "@transfer-ownership": "none",
                                            "doc": {
                                                "@xml:space": "preserve",
                                                "@filename": "../libsoup/server/soup-auth-domain.c",
                                                "@line": "466",
                                                "#text": "a username"
                                            },
                                            "type": {
                                                "@name": "utf8",
                                                "@c:type": "const char*"
                                            }
                                        },
                                        {
                                            "@name": "password",
                                            "@transfer-ownership": "none",
                                            "doc": {
                                                "@xml:space": "preserve",
                                                "@filename": "../libsoup/server/soup-auth-domain.c",
                                                "@line": "467",
                                                "#text": "a password"
                                            },
                                            "type": {
                                                "@name": "utf8",
                                                "@c:type": "const char*"
                                            }
                                        }
                                    ]
                                }
                            }
                        },
                        {
                            "@name": "padding",
                            "array": {
                                "@zero-terminated": "0",
                                "@fixed-size": "6",
                                "type": {
                                    "@name": "gpointer",
                                    "@c:type": "gpointer"
                                }
                            }
                        }
                    ]
                },
                {
                    "@name": "AuthDomainDigestClass",
                    "@c:type": "SoupAuthDomainDigestClass",
                    "@glib:is-gtype-struct-for": "AuthDomainDigest",
                    "source-position": {
                        "@filename": "../libsoup/server/soup-auth-domain-digest.h",
                        "@line": "14"
                    },
                    "field": {
                        "@name": "parent_class",
                        "type": {
                            "@name": "AuthDomainClass",
                            "@c:type": "SoupAuthDomainClass"
                        }
                    }
                },
                {
                    "@name": "AuthManagerClass",
                    "@c:type": "SoupAuthManagerClass",
                    "@glib:is-gtype-struct-for": "AuthManager",
                    "source-position": {
                        "@filename": "../libsoup/auth/soup-auth-manager.h",
                        "@line": "15"
                    },
                    "field": {
                        "@name": "parent_class",
                        "type": {
                            "@name": "GObject.ObjectClass",
                            "@c:type": "GObjectClass"
                        }
                    }
                },
                {
                    "@name": "CacheClass",
                    "@c:type": "SoupCacheClass",
                    "@glib:is-gtype-struct-for": "Cache",
                    "source-position": {
                        "@filename": "../libsoup/cache/soup-cache.h",
                        "@line": "52"
                    },
                    "field": [
                        {
                            "@name": "parent_class",
                            "type": {
                                "@name": "GObject.ObjectClass",
                                "@c:type": "GObjectClass"
                            }
                        },
                        {
                            "@name": "get_cacheability",
                            "callback": {
                                "@name": "get_cacheability",
                                "source-position": {
                                    "@filename": "../libsoup/cache/soup-cache.h",
                                    "@line": "49"
                                },
                                "return-value": {
                                    "@transfer-ownership": "none",
                                    "type": {
                                        "@name": "Cacheability",
                                        "@c:type": "SoupCacheability"
                                    }
                                },
                                "parameters": {
                                    "parameter": [
                                        {
                                            "@name": "cache",
                                            "@transfer-ownership": "none",
                                            "type": {
                                                "@name": "Cache",
                                                "@c:type": "SoupCache*"
                                            }
                                        },
                                        {
                                            "@name": "msg",
                                            "@transfer-ownership": "none",
                                            "type": {
                                                "@name": "Message",
                                                "@c:type": "SoupMessage*"
                                            }
                                        }
                                    ]
                                }
                            }
                        },
                        {
                            "@name": "padding",
                            "array": {
                                "@zero-terminated": "0",
                                "@fixed-size": "4",
                                "type": {
                                    "@name": "gpointer",
                                    "@c:type": "gpointer"
                                }
                            }
                        }
                    ]
                },
                {
                    "@name": "ContentDecoderClass",
                    "@c:type": "SoupContentDecoderClass",
                    "@glib:is-gtype-struct-for": "ContentDecoder",
                    "source-position": {
                        "@filename": "../libsoup/content-decoder/soup-content-decoder.h",
                        "@line": "15"
                    },
                    "field": {
                        "@name": "parent_class",
                        "type": {
                            "@name": "GObject.ObjectClass",
                            "@c:type": "GObjectClass"
                        }
                    }
                },
                {
                    "@name": "ContentSnifferClass",
                    "@c:type": "SoupContentSnifferClass",
                    "@glib:is-gtype-struct-for": "ContentSniffer",
                    "source-position": {
                        "@filename": "../libsoup/content-sniffer/soup-content-sniffer.h",
                        "@line": "15"
                    },
                    "field": {
                        "@name": "parent_class",
                        "type": {
                            "@name": "GObject.ObjectClass",
                            "@c:type": "GObjectClass"
                        }
                    }
                },
                {
                    "@name": "Cookie",
                    "@c:type": "SoupCookie",
                    "@glib:type-name": "SoupCookie",
                    "@glib:get-type": "soup_cookie_get_type",
                    "@c:symbol-prefix": "cookie",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "../libsoup/cookies/soup-cookie.c",
                        "@line": "22",
                        "#text": "Implements HTTP cookies, as described by\n[RFC 6265](http://tools.ietf.org/html/rfc6265.txt).\n\nTo have a [class@Session] handle cookies for your appliction\nautomatically, use a [class@CookieJar].\n\n@name and @value will be set for all cookies. If the cookie is\ngenerated from a string that appears to have no name, then @name\nwill be the empty string.\n\n@domain and @path give the host or domain, and path within that\nhost/domain, to restrict this cookie to. If @domain starts with\n\".\", that indicates a domain (which matches the string after the\n\".\", or any hostname that has @domain as a suffix). Otherwise, it\nis a hostname and must match exactly.\n\n@expires will be non-%NULL if the cookie uses either the original\n\"expires\" attribute, or the newer \"max-age\" attribute. If @expires\nis %NULL, it indicates that neither \"expires\" nor \"max-age\" was\nspecified, and the cookie expires at the end of the session.\n\nIf @http_only is set, the cookie should not be exposed to untrusted\ncode (eg, javascript), so as to minimize the danger posed by\ncross-site scripting attacks."
                    },
                    "source-position": {
                        "@filename": "../libsoup/soup-types.h",
                        "@line": "20"
                    },
                    "constructor": {
                        "@name": "new",
                        "@c:identifier": "soup_cookie_new",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "../libsoup/cookies/soup-cookie.c",
                            "@line": "334",
                            "#text": "Creates a new #SoupCookie with the given attributes.\n\nUse [method@Cookie.set_secure] and [method@Cookie.set_http_only] if you\nneed to set those attributes on the returned cookie.\n\nIf @domain starts with \".\", that indicates a domain (which matches\nthe string after the \".\", or any hostname that has @domain as a\nsuffix). Otherwise, it is a hostname and must match exactly.\n\n@max_age is used to set the \"expires\" attribute on the cookie; pass\n-1 to not include the attribute (indicating that the cookie expires\nwith the current session), 0 for an already-expired cookie, or a\nlifetime in seconds. You can use the constants\n%SOUP_COOKIE_MAX_AGE_ONE_HOUR, %SOUP_COOKIE_MAX_AGE_ONE_DAY,\n%SOUP_COOKIE_MAX_AGE_ONE_WEEK and %SOUP_COOKIE_MAX_AGE_ONE_YEAR (or\nmultiples thereof) to calculate this value. (If you really care\nabout setting the exact time that the cookie will expire, use\n[method@Cookie.set_expires].)"
                        },
                        "source-position": {
                            "@filename": "../libsoup/cookies/soup-cookie.h",
                            "@line": "38"
                        },
                        "return-value": {
                            "@transfer-ownership": "full",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../libsoup/cookies/soup-cookie.c",
                                "@line": "361",
                                "#text": "a new #SoupCookie."
                            },
                            "type": {
                                "@name": "Cookie",
                                "@c:type": "SoupCookie*"
                            }
                        },
                        "parameters": {
                            "parameter": [
                                {
                                    "@name": "name",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../libsoup/cookies/soup-cookie.c",
                                        "@line": "336",
                                        "#text": "cookie name"
                                    },
                                    "type": {
                                        "@name": "utf8",
                                        "@c:type": "const char*"
                                    }
                                },
                                {
                                    "@name": "value",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../libsoup/cookies/soup-cookie.c",
                                        "@line": "337",
                                        "#text": "cookie value"
                                    },
                                    "type": {
                                        "@name": "utf8",
                                        "@c:type": "const char*"
                                    }
                                },
                                {
                                    "@name": "domain",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../libsoup/cookies/soup-cookie.c",
                                        "@line": "338",
                                        "#text": "cookie domain or hostname"
                                    },
                                    "type": {
                                        "@name": "utf8",
                                        "@c:type": "const char*"
                                    }
                                },
                                {
                                    "@name": "path",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../libsoup/cookies/soup-cookie.c",
                                        "@line": "339",
                                        "#text": "cookie path, or %NULL"
                                    },
                                    "type": {
                                        "@name": "utf8",
                                        "@c:type": "const char*"
                                    }
                                },
                                {
                                    "@name": "max_age",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../libsoup/cookies/soup-cookie.c",
                                        "@line": "340",
                                        "#text": "max age of the cookie, or -1 for a session cookie"
                                    },
                                    "type": {
                                        "@name": "gint",
                                        "@c:type": "int"
                                    }
                                }
                            ]
                        }
                    },
                    "method": [
                        {
                            "@name": "applies_to_uri",
                            "@c:identifier": "soup_cookie_applies_to_uri",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../libsoup/cookies/soup-cookie.c",
                                "@line": "1019",
                                "#text": "Tests if @cookie should be sent to @uri.\n\n(At the moment, this does not check that @cookie's domain matches\n@uri, because it assumes that the caller has already done that.\nBut don't rely on that; it may change in the future.)"
                            },
                            "source-position": {
                                "@filename": "../libsoup/cookies/soup-cookie.h",
                                "@line": "100"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "../libsoup/cookies/soup-cookie.c",
                                    "@line": "1030",
                                    "#text": "%TRUE if @cookie should be sent to @uri, %FALSE if not"
                                },
                                "type": {
                                    "@name": "gboolean",
                                    "@c:type": "gboolean"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "cookie",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../libsoup/cookies/soup-cookie.c",
                                        "@line": "1021",
                                        "#text": "a #SoupCookie"
                                    },
                                    "type": {
                                        "@name": "Cookie",
                                        "@c:type": "SoupCookie*"
                                    }
                                },
                                "parameter": {
                                    "@name": "uri",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../libsoup/cookies/soup-cookie.c",
                                        "@line": "1022",
                                        "#text": "a #GUri"
                                    },
                                    "type": {
                                        "@name": "GLib.Uri",
                                        "@c:type": "GUri*"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "copy",
                            "@c:identifier": "soup_cookie_copy",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../libsoup/cookies/soup-cookie.c",
                                "@line": "63",
                                "#text": "Copies @cookie."
                            },
                            "source-position": {
                                "@filename": "../libsoup/cookies/soup-cookie.h",
                                "@line": "47"
                            },
                            "return-value": {
                                "@transfer-ownership": "full",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "../libsoup/cookies/soup-cookie.c",
                                    "@line": "69",
                                    "#text": "a copy of @cookie"
                                },
                                "type": {
                                    "@name": "Cookie",
                                    "@c:type": "SoupCookie*"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "cookie",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../libsoup/cookies/soup-cookie.c",
                                        "@line": "65",
                                        "#text": "a #SoupCookie"
                                    },
                                    "type": {
                                        "@name": "Cookie",
                                        "@c:type": "SoupCookie*"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "domain_matches",
                            "@c:identifier": "soup_cookie_domain_matches",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../libsoup/cookies/soup-cookie.c",
                                "@line": "89",
                                "#text": "Checks if the @cookie's domain and @host match.\n\nThe domains match if @cookie should be sent when making a request to @host,\nor that @cookie should be accepted when receiving a response from @host."
                            },
                            "source-position": {
                                "@filename": "../libsoup/cookies/soup-cookie.h",
                                "@line": "128"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "../libsoup/cookies/soup-cookie.c",
                                    "@line": "99",
                                    "#text": "%TRUE if the domains match, %FALSE otherwise"
                                },
                                "type": {
                                    "@name": "gboolean",
                                    "@c:type": "gboolean"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "cookie",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../libsoup/cookies/soup-cookie.c",
                                        "@line": "91",
                                        "#text": "a #SoupCookie"
                                    },
                                    "type": {
                                        "@name": "Cookie",
                                        "@c:type": "SoupCookie*"
                                    }
                                },
                                "parameter": {
                                    "@name": "host",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../libsoup/cookies/soup-cookie.c",
                                        "@line": "92",
                                        "#text": "a URI"
                                    },
                                    "type": {
                                        "@name": "utf8",
                                        "@c:type": "const char*"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "equal",
                            "@c:identifier": "soup_cookie_equal",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../libsoup/cookies/soup-cookie.c",
                                "@line": "1063",
                                "#text": "Tests if @cookie1 and @cookie2 are equal.\n\nNote that currently, this does not check that the cookie domains\nmatch. This may change in the future."
                            },
                            "source-position": {
                                "@filename": "../libsoup/cookies/soup-cookie.h",
                                "@line": "103"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "../libsoup/cookies/soup-cookie.c",
                                    "@line": "1073",
                                    "#text": "whether the cookies are equal."
                                },
                                "type": {
                                    "@name": "gboolean",
                                    "@c:type": "gboolean"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "cookie1",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../libsoup/cookies/soup-cookie.c",
                                        "@line": "1065",
                                        "#text": "a #SoupCookie"
                                    },
                                    "type": {
                                        "@name": "Cookie",
                                        "@c:type": "SoupCookie*"
                                    }
                                },
                                "parameter": {
                                    "@name": "cookie2",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../libsoup/cookies/soup-cookie.c",
                                        "@line": "1066",
                                        "#text": "a #SoupCookie"
                                    },
                                    "type": {
                                        "@name": "Cookie",
                                        "@c:type": "SoupCookie*"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "free",
                            "@c:identifier": "soup_cookie_free",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../libsoup/cookies/soup-cookie.c",
                                "@line": "823",
                                "#text": "Frees @cookie."
                            },
                            "source-position": {
                                "@filename": "../libsoup/cookies/soup-cookie.h",
                                "@line": "107"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "type": {
                                    "@name": "none",
                                    "@c:type": "void"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "cookie",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../libsoup/cookies/soup-cookie.c",
                                        "@line": "825",
                                        "#text": "a #SoupCookie"
                                    },
                                    "type": {
                                        "@name": "Cookie",
                                        "@c:type": "SoupCookie*"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "get_domain",
                            "@c:identifier": "soup_cookie_get_domain",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../libsoup/cookies/soup-cookie.c",
                                "@line": "468",
                                "#text": "Gets @cookie's domain."
                            },
                            "source-position": {
                                "@filename": "../libsoup/cookies/soup-cookie.h",
                                "@line": "60"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "../libsoup/cookies/soup-cookie.c",
                                    "@line": "474",
                                    "#text": "@cookie's domain"
                                },
                                "type": {
                                    "@name": "utf8",
                                    "@c:type": "const char*"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "cookie",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../libsoup/cookies/soup-cookie.c",
                                        "@line": "470",
                                        "#text": "a #SoupCookie"
                                    },
                                    "type": {
                                        "@name": "Cookie",
                                        "@c:type": "SoupCookie*"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "get_expires",
                            "@c:identifier": "soup_cookie_get_expires",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../libsoup/cookies/soup-cookie.c",
                                "@line": "590",
                                "#text": "Gets @cookie's expiration time."
                            },
                            "source-position": {
                                "@filename": "../libsoup/cookies/soup-cookie.h",
                                "@line": "73"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "@nullable": "1",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "../libsoup/cookies/soup-cookie.c",
                                    "@line": "596",
                                    "#text": "@cookie's expiration time, which is\n  owned by @cookie and should not be modified or freed."
                                },
                                "type": {
                                    "@name": "GLib.DateTime",
                                    "@c:type": "GDateTime*"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "cookie",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../libsoup/cookies/soup-cookie.c",
                                        "@line": "592",
                                        "#text": "a #GDateTime"
                                    },
                                    "type": {
                                        "@name": "Cookie",
                                        "@c:type": "SoupCookie*"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "get_http_only",
                            "@c:identifier": "soup_cookie_get_http_only",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../libsoup/cookies/soup-cookie.c",
                                "@line": "659",
                                "#text": "Gets @cookie's HttpOnly attribute."
                            },
                            "source-position": {
                                "@filename": "../libsoup/cookies/soup-cookie.h",
                                "@line": "83"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "../libsoup/cookies/soup-cookie.c",
                                    "@line": "665",
                                    "#text": "@cookie's HttpOnly attribute"
                                },
                                "type": {
                                    "@name": "gboolean",
                                    "@c:type": "gboolean"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "cookie",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../libsoup/cookies/soup-cookie.c",
                                        "@line": "661",
                                        "#text": "a #SoupCookie"
                                    },
                                    "type": {
                                        "@name": "Cookie",
                                        "@c:type": "SoupCookie*"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "get_name",
                            "@c:identifier": "soup_cookie_get_name",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../libsoup/cookies/soup-cookie.c",
                                "@line": "412",
                                "#text": "Gets @cookie's name."
                            },
                            "source-position": {
                                "@filename": "../libsoup/cookies/soup-cookie.h",
                                "@line": "50"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "../libsoup/cookies/soup-cookie.c",
                                    "@line": "418",
                                    "#text": "@cookie's name"
                                },
                                "type": {
                                    "@name": "utf8",
                                    "@c:type": "const char*"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "cookie",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../libsoup/cookies/soup-cookie.c",
                                        "@line": "414",
                                        "#text": "a #SoupCookie"
                                    },
                                    "type": {
                                        "@name": "Cookie",
                                        "@c:type": "SoupCookie*"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "get_path",
                            "@c:identifier": "soup_cookie_get_path",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../libsoup/cookies/soup-cookie.c",
                                "@line": "496",
                                "#text": "Gets @cookie's path."
                            },
                            "source-position": {
                                "@filename": "../libsoup/cookies/soup-cookie.h",
                                "@line": "65"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "../libsoup/cookies/soup-cookie.c",
                                    "@line": "502",
                                    "#text": "@cookie's path"
                                },
                                "type": {
                                    "@name": "utf8",
                                    "@c:type": "const char*"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "cookie",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../libsoup/cookies/soup-cookie.c",
                                        "@line": "498",
                                        "#text": "a #SoupCookie"
                                    },
                                    "type": {
                                        "@name": "Cookie",
                                        "@c:type": "SoupCookie*"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "get_same_site_policy",
                            "@c:identifier": "soup_cookie_get_same_site_policy",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../libsoup/cookies/soup-cookie.c",
                                "@line": "772",
                                "#text": "Returns the same-site policy for this cookie."
                            },
                            "source-position": {
                                "@filename": "../libsoup/cookies/soup-cookie.h",
                                "@line": "92"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "../libsoup/cookies/soup-cookie.c",
                                    "@line": "778",
                                    "#text": "a #SoupSameSitePolicy"
                                },
                                "type": {
                                    "@name": "SameSitePolicy",
                                    "@c:type": "SoupSameSitePolicy"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "cookie",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../libsoup/cookies/soup-cookie.c",
                                        "@line": "774",
                                        "#text": "a #SoupCookie"
                                    },
                                    "type": {
                                        "@name": "Cookie",
                                        "@c:type": "SoupCookie*"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "get_secure",
                            "@c:identifier": "soup_cookie_get_secure",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../libsoup/cookies/soup-cookie.c",
                                "@line": "629",
                                "#text": "Gets @cookie's secure attribute."
                            },
                            "source-position": {
                                "@filename": "../libsoup/cookies/soup-cookie.h",
                                "@line": "78"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "../libsoup/cookies/soup-cookie.c",
                                    "@line": "635",
                                    "#text": "@cookie's secure attribute"
                                },
                                "type": {
                                    "@name": "gboolean",
                                    "@c:type": "gboolean"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "cookie",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../libsoup/cookies/soup-cookie.c",
                                        "@line": "631",
                                        "#text": "a #SoupCookie"
                                    },
                                    "type": {
                                        "@name": "Cookie",
                                        "@c:type": "SoupCookie*"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "get_value",
                            "@c:identifier": "soup_cookie_get_value",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../libsoup/cookies/soup-cookie.c",
                                "@line": "440",
                                "#text": "Gets @cookie's value."
                            },
                            "source-position": {
                                "@filename": "../libsoup/cookies/soup-cookie.h",
                                "@line": "55"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "../libsoup/cookies/soup-cookie.c",
                                    "@line": "446",
                                    "#text": "@cookie's value"
                                },
                                "type": {
                                    "@name": "utf8",
                                    "@c:type": "const char*"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "cookie",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../libsoup/cookies/soup-cookie.c",
                                        "@line": "442",
                                        "#text": "a #SoupCookie"
                                    },
                                    "type": {
                                        "@name": "Cookie",
                                        "@c:type": "SoupCookie*"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "set_domain",
                            "@c:identifier": "soup_cookie_set_domain",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../libsoup/cookies/soup-cookie.c",
                                "@line": "482",
                                "#text": "Sets @cookie's domain to @domain."
                            },
                            "source-position": {
                                "@filename": "../libsoup/cookies/soup-cookie.h",
                                "@line": "62"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "type": {
                                    "@name": "none",
                                    "@c:type": "void"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "cookie",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../libsoup/cookies/soup-cookie.c",
                                        "@line": "484",
                                        "#text": "a #SoupCookie"
                                    },
                                    "type": {
                                        "@name": "Cookie",
                                        "@c:type": "SoupCookie*"
                                    }
                                },
                                "parameter": {
                                    "@name": "domain",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../libsoup/cookies/soup-cookie.c",
                                        "@line": "485",
                                        "#text": "the new domain"
                                    },
                                    "type": {
                                        "@name": "utf8",
                                        "@c:type": "const char*"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "set_expires",
                            "@c:identifier": "soup_cookie_set_expires",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../libsoup/cookies/soup-cookie.c",
                                "@line": "605",
                                "#text": "Sets @cookie's expiration time to @expires.\n\nIf @expires is %NULL, @cookie will be a session cookie and will expire at the\nend of the client's session.\n\n(This sets the same property as [method@Cookie.set_max_age].)"
                            },
                            "source-position": {
                                "@filename": "../libsoup/cookies/soup-cookie.h",
                                "@line": "75"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "type": {
                                    "@name": "none",
                                    "@c:type": "void"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "cookie",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../libsoup/cookies/soup-cookie.c",
                                        "@line": "607",
                                        "#text": "a #SoupCookie"
                                    },
                                    "type": {
                                        "@name": "Cookie",
                                        "@c:type": "SoupCookie*"
                                    }
                                },
                                "parameter": {
                                    "@name": "expires",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../libsoup/cookies/soup-cookie.c",
                                        "@line": "608",
                                        "#text": "the new expiration time, or %NULL"
                                    },
                                    "type": {
                                        "@name": "GLib.DateTime",
                                        "@c:type": "GDateTime*"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "set_http_only",
                            "@c:identifier": "soup_cookie_set_http_only",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../libsoup/cookies/soup-cookie.c",
                                "@line": "673",
                                "#text": "Sets @cookie's HttpOnly attribute to @http_only.\n\nIf %TRUE, @cookie will be marked as \"http only\", meaning it should not be\nexposed to web page scripts or other untrusted code."
                            },
                            "source-position": {
                                "@filename": "../libsoup/cookies/soup-cookie.h",
                                "@line": "85"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "type": {
                                    "@name": "none",
                                    "@c:type": "void"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "cookie",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../libsoup/cookies/soup-cookie.c",
                                        "@line": "675",
                                        "#text": "a #SoupCookie"
                                    },
                                    "type": {
                                        "@name": "Cookie",
                                        "@c:type": "SoupCookie*"
                                    }
                                },
                                "parameter": {
                                    "@name": "http_only",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../libsoup/cookies/soup-cookie.c",
                                        "@line": "676",
                                        "#text": "the new value for the HttpOnly attribute"
                                    },
                                    "type": {
                                        "@name": "gboolean",
                                        "@c:type": "gboolean"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "set_max_age",
                            "@c:identifier": "soup_cookie_set_max_age",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../libsoup/cookies/soup-cookie.c",
                                "@line": "524",
                                "#text": "Sets @cookie's max age to @max_age.\n\nIf @max_age is -1, the cookie is a session cookie, and will expire at the end\nof the client's session. Otherwise, it is the number of seconds until the\ncookie expires. You can use the constants %SOUP_COOKIE_MAX_AGE_ONE_HOUR,\n%SOUP_COOKIE_MAX_AGE_ONE_DAY, %SOUP_COOKIE_MAX_AGE_ONE_WEEK and\n%SOUP_COOKIE_MAX_AGE_ONE_YEAR (or multiples thereof) to calculate this value.\n(A value of 0 indicates that the cookie should be considered\nalready-expired.)\n\nThis sets the same property as [method@Cookie.set_expires]."
                            },
                            "source-position": {
                                "@filename": "../libsoup/cookies/soup-cookie.h",
                                "@line": "70"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "type": {
                                    "@name": "none",
                                    "@c:type": "void"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "cookie",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../libsoup/cookies/soup-cookie.c",
                                        "@line": "526",
                                        "#text": "a #SoupCookie"
                                    },
                                    "type": {
                                        "@name": "Cookie",
                                        "@c:type": "SoupCookie*"
                                    }
                                },
                                "parameter": {
                                    "@name": "max_age",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../libsoup/cookies/soup-cookie.c",
                                        "@line": "527",
                                        "#text": "the new max age"
                                    },
                                    "type": {
                                        "@name": "gint",
                                        "@c:type": "int"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "set_name",
                            "@c:identifier": "soup_cookie_set_name",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../libsoup/cookies/soup-cookie.c",
                                "@line": "426",
                                "#text": "Sets @cookie's name to @name."
                            },
                            "source-position": {
                                "@filename": "../libsoup/cookies/soup-cookie.h",
                                "@line": "52"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "type": {
                                    "@name": "none",
                                    "@c:type": "void"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "cookie",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../libsoup/cookies/soup-cookie.c",
                                        "@line": "428",
                                        "#text": "a #SoupCookie"
                                    },
                                    "type": {
                                        "@name": "Cookie",
                                        "@c:type": "SoupCookie*"
                                    }
                                },
                                "parameter": {
                                    "@name": "name",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../libsoup/cookies/soup-cookie.c",
                                        "@line": "429",
                                        "#text": "the new name"
                                    },
                                    "type": {
                                        "@name": "utf8",
                                        "@c:type": "const char*"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "set_path",
                            "@c:identifier": "soup_cookie_set_path",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../libsoup/cookies/soup-cookie.c",
                                "@line": "510",
                                "#text": "Sets @cookie's path to @path."
                            },
                            "source-position": {
                                "@filename": "../libsoup/cookies/soup-cookie.h",
                                "@line": "67"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "type": {
                                    "@name": "none",
                                    "@c:type": "void"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "cookie",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../libsoup/cookies/soup-cookie.c",
                                        "@line": "512",
                                        "#text": "a #SoupCookie"
                                    },
                                    "type": {
                                        "@name": "Cookie",
                                        "@c:type": "SoupCookie*"
                                    }
                                },
                                "parameter": {
                                    "@name": "path",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../libsoup/cookies/soup-cookie.c",
                                        "@line": "513",
                                        "#text": "the new path"
                                    },
                                    "type": {
                                        "@name": "utf8",
                                        "@c:type": "const char*"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "set_same_site_policy",
                            "@c:identifier": "soup_cookie_set_same_site_policy",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../libsoup/cookies/soup-cookie.c",
                                "@line": "748",
                                "#text": "When used in conjunction with\n[method@CookieJar.get_cookie_list_with_same_site_info] this sets the policy\nof when this cookie should be exposed."
                            },
                            "source-position": {
                                "@filename": "../libsoup/cookies/soup-cookie.h",
                                "@line": "89"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "type": {
                                    "@name": "none",
                                    "@c:type": "void"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "cookie",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../libsoup/cookies/soup-cookie.c",
                                        "@line": "750",
                                        "#text": "a #SoupCookie"
                                    },
                                    "type": {
                                        "@name": "Cookie",
                                        "@c:type": "SoupCookie*"
                                    }
                                },
                                "parameter": {
                                    "@name": "policy",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../libsoup/cookies/soup-cookie.c",
                                        "@line": "751",
                                        "#text": "a #SoupSameSitePolicy"
                                    },
                                    "type": {
                                        "@name": "SameSitePolicy",
                                        "@c:type": "SoupSameSitePolicy"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "set_secure",
                            "@c:identifier": "soup_cookie_set_secure",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../libsoup/cookies/soup-cookie.c",
                                "@line": "643",
                                "#text": "Sets @cookie's secure attribute to @secure.\n\nIf %TRUE, @cookie will only be transmitted from the client to the server over\nsecure (https) connections."
                            },
                            "source-position": {
                                "@filename": "../libsoup/cookies/soup-cookie.h",
                                "@line": "80"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "type": {
                                    "@name": "none",
                                    "@c:type": "void"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "cookie",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../libsoup/cookies/soup-cookie.c",
                                        "@line": "645",
                                        "#text": "a #SoupCookie"
                                    },
                                    "type": {
                                        "@name": "Cookie",
                                        "@c:type": "SoupCookie*"
                                    }
                                },
                                "parameter": {
                                    "@name": "secure",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../libsoup/cookies/soup-cookie.c",
                                        "@line": "646",
                                        "#text": "the new value for the secure attribute"
                                    },
                                    "type": {
                                        "@name": "gboolean",
                                        "@c:type": "gboolean"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "set_value",
                            "@c:identifier": "soup_cookie_set_value",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../libsoup/cookies/soup-cookie.c",
                                "@line": "454",
                                "#text": "Sets @cookie's value to @value."
                            },
                            "source-position": {
                                "@filename": "../libsoup/cookies/soup-cookie.h",
                                "@line": "57"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "type": {
                                    "@name": "none",
                                    "@c:type": "void"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "cookie",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../libsoup/cookies/soup-cookie.c",
                                        "@line": "456",
                                        "#text": "a #SoupCookie"
                                    },
                                    "type": {
                                        "@name": "Cookie",
                                        "@c:type": "SoupCookie*"
                                    }
                                },
                                "parameter": {
                                    "@name": "value",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../libsoup/cookies/soup-cookie.c",
                                        "@line": "457",
                                        "#text": "the new value"
                                    },
                                    "type": {
                                        "@name": "utf8",
                                        "@c:type": "const char*"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "to_cookie_header",
                            "@c:identifier": "soup_cookie_to_cookie_header",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../libsoup/cookies/soup-cookie.c",
                                "@line": "805",
                                "#text": "Serializes @cookie in the format used by the Cookie header (ie, for\nreturning a cookie from a [class@Session] to a server)."
                            },
                            "source-position": {
                                "@filename": "../libsoup/cookies/soup-cookie.h",
                                "@line": "97"
                            },
                            "return-value": {
                                "@transfer-ownership": "full",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "../libsoup/cookies/soup-cookie.c",
                                    "@line": "812",
                                    "#text": "the header"
                                },
                                "type": {
                                    "@name": "utf8",
                                    "@c:type": "char*"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "cookie",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../libsoup/cookies/soup-cookie.c",
                                        "@line": "807",
                                        "#text": "a #SoupCookie"
                                    },
                                    "type": {
                                        "@name": "Cookie",
                                        "@c:type": "SoupCookie*"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "to_set_cookie_header",
                            "@c:identifier": "soup_cookie_to_set_cookie_header",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../libsoup/cookies/soup-cookie.c",
                                "@line": "786",
                                "#text": "Serializes @cookie in the format used by the Set-Cookie header.\n\ni.e. for sending a cookie from a [class@Server] to a client."
                            },
                            "source-position": {
                                "@filename": "../libsoup/cookies/soup-cookie.h",
                                "@line": "95"
                            },
                            "return-value": {
                                "@transfer-ownership": "full",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "../libsoup/cookies/soup-cookie.c",
                                    "@line": "794",
                                    "#text": "the header"
                                },
                                "type": {
                                    "@name": "utf8",
                                    "@c:type": "char*"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "cookie",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../libsoup/cookies/soup-cookie.c",
                                        "@line": "788",
                                        "#text": "a #SoupCookie"
                                    },
                                    "type": {
                                        "@name": "Cookie",
                                        "@c:type": "SoupCookie*"
                                    }
                                }
                            }
                        }
                    ],
                    "function": {
                        "@name": "parse",
                        "@c:identifier": "soup_cookie_parse",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "../libsoup/cookies/soup-cookie.c",
                            "@line": "383",
                            "#text": "Parses @header and returns a #SoupCookie.\n\nIf @header contains multiple cookies, only the first one will be parsed.\n\nIf @header does not have \"path\" or \"domain\" attributes, they will\nbe defaulted from @origin. If @origin is %NULL, path will default\nto \"/\", but domain will be left as %NULL. Note that this is not a\nvalid state for a #SoupCookie, and you will need to fill in some\nappropriate string for the domain if you want to actually make use\nof the cookie."
                        },
                        "source-position": {
                            "@filename": "../libsoup/cookies/soup-cookie.h",
                            "@line": "44"
                        },
                        "return-value": {
                            "@transfer-ownership": "full",
                            "@nullable": "1",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../libsoup/cookies/soup-cookie.c",
                                "@line": "399",
                                "#text": "a new #SoupCookie, or %NULL if it could\n  not be parsed, or contained an illegal \"domain\" attribute for a\n  cookie originating from @origin."
                            },
                            "type": {
                                "@name": "Cookie",
                                "@c:type": "SoupCookie*"
                            }
                        },
                        "parameters": {
                            "parameter": [
                                {
                                    "@name": "header",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../libsoup/cookies/soup-cookie.c",
                                        "@line": "385",
                                        "#text": "a cookie string (eg, the value of a Set-Cookie header)"
                                    },
                                    "type": {
                                        "@name": "utf8",
                                        "@c:type": "const char*"
                                    }
                                },
                                {
                                    "@name": "origin",
                                    "@transfer-ownership": "none",
                                    "@nullable": "1",
                                    "@allow-none": "1",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../libsoup/cookies/soup-cookie.c",
                                        "@line": "386",
                                        "#text": "origin of the cookie"
                                    },
                                    "type": {
                                        "@name": "GLib.Uri",
                                        "@c:type": "GUri*"
                                    }
                                }
                            ]
                        }
                    }
                },
                {
                    "@name": "CookieJarClass",
                    "@c:type": "SoupCookieJarClass",
                    "@glib:is-gtype-struct-for": "CookieJar",
                    "source-position": {
                        "@filename": "../libsoup/cookies/soup-cookie-jar.h",
                        "@line": "29"
                    },
                    "field": [
                        {
                            "@name": "parent_class",
                            "type": {
                                "@name": "GObject.ObjectClass",
                                "@c:type": "GObjectClass"
                            }
                        },
                        {
                            "@name": "save",
                            "callback": {
                                "@name": "save",
                                "source-position": {
                                    "@filename": "../libsoup/cookies/soup-cookie-jar.h",
                                    "@line": "19"
                                },
                                "return-value": {
                                    "@transfer-ownership": "none",
                                    "type": {
                                        "@name": "none",
                                        "@c:type": "void"
                                    }
                                },
                                "parameters": {
                                    "parameter": {
                                        "@name": "jar",
                                        "@transfer-ownership": "none",
                                        "type": {
                                            "@name": "CookieJar",
                                            "@c:type": "SoupCookieJar*"
                                        }
                                    }
                                }
                            }
                        },
                        {
                            "@name": "is_persistent",
                            "callback": {
                                "@name": "is_persistent",
                                "source-position": {
                                    "@filename": "../libsoup/cookies/soup-cookie-jar.h",
                                    "@line": "20"
                                },
                                "return-value": {
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../libsoup/cookies/soup-cookie-jar.c",
                                        "@line": "1046",
                                        "#text": "%TRUE if @jar storage is persistent or %FALSE otherwise."
                                    },
                                    "type": {
                                        "@name": "gboolean",
                                        "@c:type": "gboolean"
                                    }
                                },
                                "parameters": {
                                    "parameter": {
                                        "@name": "jar",
                                        "@transfer-ownership": "none",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "../libsoup/cookies/soup-cookie-jar.c",
                                            "@line": "1042",
                                            "#text": "a #SoupCookieJar"
                                        },
                                        "type": {
                                            "@name": "CookieJar",
                                            "@c:type": "SoupCookieJar*"
                                        }
                                    }
                                }
                            }
                        },
                        {
                            "@name": "changed",
                            "callback": {
                                "@name": "changed",
                                "source-position": {
                                    "@filename": "../libsoup/cookies/soup-cookie-jar.h",
                                    "@line": "23"
                                },
                                "return-value": {
                                    "@transfer-ownership": "none",
                                    "type": {
                                        "@name": "none",
                                        "@c:type": "void"
                                    }
                                },
                                "parameters": {
                                    "parameter": [
                                        {
                                            "@name": "jar",
                                            "@transfer-ownership": "none",
                                            "type": {
                                                "@name": "CookieJar",
                                                "@c:type": "SoupCookieJar*"
                                            }
                                        },
                                        {
                                            "@name": "old_cookie",
                                            "@transfer-ownership": "none",
                                            "type": {
                                                "@name": "Cookie",
                                                "@c:type": "SoupCookie*"
                                            }
                                        },
                                        {
                                            "@name": "new_cookie",
                                            "@transfer-ownership": "none",
                                            "type": {
                                                "@name": "Cookie",
                                                "@c:type": "SoupCookie*"
                                            }
                                        }
                                    ]
                                }
                            }
                        },
                        {
                            "@name": "padding",
                            "array": {
                                "@zero-terminated": "0",
                                "@fixed-size": "6",
                                "type": {
                                    "@name": "gpointer",
                                    "@c:type": "gpointer"
                                }
                            }
                        }
                    ]
                },
                {
                    "@name": "CookieJarDBClass",
                    "@c:type": "SoupCookieJarDBClass",
                    "@glib:is-gtype-struct-for": "CookieJarDB",
                    "source-position": {
                        "@filename": "../libsoup/cookies/soup-cookie-jar-db.h",
                        "@line": "14"
                    },
                    "field": {
                        "@name": "parent_class",
                        "type": {
                            "@name": "CookieJarClass",
                            "@c:type": "SoupCookieJarClass"
                        }
                    }
                },
                {
                    "@name": "CookieJarTextClass",
                    "@c:type": "SoupCookieJarTextClass",
                    "@glib:is-gtype-struct-for": "CookieJarText",
                    "source-position": {
                        "@filename": "../libsoup/cookies/soup-cookie-jar-text.h",
                        "@line": "14"
                    },
                    "field": {
                        "@name": "parent_class",
                        "type": {
                            "@name": "CookieJarClass",
                            "@c:type": "SoupCookieJarClass"
                        }
                    }
                },
                {
                    "@name": "HSTSEnforcerClass",
                    "@c:type": "SoupHSTSEnforcerClass",
                    "@glib:is-gtype-struct-for": "HSTSEnforcer",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "../libsoup/hsts/soup-hsts-enforcer.h",
                        "@line": "17",
                        "#text": "Class structure for #SoupHSTSEnforcer."
                    },
                    "source-position": {
                        "@filename": "../libsoup/hsts/soup-hsts-enforcer.h",
                        "@line": "44"
                    },
                    "field": [
                        {
                            "@name": "parent_class",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../libsoup/hsts/soup-hsts-enforcer.h",
                                "@line": "19",
                                "#text": "The parent class."
                            },
                            "type": {
                                "@name": "GObject.ObjectClass",
                                "@c:type": "GObjectClass"
                            }
                        },
                        {
                            "@name": "is_persistent",
                            "callback": {
                                "@name": "is_persistent",
                                "source-position": {
                                    "@filename": "../libsoup/hsts/soup-hsts-enforcer.h",
                                    "@line": "34"
                                },
                                "return-value": {
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../libsoup/hsts/soup-hsts-enforcer.c",
                                        "@line": "594",
                                        "#text": "%TRUE if @hsts_enforcer storage is persistent or %FALSE otherwise."
                                    },
                                    "type": {
                                        "@name": "gboolean",
                                        "@c:type": "gboolean"
                                    }
                                },
                                "parameters": {
                                    "parameter": {
                                        "@name": "hsts_enforcer",
                                        "@transfer-ownership": "none",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "../libsoup/hsts/soup-hsts-enforcer.c",
                                            "@line": "590",
                                            "#text": "a #SoupHSTSEnforcer"
                                        },
                                        "type": {
                                            "@name": "HSTSEnforcer",
                                            "@c:type": "SoupHSTSEnforcer*"
                                        }
                                    }
                                }
                            }
                        },
                        {
                            "@name": "has_valid_policy",
                            "callback": {
                                "@name": "has_valid_policy",
                                "source-position": {
                                    "@filename": "../libsoup/hsts/soup-hsts-enforcer.h",
                                    "@line": "35"
                                },
                                "return-value": {
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../libsoup/hsts/soup-hsts-enforcer.c",
                                        "@line": "611",
                                        "#text": "%TRUE if access to @domain should happen over HTTPS, false\n  otherwise."
                                    },
                                    "type": {
                                        "@name": "gboolean",
                                        "@c:type": "gboolean"
                                    }
                                },
                                "parameters": {
                                    "parameter": [
                                        {
                                            "@name": "hsts_enforcer",
                                            "@transfer-ownership": "none",
                                            "doc": {
                                                "@xml:space": "preserve",
                                                "@filename": "../libsoup/hsts/soup-hsts-enforcer.c",
                                                "@line": "606",
                                                "#text": "a #SoupHSTSEnforcer"
                                            },
                                            "type": {
                                                "@name": "HSTSEnforcer",
                                                "@c:type": "SoupHSTSEnforcer*"
                                            }
                                        },
                                        {
                                            "@name": "domain",
                                            "@transfer-ownership": "none",
                                            "doc": {
                                                "@xml:space": "preserve",
                                                "@filename": "../libsoup/hsts/soup-hsts-enforcer.c",
                                                "@line": "607",
                                                "#text": "a domain."
                                            },
                                            "type": {
                                                "@name": "utf8",
                                                "@c:type": "const char*"
                                            }
                                        }
                                    ]
                                }
                            }
                        },
                        {
                            "@name": "changed",
                            "callback": {
                                "@name": "changed",
                                "source-position": {
                                    "@filename": "../libsoup/hsts/soup-hsts-enforcer.h",
                                    "@line": "38"
                                },
                                "return-value": {
                                    "@transfer-ownership": "none",
                                    "type": {
                                        "@name": "none",
                                        "@c:type": "void"
                                    }
                                },
                                "parameters": {
                                    "parameter": [
                                        {
                                            "@name": "enforcer",
                                            "@transfer-ownership": "none",
                                            "type": {
                                                "@name": "HSTSEnforcer",
                                                "@c:type": "SoupHSTSEnforcer*"
                                            }
                                        },
                                        {
                                            "@name": "old_policy",
                                            "@transfer-ownership": "none",
                                            "type": {
                                                "@name": "HSTSPolicy",
                                                "@c:type": "SoupHSTSPolicy*"
                                            }
                                        },
                                        {
                                            "@name": "new_policy",
                                            "@transfer-ownership": "none",
                                            "type": {
                                                "@name": "HSTSPolicy",
                                                "@c:type": "SoupHSTSPolicy*"
                                            }
                                        }
                                    ]
                                }
                            }
                        },
                        {
                            "@name": "padding",
                            "@readable": "0",
                            "@private": "1",
                            "array": {
                                "@zero-terminated": "0",
                                "@fixed-size": "4",
                                "type": {
                                    "@name": "gpointer",
                                    "@c:type": "gpointer"
                                }
                            }
                        }
                    ]
                },
                {
                    "@name": "HSTSEnforcerDBClass",
                    "@c:type": "SoupHSTSEnforcerDBClass",
                    "@glib:is-gtype-struct-for": "HSTSEnforcerDB",
                    "source-position": {
                        "@filename": "../libsoup/hsts/soup-hsts-enforcer-db.h",
                        "@line": "15"
                    },
                    "field": {
                        "@name": "parent_class",
                        "type": {
                            "@name": "HSTSEnforcerClass",
                            "@c:type": "SoupHSTSEnforcerClass"
                        }
                    }
                },
                {
                    "@name": "HSTSPolicy",
                    "@c:type": "SoupHSTSPolicy",
                    "@glib:type-name": "SoupHSTSPolicy",
                    "@glib:get-type": "soup_hsts_policy_get_type",
                    "@c:symbol-prefix": "hsts_policy",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "../libsoup/hsts/soup-hsts-policy.c",
                        "@line": "21",
                        "#text": "#SoupHSTSPolicy implements HTTP policies, as described by\n[RFC 6797](http://tools.ietf.org/html/rfc6797).\n\n@domain represents the host that this policy applies to. The domain\nmust be IDNA-canonicalized. [ctor@HSTSPolicy.new] and related methods\nwill do this for you.\n\n@max_age contains the 'max-age' value from the Strict Transport\nSecurity header and indicates the time to live of this policy,\nin seconds.\n\n@expires will be non-%NULL if the policy has been set by the host and\nhence has an expiry time. If @expires is %NULL, it indicates that the\npolicy is a permanent session policy set by the user agent.\n\nIf @include_subdomains is %TRUE, the Strict Transport Security policy\nmust also be enforced on subdomains of @domain."
                    },
                    "source-position": {
                        "@filename": "../libsoup/soup-types.h",
                        "@line": "23"
                    },
                    "constructor": [
                        {
                            "@name": "new",
                            "@c:identifier": "soup_hsts_policy_new",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../libsoup/hsts/soup-hsts-policy.c",
                                "@line": "120",
                                "#text": "Creates a new #SoupHSTSPolicy with the given attributes.\n\n@domain is a domain on which the strict transport security policy\nrepresented by this object must be enforced.\n\n@max_age is used to set the \"expires\" attribute on the policy; pass\n%SOUP_HSTS_POLICY_MAX_AGE_PAST for an already-expired policy, or a\nlifetime in seconds.\n\nIf @include_subdomains is %TRUE, the strict transport security policy\nmust also be enforced on all subdomains of @domain."
                            },
                            "source-position": {
                                "@filename": "../libsoup/hsts/soup-hsts-policy.h",
                                "@line": "27"
                            },
                            "return-value": {
                                "@transfer-ownership": "full",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "../libsoup/hsts/soup-hsts-policy.c",
                                    "@line": "138",
                                    "#text": "a new #SoupHSTSPolicy."
                                },
                                "type": {
                                    "@name": "HSTSPolicy",
                                    "@c:type": "SoupHSTSPolicy*"
                                }
                            },
                            "parameters": {
                                "parameter": [
                                    {
                                        "@name": "domain",
                                        "@transfer-ownership": "none",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "../libsoup/hsts/soup-hsts-policy.c",
                                            "@line": "122",
                                            "#text": "policy domain or hostname"
                                        },
                                        "type": {
                                            "@name": "utf8",
                                            "@c:type": "const char*"
                                        }
                                    },
                                    {
                                        "@name": "max_age",
                                        "@transfer-ownership": "none",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "../libsoup/hsts/soup-hsts-policy.c",
                                            "@line": "123",
                                            "#text": "max age of the policy"
                                        },
                                        "type": {
                                            "@name": "gulong",
                                            "@c:type": "unsigned long"
                                        }
                                    },
                                    {
                                        "@name": "include_subdomains",
                                        "@transfer-ownership": "none",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "../libsoup/hsts/soup-hsts-policy.c",
                                            "@line": "124",
                                            "#text": "%TRUE if the policy applies on subdomains"
                                        },
                                        "type": {
                                            "@name": "gboolean",
                                            "@c:type": "gboolean"
                                        }
                                    }
                                ]
                            }
                        },
                        {
                            "@name": "new_from_response",
                            "@c:identifier": "soup_hsts_policy_new_from_response",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../libsoup/hsts/soup-hsts-policy.c",
                                "@line": "236",
                                "#text": "Parses @msg's first \"Strict-Transport-Security\" response header and\nreturns a #SoupHSTSPolicy."
                            },
                            "source-position": {
                                "@filename": "../libsoup/hsts/soup-hsts-policy.h",
                                "@line": "39"
                            },
                            "return-value": {
                                "@transfer-ownership": "full",
                                "@nullable": "1",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "../libsoup/hsts/soup-hsts-policy.c",
                                    "@line": "243",
                                    "#text": "a new #SoupHSTSPolicy, or %NULL if no valid\n  \"Strict-Transport-Security\" response header was found."
                                },
                                "type": {
                                    "@name": "HSTSPolicy",
                                    "@c:type": "SoupHSTSPolicy*"
                                }
                            },
                            "parameters": {
                                "parameter": {
                                    "@name": "msg",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../libsoup/hsts/soup-hsts-policy.c",
                                        "@line": "238",
                                        "#text": "a #SoupMessage"
                                    },
                                    "type": {
                                        "@name": "Message",
                                        "@c:type": "SoupMessage*"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "new_full",
                            "@c:identifier": "soup_hsts_policy_new_full",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../libsoup/hsts/soup-hsts-policy.c",
                                "@line": "161",
                                "#text": "Full version of [ctor@HSTSPolicy.new], to use with an existing\nexpiration date.\n\nSee [ctor@HSTSPolicy.new] for details."
                            },
                            "source-position": {
                                "@filename": "../libsoup/hsts/soup-hsts-policy.h",
                                "@line": "31"
                            },
                            "return-value": {
                                "@transfer-ownership": "full",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "../libsoup/hsts/soup-hsts-policy.c",
                                    "@line": "173",
                                    "#text": "a new #SoupHSTSPolicy."
                                },
                                "type": {
                                    "@name": "HSTSPolicy",
                                    "@c:type": "SoupHSTSPolicy*"
                                }
                            },
                            "parameters": {
                                "parameter": [
                                    {
                                        "@name": "domain",
                                        "@transfer-ownership": "none",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "../libsoup/hsts/soup-hsts-policy.c",
                                            "@line": "163",
                                            "#text": "policy domain or hostname"
                                        },
                                        "type": {
                                            "@name": "utf8",
                                            "@c:type": "const char*"
                                        }
                                    },
                                    {
                                        "@name": "max_age",
                                        "@transfer-ownership": "none",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "../libsoup/hsts/soup-hsts-policy.c",
                                            "@line": "164",
                                            "#text": "max age of the policy"
                                        },
                                        "type": {
                                            "@name": "gulong",
                                            "@c:type": "unsigned long"
                                        }
                                    },
                                    {
                                        "@name": "expires",
                                        "@transfer-ownership": "none",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "../libsoup/hsts/soup-hsts-policy.c",
                                            "@line": "165",
                                            "#text": "the date of expiration of the policy or %NULL for a permanent policy"
                                        },
                                        "type": {
                                            "@name": "GLib.DateTime",
                                            "@c:type": "GDateTime*"
                                        }
                                    },
                                    {
                                        "@name": "include_subdomains",
                                        "@transfer-ownership": "none",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "../libsoup/hsts/soup-hsts-policy.c",
                                            "@line": "166",
                                            "#text": "%TRUE if the policy applies on subdomains"
                                        },
                                        "type": {
                                            "@name": "gboolean",
                                            "@c:type": "gboolean"
                                        }
                                    }
                                ]
                            }
                        },
                        {
                            "@name": "new_session_policy",
                            "@c:identifier": "soup_hsts_policy_new_session_policy",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../libsoup/hsts/soup-hsts-policy.c",
                                "@line": "204",
                                "#text": "Creates a new session #SoupHSTSPolicy with the given attributes.\n\nA session policy is a policy that is valid during the lifetime of\nthe [class@HSTSEnforcer] it is added to. Contrary to regular policies,\nit has no expiration date and is not stored in persistent\nenforcers. These policies are useful for user-agent to load their\nown or user-defined rules.\n\n@domain is a domain on which the strict transport security policy\nrepresented by this object must be enforced.\n\nIf @include_subdomains is %TRUE, the strict transport security policy\nmust also be enforced on all subdomains of @domain."
                            },
                            "source-position": {
                                "@filename": "../libsoup/hsts/soup-hsts-policy.h",
                                "@line": "36"
                            },
                            "return-value": {
                                "@transfer-ownership": "full",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "../libsoup/hsts/soup-hsts-policy.c",
                                    "@line": "223",
                                    "#text": "a new #SoupHSTSPolicy."
                                },
                                "type": {
                                    "@name": "HSTSPolicy",
                                    "@c:type": "SoupHSTSPolicy*"
                                }
                            },
                            "parameters": {
                                "parameter": [
                                    {
                                        "@name": "domain",
                                        "@transfer-ownership": "none",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "../libsoup/hsts/soup-hsts-policy.c",
                                            "@line": "206",
                                            "#text": "policy domain or hostname"
                                        },
                                        "type": {
                                            "@name": "utf8",
                                            "@c:type": "const char*"
                                        }
                                    },
                                    {
                                        "@name": "include_subdomains",
                                        "@transfer-ownership": "none",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "../libsoup/hsts/soup-hsts-policy.c",
                                            "@line": "207",
                                            "#text": "%TRUE if the policy applies on sub domains"
                                        },
                                        "type": {
                                            "@name": "gboolean",
                                            "@c:type": "gboolean"
                                        }
                                    }
                                ]
                            }
                        }
                    ],
                    "method": [
                        {
                            "@name": "copy",
                            "@c:identifier": "soup_hsts_policy_copy",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../libsoup/hsts/soup-hsts-policy.c",
                                "@line": "52",
                                "#text": "Copies @policy."
                            },
                            "source-position": {
                                "@filename": "../libsoup/hsts/soup-hsts-policy.h",
                                "@line": "42"
                            },
                            "return-value": {
                                "@transfer-ownership": "full",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "../libsoup/hsts/soup-hsts-policy.c",
                                    "@line": "58",
                                    "#text": "a copy of @policy"
                                },
                                "type": {
                                    "@name": "HSTSPolicy",
                                    "@c:type": "SoupHSTSPolicy*"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "policy",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../libsoup/hsts/soup-hsts-policy.c",
                                        "@line": "54",
                                        "#text": "a #SoupHSTSPolicy"
                                    },
                                    "type": {
                                        "@name": "HSTSPolicy",
                                        "@c:type": "SoupHSTSPolicy*"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "equal",
                            "@c:identifier": "soup_hsts_policy_equal",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../libsoup/hsts/soup-hsts-policy.c",
                                "@line": "74",
                                "#text": "Tests if @policy1 and @policy2 are equal."
                            },
                            "source-position": {
                                "@filename": "../libsoup/hsts/soup-hsts-policy.h",
                                "@line": "44"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "../libsoup/hsts/soup-hsts-policy.c",
                                    "@line": "81",
                                    "#text": "whether the policies are equal."
                                },
                                "type": {
                                    "@name": "gboolean",
                                    "@c:type": "gboolean"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "policy1",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../libsoup/hsts/soup-hsts-policy.c",
                                        "@line": "76",
                                        "#text": "a #SoupHSTSPolicy"
                                    },
                                    "type": {
                                        "@name": "HSTSPolicy",
                                        "@c:type": "SoupHSTSPolicy*"
                                    }
                                },
                                "parameter": {
                                    "@name": "policy2",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../libsoup/hsts/soup-hsts-policy.c",
                                        "@line": "77",
                                        "#text": "a #SoupHSTSPolicy"
                                    },
                                    "type": {
                                        "@name": "HSTSPolicy",
                                        "@c:type": "SoupHSTSPolicy*"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "free",
                            "@c:identifier": "soup_hsts_policy_free",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../libsoup/hsts/soup-hsts-policy.c",
                                "@line": "398",
                                "#text": "Frees @policy."
                            },
                            "source-position": {
                                "@filename": "../libsoup/hsts/soup-hsts-policy.h",
                                "@line": "56"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "type": {
                                    "@name": "none",
                                    "@c:type": "void"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "policy",
                                    "@transfer-ownership": "full",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../libsoup/hsts/soup-hsts-policy.c",
                                        "@line": "400",
                                        "#text": "a #SoupHSTSPolicy"
                                    },
                                    "type": {
                                        "@name": "HSTSPolicy",
                                        "@c:type": "SoupHSTSPolicy*"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "get_domain",
                            "@c:identifier": "soup_hsts_policy_get_domain",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../libsoup/hsts/soup-hsts-policy.c",
                                "@line": "298",
                                "#text": "Gets @policy's domain."
                            },
                            "source-position": {
                                "@filename": "../libsoup/hsts/soup-hsts-policy.h",
                                "@line": "47"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "../libsoup/hsts/soup-hsts-policy.c",
                                    "@line": "304",
                                    "#text": "@policy's domain."
                                },
                                "type": {
                                    "@name": "utf8",
                                    "@c:type": "const char*"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "policy",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../libsoup/hsts/soup-hsts-policy.c",
                                        "@line": "300",
                                        "#text": "a #SoupHSTSPolicy"
                                    },
                                    "type": {
                                        "@name": "HSTSPolicy",
                                        "@c:type": "SoupHSTSPolicy*"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "get_expires",
                            "@c:identifier": "soup_hsts_policy_get_expires",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../libsoup/hsts/soup-hsts-policy.c",
                                "@line": "366",
                                "#text": "Returns the expiration date for @policy."
                            },
                            "source-position": {
                                "@filename": "../libsoup/hsts/soup-hsts-policy.h",
                                "@line": "59"
                            },
                            "return-value": {
                                "@transfer-ownership": "full",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "../libsoup/hsts/soup-hsts-policy.c",
                                    "@line": "372",
                                    "#text": "A #GDateTime or %NULL if unset"
                                },
                                "type": {
                                    "@name": "GLib.DateTime",
                                    "@c:type": "GDateTime*"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "policy",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../libsoup/hsts/soup-hsts-policy.c",
                                        "@line": "368",
                                        "#text": "a #SoupHSTSPolicy"
                                    },
                                    "type": {
                                        "@name": "HSTSPolicy",
                                        "@c:type": "SoupHSTSPolicy*"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "get_max_age",
                            "@c:identifier": "soup_hsts_policy_get_max_age",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../libsoup/hsts/soup-hsts-policy.c",
                                "@line": "382",
                                "#text": "Returns the max age for @policy."
                            },
                            "source-position": {
                                "@filename": "../libsoup/hsts/soup-hsts-policy.h",
                                "@line": "62"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "../libsoup/hsts/soup-hsts-policy.c",
                                    "@line": "388",
                                    "#text": "Max age in seconds"
                                },
                                "type": {
                                    "@name": "gulong",
                                    "@c:type": "gulong"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "policy",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../libsoup/hsts/soup-hsts-policy.c",
                                        "@line": "384",
                                        "#text": "a #SoupHSTSPolicy"
                                    },
                                    "type": {
                                        "@name": "HSTSPolicy",
                                        "@c:type": "SoupHSTSPolicy*"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "includes_subdomains",
                            "@c:identifier": "soup_hsts_policy_includes_subdomains",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../libsoup/hsts/soup-hsts-policy.c",
                                "@line": "332",
                                "#text": "Gets whether @policy include its subdomains."
                            },
                            "source-position": {
                                "@filename": "../libsoup/hsts/soup-hsts-policy.h",
                                "@line": "51"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "../libsoup/hsts/soup-hsts-policy.c",
                                    "@line": "338",
                                    "#text": "%TRUE if @policy includes subdomains, %FALSE otherwise."
                                },
                                "type": {
                                    "@name": "gboolean",
                                    "@c:type": "gboolean"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "policy",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../libsoup/hsts/soup-hsts-policy.c",
                                        "@line": "334",
                                        "#text": "a #SoupHSTSPolicy"
                                    },
                                    "type": {
                                        "@name": "HSTSPolicy",
                                        "@c:type": "SoupHSTSPolicy*"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "is_expired",
                            "@c:identifier": "soup_hsts_policy_is_expired",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../libsoup/hsts/soup-hsts-policy.c",
                                "@line": "314",
                                "#text": "Gets whether @policy is expired.\n\nPermanent policies never expire."
                            },
                            "source-position": {
                                "@filename": "../libsoup/hsts/soup-hsts-policy.h",
                                "@line": "49"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "../libsoup/hsts/soup-hsts-policy.c",
                                    "@line": "322",
                                    "#text": "%TRUE if @policy is expired, %FALSE otherwise."
                                },
                                "type": {
                                    "@name": "gboolean",
                                    "@c:type": "gboolean"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "policy",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../libsoup/hsts/soup-hsts-policy.c",
                                        "@line": "316",
                                        "#text": "a #SoupHSTSPolicy"
                                    },
                                    "type": {
                                        "@name": "HSTSPolicy",
                                        "@c:type": "SoupHSTSPolicy*"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "is_session_policy",
                            "@c:identifier": "soup_hsts_policy_is_session_policy",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../libsoup/hsts/soup-hsts-policy.c",
                                "@line": "348",
                                "#text": "Gets whether @policy is a non-permanent, non-expirable session policy.\n\nSee [ctor@HSTSPolicy.new_session_policy] for details."
                            },
                            "source-position": {
                                "@filename": "../libsoup/hsts/soup-hsts-policy.h",
                                "@line": "53"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "../libsoup/hsts/soup-hsts-policy.c",
                                    "@line": "356",
                                    "#text": "%TRUE if @policy is permanent, %FALSE otherwise"
                                },
                                "type": {
                                    "@name": "gboolean",
                                    "@c:type": "gboolean"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "policy",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../libsoup/hsts/soup-hsts-policy.c",
                                        "@line": "350",
                                        "#text": "a #SoupHSTSPolicy"
                                    },
                                    "type": {
                                        "@name": "HSTSPolicy",
                                        "@c:type": "SoupHSTSPolicy*"
                                    }
                                }
                            }
                        }
                    ]
                },
                {
                    "@name": "LoggerClass",
                    "@c:type": "SoupLoggerClass",
                    "@glib:is-gtype-struct-for": "Logger",
                    "source-position": {
                        "@filename": "../libsoup/soup-logger.h",
                        "@line": "14"
                    },
                    "field": {
                        "@name": "parent_class",
                        "type": {
                            "@name": "GObject.ObjectClass",
                            "@c:type": "GObjectClass"
                        }
                    }
                },
                {
                    "@name": "MessageBody",
                    "@c:type": "SoupMessageBody",
                    "@glib:type-name": "SoupMessageBody",
                    "@glib:get-type": "soup_message_body_get_type",
                    "@c:symbol-prefix": "message_body",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "../libsoup/server/soup-message-body.c",
                        "@line": "31",
                        "#text": "#SoupMessageBody represents the request or response body of a\n[class@Message].\n\nNote that while @length always reflects the full length of the\nmessage body, @data is normally %NULL, and will only be filled in\nafter [method@MessageBody.flatten] is called. For client-side\nmessages, this automatically happens for the response body after it\nhas been fully read. Likewise, for server-side\nmessages, the request body is automatically filled in after being\nread.\n\nAs an added bonus, when @data is filled in, it is always terminated\nwith a `\\0` byte (which is not reflected in @length)."
                    },
                    "source-position": {
                        "@filename": "../libsoup/server/soup-message-body.h",
                        "@line": "21"
                    },
                    "field": [
                        {
                            "@name": "data",
                            "@writable": "1",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../libsoup/server/soup-message-body.c",
                                "@line": "33",
                                "#text": "the data"
                            },
                            "array": {
                                "@length": "1",
                                "@zero-terminated": "0",
                                "@c:type": "const char*",
                                "type": {
                                    "@name": "guint8"
                                }
                            }
                        },
                        {
                            "@name": "length",
                            "@writable": "1",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../libsoup/server/soup-message-body.c",
                                "@line": "34",
                                "#text": "length of @data"
                            },
                            "type": {
                                "@name": "gint64",
                                "@c:type": "goffset"
                            }
                        }
                    ],
                    "constructor": {
                        "@name": "new",
                        "@c:identifier": "soup_message_body_new",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "../libsoup/server/soup-message-body.c",
                            "@line": "59",
                            "#text": "Creates a new #SoupMessageBody.\n\n[class@Message] uses this internally; you\nwill not normally need to call it yourself."
                        },
                        "source-position": {
                            "@filename": "../libsoup/server/soup-message-body.h",
                            "@line": "28"
                        },
                        "return-value": {
                            "@transfer-ownership": "full",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../libsoup/server/soup-message-body.c",
                                "@line": "67",
                                "#text": "a new #SoupMessageBody."
                            },
                            "type": {
                                "@name": "MessageBody",
                                "@c:type": "SoupMessageBody*"
                            }
                        }
                    },
                    "method": [
                        {
                            "@name": "append",
                            "@c:identifier": "soup_message_body_append",
                            "@shadowed-by": "append_take",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../libsoup/server/soup-message-body.c",
                                "@line": "142",
                                "#text": "Appends @length bytes from @data to @body according to @use."
                            },
                            "source-position": {
                                "@filename": "../libsoup/server/soup-message-body.h",
                                "@line": "43"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "type": {
                                    "@name": "none",
                                    "@c:type": "void"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "body",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../libsoup/server/soup-message-body.c",
                                        "@line": "144",
                                        "#text": "a #SoupMessageBody"
                                    },
                                    "type": {
                                        "@name": "MessageBody",
                                        "@c:type": "SoupMessageBody*"
                                    }
                                },
                                "parameter": [
                                    {
                                        "@name": "use",
                                        "@transfer-ownership": "none",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "../libsoup/server/soup-message-body.c",
                                            "@line": "145",
                                            "#text": "how to use @data"
                                        },
                                        "type": {
                                            "@name": "MemoryUse",
                                            "@c:type": "SoupMemoryUse"
                                        }
                                    },
                                    {
                                        "@name": "data",
                                        "@transfer-ownership": "none",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "../libsoup/server/soup-message-body.c",
                                            "@line": "146",
                                            "#text": "data to append"
                                        },
                                        "array": {
                                            "@length": "2",
                                            "@zero-terminated": "0",
                                            "@c:type": "gconstpointer",
                                            "type": {
                                                "@name": "guint8"
                                            }
                                        }
                                    },
                                    {
                                        "@name": "length",
                                        "@transfer-ownership": "none",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "../libsoup/server/soup-message-body.c",
                                            "@line": "147",
                                            "#text": "length of @data"
                                        },
                                        "type": {
                                            "@name": "gsize",
                                            "@c:type": "gsize"
                                        }
                                    }
                                ]
                            }
                        },
                        {
                            "@name": "append_bytes",
                            "@c:identifier": "soup_message_body_append_bytes",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../libsoup/server/soup-message-body.c",
                                "@line": "188",
                                "#text": "Appends the data from @buffer to @body."
                            },
                            "source-position": {
                                "@filename": "../libsoup/server/soup-message-body.h",
                                "@line": "52"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "type": {
                                    "@name": "none",
                                    "@c:type": "void"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "body",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../libsoup/server/soup-message-body.c",
                                        "@line": "190",
                                        "#text": "a #SoupMessageBody"
                                    },
                                    "type": {
                                        "@name": "MessageBody",
                                        "@c:type": "SoupMessageBody*"
                                    }
                                },
                                "parameter": {
                                    "@name": "buffer",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../libsoup/server/soup-message-body.c",
                                        "@line": "191",
                                        "#text": "a #GBytes"
                                    },
                                    "type": {
                                        "@name": "GLib.Bytes",
                                        "@c:type": "GBytes*"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "append_take",
                            "@c:identifier": "soup_message_body_append_take",
                            "@shadows": "append",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../libsoup/server/soup-message-body.c",
                                "@line": "169",
                                "#text": "Appends @length bytes from @data to @body.\n\nThis function is exactly equivalent to [method@MessageBody.append]\nwith %SOUP_MEMORY_TAKE as second argument; it exists mainly for\nconvenience and simplifying language bindings."
                            },
                            "source-position": {
                                "@filename": "../libsoup/server/soup-message-body.h",
                                "@line": "48"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "type": {
                                    "@name": "none",
                                    "@c:type": "void"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "body",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../libsoup/server/soup-message-body.c",
                                        "@line": "171",
                                        "#text": "a #SoupMessageBody"
                                    },
                                    "type": {
                                        "@name": "MessageBody",
                                        "@c:type": "SoupMessageBody*"
                                    }
                                },
                                "parameter": [
                                    {
                                        "@name": "data",
                                        "@transfer-ownership": "full",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "../libsoup/server/soup-message-body.c",
                                            "@line": "172",
                                            "#text": "data to append"
                                        },
                                        "array": {
                                            "@length": "1",
                                            "@zero-terminated": "0",
                                            "@c:type": "guchar*",
                                            "type": {
                                                "@name": "guint8",
                                                "@c:type": "guchar"
                                            }
                                        }
                                    },
                                    {
                                        "@name": "length",
                                        "@transfer-ownership": "none",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "../libsoup/server/soup-message-body.c",
                                            "@line": "173",
                                            "#text": "length of @data"
                                        },
                                        "type": {
                                            "@name": "gsize",
                                            "@c:type": "gsize"
                                        }
                                    }
                                ]
                            }
                        },
                        {
                            "@name": "complete",
                            "@c:identifier": "soup_message_body_complete",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../libsoup/server/soup-message-body.c",
                                "@line": "221",
                                "#text": "Tags @body as being complete.\n\nCall this when using chunked encoding after you have appended the last chunk."
                            },
                            "source-position": {
                                "@filename": "../libsoup/server/soup-message-body.h",
                                "@line": "57"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "type": {
                                    "@name": "none",
                                    "@c:type": "void"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "body",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../libsoup/server/soup-message-body.c",
                                        "@line": "223",
                                        "#text": "a #SoupMessageBody"
                                    },
                                    "type": {
                                        "@name": "MessageBody",
                                        "@c:type": "SoupMessageBody*"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "flatten",
                            "@c:identifier": "soup_message_body_flatten",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../libsoup/server/soup-message-body.c",
                                "@line": "235",
                                "#text": "Fills in @body's data field with a buffer containing all of the\ndata in @body.\n\nAdds an additional `\\0` byte not counted by @body's\nlength field."
                            },
                            "source-position": {
                                "@filename": "../libsoup/server/soup-message-body.h",
                                "@line": "60"
                            },
                            "return-value": {
                                "@transfer-ownership": "full",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "../libsoup/server/soup-message-body.c",
                                    "@line": "245",
                                    "#text": "a #GBytes containing the same data as @body.\n  (You must [method@GLib.Bytes.unref] this if you do not want it.)"
                                },
                                "type": {
                                    "@name": "GLib.Bytes",
                                    "@c:type": "GBytes*"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "body",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../libsoup/server/soup-message-body.c",
                                        "@line": "237",
                                        "#text": "a #SoupMessageBody"
                                    },
                                    "type": {
                                        "@name": "MessageBody",
                                        "@c:type": "SoupMessageBody*"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "get_accumulate",
                            "@c:identifier": "soup_message_body_get_accumulate",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../libsoup/server/soup-message-body.c",
                                "@line": "108",
                                "#text": "Gets the accumulate flag on @body.\n\nSee [method@MessageBody.set_accumulate. for details."
                            },
                            "source-position": {
                                "@filename": "../libsoup/server/soup-message-body.h",
                                "@line": "40"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "../libsoup/server/soup-message-body.c",
                                    "@line": "116",
                                    "#text": "the accumulate flag for @body."
                                },
                                "type": {
                                    "@name": "gboolean",
                                    "@c:type": "gboolean"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "body",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../libsoup/server/soup-message-body.c",
                                        "@line": "110",
                                        "#text": "a #SoupMessageBody"
                                    },
                                    "type": {
                                        "@name": "MessageBody",
                                        "@c:type": "SoupMessageBody*"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "get_chunk",
                            "@c:identifier": "soup_message_body_get_chunk",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../libsoup/server/soup-message-body.c",
                                "@line": "278",
                                "#text": "Gets a [struct@GLib.Bytes] containing data from @body starting at @offset.\n\nThe size of the returned chunk is unspecified. You can iterate\nthrough the entire body by first calling\n[method@MessageBody.get_chunk] with an offset of 0, and then on each\nsuccessive call, increment the offset by the length of the\npreviously-returned chunk.\n\nIf @offset is greater than or equal to the total length of @body,\nthen the return value depends on whether or not\n[method@MessageBody.complete] has been called or not; if it has,\nthen [method@MessageBody.get_chunk] will return a 0-length chunk\n(indicating the end of @body). If it has not, then\n[method@MessageBody.get_chunk] will return %NULL (indicating that\n@body may still potentially have more data, but that data is not\ncurrently available)."
                            },
                            "source-position": {
                                "@filename": "../libsoup/server/soup-message-body.h",
                                "@line": "63"
                            },
                            "return-value": {
                                "@transfer-ownership": "full",
                                "@nullable": "1",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "../libsoup/server/soup-message-body.c",
                                    "@line": "300",
                                    "#text": "a #GBytes"
                                },
                                "type": {
                                    "@name": "GLib.Bytes",
                                    "@c:type": "GBytes*"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "body",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../libsoup/server/soup-message-body.c",
                                        "@line": "280",
                                        "#text": "a #SoupMessageBody"
                                    },
                                    "type": {
                                        "@name": "MessageBody",
                                        "@c:type": "SoupMessageBody*"
                                    }
                                },
                                "parameter": {
                                    "@name": "offset",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../libsoup/server/soup-message-body.c",
                                        "@line": "281",
                                        "#text": "an offset"
                                    },
                                    "type": {
                                        "@name": "gint64",
                                        "@c:type": "goffset"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "got_chunk",
                            "@c:identifier": "soup_message_body_got_chunk",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../libsoup/server/soup-message-body.c",
                                "@line": "326",
                                "#text": "Handles the #SoupMessageBody part of receiving a chunk of data from\nthe network.\n\nNormally this means appending @chunk to @body, exactly as with\n[method@MessageBody.append_bytes], but if you have set @body's accumulate\nflag to %FALSE, then that will not happen.\n\nThis is a low-level method which you should not normally need to\nuse."
                            },
                            "source-position": {
                                "@filename": "../libsoup/server/soup-message-body.h",
                                "@line": "67"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "type": {
                                    "@name": "none",
                                    "@c:type": "void"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "body",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../libsoup/server/soup-message-body.c",
                                        "@line": "328",
                                        "#text": "a #SoupMessageBody"
                                    },
                                    "type": {
                                        "@name": "MessageBody",
                                        "@c:type": "SoupMessageBody*"
                                    }
                                },
                                "parameter": {
                                    "@name": "chunk",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../libsoup/server/soup-message-body.c",
                                        "@line": "329",
                                        "#text": "a #GBytes received from the network"
                                    },
                                    "type": {
                                        "@name": "GLib.Bytes",
                                        "@c:type": "GBytes*"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "ref",
                            "@c:identifier": "soup_message_body_ref",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../libsoup/server/soup-message-body.c",
                                "@line": "388",
                                "#text": "Atomically increments the reference count of @body by one."
                            },
                            "source-position": {
                                "@filename": "../libsoup/server/soup-message-body.h",
                                "@line": "31"
                            },
                            "return-value": {
                                "@transfer-ownership": "full",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "../libsoup/server/soup-message-body.c",
                                    "@line": "394",
                                    "#text": "the passed in #SoupMessageBody"
                                },
                                "type": {
                                    "@name": "MessageBody",
                                    "@c:type": "SoupMessageBody*"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "body",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../libsoup/server/soup-message-body.c",
                                        "@line": "390",
                                        "#text": "a #SoupMessageBody"
                                    },
                                    "type": {
                                        "@name": "MessageBody",
                                        "@c:type": "SoupMessageBody*"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "set_accumulate",
                            "@c:identifier": "soup_message_body_set_accumulate",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../libsoup/server/soup-message-body.c",
                                "@line": "80",
                                "#text": "Sets or clears the accumulate flag on @body.\n\n(The default value is %TRUE.) If set to %FALSE, @body's data field will not\nbe filled in after the body is fully sent/received, and the chunks that make\nup @body may be discarded when they are no longer needed.\n\nIf you set the flag to %FALSE on the [class@Message] request_body of a\nclient-side message, it will block the accumulation of chunks into\n@body's data field, but it will not normally cause the chunks to\nbe discarded after being written like in the server-side\n[class@Message] response_body case, because the request body needs to\nbe kept around in case the request needs to be sent a second time\ndue to redirection or authentication."
                            },
                            "source-position": {
                                "@filename": "../libsoup/server/soup-message-body.h",
                                "@line": "37"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "type": {
                                    "@name": "none",
                                    "@c:type": "void"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "body",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../libsoup/server/soup-message-body.c",
                                        "@line": "82",
                                        "#text": "a #SoupMessageBody"
                                    },
                                    "type": {
                                        "@name": "MessageBody",
                                        "@c:type": "SoupMessageBody*"
                                    }
                                },
                                "parameter": {
                                    "@name": "accumulate",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../libsoup/server/soup-message-body.c",
                                        "@line": "83",
                                        "#text": "whether or not to accumulate body chunks in @body"
                                    },
                                    "type": {
                                        "@name": "gboolean",
                                        "@c:type": "gboolean"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "truncate",
                            "@c:identifier": "soup_message_body_truncate",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../libsoup/server/soup-message-body.c",
                                "@line": "202",
                                "#text": "Deletes all of the data in @body."
                            },
                            "source-position": {
                                "@filename": "../libsoup/server/soup-message-body.h",
                                "@line": "55"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "type": {
                                    "@name": "none",
                                    "@c:type": "void"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "body",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../libsoup/server/soup-message-body.c",
                                        "@line": "204",
                                        "#text": "a #SoupMessageBody"
                                    },
                                    "type": {
                                        "@name": "MessageBody",
                                        "@c:type": "SoupMessageBody*"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "unref",
                            "@c:identifier": "soup_message_body_unref",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../libsoup/server/soup-message-body.c",
                                "@line": "404",
                                "#text": "Atomically decrements the reference count of @body by one.\n\nWhen the reference count reaches zero, the resources allocated by\n@body are freed"
                            },
                            "source-position": {
                                "@filename": "../libsoup/server/soup-message-body.h",
                                "@line": "34"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "type": {
                                    "@name": "none",
                                    "@c:type": "void"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "body",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../libsoup/server/soup-message-body.c",
                                        "@line": "406",
                                        "#text": "a #SoupMessageBody"
                                    },
                                    "type": {
                                        "@name": "MessageBody",
                                        "@c:type": "SoupMessageBody*"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "wrote_chunk",
                            "@c:identifier": "soup_message_body_wrote_chunk",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../libsoup/server/soup-message-body.c",
                                "@line": "352",
                                "#text": "Handles the #SoupMessageBody part of writing a chunk of data to the\nnetwork.\n\nNormally this is a no-op, but if you have set @body's accumulate flag to\n%FALSE, then this will cause @chunk to be discarded to free up memory.\n\nThis is a low-level method which you should not need to use, and\nthere are further restrictions on its proper use which are not\ndocumented here."
                            },
                            "source-position": {
                                "@filename": "../libsoup/server/soup-message-body.h",
                                "@line": "70"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "type": {
                                    "@name": "none",
                                    "@c:type": "void"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "body",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../libsoup/server/soup-message-body.c",
                                        "@line": "354",
                                        "#text": "a #SoupMessageBody"
                                    },
                                    "type": {
                                        "@name": "MessageBody",
                                        "@c:type": "SoupMessageBody*"
                                    }
                                },
                                "parameter": {
                                    "@name": "chunk",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../libsoup/server/soup-message-body.c",
                                        "@line": "355",
                                        "#text": "a #GBytes returned from [method@MessageBody.get_chunk]"
                                    },
                                    "type": {
                                        "@name": "GLib.Bytes",
                                        "@c:type": "GBytes*"
                                    }
                                }
                            }
                        }
                    ]
                },
                {
                    "@name": "MessageClass",
                    "@c:type": "SoupMessageClass",
                    "@glib:is-gtype-struct-for": "Message",
                    "source-position": {
                        "@filename": "../libsoup/soup-message.h",
                        "@line": "18"
                    },
                    "field": {
                        "@name": "parent_class",
                        "type": {
                            "@name": "GObject.ObjectClass",
                            "@c:type": "GObjectClass"
                        }
                    }
                },
                {
                    "@name": "MessageHeaders",
                    "@c:type": "SoupMessageHeaders",
                    "@glib:type-name": "SoupMessageHeaders",
                    "@glib:get-type": "soup_message_headers_get_type",
                    "@c:symbol-prefix": "message_headers",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "../libsoup/soup-message-headers.c",
                        "@line": "18",
                        "#text": "The HTTP message headers associated with a request or response."
                    },
                    "source-position": {
                        "@filename": "../libsoup/soup-message-headers.h",
                        "@line": "12"
                    },
                    "constructor": {
                        "@name": "new",
                        "@c:identifier": "soup_message_headers_new",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "../libsoup/soup-message-headers.c",
                            "@line": "61",
                            "#text": "Creates a #SoupMessageHeaders.\n\n([class@Message] does this automatically for its own headers. You would only\nneed to use this method if you are manually parsing or generating message\nheaders.)"
                        },
                        "source-position": {
                            "@filename": "../libsoup/soup-message-headers.h",
                            "@line": "24"
                        },
                        "return-value": {
                            "@transfer-ownership": "full",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../libsoup/soup-message-headers.c",
                                "@line": "71",
                                "#text": "a new #SoupMessageHeaders"
                            },
                            "type": {
                                "@name": "MessageHeaders",
                                "@c:type": "SoupMessageHeaders*"
                            }
                        },
                        "parameters": {
                            "parameter": {
                                "@name": "type",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "../libsoup/soup-message-headers.c",
                                    "@line": "63",
                                    "#text": "the type of headers"
                                },
                                "type": {
                                    "@name": "MessageHeadersType",
                                    "@c:type": "SoupMessageHeadersType"
                                }
                            }
                        }
                    },
                    "method": [
                        {
                            "@name": "append",
                            "@c:identifier": "soup_message_headers_append",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../libsoup/soup-message-headers.c",
                                "@line": "289",
                                "#text": "Appends a new header with name @name and value @value to @hdrs.\n\n(If there is an existing header with name @name, then this creates a second\none, which is only allowed for list-valued headers; see also\n[method@MessageHeaders.replace].)\n\nThe caller is expected to make sure that @name and @value are\nsyntactically correct."
                            },
                            "source-position": {
                                "@filename": "../libsoup/soup-message-headers.h",
                                "@line": "33"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "type": {
                                    "@name": "none",
                                    "@c:type": "void"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "hdrs",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../libsoup/soup-message-headers.c",
                                        "@line": "291",
                                        "#text": "a #SoupMessageHeaders"
                                    },
                                    "type": {
                                        "@name": "MessageHeaders",
                                        "@c:type": "SoupMessageHeaders*"
                                    }
                                },
                                "parameter": [
                                    {
                                        "@name": "name",
                                        "@transfer-ownership": "none",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "../libsoup/soup-message-headers.c",
                                            "@line": "292",
                                            "#text": "the header name to add"
                                        },
                                        "type": {
                                            "@name": "utf8",
                                            "@c:type": "const char*"
                                        }
                                    },
                                    {
                                        "@name": "value",
                                        "@transfer-ownership": "none",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "../libsoup/soup-message-headers.c",
                                            "@line": "293",
                                            "#text": "the new value of @name"
                                        },
                                        "type": {
                                            "@name": "utf8",
                                            "@c:type": "const char*"
                                        }
                                    }
                                ]
                            }
                        },
                        {
                            "@name": "clean_connection_headers",
                            "@c:identifier": "soup_message_headers_clean_connection_headers",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../libsoup/soup-message-headers.c",
                                "@line": "247",
                                "#text": "Removes all the headers listed in the Connection header."
                            },
                            "source-position": {
                                "@filename": "../libsoup/soup-message-headers.h",
                                "@line": "48"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "type": {
                                    "@name": "none",
                                    "@c:type": "void"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "hdrs",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../libsoup/soup-message-headers.c",
                                        "@line": "249",
                                        "#text": "a #SoupMessageHeaders"
                                    },
                                    "type": {
                                        "@name": "MessageHeaders",
                                        "@c:type": "SoupMessageHeaders*"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "clear",
                            "@c:identifier": "soup_message_headers_clear",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../libsoup/soup-message-headers.c",
                                "@line": "209",
                                "#text": "Clears @hdrs."
                            },
                            "source-position": {
                                "@filename": "../libsoup/soup-message-headers.h",
                                "@line": "45"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "type": {
                                    "@name": "none",
                                    "@c:type": "void"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "hdrs",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../libsoup/soup-message-headers.c",
                                        "@line": "211",
                                        "#text": "a #SoupMessageHeaders"
                                    },
                                    "type": {
                                        "@name": "MessageHeaders",
                                        "@c:type": "SoupMessageHeaders*"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "foreach",
                            "@c:identifier": "soup_message_headers_foreach",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../libsoup/soup-message-headers.c",
                                "@line": "853",
                                "#text": "Calls @func once for each header value in @hdrs.\n\nBeware that unlike [method@MessageHeaders.get_list], this processes the\nheaders in exactly the way they were added, rather than\nconcatenating multiple same-named headers into a single value.\n(This is intentional; it ensures that if you call\n[method@MessageHeaders.append] multiple times with the same name,\nthen the I/O code will output multiple copies of the header when\nsending the message to the remote implementation, which may be\nrequired for interoperability in some cases.)\n\nYou may not modify the headers from @func."
                            },
                            "source-position": {
                                "@filename": "../libsoup/soup-message-headers.h",
                                "@line": "70"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "type": {
                                    "@name": "none",
                                    "@c:type": "void"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "hdrs",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../libsoup/soup-message-headers.c",
                                        "@line": "855",
                                        "#text": "a #SoupMessageHeaders"
                                    },
                                    "type": {
                                        "@name": "MessageHeaders",
                                        "@c:type": "SoupMessageHeaders*"
                                    }
                                },
                                "parameter": [
                                    {
                                        "@name": "func",
                                        "@transfer-ownership": "none",
                                        "@scope": "call",
                                        "@closure": "1",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "../libsoup/soup-message-headers.c",
                                            "@line": "856",
                                            "#text": "callback function to run for each header"
                                        },
                                        "type": {
                                            "@name": "MessageHeadersForeachFunc",
                                            "@c:type": "SoupMessageHeadersForeachFunc"
                                        }
                                    },
                                    {
                                        "@name": "user_data",
                                        "@transfer-ownership": "none",
                                        "@nullable": "1",
                                        "@allow-none": "1",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "../libsoup/soup-message-headers.c",
                                            "@line": "857",
                                            "#text": "data to pass to @func"
                                        },
                                        "type": {
                                            "@name": "gpointer",
                                            "@c:type": "gpointer"
                                        }
                                    }
                                ]
                            }
                        },
                        {
                            "@name": "free_ranges",
                            "@c:identifier": "soup_message_headers_free_ranges",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../libsoup/soup-message-headers.c",
                                "@line": "1277",
                                "#text": "Frees the array of ranges returned from [method@MessageHeaders.get_ranges]."
                            },
                            "source-position": {
                                "@filename": "../libsoup/soup-message-headers.h",
                                "@line": "135"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "type": {
                                    "@name": "none",
                                    "@c:type": "void"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "hdrs",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../libsoup/soup-message-headers.c",
                                        "@line": "1279",
                                        "#text": "a #SoupMessageHeaders"
                                    },
                                    "type": {
                                        "@name": "MessageHeaders",
                                        "@c:type": "SoupMessageHeaders*"
                                    }
                                },
                                "parameter": {
                                    "@name": "ranges",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../libsoup/soup-message-headers.c",
                                        "@line": "1280",
                                        "#text": "an array of #SoupRange"
                                    },
                                    "type": {
                                        "@name": "Range",
                                        "@c:type": "SoupRange*"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "get_content_disposition",
                            "@c:identifier": "soup_message_headers_get_content_disposition",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../libsoup/soup-message-headers.c",
                                "@line": "1565",
                                "#text": "Looks up the \"Content-Disposition\" header in @hdrs, parses it, and\nreturns its value in *@disposition and *@params.\n\n@params can be %NULL if you are only interested in the disposition-type.\n\nIn HTTP, the most common use of this header is to set a\ndisposition-type of \"attachment\", to suggest to the browser that a\nresponse should be saved to disk rather than displayed in the\nbrowser. If @params contains a \"filename\" parameter, this is a\nsuggestion of a filename to use. (If the parameter value in the\nheader contains an absolute or relative path, libsoup will truncate\nit down to just the final path component, so you do not need to\ntest this yourself.)\n\nContent-Disposition is also used in \"multipart/form-data\", however\nthis is handled automatically by [struct@Multipart] and the associated\nform methods."
                            },
                            "source-position": {
                                "@filename": "../libsoup/soup-message-headers.h",
                                "@line": "167"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "../libsoup/soup-message-headers.c",
                                    "@line": "1591",
                                    "#text": "%TRUE if @hdrs contains a \"Content-Disposition\"\n  header, %FALSE if not (in which case *@disposition and *@params\n  will be unchanged)."
                                },
                                "type": {
                                    "@name": "gboolean",
                                    "@c:type": "gboolean"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "hdrs",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../libsoup/soup-message-headers.c",
                                        "@line": "1567",
                                        "#text": "a #SoupMessageHeaders"
                                    },
                                    "type": {
                                        "@name": "MessageHeaders",
                                        "@c:type": "SoupMessageHeaders*"
                                    }
                                },
                                "parameter": [
                                    {
                                        "@name": "disposition",
                                        "@direction": "out",
                                        "@caller-allocates": "0",
                                        "@transfer-ownership": "full",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "../libsoup/soup-message-headers.c",
                                            "@line": "1568",
                                            "#text": "return location for the\n  disposition-type, or %NULL"
                                        },
                                        "type": {
                                            "@name": "utf8",
                                            "@c:type": "char**"
                                        }
                                    },
                                    {
                                        "@name": "params",
                                        "@direction": "out",
                                        "@caller-allocates": "0",
                                        "@transfer-ownership": "full",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "../libsoup/soup-message-headers.c",
                                            "@line": "1570",
                                            "#text": "return\n  location for the Content-Disposition parameters, or %NULL"
                                        },
                                        "type": {
                                            "@name": "GLib.HashTable",
                                            "@c:type": "GHashTable**",
                                            "type": [
                                                {
                                                    "@name": "utf8"
                                                },
                                                {
                                                    "@name": "utf8"
                                                }
                                            ]
                                        }
                                    }
                                ]
                            }
                        },
                        {
                            "@name": "get_content_length",
                            "@c:identifier": "soup_message_headers_get_content_length",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../libsoup/soup-message-headers.c",
                                "@line": "993",
                                "#text": "Gets the message body length that @hdrs declare.\n\nThis will only be non-0 if [method@MessageHeaders.get_encoding] returns\n%SOUP_ENCODING_CONTENT_LENGTH."
                            },
                            "source-position": {
                                "@filename": "../libsoup/soup-message-headers.h",
                                "@line": "108"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "../libsoup/soup-message-headers.c",
                                    "@line": "1002",
                                    "#text": "the message body length declared by @hdrs."
                                },
                                "type": {
                                    "@name": "gint64",
                                    "@c:type": "goffset"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "hdrs",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../libsoup/soup-message-headers.c",
                                        "@line": "995",
                                        "#text": "a #SoupMessageHeaders"
                                    },
                                    "type": {
                                        "@name": "MessageHeaders",
                                        "@c:type": "SoupMessageHeaders*"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "get_content_range",
                            "@c:identifier": "soup_message_headers_get_content_range",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../libsoup/soup-message-headers.c",
                                "@line": "1355",
                                "#text": "Parses @hdrs's Content-Range header and returns it in @start,\n@end, and @total_length. If the total length field in the header\nwas specified as \"*\", then @total_length will be set to -1."
                            },
                            "source-position": {
                                "@filename": "../libsoup/soup-message-headers.h",
                                "@line": "147"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "../libsoup/soup-message-headers.c",
                                    "@line": "1367",
                                    "#text": "%TRUE if @hdrs contained a \"Content-Range\" header\n  containing a byte range which could be parsed, %FALSE otherwise."
                                },
                                "type": {
                                    "@name": "gboolean",
                                    "@c:type": "gboolean"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "hdrs",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../libsoup/soup-message-headers.c",
                                        "@line": "1357",
                                        "#text": "a #SoupMessageHeaders"
                                    },
                                    "type": {
                                        "@name": "MessageHeaders",
                                        "@c:type": "SoupMessageHeaders*"
                                    }
                                },
                                "parameter": [
                                    {
                                        "@name": "start",
                                        "@direction": "out",
                                        "@caller-allocates": "0",
                                        "@transfer-ownership": "full",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "../libsoup/soup-message-headers.c",
                                            "@line": "1358",
                                            "#text": "return value for the start of the range"
                                        },
                                        "type": {
                                            "@name": "gint64",
                                            "@c:type": "goffset*"
                                        }
                                    },
                                    {
                                        "@name": "end",
                                        "@direction": "out",
                                        "@caller-allocates": "0",
                                        "@transfer-ownership": "full",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "../libsoup/soup-message-headers.c",
                                            "@line": "1359",
                                            "#text": "return value for the end of the range"
                                        },
                                        "type": {
                                            "@name": "gint64",
                                            "@c:type": "goffset*"
                                        }
                                    },
                                    {
                                        "@name": "total_length",
                                        "@direction": "out",
                                        "@caller-allocates": "0",
                                        "@transfer-ownership": "full",
                                        "@optional": "1",
                                        "@allow-none": "1",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "../libsoup/soup-message-headers.c",
                                            "@line": "1360",
                                            "#text": "return value for the total length of the\n  resource, or %NULL if you don't care."
                                        },
                                        "type": {
                                            "@name": "gint64",
                                            "@c:type": "goffset*"
                                        }
                                    }
                                ]
                            }
                        },
                        {
                            "@name": "get_content_type",
                            "@c:identifier": "soup_message_headers_get_content_type",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../libsoup/soup-message-headers.c",
                                "@line": "1518",
                                "#text": "Looks up the \"Content-Type\" header in @hdrs, parses it, and returns\nits value in *@content_type and *@params.\n\n@params can be %NULL if you are only interested in the content type itself."
                            },
                            "source-position": {
                                "@filename": "../libsoup/soup-message-headers.h",
                                "@line": "159"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "@nullable": "1",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "../libsoup/soup-message-headers.c",
                                    "@line": "1530",
                                    "#text": "a string with the value of the\n  \"Content-Type\" header or %NULL if @hdrs does not contain that\n  header or it cannot be parsed (in which case *@params will be\n  unchanged)."
                                },
                                "type": {
                                    "@name": "utf8",
                                    "@c:type": "const char*"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "hdrs",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../libsoup/soup-message-headers.c",
                                        "@line": "1520",
                                        "#text": "a #SoupMessageHeaders"
                                    },
                                    "type": {
                                        "@name": "MessageHeaders",
                                        "@c:type": "SoupMessageHeaders*"
                                    }
                                },
                                "parameter": {
                                    "@name": "params",
                                    "@direction": "out",
                                    "@caller-allocates": "0",
                                    "@transfer-ownership": "full",
                                    "@optional": "1",
                                    "@allow-none": "1",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../libsoup/soup-message-headers.c",
                                        "@line": "1521",
                                        "#text": "return location for the Content-Type parameters (eg, \"charset\"), or\n  %NULL"
                                    },
                                    "type": {
                                        "@name": "GLib.HashTable",
                                        "@c:type": "GHashTable**",
                                        "type": [
                                            {
                                                "@name": "utf8"
                                            },
                                            {
                                                "@name": "utf8"
                                            }
                                        ]
                                    }
                                }
                            }
                        },
                        {
                            "@name": "get_encoding",
                            "@c:identifier": "soup_message_headers_get_encoding",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../libsoup/soup-message-headers.c",
                                "@line": "911",
                                "#text": "Gets the message body encoding that @hdrs declare.\n\nThis may not always correspond to the encoding used on the wire; eg, a HEAD\nresponse may declare a Content-Length or Transfer-Encoding, but it will never\nactually include a body."
                            },
                            "source-position": {
                                "@filename": "../libsoup/soup-message-headers.h",
                                "@line": "102"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "../libsoup/soup-message-headers.c",
                                    "@line": "921",
                                    "#text": "the encoding declared by @hdrs."
                                },
                                "type": {
                                    "@name": "Encoding",
                                    "@c:type": "SoupEncoding"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "hdrs",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../libsoup/soup-message-headers.c",
                                        "@line": "913",
                                        "#text": "a #SoupMessageHeaders"
                                    },
                                    "type": {
                                        "@name": "MessageHeaders",
                                        "@c:type": "SoupMessageHeaders*"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "get_expectations",
                            "@c:identifier": "soup_message_headers_get_expectations",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../libsoup/soup-message-headers.c",
                                "@line": "1053",
                                "#text": "Gets the expectations declared by @hdrs's \"Expect\" header.\n\nCurrently this will either be %SOUP_EXPECTATION_CONTINUE or\n%SOUP_EXPECTATION_UNRECOGNIZED."
                            },
                            "source-position": {
                                "@filename": "../libsoup/soup-message-headers.h",
                                "@line": "119"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "../libsoup/soup-message-headers.c",
                                    "@line": "1062",
                                    "#text": "the contents of @hdrs's \"Expect\" header"
                                },
                                "type": {
                                    "@name": "Expectation",
                                    "@c:type": "SoupExpectation"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "hdrs",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../libsoup/soup-message-headers.c",
                                        "@line": "1055",
                                        "#text": "a #SoupMessageHeaders"
                                    },
                                    "type": {
                                        "@name": "MessageHeaders",
                                        "@c:type": "SoupMessageHeaders*"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "get_headers_type",
                            "@c:identifier": "soup_message_headers_get_headers_type",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../libsoup/soup-message-headers.c",
                                "@line": "130",
                                "#text": "Gets the type of headers."
                            },
                            "source-position": {
                                "@filename": "../libsoup/soup-message-headers.h",
                                "@line": "75"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "../libsoup/soup-message-headers.c",
                                    "@line": "136",
                                    "#text": "the header's type."
                                },
                                "type": {
                                    "@name": "MessageHeadersType",
                                    "@c:type": "SoupMessageHeadersType"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "hdrs",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../libsoup/soup-message-headers.c",
                                        "@line": "132",
                                        "#text": "a #SoupMessageHeaders"
                                    },
                                    "type": {
                                        "@name": "MessageHeaders",
                                        "@c:type": "SoupMessageHeaders*"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "get_list",
                            "@c:identifier": "soup_message_headers_get_list",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../libsoup/soup-message-headers.c",
                                "@line": "691",
                                "#text": "Gets the value of header @name in @hdrs.\n\nUse this for headers whose values are comma-delimited lists, and which are\ntherefore allowed to appear multiple times in the headers. For\nnon-list-valued headers, use [method@MessageHeaders.get_one].\n\nIf @name appears multiple times in @hdrs,\n[method@MessageHeaders.get_list] will concatenate all of the values\ntogether, separated by commas. This is sometimes awkward to parse\n(eg, WWW-Authenticate, Set-Cookie), but you have to be able to deal\nwith it anyway, because the HTTP spec explicitly states that this\ntransformation is allowed, and so an upstream proxy could do the\nsame thing."
                            },
                            "source-position": {
                                "@filename": "../libsoup/soup-message-headers.h",
                                "@line": "54"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "@nullable": "1",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "../libsoup/soup-message-headers.c",
                                    "@line": "710",
                                    "#text": "the header's value or %NULL if not found."
                                },
                                "type": {
                                    "@name": "utf8",
                                    "@c:type": "const char*"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "hdrs",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../libsoup/soup-message-headers.c",
                                        "@line": "693",
                                        "#text": "a #SoupMessageHeaders"
                                    },
                                    "type": {
                                        "@name": "MessageHeaders",
                                        "@c:type": "SoupMessageHeaders*"
                                    }
                                },
                                "parameter": {
                                    "@name": "name",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../libsoup/soup-message-headers.c",
                                        "@line": "694",
                                        "#text": "header name"
                                    },
                                    "type": {
                                        "@name": "utf8",
                                        "@c:type": "const char*"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "get_one",
                            "@c:identifier": "soup_message_headers_get_one",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../libsoup/soup-message-headers.c",
                                "@line": "540",
                                "#text": "Gets the value of header @name in @hdrs.\n\nUse this for headers whose values are *not* comma-delimited lists, and which\ntherefore can only appear at most once in the headers. For list-valued\nheaders, use [method@MessageHeaders.get_list].\n\nIf @hdrs does erroneously contain multiple copies of the header, it\nis not defined which one will be returned. (Ideally, it will return\nwhichever one makes libsoup most compatible with other HTTP\nimplementations.)"
                            },
                            "source-position": {
                                "@filename": "../libsoup/soup-message-headers.h",
                                "@line": "51"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "@nullable": "1",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "../libsoup/soup-message-headers.c",
                                    "@line": "556",
                                    "#text": "the header's value or %NULL if not found."
                                },
                                "type": {
                                    "@name": "utf8",
                                    "@c:type": "const char*"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "hdrs",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../libsoup/soup-message-headers.c",
                                        "@line": "542",
                                        "#text": "a #SoupMessageHeaders"
                                    },
                                    "type": {
                                        "@name": "MessageHeaders",
                                        "@c:type": "SoupMessageHeaders*"
                                    }
                                },
                                "parameter": {
                                    "@name": "name",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../libsoup/soup-message-headers.c",
                                        "@line": "543",
                                        "#text": "header name"
                                    },
                                    "type": {
                                        "@name": "utf8",
                                        "@c:type": "const char*"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "get_ranges",
                            "@c:identifier": "soup_message_headers_get_ranges",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../libsoup/soup-message-headers.c",
                                "@line": "1224",
                                "#text": "Parses @hdrs's Range header and returns an array of the requested\nbyte ranges.\n\nThe returned array must be freed with [method@MessageHeaders.free_ranges].\n\nIf @total_length is non-0, its value will be used to adjust the\nreturned ranges to have explicit start and end values, and the\nreturned ranges will be sorted and non-overlapping. If\n@total_length is 0, then some ranges may have an end value of -1,\nas described under [struct@Range], and some of the ranges may be\nredundant.\n\nBeware that even if given a @total_length, this function does not\ncheck that the ranges are satisfiable.\n\n#SoupServer has built-in handling for range requests. If your\nserver handler returns a %SOUP_STATUS_OK response containing the\ncomplete response body (rather than pausing the message and\nreturning some of the response body later), and there is a Range\nheader in the request, then libsoup will automatically convert the\nresponse to a %SOUP_STATUS_PARTIAL_CONTENT response containing only\nthe range(s) requested by the client.\n\nThe only time you need to process the Range header yourself is if\neither you need to stream the response body rather than returning\nit all at once, or you do not already have the complete response\nbody available, and only want to generate the parts that were\nactually requested by the client."
                            },
                            "source-position": {
                                "@filename": "../libsoup/soup-message-headers.h",
                                "@line": "130"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "../libsoup/soup-message-headers.c",
                                    "@line": "1261",
                                    "#text": "%TRUE if @hdrs contained a syntactically-valid\n  \"Range\" header, %FALSE otherwise (in which case @range and @length\n  will not be set)."
                                },
                                "type": {
                                    "@name": "gboolean",
                                    "@c:type": "gboolean"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "hdrs",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../libsoup/soup-message-headers.c",
                                        "@line": "1226",
                                        "#text": "a #SoupMessageHeaders"
                                    },
                                    "type": {
                                        "@name": "MessageHeaders",
                                        "@c:type": "SoupMessageHeaders*"
                                    }
                                },
                                "parameter": [
                                    {
                                        "@name": "total_length",
                                        "@transfer-ownership": "none",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "../libsoup/soup-message-headers.c",
                                            "@line": "1227",
                                            "#text": "the total_length of the response body"
                                        },
                                        "type": {
                                            "@name": "gint64",
                                            "@c:type": "goffset"
                                        }
                                    },
                                    {
                                        "@name": "ranges",
                                        "@direction": "out",
                                        "@caller-allocates": "0",
                                        "@transfer-ownership": "full",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "../libsoup/soup-message-headers.c",
                                            "@line": "1228",
                                            "#text": "return location for an array\n  of #SoupRange"
                                        },
                                        "array": {
                                            "@length": "2",
                                            "@zero-terminated": "0",
                                            "@c:type": "SoupRange**",
                                            "type": {
                                                "@name": "Range",
                                                "@c:type": "SoupRange*"
                                            }
                                        }
                                    },
                                    {
                                        "@name": "length",
                                        "@direction": "out",
                                        "@caller-allocates": "0",
                                        "@transfer-ownership": "full",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "../libsoup/soup-message-headers.c",
                                            "@line": "1230",
                                            "#text": "the length of the returned array"
                                        },
                                        "type": {
                                            "@name": "gint",
                                            "@c:type": "int*"
                                        }
                                    }
                                ]
                            }
                        },
                        {
                            "@name": "header_contains",
                            "@c:identifier": "soup_message_headers_header_contains",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../libsoup/soup-message-headers.c",
                                "@line": "591",
                                "#text": "Checks whether the list-valued header @name is present in @hdrs,\nand contains a case-insensitive match for @token.\n\n(If @name is present in @hdrs, then this is equivalent to calling\n[func@header_contains] on its value.)"
                            },
                            "source-position": {
                                "@filename": "../libsoup/soup-message-headers.h",
                                "@line": "57"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "../libsoup/soup-message-headers.c",
                                    "@line": "603",
                                    "#text": "%TRUE if the header is present and contains @token,\n  %FALSE otherwise."
                                },
                                "type": {
                                    "@name": "gboolean",
                                    "@c:type": "gboolean"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "hdrs",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../libsoup/soup-message-headers.c",
                                        "@line": "593",
                                        "#text": "a #SoupMessageHeaders"
                                    },
                                    "type": {
                                        "@name": "MessageHeaders",
                                        "@c:type": "SoupMessageHeaders*"
                                    }
                                },
                                "parameter": [
                                    {
                                        "@name": "name",
                                        "@transfer-ownership": "none",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "../libsoup/soup-message-headers.c",
                                            "@line": "594",
                                            "#text": "header name"
                                        },
                                        "type": {
                                            "@name": "utf8",
                                            "@c:type": "const char*"
                                        }
                                    },
                                    {
                                        "@name": "token",
                                        "@transfer-ownership": "none",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "../libsoup/soup-message-headers.c",
                                            "@line": "595",
                                            "#text": "token to look for"
                                        },
                                        "type": {
                                            "@name": "utf8",
                                            "@c:type": "const char*"
                                        }
                                    }
                                ]
                            }
                        },
                        {
                            "@name": "header_equals",
                            "@c:identifier": "soup_message_headers_header_equals",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../libsoup/soup-message-headers.c",
                                "@line": "628",
                                "#text": "Checks whether the header @name is present in @hdrs and is\n(case-insensitively) equal to @value."
                            },
                            "source-position": {
                                "@filename": "../libsoup/soup-message-headers.h",
                                "@line": "61"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "../libsoup/soup-message-headers.c",
                                    "@line": "637",
                                    "#text": "%TRUE if the header is present and its value is\n  @value, %FALSE otherwise."
                                },
                                "type": {
                                    "@name": "gboolean",
                                    "@c:type": "gboolean"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "hdrs",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../libsoup/soup-message-headers.c",
                                        "@line": "630",
                                        "#text": "a #SoupMessageHeaders"
                                    },
                                    "type": {
                                        "@name": "MessageHeaders",
                                        "@c:type": "SoupMessageHeaders*"
                                    }
                                },
                                "parameter": [
                                    {
                                        "@name": "name",
                                        "@transfer-ownership": "none",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "../libsoup/soup-message-headers.c",
                                            "@line": "631",
                                            "#text": "header name"
                                        },
                                        "type": {
                                            "@name": "utf8",
                                            "@c:type": "const char*"
                                        }
                                    },
                                    {
                                        "@name": "value",
                                        "@transfer-ownership": "none",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "../libsoup/soup-message-headers.c",
                                            "@line": "632",
                                            "#text": "expected value"
                                        },
                                        "type": {
                                            "@name": "utf8",
                                            "@c:type": "const char*"
                                        }
                                    }
                                ]
                            }
                        },
                        {
                            "@name": "ref",
                            "@c:identifier": "soup_message_headers_ref",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../libsoup/soup-message-headers.c",
                                "@line": "85",
                                "#text": "Atomically increments the reference count of @hdrs by one."
                            },
                            "source-position": {
                                "@filename": "../libsoup/soup-message-headers.h",
                                "@line": "27"
                            },
                            "return-value": {
                                "@transfer-ownership": "full",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "../libsoup/soup-message-headers.c",
                                    "@line": "91",
                                    "#text": "the passed in #SoupMessageHeaders"
                                },
                                "type": {
                                    "@name": "MessageHeaders",
                                    "@c:type": "SoupMessageHeaders*"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "hdrs",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../libsoup/soup-message-headers.c",
                                        "@line": "87",
                                        "#text": "a #SoupMessageHeaders"
                                    },
                                    "type": {
                                        "@name": "MessageHeaders",
                                        "@c:type": "SoupMessageHeaders*"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "remove",
                            "@c:identifier": "soup_message_headers_remove",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../libsoup/soup-message-headers.c",
                                "@line": "485",
                                "#text": "Removes @name from @hdrs.\n\nIf there are multiple values for @name, they are all removed."
                            },
                            "source-position": {
                                "@filename": "../libsoup/soup-message-headers.h",
                                "@line": "42"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "type": {
                                    "@name": "none",
                                    "@c:type": "void"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "hdrs",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../libsoup/soup-message-headers.c",
                                        "@line": "487",
                                        "#text": "a #SoupMessageHeaders"
                                    },
                                    "type": {
                                        "@name": "MessageHeaders",
                                        "@c:type": "SoupMessageHeaders*"
                                    }
                                },
                                "parameter": {
                                    "@name": "name",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../libsoup/soup-message-headers.c",
                                        "@line": "488",
                                        "#text": "the header name to remove"
                                    },
                                    "type": {
                                        "@name": "utf8",
                                        "@c:type": "const char*"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "replace",
                            "@c:identifier": "soup_message_headers_replace",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../libsoup/soup-message-headers.c",
                                "@line": "373",
                                "#text": "Replaces the value of the header @name in @hdrs with @value.\n\nSee also [method@MessageHeaders.append].\n\nThe caller is expected to make sure that @name and @value are\nsyntactically correct."
                            },
                            "source-position": {
                                "@filename": "../libsoup/soup-message-headers.h",
                                "@line": "37"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "type": {
                                    "@name": "none",
                                    "@c:type": "void"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "hdrs",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../libsoup/soup-message-headers.c",
                                        "@line": "375",
                                        "#text": "a #SoupMessageHeaders"
                                    },
                                    "type": {
                                        "@name": "MessageHeaders",
                                        "@c:type": "SoupMessageHeaders*"
                                    }
                                },
                                "parameter": [
                                    {
                                        "@name": "name",
                                        "@transfer-ownership": "none",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "../libsoup/soup-message-headers.c",
                                            "@line": "376",
                                            "#text": "the header name to replace"
                                        },
                                        "type": {
                                            "@name": "utf8",
                                            "@c:type": "const char*"
                                        }
                                    },
                                    {
                                        "@name": "value",
                                        "@transfer-ownership": "none",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "../libsoup/soup-message-headers.c",
                                            "@line": "377",
                                            "#text": "the new value of @name"
                                        },
                                        "type": {
                                            "@name": "utf8",
                                            "@c:type": "const char*"
                                        }
                                    }
                                ]
                            }
                        },
                        {
                            "@name": "set_content_disposition",
                            "@c:identifier": "soup_message_headers_set_content_disposition",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../libsoup/soup-message-headers.c",
                                "@line": "1619",
                                "#text": "Sets the \"Content-Disposition\" header in @hdrs to @disposition,\noptionally with additional parameters specified in @params.\n\nSee [method@MessageHeaders.get_content_disposition] for a discussion\nof how Content-Disposition is used in HTTP."
                            },
                            "source-position": {
                                "@filename": "../libsoup/soup-message-headers.h",
                                "@line": "171"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "type": {
                                    "@name": "none",
                                    "@c:type": "void"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "hdrs",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../libsoup/soup-message-headers.c",
                                        "@line": "1621",
                                        "#text": "a #SoupMessageHeaders"
                                    },
                                    "type": {
                                        "@name": "MessageHeaders",
                                        "@c:type": "SoupMessageHeaders*"
                                    }
                                },
                                "parameter": [
                                    {
                                        "@name": "disposition",
                                        "@transfer-ownership": "none",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "../libsoup/soup-message-headers.c",
                                            "@line": "1622",
                                            "#text": "the disposition-type"
                                        },
                                        "type": {
                                            "@name": "utf8",
                                            "@c:type": "const char*"
                                        }
                                    },
                                    {
                                        "@name": "params",
                                        "@transfer-ownership": "none",
                                        "@nullable": "1",
                                        "@allow-none": "1",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "../libsoup/soup-message-headers.c",
                                            "@line": "1623",
                                            "#text": "additional parameters"
                                        },
                                        "type": {
                                            "@name": "GLib.HashTable",
                                            "@c:type": "GHashTable*",
                                            "type": [
                                                {
                                                    "@name": "utf8"
                                                },
                                                {
                                                    "@name": "utf8"
                                                }
                                            ]
                                        }
                                    }
                                ]
                            }
                        },
                        {
                            "@name": "set_content_length",
                            "@c:identifier": "soup_message_headers_set_content_length",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../libsoup/soup-message-headers.c",
                                "@line": "1016",
                                "#text": "Sets the message body length that @hdrs will declare, and sets\n@hdrs's encoding to %SOUP_ENCODING_CONTENT_LENGTH.\n\nYou do not normally need to call this; if @hdrs is set to use\nContent-Length encoding, libsoup will automatically set its\nContent-Length header for you immediately before sending the\nheaders. One situation in which this method is useful is when\ngenerating the response to a HEAD request; Calling\n[method@MessageHeaders.set_content_length] allows you to put the\ncorrect content length into the response without needing to waste\nmemory by filling in a response body which won't actually be sent."
                            },
                            "source-position": {
                                "@filename": "../libsoup/soup-message-headers.h",
                                "@line": "110"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "type": {
                                    "@name": "none",
                                    "@c:type": "void"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "hdrs",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../libsoup/soup-message-headers.c",
                                        "@line": "1018",
                                        "#text": "a #SoupMessageHeaders"
                                    },
                                    "type": {
                                        "@name": "MessageHeaders",
                                        "@c:type": "SoupMessageHeaders*"
                                    }
                                },
                                "parameter": {
                                    "@name": "content_length",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../libsoup/soup-message-headers.c",
                                        "@line": "1019",
                                        "#text": "the message body length"
                                    },
                                    "type": {
                                        "@name": "gint64",
                                        "@c:type": "goffset"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "set_content_range",
                            "@c:identifier": "soup_message_headers_set_content_range",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../libsoup/soup-message-headers.c",
                                "@line": "1407",
                                "#text": "Sets @hdrs's Content-Range header according to the given values.\n\n(Note that @total_length is the total length of the entire resource\nthat this is a range of, not simply @end - @start + 1.)\n\n[class@Server] has built-in handling for range requests, and you do\nnot normally need to call this function youself. See\n[method@MessageHeaders.get_ranges] for more details."
                            },
                            "source-position": {
                                "@filename": "../libsoup/soup-message-headers.h",
                                "@line": "152"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "type": {
                                    "@name": "none",
                                    "@c:type": "void"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "hdrs",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../libsoup/soup-message-headers.c",
                                        "@line": "1409",
                                        "#text": "a #SoupMessageHeaders"
                                    },
                                    "type": {
                                        "@name": "MessageHeaders",
                                        "@c:type": "SoupMessageHeaders*"
                                    }
                                },
                                "parameter": [
                                    {
                                        "@name": "start",
                                        "@transfer-ownership": "none",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "../libsoup/soup-message-headers.c",
                                            "@line": "1410",
                                            "#text": "the start of the range"
                                        },
                                        "type": {
                                            "@name": "gint64",
                                            "@c:type": "goffset"
                                        }
                                    },
                                    {
                                        "@name": "end",
                                        "@transfer-ownership": "none",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "../libsoup/soup-message-headers.c",
                                            "@line": "1411",
                                            "#text": "the end of the range"
                                        },
                                        "type": {
                                            "@name": "gint64",
                                            "@c:type": "goffset"
                                        }
                                    },
                                    {
                                        "@name": "total_length",
                                        "@transfer-ownership": "none",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "../libsoup/soup-message-headers.c",
                                            "@line": "1412",
                                            "#text": "the total length of the resource, or -1 if unknown"
                                        },
                                        "type": {
                                            "@name": "gint64",
                                            "@c:type": "goffset"
                                        }
                                    }
                                ]
                            }
                        },
                        {
                            "@name": "set_content_type",
                            "@c:identifier": "soup_message_headers_set_content_type",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../libsoup/soup-message-headers.c",
                                "@line": "1547",
                                "#text": "Sets the \"Content-Type\" header in @hdrs to @content_type.\n\nAccepts additional parameters specified in @params."
                            },
                            "source-position": {
                                "@filename": "../libsoup/soup-message-headers.h",
                                "@line": "162"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "type": {
                                    "@name": "none",
                                    "@c:type": "void"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "hdrs",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../libsoup/soup-message-headers.c",
                                        "@line": "1549",
                                        "#text": "a #SoupMessageHeaders"
                                    },
                                    "type": {
                                        "@name": "MessageHeaders",
                                        "@c:type": "SoupMessageHeaders*"
                                    }
                                },
                                "parameter": [
                                    {
                                        "@name": "content_type",
                                        "@transfer-ownership": "none",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "../libsoup/soup-message-headers.c",
                                            "@line": "1550",
                                            "#text": "the MIME type"
                                        },
                                        "type": {
                                            "@name": "utf8",
                                            "@c:type": "const char*"
                                        }
                                    },
                                    {
                                        "@name": "params",
                                        "@transfer-ownership": "none",
                                        "@nullable": "1",
                                        "@allow-none": "1",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "../libsoup/soup-message-headers.c",
                                            "@line": "1551",
                                            "#text": "additional parameters"
                                        },
                                        "type": {
                                            "@name": "GLib.HashTable",
                                            "@c:type": "GHashTable*",
                                            "type": [
                                                {
                                                    "@name": "utf8"
                                                },
                                                {
                                                    "@name": "utf8"
                                                }
                                            ]
                                        }
                                    }
                                ]
                            }
                        },
                        {
                            "@name": "set_encoding",
                            "@c:identifier": "soup_message_headers_set_encoding",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../libsoup/soup-message-headers.c",
                                "@line": "953",
                                "#text": "Sets the message body encoding that @hdrs will declare.\n\nIn particular, you should use this if you are going to send a request or\nresponse in chunked encoding."
                            },
                            "source-position": {
                                "@filename": "../libsoup/soup-message-headers.h",
                                "@line": "104"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "type": {
                                    "@name": "none",
                                    "@c:type": "void"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "hdrs",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../libsoup/soup-message-headers.c",
                                        "@line": "955",
                                        "#text": "a #SoupMessageHeaders"
                                    },
                                    "type": {
                                        "@name": "MessageHeaders",
                                        "@c:type": "SoupMessageHeaders*"
                                    }
                                },
                                "parameter": {
                                    "@name": "encoding",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../libsoup/soup-message-headers.c",
                                        "@line": "956",
                                        "#text": "a #SoupEncoding"
                                    },
                                    "type": {
                                        "@name": "Encoding",
                                        "@c:type": "SoupEncoding"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "set_expectations",
                            "@c:identifier": "soup_message_headers_set_expectations",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../libsoup/soup-message-headers.c",
                                "@line": "1070",
                                "#text": "Sets @hdrs's \"Expect\" header according to @expectations.\n\nCurrently %SOUP_EXPECTATION_CONTINUE is the only known expectation\nvalue. You should set this value on a request if you are sending a\nlarge message body (eg, via POST or PUT), and want to give the\nserver a chance to reject the request after seeing just the headers\n(eg, because it will require authentication before allowing you to\npost, or because you're POSTing to a URL that doesn't exist). This\nsaves you from having to transmit the large request body when the\nserver is just going to ignore it anyway."
                            },
                            "source-position": {
                                "@filename": "../libsoup/soup-message-headers.h",
                                "@line": "121"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "type": {
                                    "@name": "none",
                                    "@c:type": "void"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "hdrs",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../libsoup/soup-message-headers.c",
                                        "@line": "1072",
                                        "#text": "a #SoupMessageHeaders"
                                    },
                                    "type": {
                                        "@name": "MessageHeaders",
                                        "@c:type": "SoupMessageHeaders*"
                                    }
                                },
                                "parameter": {
                                    "@name": "expectations",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../libsoup/soup-message-headers.c",
                                        "@line": "1073",
                                        "#text": "the expectations to set"
                                    },
                                    "type": {
                                        "@name": "Expectation",
                                        "@c:type": "SoupExpectation"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "set_range",
                            "@c:identifier": "soup_message_headers_set_range",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../libsoup/soup-message-headers.c",
                                "@line": "1330",
                                "#text": "Sets @hdrs's Range header to request the indicated range.\n\n@start and @end are interpreted as in a [struct@Range].\n\nIf you need to request multiple ranges, use\n[method@MessageHeaders.set_ranges]."
                            },
                            "source-position": {
                                "@filename": "../libsoup/soup-message-headers.h",
                                "@line": "142"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "type": {
                                    "@name": "none",
                                    "@c:type": "void"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "hdrs",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../libsoup/soup-message-headers.c",
                                        "@line": "1332",
                                        "#text": "a #SoupMessageHeaders"
                                    },
                                    "type": {
                                        "@name": "MessageHeaders",
                                        "@c:type": "SoupMessageHeaders*"
                                    }
                                },
                                "parameter": [
                                    {
                                        "@name": "start",
                                        "@transfer-ownership": "none",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "../libsoup/soup-message-headers.c",
                                            "@line": "1333",
                                            "#text": "the start of the range to request"
                                        },
                                        "type": {
                                            "@name": "gint64",
                                            "@c:type": "goffset"
                                        }
                                    },
                                    {
                                        "@name": "end",
                                        "@transfer-ownership": "none",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "../libsoup/soup-message-headers.c",
                                            "@line": "1334",
                                            "#text": "the end of the range to request"
                                        },
                                        "type": {
                                            "@name": "gint64",
                                            "@c:type": "goffset"
                                        }
                                    }
                                ]
                            }
                        },
                        {
                            "@name": "set_ranges",
                            "@c:identifier": "soup_message_headers_set_ranges",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../libsoup/soup-message-headers.c",
                                "@line": "1291",
                                "#text": "Sets @hdrs's Range header to request the indicated ranges.\n\nIf you only want to request a single range, you can use\n[method@MessageHeaders.set_range]."
                            },
                            "source-position": {
                                "@filename": "../libsoup/soup-message-headers.h",
                                "@line": "138"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "type": {
                                    "@name": "none",
                                    "@c:type": "void"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "hdrs",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../libsoup/soup-message-headers.c",
                                        "@line": "1293",
                                        "#text": "a #SoupMessageHeaders"
                                    },
                                    "type": {
                                        "@name": "MessageHeaders",
                                        "@c:type": "SoupMessageHeaders*"
                                    }
                                },
                                "parameter": [
                                    {
                                        "@name": "ranges",
                                        "@transfer-ownership": "none",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "../libsoup/soup-message-headers.c",
                                            "@line": "1294",
                                            "#text": "an array of #SoupRange"
                                        },
                                        "type": {
                                            "@name": "Range",
                                            "@c:type": "SoupRange*"
                                        }
                                    },
                                    {
                                        "@name": "length",
                                        "@transfer-ownership": "none",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "../libsoup/soup-message-headers.c",
                                            "@line": "1295",
                                            "#text": "the length of @range"
                                        },
                                        "type": {
                                            "@name": "gint",
                                            "@c:type": "int"
                                        }
                                    }
                                ]
                            }
                        },
                        {
                            "@name": "unref",
                            "@c:identifier": "soup_message_headers_unref",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../libsoup/soup-message-headers.c",
                                "@line": "113",
                                "#text": "Atomically decrements the reference count of @hdrs by one.\n\nWhen the reference count reaches zero, the resources allocated by\n@hdrs are freed"
                            },
                            "source-position": {
                                "@filename": "../libsoup/soup-message-headers.h",
                                "@line": "30"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "type": {
                                    "@name": "none",
                                    "@c:type": "void"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "hdrs",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../libsoup/soup-message-headers.c",
                                        "@line": "115",
                                        "#text": "a #SoupMessageHeaders"
                                    },
                                    "type": {
                                        "@name": "MessageHeaders",
                                        "@c:type": "SoupMessageHeaders*"
                                    }
                                }
                            }
                        }
                    ]
                },
                {
                    "@name": "MessageHeadersIter",
                    "@c:type": "SoupMessageHeadersIter",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "../libsoup/soup-message-headers.c",
                        "@line": "760",
                        "#text": "An opaque type used to iterate over a %SoupMessageHeaders\nstructure.\n\nAfter intializing the iterator with [func@MessageHeadersIter.init], call\n[method@MessageHeadersIter.next] to fetch data from it.\n\nYou may not modify the headers while iterating over them."
                    },
                    "source-position": {
                        "@filename": "../libsoup/soup-message-headers.h",
                        "@line": "80"
                    },
                    "field": {
                        "@name": "dummy",
                        "@readable": "0",
                        "@private": "1",
                        "array": {
                            "@zero-terminated": "0",
                            "@fixed-size": "3",
                            "type": {
                                "@name": "gpointer",
                                "@c:type": "gpointer"
                            }
                        }
                    },
                    "method": {
                        "@name": "next",
                        "@c:identifier": "soup_message_headers_iter_next",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "../libsoup/soup-message-headers.c",
                            "@line": "797",
                            "#text": "Yields the next name/value pair in the [struct@MessageHeaders] being\niterated by @iter.\n\nIf @iter has already yielded the last header, then\n[method@MessageHeadersIter.next] will return %FALSE and @name and @value\nwill be unchanged."
                        },
                        "source-position": {
                            "@filename": "../libsoup/soup-message-headers.h",
                            "@line": "86"
                        },
                        "return-value": {
                            "@transfer-ownership": "none",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../libsoup/soup-message-headers.c",
                                "@line": "812",
                                "#text": "%TRUE if another name and value were returned, %FALSE\n  if the end of the headers has been reached."
                            },
                            "type": {
                                "@name": "gboolean",
                                "@c:type": "gboolean"
                            }
                        },
                        "parameters": {
                            "instance-parameter": {
                                "@name": "iter",
                                "@direction": "inout",
                                "@caller-allocates": "0",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "../libsoup/soup-message-headers.c",
                                    "@line": "799",
                                    "#text": "a %SoupMessageHeadersIter"
                                },
                                "type": {
                                    "@name": "MessageHeadersIter",
                                    "@c:type": "SoupMessageHeadersIter*"
                                }
                            },
                            "parameter": [
                                {
                                    "@name": "name",
                                    "@direction": "out",
                                    "@caller-allocates": "0",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../libsoup/soup-message-headers.c",
                                        "@line": "800",
                                        "#text": "pointer to a variable to return\n  the header name in"
                                    },
                                    "type": {
                                        "@name": "utf8",
                                        "@c:type": "const char**"
                                    }
                                },
                                {
                                    "@name": "value",
                                    "@direction": "out",
                                    "@caller-allocates": "0",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../libsoup/soup-message-headers.c",
                                        "@line": "802",
                                        "#text": "pointer to a variable to return\n  the header value in"
                                    },
                                    "type": {
                                        "@name": "utf8",
                                        "@c:type": "const char**"
                                    }
                                }
                            ]
                        }
                    },
                    "function": {
                        "@name": "init",
                        "@c:identifier": "soup_message_headers_iter_init",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "../libsoup/soup-message-headers.c",
                            "@line": "778",
                            "#text": "Initializes @iter for iterating @hdrs."
                        },
                        "source-position": {
                            "@filename": "../libsoup/soup-message-headers.h",
                            "@line": "83"
                        },
                        "return-value": {
                            "@transfer-ownership": "none",
                            "type": {
                                "@name": "none",
                                "@c:type": "void"
                            }
                        },
                        "parameters": {
                            "parameter": [
                                {
                                    "@name": "iter",
                                    "@direction": "out",
                                    "@caller-allocates": "1",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../libsoup/soup-message-headers.c",
                                        "@line": "780",
                                        "#text": "a pointer to a %SoupMessageHeadersIter\n  structure"
                                    },
                                    "type": {
                                        "@name": "MessageHeadersIter",
                                        "@c:type": "SoupMessageHeadersIter*"
                                    }
                                },
                                {
                                    "@name": "hdrs",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../libsoup/soup-message-headers.c",
                                        "@line": "782",
                                        "#text": "a %SoupMessageHeaders"
                                    },
                                    "type": {
                                        "@name": "MessageHeaders",
                                        "@c:type": "SoupMessageHeaders*"
                                    }
                                }
                            ]
                        }
                    }
                },
                {
                    "@name": "MessageMetrics",
                    "@c:type": "SoupMessageMetrics",
                    "@glib:type-name": "SoupMessageMetrics",
                    "@glib:get-type": "soup_message_metrics_get_type",
                    "@c:symbol-prefix": "message_metrics",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "../libsoup/soup-message-metrics.c",
                        "@line": "14",
                        "#text": "Contains metrics collected while loading a [class@Message] either from the\nnetwork or the disk cache.\n\nMetrics are not collected by default for a [class@Message], you need to add the\nflag %SOUP_MESSAGE_COLLECT_METRICS to enable the feature.\n\nTemporal metrics are expressed as a monotonic time and always start with a\nfetch start event and finish with response end. All other events are optional.\nAn event can be 0 because it hasn't happened yet, because it's optional or\nbecause the load failed before the event reached.\n\nSize metrics are expressed in bytes and aree updated while the [class@Message] is\nbeing loaded. You can connect to different [class@Message] signals to get the\nfinal result of every value."
                    },
                    "source-position": {
                        "@filename": "../libsoup/soup-types.h",
                        "@line": "25"
                    },
                    "method": [
                        {
                            "@name": "copy",
                            "@c:identifier": "soup_message_metrics_copy",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../libsoup/soup-message-metrics.c",
                                "@line": "41",
                                "#text": "Copies @metrics."
                            },
                            "source-position": {
                                "@filename": "../libsoup/soup-message-metrics.h",
                                "@line": "19"
                            },
                            "return-value": {
                                "@transfer-ownership": "full",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "../libsoup/soup-message-metrics.c",
                                    "@line": "47",
                                    "#text": "a copy of @metrics"
                                },
                                "type": {
                                    "@name": "MessageMetrics",
                                    "@c:type": "SoupMessageMetrics*"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "metrics",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../libsoup/soup-message-metrics.c",
                                        "@line": "43",
                                        "#text": "a #SoupMessageMetrics"
                                    },
                                    "type": {
                                        "@name": "MessageMetrics",
                                        "@c:type": "SoupMessageMetrics*"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "free",
                            "@c:identifier": "soup_message_metrics_free",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../libsoup/soup-message-metrics.c",
                                "@line": "62",
                                "#text": "Frees @metrics."
                            },
                            "source-position": {
                                "@filename": "../libsoup/soup-message-metrics.h",
                                "@line": "22"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "type": {
                                    "@name": "none",
                                    "@c:type": "void"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "metrics",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../libsoup/soup-message-metrics.c",
                                        "@line": "64",
                                        "#text": "a #SoupMessageMetrics"
                                    },
                                    "type": {
                                        "@name": "MessageMetrics",
                                        "@c:type": "SoupMessageMetrics*"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "get_connect_end",
                            "@c:identifier": "soup_message_metrics_get_connect_end",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../libsoup/soup-message-metrics.c",
                                "@line": "156",
                                "#text": "Get the time immediately after the [class@Message] completed the\nconnection to the server. This includes the time for the proxy\nnegotiation and TLS handshake.\n\nIt will be 0 if no network connection was required to fetch the resource (a\npersistent connection was used or resource was loaded from the local disk\ncache)."
                            },
                            "source-position": {
                                "@filename": "../libsoup/soup-message-metrics.h",
                                "@line": "37"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "../libsoup/soup-message-metrics.c",
                                    "@line": "168",
                                    "#text": "the connection end time"
                                },
                                "type": {
                                    "@name": "guint64",
                                    "@c:type": "guint64"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "metrics",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../libsoup/soup-message-metrics.c",
                                        "@line": "158",
                                        "#text": "a #SoupMessageMetrics"
                                    },
                                    "type": {
                                        "@name": "MessageMetrics",
                                        "@c:type": "SoupMessageMetrics*"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "get_connect_start",
                            "@c:identifier": "soup_message_metrics_get_connect_start",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../libsoup/soup-message-metrics.c",
                                "@line": "135",
                                "#text": "Get the time immediately before the [class@Message] started to\nestablish the connection to the server.\n\nIt will be 0 if no network connection was required to fetch the resource (a\npersistent connection was used or resource was loaded from the local disk\ncache)."
                            },
                            "source-position": {
                                "@filename": "../libsoup/soup-message-metrics.h",
                                "@line": "34"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "../libsoup/soup-message-metrics.c",
                                    "@line": "146",
                                    "#text": "the connection start time"
                                },
                                "type": {
                                    "@name": "guint64",
                                    "@c:type": "guint64"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "metrics",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../libsoup/soup-message-metrics.c",
                                        "@line": "137",
                                        "#text": "a #SoupMessageMetrics"
                                    },
                                    "type": {
                                        "@name": "MessageMetrics",
                                        "@c:type": "SoupMessageMetrics*"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "get_dns_end",
                            "@c:identifier": "soup_message_metrics_get_dns_end",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../libsoup/soup-message-metrics.c",
                                "@line": "114",
                                "#text": "Get the time immediately after the [class@Message] completed the\ndomain lookup name for the resource.\n\nIt will be 0 if no domain lookup was required to fetch the resource (a\npersistent connection was used or resource was loaded from the local disk\ncache)."
                            },
                            "source-position": {
                                "@filename": "../libsoup/soup-message-metrics.h",
                                "@line": "31"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "../libsoup/soup-message-metrics.c",
                                    "@line": "125",
                                    "#text": "the domain lookup end time"
                                },
                                "type": {
                                    "@name": "guint64",
                                    "@c:type": "guint64"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "metrics",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../libsoup/soup-message-metrics.c",
                                        "@line": "116",
                                        "#text": "a #SoupMessageMetrics"
                                    },
                                    "type": {
                                        "@name": "MessageMetrics",
                                        "@c:type": "SoupMessageMetrics*"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "get_dns_start",
                            "@c:identifier": "soup_message_metrics_get_dns_start",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../libsoup/soup-message-metrics.c",
                                "@line": "93",
                                "#text": "Get the time immediately before the [class@Message] started the\ndomain lookup name for the resource.\n\nIt will be 0 if no domain lookup was required to fetch the resource (a\npersistent connection was used or resource was loaded from the local disk\ncache)."
                            },
                            "source-position": {
                                "@filename": "../libsoup/soup-message-metrics.h",
                                "@line": "28"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "../libsoup/soup-message-metrics.c",
                                    "@line": "104",
                                    "#text": "the domain lookup start time"
                                },
                                "type": {
                                    "@name": "guint64",
                                    "@c:type": "guint64"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "metrics",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../libsoup/soup-message-metrics.c",
                                        "@line": "95",
                                        "#text": "a #SoupMessageMetrics"
                                    },
                                    "type": {
                                        "@name": "MessageMetrics",
                                        "@c:type": "SoupMessageMetrics*"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "get_fetch_start",
                            "@c:identifier": "soup_message_metrics_get_fetch_start",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../libsoup/soup-message-metrics.c",
                                "@line": "76",
                                "#text": "Get the time immediately before the [class@Message] started to\nfetch a resource either from a remote server or local disk cache."
                            },
                            "source-position": {
                                "@filename": "../libsoup/soup-message-metrics.h",
                                "@line": "25"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "../libsoup/soup-message-metrics.c",
                                    "@line": "83",
                                    "#text": "the fetch start time"
                                },
                                "type": {
                                    "@name": "guint64",
                                    "@c:type": "guint64"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "metrics",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../libsoup/soup-message-metrics.c",
                                        "@line": "78",
                                        "#text": "a #SoupMessageMetrics"
                                    },
                                    "type": {
                                        "@name": "MessageMetrics",
                                        "@c:type": "SoupMessageMetrics*"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "get_request_body_bytes_sent",
                            "@c:identifier": "soup_message_metrics_get_request_body_bytes_sent",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../libsoup/soup-message-metrics.c",
                                "@line": "292",
                                "#text": "Get the number of bytes sent to the network for the request body.\n\nThis is the size of the body sent, after encodings are applied, so it might\nbe greater than the value returned by\n[method@MessageMetrics.get_request_body_size]. This value is available right\nbefore [signal@Message::wrote-body] signal is emitted, but you might get an\nintermediate value if called before."
                            },
                            "source-position": {
                                "@filename": "../libsoup/soup-message-metrics.h",
                                "@line": "58"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "../libsoup/soup-message-metrics.c",
                                    "@line": "304",
                                    "#text": "the request body bytes sent"
                                },
                                "type": {
                                    "@name": "guint64",
                                    "@c:type": "guint64"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "metrics",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../libsoup/soup-message-metrics.c",
                                        "@line": "294",
                                        "#text": "a #SoupMessageMetrics"
                                    },
                                    "type": {
                                        "@name": "MessageMetrics",
                                        "@c:type": "SoupMessageMetrics*"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "get_request_body_size",
                            "@c:identifier": "soup_message_metrics_get_request_body_size",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../libsoup/soup-message-metrics.c",
                                "@line": "272",
                                "#text": "Get the request body size in bytes. This is the size of the original body\ngiven to the request before any encoding is applied.\n\nThis value is available right before [signal@Message::wrote-body] signal is\nemitted, but you might get an intermediate value if called before."
                            },
                            "source-position": {
                                "@filename": "../libsoup/soup-message-metrics.h",
                                "@line": "55"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "../libsoup/soup-message-metrics.c",
                                    "@line": "282",
                                    "#text": "the request body size"
                                },
                                "type": {
                                    "@name": "guint64",
                                    "@c:type": "guint64"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "metrics",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../libsoup/soup-message-metrics.c",
                                        "@line": "274",
                                        "#text": "a #SoupMessageMetrics"
                                    },
                                    "type": {
                                        "@name": "MessageMetrics",
                                        "@c:type": "SoupMessageMetrics*"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "get_request_header_bytes_sent",
                            "@c:identifier": "soup_message_metrics_get_request_header_bytes_sent",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../libsoup/soup-message-metrics.c",
                                "@line": "253",
                                "#text": "Get the number of bytes sent to the network for the request headers.\n\nThis value is available right before [signal@Message::wrote-headers] signal\nis emitted, but you might get an intermediate value if called before."
                            },
                            "source-position": {
                                "@filename": "../libsoup/soup-message-metrics.h",
                                "@line": "52"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "../libsoup/soup-message-metrics.c",
                                    "@line": "262",
                                    "#text": "the request headers bytes sent"
                                },
                                "type": {
                                    "@name": "guint64",
                                    "@c:type": "guint64"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "metrics",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../libsoup/soup-message-metrics.c",
                                        "@line": "255",
                                        "#text": "a #SoupMessageMetrics"
                                    },
                                    "type": {
                                        "@name": "MessageMetrics",
                                        "@c:type": "SoupMessageMetrics*"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "get_request_start",
                            "@c:identifier": "soup_message_metrics_get_request_start",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../libsoup/soup-message-metrics.c",
                                "@line": "199",
                                "#text": "Get the time immediately before the [class@Message] started the\nrequest of the resource from the server or the local disk cache."
                            },
                            "source-position": {
                                "@filename": "../libsoup/soup-message-metrics.h",
                                "@line": "43"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "../libsoup/soup-message-metrics.c",
                                    "@line": "206",
                                    "#text": "the request start time"
                                },
                                "type": {
                                    "@name": "guint64",
                                    "@c:type": "guint64"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "metrics",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../libsoup/soup-message-metrics.c",
                                        "@line": "201",
                                        "#text": "a #SoupMessageMetrics"
                                    },
                                    "type": {
                                        "@name": "MessageMetrics",
                                        "@c:type": "SoupMessageMetrics*"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "get_response_body_bytes_received",
                            "@c:identifier": "soup_message_metrics_get_response_body_bytes_received",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../libsoup/soup-message-metrics.c",
                                "@line": "356",
                                "#text": "Get the number of bytes received from the network for the response body.\n\nThis value is available right before [signal@Message::got-body] signal is\nemitted, but you might get an intermediate value if called before. For\nresources loaded from the disk cache this value is always 0."
                            },
                            "source-position": {
                                "@filename": "../libsoup/soup-message-metrics.h",
                                "@line": "67"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "../libsoup/soup-message-metrics.c",
                                    "@line": "366",
                                    "#text": "the response body bytes received"
                                },
                                "type": {
                                    "@name": "guint64",
                                    "@c:type": "guint64"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "metrics",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../libsoup/soup-message-metrics.c",
                                        "@line": "358",
                                        "#text": "a #SoupMessageMetrics"
                                    },
                                    "type": {
                                        "@name": "MessageMetrics",
                                        "@c:type": "SoupMessageMetrics*"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "get_response_body_size",
                            "@c:identifier": "soup_message_metrics_get_response_body_size",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../libsoup/soup-message-metrics.c",
                                "@line": "334",
                                "#text": "Get the response body size in bytes.\n\nThis is the size of the body as given to the user after all encodings are\napplied, so it might be greater than the value returned by\n[method@MessageMetrics.get_response_body_bytes_received]. This value is\navailable right before [signal@Message::got-body] signal is emitted, but you\nmight get an intermediate value if called before."
                            },
                            "source-position": {
                                "@filename": "../libsoup/soup-message-metrics.h",
                                "@line": "64"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "../libsoup/soup-message-metrics.c",
                                    "@line": "346",
                                    "#text": "the response body size"
                                },
                                "type": {
                                    "@name": "guint64",
                                    "@c:type": "guint64"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "metrics",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../libsoup/soup-message-metrics.c",
                                        "@line": "336",
                                        "#text": "a #SoupMessageMetrics"
                                    },
                                    "type": {
                                        "@name": "MessageMetrics",
                                        "@c:type": "SoupMessageMetrics*"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "get_response_end",
                            "@c:identifier": "soup_message_metrics_get_response_end",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../libsoup/soup-message-metrics.c",
                                "@line": "233",
                                "#text": "Get the time immediately after the [class@Message] received the last\nbytes of the response from the server or the local disk cache.\n\nIn case of load failure, this returns the time immediately before the\nfetch is aborted."
                            },
                            "source-position": {
                                "@filename": "../libsoup/soup-message-metrics.h",
                                "@line": "49"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "../libsoup/soup-message-metrics.c",
                                    "@line": "243",
                                    "#text": "the response end time"
                                },
                                "type": {
                                    "@name": "guint64",
                                    "@c:type": "guint64"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "metrics",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../libsoup/soup-message-metrics.c",
                                        "@line": "235",
                                        "#text": "a #SoupMessageMetrics"
                                    },
                                    "type": {
                                        "@name": "MessageMetrics",
                                        "@c:type": "SoupMessageMetrics*"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "get_response_header_bytes_received",
                            "@c:identifier": "soup_message_metrics_get_response_header_bytes_received",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../libsoup/soup-message-metrics.c",
                                "@line": "314",
                                "#text": "Get the number of bytes received from the network for the response headers.\n\nThis value is available right before [signal@Message::got-headers] signal\nis emitted, but you might get an intermediate value if called before.\nFor resources loaded from the disk cache this value is always 0."
                            },
                            "source-position": {
                                "@filename": "../libsoup/soup-message-metrics.h",
                                "@line": "61"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "../libsoup/soup-message-metrics.c",
                                    "@line": "324",
                                    "#text": "the response headers bytes received"
                                },
                                "type": {
                                    "@name": "guint64",
                                    "@c:type": "guint64"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "metrics",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../libsoup/soup-message-metrics.c",
                                        "@line": "316",
                                        "#text": "a #SoupMessageMetrics"
                                    },
                                    "type": {
                                        "@name": "MessageMetrics",
                                        "@c:type": "SoupMessageMetrics*"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "get_response_start",
                            "@c:identifier": "soup_message_metrics_get_response_start",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../libsoup/soup-message-metrics.c",
                                "@line": "216",
                                "#text": "Get the time immediately after the [class@Message] received the first\nbytes of the response from the server or the local disk cache."
                            },
                            "source-position": {
                                "@filename": "../libsoup/soup-message-metrics.h",
                                "@line": "46"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "../libsoup/soup-message-metrics.c",
                                    "@line": "223",
                                    "#text": "the response start time"
                                },
                                "type": {
                                    "@name": "guint64",
                                    "@c:type": "guint64"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "metrics",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../libsoup/soup-message-metrics.c",
                                        "@line": "218",
                                        "#text": "a #SoupMessageMetrics"
                                    },
                                    "type": {
                                        "@name": "MessageMetrics",
                                        "@c:type": "SoupMessageMetrics*"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "get_tls_start",
                            "@c:identifier": "soup_message_metrics_get_tls_start",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../libsoup/soup-message-metrics.c",
                                "@line": "178",
                                "#text": "Get the time immediately before the [class@Message] started the\nTLS handshake.\n\nIt will be 0 if no TLS handshake was required to fetch the resource\n(connection was not secure, a persistent connection was used or resource was\nloaded from the local disk cache)."
                            },
                            "source-position": {
                                "@filename": "../libsoup/soup-message-metrics.h",
                                "@line": "40"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "../libsoup/soup-message-metrics.c",
                                    "@line": "189",
                                    "#text": "the tls start time"
                                },
                                "type": {
                                    "@name": "guint64",
                                    "@c:type": "guint64"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "metrics",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../libsoup/soup-message-metrics.c",
                                        "@line": "180",
                                        "#text": "a #SoupMessageMetrics"
                                    },
                                    "type": {
                                        "@name": "MessageMetrics",
                                        "@c:type": "SoupMessageMetrics*"
                                    }
                                }
                            }
                        }
                    ]
                },
                {
                    "@name": "Multipart",
                    "@c:type": "SoupMultipart",
                    "@glib:type-name": "SoupMultipart",
                    "@glib:get-type": "soup_multipart_get_type",
                    "@c:symbol-prefix": "multipart",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "../libsoup/soup-multipart.c",
                        "@line": "19",
                        "#text": "Represents a multipart HTTP message body, parsed according to the\nsyntax of RFC 2046.\n\nOf particular interest to HTTP are `multipart/byte-ranges` and\n`multipart/form-data`,\n\nAlthough the headers of a #SoupMultipart body part will contain the\nfull headers from that body part, libsoup does not interpret them\naccording to MIME rules. For example, each body part is assumed to\nhave \"binary\" Content-Transfer-Encoding, even if its headers\nexplicitly state otherwise. In other words, don't try to use\n#SoupMultipart for handling real MIME multiparts."
                    },
                    "source-position": {
                        "@filename": "../libsoup/soup-multipart.h",
                        "@line": "14"
                    },
                    "constructor": [
                        {
                            "@name": "new",
                            "@c:identifier": "soup_multipart_new",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../libsoup/soup-multipart.c",
                                "@line": "72",
                                "#text": "Creates a new empty #SoupMultipart with a randomly-generated\nboundary string.\n\nNote that @mime_type must be the full MIME type, including \"multipart/\".\n\nSee also: [ctor@Message.new_from_multipart]."
                            },
                            "source-position": {
                                "@filename": "../libsoup/soup-multipart.h",
                                "@line": "21"
                            },
                            "return-value": {
                                "@transfer-ownership": "full",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "../libsoup/soup-multipart.c",
                                    "@line": "83",
                                    "#text": "a new empty #SoupMultipart of the given @mime_type"
                                },
                                "type": {
                                    "@name": "Multipart",
                                    "@c:type": "SoupMultipart*"
                                }
                            },
                            "parameters": {
                                "parameter": {
                                    "@name": "mime_type",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../libsoup/soup-multipart.c",
                                        "@line": "74",
                                        "#text": "the MIME type of the multipart to create."
                                    },
                                    "type": {
                                        "@name": "utf8",
                                        "@c:type": "const char*"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "new_from_message",
                            "@c:identifier": "soup_multipart_new_from_message",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../libsoup/soup-multipart.c",
                                "@line": "118",
                                "#text": "Parses @headers and @body to form a new #SoupMultipart"
                            },
                            "source-position": {
                                "@filename": "../libsoup/soup-multipart.h",
                                "@line": "23"
                            },
                            "return-value": {
                                "@transfer-ownership": "full",
                                "@nullable": "1",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "../libsoup/soup-multipart.c",
                                    "@line": "125",
                                    "#text": "a new #SoupMultipart (or %NULL if the\n  message couldn't be parsed or wasn't multipart)."
                                },
                                "type": {
                                    "@name": "Multipart",
                                    "@c:type": "SoupMultipart*"
                                }
                            },
                            "parameters": {
                                "parameter": [
                                    {
                                        "@name": "headers",
                                        "@transfer-ownership": "none",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "../libsoup/soup-multipart.c",
                                            "@line": "120",
                                            "#text": "the headers of the HTTP message to parse"
                                        },
                                        "type": {
                                            "@name": "MessageHeaders",
                                            "@c:type": "SoupMessageHeaders*"
                                        }
                                    },
                                    {
                                        "@name": "body",
                                        "@transfer-ownership": "none",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "../libsoup/soup-multipart.c",
                                            "@line": "121",
                                            "#text": "the body of the HTTP message to parse"
                                        },
                                        "type": {
                                            "@name": "GLib.Bytes",
                                            "@c:type": "GBytes*"
                                        }
                                    }
                                ]
                            }
                        }
                    ],
                    "method": [
                        {
                            "@name": "append_form_file",
                            "@c:identifier": "soup_multipart_append_form_file",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../libsoup/soup-multipart.c",
                                "@line": "329",
                                "#text": "Adds a new MIME part containing @body to @multipart\n\nUses \"Content-Disposition: form-data\", as per the HTML forms specification."
                            },
                            "source-position": {
                                "@filename": "../libsoup/soup-multipart.h",
                                "@line": "44"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "type": {
                                    "@name": "none",
                                    "@c:type": "void"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "multipart",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../libsoup/soup-multipart.c",
                                        "@line": "331",
                                        "#text": "a multipart (presumably of type \"multipart/form-data\")"
                                    },
                                    "type": {
                                        "@name": "Multipart",
                                        "@c:type": "SoupMultipart*"
                                    }
                                },
                                "parameter": [
                                    {
                                        "@name": "control_name",
                                        "@transfer-ownership": "none",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "../libsoup/soup-multipart.c",
                                            "@line": "332",
                                            "#text": "the name of the control associated with this file"
                                        },
                                        "type": {
                                            "@name": "utf8",
                                            "@c:type": "const char*"
                                        }
                                    },
                                    {
                                        "@name": "filename",
                                        "@transfer-ownership": "none",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "../libsoup/soup-multipart.c",
                                            "@line": "333",
                                            "#text": "the name of the file, or %NULL if not known"
                                        },
                                        "type": {
                                            "@name": "utf8",
                                            "@c:type": "const char*"
                                        }
                                    },
                                    {
                                        "@name": "content_type",
                                        "@transfer-ownership": "none",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "../libsoup/soup-multipart.c",
                                            "@line": "334",
                                            "#text": "the MIME type of the file, or %NULL if not known"
                                        },
                                        "type": {
                                            "@name": "utf8",
                                            "@c:type": "const char*"
                                        }
                                    },
                                    {
                                        "@name": "body",
                                        "@transfer-ownership": "none",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "../libsoup/soup-multipart.c",
                                            "@line": "335",
                                            "#text": "the file data"
                                        },
                                        "type": {
                                            "@name": "GLib.Bytes",
                                            "@c:type": "GBytes*"
                                        }
                                    }
                                ]
                            }
                        },
                        {
                            "@name": "append_form_string",
                            "@c:identifier": "soup_multipart_append_form_string",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../libsoup/soup-multipart.c",
                                "@line": "307",
                                "#text": "Adds a new MIME part containing @data to @multipart.\n\nUses \"Content-Disposition: form-data\", as per the HTML forms specification."
                            },
                            "source-position": {
                                "@filename": "../libsoup/soup-multipart.h",
                                "@line": "40"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "type": {
                                    "@name": "none",
                                    "@c:type": "void"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "multipart",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../libsoup/soup-multipart.c",
                                        "@line": "309",
                                        "#text": "a multipart (presumably of type \"multipart/form-data\")"
                                    },
                                    "type": {
                                        "@name": "Multipart",
                                        "@c:type": "SoupMultipart*"
                                    }
                                },
                                "parameter": [
                                    {
                                        "@name": "control_name",
                                        "@transfer-ownership": "none",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "../libsoup/soup-multipart.c",
                                            "@line": "310",
                                            "#text": "the name of the control associated with @data"
                                        },
                                        "type": {
                                            "@name": "utf8",
                                            "@c:type": "const char*"
                                        }
                                    },
                                    {
                                        "@name": "data",
                                        "@transfer-ownership": "none",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "../libsoup/soup-multipart.c",
                                            "@line": "311",
                                            "#text": "the body data"
                                        },
                                        "type": {
                                            "@name": "utf8",
                                            "@c:type": "const char*"
                                        }
                                    }
                                ]
                            }
                        },
                        {
                            "@name": "append_part",
                            "@c:identifier": "soup_multipart_append_part",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../libsoup/soup-multipart.c",
                                "@line": "255",
                                "#text": "Adds a new MIME part to @multipart with the given headers and body.\n\n(The multipart will make its own copies of @headers and @body, so\nyou should free your copies if you are not using them for anything\nelse.)"
                            },
                            "source-position": {
                                "@filename": "../libsoup/soup-multipart.h",
                                "@line": "35"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "type": {
                                    "@name": "none",
                                    "@c:type": "void"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "multipart",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../libsoup/soup-multipart.c",
                                        "@line": "257",
                                        "#text": "a #SoupMultipart"
                                    },
                                    "type": {
                                        "@name": "Multipart",
                                        "@c:type": "SoupMultipart*"
                                    }
                                },
                                "parameter": [
                                    {
                                        "@name": "headers",
                                        "@transfer-ownership": "none",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "../libsoup/soup-multipart.c",
                                            "@line": "258",
                                            "#text": "the MIME part headers"
                                        },
                                        "type": {
                                            "@name": "MessageHeaders",
                                            "@c:type": "SoupMessageHeaders*"
                                        }
                                    },
                                    {
                                        "@name": "body",
                                        "@transfer-ownership": "none",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "../libsoup/soup-multipart.c",
                                            "@line": "259",
                                            "#text": "the MIME part body"
                                        },
                                        "type": {
                                            "@name": "GLib.Bytes",
                                            "@c:type": "GBytes*"
                                        }
                                    }
                                ]
                            }
                        },
                        {
                            "@name": "free",
                            "@c:identifier": "soup_multipart_free",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../libsoup/soup-multipart.c",
                                "@line": "429",
                                "#text": "Frees @multipart."
                            },
                            "source-position": {
                                "@filename": "../libsoup/soup-multipart.h",
                                "@line": "56"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "type": {
                                    "@name": "none",
                                    "@c:type": "void"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "multipart",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../libsoup/soup-multipart.c",
                                        "@line": "431",
                                        "#text": "a #SoupMultipart"
                                    },
                                    "type": {
                                        "@name": "Multipart",
                                        "@c:type": "SoupMultipart*"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "get_length",
                            "@c:identifier": "soup_multipart_get_length",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../libsoup/soup-multipart.c",
                                "@line": "216",
                                "#text": "Gets the number of body parts in @multipart."
                            },
                            "source-position": {
                                "@filename": "../libsoup/soup-multipart.h",
                                "@line": "27"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "../libsoup/soup-multipart.c",
                                    "@line": "222",
                                    "#text": "the number of body parts in @multipart"
                                },
                                "type": {
                                    "@name": "gint",
                                    "@c:type": "int"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "multipart",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../libsoup/soup-multipart.c",
                                        "@line": "218",
                                        "#text": "a #SoupMultipart"
                                    },
                                    "type": {
                                        "@name": "Multipart",
                                        "@c:type": "SoupMultipart*"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "get_part",
                            "@c:identifier": "soup_multipart_get_part",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../libsoup/soup-multipart.c",
                                "@line": "230",
                                "#text": "Gets the indicated body part from @multipart."
                            },
                            "source-position": {
                                "@filename": "../libsoup/soup-multipart.h",
                                "@line": "29"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "../libsoup/soup-multipart.c",
                                    "@line": "241",
                                    "#text": "%TRUE on success, %FALSE if @part is out of range (in\n  which case @headers and @body won't be set)"
                                },
                                "type": {
                                    "@name": "gboolean",
                                    "@c:type": "gboolean"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "multipart",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../libsoup/soup-multipart.c",
                                        "@line": "232",
                                        "#text": "a #SoupMultipart"
                                    },
                                    "type": {
                                        "@name": "Multipart",
                                        "@c:type": "SoupMultipart*"
                                    }
                                },
                                "parameter": [
                                    {
                                        "@name": "part",
                                        "@transfer-ownership": "none",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "../libsoup/soup-multipart.c",
                                            "@line": "233",
                                            "#text": "the part number to get (counting from 0)"
                                        },
                                        "type": {
                                            "@name": "gint",
                                            "@c:type": "int"
                                        }
                                    },
                                    {
                                        "@name": "headers",
                                        "@direction": "out",
                                        "@caller-allocates": "0",
                                        "@transfer-ownership": "none",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "../libsoup/soup-multipart.c",
                                            "@line": "234",
                                            "#text": "return location for the MIME part\n  headers"
                                        },
                                        "type": {
                                            "@name": "MessageHeaders",
                                            "@c:type": "SoupMessageHeaders**"
                                        }
                                    },
                                    {
                                        "@name": "body",
                                        "@direction": "out",
                                        "@caller-allocates": "0",
                                        "@transfer-ownership": "none",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "../libsoup/soup-multipart.c",
                                            "@line": "236",
                                            "#text": "return location for the MIME part\n  body"
                                        },
                                        "type": {
                                            "@name": "GLib.Bytes",
                                            "@c:type": "GBytes**"
                                        }
                                    }
                                ]
                            }
                        },
                        {
                            "@name": "to_message",
                            "@c:identifier": "soup_multipart_to_message",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../libsoup/soup-multipart.c",
                                "@line": "369",
                                "#text": "Serializes @multipart to @dest_headers and @dest_body."
                            },
                            "source-position": {
                                "@filename": "../libsoup/soup-multipart.h",
                                "@line": "51"
                            },
                            "return-value": {
                                "@transfer-ownership": "none",
                                "type": {
                                    "@name": "none",
                                    "@c:type": "void"
                                }
                            },
                            "parameters": {
                                "instance-parameter": {
                                    "@name": "multipart",
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../libsoup/soup-multipart.c",
                                        "@line": "371",
                                        "#text": "a #SoupMultipart"
                                    },
                                    "type": {
                                        "@name": "Multipart",
                                        "@c:type": "SoupMultipart*"
                                    }
                                },
                                "parameter": [
                                    {
                                        "@name": "dest_headers",
                                        "@transfer-ownership": "none",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "../libsoup/soup-multipart.c",
                                            "@line": "372",
                                            "#text": "the headers of the HTTP message to serialize @multipart to"
                                        },
                                        "type": {
                                            "@name": "MessageHeaders",
                                            "@c:type": "SoupMessageHeaders*"
                                        }
                                    },
                                    {
                                        "@name": "dest_body",
                                        "@direction": "out",
                                        "@caller-allocates": "0",
                                        "@transfer-ownership": "full",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "../libsoup/soup-multipart.c",
                                            "@line": "373",
                                            "#text": "the body of the HTTP message to serialize @multipart to"
                                        },
                                        "type": {
                                            "@name": "GLib.Bytes",
                                            "@c:type": "GBytes**"
                                        }
                                    }
                                ]
                            }
                        }
                    ]
                },
                {
                    "@name": "MultipartInputStreamClass",
                    "@c:type": "SoupMultipartInputStreamClass",
                    "@glib:is-gtype-struct-for": "MultipartInputStream",
                    "source-position": {
                        "@filename": "../libsoup/soup-multipart-input-stream.h",
                        "@line": "15"
                    },
                    "field": {
                        "@name": "parent_class",
                        "type": {
                            "@name": "Gio.FilterInputStreamClass",
                            "@c:type": "GFilterInputStreamClass"
                        }
                    }
                },
                {
                    "@name": "Range",
                    "@c:type": "SoupRange",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "../libsoup/soup-message-headers.c",
                        "@line": "1098",
                        "#text": "Represents a byte range as used in the Range header.\n\nIf @end is non-negative, then @start and @end represent the bounds\nof of the range, counting from 0. (Eg, the first 500 bytes would be\nrepresented as @start = 0 and @end = 499.)\n\nIf @end is -1 and @start is non-negative, then this represents a\nrange starting at @start and ending with the last byte of the\nrequested resource body. (Eg, all but the first 500 bytes would be\n@start = 500, and @end = -1.)\n\nIf @end is -1 and @start is negative, then it represents a \"suffix\nrange\", referring to the last -@start bytes of the resource body.\n(Eg, the last 500 bytes would be @start = -500 and @end = -1.)"
                    },
                    "source-position": {
                        "@filename": "../libsoup/soup-message-headers.h",
                        "@line": "127"
                    },
                    "field": [
                        {
                            "@name": "start",
                            "@writable": "1",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../libsoup/soup-message-headers.c",
                                "@line": "1100",
                                "#text": "the start of the range"
                            },
                            "type": {
                                "@name": "gint64",
                                "@c:type": "goffset"
                            }
                        },
                        {
                            "@name": "end",
                            "@writable": "1",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../libsoup/soup-message-headers.c",
                                "@line": "1101",
                                "#text": "the end of the range"
                            },
                            "type": {
                                "@name": "gint64",
                                "@c:type": "goffset"
                            }
                        }
                    ]
                },
                {
                    "@name": "ServerClass",
                    "@c:type": "SoupServerClass",
                    "@glib:is-gtype-struct-for": "Server",
                    "source-position": {
                        "@filename": "../libsoup/server/soup-server.h",
                        "@line": "38"
                    },
                    "field": [
                        {
                            "@name": "parent_class",
                            "type": {
                                "@name": "GObject.ObjectClass",
                                "@c:type": "GObjectClass"
                            }
                        },
                        {
                            "@name": "request_started",
                            "callback": {
                                "@name": "request_started",
                                "source-position": {
                                    "@filename": "../libsoup/server/soup-server.h",
                                    "@line": "28"
                                },
                                "return-value": {
                                    "@transfer-ownership": "none",
                                    "type": {
                                        "@name": "none",
                                        "@c:type": "void"
                                    }
                                },
                                "parameters": {
                                    "parameter": [
                                        {
                                            "@name": "server",
                                            "@transfer-ownership": "none",
                                            "type": {
                                                "@name": "Server",
                                                "@c:type": "SoupServer*"
                                            }
                                        },
                                        {
                                            "@name": "msg",
                                            "@transfer-ownership": "none",
                                            "type": {
                                                "@name": "ServerMessage",
                                                "@c:type": "SoupServerMessage*"
                                            }
                                        }
                                    ]
                                }
                            }
                        },
                        {
                            "@name": "request_read",
                            "callback": {
                                "@name": "request_read",
                                "source-position": {
                                    "@filename": "../libsoup/server/soup-server.h",
                                    "@line": "30"
                                },
                                "return-value": {
                                    "@transfer-ownership": "none",
                                    "type": {
                                        "@name": "none",
                                        "@c:type": "void"
                                    }
                                },
                                "parameters": {
                                    "parameter": [
                                        {
                                            "@name": "server",
                                            "@transfer-ownership": "none",
                                            "type": {
                                                "@name": "Server",
                                                "@c:type": "SoupServer*"
                                            }
                                        },
                                        {
                                            "@name": "msg",
                                            "@transfer-ownership": "none",
                                            "type": {
                                                "@name": "ServerMessage",
                                                "@c:type": "SoupServerMessage*"
                                            }
                                        }
                                    ]
                                }
                            }
                        },
                        {
                            "@name": "request_finished",
                            "callback": {
                                "@name": "request_finished",
                                "source-position": {
                                    "@filename": "../libsoup/server/soup-server.h",
                                    "@line": "32"
                                },
                                "return-value": {
                                    "@transfer-ownership": "none",
                                    "type": {
                                        "@name": "none",
                                        "@c:type": "void"
                                    }
                                },
                                "parameters": {
                                    "parameter": [
                                        {
                                            "@name": "server",
                                            "@transfer-ownership": "none",
                                            "type": {
                                                "@name": "Server",
                                                "@c:type": "SoupServer*"
                                            }
                                        },
                                        {
                                            "@name": "msg",
                                            "@transfer-ownership": "none",
                                            "type": {
                                                "@name": "ServerMessage",
                                                "@c:type": "SoupServerMessage*"
                                            }
                                        }
                                    ]
                                }
                            }
                        },
                        {
                            "@name": "request_aborted",
                            "callback": {
                                "@name": "request_aborted",
                                "source-position": {
                                    "@filename": "../libsoup/server/soup-server.h",
                                    "@line": "34"
                                },
                                "return-value": {
                                    "@transfer-ownership": "none",
                                    "type": {
                                        "@name": "none",
                                        "@c:type": "void"
                                    }
                                },
                                "parameters": {
                                    "parameter": [
                                        {
                                            "@name": "server",
                                            "@transfer-ownership": "none",
                                            "type": {
                                                "@name": "Server",
                                                "@c:type": "SoupServer*"
                                            }
                                        },
                                        {
                                            "@name": "msg",
                                            "@transfer-ownership": "none",
                                            "type": {
                                                "@name": "ServerMessage",
                                                "@c:type": "SoupServerMessage*"
                                            }
                                        }
                                    ]
                                }
                            }
                        },
                        {
                            "@name": "padding",
                            "array": {
                                "@zero-terminated": "0",
                                "@fixed-size": "6",
                                "type": {
                                    "@name": "gpointer",
                                    "@c:type": "gpointer"
                                }
                            }
                        }
                    ]
                },
                {
                    "@name": "ServerMessageClass",
                    "@c:type": "SoupServerMessageClass",
                    "@glib:is-gtype-struct-for": "ServerMessage",
                    "source-position": {
                        "@filename": "../libsoup/server/soup-server-message.h",
                        "@line": "17"
                    },
                    "field": {
                        "@name": "parent_class",
                        "type": {
                            "@name": "GObject.ObjectClass",
                            "@c:type": "GObjectClass"
                        }
                    }
                },
                {
                    "@name": "SessionClass",
                    "@c:type": "SoupSessionClass",
                    "@glib:is-gtype-struct-for": "Session",
                    "source-position": {
                        "@filename": "../libsoup/soup-session.h",
                        "@line": "34"
                    },
                    "field": [
                        {
                            "@name": "parent_class",
                            "type": {
                                "@name": "GObject.ObjectClass",
                                "@c:type": "GObjectClass"
                            }
                        },
                        {
                            "@name": "request_queued",
                            "callback": {
                                "@name": "request_queued",
                                "source-position": {
                                    "@filename": "../libsoup/soup-session.h",
                                    "@line": "21"
                                },
                                "return-value": {
                                    "@transfer-ownership": "none",
                                    "type": {
                                        "@name": "none",
                                        "@c:type": "void"
                                    }
                                },
                                "parameters": {
                                    "parameter": [
                                        {
                                            "@name": "session",
                                            "@transfer-ownership": "none",
                                            "type": {
                                                "@name": "Session",
                                                "@c:type": "SoupSession*"
                                            }
                                        },
                                        {
                                            "@name": "msg",
                                            "@transfer-ownership": "none",
                                            "type": {
                                                "@name": "Message",
                                                "@c:type": "SoupMessage*"
                                            }
                                        }
                                    ]
                                }
                            }
                        },
                        {
                            "@name": "request_unqueued",
                            "callback": {
                                "@name": "request_unqueued",
                                "source-position": {
                                    "@filename": "../libsoup/soup-session.h",
                                    "@line": "23"
                                },
                                "return-value": {
                                    "@transfer-ownership": "none",
                                    "type": {
                                        "@name": "none",
                                        "@c:type": "void"
                                    }
                                },
                                "parameters": {
                                    "parameter": [
                                        {
                                            "@name": "session",
                                            "@transfer-ownership": "none",
                                            "type": {
                                                "@name": "Session",
                                                "@c:type": "SoupSession*"
                                            }
                                        },
                                        {
                                            "@name": "msg",
                                            "@transfer-ownership": "none",
                                            "type": {
                                                "@name": "Message",
                                                "@c:type": "SoupMessage*"
                                            }
                                        }
                                    ]
                                }
                            }
                        },
                        {
                            "@name": "_soup_reserved1",
                            "@introspectable": "0",
                            "callback": {
                                "@name": "_soup_reserved1",
                                "source-position": {
                                    "@filename": "../libsoup/soup-session.h",
                                    "@line": "26"
                                },
                                "return-value": {
                                    "@transfer-ownership": "none",
                                    "type": {
                                        "@name": "none",
                                        "@c:type": "void"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "_soup_reserved2",
                            "@introspectable": "0",
                            "callback": {
                                "@name": "_soup_reserved2",
                                "source-position": {
                                    "@filename": "../libsoup/soup-session.h",
                                    "@line": "27"
                                },
                                "return-value": {
                                    "@transfer-ownership": "none",
                                    "type": {
                                        "@name": "none",
                                        "@c:type": "void"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "_soup_reserved3",
                            "@introspectable": "0",
                            "callback": {
                                "@name": "_soup_reserved3",
                                "source-position": {
                                    "@filename": "../libsoup/soup-session.h",
                                    "@line": "28"
                                },
                                "return-value": {
                                    "@transfer-ownership": "none",
                                    "type": {
                                        "@name": "none",
                                        "@c:type": "void"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "_soup_reserved4",
                            "@introspectable": "0",
                            "callback": {
                                "@name": "_soup_reserved4",
                                "source-position": {
                                    "@filename": "../libsoup/soup-session.h",
                                    "@line": "29"
                                },
                                "return-value": {
                                    "@transfer-ownership": "none",
                                    "type": {
                                        "@name": "none",
                                        "@c:type": "void"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "_soup_reserved5",
                            "@introspectable": "0",
                            "callback": {
                                "@name": "_soup_reserved5",
                                "source-position": {
                                    "@filename": "../libsoup/soup-session.h",
                                    "@line": "30"
                                },
                                "return-value": {
                                    "@transfer-ownership": "none",
                                    "type": {
                                        "@name": "none",
                                        "@c:type": "void"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "_soup_reserved6",
                            "@introspectable": "0",
                            "callback": {
                                "@name": "_soup_reserved6",
                                "source-position": {
                                    "@filename": "../libsoup/soup-session.h",
                                    "@line": "31"
                                },
                                "return-value": {
                                    "@transfer-ownership": "none",
                                    "type": {
                                        "@name": "none",
                                        "@c:type": "void"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "_soup_reserved7",
                            "@introspectable": "0",
                            "callback": {
                                "@name": "_soup_reserved7",
                                "source-position": {
                                    "@filename": "../libsoup/soup-session.h",
                                    "@line": "32"
                                },
                                "return-value": {
                                    "@transfer-ownership": "none",
                                    "type": {
                                        "@name": "none",
                                        "@c:type": "void"
                                    }
                                }
                            }
                        },
                        {
                            "@name": "_soup_reserved8",
                            "@introspectable": "0",
                            "callback": {
                                "@name": "_soup_reserved8",
                                "source-position": {
                                    "@filename": "../libsoup/soup-session.h",
                                    "@line": "33"
                                },
                                "return-value": {
                                    "@transfer-ownership": "none",
                                    "type": {
                                        "@name": "none",
                                        "@c:type": "void"
                                    }
                                }
                            }
                        }
                    ]
                },
                {
                    "@name": "SessionFeatureInterface",
                    "@c:type": "SoupSessionFeatureInterface",
                    "@disguised": "1",
                    "@glib:is-gtype-struct-for": "SessionFeature",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "../libsoup/soup-session-feature.c",
                        "@line": "30",
                        "#text": "The interface implemented by [iface@SessionFeature]s."
                    },
                    "source-position": {
                        "@filename": "../libsoup/soup-session-feature.h",
                        "@line": "14"
                    }
                },
                {
                    "@name": "WebsocketConnectionClass",
                    "@c:type": "SoupWebsocketConnectionClass",
                    "@glib:is-gtype-struct-for": "WebsocketConnection",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "../libsoup/websocket/soup-websocket-connection.c",
                        "@line": "57",
                        "#text": "The abstract base class for [class@WebsocketConnection]."
                    },
                    "source-position": {
                        "@filename": "../libsoup/websocket/soup-websocket-connection.h",
                        "@line": "30"
                    },
                    "field": {
                        "@name": "parent_class",
                        "type": {
                            "@name": "GObject.ObjectClass",
                            "@c:type": "GObjectClass"
                        }
                    }
                },
                {
                    "@name": "WebsocketExtensionClass",
                    "@c:type": "SoupWebsocketExtensionClass",
                    "@glib:is-gtype-struct-for": "WebsocketExtension",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "../libsoup/websocket/soup-websocket-extension.c",
                        "@line": "37",
                        "#text": "The class structure for the #SoupWebsocketExtension."
                    },
                    "source-position": {
                        "@filename": "../libsoup/websocket/soup-websocket-extension.h",
                        "@line": "60"
                    },
                    "field": [
                        {
                            "@name": "parent_class",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../libsoup/websocket/soup-websocket-extension.c",
                                "@line": "40",
                                "#text": "the parent class"
                            },
                            "type": {
                                "@name": "GObject.ObjectClass",
                                "@c:type": "GObjectClass"
                            }
                        },
                        {
                            "@name": "name",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../libsoup/websocket/soup-websocket-extension.c",
                                "@line": "39",
                                "#text": "the name of the extension"
                            },
                            "type": {
                                "@name": "utf8",
                                "@c:type": "const char*"
                            }
                        },
                        {
                            "@name": "configure",
                            "callback": {
                                "@name": "configure",
                                "@throws": "1",
                                "source-position": {
                                    "@filename": "../libsoup/websocket/soup-websocket-extension.h",
                                    "@line": "39"
                                },
                                "return-value": {
                                    "@transfer-ownership": "none",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../libsoup/websocket/soup-websocket-extension.c",
                                        "@line": "75",
                                        "#text": "%TRUE if extension could be configured with the given parameters, or %FALSE otherwise"
                                    },
                                    "type": {
                                        "@name": "gboolean",
                                        "@c:type": "gboolean"
                                    }
                                },
                                "parameters": {
                                    "parameter": [
                                        {
                                            "@name": "extension",
                                            "@transfer-ownership": "none",
                                            "doc": {
                                                "@xml:space": "preserve",
                                                "@filename": "../libsoup/websocket/soup-websocket-extension.c",
                                                "@line": "68",
                                                "#text": "a #SoupWebsocketExtension"
                                            },
                                            "type": {
                                                "@name": "WebsocketExtension",
                                                "@c:type": "SoupWebsocketExtension*"
                                            }
                                        },
                                        {
                                            "@name": "connection_type",
                                            "@transfer-ownership": "none",
                                            "doc": {
                                                "@xml:space": "preserve",
                                                "@filename": "../libsoup/websocket/soup-websocket-extension.c",
                                                "@line": "69",
                                                "#text": "either %SOUP_WEBSOCKET_CONNECTION_CLIENT or %SOUP_WEBSOCKET_CONNECTION_SERVER"
                                            },
                                            "type": {
                                                "@name": "WebsocketConnectionType",
                                                "@c:type": "SoupWebsocketConnectionType"
                                            }
                                        },
                                        {
                                            "@name": "params",
                                            "@transfer-ownership": "none",
                                            "@nullable": "1",
                                            "@allow-none": "1",
                                            "doc": {
                                                "@xml:space": "preserve",
                                                "@filename": "../libsoup/websocket/soup-websocket-extension.c",
                                                "@line": "70",
                                                "#text": "the parameters"
                                            },
                                            "type": {
                                                "@name": "GLib.HashTable",
                                                "@c:type": "GHashTable*",
                                                "type": [
                                                    {
                                                        "@name": "gpointer",
                                                        "@c:type": "gpointer"
                                                    },
                                                    {
                                                        "@name": "gpointer",
                                                        "@c:type": "gpointer"
                                                    }
                                                ]
                                            }
                                        }
                                    ]
                                }
                            }
                        },
                        {
                            "@name": "get_request_params",
                            "callback": {
                                "@name": "get_request_params",
                                "source-position": {
                                    "@filename": "../libsoup/websocket/soup-websocket-extension.h",
                                    "@line": "44"
                                },
                                "return-value": {
                                    "@transfer-ownership": "full",
                                    "@nullable": "1",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../libsoup/websocket/soup-websocket-extension.c",
                                        "@line": "105",
                                        "#text": "a new allocated string with the parameters"
                                    },
                                    "type": {
                                        "@name": "utf8",
                                        "@c:type": "char*"
                                    }
                                },
                                "parameters": {
                                    "parameter": {
                                        "@name": "extension",
                                        "@transfer-ownership": "none",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "../libsoup/websocket/soup-websocket-extension.c",
                                            "@line": "98",
                                            "#text": "a #SoupWebsocketExtension"
                                        },
                                        "type": {
                                            "@name": "WebsocketExtension",
                                            "@c:type": "SoupWebsocketExtension*"
                                        }
                                    }
                                }
                            }
                        },
                        {
                            "@name": "get_response_params",
                            "callback": {
                                "@name": "get_response_params",
                                "source-position": {
                                    "@filename": "../libsoup/websocket/soup-websocket-extension.h",
                                    "@line": "46"
                                },
                                "return-value": {
                                    "@transfer-ownership": "full",
                                    "@nullable": "1",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../libsoup/websocket/soup-websocket-extension.c",
                                        "@line": "130",
                                        "#text": "a new allocated string with the parameters"
                                    },
                                    "type": {
                                        "@name": "utf8",
                                        "@c:type": "char*"
                                    }
                                },
                                "parameters": {
                                    "parameter": {
                                        "@name": "extension",
                                        "@transfer-ownership": "none",
                                        "doc": {
                                            "@xml:space": "preserve",
                                            "@filename": "../libsoup/websocket/soup-websocket-extension.c",
                                            "@line": "123",
                                            "#text": "a #SoupWebsocketExtension"
                                        },
                                        "type": {
                                            "@name": "WebsocketExtension",
                                            "@c:type": "SoupWebsocketExtension*"
                                        }
                                    }
                                }
                            }
                        },
                        {
                            "@name": "process_outgoing_message",
                            "callback": {
                                "@name": "process_outgoing_message",
                                "@throws": "1",
                                "source-position": {
                                    "@filename": "../libsoup/websocket/soup-websocket-extension.h",
                                    "@line": "48"
                                },
                                "return-value": {
                                    "@transfer-ownership": "full",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../libsoup/websocket/soup-websocket-extension.c",
                                        "@line": "161",
                                        "#text": "the message payload data, or %NULL in case of error"
                                    },
                                    "type": {
                                        "@name": "GLib.Bytes",
                                        "@c:type": "GBytes*"
                                    }
                                },
                                "parameters": {
                                    "parameter": [
                                        {
                                            "@name": "extension",
                                            "@transfer-ownership": "none",
                                            "doc": {
                                                "@xml:space": "preserve",
                                                "@filename": "../libsoup/websocket/soup-websocket-extension.c",
                                                "@line": "148",
                                                "#text": "a #SoupWebsocketExtension"
                                            },
                                            "type": {
                                                "@name": "WebsocketExtension",
                                                "@c:type": "SoupWebsocketExtension*"
                                            }
                                        },
                                        {
                                            "@name": "header",
                                            "@direction": "inout",
                                            "@caller-allocates": "0",
                                            "@transfer-ownership": "full",
                                            "doc": {
                                                "@xml:space": "preserve",
                                                "@filename": "../libsoup/websocket/soup-websocket-extension.c",
                                                "@line": "149",
                                                "#text": "the message header"
                                            },
                                            "type": {
                                                "@name": "guint8",
                                                "@c:type": "guint8*"
                                            }
                                        },
                                        {
                                            "@name": "payload",
                                            "@transfer-ownership": "full",
                                            "doc": {
                                                "@xml:space": "preserve",
                                                "@filename": "../libsoup/websocket/soup-websocket-extension.c",
                                                "@line": "150",
                                                "#text": "the payload data"
                                            },
                                            "type": {
                                                "@name": "GLib.Bytes",
                                                "@c:type": "GBytes*"
                                            }
                                        }
                                    ]
                                }
                            }
                        },
                        {
                            "@name": "process_incoming_message",
                            "callback": {
                                "@name": "process_incoming_message",
                                "@throws": "1",
                                "source-position": {
                                    "@filename": "../libsoup/websocket/soup-websocket-extension.h",
                                    "@line": "53"
                                },
                                "return-value": {
                                    "@transfer-ownership": "full",
                                    "doc": {
                                        "@xml:space": "preserve",
                                        "@filename": "../libsoup/websocket/soup-websocket-extension.c",
                                        "@line": "198",
                                        "#text": "the message payload data, or %NULL in case of error"
                                    },
                                    "type": {
                                        "@name": "GLib.Bytes",
                                        "@c:type": "GBytes*"
                                    }
                                },
                                "parameters": {
                                    "parameter": [
                                        {
                                            "@name": "extension",
                                            "@transfer-ownership": "none",
                                            "doc": {
                                                "@xml:space": "preserve",
                                                "@filename": "../libsoup/websocket/soup-websocket-extension.c",
                                                "@line": "185",
                                                "#text": "a #SoupWebsocketExtension"
                                            },
                                            "type": {
                                                "@name": "WebsocketExtension",
                                                "@c:type": "SoupWebsocketExtension*"
                                            }
                                        },
                                        {
                                            "@name": "header",
                                            "@direction": "inout",
                                            "@caller-allocates": "0",
                                            "@transfer-ownership": "full",
                                            "doc": {
                                                "@xml:space": "preserve",
                                                "@filename": "../libsoup/websocket/soup-websocket-extension.c",
                                                "@line": "186",
                                                "#text": "the message header"
                                            },
                                            "type": {
                                                "@name": "guint8",
                                                "@c:type": "guint8*"
                                            }
                                        },
                                        {
                                            "@name": "payload",
                                            "@transfer-ownership": "full",
                                            "doc": {
                                                "@xml:space": "preserve",
                                                "@filename": "../libsoup/websocket/soup-websocket-extension.c",
                                                "@line": "187",
                                                "#text": "the payload data"
                                            },
                                            "type": {
                                                "@name": "GLib.Bytes",
                                                "@c:type": "GBytes*"
                                            }
                                        }
                                    ]
                                }
                            }
                        },
                        {
                            "@name": "padding",
                            "@readable": "0",
                            "@private": "1",
                            "array": {
                                "@zero-terminated": "0",
                                "@fixed-size": "6",
                                "type": {
                                    "@name": "gpointer",
                                    "@c:type": "gpointer"
                                }
                            }
                        }
                    ]
                },
                {
                    "@name": "WebsocketExtensionDeflateClass",
                    "@c:type": "SoupWebsocketExtensionDeflateClass",
                    "@glib:is-gtype-struct-for": "WebsocketExtensionDeflate",
                    "source-position": {
                        "@filename": "../libsoup/websocket/soup-websocket-extension-deflate.h",
                        "@line": "31"
                    },
                    "field": {
                        "@name": "parent_class",
                        "type": {
                            "@name": "WebsocketExtensionClass",
                            "@c:type": "SoupWebsocketExtensionClass"
                        }
                    }
                },
                {
                    "@name": "WebsocketExtensionManagerClass",
                    "@c:type": "SoupWebsocketExtensionManagerClass",
                    "@glib:is-gtype-struct-for": "WebsocketExtensionManager",
                    "source-position": {
                        "@filename": "../libsoup/websocket/soup-websocket-extension-manager.h",
                        "@line": "31"
                    },
                    "field": {
                        "@name": "parent_class",
                        "type": {
                            "@name": "GObject.ObjectClass",
                            "@c:type": "GObjectClass"
                        }
                    }
                }
            ],
            "callback": [
                {
                    "@name": "AuthDomainBasicAuthCallback",
                    "@c:type": "SoupAuthDomainBasicAuthCallback",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "../libsoup/server/soup-auth-domain-basic.c",
                        "@line": "141",
                        "#text": "Callback used by #SoupAuthDomainBasic for authentication purposes.\n\nThe application should verify that @username and @password and valid\nand return %TRUE or %FALSE.\n\nIf you are maintaining your own password database (rather than\nusing the password to authenticate against some other system like\nPAM or a remote server), you should make sure you know what you are\ndoing. In particular, don't store cleartext passwords, or\neasily-computed hashes of cleartext passwords, even if you don't\ncare that much about the security of your server, because users\nwill frequently use the same password for multiple sites, and so\ncompromising any site with a cleartext (or easily-cracked) password\ndatabase may give attackers access to other more-interesting sites\nas well."
                    },
                    "source-position": {
                        "@filename": "../libsoup/server/soup-auth-domain-basic.h",
                        "@line": "20"
                    },
                    "return-value": {
                        "@transfer-ownership": "none",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "../libsoup/server/soup-auth-domain-basic.c",
                            "@line": "165",
                            "#text": "%TRUE if @username and @password are valid"
                        },
                        "type": {
                            "@name": "gboolean",
                            "@c:type": "gboolean"
                        }
                    },
                    "parameters": {
                        "parameter": [
                            {
                                "@name": "domain",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "../libsoup/server/soup-auth-domain-basic.c",
                                    "@line": "143",
                                    "#text": "the domain"
                                },
                                "type": {
                                    "@name": "AuthDomainBasic",
                                    "@c:type": "SoupAuthDomain*"
                                }
                            },
                            {
                                "@name": "msg",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "../libsoup/server/soup-auth-domain-basic.c",
                                    "@line": "144",
                                    "#text": "the message being authenticated"
                                },
                                "type": {
                                    "@name": "ServerMessage",
                                    "@c:type": "SoupServerMessage*"
                                }
                            },
                            {
                                "@name": "username",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "../libsoup/server/soup-auth-domain-basic.c",
                                    "@line": "145",
                                    "#text": "the username provided by the client"
                                },
                                "type": {
                                    "@name": "utf8",
                                    "@c:type": "const char*"
                                }
                            },
                            {
                                "@name": "password",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "../libsoup/server/soup-auth-domain-basic.c",
                                    "@line": "146",
                                    "#text": "the password provided by the client"
                                },
                                "type": {
                                    "@name": "utf8",
                                    "@c:type": "const char*"
                                }
                            },
                            {
                                "@name": "user_data",
                                "@transfer-ownership": "none",
                                "@nullable": "1",
                                "@allow-none": "1",
                                "@closure": "4",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "../libsoup/server/soup-auth-domain-basic.c",
                                    "@line": "147",
                                    "#text": "the data passed to [method@AuthDomainBasic.set_auth_callback]"
                                },
                                "type": {
                                    "@name": "gpointer",
                                    "@c:type": "gpointer"
                                }
                            }
                        ]
                    }
                },
                {
                    "@name": "AuthDomainDigestAuthCallback",
                    "@c:type": "SoupAuthDomainDigestAuthCallback",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "../libsoup/server/soup-auth-domain-digest.c",
                        "@line": "145",
                        "#text": "Callback used by #SoupAuthDomainDigest for authentication purposes.\n\nThe application should look up @username in its password database,\nand return the corresponding encoded password (see\n[func@AuthDomainDigest.encode_password]."
                    },
                    "source-position": {
                        "@filename": "../libsoup/server/soup-auth-domain-digest.h",
                        "@line": "20"
                    },
                    "return-value": {
                        "@transfer-ownership": "full",
                        "@nullable": "1",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "../libsoup/server/soup-auth-domain-digest.c",
                            "@line": "158",
                            "#text": "the encoded password, or %NULL if\n  @username is not a valid user. @domain will free the password when\n  it is done with it."
                        },
                        "type": {
                            "@name": "utf8",
                            "@c:type": "char*"
                        }
                    },
                    "parameters": {
                        "parameter": [
                            {
                                "@name": "domain",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "../libsoup/server/soup-auth-domain-digest.c",
                                    "@line": "147",
                                    "#text": "the domain"
                                },
                                "type": {
                                    "@name": "AuthDomainDigest",
                                    "@c:type": "SoupAuthDomain*"
                                }
                            },
                            {
                                "@name": "msg",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "../libsoup/server/soup-auth-domain-digest.c",
                                    "@line": "148",
                                    "#text": "the message being authenticated"
                                },
                                "type": {
                                    "@name": "ServerMessage",
                                    "@c:type": "SoupServerMessage*"
                                }
                            },
                            {
                                "@name": "username",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "../libsoup/server/soup-auth-domain-digest.c",
                                    "@line": "149",
                                    "#text": "the username provided by the client"
                                },
                                "type": {
                                    "@name": "utf8",
                                    "@c:type": "const char*"
                                }
                            },
                            {
                                "@name": "user_data",
                                "@transfer-ownership": "none",
                                "@nullable": "1",
                                "@allow-none": "1",
                                "@closure": "3",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "../libsoup/server/soup-auth-domain-digest.c",
                                    "@line": "150",
                                    "#text": "the data passed to [method@AuthDomainDigest.set_auth_callback]"
                                },
                                "type": {
                                    "@name": "gpointer",
                                    "@c:type": "gpointer"
                                }
                            }
                        ]
                    }
                },
                {
                    "@name": "AuthDomainFilter",
                    "@c:type": "SoupAuthDomainFilter",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "../libsoup/server/soup-auth-domain.c",
                        "@line": "305",
                        "#text": "The prototype for a #SoupAuthDomain filter.\n\nSee [method@AuthDomain.set_filter] for details."
                    },
                    "source-position": {
                        "@filename": "../libsoup/server/soup-auth-domain.h",
                        "@line": "31"
                    },
                    "return-value": {
                        "@transfer-ownership": "none",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "../libsoup/server/soup-auth-domain.c",
                            "@line": "315",
                            "#text": "%TRUE if @msg requires authentication, %FALSE if not."
                        },
                        "type": {
                            "@name": "gboolean",
                            "@c:type": "gboolean"
                        }
                    },
                    "parameters": {
                        "parameter": [
                            {
                                "@name": "domain",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "../libsoup/server/soup-auth-domain.c",
                                    "@line": "307",
                                    "#text": "a #SoupAuthDomain"
                                },
                                "type": {
                                    "@name": "AuthDomain",
                                    "@c:type": "SoupAuthDomain*"
                                }
                            },
                            {
                                "@name": "msg",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "../libsoup/server/soup-auth-domain.c",
                                    "@line": "308",
                                    "#text": "a #SoupServerMessage"
                                },
                                "type": {
                                    "@name": "ServerMessage",
                                    "@c:type": "SoupServerMessage*"
                                }
                            },
                            {
                                "@name": "user_data",
                                "@transfer-ownership": "none",
                                "@nullable": "1",
                                "@allow-none": "1",
                                "@closure": "2",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "../libsoup/server/soup-auth-domain.c",
                                    "@line": "309",
                                    "#text": "the data passed to [method@AuthDomain.set_filter]"
                                },
                                "type": {
                                    "@name": "gpointer",
                                    "@c:type": "gpointer"
                                }
                            }
                        ]
                    }
                },
                {
                    "@name": "AuthDomainGenericAuthCallback",
                    "@c:type": "SoupAuthDomainGenericAuthCallback",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "../libsoup/server/soup-auth-domain.c",
                        "@line": "387",
                        "#text": "The prototype for a #SoupAuthDomain generic authentication callback.\n\nThe callback should look up the user's password, call\n[method@AuthDomain.check_password], and use the return value from that method\nas its own return value.\n\nIn general, for security reasons, it is preferable to use the\nauth-domain-specific auth callbacks (eg,\n[callback@AuthDomainBasicAuthCallback] and\n[callback@AuthDomainDigestAuthCallback]), because they don't require\nkeeping a cleartext password database. Most users will use the same\npassword for many different sites, meaning if any site with a\ncleartext password database is compromised, accounts on other\nservers might be compromised as well. For many of the cases where\n[class@Server] is used, this is not really relevant, but it may still\nbe worth considering."
                    },
                    "source-position": {
                        "@filename": "../libsoup/server/soup-auth-domain.h",
                        "@line": "35"
                    },
                    "return-value": {
                        "@transfer-ownership": "none",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "../libsoup/server/soup-auth-domain.c",
                            "@line": "411",
                            "#text": "%TRUE if @msg is authenticated, %FALSE if not."
                        },
                        "type": {
                            "@name": "gboolean",
                            "@c:type": "gboolean"
                        }
                    },
                    "parameters": {
                        "parameter": [
                            {
                                "@name": "domain",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "../libsoup/server/soup-auth-domain.c",
                                    "@line": "389",
                                    "#text": "a #SoupAuthDomain"
                                },
                                "type": {
                                    "@name": "AuthDomain",
                                    "@c:type": "SoupAuthDomain*"
                                }
                            },
                            {
                                "@name": "msg",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "../libsoup/server/soup-auth-domain.c",
                                    "@line": "390",
                                    "#text": "the #SoupServerMessage being authenticated"
                                },
                                "type": {
                                    "@name": "ServerMessage",
                                    "@c:type": "SoupServerMessage*"
                                }
                            },
                            {
                                "@name": "username",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "../libsoup/server/soup-auth-domain.c",
                                    "@line": "391",
                                    "#text": "the username from @msg"
                                },
                                "type": {
                                    "@name": "utf8",
                                    "@c:type": "const char*"
                                }
                            },
                            {
                                "@name": "user_data",
                                "@transfer-ownership": "none",
                                "@nullable": "1",
                                "@allow-none": "1",
                                "@closure": "3",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "../libsoup/server/soup-auth-domain.c",
                                    "@line": "392",
                                    "#text": "the data passed to [method@AuthDomain.set_generic_auth_callback]"
                                },
                                "type": {
                                    "@name": "gpointer",
                                    "@c:type": "gpointer"
                                }
                            }
                        ]
                    }
                },
                {
                    "@name": "LoggerFilter",
                    "@c:type": "SoupLoggerFilter",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "../libsoup/soup-logger.c",
                        "@line": "388",
                        "#text": "The prototype for a logging filter.\n\nThe filter callback will be invoked for each request or response, and should\nanalyze it and return a [enum@LoggerLogLevel] value indicating how much of\nthe message to log."
                    },
                    "source-position": {
                        "@filename": "../libsoup/soup-logger.h",
                        "@line": "23"
                    },
                    "return-value": {
                        "@transfer-ownership": "none",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "../libsoup/soup-logger.c",
                            "@line": "401",
                            "#text": "a [enum@LoggerLogLevel] value indicating how much of the message to\n  log"
                        },
                        "type": {
                            "@name": "LoggerLogLevel",
                            "@c:type": "SoupLoggerLogLevel"
                        }
                    },
                    "parameters": {
                        "parameter": [
                            {
                                "@name": "logger",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "../libsoup/soup-logger.c",
                                    "@line": "390",
                                    "#text": "the #SoupLogger"
                                },
                                "type": {
                                    "@name": "Logger",
                                    "@c:type": "SoupLogger*"
                                }
                            },
                            {
                                "@name": "msg",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "../libsoup/soup-logger.c",
                                    "@line": "391",
                                    "#text": "the message being logged"
                                },
                                "type": {
                                    "@name": "Message",
                                    "@c:type": "SoupMessage*"
                                }
                            },
                            {
                                "@name": "user_data",
                                "@transfer-ownership": "none",
                                "@nullable": "1",
                                "@allow-none": "1",
                                "@closure": "2",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "../libsoup/soup-logger.c",
                                    "@line": "392",
                                    "#text": "the data passed to [method@Logger.set_request_filter]\n  or [method@Logger.set_response_filter]"
                                },
                                "type": {
                                    "@name": "gpointer",
                                    "@c:type": "gpointer"
                                }
                            }
                        ]
                    }
                },
                {
                    "@name": "LoggerPrinter",
                    "@c:type": "SoupLoggerPrinter",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "../libsoup/soup-logger.c",
                        "@line": "459",
                        "#text": "The prototype for a custom printing callback.\n\n@level indicates what kind of information is being printed. Eg, it\nwill be %SOUP_LOGGER_LOG_HEADERS if @data is header data.\n\n@direction is either '<', '>', or ' ', and @data is the single line\nto print; the printer is expected to add a terminating newline.\n\nTo get the effect of the default printer, you would do:\n\n```c\nprintf (\"%c %s\\n\", direction, data);\n```"
                    },
                    "source-position": {
                        "@filename": "../libsoup/soup-logger.h",
                        "@line": "27"
                    },
                    "return-value": {
                        "@transfer-ownership": "none",
                        "type": {
                            "@name": "none",
                            "@c:type": "void"
                        }
                    },
                    "parameters": {
                        "parameter": [
                            {
                                "@name": "logger",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "../libsoup/soup-logger.c",
                                    "@line": "461",
                                    "#text": "the #SoupLogger"
                                },
                                "type": {
                                    "@name": "Logger",
                                    "@c:type": "SoupLogger*"
                                }
                            },
                            {
                                "@name": "level",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "../libsoup/soup-logger.c",
                                    "@line": "462",
                                    "#text": "the level of the information being printed."
                                },
                                "type": {
                                    "@name": "LoggerLogLevel",
                                    "@c:type": "SoupLoggerLogLevel"
                                }
                            },
                            {
                                "@name": "direction",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "../libsoup/soup-logger.c",
                                    "@line": "463",
                                    "#text": "a single-character prefix to @data"
                                },
                                "type": {
                                    "@name": "gchar",
                                    "@c:type": "char"
                                }
                            },
                            {
                                "@name": "data",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "../libsoup/soup-logger.c",
                                    "@line": "464",
                                    "#text": "data to print"
                                },
                                "type": {
                                    "@name": "utf8",
                                    "@c:type": "const char*"
                                }
                            },
                            {
                                "@name": "user_data",
                                "@transfer-ownership": "none",
                                "@nullable": "1",
                                "@allow-none": "1",
                                "@closure": "4",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "../libsoup/soup-logger.c",
                                    "@line": "465",
                                    "#text": "the data passed to [method@Logger.set_printer]"
                                },
                                "type": {
                                    "@name": "gpointer",
                                    "@c:type": "gpointer"
                                }
                            }
                        ]
                    }
                },
                {
                    "@name": "MessageHeadersForeachFunc",
                    "@c:type": "SoupMessageHeadersForeachFunc",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "../libsoup/soup-message-headers.c",
                        "@line": "844",
                        "#text": "The callback passed to [method@MessageHeaders.foreach]."
                    },
                    "source-position": {
                        "@filename": "../libsoup/soup-message-headers.h",
                        "@line": "65"
                    },
                    "return-value": {
                        "@transfer-ownership": "none",
                        "type": {
                            "@name": "none",
                            "@c:type": "void"
                        }
                    },
                    "parameters": {
                        "parameter": [
                            {
                                "@name": "name",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "../libsoup/soup-message-headers.c",
                                    "@line": "846",
                                    "#text": "the header name"
                                },
                                "type": {
                                    "@name": "utf8",
                                    "@c:type": "const char*"
                                }
                            },
                            {
                                "@name": "value",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "../libsoup/soup-message-headers.c",
                                    "@line": "847",
                                    "#text": "the header value"
                                },
                                "type": {
                                    "@name": "utf8",
                                    "@c:type": "const char*"
                                }
                            },
                            {
                                "@name": "user_data",
                                "@transfer-ownership": "none",
                                "@nullable": "1",
                                "@allow-none": "1",
                                "@closure": "2",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "../libsoup/soup-message-headers.c",
                                    "@line": "848",
                                    "#text": "the data passed to [method@MessageHeaders.foreach]"
                                },
                                "type": {
                                    "@name": "gpointer",
                                    "@c:type": "gpointer"
                                }
                            }
                        ]
                    }
                },
                {
                    "@name": "ServerCallback",
                    "@c:type": "SoupServerCallback",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "../libsoup/server/soup-server.c",
                        "@line": "1562",
                        "#text": "A callback used to handle requests to a [class@Server].\n\n@path and @query contain the likewise-named components of the\nRequest-URI, subject to certain assumptions. By default,\n[class@Server] decodes all percent-encoding in the URI path, such that\n`\"/foo%2Fbar\"` is treated the same as `\"/foo/bar\"`. If your\nserver is serving resources in some non-POSIX-filesystem namespace,\nyou may want to distinguish those as two distinct paths. In that\ncase, you can set the [property@Server:raw-paths] property when creating\nthe [class@Server], and it will leave those characters undecoded.\n\n@query contains the query component of the Request-URI parsed according to\nthe rules for HTML form handling. Although this is the only commonly-used\nquery string format in HTTP, there is nothing that actually requires that\nHTTP URIs use that format; if your server needs to use some other format, you\ncan just ignore @query, and call [method@Message.get_uri] and parse the URI's\nquery field yourself.\n\nSee [method@Server.add_handler] and [method@Server.add_early_handler]\nfor details of what handlers can/should do."
                    },
                    "source-position": {
                        "@filename": "../libsoup/server/soup-server.h",
                        "@line": "102"
                    },
                    "return-value": {
                        "@transfer-ownership": "none",
                        "type": {
                            "@name": "none",
                            "@c:type": "void"
                        }
                    },
                    "parameters": {
                        "parameter": [
                            {
                                "@name": "server",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "../libsoup/server/soup-server.c",
                                    "@line": "1564",
                                    "#text": "the #SoupServer"
                                },
                                "type": {
                                    "@name": "Server",
                                    "@c:type": "SoupServer*"
                                }
                            },
                            {
                                "@name": "msg",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "../libsoup/server/soup-server.c",
                                    "@line": "1565",
                                    "#text": "the message being processed"
                                },
                                "type": {
                                    "@name": "ServerMessage",
                                    "@c:type": "SoupServerMessage*"
                                }
                            },
                            {
                                "@name": "path",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "../libsoup/server/soup-server.c",
                                    "@line": "1566",
                                    "#text": "the path component of @msg's Request-URI"
                                },
                                "type": {
                                    "@name": "utf8",
                                    "@c:type": "const char*"
                                }
                            },
                            {
                                "@name": "query",
                                "@transfer-ownership": "none",
                                "@nullable": "1",
                                "@allow-none": "1",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "../libsoup/server/soup-server.c",
                                    "@line": "1567",
                                    "#text": "the parsed query\n  component of @msg's Request-URI"
                                },
                                "type": {
                                    "@name": "GLib.HashTable",
                                    "@c:type": "GHashTable*",
                                    "type": [
                                        {
                                            "@name": "utf8"
                                        },
                                        {
                                            "@name": "utf8"
                                        }
                                    ]
                                }
                            },
                            {
                                "@name": "user_data",
                                "@transfer-ownership": "none",
                                "@nullable": "1",
                                "@allow-none": "1",
                                "@closure": "4",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "../libsoup/server/soup-server.c",
                                    "@line": "1569",
                                    "#text": "the data passed to [method@Server.add_handler] or\n  [method@Server.add_early_handler]."
                                },
                                "type": {
                                    "@name": "gpointer",
                                    "@c:type": "gpointer"
                                }
                            }
                        ]
                    }
                },
                {
                    "@name": "ServerWebsocketCallback",
                    "@c:type": "SoupServerWebsocketCallback",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "../libsoup/server/soup-server.c",
                        "@line": "1734",
                        "#text": "A callback used to handle WebSocket requests to a #SoupServer.\n\nThe callback will be invoked after sending the handshake response back to the\nclient (and is only invoked if the handshake was successful).\n\n@path contains the path of the Request-URI, subject to the same\nrules as [callback@ServerCallback] `(qv)`."
                    },
                    "source-position": {
                        "@filename": "../libsoup/server/soup-server.h",
                        "@line": "121"
                    },
                    "return-value": {
                        "@transfer-ownership": "none",
                        "type": {
                            "@name": "none",
                            "@c:type": "void"
                        }
                    },
                    "parameters": {
                        "parameter": [
                            {
                                "@name": "server",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "../libsoup/server/soup-server.c",
                                    "@line": "1736",
                                    "#text": "the #SoupServer"
                                },
                                "type": {
                                    "@name": "Server",
                                    "@c:type": "SoupServer*"
                                }
                            },
                            {
                                "@name": "msg",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "../libsoup/server/soup-server.c",
                                    "@line": "1739",
                                    "#text": "the #SoupServerMessage"
                                },
                                "type": {
                                    "@name": "ServerMessage",
                                    "@c:type": "SoupServerMessage*"
                                }
                            },
                            {
                                "@name": "path",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "../libsoup/server/soup-server.c",
                                    "@line": "1737",
                                    "#text": "the path component of @msg's Request-URI"
                                },
                                "type": {
                                    "@name": "utf8",
                                    "@c:type": "const char*"
                                }
                            },
                            {
                                "@name": "connection",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "../libsoup/server/soup-server.c",
                                    "@line": "1738",
                                    "#text": "the newly created WebSocket connection"
                                },
                                "type": {
                                    "@name": "WebsocketConnection",
                                    "@c:type": "SoupWebsocketConnection*"
                                }
                            },
                            {
                                "@name": "user_data",
                                "@transfer-ownership": "none",
                                "@nullable": "1",
                                "@allow-none": "1",
                                "@closure": "4",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "../libsoup/server/soup-server.c",
                                    "@line": "1740",
                                    "#text": "the data passed to @soup_server_add_handler"
                                },
                                "type": {
                                    "@name": "gpointer",
                                    "@c:type": "gpointer"
                                }
                            }
                        ]
                    }
                }
            ],
            "function-macro": [
                {
                    "@name": "CHECK_VERSION",
                    "@c:identifier": "SOUP_CHECK_VERSION",
                    "@introspectable": "0",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "../libsoup/soup-version.c",
                        "@line": "41",
                        "#text": "Macro to test the version of libsoup being compiled against.\n\nReturns %TRUE if the version of the libsoup header files\nis the same as or newer than the passed-in version."
                    },
                    "source-position": {
                        "@filename": "../libsoup/soup-version.h",
                        "@line": "18"
                    },
                    "parameters": {
                        "parameter": [
                            {
                                "@name": "major",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "../libsoup/soup-version.c",
                                    "@line": "43",
                                    "#text": "major version (e.g. 2 for version 2.42.0)"
                                }
                            },
                            {
                                "@name": "minor",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "../libsoup/soup-version.c",
                                    "@line": "44",
                                    "#text": "minor version (e.g. 42 for version 2.42.0)"
                                }
                            },
                            {
                                "@name": "micro",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "../libsoup/soup-version.c",
                                    "@line": "45",
                                    "#text": "micro version (e.g. 0 for version 2.42.0)"
                                }
                            }
                        ]
                    }
                },
                {
                    "@name": "DEPRECATED_FOR",
                    "@c:identifier": "SOUP_DEPRECATED_FOR",
                    "@introspectable": "0",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "../libsoup/soup-version.h",
                        "@line": "129",
                        "#text": "Marks a symbol as deprecated in favor of another symbol.\n\nYou should use `SOUP_DEPRECATED_FOR_IN_*` in order to handle versioning."
                    },
                    "source-position": {
                        "@filename": "../libsoup/soup-version.h",
                        "@line": "150"
                    },
                    "parameters": {
                        "parameter": {
                            "@name": "f",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../libsoup/soup-version.h",
                                "@line": "131",
                                "#text": "the symbol that replaces the deprecated one"
                            }
                        }
                    }
                },
                {
                    "@name": "DEPRECATED_IN_3_0_FOR",
                    "@c:identifier": "SOUP_DEPRECATED_IN_3_0_FOR",
                    "@introspectable": "0",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "../libsoup/soup-version.h",
                        "@line": "164",
                        "#text": "A macro used to indicate a symbol was deprecated in this version with a replacement."
                    },
                    "source-position": {
                        "@filename": "../libsoup/soup-version.h",
                        "@line": "172"
                    },
                    "parameters": {
                        "parameter": {
                            "@name": "f",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../libsoup/soup-version.h",
                                "@line": "166",
                                "#text": "The recommended replacement function."
                            }
                        }
                    }
                },
                {
                    "@name": "DEPRECATED_IN_3_2_FOR",
                    "@c:identifier": "SOUP_DEPRECATED_IN_3_2_FOR",
                    "@introspectable": "0",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "../libsoup/soup-version.h",
                        "@line": "191",
                        "#text": "A macro used to indicate a symbol was deprecated in this version with a replacement."
                    },
                    "source-position": {
                        "@filename": "../libsoup/soup-version.h",
                        "@line": "199"
                    },
                    "parameters": {
                        "parameter": {
                            "@name": "f",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../libsoup/soup-version.h",
                                "@line": "193",
                                "#text": "The recommended replacement function."
                            }
                        }
                    }
                },
                {
                    "@name": "STATUS_IS_CLIENT_ERROR",
                    "@c:identifier": "SOUP_STATUS_IS_CLIENT_ERROR",
                    "@introspectable": "0",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "../libsoup/soup-status.c",
                        "@line": "39",
                        "#text": "Tests if @status is a Client Error (4xx) response."
                    },
                    "source-position": {
                        "@filename": "../libsoup/soup-status.h",
                        "@line": "17"
                    },
                    "parameters": {
                        "parameter": {
                            "@name": "status",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../libsoup/soup-status.c",
                                "@line": "41",
                                "#text": "an HTTP status code"
                            }
                        }
                    }
                },
                {
                    "@name": "STATUS_IS_INFORMATIONAL",
                    "@c:identifier": "SOUP_STATUS_IS_INFORMATIONAL",
                    "@introspectable": "0",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "../libsoup/soup-status.c",
                        "@line": "15",
                        "#text": "Tests if @status is an Informational (1xx) response."
                    },
                    "source-position": {
                        "@filename": "../libsoup/soup-status.h",
                        "@line": "14"
                    },
                    "parameters": {
                        "parameter": {
                            "@name": "status",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../libsoup/soup-status.c",
                                "@line": "17",
                                "#text": "an HTTP status code"
                            }
                        }
                    }
                },
                {
                    "@name": "STATUS_IS_REDIRECTION",
                    "@c:identifier": "SOUP_STATUS_IS_REDIRECTION",
                    "@introspectable": "0",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "../libsoup/soup-status.c",
                        "@line": "31",
                        "#text": "Tests if @status is a Redirection (3xx) response."
                    },
                    "source-position": {
                        "@filename": "../libsoup/soup-status.h",
                        "@line": "16"
                    },
                    "parameters": {
                        "parameter": {
                            "@name": "status",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../libsoup/soup-status.c",
                                "@line": "33",
                                "#text": "an HTTP status code"
                            }
                        }
                    }
                },
                {
                    "@name": "STATUS_IS_SERVER_ERROR",
                    "@c:identifier": "SOUP_STATUS_IS_SERVER_ERROR",
                    "@introspectable": "0",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "../libsoup/soup-status.c",
                        "@line": "47",
                        "#text": "Tests if @status is a Server Error (5xx) response."
                    },
                    "source-position": {
                        "@filename": "../libsoup/soup-status.h",
                        "@line": "18"
                    },
                    "parameters": {
                        "parameter": {
                            "@name": "status",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../libsoup/soup-status.c",
                                "@line": "49",
                                "#text": "an HTTP status code"
                            }
                        }
                    }
                },
                {
                    "@name": "STATUS_IS_SUCCESSFUL",
                    "@c:identifier": "SOUP_STATUS_IS_SUCCESSFUL",
                    "@introspectable": "0",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "../libsoup/soup-status.c",
                        "@line": "23",
                        "#text": "Tests if @status is a Successful (2xx) response."
                    },
                    "source-position": {
                        "@filename": "../libsoup/soup-status.h",
                        "@line": "15"
                    },
                    "parameters": {
                        "parameter": {
                            "@name": "status",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../libsoup/soup-status.c",
                                "@line": "25",
                                "#text": "an HTTP status code"
                            }
                        }
                    }
                },
                {
                    "@name": "UNAVAILABLE",
                    "@c:identifier": "SOUP_UNAVAILABLE",
                    "@introspectable": "0",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "../libsoup/soup-version.h",
                        "@line": "138",
                        "#text": "Marks a symbol unavailable before the given major and minor version.\n\nYou should use `SOUP_AVAILABLE_IN_*` in order to handle versioning."
                    },
                    "source-position": {
                        "@filename": "../libsoup/soup-version.h",
                        "@line": "151"
                    },
                    "parameters": {
                        "parameter": [
                            {
                                "@name": "maj",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "../libsoup/soup-version.h",
                                    "@line": "140",
                                    "#text": "the major version that introduced the symbol"
                                }
                            },
                            {
                                "@name": "min",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "../libsoup/soup-version.h",
                                    "@line": "141",
                                    "#text": "the minor version that introduced the symbol"
                                }
                            }
                        ]
                    }
                }
            ],
            "constant": [
                {
                    "@name": "COOKIE_MAX_AGE_ONE_DAY",
                    "@value": "0",
                    "@c:type": "SOUP_COOKIE_MAX_AGE_ONE_DAY",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "../libsoup/cookies/soup-cookie.c",
                        "@line": "568",
                        "#text": "A constant corresponding to 1 day.\n\nFor use with [ctor@Cookie.new] and [method@Cookie.set_max_age]."
                    },
                    "source-position": {
                        "@filename": "../libsoup/cookies/soup-cookie.h",
                        "@line": "33"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "COOKIE_MAX_AGE_ONE_HOUR",
                    "@value": "3600",
                    "@c:type": "SOUP_COOKIE_MAX_AGE_ONE_HOUR",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "../libsoup/cookies/soup-cookie.c",
                        "@line": "561",
                        "#text": "A constant corresponding to 1 hour.\n\nFor use with [ctor@Cookie.new] and [method@Cookie.set_max_age]."
                    },
                    "source-position": {
                        "@filename": "../libsoup/cookies/soup-cookie.h",
                        "@line": "32"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "COOKIE_MAX_AGE_ONE_WEEK",
                    "@value": "0",
                    "@c:type": "SOUP_COOKIE_MAX_AGE_ONE_WEEK",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "../libsoup/cookies/soup-cookie.c",
                        "@line": "575",
                        "#text": "A constant corresponding to 1 week.\n\nFor use with [ctor@Cookie.new] and [method@Cookie.set_max_age]."
                    },
                    "source-position": {
                        "@filename": "../libsoup/cookies/soup-cookie.h",
                        "@line": "34"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "COOKIE_MAX_AGE_ONE_YEAR",
                    "@value": "0",
                    "@c:type": "SOUP_COOKIE_MAX_AGE_ONE_YEAR",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "../libsoup/cookies/soup-cookie.c",
                        "@line": "582",
                        "#text": "A constant corresponding to 1 year.\n\nFor use with [ctor@Cookie.new] and [method@Cookie.set_max_age]."
                    },
                    "source-position": {
                        "@filename": "../libsoup/cookies/soup-cookie.h",
                        "@line": "35"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "FORM_MIME_TYPE_MULTIPART",
                    "@value": "multipart/form-data",
                    "@c:type": "SOUP_FORM_MIME_TYPE_MULTIPART",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "../libsoup/soup-form.c",
                        "@line": "25",
                        "#text": "A macro containing the value\n`multipart/form-data`; the MIME type used for\nposting form data that contains files to be uploaded."
                    },
                    "source-position": {
                        "@filename": "../libsoup/soup-form.h",
                        "@line": "15"
                    },
                    "type": {
                        "@name": "utf8",
                        "@c:type": "gchar*"
                    }
                },
                {
                    "@name": "FORM_MIME_TYPE_URLENCODED",
                    "@value": "application/x-www-form-urlencoded",
                    "@c:type": "SOUP_FORM_MIME_TYPE_URLENCODED",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "../libsoup/soup-form.c",
                        "@line": "17",
                        "#text": "A macro containing the value\n`application/x-www-form-urlencoded`; the default\nMIME type for POSTing HTML form data."
                    },
                    "source-position": {
                        "@filename": "../libsoup/soup-form.h",
                        "@line": "14"
                    },
                    "type": {
                        "@name": "utf8",
                        "@c:type": "gchar*"
                    }
                },
                {
                    "@name": "HSTS_POLICY_MAX_AGE_PAST",
                    "@value": "0",
                    "@c:type": "SOUP_HSTS_POLICY_MAX_AGE_PAST",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "../libsoup/hsts/soup-hsts-policy.h",
                        "@line": "19",
                        "#text": "An expiration date that is always in the past."
                    },
                    "source-position": {
                        "@filename": "../libsoup/hsts/soup-hsts-policy.h",
                        "@line": "24"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "HTTP_URI_FLAGS",
                    "@value": "482",
                    "@c:type": "SOUP_HTTP_URI_FLAGS",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "../libsoup/soup-uri-utils.c",
                        "@line": "35",
                        "#text": "The set of #GUriFlags libsoup expects all #GUri to use."
                    },
                    "source-position": {
                        "@filename": "../libsoup/soup-uri-utils.h",
                        "@line": "40"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "MAJOR_VERSION",
                    "@value": "3",
                    "@c:type": "SOUP_MAJOR_VERSION",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "../libsoup/soup-version.c",
                        "@line": "14",
                        "#text": "Like [func@get_major_version], but from the headers used at application\ncompile time, rather than from the library linked against at application run\ntime."
                    },
                    "source-position": {
                        "@filename": "../libsoup/soup-version.h",
                        "@line": "14"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "MICRO_VERSION",
                    "@value": "2",
                    "@c:type": "SOUP_MICRO_VERSION",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "../libsoup/soup-version.c",
                        "@line": "32",
                        "#text": "Like [func@get_micro_version], but from the headers used at\napplication compile time, rather than from the library linked\nagainst at application run time."
                    },
                    "source-position": {
                        "@filename": "../libsoup/soup-version.h",
                        "@line": "16"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "MINOR_VERSION",
                    "@value": "2",
                    "@c:type": "SOUP_MINOR_VERSION",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "../libsoup/soup-version.c",
                        "@line": "23",
                        "#text": "Like [func@get_minor_version], but from the headers used at\napplication compile time, rather than from the library linked\nagainst at application run time."
                    },
                    "source-position": {
                        "@filename": "../libsoup/soup-version.h",
                        "@line": "15"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                },
                {
                    "@name": "VERSION_MIN_REQUIRED",
                    "@value": "2",
                    "@c:type": "SOUP_VERSION_MIN_REQUIRED",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "../libsoup/soup-version.c",
                        "@line": "136",
                        "#text": "A macro that should be defined by the user prior to including\n`libsoup.h`.\n\nThe definition should be one of the predefined libsoup\nversion macros: %SOUP_VERSION_2_24, %SOUP_VERSION_2_26, ...\n\nThis macro defines the earliest version of libsoup that the package\nis required to be able to compile against.\n\nIf the compiler is configured to warn about the use of deprecated\nfunctions, then using functions that were deprecated in version\n%SOUP_VERSION_MIN_REQUIRED or earlier will cause warnings (but\nusing functions deprecated in later releases will not)."
                    },
                    "source-position": {
                        "@filename": "../libsoup/soup-version.h",
                        "@line": "93"
                    },
                    "type": {
                        "@name": "gint",
                        "@c:type": "gint"
                    }
                }
            ],
            "enumeration": [
                {
                    "@name": "CacheType",
                    "@glib:type-name": "SoupCacheType",
                    "@glib:get-type": "soup_cache_type_get_type",
                    "@c:type": "SoupCacheType",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "../libsoup/cache/soup-cache.c",
                        "@line": "1093",
                        "#text": "The type of cache; this affects what kinds of responses will be\nsaved."
                    },
                    "member": [
                        {
                            "@name": "single_user",
                            "@value": "0",
                            "@c:identifier": "SOUP_CACHE_SINGLE_USER",
                            "@glib:nick": "single-user",
                            "@glib:name": "SOUP_CACHE_SINGLE_USER",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../libsoup/cache/soup-cache.c",
                                "@line": "1095",
                                "#text": "a single-user cache"
                            }
                        },
                        {
                            "@name": "shared",
                            "@value": "1",
                            "@c:identifier": "SOUP_CACHE_SHARED",
                            "@glib:nick": "shared",
                            "@glib:name": "SOUP_CACHE_SHARED",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../libsoup/cache/soup-cache.c",
                                "@line": "1096",
                                "#text": "a shared cache"
                            }
                        }
                    ]
                },
                {
                    "@name": "CookieJarAcceptPolicy",
                    "@glib:type-name": "SoupCookieJarAcceptPolicy",
                    "@glib:get-type": "soup_cookie_jar_accept_policy_get_type",
                    "@c:type": "SoupCookieJarAcceptPolicy",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "../libsoup/cookies/soup-cookie-jar.c",
                        "@line": "965",
                        "#text": "The policy for accepting or rejecting cookies returned in\nresponses."
                    },
                    "member": [
                        {
                            "@name": "always",
                            "@value": "0",
                            "@c:identifier": "SOUP_COOKIE_JAR_ACCEPT_ALWAYS",
                            "@glib:nick": "always",
                            "@glib:name": "SOUP_COOKIE_JAR_ACCEPT_ALWAYS",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../libsoup/cookies/soup-cookie-jar.c",
                                "@line": "967",
                                "#text": "accept all cookies unconditionally."
                            }
                        },
                        {
                            "@name": "never",
                            "@value": "1",
                            "@c:identifier": "SOUP_COOKIE_JAR_ACCEPT_NEVER",
                            "@glib:nick": "never",
                            "@glib:name": "SOUP_COOKIE_JAR_ACCEPT_NEVER",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../libsoup/cookies/soup-cookie-jar.c",
                                "@line": "968",
                                "#text": "reject all cookies unconditionally."
                            }
                        },
                        {
                            "@name": "no_third_party",
                            "@value": "2",
                            "@c:identifier": "SOUP_COOKIE_JAR_ACCEPT_NO_THIRD_PARTY",
                            "@glib:nick": "no-third-party",
                            "@glib:name": "SOUP_COOKIE_JAR_ACCEPT_NO_THIRD_PARTY",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../libsoup/cookies/soup-cookie-jar.c",
                                "@line": "969",
                                "#text": "accept all cookies set by the main\n  document loaded in the application using libsoup. An example of the most\n  common case, web browsers, would be: If http://www.example.com is the page\n  loaded, accept all cookies set by example.com, but if a resource from\n  http://www.third-party.com is loaded from that page reject any cookie that\n  it could try to set. For libsoup to be able to tell apart first party\n  cookies from the rest, the application must call\n  [method@Message.set_first_party] on each outgoing [class@Message], setting\n  the [struct@GLib.Uri] of the main document. If no first party is set in a\n  message when this policy is in effect, cookies will be assumed to be third\n  party by default."
                            }
                        },
                        {
                            "@name": "grandfathered_third_party",
                            "@value": "3",
                            "@c:identifier": "SOUP_COOKIE_JAR_ACCEPT_GRANDFATHERED_THIRD_PARTY",
                            "@glib:nick": "grandfathered-third-party",
                            "@glib:name": "SOUP_COOKIE_JAR_ACCEPT_GRANDFATHERED_THIRD_PARTY",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../libsoup/cookies/soup-cookie-jar.c",
                                "@line": "980",
                                "#text": "accept all cookies set by\n  the main document loaded in the application using libsoup, and from domains\n  that have previously set at least one cookie when loaded as the main\n  document. An example of the most common case, web browsers, would be: if\n  http://www.example.com is the page loaded, accept all cookies set by\n  example.com, but if a resource from http://www.third-party.com is loaded\n  from that page, reject any cookie that it could try to set unless it\n  already has a cookie in the cookie jar. For libsoup to be able to tell\n  apart first party cookies from the rest, the application must call\n  [method@Message.set_first_party] on each outgoing #SoupMessage, setting the\n  [struct@GLib.Uri] of the main document. If no first party is set in a\n  message when this policy is in effect, cookies will be assumed to be third\n  party by default."
                            }
                        }
                    ]
                },
                {
                    "@name": "DateFormat",
                    "@glib:type-name": "SoupDateFormat",
                    "@glib:get-type": "soup_date_format_get_type",
                    "@c:type": "SoupDateFormat",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "../libsoup/soup-date-utils.c",
                        "@line": "49",
                        "#text": "Date formats that [func@date_time_to_string] can use.\n\n@SOUP_DATE_HTTP and @SOUP_DATE_COOKIE always coerce the time to\nUTC.\n\nThis enum may be extended with more values in future releases."
                    },
                    "member": [
                        {
                            "@name": "http",
                            "@value": "1",
                            "@c:identifier": "SOUP_DATE_HTTP",
                            "@glib:nick": "http",
                            "@glib:name": "SOUP_DATE_HTTP",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../libsoup/soup-date-utils.c",
                                "@line": "51",
                                "#text": "RFC 1123 format, used by the HTTP \"Date\" header. Eg\n  \"Sun, 06 Nov 1994 08:49:37 GMT\"."
                            }
                        },
                        {
                            "@name": "cookie",
                            "@value": "2",
                            "@c:identifier": "SOUP_DATE_COOKIE",
                            "@glib:nick": "cookie",
                            "@glib:name": "SOUP_DATE_COOKIE",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../libsoup/soup-date-utils.c",
                                "@line": "53",
                                "#text": "The format for the \"Expires\" timestamp in the\n  Netscape cookie specification. Eg, \"Sun, 06-Nov-1994 08:49:37 GMT\"."
                            }
                        }
                    ]
                },
                {
                    "@name": "Encoding",
                    "@glib:type-name": "SoupEncoding",
                    "@glib:get-type": "soup_encoding_get_type",
                    "@c:type": "SoupEncoding",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "../libsoup/soup-message-headers.c",
                        "@line": "896",
                        "#text": "How a message body is encoded for transport"
                    },
                    "member": [
                        {
                            "@name": "unrecognized",
                            "@value": "0",
                            "@c:identifier": "SOUP_ENCODING_UNRECOGNIZED",
                            "@glib:nick": "unrecognized",
                            "@glib:name": "SOUP_ENCODING_UNRECOGNIZED",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../libsoup/soup-message-headers.c",
                                "@line": "898",
                                "#text": "unknown / error"
                            }
                        },
                        {
                            "@name": "none",
                            "@value": "1",
                            "@c:identifier": "SOUP_ENCODING_NONE",
                            "@glib:nick": "none",
                            "@glib:name": "SOUP_ENCODING_NONE",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../libsoup/soup-message-headers.c",
                                "@line": "899",
                                "#text": "no body is present (which is not the same as a\n  0-length body, and only occurs in certain places)"
                            }
                        },
                        {
                            "@name": "content_length",
                            "@value": "2",
                            "@c:identifier": "SOUP_ENCODING_CONTENT_LENGTH",
                            "@glib:nick": "content-length",
                            "@glib:name": "SOUP_ENCODING_CONTENT_LENGTH",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../libsoup/soup-message-headers.c",
                                "@line": "901",
                                "#text": "Content-Length encoding"
                            }
                        },
                        {
                            "@name": "eof",
                            "@value": "3",
                            "@c:identifier": "SOUP_ENCODING_EOF",
                            "@glib:nick": "eof",
                            "@glib:name": "SOUP_ENCODING_EOF",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../libsoup/soup-message-headers.c",
                                "@line": "902",
                                "#text": "Response body ends when the connection is closed"
                            }
                        },
                        {
                            "@name": "chunked",
                            "@value": "4",
                            "@c:identifier": "SOUP_ENCODING_CHUNKED",
                            "@glib:nick": "chunked",
                            "@glib:name": "SOUP_ENCODING_CHUNKED",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../libsoup/soup-message-headers.c",
                                "@line": "903",
                                "#text": "chunked encoding (currently only supported\n  for response)"
                            }
                        },
                        {
                            "@name": "byteranges",
                            "@value": "5",
                            "@c:identifier": "SOUP_ENCODING_BYTERANGES",
                            "@glib:nick": "byteranges",
                            "@glib:name": "SOUP_ENCODING_BYTERANGES",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../libsoup/soup-message-headers.c",
                                "@line": "905",
                                "#text": "multipart/byteranges (Reserved for future\n  use: NOT CURRENTLY IMPLEMENTED)"
                            }
                        }
                    ]
                },
                {
                    "@name": "HTTPVersion",
                    "@glib:type-name": "SoupHTTPVersion",
                    "@glib:get-type": "soup_http_version_get_type",
                    "@c:type": "SoupHTTPVersion",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "../libsoup/soup-status.c",
                        "@line": "244",
                        "#text": "Indicates the HTTP protocol version being used."
                    },
                    "member": [
                        {
                            "@name": "http_1_0",
                            "@value": "0",
                            "@c:identifier": "SOUP_HTTP_1_0",
                            "@glib:nick": "http-1-0",
                            "@glib:name": "SOUP_HTTP_1_0",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../libsoup/soup-status.c",
                                "@line": "246",
                                "#text": "HTTP 1.0 (RFC 1945)"
                            }
                        },
                        {
                            "@name": "http_1_1",
                            "@value": "1",
                            "@c:identifier": "SOUP_HTTP_1_1",
                            "@glib:nick": "http-1-1",
                            "@glib:name": "SOUP_HTTP_1_1",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../libsoup/soup-status.c",
                                "@line": "247",
                                "#text": "HTTP 1.1 (RFC 2616)"
                            }
                        },
                        {
                            "@name": "http_2_0",
                            "@value": "2",
                            "@c:identifier": "SOUP_HTTP_2_0",
                            "@glib:nick": "http-2-0",
                            "@glib:name": "SOUP_HTTP_2_0",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../libsoup/soup-status.c",
                                "@line": "248",
                                "#text": "HTTP 2.0 (RFC 7540)"
                            }
                        }
                    ]
                },
                {
                    "@name": "LoggerLogLevel",
                    "@glib:type-name": "SoupLoggerLogLevel",
                    "@glib:get-type": "soup_logger_log_level_get_type",
                    "@c:type": "SoupLoggerLogLevel",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "../libsoup/soup-logger.c",
                        "@line": "359",
                        "#text": "Describes the level of logging output to provide."
                    },
                    "member": [
                        {
                            "@name": "none",
                            "@value": "0",
                            "@c:identifier": "SOUP_LOGGER_LOG_NONE",
                            "@glib:nick": "none",
                            "@glib:name": "SOUP_LOGGER_LOG_NONE",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../libsoup/soup-logger.c",
                                "@line": "361",
                                "#text": "No logging"
                            }
                        },
                        {
                            "@name": "minimal",
                            "@value": "1",
                            "@c:identifier": "SOUP_LOGGER_LOG_MINIMAL",
                            "@glib:nick": "minimal",
                            "@glib:name": "SOUP_LOGGER_LOG_MINIMAL",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../libsoup/soup-logger.c",
                                "@line": "362",
                                "#text": "Log the Request-Line or Status-Line and\n  the Soup-Debug pseudo-headers"
                            }
                        },
                        {
                            "@name": "headers",
                            "@value": "2",
                            "@c:identifier": "SOUP_LOGGER_LOG_HEADERS",
                            "@glib:nick": "headers",
                            "@glib:name": "SOUP_LOGGER_LOG_HEADERS",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../libsoup/soup-logger.c",
                                "@line": "364",
                                "#text": "Log the full request/response headers"
                            }
                        },
                        {
                            "@name": "body",
                            "@value": "3",
                            "@c:identifier": "SOUP_LOGGER_LOG_BODY",
                            "@glib:nick": "body",
                            "@glib:name": "SOUP_LOGGER_LOG_BODY",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../libsoup/soup-logger.c",
                                "@line": "365",
                                "#text": "Log the full headers and request/response bodies"
                            }
                        }
                    ]
                },
                {
                    "@name": "MemoryUse",
                    "@glib:type-name": "SoupMemoryUse",
                    "@glib:get-type": "soup_memory_use_get_type",
                    "@c:type": "SoupMemoryUse",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "../libsoup/server/soup-message-body.c",
                        "@line": "17",
                        "#text": "The lifetime of the memory being passed."
                    },
                    "member": [
                        {
                            "@name": "static",
                            "@value": "0",
                            "@c:identifier": "SOUP_MEMORY_STATIC",
                            "@glib:nick": "static",
                            "@glib:name": "SOUP_MEMORY_STATIC",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../libsoup/server/soup-message-body.c",
                                "@line": "19",
                                "#text": "The memory is statically allocated and\n  constant; libsoup can use the passed-in buffer directly and not\n  need to worry about it being modified or freed."
                            }
                        },
                        {
                            "@name": "take",
                            "@value": "1",
                            "@c:identifier": "SOUP_MEMORY_TAKE",
                            "@glib:nick": "take",
                            "@glib:name": "SOUP_MEMORY_TAKE",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../libsoup/server/soup-message-body.c",
                                "@line": "22",
                                "#text": "The caller has allocated the memory and libsoup\n  will assume ownership of it and free it with [func@GLib.free]."
                            }
                        },
                        {
                            "@name": "copy",
                            "@value": "2",
                            "@c:identifier": "SOUP_MEMORY_COPY",
                            "@glib:nick": "copy",
                            "@glib:name": "SOUP_MEMORY_COPY",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../libsoup/server/soup-message-body.c",
                                "@line": "24",
                                "#text": "The passed-in data belongs to the caller and\n  libsoup will copy it into new memory leaving the caller free\n  to reuse the original memory."
                            }
                        }
                    ]
                },
                {
                    "@name": "MessageHeadersType",
                    "@glib:type-name": "SoupMessageHeadersType",
                    "@glib:get-type": "soup_message_headers_type_get_type",
                    "@c:type": "SoupMessageHeadersType",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "../libsoup/soup-message-headers.c",
                        "@line": "24",
                        "#text": "Value passed to [ctor@MessageHeaders.new] to set certain default\nbehaviors."
                    },
                    "member": [
                        {
                            "@name": "request",
                            "@value": "0",
                            "@c:identifier": "SOUP_MESSAGE_HEADERS_REQUEST",
                            "@glib:nick": "request",
                            "@glib:name": "SOUP_MESSAGE_HEADERS_REQUEST",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../libsoup/soup-message-headers.c",
                                "@line": "26",
                                "#text": "request headers"
                            }
                        },
                        {
                            "@name": "response",
                            "@value": "1",
                            "@c:identifier": "SOUP_MESSAGE_HEADERS_RESPONSE",
                            "@glib:nick": "response",
                            "@glib:name": "SOUP_MESSAGE_HEADERS_RESPONSE",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../libsoup/soup-message-headers.c",
                                "@line": "27",
                                "#text": "response headers"
                            }
                        },
                        {
                            "@name": "multipart",
                            "@value": "2",
                            "@c:identifier": "SOUP_MESSAGE_HEADERS_MULTIPART",
                            "@glib:nick": "multipart",
                            "@glib:name": "SOUP_MESSAGE_HEADERS_MULTIPART",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../libsoup/soup-message-headers.c",
                                "@line": "28",
                                "#text": "multipart body part headers"
                            }
                        }
                    ]
                },
                {
                    "@name": "MessagePriority",
                    "@glib:type-name": "SoupMessagePriority",
                    "@glib:get-type": "soup_message_priority_get_type",
                    "@c:type": "SoupMessagePriority",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "../libsoup/soup-message.c",
                        "@line": "2615",
                        "#text": "Priorities that can be set on a [class@Message] to instruct the message queue\nto process it before any other message with lower priority."
                    },
                    "member": [
                        {
                            "@name": "very_low",
                            "@value": "0",
                            "@c:identifier": "SOUP_MESSAGE_PRIORITY_VERY_LOW",
                            "@glib:nick": "very-low",
                            "@glib:name": "SOUP_MESSAGE_PRIORITY_VERY_LOW",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../libsoup/soup-message.c",
                                "@line": "2617",
                                "#text": "The lowest priority, the messages\n  with this priority will be the last ones to be attended."
                            }
                        },
                        {
                            "@name": "low",
                            "@value": "1",
                            "@c:identifier": "SOUP_MESSAGE_PRIORITY_LOW",
                            "@glib:nick": "low",
                            "@glib:name": "SOUP_MESSAGE_PRIORITY_LOW",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../libsoup/soup-message.c",
                                "@line": "2619",
                                "#text": "Use this for low priority messages, a\n  #SoupMessage with the default priority will be processed first."
                            }
                        },
                        {
                            "@name": "normal",
                            "@value": "2",
                            "@c:identifier": "SOUP_MESSAGE_PRIORITY_NORMAL",
                            "@glib:nick": "normal",
                            "@glib:name": "SOUP_MESSAGE_PRIORITY_NORMAL",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../libsoup/soup-message.c",
                                "@line": "2621",
                                "#text": "The default priotity, this is the\n  priority assigned to the #SoupMessage by default."
                            }
                        },
                        {
                            "@name": "high",
                            "@value": "3",
                            "@c:identifier": "SOUP_MESSAGE_PRIORITY_HIGH",
                            "@glib:nick": "high",
                            "@glib:name": "SOUP_MESSAGE_PRIORITY_HIGH",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../libsoup/soup-message.c",
                                "@line": "2623",
                                "#text": "High priority, a #SoupMessage with\n  this priority will be processed before the ones with the default\n  priority."
                            }
                        },
                        {
                            "@name": "very_high",
                            "@value": "4",
                            "@c:identifier": "SOUP_MESSAGE_PRIORITY_VERY_HIGH",
                            "@glib:nick": "very-high",
                            "@glib:name": "SOUP_MESSAGE_PRIORITY_VERY_HIGH",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../libsoup/soup-message.c",
                                "@line": "2626",
                                "#text": "The highest priority, use this\n  for very urgent #SoupMessage as they will be the first ones to be\n  attended."
                            }
                        }
                    ]
                },
                {
                    "@name": "SameSitePolicy",
                    "@glib:type-name": "SoupSameSitePolicy",
                    "@glib:get-type": "soup_same_site_policy_get_type",
                    "@c:type": "SoupSameSitePolicy",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "../libsoup/cookies/soup-cookie.h",
                        "@line": "12",
                        "#text": "Represents the same-site policies of a cookie."
                    },
                    "member": [
                        {
                            "@name": "none",
                            "@value": "0",
                            "@c:identifier": "SOUP_SAME_SITE_POLICY_NONE",
                            "@glib:nick": "none",
                            "@glib:name": "SOUP_SAME_SITE_POLICY_NONE",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../libsoup/cookies/soup-cookie.h",
                                "@line": "14",
                                "#text": "The cookie is exposed with both cross-site and same-site requests"
                            }
                        },
                        {
                            "@name": "lax",
                            "@value": "1",
                            "@c:identifier": "SOUP_SAME_SITE_POLICY_LAX",
                            "@glib:nick": "lax",
                            "@glib:name": "SOUP_SAME_SITE_POLICY_LAX",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../libsoup/cookies/soup-cookie.h",
                                "@line": "15",
                                "#text": "The cookie is withheld on cross-site requests but exposed on cross-site navigations"
                            }
                        },
                        {
                            "@name": "strict",
                            "@value": "2",
                            "@c:identifier": "SOUP_SAME_SITE_POLICY_STRICT",
                            "@glib:nick": "strict",
                            "@glib:name": "SOUP_SAME_SITE_POLICY_STRICT",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../libsoup/cookies/soup-cookie.h",
                                "@line": "16",
                                "#text": "The cookie is only exposed for same-site requests"
                            }
                        }
                    ]
                },
                {
                    "@name": "SessionError",
                    "@glib:type-name": "SoupSessionError",
                    "@glib:get-type": "soup_session_error_get_type",
                    "@c:type": "SoupSessionError",
                    "@glib:error-domain": "soup-session-error-quark",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "../libsoup/soup-session.c",
                        "@line": "148",
                        "#text": "A #SoupSession error."
                    },
                    "member": [
                        {
                            "@name": "parsing",
                            "@value": "0",
                            "@c:identifier": "SOUP_SESSION_ERROR_PARSING",
                            "@glib:nick": "parsing",
                            "@glib:name": "SOUP_SESSION_ERROR_PARSING",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../libsoup/soup-session.c",
                                "@line": "150",
                                "#text": "the server's response could not\n  be parsed"
                            }
                        },
                        {
                            "@name": "encoding",
                            "@value": "1",
                            "@c:identifier": "SOUP_SESSION_ERROR_ENCODING",
                            "@glib:nick": "encoding",
                            "@glib:name": "SOUP_SESSION_ERROR_ENCODING",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../libsoup/soup-session.c",
                                "@line": "152",
                                "#text": "the server's response was in an\n  unsupported format"
                            }
                        },
                        {
                            "@name": "too_many_redirects",
                            "@value": "2",
                            "@c:identifier": "SOUP_SESSION_ERROR_TOO_MANY_REDIRECTS",
                            "@glib:nick": "too-many-redirects",
                            "@glib:name": "SOUP_SESSION_ERROR_TOO_MANY_REDIRECTS",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../libsoup/soup-session.c",
                                "@line": "154",
                                "#text": "the message has been redirected\n  too many times"
                            }
                        },
                        {
                            "@name": "too_many_restarts",
                            "@value": "3",
                            "@c:identifier": "SOUP_SESSION_ERROR_TOO_MANY_RESTARTS",
                            "@glib:nick": "too-many-restarts",
                            "@glib:name": "SOUP_SESSION_ERROR_TOO_MANY_RESTARTS",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../libsoup/soup-session.c",
                                "@line": "156",
                                "#text": "the message has been restarted\n  too many times"
                            }
                        },
                        {
                            "@name": "redirect_no_location",
                            "@value": "4",
                            "@c:identifier": "SOUP_SESSION_ERROR_REDIRECT_NO_LOCATION",
                            "@glib:nick": "redirect-no-location",
                            "@glib:name": "SOUP_SESSION_ERROR_REDIRECT_NO_LOCATION",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../libsoup/soup-session.c",
                                "@line": "158",
                                "#text": "failed to redirect message because\n  Location header was missing or empty in response"
                            }
                        },
                        {
                            "@name": "redirect_bad_uri",
                            "@value": "5",
                            "@c:identifier": "SOUP_SESSION_ERROR_REDIRECT_BAD_URI",
                            "@glib:nick": "redirect-bad-uri",
                            "@glib:name": "SOUP_SESSION_ERROR_REDIRECT_BAD_URI",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../libsoup/soup-session.c",
                                "@line": "160",
                                "#text": "failed to redirect message because\n  Location header contains an invalid URI"
                            }
                        },
                        {
                            "@name": "message_already_in_queue",
                            "@value": "6",
                            "@c:identifier": "SOUP_SESSION_ERROR_MESSAGE_ALREADY_IN_QUEUE",
                            "@glib:nick": "message-already-in-queue",
                            "@glib:name": "SOUP_SESSION_ERROR_MESSAGE_ALREADY_IN_QUEUE",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../libsoup/soup-session.c",
                                "@line": "162",
                                "#text": "the message is already in the\n  session queue. Messages can only be reused after unqueued."
                            }
                        }
                    ],
                    "function": {
                        "@name": "quark",
                        "@c:identifier": "soup_session_error_quark",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "../libsoup/soup-session.h",
                            "@line": "36",
                            "#text": "Registers error quark for SoupSession if needed."
                        },
                        "return-value": {
                            "@transfer-ownership": "none",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../libsoup/soup-session.h",
                                "@line": "40",
                                "#text": "Error quark for SoupSession."
                            },
                            "type": {
                                "@name": "GLib.Quark",
                                "@c:type": "GQuark"
                            }
                        }
                    }
                },
                {
                    "@name": "Status",
                    "@glib:type-name": "SoupStatus",
                    "@glib:get-type": "soup_status_get_type",
                    "@c:type": "SoupStatus",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "../libsoup/soup-status.c",
                        "@line": "56",
                        "#text": "These represent the known HTTP status code values, plus various\nnetwork and internal errors.\n\nNote that no libsoup functions take or return this type directly;\nany function that works with status codes will accept unrecognized\nstatus codes as well."
                    },
                    "member": [
                        {
                            "@name": "none",
                            "@value": "0",
                            "@c:identifier": "SOUP_STATUS_NONE",
                            "@glib:nick": "none",
                            "@glib:name": "SOUP_STATUS_NONE",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../libsoup/soup-status.c",
                                "@line": "58",
                                "#text": "No status available. (Eg, the message has not\nbeen sent yet)"
                            }
                        },
                        {
                            "@name": "continue",
                            "@value": "100",
                            "@c:identifier": "SOUP_STATUS_CONTINUE",
                            "@glib:nick": "continue",
                            "@glib:name": "SOUP_STATUS_CONTINUE",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../libsoup/soup-status.c",
                                "@line": "60",
                                "#text": "100 Continue (HTTP)"
                            }
                        },
                        {
                            "@name": "switching_protocols",
                            "@value": "101",
                            "@c:identifier": "SOUP_STATUS_SWITCHING_PROTOCOLS",
                            "@glib:nick": "switching-protocols",
                            "@glib:name": "SOUP_STATUS_SWITCHING_PROTOCOLS",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../libsoup/soup-status.c",
                                "@line": "61",
                                "#text": "101 Switching Protocols (HTTP)"
                            }
                        },
                        {
                            "@name": "processing",
                            "@value": "102",
                            "@c:identifier": "SOUP_STATUS_PROCESSING",
                            "@glib:nick": "processing",
                            "@glib:name": "SOUP_STATUS_PROCESSING",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../libsoup/soup-status.c",
                                "@line": "62",
                                "#text": "102 Processing (WebDAV)"
                            }
                        },
                        {
                            "@name": "ok",
                            "@value": "200",
                            "@c:identifier": "SOUP_STATUS_OK",
                            "@glib:nick": "ok",
                            "@glib:name": "SOUP_STATUS_OK",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../libsoup/soup-status.c",
                                "@line": "63",
                                "#text": "200 Success (HTTP). Also used by many lower-level\nsoup routines to indicate success."
                            }
                        },
                        {
                            "@name": "created",
                            "@value": "201",
                            "@c:identifier": "SOUP_STATUS_CREATED",
                            "@glib:nick": "created",
                            "@glib:name": "SOUP_STATUS_CREATED",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../libsoup/soup-status.c",
                                "@line": "65",
                                "#text": "201 Created (HTTP)"
                            }
                        },
                        {
                            "@name": "accepted",
                            "@value": "202",
                            "@c:identifier": "SOUP_STATUS_ACCEPTED",
                            "@glib:nick": "accepted",
                            "@glib:name": "SOUP_STATUS_ACCEPTED",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../libsoup/soup-status.c",
                                "@line": "66",
                                "#text": "202 Accepted (HTTP)"
                            }
                        },
                        {
                            "@name": "non_authoritative",
                            "@value": "203",
                            "@c:identifier": "SOUP_STATUS_NON_AUTHORITATIVE",
                            "@glib:nick": "non-authoritative",
                            "@glib:name": "SOUP_STATUS_NON_AUTHORITATIVE",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../libsoup/soup-status.c",
                                "@line": "67",
                                "#text": "203 Non-Authoritative Information\n(HTTP)"
                            }
                        },
                        {
                            "@name": "no_content",
                            "@value": "204",
                            "@c:identifier": "SOUP_STATUS_NO_CONTENT",
                            "@glib:nick": "no-content",
                            "@glib:name": "SOUP_STATUS_NO_CONTENT",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../libsoup/soup-status.c",
                                "@line": "69",
                                "#text": "204 No Content (HTTP)"
                            }
                        },
                        {
                            "@name": "reset_content",
                            "@value": "205",
                            "@c:identifier": "SOUP_STATUS_RESET_CONTENT",
                            "@glib:nick": "reset-content",
                            "@glib:name": "SOUP_STATUS_RESET_CONTENT",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../libsoup/soup-status.c",
                                "@line": "70",
                                "#text": "205 Reset Content (HTTP)"
                            }
                        },
                        {
                            "@name": "partial_content",
                            "@value": "206",
                            "@c:identifier": "SOUP_STATUS_PARTIAL_CONTENT",
                            "@glib:nick": "partial-content",
                            "@glib:name": "SOUP_STATUS_PARTIAL_CONTENT",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../libsoup/soup-status.c",
                                "@line": "71",
                                "#text": "206 Partial Content (HTTP)"
                            }
                        },
                        {
                            "@name": "multi_status",
                            "@value": "207",
                            "@c:identifier": "SOUP_STATUS_MULTI_STATUS",
                            "@glib:nick": "multi-status",
                            "@glib:name": "SOUP_STATUS_MULTI_STATUS",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../libsoup/soup-status.c",
                                "@line": "72",
                                "#text": "207 Multi-Status (WebDAV)"
                            }
                        },
                        {
                            "@name": "multiple_choices",
                            "@value": "300",
                            "@c:identifier": "SOUP_STATUS_MULTIPLE_CHOICES",
                            "@glib:nick": "multiple-choices",
                            "@glib:name": "SOUP_STATUS_MULTIPLE_CHOICES",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../libsoup/soup-status.c",
                                "@line": "73",
                                "#text": "300 Multiple Choices (HTTP)"
                            }
                        },
                        {
                            "@name": "moved_permanently",
                            "@value": "301",
                            "@c:identifier": "SOUP_STATUS_MOVED_PERMANENTLY",
                            "@glib:nick": "moved-permanently",
                            "@glib:name": "SOUP_STATUS_MOVED_PERMANENTLY",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../libsoup/soup-status.c",
                                "@line": "74",
                                "#text": "301 Moved Permanently (HTTP)"
                            }
                        },
                        {
                            "@name": "found",
                            "@value": "302",
                            "@c:identifier": "SOUP_STATUS_FOUND",
                            "@glib:nick": "found",
                            "@glib:name": "SOUP_STATUS_FOUND",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../libsoup/soup-status.c",
                                "@line": "75",
                                "#text": "302 Found (HTTP)"
                            }
                        },
                        {
                            "@name": "moved_temporarily",
                            "@value": "302",
                            "@c:identifier": "SOUP_STATUS_MOVED_TEMPORARILY",
                            "@glib:nick": "moved-temporarily",
                            "@glib:name": "SOUP_STATUS_MOVED_TEMPORARILY",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../libsoup/soup-status.c",
                                "@line": "76",
                                "#text": "302 Moved Temporarily (old name,\nRFC 2068)"
                            }
                        },
                        {
                            "@name": "see_other",
                            "@value": "303",
                            "@c:identifier": "SOUP_STATUS_SEE_OTHER",
                            "@glib:nick": "see-other",
                            "@glib:name": "SOUP_STATUS_SEE_OTHER",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../libsoup/soup-status.c",
                                "@line": "78",
                                "#text": "303 See Other (HTTP)"
                            }
                        },
                        {
                            "@name": "not_modified",
                            "@value": "304",
                            "@c:identifier": "SOUP_STATUS_NOT_MODIFIED",
                            "@glib:nick": "not-modified",
                            "@glib:name": "SOUP_STATUS_NOT_MODIFIED",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../libsoup/soup-status.c",
                                "@line": "79",
                                "#text": "304 Not Modified (HTTP)"
                            }
                        },
                        {
                            "@name": "use_proxy",
                            "@value": "305",
                            "@c:identifier": "SOUP_STATUS_USE_PROXY",
                            "@glib:nick": "use-proxy",
                            "@glib:name": "SOUP_STATUS_USE_PROXY",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../libsoup/soup-status.c",
                                "@line": "80",
                                "#text": "305 Use Proxy (HTTP)"
                            }
                        },
                        {
                            "@name": "not_appearing_in_this_protocol",
                            "@value": "306",
                            "@c:identifier": "SOUP_STATUS_NOT_APPEARING_IN_THIS_PROTOCOL",
                            "@glib:nick": "not-appearing-in-this-protocol",
                            "@glib:name": "SOUP_STATUS_NOT_APPEARING_IN_THIS_PROTOCOL",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../libsoup/soup-status.c",
                                "@line": "81",
                                "#text": "306 [Unused] (HTTP)"
                            }
                        },
                        {
                            "@name": "temporary_redirect",
                            "@value": "307",
                            "@c:identifier": "SOUP_STATUS_TEMPORARY_REDIRECT",
                            "@glib:nick": "temporary-redirect",
                            "@glib:name": "SOUP_STATUS_TEMPORARY_REDIRECT",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../libsoup/soup-status.c",
                                "@line": "82",
                                "#text": "307 Temporary Redirect (HTTP)"
                            }
                        },
                        {
                            "@name": "permanent_redirect",
                            "@value": "308",
                            "@c:identifier": "SOUP_STATUS_PERMANENT_REDIRECT",
                            "@glib:nick": "permanent-redirect",
                            "@glib:name": "SOUP_STATUS_PERMANENT_REDIRECT",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../libsoup/soup-status.c",
                                "@line": "83",
                                "#text": "308 Permanent Redirect (HTTP)"
                            }
                        },
                        {
                            "@name": "bad_request",
                            "@value": "400",
                            "@c:identifier": "SOUP_STATUS_BAD_REQUEST",
                            "@glib:nick": "bad-request",
                            "@glib:name": "SOUP_STATUS_BAD_REQUEST",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../libsoup/soup-status.c",
                                "@line": "84",
                                "#text": "400 Bad Request (HTTP)"
                            }
                        },
                        {
                            "@name": "unauthorized",
                            "@value": "401",
                            "@c:identifier": "SOUP_STATUS_UNAUTHORIZED",
                            "@glib:nick": "unauthorized",
                            "@glib:name": "SOUP_STATUS_UNAUTHORIZED",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../libsoup/soup-status.c",
                                "@line": "85",
                                "#text": "401 Unauthorized (HTTP)"
                            }
                        },
                        {
                            "@name": "payment_required",
                            "@value": "402",
                            "@c:identifier": "SOUP_STATUS_PAYMENT_REQUIRED",
                            "@glib:nick": "payment-required",
                            "@glib:name": "SOUP_STATUS_PAYMENT_REQUIRED",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../libsoup/soup-status.c",
                                "@line": "86",
                                "#text": "402 Payment Required (HTTP)"
                            }
                        },
                        {
                            "@name": "forbidden",
                            "@value": "403",
                            "@c:identifier": "SOUP_STATUS_FORBIDDEN",
                            "@glib:nick": "forbidden",
                            "@glib:name": "SOUP_STATUS_FORBIDDEN",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../libsoup/soup-status.c",
                                "@line": "87",
                                "#text": "403 Forbidden (HTTP)"
                            }
                        },
                        {
                            "@name": "not_found",
                            "@value": "404",
                            "@c:identifier": "SOUP_STATUS_NOT_FOUND",
                            "@glib:nick": "not-found",
                            "@glib:name": "SOUP_STATUS_NOT_FOUND",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../libsoup/soup-status.c",
                                "@line": "88",
                                "#text": "404 Not Found (HTTP)"
                            }
                        },
                        {
                            "@name": "method_not_allowed",
                            "@value": "405",
                            "@c:identifier": "SOUP_STATUS_METHOD_NOT_ALLOWED",
                            "@glib:nick": "method-not-allowed",
                            "@glib:name": "SOUP_STATUS_METHOD_NOT_ALLOWED",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../libsoup/soup-status.c",
                                "@line": "89",
                                "#text": "405 Method Not Allowed (HTTP)"
                            }
                        },
                        {
                            "@name": "not_acceptable",
                            "@value": "406",
                            "@c:identifier": "SOUP_STATUS_NOT_ACCEPTABLE",
                            "@glib:nick": "not-acceptable",
                            "@glib:name": "SOUP_STATUS_NOT_ACCEPTABLE",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../libsoup/soup-status.c",
                                "@line": "90",
                                "#text": "406 Not Acceptable (HTTP)"
                            }
                        },
                        {
                            "@name": "proxy_authentication_required",
                            "@value": "407",
                            "@c:identifier": "SOUP_STATUS_PROXY_AUTHENTICATION_REQUIRED",
                            "@glib:nick": "proxy-authentication-required",
                            "@glib:name": "SOUP_STATUS_PROXY_AUTHENTICATION_REQUIRED",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../libsoup/soup-status.c",
                                "@line": "91",
                                "#text": "407 Proxy Authentication\nRequired (HTTP)"
                            }
                        },
                        {
                            "@name": "proxy_unauthorized",
                            "@value": "407",
                            "@c:identifier": "SOUP_STATUS_PROXY_UNAUTHORIZED",
                            "@glib:nick": "proxy-unauthorized",
                            "@glib:name": "SOUP_STATUS_PROXY_UNAUTHORIZED",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../libsoup/soup-status.c",
                                "@line": "93",
                                "#text": "shorter alias for\n%SOUP_STATUS_PROXY_AUTHENTICATION_REQUIRED"
                            }
                        },
                        {
                            "@name": "request_timeout",
                            "@value": "408",
                            "@c:identifier": "SOUP_STATUS_REQUEST_TIMEOUT",
                            "@glib:nick": "request-timeout",
                            "@glib:name": "SOUP_STATUS_REQUEST_TIMEOUT",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../libsoup/soup-status.c",
                                "@line": "95",
                                "#text": "408 Request Timeout (HTTP)"
                            }
                        },
                        {
                            "@name": "conflict",
                            "@value": "409",
                            "@c:identifier": "SOUP_STATUS_CONFLICT",
                            "@glib:nick": "conflict",
                            "@glib:name": "SOUP_STATUS_CONFLICT",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../libsoup/soup-status.c",
                                "@line": "96",
                                "#text": "409 Conflict (HTTP)"
                            }
                        },
                        {
                            "@name": "gone",
                            "@value": "410",
                            "@c:identifier": "SOUP_STATUS_GONE",
                            "@glib:nick": "gone",
                            "@glib:name": "SOUP_STATUS_GONE",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../libsoup/soup-status.c",
                                "@line": "97",
                                "#text": "410 Gone (HTTP)"
                            }
                        },
                        {
                            "@name": "length_required",
                            "@value": "411",
                            "@c:identifier": "SOUP_STATUS_LENGTH_REQUIRED",
                            "@glib:nick": "length-required",
                            "@glib:name": "SOUP_STATUS_LENGTH_REQUIRED",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../libsoup/soup-status.c",
                                "@line": "98",
                                "#text": "411 Length Required (HTTP)"
                            }
                        },
                        {
                            "@name": "precondition_failed",
                            "@value": "412",
                            "@c:identifier": "SOUP_STATUS_PRECONDITION_FAILED",
                            "@glib:nick": "precondition-failed",
                            "@glib:name": "SOUP_STATUS_PRECONDITION_FAILED",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../libsoup/soup-status.c",
                                "@line": "99",
                                "#text": "412 Precondition Failed (HTTP)"
                            }
                        },
                        {
                            "@name": "request_entity_too_large",
                            "@value": "413",
                            "@c:identifier": "SOUP_STATUS_REQUEST_ENTITY_TOO_LARGE",
                            "@glib:nick": "request-entity-too-large",
                            "@glib:name": "SOUP_STATUS_REQUEST_ENTITY_TOO_LARGE",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../libsoup/soup-status.c",
                                "@line": "100",
                                "#text": "413 Request Entity Too Large\n(HTTP)"
                            }
                        },
                        {
                            "@name": "request_uri_too_long",
                            "@value": "414",
                            "@c:identifier": "SOUP_STATUS_REQUEST_URI_TOO_LONG",
                            "@glib:nick": "request-uri-too-long",
                            "@glib:name": "SOUP_STATUS_REQUEST_URI_TOO_LONG",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../libsoup/soup-status.c",
                                "@line": "102",
                                "#text": "414 Request-URI Too Long (HTTP)"
                            }
                        },
                        {
                            "@name": "unsupported_media_type",
                            "@value": "415",
                            "@c:identifier": "SOUP_STATUS_UNSUPPORTED_MEDIA_TYPE",
                            "@glib:nick": "unsupported-media-type",
                            "@glib:name": "SOUP_STATUS_UNSUPPORTED_MEDIA_TYPE",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../libsoup/soup-status.c",
                                "@line": "103",
                                "#text": "415 Unsupported Media Type\n(HTTP)"
                            }
                        },
                        {
                            "@name": "requested_range_not_satisfiable",
                            "@value": "416",
                            "@c:identifier": "SOUP_STATUS_REQUESTED_RANGE_NOT_SATISFIABLE",
                            "@glib:nick": "requested-range-not-satisfiable",
                            "@glib:name": "SOUP_STATUS_REQUESTED_RANGE_NOT_SATISFIABLE",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../libsoup/soup-status.c",
                                "@line": "105",
                                "#text": "416 Requested Range\nNot Satisfiable (HTTP)"
                            }
                        },
                        {
                            "@name": "invalid_range",
                            "@value": "416",
                            "@c:identifier": "SOUP_STATUS_INVALID_RANGE",
                            "@glib:nick": "invalid-range",
                            "@glib:name": "SOUP_STATUS_INVALID_RANGE",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../libsoup/soup-status.c",
                                "@line": "107",
                                "#text": "shorter alias for\n%SOUP_STATUS_REQUESTED_RANGE_NOT_SATISFIABLE"
                            }
                        },
                        {
                            "@name": "expectation_failed",
                            "@value": "417",
                            "@c:identifier": "SOUP_STATUS_EXPECTATION_FAILED",
                            "@glib:nick": "expectation-failed",
                            "@glib:name": "SOUP_STATUS_EXPECTATION_FAILED",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../libsoup/soup-status.c",
                                "@line": "109",
                                "#text": "417 Expectation Failed (HTTP)"
                            }
                        },
                        {
                            "@name": "misdirected_request",
                            "@value": "421",
                            "@c:identifier": "SOUP_STATUS_MISDIRECTED_REQUEST",
                            "@glib:nick": "misdirected-request",
                            "@glib:name": "SOUP_STATUS_MISDIRECTED_REQUEST",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../libsoup/soup-status.c",
                                "@line": "110",
                                "#text": "421 Misdirected Request"
                            }
                        },
                        {
                            "@name": "unprocessable_entity",
                            "@value": "422",
                            "@c:identifier": "SOUP_STATUS_UNPROCESSABLE_ENTITY",
                            "@glib:nick": "unprocessable-entity",
                            "@glib:name": "SOUP_STATUS_UNPROCESSABLE_ENTITY",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../libsoup/soup-status.c",
                                "@line": "111",
                                "#text": "422 Unprocessable Entity\n(WebDAV)"
                            }
                        },
                        {
                            "@name": "locked",
                            "@value": "423",
                            "@c:identifier": "SOUP_STATUS_LOCKED",
                            "@glib:nick": "locked",
                            "@glib:name": "SOUP_STATUS_LOCKED",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../libsoup/soup-status.c",
                                "@line": "113",
                                "#text": "423 Locked (WebDAV)"
                            }
                        },
                        {
                            "@name": "failed_dependency",
                            "@value": "424",
                            "@c:identifier": "SOUP_STATUS_FAILED_DEPENDENCY",
                            "@glib:nick": "failed-dependency",
                            "@glib:name": "SOUP_STATUS_FAILED_DEPENDENCY",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../libsoup/soup-status.c",
                                "@line": "114",
                                "#text": "424 Failed Dependency (WebDAV)"
                            }
                        },
                        {
                            "@name": "internal_server_error",
                            "@value": "500",
                            "@c:identifier": "SOUP_STATUS_INTERNAL_SERVER_ERROR",
                            "@glib:nick": "internal-server-error",
                            "@glib:name": "SOUP_STATUS_INTERNAL_SERVER_ERROR",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../libsoup/soup-status.c",
                                "@line": "115",
                                "#text": "500 Internal Server Error\n(HTTP)"
                            }
                        },
                        {
                            "@name": "not_implemented",
                            "@value": "501",
                            "@c:identifier": "SOUP_STATUS_NOT_IMPLEMENTED",
                            "@glib:nick": "not-implemented",
                            "@glib:name": "SOUP_STATUS_NOT_IMPLEMENTED",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../libsoup/soup-status.c",
                                "@line": "117",
                                "#text": "501 Not Implemented (HTTP)"
                            }
                        },
                        {
                            "@name": "bad_gateway",
                            "@value": "502",
                            "@c:identifier": "SOUP_STATUS_BAD_GATEWAY",
                            "@glib:nick": "bad-gateway",
                            "@glib:name": "SOUP_STATUS_BAD_GATEWAY",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../libsoup/soup-status.c",
                                "@line": "118",
                                "#text": "502 Bad Gateway (HTTP)"
                            }
                        },
                        {
                            "@name": "service_unavailable",
                            "@value": "503",
                            "@c:identifier": "SOUP_STATUS_SERVICE_UNAVAILABLE",
                            "@glib:nick": "service-unavailable",
                            "@glib:name": "SOUP_STATUS_SERVICE_UNAVAILABLE",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../libsoup/soup-status.c",
                                "@line": "119",
                                "#text": "503 Service Unavailable (HTTP)"
                            }
                        },
                        {
                            "@name": "gateway_timeout",
                            "@value": "504",
                            "@c:identifier": "SOUP_STATUS_GATEWAY_TIMEOUT",
                            "@glib:nick": "gateway-timeout",
                            "@glib:name": "SOUP_STATUS_GATEWAY_TIMEOUT",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../libsoup/soup-status.c",
                                "@line": "120",
                                "#text": "504 Gateway Timeout (HTTP)"
                            }
                        },
                        {
                            "@name": "http_version_not_supported",
                            "@value": "505",
                            "@c:identifier": "SOUP_STATUS_HTTP_VERSION_NOT_SUPPORTED",
                            "@glib:nick": "http-version-not-supported",
                            "@glib:name": "SOUP_STATUS_HTTP_VERSION_NOT_SUPPORTED",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../libsoup/soup-status.c",
                                "@line": "121",
                                "#text": "505 HTTP Version Not\nSupported (HTTP)"
                            }
                        },
                        {
                            "@name": "insufficient_storage",
                            "@value": "507",
                            "@c:identifier": "SOUP_STATUS_INSUFFICIENT_STORAGE",
                            "@glib:nick": "insufficient-storage",
                            "@glib:name": "SOUP_STATUS_INSUFFICIENT_STORAGE",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../libsoup/soup-status.c",
                                "@line": "123",
                                "#text": "507 Insufficient Storage\n(WebDAV)"
                            }
                        },
                        {
                            "@name": "not_extended",
                            "@value": "510",
                            "@c:identifier": "SOUP_STATUS_NOT_EXTENDED",
                            "@glib:nick": "not-extended",
                            "@glib:name": "SOUP_STATUS_NOT_EXTENDED",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../libsoup/soup-status.c",
                                "@line": "125",
                                "#text": "510 Not Extended (RFC 2774)"
                            }
                        }
                    ],
                    "function": {
                        "@name": "get_phrase",
                        "@c:identifier": "soup_status_get_phrase",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "../libsoup/soup-status.c",
                            "@line": "213",
                            "#text": "Looks up the stock HTTP description of @status_code.\n\n*There is no reason for you to ever use this\nfunction.* If you wanted the textual description for the\n[property@Message:status-code] of a given [class@Message], you should just\nlook at the message's [property@Message:reason-phrase]. However, you\nshould only do that for use in debugging messages; HTTP reason\nphrases are not localized, and are not generally very descriptive\nanyway, and so they should never be presented to the user directly.\nInstead, you should create you own error messages based on the\nstatus code, and on what you were trying to do."
                        },
                        "source-position": {
                            "@filename": "../libsoup/soup-status.h",
                            "@line": "89"
                        },
                        "return-value": {
                            "@transfer-ownership": "none",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../libsoup/soup-status.c",
                                "@line": "229",
                                "#text": "the (terse, English) description of @status_code"
                            },
                            "type": {
                                "@name": "utf8",
                                "@c:type": "const char*"
                            }
                        },
                        "parameters": {
                            "parameter": {
                                "@name": "status_code",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "../libsoup/soup-status.c",
                                    "@line": "215",
                                    "#text": "an HTTP status code"
                                },
                                "type": {
                                    "@name": "guint",
                                    "@c:type": "guint"
                                }
                            }
                        }
                    }
                },
                {
                    "@name": "TLDError",
                    "@glib:type-name": "SoupTLDError",
                    "@glib:get-type": "soup_tld_error_get_type",
                    "@c:type": "SoupTLDError",
                    "@glib:error-domain": "soup-tld-error-quark",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "../libsoup/soup-tld.c",
                        "@line": "99",
                        "#text": "Error codes for %SOUP_TLD_ERROR."
                    },
                    "member": [
                        {
                            "@name": "invalid_hostname",
                            "@value": "0",
                            "@c:identifier": "SOUP_TLD_ERROR_INVALID_HOSTNAME",
                            "@glib:nick": "invalid-hostname",
                            "@glib:name": "SOUP_TLD_ERROR_INVALID_HOSTNAME",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../libsoup/soup-tld.c",
                                "@line": "101",
                                "#text": "A hostname was syntactically\n  invalid."
                            }
                        },
                        {
                            "@name": "is_ip_address",
                            "@value": "1",
                            "@c:identifier": "SOUP_TLD_ERROR_IS_IP_ADDRESS",
                            "@glib:nick": "is-ip-address",
                            "@glib:name": "SOUP_TLD_ERROR_IS_IP_ADDRESS",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../libsoup/soup-tld.c",
                                "@line": "103",
                                "#text": "The passed-in \"hostname\" was\n  actually an IP address (and thus has no base domain or\n  public suffix)."
                            }
                        },
                        {
                            "@name": "not_enough_domains",
                            "@value": "2",
                            "@c:identifier": "SOUP_TLD_ERROR_NOT_ENOUGH_DOMAINS",
                            "@glib:nick": "not-enough-domains",
                            "@glib:name": "SOUP_TLD_ERROR_NOT_ENOUGH_DOMAINS",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../libsoup/soup-tld.c",
                                "@line": "106",
                                "#text": "The passed-in hostname\n  did not have enough components. Eg, calling\n  [func@tld_get_base_domain] on <literal>\"co.uk\"</literal>."
                            }
                        },
                        {
                            "@name": "no_base_domain",
                            "@value": "3",
                            "@c:identifier": "SOUP_TLD_ERROR_NO_BASE_DOMAIN",
                            "@glib:nick": "no-base-domain",
                            "@glib:name": "SOUP_TLD_ERROR_NO_BASE_DOMAIN",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../libsoup/soup-tld.c",
                                "@line": "109",
                                "#text": "The passed-in hostname has\n  no recognized public suffix."
                            }
                        },
                        {
                            "@name": "no_psl_data",
                            "@value": "4",
                            "@c:identifier": "SOUP_TLD_ERROR_NO_PSL_DATA",
                            "@glib:nick": "no-psl-data",
                            "@glib:name": "SOUP_TLD_ERROR_NO_PSL_DATA",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../libsoup/soup-tld.c",
                                "@line": "111",
                                "#text": "The Public Suffix List was not\n  available."
                            }
                        }
                    ],
                    "function": {
                        "@name": "quark",
                        "@c:identifier": "soup_tld_error_quark",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "../libsoup/soup-tld.h",
                            "@line": "20",
                            "#text": "Registers error quark for soup_tld_get_base_domain() if needed."
                        },
                        "return-value": {
                            "@transfer-ownership": "none",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../libsoup/soup-tld.h",
                                "@line": "24",
                                "#text": "Error quark for Soup TLD functions."
                            },
                            "type": {
                                "@name": "GLib.Quark",
                                "@c:type": "GQuark"
                            }
                        }
                    }
                },
                {
                    "@name": "URIComponent",
                    "@glib:type-name": "SoupURIComponent",
                    "@glib:get-type": "soup_uri_component_get_type",
                    "@c:type": "SoupURIComponent",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "../libsoup/soup-uri-utils.c",
                        "@line": "349",
                        "#text": "Enum values passed to [func@uri_copy] to indicate the components of\nthe URI that should be updated with the given values."
                    },
                    "member": [
                        {
                            "@name": "none",
                            "@value": "0",
                            "@c:identifier": "SOUP_URI_NONE",
                            "@glib:nick": "none",
                            "@glib:name": "SOUP_URI_NONE",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../libsoup/soup-uri-utils.c",
                                "@line": "351",
                                "#text": "no component"
                            }
                        },
                        {
                            "@name": "scheme",
                            "@value": "1",
                            "@c:identifier": "SOUP_URI_SCHEME",
                            "@glib:nick": "scheme",
                            "@glib:name": "SOUP_URI_SCHEME",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../libsoup/soup-uri-utils.c",
                                "@line": "352",
                                "#text": "the URI scheme component"
                            }
                        },
                        {
                            "@name": "user",
                            "@value": "2",
                            "@c:identifier": "SOUP_URI_USER",
                            "@glib:nick": "user",
                            "@glib:name": "SOUP_URI_USER",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../libsoup/soup-uri-utils.c",
                                "@line": "353",
                                "#text": "the URI user component"
                            }
                        },
                        {
                            "@name": "password",
                            "@value": "3",
                            "@c:identifier": "SOUP_URI_PASSWORD",
                            "@glib:nick": "password",
                            "@glib:name": "SOUP_URI_PASSWORD",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../libsoup/soup-uri-utils.c",
                                "@line": "354",
                                "#text": "the URI password component"
                            }
                        },
                        {
                            "@name": "auth_params",
                            "@value": "4",
                            "@c:identifier": "SOUP_URI_AUTH_PARAMS",
                            "@glib:nick": "auth-params",
                            "@glib:name": "SOUP_URI_AUTH_PARAMS",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../libsoup/soup-uri-utils.c",
                                "@line": "355",
                                "#text": "the URI authentication parameters component"
                            }
                        },
                        {
                            "@name": "host",
                            "@value": "5",
                            "@c:identifier": "SOUP_URI_HOST",
                            "@glib:nick": "host",
                            "@glib:name": "SOUP_URI_HOST",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../libsoup/soup-uri-utils.c",
                                "@line": "356",
                                "#text": "the URI host component"
                            }
                        },
                        {
                            "@name": "port",
                            "@value": "6",
                            "@c:identifier": "SOUP_URI_PORT",
                            "@glib:nick": "port",
                            "@glib:name": "SOUP_URI_PORT",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../libsoup/soup-uri-utils.c",
                                "@line": "357",
                                "#text": "the URI port component"
                            }
                        },
                        {
                            "@name": "path",
                            "@value": "7",
                            "@c:identifier": "SOUP_URI_PATH",
                            "@glib:nick": "path",
                            "@glib:name": "SOUP_URI_PATH",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../libsoup/soup-uri-utils.c",
                                "@line": "358",
                                "#text": "the URI path component"
                            }
                        },
                        {
                            "@name": "query",
                            "@value": "8",
                            "@c:identifier": "SOUP_URI_QUERY",
                            "@glib:nick": "query",
                            "@glib:name": "SOUP_URI_QUERY",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../libsoup/soup-uri-utils.c",
                                "@line": "359",
                                "#text": "the URI query component"
                            }
                        },
                        {
                            "@name": "fragment",
                            "@value": "9",
                            "@c:identifier": "SOUP_URI_FRAGMENT",
                            "@glib:nick": "fragment",
                            "@glib:name": "SOUP_URI_FRAGMENT",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../libsoup/soup-uri-utils.c",
                                "@line": "360",
                                "#text": "the URI fragment component"
                            }
                        }
                    ]
                },
                {
                    "@name": "WebsocketCloseCode",
                    "@glib:type-name": "SoupWebsocketCloseCode",
                    "@glib:get-type": "soup_websocket_close_code_get_type",
                    "@c:type": "SoupWebsocketCloseCode",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "../libsoup/websocket/soup-websocket.c",
                        "@line": "100",
                        "#text": "Pre-defined close codes that can be passed to\n[method@WebsocketConnection.close] or received from\n[method@WebsocketConnection.get_close_code].\n\nHowever, other codes are also allowed."
                    },
                    "member": [
                        {
                            "@name": "normal",
                            "@value": "1000",
                            "@c:identifier": "SOUP_WEBSOCKET_CLOSE_NORMAL",
                            "@glib:nick": "normal",
                            "@glib:name": "SOUP_WEBSOCKET_CLOSE_NORMAL",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../libsoup/websocket/soup-websocket.c",
                                "@line": "102",
                                "#text": "a normal, non-error close"
                            }
                        },
                        {
                            "@name": "going_away",
                            "@value": "1001",
                            "@c:identifier": "SOUP_WEBSOCKET_CLOSE_GOING_AWAY",
                            "@glib:nick": "going-away",
                            "@glib:name": "SOUP_WEBSOCKET_CLOSE_GOING_AWAY",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../libsoup/websocket/soup-websocket.c",
                                "@line": "103",
                                "#text": "the client/server is going away"
                            }
                        },
                        {
                            "@name": "protocol_error",
                            "@value": "1002",
                            "@c:identifier": "SOUP_WEBSOCKET_CLOSE_PROTOCOL_ERROR",
                            "@glib:nick": "protocol-error",
                            "@glib:name": "SOUP_WEBSOCKET_CLOSE_PROTOCOL_ERROR",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../libsoup/websocket/soup-websocket.c",
                                "@line": "104",
                                "#text": "a protocol error occurred"
                            }
                        },
                        {
                            "@name": "unsupported_data",
                            "@value": "1003",
                            "@c:identifier": "SOUP_WEBSOCKET_CLOSE_UNSUPPORTED_DATA",
                            "@glib:nick": "unsupported-data",
                            "@glib:name": "SOUP_WEBSOCKET_CLOSE_UNSUPPORTED_DATA",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../libsoup/websocket/soup-websocket.c",
                                "@line": "105",
                                "#text": "the endpoint received data\n  of a type that it does not support."
                            }
                        },
                        {
                            "@name": "no_status",
                            "@value": "1005",
                            "@c:identifier": "SOUP_WEBSOCKET_CLOSE_NO_STATUS",
                            "@glib:nick": "no-status",
                            "@glib:name": "SOUP_WEBSOCKET_CLOSE_NO_STATUS",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../libsoup/websocket/soup-websocket.c",
                                "@line": "107",
                                "#text": "reserved value indicating that\n  no close code was present; must not be sent."
                            }
                        },
                        {
                            "@name": "abnormal",
                            "@value": "1006",
                            "@c:identifier": "SOUP_WEBSOCKET_CLOSE_ABNORMAL",
                            "@glib:nick": "abnormal",
                            "@glib:name": "SOUP_WEBSOCKET_CLOSE_ABNORMAL",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../libsoup/websocket/soup-websocket.c",
                                "@line": "109",
                                "#text": "reserved value indicating that\n  the connection was closed abnormally; must not be sent."
                            }
                        },
                        {
                            "@name": "bad_data",
                            "@value": "1007",
                            "@c:identifier": "SOUP_WEBSOCKET_CLOSE_BAD_DATA",
                            "@glib:nick": "bad-data",
                            "@glib:name": "SOUP_WEBSOCKET_CLOSE_BAD_DATA",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../libsoup/websocket/soup-websocket.c",
                                "@line": "111",
                                "#text": "the endpoint received data that\n  was invalid (eg, non-UTF-8 data in a text message)."
                            }
                        },
                        {
                            "@name": "policy_violation",
                            "@value": "1008",
                            "@c:identifier": "SOUP_WEBSOCKET_CLOSE_POLICY_VIOLATION",
                            "@glib:nick": "policy-violation",
                            "@glib:name": "SOUP_WEBSOCKET_CLOSE_POLICY_VIOLATION",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../libsoup/websocket/soup-websocket.c",
                                "@line": "113",
                                "#text": "generic error code\n  indicating some sort of policy violation."
                            }
                        },
                        {
                            "@name": "too_big",
                            "@value": "1009",
                            "@c:identifier": "SOUP_WEBSOCKET_CLOSE_TOO_BIG",
                            "@glib:nick": "too-big",
                            "@glib:name": "SOUP_WEBSOCKET_CLOSE_TOO_BIG",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../libsoup/websocket/soup-websocket.c",
                                "@line": "115",
                                "#text": "the endpoint received a message\n  that is too big to process."
                            }
                        },
                        {
                            "@name": "no_extension",
                            "@value": "1010",
                            "@c:identifier": "SOUP_WEBSOCKET_CLOSE_NO_EXTENSION",
                            "@glib:nick": "no-extension",
                            "@glib:name": "SOUP_WEBSOCKET_CLOSE_NO_EXTENSION",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../libsoup/websocket/soup-websocket.c",
                                "@line": "117",
                                "#text": "the client is closing the\n  connection because the server failed to negotiate a required\n  extension."
                            }
                        },
                        {
                            "@name": "server_error",
                            "@value": "1011",
                            "@c:identifier": "SOUP_WEBSOCKET_CLOSE_SERVER_ERROR",
                            "@glib:nick": "server-error",
                            "@glib:name": "SOUP_WEBSOCKET_CLOSE_SERVER_ERROR",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../libsoup/websocket/soup-websocket.c",
                                "@line": "120",
                                "#text": "the server is closing the\n  connection because it was unable to fulfill the request."
                            }
                        },
                        {
                            "@name": "tls_handshake",
                            "@value": "1015",
                            "@c:identifier": "SOUP_WEBSOCKET_CLOSE_TLS_HANDSHAKE",
                            "@glib:nick": "tls-handshake",
                            "@glib:name": "SOUP_WEBSOCKET_CLOSE_TLS_HANDSHAKE",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../libsoup/websocket/soup-websocket.c",
                                "@line": "122",
                                "#text": "reserved value indicating that\n  the TLS handshake failed; must not be sent."
                            }
                        }
                    ]
                },
                {
                    "@name": "WebsocketConnectionType",
                    "@glib:type-name": "SoupWebsocketConnectionType",
                    "@glib:get-type": "soup_websocket_connection_type_get_type",
                    "@c:type": "SoupWebsocketConnectionType",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "../libsoup/websocket/soup-websocket.c",
                        "@line": "83",
                        "#text": "The type of a [class@WebsocketConnection]."
                    },
                    "member": [
                        {
                            "@name": "unknown",
                            "@value": "0",
                            "@c:identifier": "SOUP_WEBSOCKET_CONNECTION_UNKNOWN",
                            "@glib:nick": "unknown",
                            "@glib:name": "SOUP_WEBSOCKET_CONNECTION_UNKNOWN",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../libsoup/websocket/soup-websocket.c",
                                "@line": "85",
                                "#text": "unknown/invalid connection"
                            }
                        },
                        {
                            "@name": "client",
                            "@value": "1",
                            "@c:identifier": "SOUP_WEBSOCKET_CONNECTION_CLIENT",
                            "@glib:nick": "client",
                            "@glib:name": "SOUP_WEBSOCKET_CONNECTION_CLIENT",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../libsoup/websocket/soup-websocket.c",
                                "@line": "86",
                                "#text": "a client-side connection"
                            }
                        },
                        {
                            "@name": "server",
                            "@value": "2",
                            "@c:identifier": "SOUP_WEBSOCKET_CONNECTION_SERVER",
                            "@glib:nick": "server",
                            "@glib:name": "SOUP_WEBSOCKET_CONNECTION_SERVER",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../libsoup/websocket/soup-websocket.c",
                                "@line": "87",
                                "#text": "a server-side connection"
                            }
                        }
                    ]
                },
                {
                    "@name": "WebsocketDataType",
                    "@glib:type-name": "SoupWebsocketDataType",
                    "@glib:get-type": "soup_websocket_data_type_get_type",
                    "@c:type": "SoupWebsocketDataType",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "../libsoup/websocket/soup-websocket.c",
                        "@line": "92",
                        "#text": "The type of data contained in a [signal@WebsocketConnection::message] signal."
                    },
                    "member": [
                        {
                            "@name": "text",
                            "@value": "1",
                            "@c:identifier": "SOUP_WEBSOCKET_DATA_TEXT",
                            "@glib:nick": "text",
                            "@glib:name": "SOUP_WEBSOCKET_DATA_TEXT",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../libsoup/websocket/soup-websocket.c",
                                "@line": "94",
                                "#text": "UTF-8 text"
                            }
                        },
                        {
                            "@name": "binary",
                            "@value": "2",
                            "@c:identifier": "SOUP_WEBSOCKET_DATA_BINARY",
                            "@glib:nick": "binary",
                            "@glib:name": "SOUP_WEBSOCKET_DATA_BINARY",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../libsoup/websocket/soup-websocket.c",
                                "@line": "95",
                                "#text": "binary data"
                            }
                        }
                    ]
                },
                {
                    "@name": "WebsocketError",
                    "@glib:type-name": "SoupWebsocketError",
                    "@glib:get-type": "soup_websocket_error_get_type",
                    "@c:type": "SoupWebsocketError",
                    "@glib:error-domain": "soup-websocket-error-quark",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "../libsoup/websocket/soup-websocket.c",
                        "@line": "70",
                        "#text": "WebSocket-related errors."
                    },
                    "member": [
                        {
                            "@name": "failed",
                            "@value": "0",
                            "@c:identifier": "SOUP_WEBSOCKET_ERROR_FAILED",
                            "@glib:nick": "failed",
                            "@glib:name": "SOUP_WEBSOCKET_ERROR_FAILED",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../libsoup/websocket/soup-websocket.c",
                                "@line": "72",
                                "#text": "a generic error"
                            }
                        },
                        {
                            "@name": "not_websocket",
                            "@value": "1",
                            "@c:identifier": "SOUP_WEBSOCKET_ERROR_NOT_WEBSOCKET",
                            "@glib:nick": "not-websocket",
                            "@glib:name": "SOUP_WEBSOCKET_ERROR_NOT_WEBSOCKET",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../libsoup/websocket/soup-websocket.c",
                                "@line": "73",
                                "#text": "attempted to handshake with a\n  server that does not appear to understand WebSockets."
                            }
                        },
                        {
                            "@name": "bad_handshake",
                            "@value": "2",
                            "@c:identifier": "SOUP_WEBSOCKET_ERROR_BAD_HANDSHAKE",
                            "@glib:nick": "bad-handshake",
                            "@glib:name": "SOUP_WEBSOCKET_ERROR_BAD_HANDSHAKE",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../libsoup/websocket/soup-websocket.c",
                                "@line": "75",
                                "#text": "the WebSocket handshake failed\n  because some detail was invalid (eg, incorrect accept key)."
                            }
                        },
                        {
                            "@name": "bad_origin",
                            "@value": "3",
                            "@c:identifier": "SOUP_WEBSOCKET_ERROR_BAD_ORIGIN",
                            "@glib:nick": "bad-origin",
                            "@glib:name": "SOUP_WEBSOCKET_ERROR_BAD_ORIGIN",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../libsoup/websocket/soup-websocket.c",
                                "@line": "77",
                                "#text": "the WebSocket handshake failed\n  because the \"Origin\" header was not an allowed value."
                            }
                        }
                    ],
                    "function": {
                        "@name": "quark",
                        "@c:identifier": "soup_websocket_error_quark",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "../libsoup/websocket/soup-websocket.h",
                            "@line": "27",
                            "#text": "Registers error quark for SoupWebsocket if needed."
                        },
                        "return-value": {
                            "@transfer-ownership": "none",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../libsoup/websocket/soup-websocket.h",
                                "@line": "31",
                                "#text": "Error quark for SoupWebsocket."
                            },
                            "type": {
                                "@name": "GLib.Quark",
                                "@c:type": "GQuark"
                            }
                        }
                    }
                },
                {
                    "@name": "WebsocketState",
                    "@glib:type-name": "SoupWebsocketState",
                    "@glib:get-type": "soup_websocket_state_get_type",
                    "@c:type": "SoupWebsocketState",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "../libsoup/websocket/soup-websocket.c",
                        "@line": "132",
                        "#text": "The state of the WebSocket connection."
                    },
                    "member": [
                        {
                            "@name": "open",
                            "@value": "1",
                            "@c:identifier": "SOUP_WEBSOCKET_STATE_OPEN",
                            "@glib:nick": "open",
                            "@glib:name": "SOUP_WEBSOCKET_STATE_OPEN",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../libsoup/websocket/soup-websocket.c",
                                "@line": "134",
                                "#text": "the connection is ready to send messages"
                            }
                        },
                        {
                            "@name": "closing",
                            "@value": "2",
                            "@c:identifier": "SOUP_WEBSOCKET_STATE_CLOSING",
                            "@glib:nick": "closing",
                            "@glib:name": "SOUP_WEBSOCKET_STATE_CLOSING",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../libsoup/websocket/soup-websocket.c",
                                "@line": "135",
                                "#text": "the connection is in the process of\n  closing down; messages may be received, but not sent"
                            }
                        },
                        {
                            "@name": "closed",
                            "@value": "3",
                            "@c:identifier": "SOUP_WEBSOCKET_STATE_CLOSED",
                            "@glib:nick": "closed",
                            "@glib:name": "SOUP_WEBSOCKET_STATE_CLOSED",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../libsoup/websocket/soup-websocket.c",
                                "@line": "137",
                                "#text": "the connection is completely closed down"
                            }
                        }
                    ]
                }
            ],
            "bitfield": [
                {
                    "@name": "Cacheability",
                    "@glib:type-name": "SoupCacheability",
                    "@glib:get-type": "soup_cacheability_get_type",
                    "@c:type": "SoupCacheability",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "../libsoup/cache/soup-cache.c",
                        "@line": "55",
                        "#text": "Indicates if a message should or shouldn't be cached."
                    },
                    "member": [
                        {
                            "@name": "cacheable",
                            "@value": "1",
                            "@c:identifier": "SOUP_CACHE_CACHEABLE",
                            "@glib:nick": "cacheable",
                            "@glib:name": "SOUP_CACHE_CACHEABLE",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../libsoup/cache/soup-cache.c",
                                "@line": "57",
                                "#text": "The message should be cached"
                            }
                        },
                        {
                            "@name": "uncacheable",
                            "@value": "2",
                            "@c:identifier": "SOUP_CACHE_UNCACHEABLE",
                            "@glib:nick": "uncacheable",
                            "@glib:name": "SOUP_CACHE_UNCACHEABLE",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../libsoup/cache/soup-cache.c",
                                "@line": "58",
                                "#text": "The message shouldn't be cached"
                            }
                        },
                        {
                            "@name": "invalidates",
                            "@value": "4",
                            "@c:identifier": "SOUP_CACHE_INVALIDATES",
                            "@glib:nick": "invalidates",
                            "@glib:name": "SOUP_CACHE_INVALIDATES",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../libsoup/cache/soup-cache.c",
                                "@line": "59",
                                "#text": "The messages cache should be invalidated"
                            }
                        },
                        {
                            "@name": "validates",
                            "@value": "8",
                            "@c:identifier": "SOUP_CACHE_VALIDATES",
                            "@glib:nick": "validates",
                            "@glib:name": "SOUP_CACHE_VALIDATES",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../libsoup/cache/soup-cache.c",
                                "@line": "60",
                                "#text": "The messages cache should be updated"
                            }
                        }
                    ]
                },
                {
                    "@name": "Expectation",
                    "@glib:type-name": "SoupExpectation",
                    "@glib:get-type": "soup_expectation_get_type",
                    "@c:type": "SoupExpectation",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "../libsoup/soup-message-headers.c",
                        "@line": "1045",
                        "#text": "Represents the parsed value of the \"Expect\" header."
                    },
                    "member": [
                        {
                            "@name": "unrecognized",
                            "@value": "1",
                            "@c:identifier": "SOUP_EXPECTATION_UNRECOGNIZED",
                            "@glib:nick": "unrecognized",
                            "@glib:name": "SOUP_EXPECTATION_UNRECOGNIZED",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../libsoup/soup-message-headers.c",
                                "@line": "1048",
                                "#text": "any unrecognized expectation"
                            }
                        },
                        {
                            "@name": "continue",
                            "@value": "2",
                            "@c:identifier": "SOUP_EXPECTATION_CONTINUE",
                            "@glib:nick": "continue",
                            "@glib:name": "SOUP_EXPECTATION_CONTINUE",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../libsoup/soup-message-headers.c",
                                "@line": "1047",
                                "#text": "\"100-continue\""
                            }
                        }
                    ]
                },
                {
                    "@name": "MessageFlags",
                    "@glib:type-name": "SoupMessageFlags",
                    "@glib:get-type": "soup_message_flags_get_type",
                    "@c:type": "SoupMessageFlags",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "../libsoup/soup-message.c",
                        "@line": "1862",
                        "#text": "Various flags that can be set on a #SoupMessage to alter its\nbehavior."
                    },
                    "member": [
                        {
                            "@name": "no_redirect",
                            "@value": "2",
                            "@c:identifier": "SOUP_MESSAGE_NO_REDIRECT",
                            "@glib:nick": "no-redirect",
                            "@glib:name": "SOUP_MESSAGE_NO_REDIRECT",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../libsoup/soup-message.c",
                                "@line": "1864",
                                "#text": "The session should not follow redirect\n  (3xx) responses received by this message."
                            }
                        },
                        {
                            "@name": "new_connection",
                            "@value": "4",
                            "@c:identifier": "SOUP_MESSAGE_NEW_CONNECTION",
                            "@glib:nick": "new-connection",
                            "@glib:name": "SOUP_MESSAGE_NEW_CONNECTION",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../libsoup/soup-message.c",
                                "@line": "1866",
                                "#text": "Requests that the message should be\n  sent on a newly-created connection, not reusing an existing\n  persistent connection. Note that messages with non-idempotent\n  [property@Message:method]s behave this way by default, unless\n  #SOUP_MESSAGE_IDEMPOTENT is set."
                            }
                        },
                        {
                            "@name": "idempotent",
                            "@value": "8",
                            "@c:identifier": "SOUP_MESSAGE_IDEMPOTENT",
                            "@glib:nick": "idempotent",
                            "@glib:name": "SOUP_MESSAGE_IDEMPOTENT",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../libsoup/soup-message.c",
                                "@line": "1871",
                                "#text": "The message is considered idempotent,\n  regardless its [property@Message:method], and allows reuse of existing\n  idle connections, instead of always requiring a new one, unless\n  #SOUP_MESSAGE_NEW_CONNECTION is set."
                            }
                        },
                        {
                            "@name": "do_not_use_auth_cache",
                            "@value": "16",
                            "@c:identifier": "SOUP_MESSAGE_DO_NOT_USE_AUTH_CACHE",
                            "@glib:nick": "do-not-use-auth-cache",
                            "@glib:name": "SOUP_MESSAGE_DO_NOT_USE_AUTH_CACHE",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../libsoup/soup-message.c",
                                "@line": "1875",
                                "#text": "The [class@AuthManager] should not use\n  the credentials cache for this message, neither to use cached credentials\n  to automatically authenticate this message nor to cache the credentials\n  after the message is successfully authenticated. This applies to both server\n  and proxy authentication. Note that [signal@Message::authenticate] signal will\n  be emitted, if you want to disable authentication for a message use\n  [method@Message.disable_feature] passing #SOUP_TYPE_AUTH_MANAGER instead."
                            }
                        },
                        {
                            "@name": "collect_metrics",
                            "@value": "32",
                            "@c:identifier": "SOUP_MESSAGE_COLLECT_METRICS",
                            "@glib:nick": "collect-metrics",
                            "@glib:name": "SOUP_MESSAGE_COLLECT_METRICS",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../libsoup/soup-message.c",
                                "@line": "1882",
                                "#text": "Metrics will be collected for this message."
                            }
                        }
                    ]
                },
                {
                    "@name": "ServerListenOptions",
                    "@glib:type-name": "SoupServerListenOptions",
                    "@glib:get-type": "soup_server_listen_options_get_type",
                    "@c:type": "SoupServerListenOptions",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "../libsoup/server/soup-server.c",
                        "@line": "1180",
                        "#text": "Options to pass to [method@Server.listen], etc.\n\n%SOUP_SERVER_LISTEN_IPV4_ONLY and %SOUP_SERVER_LISTEN_IPV6_ONLY\nonly make sense with [method@Server.listen_all] and\n[method@Server.listen_local], not plain [method@Server.listen] (which\nsimply listens on whatever kind of socket you give it). And you\ncannot specify both of them in a single call."
                    },
                    "member": [
                        {
                            "@name": "https",
                            "@value": "1",
                            "@c:identifier": "SOUP_SERVER_LISTEN_HTTPS",
                            "@glib:nick": "https",
                            "@glib:name": "SOUP_SERVER_LISTEN_HTTPS",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../libsoup/server/soup-server.c",
                                "@line": "1182",
                                "#text": "Listen for https connections rather\n  than plain http."
                            }
                        },
                        {
                            "@name": "ipv4_only",
                            "@value": "2",
                            "@c:identifier": "SOUP_SERVER_LISTEN_IPV4_ONLY",
                            "@glib:nick": "ipv4-only",
                            "@glib:name": "SOUP_SERVER_LISTEN_IPV4_ONLY",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../libsoup/server/soup-server.c",
                                "@line": "1184",
                                "#text": "Only listen on IPv4 interfaces."
                            }
                        },
                        {
                            "@name": "ipv6_only",
                            "@value": "4",
                            "@c:identifier": "SOUP_SERVER_LISTEN_IPV6_ONLY",
                            "@glib:nick": "ipv6-only",
                            "@glib:name": "SOUP_SERVER_LISTEN_IPV6_ONLY",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../libsoup/server/soup-server.c",
                                "@line": "1185",
                                "#text": "Only listen on IPv6 interfaces."
                            }
                        }
                    ]
                }
            ],
            "interface": {
                "@name": "SessionFeature",
                "@c:symbol-prefix": "session_feature",
                "@c:type": "SoupSessionFeature",
                "@glib:type-name": "SoupSessionFeature",
                "@glib:get-type": "soup_session_feature_get_type",
                "@glib:type-struct": "SessionFeatureInterface",
                "doc": {
                    "@xml:space": "preserve",
                    "@filename": "../libsoup/soup-session-feature.c",
                    "@line": "16",
                    "#text": "Interface for miscellaneous [class@Session] features.\n\n#SoupSessionFeature is the interface used by classes that extend\nthe functionality of a [class@Session]. Some features like HTTP\nauthentication handling are implemented internally via\n`SoupSessionFeature`s. Other features can be added to the session\nby the application. (Eg, [class@Logger], [class@CookieJar].)\n\nSee [method@Session.add_feature], etc, to add a feature to a session."
                },
                "source-position": {
                    "@filename": "../libsoup/soup-session-feature.h",
                    "@line": "14"
                }
            },
            "function": [
                {
                    "@name": "check_version",
                    "@c:identifier": "soup_check_version",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "../libsoup/soup-version.c",
                        "@line": "113",
                        "#text": "Like [func@CHECK_VERSION], but the check for soup_check_version is\nat runtime instead of compile time.\n\nThis is useful for compiling against older versions of libsoup, but using\nfeatures from newer versions."
                    },
                    "source-position": {
                        "@filename": "../libsoup/soup-version.h",
                        "@line": "226"
                    },
                    "return-value": {
                        "@transfer-ownership": "none",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "../libsoup/soup-version.c",
                            "@line": "125",
                            "#text": "%TRUE if the version of the libsoup currently loaded\n  is the same as or newer than the passed-in version."
                        },
                        "type": {
                            "@name": "gboolean",
                            "@c:type": "gboolean"
                        }
                    },
                    "parameters": {
                        "parameter": [
                            {
                                "@name": "major",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "../libsoup/soup-version.c",
                                    "@line": "115",
                                    "#text": "the major version to check"
                                },
                                "type": {
                                    "@name": "guint",
                                    "@c:type": "guint"
                                }
                            },
                            {
                                "@name": "minor",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "../libsoup/soup-version.c",
                                    "@line": "116",
                                    "#text": "the minor version to check"
                                },
                                "type": {
                                    "@name": "guint",
                                    "@c:type": "guint"
                                }
                            },
                            {
                                "@name": "micro",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "../libsoup/soup-version.c",
                                    "@line": "117",
                                    "#text": "the micro version to check"
                                },
                                "type": {
                                    "@name": "guint",
                                    "@c:type": "guint"
                                }
                            }
                        ]
                    }
                },
                {
                    "@name": "cookie_parse",
                    "@c:identifier": "soup_cookie_parse",
                    "@moved-to": "Cookie.parse",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "../libsoup/cookies/soup-cookie.c",
                        "@line": "383",
                        "#text": "Parses @header and returns a #SoupCookie.\n\nIf @header contains multiple cookies, only the first one will be parsed.\n\nIf @header does not have \"path\" or \"domain\" attributes, they will\nbe defaulted from @origin. If @origin is %NULL, path will default\nto \"/\", but domain will be left as %NULL. Note that this is not a\nvalid state for a #SoupCookie, and you will need to fill in some\nappropriate string for the domain if you want to actually make use\nof the cookie."
                    },
                    "source-position": {
                        "@filename": "../libsoup/cookies/soup-cookie.h",
                        "@line": "44"
                    },
                    "return-value": {
                        "@transfer-ownership": "full",
                        "@nullable": "1",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "../libsoup/cookies/soup-cookie.c",
                            "@line": "399",
                            "#text": "a new #SoupCookie, or %NULL if it could\n  not be parsed, or contained an illegal \"domain\" attribute for a\n  cookie originating from @origin."
                        },
                        "type": {
                            "@name": "Cookie",
                            "@c:type": "SoupCookie*"
                        }
                    },
                    "parameters": {
                        "parameter": [
                            {
                                "@name": "header",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "../libsoup/cookies/soup-cookie.c",
                                    "@line": "385",
                                    "#text": "a cookie string (eg, the value of a Set-Cookie header)"
                                },
                                "type": {
                                    "@name": "utf8",
                                    "@c:type": "const char*"
                                }
                            },
                            {
                                "@name": "origin",
                                "@transfer-ownership": "none",
                                "@nullable": "1",
                                "@allow-none": "1",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "../libsoup/cookies/soup-cookie.c",
                                    "@line": "386",
                                    "#text": "origin of the cookie"
                                },
                                "type": {
                                    "@name": "GLib.Uri",
                                    "@c:type": "GUri*"
                                }
                            }
                        ]
                    }
                },
                {
                    "@name": "cookies_free",
                    "@c:identifier": "soup_cookies_free",
                    "@introspectable": "0",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "../libsoup/cookies/soup-cookie.c",
                        "@line": "982",
                        "#text": "Frees @cookies."
                    },
                    "source-position": {
                        "@filename": "../libsoup/cookies/soup-cookie.h",
                        "@line": "122"
                    },
                    "return-value": {
                        "@transfer-ownership": "none",
                        "type": {
                            "@name": "none",
                            "@c:type": "void"
                        }
                    },
                    "parameters": {
                        "parameter": {
                            "@name": "cookies",
                            "@transfer-ownership": "none",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../libsoup/cookies/soup-cookie.c",
                                "@line": "984",
                                "#text": "a #GSList of #SoupCookie"
                            },
                            "type": {
                                "@name": "GLib.SList",
                                "@c:type": "GSList*",
                                "type": {
                                    "@name": "Cookie"
                                }
                            }
                        }
                    }
                },
                {
                    "@name": "cookies_from_request",
                    "@c:identifier": "soup_cookies_from_request",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "../libsoup/cookies/soup-cookie.c",
                        "@line": "884",
                        "#text": "Parses @msg's Cookie request header and returns a [struct@GLib.SList] of\n`SoupCookie`s.\n\nAs the \"Cookie\" header, unlike \"Set-Cookie\", only contains cookie names and\nvalues, none of the other #SoupCookie fields will be filled in. (Thus, you\ncan't generally pass a cookie returned from this method directly to\n[func@cookies_to_response].)"
                    },
                    "source-position": {
                        "@filename": "../libsoup/cookies/soup-cookie.h",
                        "@line": "112"
                    },
                    "return-value": {
                        "@transfer-ownership": "full",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "../libsoup/cookies/soup-cookie.c",
                            "@line": "896",
                            "#text": "a #GSList of\n  `SoupCookie`s, which can be freed with [method@Cookie.free]."
                        },
                        "type": {
                            "@name": "GLib.SList",
                            "@c:type": "GSList*",
                            "type": {
                                "@name": "Cookie"
                            }
                        }
                    },
                    "parameters": {
                        "parameter": {
                            "@name": "msg",
                            "@transfer-ownership": "none",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../libsoup/cookies/soup-cookie.c",
                                "@line": "886",
                                "#text": "a #SoupMessage containing a \"Cookie\" request header"
                            },
                            "type": {
                                "@name": "Message",
                                "@c:type": "SoupMessage*"
                            }
                        }
                    }
                },
                {
                    "@name": "cookies_from_response",
                    "@c:identifier": "soup_cookies_from_response",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "../libsoup/cookies/soup-cookie.c",
                        "@line": "844",
                        "#text": "Parses @msg's Set-Cookie response headers and returns a [struct@GLib.SList]\nof `SoupCookie`s.\n\nCookies that do not specify \"path\" or \"domain\" attributes will have their\nvalues defaulted from @msg."
                    },
                    "source-position": {
                        "@filename": "../libsoup/cookies/soup-cookie.h",
                        "@line": "110"
                    },
                    "return-value": {
                        "@transfer-ownership": "full",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "../libsoup/cookies/soup-cookie.c",
                            "@line": "854",
                            "#text": "a #GSList of\n  `SoupCookie`s, which can be freed with [method@Cookie.free]."
                        },
                        "type": {
                            "@name": "GLib.SList",
                            "@c:type": "GSList*",
                            "type": {
                                "@name": "Cookie"
                            }
                        }
                    },
                    "parameters": {
                        "parameter": {
                            "@name": "msg",
                            "@transfer-ownership": "none",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../libsoup/cookies/soup-cookie.c",
                                "@line": "846",
                                "#text": "a #SoupMessage containing a \"Set-Cookie\" response header"
                            },
                            "type": {
                                "@name": "Message",
                                "@c:type": "SoupMessage*"
                            }
                        }
                    }
                },
                {
                    "@name": "cookies_to_cookie_header",
                    "@c:identifier": "soup_cookies_to_cookie_header",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "../libsoup/cookies/soup-cookie.c",
                        "@line": "994",
                        "#text": "Serializes a [struct@GLib.SList] of #SoupCookie into a string suitable for\nsetting as the value of the \"Cookie\" header."
                    },
                    "source-position": {
                        "@filename": "../libsoup/cookies/soup-cookie.h",
                        "@line": "125"
                    },
                    "return-value": {
                        "@transfer-ownership": "full",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "../libsoup/cookies/soup-cookie.c",
                            "@line": "1001",
                            "#text": "the serialization of @cookies"
                        },
                        "type": {
                            "@name": "utf8",
                            "@c:type": "char*"
                        }
                    },
                    "parameters": {
                        "parameter": {
                            "@name": "cookies",
                            "@transfer-ownership": "none",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../libsoup/cookies/soup-cookie.c",
                                "@line": "996",
                                "#text": "a #GSList of #SoupCookie"
                            },
                            "type": {
                                "@name": "GLib.SList",
                                "@c:type": "GSList*",
                                "type": {
                                    "@name": "Cookie"
                                }
                            }
                        }
                    }
                },
                {
                    "@name": "cookies_to_request",
                    "@c:identifier": "soup_cookies_to_request",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "../libsoup/cookies/soup-cookie.c",
                        "@line": "954",
                        "#text": "Adds the name and value of each cookie in @cookies to @msg's\n\"Cookie\" request.\n\nIf @msg already has a \"Cookie\" request header, these cookies will be appended\nto the cookies already present. Be careful that you do not append the same\ncookies twice, eg, when requeuing a message."
                    },
                    "source-position": {
                        "@filename": "../libsoup/cookies/soup-cookie.h",
                        "@line": "118"
                    },
                    "return-value": {
                        "@transfer-ownership": "none",
                        "type": {
                            "@name": "none",
                            "@c:type": "void"
                        }
                    },
                    "parameters": {
                        "parameter": [
                            {
                                "@name": "cookies",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "../libsoup/cookies/soup-cookie.c",
                                    "@line": "956",
                                    "#text": "a #GSList of #SoupCookie"
                                },
                                "type": {
                                    "@name": "GLib.SList",
                                    "@c:type": "GSList*",
                                    "type": {
                                        "@name": "Cookie"
                                    }
                                }
                            },
                            {
                                "@name": "msg",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "../libsoup/cookies/soup-cookie.c",
                                    "@line": "957",
                                    "#text": "a #SoupMessage"
                                },
                                "type": {
                                    "@name": "Message",
                                    "@c:type": "SoupMessage*"
                                }
                            }
                        ]
                    }
                },
                {
                    "@name": "cookies_to_response",
                    "@c:identifier": "soup_cookies_to_response",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "../libsoup/cookies/soup-cookie.c",
                        "@line": "927",
                        "#text": "Appends a \"Set-Cookie\" response header to @msg for each cookie in\n@cookies.\n\nThis is in addition to any other \"Set-Cookie\" headers\n@msg may already have."
                    },
                    "source-position": {
                        "@filename": "../libsoup/cookies/soup-cookie.h",
                        "@line": "115"
                    },
                    "return-value": {
                        "@transfer-ownership": "none",
                        "type": {
                            "@name": "none",
                            "@c:type": "void"
                        }
                    },
                    "parameters": {
                        "parameter": [
                            {
                                "@name": "cookies",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "../libsoup/cookies/soup-cookie.c",
                                    "@line": "929",
                                    "#text": "a #GSList of #SoupCookie"
                                },
                                "type": {
                                    "@name": "GLib.SList",
                                    "@c:type": "GSList*",
                                    "type": {
                                        "@name": "Cookie"
                                    }
                                }
                            },
                            {
                                "@name": "msg",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "../libsoup/cookies/soup-cookie.c",
                                    "@line": "930",
                                    "#text": "a #SoupMessage"
                                },
                                "type": {
                                    "@name": "Message",
                                    "@c:type": "SoupMessage*"
                                }
                            }
                        ]
                    }
                },
                {
                    "@name": "date_time_new_from_http_string",
                    "@c:identifier": "soup_date_time_new_from_http_string",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "../libsoup/soup-date-utils.c",
                        "@line": "297",
                        "#text": "Parses @date_string and tries to extract a date from it.\n\nThis recognizes all of the \"HTTP-date\" formats from RFC 2616, RFC 2822 dates,\nand reasonable approximations thereof. (Eg, it is lenient about whitespace,\nleading \"0\"s, etc.)"
                    },
                    "source-position": {
                        "@filename": "../libsoup/soup-date-utils.h",
                        "@line": "36"
                    },
                    "return-value": {
                        "@transfer-ownership": "full",
                        "@nullable": "1",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "../libsoup/soup-date-utils.c",
                            "@line": "307",
                            "#text": "a new #GDateTime, or %NULL if @date_string\n  could not be parsed."
                        },
                        "type": {
                            "@name": "GLib.DateTime",
                            "@c:type": "GDateTime*"
                        }
                    },
                    "parameters": {
                        "parameter": {
                            "@name": "date_string",
                            "@transfer-ownership": "none",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../libsoup/soup-date-utils.c",
                                "@line": "299",
                                "#text": "The date as a string"
                            },
                            "type": {
                                "@name": "utf8",
                                "@c:type": "const char*"
                            }
                        }
                    }
                },
                {
                    "@name": "date_time_to_string",
                    "@c:identifier": "soup_date_time_to_string",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "../libsoup/soup-date-utils.c",
                        "@line": "75",
                        "#text": "Converts @date to a string in the format described by @format."
                    },
                    "source-position": {
                        "@filename": "../libsoup/soup-date-utils.h",
                        "@line": "32"
                    },
                    "return-value": {
                        "@transfer-ownership": "full",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "../libsoup/soup-date-utils.c",
                            "@line": "82",
                            "#text": "@date as a string or %NULL"
                        },
                        "type": {
                            "@name": "utf8",
                            "@c:type": "char*"
                        }
                    },
                    "parameters": {
                        "parameter": [
                            {
                                "@name": "date",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "../libsoup/soup-date-utils.c",
                                    "@line": "77",
                                    "#text": "a #GDateTime"
                                },
                                "type": {
                                    "@name": "GLib.DateTime",
                                    "@c:type": "GDateTime*"
                                }
                            },
                            {
                                "@name": "format",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "../libsoup/soup-date-utils.c",
                                    "@line": "78",
                                    "#text": "the format to generate the date in"
                                },
                                "type": {
                                    "@name": "DateFormat",
                                    "@c:type": "SoupDateFormat"
                                }
                            }
                        ]
                    }
                },
                {
                    "@name": "form_decode",
                    "@c:identifier": "soup_form_decode",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "../libsoup/soup-form.c",
                        "@line": "58",
                        "#text": "Decodes @form.\n\nwhich is an urlencoded dataset as defined in the HTML 4.01 spec."
                    },
                    "source-position": {
                        "@filename": "../libsoup/soup-form.h",
                        "@line": "18"
                    },
                    "return-value": {
                        "@transfer-ownership": "container",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "../libsoup/soup-form.c",
                            "@line": "66",
                            "#text": "a hash\n  table containing the name/value pairs from @encoded_form, which you\n  can free with [func@GLib.HashTable.destroy]."
                        },
                        "type": {
                            "@name": "GLib.HashTable",
                            "@c:type": "GHashTable*",
                            "type": [
                                {
                                    "@name": "utf8"
                                },
                                {
                                    "@name": "utf8"
                                }
                            ]
                        }
                    },
                    "parameters": {
                        "parameter": {
                            "@name": "encoded_form",
                            "@transfer-ownership": "none",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../libsoup/soup-form.c",
                                "@line": "60",
                                "#text": "data of type \"application/x-www-form-urlencoded\""
                            },
                            "type": {
                                "@name": "utf8",
                                "@c:type": "const char*"
                            }
                        }
                    }
                },
                {
                    "@name": "form_decode_multipart",
                    "@c:identifier": "soup_form_decode_multipart",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "../libsoup/soup-form.c",
                        "@line": "100",
                        "#text": "Decodes the \"multipart/form-data\" request in @multipart.\n\nthis is a convenience method for the case when you have a single file upload\ncontrol in a form. (Or when you don't have any file upload controls, but are\nstill using \"multipart/form-data\" anyway.) Pass the name of the file upload\ncontrol in @file_control_name, and [func@form_decode_multipart] will extract\nthe uploaded file data into @filename, @content_type, and @file. All of the\nother form control data will be returned (as strings, as with\n[func@form_decode] in the returned [struct@GLib.HashTable].\n\nYou may pass %NULL for @filename, @content_type and/or @file if you do not\ncare about those fields. [func@form_decode_multipart] may also\nreturn %NULL in those fields if the client did not provide that\ninformation. You must free the returned filename and content-type\nwith [func@GLib.free], and the returned file data with [method@Glib.Bytes.unref].\n\nIf you have a form with more than one file upload control, you will\nneed to decode it manually, using [ctor@Multipart.new_from_message]\nand [method@Multipart.get_part]."
                    },
                    "source-position": {
                        "@filename": "../libsoup/soup-form.h",
                        "@line": "20"
                    },
                    "return-value": {
                        "@transfer-ownership": "container",
                        "@nullable": "1",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "../libsoup/soup-form.c",
                            "@line": "128",
                            "#text": "a hash table containing the name/value pairs (other than\n  @file_control_name) from @msg, which you can free with\n  [func@GLib.HashTable.destroy]. On error, it will return %NULL."
                        },
                        "type": {
                            "@name": "GLib.HashTable",
                            "@c:type": "GHashTable*",
                            "type": [
                                {
                                    "@name": "utf8"
                                },
                                {
                                    "@name": "utf8"
                                }
                            ]
                        }
                    },
                    "parameters": {
                        "parameter": [
                            {
                                "@name": "multipart",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "../libsoup/soup-form.c",
                                    "@line": "102",
                                    "#text": "a #SoupMultipart"
                                },
                                "type": {
                                    "@name": "Multipart",
                                    "@c:type": "SoupMultipart*"
                                }
                            },
                            {
                                "@name": "file_control_name",
                                "@transfer-ownership": "none",
                                "@nullable": "1",
                                "@allow-none": "1",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "../libsoup/soup-form.c",
                                    "@line": "103",
                                    "#text": "the name of the HTML file upload control"
                                },
                                "type": {
                                    "@name": "utf8",
                                    "@c:type": "const char*"
                                }
                            },
                            {
                                "@name": "filename",
                                "@direction": "out",
                                "@caller-allocates": "0",
                                "@transfer-ownership": "full",
                                "@optional": "1",
                                "@allow-none": "1",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "../libsoup/soup-form.c",
                                    "@line": "104",
                                    "#text": "return location for the name of the uploaded file"
                                },
                                "type": {
                                    "@name": "utf8",
                                    "@c:type": "char**"
                                }
                            },
                            {
                                "@name": "content_type",
                                "@direction": "out",
                                "@caller-allocates": "0",
                                "@transfer-ownership": "full",
                                "@optional": "1",
                                "@allow-none": "1",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "../libsoup/soup-form.c",
                                    "@line": "105",
                                    "#text": "return location for the MIME type of the uploaded file"
                                },
                                "type": {
                                    "@name": "utf8",
                                    "@c:type": "char**"
                                }
                            },
                            {
                                "@name": "file",
                                "@direction": "out",
                                "@caller-allocates": "0",
                                "@transfer-ownership": "full",
                                "@optional": "1",
                                "@allow-none": "1",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "../libsoup/soup-form.c",
                                    "@line": "106",
                                    "#text": "return location for the uploaded file data"
                                },
                                "type": {
                                    "@name": "GLib.Bytes",
                                    "@c:type": "GBytes**"
                                }
                            }
                        ]
                    }
                },
                {
                    "@name": "form_encode",
                    "@c:identifier": "soup_form_encode",
                    "@introspectable": "0",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "../libsoup/soup-form.c",
                        "@line": "222",
                        "#text": "Encodes the given field names and values into a value of type\n\"application/x-www-form-urlencoded\".\n\nEncodes as defined in the HTML 4.01 spec.\n\nThis method requires you to know the names of the form fields (or\nat the very least, the total number of fields) at compile time; for\nworking with dynamic forms, use [func@form_encode_hash] or\n[func@form_encode_datalist].\n\nSee also: [ctor@Message.new_from_encoded_form]."
                    },
                    "source-position": {
                        "@filename": "../libsoup/soup-form.h",
                        "@line": "27"
                    },
                    "return-value": {
                        "@transfer-ownership": "full",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "../libsoup/soup-form.c",
                            "@line": "240",
                            "#text": "the encoded form"
                        },
                        "type": {
                            "@name": "utf8",
                            "@c:type": "char*"
                        }
                    },
                    "parameters": {
                        "parameter": [
                            {
                                "@name": "first_field",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "../libsoup/soup-form.c",
                                    "@line": "224",
                                    "#text": "name of the first form field"
                                },
                                "type": {
                                    "@name": "utf8",
                                    "@c:type": "const char*"
                                }
                            },
                            {
                                "@name": "...",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "../libsoup/soup-form.c",
                                    "@line": "225",
                                    "#text": "value of @first_field, followed by additional field names\n  and values, terminated by %NULL."
                                },
                                "varargs": null
                            }
                        ]
                    }
                },
                {
                    "@name": "form_encode_datalist",
                    "@c:identifier": "soup_form_encode_datalist",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "../libsoup/soup-form.c",
                        "@line": "293",
                        "#text": "Encodes @form_data_set into a value of type\n\"application/x-www-form-urlencoded\".\n\nEncodes as defined in the HTML 4.01 spec. Unlike [func@form_encode_hash],\nthis preserves the ordering of the form elements, which may be required in\nsome situations.\n\nSee also: [ctor@Message.new_from_encoded_form]."
                    },
                    "source-position": {
                        "@filename": "../libsoup/soup-form.h",
                        "@line": "32"
                    },
                    "return-value": {
                        "@transfer-ownership": "full",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "../libsoup/soup-form.c",
                            "@line": "306",
                            "#text": "the encoded form"
                        },
                        "type": {
                            "@name": "utf8",
                            "@c:type": "char*"
                        }
                    },
                    "parameters": {
                        "parameter": {
                            "@name": "form_data_set",
                            "@transfer-ownership": "none",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../libsoup/soup-form.c",
                                "@line": "295",
                                "#text": "a datalist containing name/value pairs"
                            },
                            "type": {
                                "@name": "GLib.Data",
                                "@c:type": "GData**"
                            }
                        }
                    }
                },
                {
                    "@name": "form_encode_hash",
                    "@c:identifier": "soup_form_encode_hash",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "../libsoup/soup-form.c",
                        "@line": "255",
                        "#text": "Encodes @form_data_set into a value of type\n\"application/x-www-form-urlencoded\".\n\nEncodes as defined in the HTML 4.01 spec.\n\nNote that the HTML spec states that \"The control names/values are\nlisted in the order they appear in the document.\" Since this method\ntakes a hash table, it cannot enforce that; if you care about the\nordering of the form fields, use [func@form_encode_datalist].\n\nSee also: [ctor@Message.new_from_encoded_form]."
                    },
                    "source-position": {
                        "@filename": "../libsoup/soup-form.h",
                        "@line": "30"
                    },
                    "return-value": {
                        "@transfer-ownership": "full",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "../libsoup/soup-form.c",
                            "@line": "272",
                            "#text": "the encoded form"
                        },
                        "type": {
                            "@name": "utf8",
                            "@c:type": "char*"
                        }
                    },
                    "parameters": {
                        "parameter": {
                            "@name": "form_data_set",
                            "@transfer-ownership": "none",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../libsoup/soup-form.c",
                                "@line": "257",
                                "#text": "a hash table containing\n  name/value pairs (as strings)"
                            },
                            "type": {
                                "@name": "GLib.HashTable",
                                "@c:type": "GHashTable*",
                                "type": [
                                    {
                                        "@name": "utf8"
                                    },
                                    {
                                        "@name": "utf8"
                                    }
                                ]
                            }
                        }
                    }
                },
                {
                    "@name": "form_encode_valist",
                    "@c:identifier": "soup_form_encode_valist",
                    "@introspectable": "0",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "../libsoup/soup-form.c",
                        "@line": "317",
                        "#text": "See [func@form_encode].\n\nThis is mostly an internal method, used by various other methods such as\n[func@form_encode].\n\nSee also: [ctor@Message.new_from_encoded_form]."
                    },
                    "source-position": {
                        "@filename": "../libsoup/soup-form.h",
                        "@line": "34"
                    },
                    "return-value": {
                        "@transfer-ownership": "full",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "../libsoup/soup-form.c",
                            "@line": "329",
                            "#text": "the encoded form"
                        },
                        "type": {
                            "@name": "utf8",
                            "@c:type": "char*"
                        }
                    },
                    "parameters": {
                        "parameter": [
                            {
                                "@name": "first_field",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "../libsoup/soup-form.c",
                                    "@line": "319",
                                    "#text": "name of the first form field"
                                },
                                "type": {
                                    "@name": "utf8",
                                    "@c:type": "const char*"
                                }
                            },
                            {
                                "@name": "args",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "../libsoup/soup-form.c",
                                    "@line": "320",
                                    "#text": "pointer to additional values, as in [func@form_encode]"
                                },
                                "type": {
                                    "@name": "va_list",
                                    "@c:type": "va_list"
                                }
                            }
                        ]
                    }
                },
                {
                    "@name": "get_major_version",
                    "@c:identifier": "soup_get_major_version",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "../libsoup/soup-version.c",
                        "@line": "53",
                        "#text": "Returns the major version number of the libsoup library.\n\ne.g. in libsoup version 2.42.0 this is 2.\n\nThis function is in the library, so it represents the libsoup library\nyour code is running against. Contrast with the #SOUP_MAJOR_VERSION\nmacro, which represents the major version of the libsoup headers you\nhave included when compiling your code."
                    },
                    "source-position": {
                        "@filename": "../libsoup/soup-version.h",
                        "@line": "217"
                    },
                    "return-value": {
                        "@transfer-ownership": "none",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "../libsoup/soup-version.c",
                            "@line": "65",
                            "#text": "the major version number of the libsoup library"
                        },
                        "type": {
                            "@name": "guint",
                            "@c:type": "guint"
                        }
                    }
                },
                {
                    "@name": "get_micro_version",
                    "@c:identifier": "soup_get_micro_version",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "../libsoup/soup-version.c",
                        "@line": "93",
                        "#text": "Returns the micro version number of the libsoup library.\n\ne.g. in libsoup version 2.42.0 this is 0.\n\nThis function is in the library, so it represents the libsoup library\nyour code is running against. Contrast with the #SOUP_MICRO_VERSION\nmacro, which represents the micro version of the libsoup headers you\nhave included when compiling your code."
                    },
                    "source-position": {
                        "@filename": "../libsoup/soup-version.h",
                        "@line": "223"
                    },
                    "return-value": {
                        "@transfer-ownership": "none",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "../libsoup/soup-version.c",
                            "@line": "105",
                            "#text": "the micro version number of the libsoup library"
                        },
                        "type": {
                            "@name": "guint",
                            "@c:type": "guint"
                        }
                    }
                },
                {
                    "@name": "get_minor_version",
                    "@c:identifier": "soup_get_minor_version",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "../libsoup/soup-version.c",
                        "@line": "73",
                        "#text": "Returns the minor version number of the libsoup library.\n\ne.g. in libsoup version 2.42.0 this is 42.\n\nThis function is in the library, so it represents the libsoup library\nyour code is running against. Contrast with the #SOUP_MINOR_VERSION\nmacro, which represents the minor version of the libsoup headers you\nhave included when compiling your code."
                    },
                    "source-position": {
                        "@filename": "../libsoup/soup-version.h",
                        "@line": "220"
                    },
                    "return-value": {
                        "@transfer-ownership": "none",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "../libsoup/soup-version.c",
                            "@line": "85",
                            "#text": "the minor version number of the libsoup library"
                        },
                        "type": {
                            "@name": "guint",
                            "@c:type": "guint"
                        }
                    }
                },
                {
                    "@name": "header_contains",
                    "@c:identifier": "soup_header_contains",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "../libsoup/soup-headers.c",
                        "@line": "619",
                        "#text": "Parses @header to see if it contains the token @token (matched\ncase-insensitively).\n\nNote that this can't be used with lists that have qvalues."
                    },
                    "source-position": {
                        "@filename": "../libsoup/soup-headers.h",
                        "@line": "53"
                    },
                    "return-value": {
                        "@transfer-ownership": "none",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "../libsoup/soup-headers.c",
                            "@line": "630",
                            "#text": "whether or not @header contains @token"
                        },
                        "type": {
                            "@name": "gboolean",
                            "@c:type": "gboolean"
                        }
                    },
                    "parameters": {
                        "parameter": [
                            {
                                "@name": "header",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "../libsoup/soup-headers.c",
                                    "@line": "621",
                                    "#text": "An HTTP header suitable for parsing with\n  [func@header_parse_list]"
                                },
                                "type": {
                                    "@name": "utf8",
                                    "@c:type": "const char*"
                                }
                            },
                            {
                                "@name": "token",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "../libsoup/soup-headers.c",
                                    "@line": "623",
                                    "#text": "a token"
                                },
                                "type": {
                                    "@name": "utf8",
                                    "@c:type": "const char*"
                                }
                            }
                        ]
                    }
                },
                {
                    "@name": "header_free_list",
                    "@c:identifier": "soup_header_free_list",
                    "@introspectable": "0",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "../libsoup/soup-headers.c",
                        "@line": "606",
                        "#text": "Frees @list."
                    },
                    "source-position": {
                        "@filename": "../libsoup/soup-headers.h",
                        "@line": "50"
                    },
                    "return-value": {
                        "@transfer-ownership": "none",
                        "type": {
                            "@name": "none",
                            "@c:type": "void"
                        }
                    },
                    "parameters": {
                        "parameter": {
                            "@name": "list",
                            "@transfer-ownership": "none",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../libsoup/soup-headers.c",
                                "@line": "608",
                                "#text": "a #GSList returned from [func@header_parse_list] or\n[func@header_parse_quality_list]"
                            },
                            "type": {
                                "@name": "GLib.SList",
                                "@c:type": "GSList*",
                                "type": {
                                    "@name": "gpointer",
                                    "@c:type": "gpointer"
                                }
                            }
                        }
                    }
                },
                {
                    "@name": "header_free_param_list",
                    "@c:identifier": "soup_header_free_param_list",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "../libsoup/soup-headers.c",
                        "@line": "881",
                        "#text": "Frees @param_list."
                    },
                    "source-position": {
                        "@filename": "../libsoup/soup-headers.h",
                        "@line": "65"
                    },
                    "return-value": {
                        "@transfer-ownership": "none",
                        "type": {
                            "@name": "none",
                            "@c:type": "void"
                        }
                    },
                    "parameters": {
                        "parameter": {
                            "@name": "param_list",
                            "@transfer-ownership": "none",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../libsoup/soup-headers.c",
                                "@line": "883",
                                "#text": "a #GHashTable returned from\n  [func@header_parse_param_list] or [func@header_parse_semi_param_list]"
                            },
                            "type": {
                                "@name": "GLib.HashTable",
                                "@c:type": "GHashTable*",
                                "type": [
                                    {
                                        "@name": "utf8"
                                    },
                                    {
                                        "@name": "utf8"
                                    }
                                ]
                            }
                        }
                    }
                },
                {
                    "@name": "header_g_string_append_param",
                    "@c:identifier": "soup_header_g_string_append_param",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "../libsoup/soup-headers.c",
                        "@line": "985",
                        "#text": "Appends something like `name=value` to @string, taking care to quote @value\nif needed, and if so, to escape any quotes or backslashes in @value.\n\nAlternatively, if @value is a non-ASCII UTF-8 string, it will be\nappended using RFC5987 syntax. Although in theory this is supposed\nto work anywhere in HTTP that uses this style of parameter, in\nreality, it can only be used portably with the Content-Disposition\n\"filename\" parameter.\n\nIf @value is %NULL, this will just append @name to @string."
                    },
                    "source-position": {
                        "@filename": "../libsoup/soup-headers.h",
                        "@line": "68"
                    },
                    "return-value": {
                        "@transfer-ownership": "none",
                        "type": {
                            "@name": "none",
                            "@c:type": "void"
                        }
                    },
                    "parameters": {
                        "parameter": [
                            {
                                "@name": "string",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "../libsoup/soup-headers.c",
                                    "@line": "987",
                                    "#text": "a #GString being used to construct an HTTP header value"
                                },
                                "type": {
                                    "@name": "GLib.String",
                                    "@c:type": "GString*"
                                }
                            },
                            {
                                "@name": "name",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "../libsoup/soup-headers.c",
                                    "@line": "988",
                                    "#text": "a parameter name"
                                },
                                "type": {
                                    "@name": "utf8",
                                    "@c:type": "const char*"
                                }
                            },
                            {
                                "@name": "value",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "../libsoup/soup-headers.c",
                                    "@line": "989",
                                    "#text": "a parameter value, or %NULL"
                                },
                                "type": {
                                    "@name": "utf8",
                                    "@c:type": "const char*"
                                }
                            }
                        ]
                    }
                },
                {
                    "@name": "header_g_string_append_param_quoted",
                    "@c:identifier": "soup_header_g_string_append_param_quoted",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "../libsoup/soup-headers.c",
                        "@line": "961",
                        "#text": "Appends something like `name=\"value\"` to\n@string, taking care to escape any quotes or backslashes in @value.\n\nIf @value is (non-ASCII) UTF-8, this will instead use RFC 5987\nencoding, just like [func@header_g_string_append_param]."
                    },
                    "source-position": {
                        "@filename": "../libsoup/soup-headers.h",
                        "@line": "72"
                    },
                    "return-value": {
                        "@transfer-ownership": "none",
                        "type": {
                            "@name": "none",
                            "@c:type": "void"
                        }
                    },
                    "parameters": {
                        "parameter": [
                            {
                                "@name": "string",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "../libsoup/soup-headers.c",
                                    "@line": "963",
                                    "#text": "a #GString being used to construct an HTTP header value"
                                },
                                "type": {
                                    "@name": "GLib.String",
                                    "@c:type": "GString*"
                                }
                            },
                            {
                                "@name": "name",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "../libsoup/soup-headers.c",
                                    "@line": "964",
                                    "#text": "a parameter name"
                                },
                                "type": {
                                    "@name": "utf8",
                                    "@c:type": "const char*"
                                }
                            },
                            {
                                "@name": "value",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "../libsoup/soup-headers.c",
                                    "@line": "965",
                                    "#text": "a parameter value"
                                },
                                "type": {
                                    "@name": "utf8",
                                    "@c:type": "const char*"
                                }
                            }
                        ]
                    }
                },
                {
                    "@name": "header_parse_list",
                    "@c:identifier": "soup_header_parse_list",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "../libsoup/soup-headers.c",
                        "@line": "479",
                        "#text": "Parses a header whose content is described by RFC2616 as `#something`.\n\n\"something\" does not itself contain commas, except as part of quoted-strings."
                    },
                    "source-position": {
                        "@filename": "../libsoup/soup-headers.h",
                        "@line": "45"
                    },
                    "return-value": {
                        "@transfer-ownership": "full",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "../libsoup/soup-headers.c",
                            "@line": "487",
                            "#text": "a #GSList of\n  list elements, as allocated strings"
                        },
                        "type": {
                            "@name": "GLib.SList",
                            "@c:type": "GSList*",
                            "type": {
                                "@name": "utf8"
                            }
                        }
                    },
                    "parameters": {
                        "parameter": {
                            "@name": "header",
                            "@transfer-ownership": "none",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../libsoup/soup-headers.c",
                                "@line": "481",
                                "#text": "a header value"
                            },
                            "type": {
                                "@name": "utf8",
                                "@c:type": "const char*"
                            }
                        }
                    }
                },
                {
                    "@name": "header_parse_param_list",
                    "@c:identifier": "soup_header_parse_param_list",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "../libsoup/soup-headers.c",
                        "@line": "777",
                        "#text": "Parses a header which is a comma-delimited list of something like:\n`token [ \"=\" ( token | quoted-string ) ]`.\n\nTokens that don't have an associated value will still be added to\nthe resulting hash table, but with a %NULL value.\n\nThis also handles RFC5987 encoding (which in HTTP is mostly used\nfor giving UTF8-encoded filenames in the Content-Disposition\nheader)."
                    },
                    "source-position": {
                        "@filename": "../libsoup/soup-headers.h",
                        "@line": "57"
                    },
                    "return-value": {
                        "@transfer-ownership": "full",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "../libsoup/soup-headers.c",
                            "@line": "791",
                            "#text": "a\n  #GHashTable of list elements, which can be freed with\n  [func@header_free_param_list]."
                        },
                        "type": {
                            "@name": "GLib.HashTable",
                            "@c:type": "GHashTable*",
                            "type": [
                                {
                                    "@name": "utf8"
                                },
                                {
                                    "@name": "utf8"
                                }
                            ]
                        }
                    },
                    "parameters": {
                        "parameter": {
                            "@name": "header",
                            "@transfer-ownership": "none",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../libsoup/soup-headers.c",
                                "@line": "779",
                                "#text": "a header value"
                            },
                            "type": {
                                "@name": "utf8",
                                "@c:type": "const char*"
                            }
                        }
                    }
                },
                {
                    "@name": "header_parse_param_list_strict",
                    "@c:identifier": "soup_header_parse_param_list_strict",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "../libsoup/soup-headers.c",
                        "@line": "829",
                        "#text": "A strict version of [func@header_parse_param_list]\nthat bails out if there are duplicate parameters.\n\nNote that this function will treat RFC5987-encoded\nparameters as duplicated if an ASCII version is also\npresent. For header fields that might contain\nRFC5987-encoded parameters, use\n[func@header_parse_param_list] instead."
                    },
                    "source-position": {
                        "@filename": "../libsoup/soup-headers.h",
                        "@line": "61"
                    },
                    "return-value": {
                        "@transfer-ownership": "full",
                        "@nullable": "1",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "../libsoup/soup-headers.c",
                            "@line": "842",
                            "#text": "a #GHashTable of list elements, which can be freed with\n  [func@header_free_param_list] or %NULL if there are duplicate\n  elements."
                        },
                        "type": {
                            "@name": "GLib.HashTable",
                            "@c:type": "GHashTable*",
                            "type": [
                                {
                                    "@name": "utf8"
                                },
                                {
                                    "@name": "utf8"
                                }
                            ]
                        }
                    },
                    "parameters": {
                        "parameter": {
                            "@name": "header",
                            "@transfer-ownership": "none",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../libsoup/soup-headers.c",
                                "@line": "831",
                                "#text": "a header value"
                            },
                            "type": {
                                "@name": "utf8",
                                "@c:type": "const char*"
                            }
                        }
                    }
                },
                {
                    "@name": "header_parse_quality_list",
                    "@c:identifier": "soup_header_parse_quality_list",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "../libsoup/soup-headers.c",
                        "@line": "517",
                        "#text": "Parses a header whose content is a list of items with optional\n\"qvalue\"s (eg, Accept, Accept-Charset, Accept-Encoding,\nAccept-Language, TE).\n\nIf @unacceptable is not %NULL, then on return, it will contain the\nitems with qvalue 0. Either way, those items will be removed from\nthe main list."
                    },
                    "source-position": {
                        "@filename": "../libsoup/soup-headers.h",
                        "@line": "47"
                    },
                    "return-value": {
                        "@transfer-ownership": "full",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "../libsoup/soup-headers.c",
                            "@line": "531",
                            "#text": "a #GSList of\n  acceptable values (as allocated strings), highest-qvalue first."
                        },
                        "type": {
                            "@name": "GLib.SList",
                            "@c:type": "GSList*",
                            "type": {
                                "@name": "utf8"
                            }
                        }
                    },
                    "parameters": {
                        "parameter": [
                            {
                                "@name": "header",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "../libsoup/soup-headers.c",
                                    "@line": "519",
                                    "#text": "a header value"
                                },
                                "type": {
                                    "@name": "utf8",
                                    "@c:type": "const char*"
                                }
                            },
                            {
                                "@name": "unacceptable",
                                "@direction": "out",
                                "@caller-allocates": "0",
                                "@transfer-ownership": "full",
                                "@optional": "1",
                                "@allow-none": "1",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "../libsoup/soup-headers.c",
                                    "@line": "520",
                                    "#text": "on\n  return, will contain a list of unacceptable values"
                                },
                                "type": {
                                    "@name": "GLib.SList",
                                    "@c:type": "GSList**",
                                    "type": {
                                        "@name": "utf8"
                                    }
                                }
                            }
                        ]
                    }
                },
                {
                    "@name": "header_parse_semi_param_list",
                    "@c:identifier": "soup_header_parse_semi_param_list",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "../libsoup/soup-headers.c",
                        "@line": "803",
                        "#text": "Parses a header which is a semicolon-delimited list of something\nlike: `token [ \"=\" ( token | quoted-string ) ]`.\n\nTokens that don't have an associated value will still be added to\nthe resulting hash table, but with a %NULL value.\n\nThis also handles RFC5987 encoding (which in HTTP is mostly used\nfor giving UTF8-encoded filenames in the Content-Disposition\nheader)."
                    },
                    "source-position": {
                        "@filename": "../libsoup/soup-headers.h",
                        "@line": "59"
                    },
                    "return-value": {
                        "@transfer-ownership": "full",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "../libsoup/soup-headers.c",
                            "@line": "817",
                            "#text": "a\n  #GHashTable of list elements, which can be freed with\n  [func@header_free_param_list]."
                        },
                        "type": {
                            "@name": "GLib.HashTable",
                            "@c:type": "GHashTable*",
                            "type": [
                                {
                                    "@name": "utf8"
                                },
                                {
                                    "@name": "utf8"
                                }
                            ]
                        }
                    },
                    "parameters": {
                        "parameter": {
                            "@name": "header",
                            "@transfer-ownership": "none",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../libsoup/soup-headers.c",
                                "@line": "805",
                                "#text": "a header value"
                            },
                            "type": {
                                "@name": "utf8",
                                "@c:type": "const char*"
                            }
                        }
                    }
                },
                {
                    "@name": "header_parse_semi_param_list_strict",
                    "@c:identifier": "soup_header_parse_semi_param_list_strict",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "../libsoup/soup-headers.c",
                        "@line": "855",
                        "#text": "A strict version of [func@header_parse_semi_param_list]\nthat bails out if there are duplicate parameters.\n\nNote that this function will treat RFC5987-encoded\nparameters as duplicated if an ASCII version is also\npresent. For header fields that might contain\nRFC5987-encoded parameters, use\n[func@header_parse_semi_param_list] instead."
                    },
                    "source-position": {
                        "@filename": "../libsoup/soup-headers.h",
                        "@line": "63"
                    },
                    "return-value": {
                        "@transfer-ownership": "full",
                        "@nullable": "1",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "../libsoup/soup-headers.c",
                            "@line": "868",
                            "#text": "a #GHashTable of list elements, which can be freed with\n  [func@header_free_param_list] or %NULL if there are duplicate\n  elements."
                        },
                        "type": {
                            "@name": "GLib.HashTable",
                            "@c:type": "GHashTable*",
                            "type": [
                                {
                                    "@name": "utf8"
                                },
                                {
                                    "@name": "utf8"
                                }
                            ]
                        }
                    },
                    "parameters": {
                        "parameter": {
                            "@name": "header",
                            "@transfer-ownership": "none",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../libsoup/soup-headers.c",
                                "@line": "857",
                                "#text": "a header value"
                            },
                            "type": {
                                "@name": "utf8",
                                "@c:type": "const char*"
                            }
                        }
                    }
                },
                {
                    "@name": "headers_parse",
                    "@c:identifier": "soup_headers_parse",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "../libsoup/soup-headers.c",
                        "@line": "20",
                        "#text": "Parses the headers of an HTTP request or response in @str and\nstores the results in @dest.\n\nBeware that @dest may be modified even on failure.\n\nThis is a low-level method; normally you would use\n[func@headers_parse_request] or [func@headers_parse_response]."
                    },
                    "source-position": {
                        "@filename": "../libsoup/soup-headers.h",
                        "@line": "17"
                    },
                    "return-value": {
                        "@transfer-ownership": "none",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "../libsoup/soup-headers.c",
                            "@line": "35",
                            "#text": "success or failure"
                        },
                        "type": {
                            "@name": "gboolean",
                            "@c:type": "gboolean"
                        }
                    },
                    "parameters": {
                        "parameter": [
                            {
                                "@name": "str",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "../libsoup/soup-headers.c",
                                    "@line": "22",
                                    "#text": "the header string (including the Request-Line or Status-Line,\n  but not the trailing blank line)"
                                },
                                "type": {
                                    "@name": "utf8",
                                    "@c:type": "const char*"
                                }
                            },
                            {
                                "@name": "len",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "../libsoup/soup-headers.c",
                                    "@line": "24",
                                    "#text": "length of @str"
                                },
                                "type": {
                                    "@name": "gint",
                                    "@c:type": "int"
                                }
                            },
                            {
                                "@name": "dest",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "../libsoup/soup-headers.c",
                                    "@line": "25",
                                    "#text": "#SoupMessageHeaders to store the header values in"
                                },
                                "type": {
                                    "@name": "MessageHeaders",
                                    "@c:type": "SoupMessageHeaders*"
                                }
                            }
                        ]
                    }
                },
                {
                    "@name": "headers_parse_request",
                    "@c:identifier": "soup_headers_parse_request",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "../libsoup/soup-headers.c",
                        "@line": "158",
                        "#text": "Parses the headers of an HTTP request in @str and stores the\nresults in @req_method, @req_path, @ver, and @req_headers.\n\nBeware that @req_headers may be modified even on failure."
                    },
                    "source-position": {
                        "@filename": "../libsoup/soup-headers.h",
                        "@line": "22"
                    },
                    "return-value": {
                        "@transfer-ownership": "none",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "../libsoup/soup-headers.c",
                            "@line": "175",
                            "#text": "%SOUP_STATUS_OK if the headers could be parsed, or an\n  HTTP error to be returned to the client if they could not be."
                        },
                        "type": {
                            "@name": "guint",
                            "@c:type": "guint"
                        }
                    },
                    "parameters": {
                        "parameter": [
                            {
                                "@name": "str",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "../libsoup/soup-headers.c",
                                    "@line": "160",
                                    "#text": "the headers (up to, but not including, the trailing blank line)"
                                },
                                "type": {
                                    "@name": "utf8",
                                    "@c:type": "const char*"
                                }
                            },
                            {
                                "@name": "len",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "../libsoup/soup-headers.c",
                                    "@line": "161",
                                    "#text": "length of @str"
                                },
                                "type": {
                                    "@name": "gint",
                                    "@c:type": "int"
                                }
                            },
                            {
                                "@name": "req_headers",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "../libsoup/soup-headers.c",
                                    "@line": "162",
                                    "#text": "#SoupMessageHeaders to store the header values in"
                                },
                                "type": {
                                    "@name": "MessageHeaders",
                                    "@c:type": "SoupMessageHeaders*"
                                }
                            },
                            {
                                "@name": "req_method",
                                "@direction": "out",
                                "@caller-allocates": "0",
                                "@transfer-ownership": "full",
                                "@optional": "1",
                                "@allow-none": "1",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "../libsoup/soup-headers.c",
                                    "@line": "163",
                                    "#text": "if non-%NULL, will be filled in with the\n  request method"
                                },
                                "type": {
                                    "@name": "utf8",
                                    "@c:type": "char**"
                                }
                            },
                            {
                                "@name": "req_path",
                                "@direction": "out",
                                "@caller-allocates": "0",
                                "@transfer-ownership": "full",
                                "@optional": "1",
                                "@allow-none": "1",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "../libsoup/soup-headers.c",
                                    "@line": "165",
                                    "#text": "if non-%NULL, will be filled in with the\n  request path"
                                },
                                "type": {
                                    "@name": "utf8",
                                    "@c:type": "char**"
                                }
                            },
                            {
                                "@name": "ver",
                                "@direction": "out",
                                "@caller-allocates": "0",
                                "@transfer-ownership": "full",
                                "@optional": "1",
                                "@allow-none": "1",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "../libsoup/soup-headers.c",
                                    "@line": "167",
                                    "#text": "if non-%NULL, will be filled in with the HTTP\n  version"
                                },
                                "type": {
                                    "@name": "HTTPVersion",
                                    "@c:type": "SoupHTTPVersion*"
                                }
                            }
                        ]
                    }
                },
                {
                    "@name": "headers_parse_response",
                    "@c:identifier": "soup_headers_parse_response",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "../libsoup/soup-headers.c",
                        "@line": "346",
                        "#text": "Parses the headers of an HTTP response in @str and stores the\nresults in @ver, @status_code, @reason_phrase, and @headers.\n\nBeware that @headers may be modified even on failure."
                    },
                    "source-position": {
                        "@filename": "../libsoup/soup-headers.h",
                        "@line": "36"
                    },
                    "return-value": {
                        "@transfer-ownership": "none",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "../libsoup/soup-headers.c",
                            "@line": "363",
                            "#text": "success or failure."
                        },
                        "type": {
                            "@name": "gboolean",
                            "@c:type": "gboolean"
                        }
                    },
                    "parameters": {
                        "parameter": [
                            {
                                "@name": "str",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "../libsoup/soup-headers.c",
                                    "@line": "348",
                                    "#text": "the headers (up to, but not including, the trailing blank line)"
                                },
                                "type": {
                                    "@name": "utf8",
                                    "@c:type": "const char*"
                                }
                            },
                            {
                                "@name": "len",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "../libsoup/soup-headers.c",
                                    "@line": "349",
                                    "#text": "length of @str"
                                },
                                "type": {
                                    "@name": "gint",
                                    "@c:type": "int"
                                }
                            },
                            {
                                "@name": "headers",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "../libsoup/soup-headers.c",
                                    "@line": "350",
                                    "#text": "#SoupMessageHeaders to store the header values in"
                                },
                                "type": {
                                    "@name": "MessageHeaders",
                                    "@c:type": "SoupMessageHeaders*"
                                }
                            },
                            {
                                "@name": "ver",
                                "@direction": "out",
                                "@caller-allocates": "0",
                                "@transfer-ownership": "full",
                                "@optional": "1",
                                "@allow-none": "1",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "../libsoup/soup-headers.c",
                                    "@line": "351",
                                    "#text": "if non-%NULL, will be filled in with the HTTP\n  version"
                                },
                                "type": {
                                    "@name": "HTTPVersion",
                                    "@c:type": "SoupHTTPVersion*"
                                }
                            },
                            {
                                "@name": "status_code",
                                "@direction": "out",
                                "@caller-allocates": "0",
                                "@transfer-ownership": "full",
                                "@optional": "1",
                                "@allow-none": "1",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "../libsoup/soup-headers.c",
                                    "@line": "353",
                                    "#text": "if non-%NULL, will be filled in with\n  the status code"
                                },
                                "type": {
                                    "@name": "guint",
                                    "@c:type": "guint*"
                                }
                            },
                            {
                                "@name": "reason_phrase",
                                "@direction": "out",
                                "@caller-allocates": "0",
                                "@transfer-ownership": "full",
                                "@optional": "1",
                                "@allow-none": "1",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "../libsoup/soup-headers.c",
                                    "@line": "355",
                                    "#text": "if non-%NULL, will be filled in with\n  the reason phrase"
                                },
                                "type": {
                                    "@name": "utf8",
                                    "@c:type": "char**"
                                }
                            }
                        ]
                    }
                },
                {
                    "@name": "headers_parse_status_line",
                    "@c:identifier": "soup_headers_parse_status_line",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "../libsoup/soup-headers.c",
                        "@line": "270",
                        "#text": "Parses the HTTP Status-Line string in @status_line into @ver,\n@status_code, and @reason_phrase.\n\n@status_line must be terminated by either \"\\0\" or \"\\r\\n\"."
                    },
                    "source-position": {
                        "@filename": "../libsoup/soup-headers.h",
                        "@line": "30"
                    },
                    "return-value": {
                        "@transfer-ownership": "none",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "../libsoup/soup-headers.c",
                            "@line": "285",
                            "#text": "%TRUE if @status_line was parsed successfully."
                        },
                        "type": {
                            "@name": "gboolean",
                            "@c:type": "gboolean"
                        }
                    },
                    "parameters": {
                        "parameter": [
                            {
                                "@name": "status_line",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "../libsoup/soup-headers.c",
                                    "@line": "272",
                                    "#text": "an HTTP Status-Line"
                                },
                                "type": {
                                    "@name": "utf8",
                                    "@c:type": "const char*"
                                }
                            },
                            {
                                "@name": "ver",
                                "@direction": "out",
                                "@caller-allocates": "0",
                                "@transfer-ownership": "full",
                                "@optional": "1",
                                "@allow-none": "1",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "../libsoup/soup-headers.c",
                                    "@line": "273",
                                    "#text": "if non-%NULL, will be filled in with the HTTP\n  version"
                                },
                                "type": {
                                    "@name": "HTTPVersion",
                                    "@c:type": "SoupHTTPVersion*"
                                }
                            },
                            {
                                "@name": "status_code",
                                "@direction": "out",
                                "@caller-allocates": "0",
                                "@transfer-ownership": "full",
                                "@optional": "1",
                                "@allow-none": "1",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "../libsoup/soup-headers.c",
                                    "@line": "275",
                                    "#text": "if non-%NULL, will be filled in with\n  the status code"
                                },
                                "type": {
                                    "@name": "guint",
                                    "@c:type": "guint*"
                                }
                            },
                            {
                                "@name": "reason_phrase",
                                "@direction": "out",
                                "@caller-allocates": "0",
                                "@transfer-ownership": "full",
                                "@optional": "1",
                                "@allow-none": "1",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "../libsoup/soup-headers.c",
                                    "@line": "277",
                                    "#text": "if non-%NULL, will be filled in with\n  the reason phrase"
                                },
                                "type": {
                                    "@name": "utf8",
                                    "@c:type": "char**"
                                }
                            }
                        ]
                    }
                },
                {
                    "@name": "message_headers_iter_init",
                    "@c:identifier": "soup_message_headers_iter_init",
                    "@moved-to": "MessageHeadersIter.init",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "../libsoup/soup-message-headers.c",
                        "@line": "778",
                        "#text": "Initializes @iter for iterating @hdrs."
                    },
                    "source-position": {
                        "@filename": "../libsoup/soup-message-headers.h",
                        "@line": "83"
                    },
                    "return-value": {
                        "@transfer-ownership": "none",
                        "type": {
                            "@name": "none",
                            "@c:type": "void"
                        }
                    },
                    "parameters": {
                        "parameter": [
                            {
                                "@name": "iter",
                                "@direction": "out",
                                "@caller-allocates": "1",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "../libsoup/soup-message-headers.c",
                                    "@line": "780",
                                    "#text": "a pointer to a %SoupMessageHeadersIter\n  structure"
                                },
                                "type": {
                                    "@name": "MessageHeadersIter",
                                    "@c:type": "SoupMessageHeadersIter*"
                                }
                            },
                            {
                                "@name": "hdrs",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "../libsoup/soup-message-headers.c",
                                    "@line": "782",
                                    "#text": "a %SoupMessageHeaders"
                                },
                                "type": {
                                    "@name": "MessageHeaders",
                                    "@c:type": "SoupMessageHeaders*"
                                }
                            }
                        ]
                    }
                },
                {
                    "@name": "session_error_quark",
                    "@c:identifier": "soup_session_error_quark",
                    "@moved-to": "SessionError.quark",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "../libsoup/soup-session.h",
                        "@line": "36",
                        "#text": "Registers error quark for SoupSession if needed."
                    },
                    "return-value": {
                        "@transfer-ownership": "none",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "../libsoup/soup-session.h",
                            "@line": "40",
                            "#text": "Error quark for SoupSession."
                        },
                        "type": {
                            "@name": "GLib.Quark",
                            "@c:type": "GQuark"
                        }
                    }
                },
                {
                    "@name": "status_get_phrase",
                    "@c:identifier": "soup_status_get_phrase",
                    "@moved-to": "Status.get_phrase",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "../libsoup/soup-status.c",
                        "@line": "213",
                        "#text": "Looks up the stock HTTP description of @status_code.\n\n*There is no reason for you to ever use this\nfunction.* If you wanted the textual description for the\n[property@Message:status-code] of a given [class@Message], you should just\nlook at the message's [property@Message:reason-phrase]. However, you\nshould only do that for use in debugging messages; HTTP reason\nphrases are not localized, and are not generally very descriptive\nanyway, and so they should never be presented to the user directly.\nInstead, you should create you own error messages based on the\nstatus code, and on what you were trying to do."
                    },
                    "source-position": {
                        "@filename": "../libsoup/soup-status.h",
                        "@line": "89"
                    },
                    "return-value": {
                        "@transfer-ownership": "none",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "../libsoup/soup-status.c",
                            "@line": "229",
                            "#text": "the (terse, English) description of @status_code"
                        },
                        "type": {
                            "@name": "utf8",
                            "@c:type": "const char*"
                        }
                    },
                    "parameters": {
                        "parameter": {
                            "@name": "status_code",
                            "@transfer-ownership": "none",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../libsoup/soup-status.c",
                                "@line": "215",
                                "#text": "an HTTP status code"
                            },
                            "type": {
                                "@name": "guint",
                                "@c:type": "guint"
                            }
                        }
                    }
                },
                {
                    "@name": "tld_domain_is_public_suffix",
                    "@c:identifier": "soup_tld_domain_is_public_suffix",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "../libsoup/soup-tld.c",
                        "@line": "66",
                        "#text": "Looks whether the @domain passed as argument is a public domain\nsuffix (.org, .com, .co.uk, etc) or not.\n\nPrior to libsoup 2.46, this function required that @domain be in\nUTF-8 if it was an IDN. From 2.46 on, the name can be in either\nUTF-8 or ASCII format."
                    },
                    "source-position": {
                        "@filename": "../libsoup/soup-tld.h",
                        "@line": "17"
                    },
                    "return-value": {
                        "@transfer-ownership": "none",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "../libsoup/soup-tld.c",
                            "@line": "77",
                            "#text": "%TRUE if it is a public domain, %FALSE otherwise."
                        },
                        "type": {
                            "@name": "gboolean",
                            "@c:type": "gboolean"
                        }
                    },
                    "parameters": {
                        "parameter": {
                            "@name": "domain",
                            "@transfer-ownership": "none",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../libsoup/soup-tld.c",
                                "@line": "68",
                                "#text": "a domain name"
                            },
                            "type": {
                                "@name": "utf8",
                                "@c:type": "const char*"
                            }
                        }
                    }
                },
                {
                    "@name": "tld_error_quark",
                    "@c:identifier": "soup_tld_error_quark",
                    "@moved-to": "TLDError.quark",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "../libsoup/soup-tld.h",
                        "@line": "20",
                        "#text": "Registers error quark for soup_tld_get_base_domain() if needed."
                    },
                    "return-value": {
                        "@transfer-ownership": "none",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "../libsoup/soup-tld.h",
                            "@line": "24",
                            "#text": "Error quark for Soup TLD functions."
                        },
                        "type": {
                            "@name": "GLib.Quark",
                            "@c:type": "GQuark"
                        }
                    }
                },
                {
                    "@name": "tld_get_base_domain",
                    "@c:identifier": "soup_tld_get_base_domain",
                    "@throws": "1",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "../libsoup/soup-tld.c",
                        "@line": "23",
                        "#text": "Finds the base domain for a given @hostname\n\nThe base domain is composed by the top level domain (such as .org, .com,\n.co.uk, etc) plus the second level domain, for example for\nmyhost.mydomain.com it will return mydomain.com.\n\nNote that %NULL will be returned for private URLs (those not ending\nwith any well known TLD) because choosing a base domain for them\nwould be totally arbitrary.\n\nPrior to libsoup 2.46, this function required that @hostname be in\nUTF-8 if it was an IDN. From 2.46 on, the name can be in either\nUTF-8 or ASCII format (and the return value will be in the same\nformat)."
                    },
                    "source-position": {
                        "@filename": "../libsoup/soup-tld.h",
                        "@line": "13"
                    },
                    "return-value": {
                        "@transfer-ownership": "none",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "../libsoup/soup-tld.c",
                            "@line": "44",
                            "#text": "a pointer to the start of the base domain in @hostname. If\n  an error occurs, %NULL will be returned and @error set."
                        },
                        "type": {
                            "@name": "utf8",
                            "@c:type": "const char*"
                        }
                    },
                    "parameters": {
                        "parameter": {
                            "@name": "hostname",
                            "@transfer-ownership": "none",
                            "doc": {
                                "@xml:space": "preserve",
                                "@filename": "../libsoup/soup-tld.c",
                                "@line": "25",
                                "#text": "a hostname"
                            },
                            "type": {
                                "@name": "utf8",
                                "@c:type": "const char*"
                            }
                        }
                    }
                },
                {
                    "@name": "uri_copy",
                    "@c:identifier": "soup_uri_copy",
                    "@introspectable": "0",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "../libsoup/soup-uri-utils.c",
                        "@line": "366",
                        "#text": "Return a copy of @uri with the given components updated."
                    },
                    "source-position": {
                        "@filename": "../libsoup/soup-uri-utils.h",
                        "@line": "36"
                    },
                    "return-value": {
                        "@transfer-ownership": "full",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "../libsoup/soup-uri-utils.c",
                            "@line": "375",
                            "#text": "a new #GUri"
                        },
                        "type": {
                            "@name": "GLib.Uri",
                            "@c:type": "GUri*"
                        }
                    },
                    "parameters": {
                        "parameter": [
                            {
                                "@name": "uri",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "../libsoup/soup-uri-utils.c",
                                    "@line": "368",
                                    "#text": "the #GUri to copy"
                                },
                                "type": {
                                    "@name": "GLib.Uri",
                                    "@c:type": "GUri*"
                                }
                            },
                            {
                                "@name": "first_component",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "../libsoup/soup-uri-utils.c",
                                    "@line": "369",
                                    "#text": "first #SoupURIComponent to update"
                                },
                                "type": {
                                    "@name": "URIComponent",
                                    "@c:type": "SoupURIComponent"
                                }
                            },
                            {
                                "@name": "...",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "../libsoup/soup-uri-utils.c",
                                    "@line": "370",
                                    "#text": "value of @first_component  followed by additional\n   components and values, terminated by %SOUP_URI_NONE"
                                },
                                "varargs": null
                            }
                        ]
                    }
                },
                {
                    "@name": "uri_decode_data_uri",
                    "@c:identifier": "soup_uri_decode_data_uri",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "../libsoup/soup-uri-utils.c",
                        "@line": "270",
                        "#text": "Decodes the given data URI and returns its contents and @content_type."
                    },
                    "source-position": {
                        "@filename": "../libsoup/soup-uri-utils.h",
                        "@line": "28"
                    },
                    "return-value": {
                        "@transfer-ownership": "full",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "../libsoup/soup-uri-utils.c",
                            "@line": "277",
                            "#text": "a #GBytes with the contents of @uri,\n   or %NULL if @uri is not a valid data URI"
                        },
                        "type": {
                            "@name": "GLib.Bytes",
                            "@c:type": "GBytes*"
                        }
                    },
                    "parameters": {
                        "parameter": [
                            {
                                "@name": "uri",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "../libsoup/soup-uri-utils.c",
                                    "@line": "272",
                                    "#text": "a data URI, in string form"
                                },
                                "type": {
                                    "@name": "utf8",
                                    "@c:type": "const char*"
                                }
                            },
                            {
                                "@name": "content_type",
                                "@direction": "out",
                                "@caller-allocates": "0",
                                "@transfer-ownership": "full",
                                "@nullable": "1",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "../libsoup/soup-uri-utils.c",
                                    "@line": "273",
                                    "#text": "location to store content type"
                                },
                                "type": {
                                    "@name": "utf8",
                                    "@c:type": "char**"
                                }
                            }
                        ]
                    }
                },
                {
                    "@name": "uri_equal",
                    "@c:identifier": "soup_uri_equal",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "../libsoup/soup-uri-utils.c",
                        "@line": "88",
                        "#text": "Tests whether or not @uri1 and @uri2 are equal in all parts."
                    },
                    "source-position": {
                        "@filename": "../libsoup/soup-uri-utils.h",
                        "@line": "32"
                    },
                    "return-value": {
                        "@transfer-ownership": "none",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "../libsoup/soup-uri-utils.c",
                            "@line": "95",
                            "#text": "%TRUE if equal otherwise %FALSE"
                        },
                        "type": {
                            "@name": "gboolean",
                            "@c:type": "gboolean"
                        }
                    },
                    "parameters": {
                        "parameter": [
                            {
                                "@name": "uri1",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "../libsoup/soup-uri-utils.c",
                                    "@line": "90",
                                    "#text": "a #GUri"
                                },
                                "type": {
                                    "@name": "GLib.Uri",
                                    "@c:type": "GUri*"
                                }
                            },
                            {
                                "@name": "uri2",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "../libsoup/soup-uri-utils.c",
                                    "@line": "91",
                                    "#text": "another #GUri"
                                },
                                "type": {
                                    "@name": "GLib.Uri",
                                    "@c:type": "GUri*"
                                }
                            }
                        ]
                    }
                },
                {
                    "@name": "websocket_client_prepare_handshake",
                    "@c:identifier": "soup_websocket_client_prepare_handshake",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "../libsoup/websocket/soup-websocket.c",
                        "@line": "230",
                        "#text": "Adds the necessary headers to @msg to request a WebSocket\nhandshake including supported WebSocket extensions.\n\nThe message body and non-WebSocket-related headers are\nnot modified.\n\nThis is a low-level function; if you use\n[method@Session.websocket_connect_async] to create a WebSocket connection, it\nwill call this for you."
                    },
                    "source-position": {
                        "@filename": "../libsoup/websocket/soup-websocket.h",
                        "@line": "77"
                    },
                    "return-value": {
                        "@transfer-ownership": "none",
                        "type": {
                            "@name": "none",
                            "@c:type": "void"
                        }
                    },
                    "parameters": {
                        "parameter": [
                            {
                                "@name": "msg",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "../libsoup/websocket/soup-websocket.c",
                                    "@line": "232",
                                    "#text": "a #SoupMessage"
                                },
                                "type": {
                                    "@name": "Message",
                                    "@c:type": "SoupMessage*"
                                }
                            },
                            {
                                "@name": "origin",
                                "@transfer-ownership": "none",
                                "@nullable": "1",
                                "@allow-none": "1",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "../libsoup/websocket/soup-websocket.c",
                                    "@line": "233",
                                    "#text": "the \"Origin\" header to set"
                                },
                                "type": {
                                    "@name": "utf8",
                                    "@c:type": "const char*"
                                }
                            },
                            {
                                "@name": "protocols",
                                "@transfer-ownership": "none",
                                "@nullable": "1",
                                "@allow-none": "1",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "../libsoup/websocket/soup-websocket.c",
                                    "@line": "234",
                                    "#text": "list of\n  protocols to offer"
                                },
                                "array": {
                                    "@c:type": "char**",
                                    "type": {
                                        "@name": "utf8",
                                        "@c:type": "char*"
                                    }
                                }
                            },
                            {
                                "@name": "supported_extensions",
                                "@transfer-ownership": "none",
                                "@nullable": "1",
                                "@allow-none": "1",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "../libsoup/websocket/soup-websocket.c",
                                    "@line": "236",
                                    "#text": "list\n  of supported extension types"
                                },
                                "array": {
                                    "@name": "GLib.PtrArray",
                                    "@c:type": "GPtrArray*",
                                    "type": {
                                        "@name": "GObject.TypeClass"
                                    }
                                }
                            }
                        ]
                    }
                },
                {
                    "@name": "websocket_client_verify_handshake",
                    "@c:identifier": "soup_websocket_client_verify_handshake",
                    "@throws": "1",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "../libsoup/websocket/soup-websocket.c",
                        "@line": "777",
                        "#text": "Looks at the response status code and headers in @msg and\ndetermines if they contain a valid WebSocket handshake response\n(given the handshake request in @msg's request headers).\n\nIf @supported_extensions is non-%NULL, extensions included in the\nresponse \"Sec-WebSocket-Extensions\" are verified too. Accepted\nextensions are returned in @accepted_extensions parameter if non-%NULL.\n\nThis is a low-level function; if you use\n[method@Session.websocket_connect_async] to create a WebSocket\nconnection, it will call this for you."
                    },
                    "source-position": {
                        "@filename": "../libsoup/websocket/soup-websocket.h",
                        "@line": "83"
                    },
                    "return-value": {
                        "@transfer-ownership": "none",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "../libsoup/websocket/soup-websocket.c",
                            "@line": "799",
                            "#text": "%TRUE if @msg contains a completed valid WebSocket\n  handshake, %FALSE and an error if not."
                        },
                        "type": {
                            "@name": "gboolean",
                            "@c:type": "gboolean"
                        }
                    },
                    "parameters": {
                        "parameter": [
                            {
                                "@name": "msg",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "../libsoup/websocket/soup-websocket.c",
                                    "@line": "779",
                                    "#text": "#SoupMessage containing both client and server sides of a\n  WebSocket handshake"
                                },
                                "type": {
                                    "@name": "Message",
                                    "@c:type": "SoupMessage*"
                                }
                            },
                            {
                                "@name": "supported_extensions",
                                "@transfer-ownership": "none",
                                "@nullable": "1",
                                "@allow-none": "1",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "../libsoup/websocket/soup-websocket.c",
                                    "@line": "781",
                                    "#text": "list\n  of supported extension types"
                                },
                                "array": {
                                    "@name": "GLib.PtrArray",
                                    "@c:type": "GPtrArray*",
                                    "type": {
                                        "@name": "GObject.TypeClass"
                                    }
                                }
                            },
                            {
                                "@name": "accepted_extensions",
                                "@direction": "out",
                                "@caller-allocates": "0",
                                "@transfer-ownership": "full",
                                "@optional": "1",
                                "@allow-none": "1",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "../libsoup/websocket/soup-websocket.c",
                                    "@line": "783",
                                    "#text": "a\n  #GList of #SoupWebsocketExtension objects"
                                },
                                "type": {
                                    "@name": "GLib.List",
                                    "@c:type": "GList**",
                                    "type": {
                                        "@name": "WebsocketExtension"
                                    }
                                }
                            }
                        ]
                    }
                },
                {
                    "@name": "websocket_error_quark",
                    "@c:identifier": "soup_websocket_error_quark",
                    "@moved-to": "WebsocketError.quark",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "../libsoup/websocket/soup-websocket.h",
                        "@line": "27",
                        "#text": "Registers error quark for SoupWebsocket if needed."
                    },
                    "return-value": {
                        "@transfer-ownership": "none",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "../libsoup/websocket/soup-websocket.h",
                            "@line": "31",
                            "#text": "Error quark for SoupWebsocket."
                        },
                        "type": {
                            "@name": "GLib.Quark",
                            "@c:type": "GQuark"
                        }
                    }
                },
                {
                    "@name": "websocket_server_check_handshake",
                    "@c:identifier": "soup_websocket_server_check_handshake",
                    "@throws": "1",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "../libsoup/websocket/soup-websocket.c",
                        "@line": "519",
                        "#text": "Examines the method and request headers in @msg and determines\nwhether @msg contains a valid handshake request.\n\nIf @origin is non-%NULL, then only requests containing a matching\n\"Origin\" header will be accepted. If @protocols is non-%NULL, then\nonly requests containing a compatible \"Sec-WebSocket-Protocols\"\nheader will be accepted. If @supported_extensions is non-%NULL, then\nonly requests containing valid supported extensions in\n\"Sec-WebSocket-Extensions\" header will be accepted.\n\nNormally [func@websocket_server_process_handshake]\nwill take care of this for you, and if you use\n[method@Server.add_websocket_handler] to handle accepting WebSocket\nconnections, it will call that for you. However, this function may\nbe useful if you need to perform more complicated validation; eg,\naccepting multiple different Origins, or handling different protocols\ndepending on the path."
                    },
                    "source-position": {
                        "@filename": "../libsoup/websocket/soup-websocket.h",
                        "@line": "89"
                    },
                    "return-value": {
                        "@transfer-ownership": "none",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "../libsoup/websocket/soup-websocket.c",
                            "@line": "547",
                            "#text": "%TRUE if @msg contained a valid WebSocket handshake,\n  %FALSE and an error if not."
                        },
                        "type": {
                            "@name": "gboolean",
                            "@c:type": "gboolean"
                        }
                    },
                    "parameters": {
                        "parameter": [
                            {
                                "@name": "msg",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "../libsoup/websocket/soup-websocket.c",
                                    "@line": "521",
                                    "#text": "#SoupServerMessage containing the client side of a WebSocket handshake"
                                },
                                "type": {
                                    "@name": "ServerMessage",
                                    "@c:type": "SoupServerMessage*"
                                }
                            },
                            {
                                "@name": "origin",
                                "@transfer-ownership": "none",
                                "@nullable": "1",
                                "@allow-none": "1",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "../libsoup/websocket/soup-websocket.c",
                                    "@line": "522",
                                    "#text": "expected Origin header"
                                },
                                "type": {
                                    "@name": "utf8",
                                    "@c:type": "const char*"
                                }
                            },
                            {
                                "@name": "protocols",
                                "@transfer-ownership": "none",
                                "@nullable": "1",
                                "@allow-none": "1",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "../libsoup/websocket/soup-websocket.c",
                                    "@line": "523",
                                    "#text": "allowed WebSocket\n  protocols."
                                },
                                "array": {
                                    "@c:type": "char**",
                                    "type": {
                                        "@name": "utf8",
                                        "@c:type": "char*"
                                    }
                                }
                            },
                            {
                                "@name": "supported_extensions",
                                "@transfer-ownership": "none",
                                "@nullable": "1",
                                "@allow-none": "1",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "../libsoup/websocket/soup-websocket.c",
                                    "@line": "525",
                                    "#text": "list\n  of supported extension types"
                                },
                                "array": {
                                    "@name": "GLib.PtrArray",
                                    "@c:type": "GPtrArray*",
                                    "type": {
                                        "@name": "GObject.TypeClass"
                                    }
                                }
                            }
                        ]
                    }
                },
                {
                    "@name": "websocket_server_process_handshake",
                    "@c:identifier": "soup_websocket_server_process_handshake",
                    "doc": {
                        "@xml:space": "preserve",
                        "@filename": "../libsoup/websocket/soup-websocket.c",
                        "@line": "657",
                        "#text": "Examines the method and request headers in @msg and (assuming @msg\ncontains a valid handshake request), fills in the handshake\nresponse.\n\nIf @expected_origin is non-%NULL, then only requests containing a matching\n\"Origin\" header will be accepted. If @protocols is non-%NULL, then\nonly requests containing a compatible \"Sec-WebSocket-Protocols\"\nheader will be accepted. If @supported_extensions is non-%NULL, then\nonly requests containing valid supported extensions in\n\"Sec-WebSocket-Extensions\" header will be accepted. The accepted extensions\nwill be returned in @accepted_extensions parameter if non-%NULL.\n\nThis is a low-level function; if you use\n[method@Server.add_websocket_handler] to handle accepting WebSocket\nconnections, it will call this for you."
                    },
                    "source-position": {
                        "@filename": "../libsoup/websocket/soup-websocket.h",
                        "@line": "96"
                    },
                    "return-value": {
                        "@transfer-ownership": "none",
                        "doc": {
                            "@xml:space": "preserve",
                            "@filename": "../libsoup/websocket/soup-websocket.c",
                            "@line": "684",
                            "#text": "%TRUE if @msg contained a valid WebSocket handshake\n  request and was updated to contain a handshake response. %FALSE if not."
                        },
                        "type": {
                            "@name": "gboolean",
                            "@c:type": "gboolean"
                        }
                    },
                    "parameters": {
                        "parameter": [
                            {
                                "@name": "msg",
                                "@transfer-ownership": "none",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "../libsoup/websocket/soup-websocket.c",
                                    "@line": "659",
                                    "#text": "#SoupServerMessage containing the client side of a WebSocket handshake"
                                },
                                "type": {
                                    "@name": "ServerMessage",
                                    "@c:type": "SoupServerMessage*"
                                }
                            },
                            {
                                "@name": "expected_origin",
                                "@transfer-ownership": "none",
                                "@nullable": "1",
                                "@allow-none": "1",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "../libsoup/websocket/soup-websocket.c",
                                    "@line": "660",
                                    "#text": "expected Origin header"
                                },
                                "type": {
                                    "@name": "utf8",
                                    "@c:type": "const char*"
                                }
                            },
                            {
                                "@name": "protocols",
                                "@transfer-ownership": "none",
                                "@nullable": "1",
                                "@allow-none": "1",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "../libsoup/websocket/soup-websocket.c",
                                    "@line": "661",
                                    "#text": "allowed WebSocket\n  protocols."
                                },
                                "array": {
                                    "@c:type": "char**",
                                    "type": {
                                        "@name": "utf8",
                                        "@c:type": "char*"
                                    }
                                }
                            },
                            {
                                "@name": "supported_extensions",
                                "@transfer-ownership": "none",
                                "@nullable": "1",
                                "@allow-none": "1",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "../libsoup/websocket/soup-websocket.c",
                                    "@line": "663",
                                    "#text": "list\n  of supported extension types"
                                },
                                "array": {
                                    "@name": "GLib.PtrArray",
                                    "@c:type": "GPtrArray*",
                                    "type": {
                                        "@name": "GObject.TypeClass"
                                    }
                                }
                            },
                            {
                                "@name": "accepted_extensions",
                                "@direction": "out",
                                "@caller-allocates": "0",
                                "@transfer-ownership": "full",
                                "@optional": "1",
                                "@allow-none": "1",
                                "doc": {
                                    "@xml:space": "preserve",
                                    "@filename": "../libsoup/websocket/soup-websocket.c",
                                    "@line": "665",
                                    "#text": "a\n  #GList of #SoupWebsocketExtension objects"
                                },
                                "type": {
                                    "@name": "GLib.List",
                                    "@c:type": "GList**",
                                    "type": {
                                        "@name": "WebsocketExtension"
                                    }
                                }
                            }
                        ]
                    }
                }
            ],
            "docsection": {
                "@name": "soup-method",
                "doc": {
                    "@xml:space": "preserve",
                    "@filename": "../libsoup/soup-method.h",
                    "@line": "12",
                    "#text": "soup-method.h contains a number of defines for standard HTTP and\nWebDAV headers. You do not need to use these defines; you can pass\narbitrary strings to soup_message_new() if you prefer.\n\nThe thing that these defines <emphasis>are</emphasis> useful for is\nperforming quick comparisons against soup_message_get_method();\nbecause #SoupMessage always contains an interned string, and these\nmacros return interned strings, you can compare methods directly\nagainst these macros rather than needing to use strcmp(). This is\nmost useful in #SoupServer handlers. Eg:\n\n<informalexample><programlisting>\n\tif (soup_message_get_method (msg) != SOUP_METHOD_GET &amp;&amp; soup_message_get_method (msg) != SOUP_METHOD_HEAD) {\n\t\tsoup_message_set_status (msg, SOUP_METHOD_NOT_IMPLEMENTED);\n\t\treturn;\n\t}\n</programlisting></informalexample>"
                }
            }
        }
    }
}